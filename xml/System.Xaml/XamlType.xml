<Type Name="XamlType" FullName="System.Xaml.XamlType">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cfd91f69d569a06e754734f5e72c44b4d3283e86" /><Meta Name="ms.sourcegitcommit" Value="c573d537afba2d4c1463538f1095f2f155025464" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="10/16/2019" /><Meta Name="ms.locfileid" Value="72397149" /></Metadata><TypeSignature Language="C#" Value="public class XamlType : IEquatable&lt;System.Xaml.XamlType&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlType extends System.Object implements class System.IEquatable`1&lt;class System.Xaml.XamlType&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlType" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlType&#xA;Implements IEquatable(Of XamlType)" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlType : IEquatable&lt;System::Xaml::XamlType ^&gt;" />
  <TypeSignature Language="F#" Value="type XamlType = class&#xA;    interface IEquatable&lt;XamlType&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Xaml.XamlType&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="f4c49-101">Meldet Informationen zu XAML-Typen als Teil des gesamten XAML-Systems, das in .NET Framework-XAML-Diensten implementiert wird.</span><span class="sxs-lookup"><span data-stu-id="f4c49-101">Reports information about XAML types as part of the overall XAML system that is implemented in .NET Framework XAML Services.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-102">Viele APIs in der <xref:System.Xaml.XamlType>-Klasse stellen Informationen zu XAML-Typen bereit, bei denen das Konzept, das Sie melden, mit bestimmten Abschnitten der XAML-Spezifikation [MS-XAML] vergleichbar ist.</span><span class="sxs-lookup"><span data-stu-id="f4c49-102">Many APIs in the <xref:System.Xaml.XamlType> class provide information about XAML types, where the concept they report on is similar to particular sections of the XAML specification [MS-XAML].</span></span>  
  
 <span data-ttu-id="f4c49-103"><xref:System.Xaml.XamlType> wird in der .NET Framework XAML Services-API ausführlich zum Melden von Informationen über einen XAML-Typ verwendet.</span><span class="sxs-lookup"><span data-stu-id="f4c49-103"><xref:System.Xaml.XamlType> is used extensively in the .NET Framework XAML Services API for reporting information about a XAML type.</span></span> <span data-ttu-id="f4c49-104"><xref:System.Xaml.XamlType> meldet die Informationen, die Sie möglicherweise über einen XAML-Typ wissen müssen, um mit einer-Instanz zu arbeiten oder um von einem XAML-knotenstream aus auf seine Member zuzugreifen, oder eine ähnliche XAML-Darstellung.</span><span class="sxs-lookup"><span data-stu-id="f4c49-104"><xref:System.Xaml.XamlType> reports the information that you might need to know about a XAML type in order to work with an instance or to access its members from a XAML node stream, or a similar XAML representation.</span></span> <span data-ttu-id="f4c49-105">Die Berichterstellung ähnelt der Art und Weise, wie die <xref:System.Type> im CLR-Typsystem zusammen mit Reflektionsklassen wie <xref:System.Reflection.MemberInfo> Informationen zu einem CLR-Typ und seiner Verwendung bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="f4c49-105">Its reporting is similar to how the <xref:System.Type> in the CLR type system, together with reflection classes such as <xref:System.Reflection.MemberInfo>, provide information about a CLR type and its usage.</span></span>  
  
 <span data-ttu-id="f4c49-106">Um das XAML-Typsystem zu erweitern, können Sie von <xref:System.Xaml.XamlType> ableiten.</span><span class="sxs-lookup"><span data-stu-id="f4c49-106">To extend the XAML type system, you can derive from <xref:System.Xaml.XamlType>.</span></span> <span data-ttu-id="f4c49-107">Um dies effektiv zu tun, müssen Sie möglicherweise auch eine <xref:System.Xaml.Schema.XamlTypeInvoker> implementieren.</span><span class="sxs-lookup"><span data-stu-id="f4c49-107">To do so effectively, you might also need to implement a <xref:System.Xaml.Schema.XamlTypeInvoker>.</span></span> <span data-ttu-id="f4c49-108">Mit dem <xref:System.Xaml.Schema.XamlTypeInvoker> kann das generalisierte XAML-Typsystem mit der typsystemunterstützung arbeiten, die Sie als Teil des Aufruf Verhaltens angeben.</span><span class="sxs-lookup"><span data-stu-id="f4c49-108">The <xref:System.Xaml.Schema.XamlTypeInvoker> enables the generalized XAML type system to work with the type system backing that you specify as part of the invocation behavior.</span></span> <span data-ttu-id="f4c49-109">Der spezifische benutzerdefinierte <xref:System.Xaml.Schema.XamlTypeInvoker> bietet eine Möglichkeit, die Abhängigkeiten auf dem CLR-Typsystem zu reduzieren, die vom Standardverhalten von <xref:System.Xaml.XamlType> verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-109">The specific custom <xref:System.Xaml.Schema.XamlTypeInvoker> provides a way to reduce the dependencies on the CLR type system, which are used by the default <xref:System.Xaml.XamlType> behavior.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f4c49-110">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlType" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="f4c49-110">Initializes a new instance of the <see cref="T:System.Xaml.XamlType" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlType (Type underlyingType, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type underlyingType, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (underlyingType As Type, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlType(Type ^ underlyingType, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlType : Type * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlType" Usage="new System.Xaml.XamlType (underlyingType, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="underlyingType" Type="System.Type" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="underlyingType"><span data-ttu-id="f4c49-111">Das zugrunde liegende <see cref="T:System.Type" />-Objekt der CLR für den zu erstellenden XAML-Typ.</span><span class="sxs-lookup"><span data-stu-id="f4c49-111">The underlying CLR <see cref="T:System.Type" /> for the XAML type to construct.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="f4c49-112">XAML-Schemakontext für XAML-Reader oder XAML-Writer.</span><span class="sxs-lookup"><span data-stu-id="f4c49-112">XAML schema context for XAML readers or XAML writers.</span></span></param>
        <summary><span data-ttu-id="f4c49-113">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlType" />-Klasse auf Grundlage der zugrunde liegenden CLR-Typinformationen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-113">Initializes a new instance of the <see cref="T:System.Xaml.XamlType" /> class based on the underlying CLR type information.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f4c49-114">Ein oder mehrere <paramref name="underlyingType" /> oder <paramref name="schemaContext" /> sind <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-114">One or more of <paramref name="underlyingType" /> or <paramref name="schemaContext" /> are <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlType (string typeName, System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; typeArguments, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string typeName, class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; typeArguments, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (typeName As String, typeArguments As IList(Of XamlType), schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlType(System::String ^ typeName, System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ typeArguments, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlType : string * System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlType" Usage="new System.Xaml.XamlType (typeName, typeArguments, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="typeArguments" Type="System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="f4c49-115">Der Name des zu erstellenden Typs.</span><span class="sxs-lookup"><span data-stu-id="f4c49-115">The name of the type to create.</span></span></param>
        <param name="typeArguments"><span data-ttu-id="f4c49-116">Die Typargumente für einen <see cref="T:System.Xaml.XamlType" />, der einen generischen Typ darstellt.</span><span class="sxs-lookup"><span data-stu-id="f4c49-116">The type arguments for a <see cref="T:System.Xaml.XamlType" /> that represents a generic type.</span></span> <span data-ttu-id="f4c49-117">Kann <see langword="null" /> sein (dies ist häufig der Fall). Damit wird angegeben, dass der dargestellte Typ kein generischer Typ ist.</span><span class="sxs-lookup"><span data-stu-id="f4c49-117">Can be (and often is) <see langword="null" />, which indicates that the represented type is not a generic type.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="f4c49-118">XAML-Schemakontext für XAML-Reader und XAML-Writer.</span><span class="sxs-lookup"><span data-stu-id="f4c49-118">XAML schema context for XAML readers and XAML writers.</span></span></param>
        <summary><span data-ttu-id="f4c49-119">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlType" />-Klasse auf Grundlage eines Zeichenfolgennamens für den Typ.</span><span class="sxs-lookup"><span data-stu-id="f4c49-119">Initializes a new instance of the <see cref="T:System.Xaml.XamlType" /> class based on a string name for the type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-120">Dies ist ein geschützter Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="f4c49-120">This is a protected constructor.</span></span> <span data-ttu-id="f4c49-121">Es sind keine aktuellen öffentlichen abgeleiteten Klassen vorhanden, die diesen speziellen Pfad zur Erstellung verwenden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-121">No current public derived classes exist that use this particular path for construction.</span></span> <span data-ttu-id="f4c49-122">Als Consumer der vorhandenen <xref:System.Xaml.XamlType> müssen Sie die anderen Konstruktorsignaturen (<xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%2CSystem.Xaml.Schema.XamlTypeInvoker%29>, <xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%29> oder <xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29>) verwenden, um ein <xref:System.Xaml.XamlType>-Objekt zu initialisieren.</span><span class="sxs-lookup"><span data-stu-id="f4c49-122">As a consumer of the existing <xref:System.Xaml.XamlType>, you must use the other constructor signatures (<xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%2CSystem.Xaml.Schema.XamlTypeInvoker%29>, <xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%29>, or <xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29>) to initialize a <xref:System.Xaml.XamlType> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f4c49-123">Ein oder mehrere <paramref name="typeName" /> oder <paramref name="schemaContext" /> sind <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-123">One or more of <paramref name="typeName" /> or <paramref name="schemaContext" /> are <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlType (Type underlyingType, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlTypeInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type underlyingType, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlTypeInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (underlyingType As Type, schemaContext As XamlSchemaContext, invoker As XamlTypeInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlType(Type ^ underlyingType, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlTypeInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlType : Type * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlTypeInvoker -&gt; System.Xaml.XamlType" Usage="new System.Xaml.XamlType (underlyingType, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="underlyingType" Type="System.Type" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlTypeInvoker" />
      </Parameters>
      <Docs>
        <param name="underlyingType"><span data-ttu-id="f4c49-124">Der zugrunde liegende Typ für den zu erstellenden XAML-Typ.</span><span class="sxs-lookup"><span data-stu-id="f4c49-124">The underlying type for the XAML type to construct.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="f4c49-125">Der XML-Schemakontext für den XAML-Reader.</span><span class="sxs-lookup"><span data-stu-id="f4c49-125">XAML schema context for the XAML reader.</span></span></param>
        <param name="invoker"><span data-ttu-id="f4c49-126">Die <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />-Implementierung, die die Reflektionslaufzeitaufrufe der <see cref="T:System.Xaml.XamlType" />-Klasse verarbeitet.</span><span class="sxs-lookup"><span data-stu-id="f4c49-126">The <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> implementation that handles run-time reflection calls against the <see cref="T:System.Xaml.XamlType" />.</span></span></param>
        <summary><span data-ttu-id="f4c49-127">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlType" />-Klasse auf Grundlage der zugrunde liegenden Typinformationen und einer <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="f4c49-127">Initializes a new instance of the <see cref="T:System.Xaml.XamlType" /> class based on underlying type information and a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> implementation.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f4c49-128">Ein oder mehrere <paramref name="underlyingType" /> oder <paramref name="schemaContext" /> sind <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-128">One or more of <paramref name="underlyingType" /> or <paramref name="schemaContext" /> are <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlType (string unknownTypeNamespace, string unknownTypeName, System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; typeArguments, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string unknownTypeNamespace, string unknownTypeName, class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; typeArguments, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (unknownTypeNamespace As String, unknownTypeName As String, typeArguments As IList(Of XamlType), schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlType(System::String ^ unknownTypeNamespace, System::String ^ unknownTypeName, System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ typeArguments, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlType : string * string * System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlType" Usage="new System.Xaml.XamlType (unknownTypeNamespace, unknownTypeName, typeArguments, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="unknownTypeNamespace" Type="System.String" />
        <Parameter Name="unknownTypeName" Type="System.String" />
        <Parameter Name="typeArguments" Type="System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="unknownTypeNamespace"><span data-ttu-id="f4c49-129">Der XAML-Namespace für den Typ (als Zeichenfolge).</span><span class="sxs-lookup"><span data-stu-id="f4c49-129">The XAML namespace for the type, as a string.</span></span></param>
        <param name="unknownTypeName"><span data-ttu-id="f4c49-130">Der Name des Typs im angegebenen <paramref name="unknownTypeNamespace" />-XAML-Namespace.</span><span class="sxs-lookup"><span data-stu-id="f4c49-130">The name of the type in the provided <paramref name="unknownTypeNamespace" /> XAML namespace.</span></span></param>
        <param name="typeArguments"><span data-ttu-id="f4c49-131">Die Typargumente für einen <see cref="T:System.Xaml.XamlType" />, der einen generischen Typ darstellt.</span><span class="sxs-lookup"><span data-stu-id="f4c49-131">The type arguments for a <see cref="T:System.Xaml.XamlType" /> that represents a generic type.</span></span> <span data-ttu-id="f4c49-132">Kann <see langword="null" /> sein (dies ist häufig der Fall). Damit wird angegeben, dass der dargestellte Typ kein generischer Typ ist.</span><span class="sxs-lookup"><span data-stu-id="f4c49-132">Can be (and often is) <see langword="null" />, which indicates that the represented type is not a generic type.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="f4c49-133">XAML-Schemakontext für XAML-Reader oder XAML-Writer.</span><span class="sxs-lookup"><span data-stu-id="f4c49-133">XAML schema context for XAML readers or XAML writers.</span></span></param>
        <summary><span data-ttu-id="f4c49-134">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlType" />-Klasse auf Grundlage des XAML-Namespaces und eines Zeichenfolgennamens für den Typ.</span><span class="sxs-lookup"><span data-stu-id="f4c49-134">Initializes a new instance of the <see cref="T:System.Xaml.XamlType" /> class based on the XAML namespace and a string name for the type.</span></span> <span data-ttu-id="f4c49-135">Dieser Konstruktor dient ausschließlich der Analyse und der XAML-Knoten-Aufzeichnung von Typverwendungen, von denen bekannt ist, dass sie keine Unterstützung im unterstützenden Typsystem und XAML-Schemakontext besitzen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-135">This constructor is exclusively for analysis and XAML-node recording of type usages that are known to not have backing in the supporting type system and XAML schema context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-136">Verwenden Sie diesen Konstruktor nur für "unbekannte" Typen, bei denen ein XAML-Typ, der einem zugrunde liegenden Typsystem zugeordnet ist, nicht verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="f4c49-136">Use this constructor only for "unknown" types where a XAML type that maps to an underlying type system is unavailable.</span></span> <span data-ttu-id="f4c49-137">Dieser Konstruktor erzeugt möglicherweise kein Ergebnis, wenn <xref:System.Xaml.XamlType.IsUnknown%2A?displayProperty=nameWithType> `true` ist.</span><span class="sxs-lookup"><span data-stu-id="f4c49-137">This constructor might not produce a result where <xref:System.Xaml.XamlType.IsUnknown%2A?displayProperty=nameWithType> is `true`.</span></span> <span data-ttu-id="f4c49-138">Stattdessen meldet die Standard reflektorlogik den zugrunde liegenden Typ als <xref:System.Xaml.XamlLanguage.Object%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f4c49-138">Instead, the default reflector logic reports the underlying type as <xref:System.Xaml.XamlLanguage.Object%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="f4c49-139">Dieses Verhalten kann sich jedoch aufgrund der <xref:System.Xaml.XamlType.LookupIsUnknown%2A>-außer Kraft Setzung ändern.</span><span class="sxs-lookup"><span data-stu-id="f4c49-139">However, this behavior can change because of the <xref:System.Xaml.XamlType.LookupIsUnknown%2A> override.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f4c49-140">Ein oder mehrere <paramref name="unknownTypeNamespace" />, <paramref name="unknownTypeName" /> oder <paramref name="schemaContext" /> sind <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-140">One or more of <paramref name="unknownTypeNamespace" />, <paramref name="unknownTypeName" />, or <paramref name="schemaContext" /> are <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AllowedContentTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; AllowedContentTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; AllowedContentTypes" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.AllowedContentTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowedContentTypes As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ AllowedContentTypes { System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowedContentTypes : System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="System.Xaml.XamlType.AllowedContentTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f4c49-141">Ruft eine schreibgeschützte Auflistung der Typen ab, die als <see cref="P:System.Xaml.XamlType.ContentProperty" />-Wert für dieses <see cref="T:System.Xaml.XamlType" />-Objekt verwendbar sind.</span><span class="sxs-lookup"><span data-stu-id="f4c49-141">Gets a read-only collection of the types that are usable as the <see cref="P:System.Xaml.XamlType.ContentProperty" /> value for this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <value><span data-ttu-id="f4c49-142">Eine schreibgeschützte Auflistung möglicher Inhaltstypen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-142">A read-only collection of possible content types.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-143">Typen, die einem bestimmten Inhaltstyp zugewiesen werden können (z. b. einem Basistyp, bei dem es sich um einen zulässigen Inhaltstyp handelt), werden nicht als mehrere Typen für <xref:System.Xaml.XamlType.AllowedContentTypes%2A> verwendet.</span><span class="sxs-lookup"><span data-stu-id="f4c49-143">Types that are assignable a specific content type (for example, assignable to a base type that is an allowed content type) are not considered multiple types for purposes of <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.</span></span>  
  
 <span data-ttu-id="f4c49-144">Wenn Sie nicht die standardmäßige interne CLR-reflektionstechnik für eine <xref:System.Xaml.XamlType> verwenden, können Aufrufe dieser Eigenschaft <xref:System.Xaml.XamlType.LookupAllowedContentTypes%2A>-über Schreibungen für von <xref:System.Xaml.XamlType> abgeleitete Klassen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-144">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupAllowedContentTypes%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType BaseType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType BaseType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.BaseType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ BaseType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseType : System.Xaml.XamlType" Usage="System.Xaml.XamlType.BaseType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f4c49-145">Ruft das <see cref="T:System.Xaml.XamlType" />-Objekt für den unmittelbaren Basistyp dieses XAML-Typs ab.</span><span class="sxs-lookup"><span data-stu-id="f4c49-145">Gets the <see cref="T:System.Xaml.XamlType" /> for the immediate base type of this XAML type.</span></span> <span data-ttu-id="f4c49-146">Die Ermittlung dieses Werts basiert auf dem zugrunde liegenden Typ des <see cref="T:System.Xaml.XamlType" />-Objekts und des Schemakontexts.</span><span class="sxs-lookup"><span data-stu-id="f4c49-146">Determination of this value is based on the underlying type of this <see cref="T:System.Xaml.XamlType" /> and schema context.</span></span></summary>
        <value><span data-ttu-id="f4c49-147">Das <see cref="T:System.Xaml.XamlType" />-Objekt für den unmittelbaren Basistyp dieses XAML-Typs.</span><span class="sxs-lookup"><span data-stu-id="f4c49-147">The <see cref="T:System.Xaml.XamlType" /> for the immediate base type of this XAML type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-148">Wenn Sie nicht die standardmäßige interne CLR-reflektionstechnik für eine <xref:System.Xaml.XamlType> verwenden, können Aufrufe dieser Eigenschaft <xref:System.Xaml.XamlType.LookupBaseType%2A>-über Schreibungen für von <xref:System.Xaml.XamlType> abgeleitete Klassen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-148">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupBaseType%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="f4c49-149">Weitere Informationen zu Rückgabe Werten und anderem Verhalten finden Sie in der Dokumentation zu <xref:System.Xaml.XamlType.LookupBaseType%2A> für diesen Typ.</span><span class="sxs-lookup"><span data-stu-id="f4c49-149">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupBaseType%2A> on this type.</span></span> <span data-ttu-id="f4c49-150">Standardmäßig gibt <xref:System.Xaml.XamlType.BaseType%2A> eine interne Konstante zurück, die eine <xref:System.Object> darstellt, wenn <xref:System.Xaml.XamlType.UnderlyingType%2A> `null` ist.</span><span class="sxs-lookup"><span data-stu-id="f4c49-150">By default, <xref:System.Xaml.XamlType.BaseType%2A> returns an internal constant that represents an <xref:System.Object> if <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f4c49-151"><xref:System.Xaml.XamlType.LookupBaseType%2A> ist virtuell und kann daher überschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-151"><xref:System.Xaml.XamlType.LookupBaseType%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="f4c49-152">Die außer Kraft Setzung hat die Möglichkeit, die gemeldeten Typinformationen zu einem XAML-Typ zu ändern, um die gemeldeten Typinformationen zu einem XAML-Typ so zu ändern, dass Sie nicht mehr erwartungsgemäß mit den typsysteminformationen des zugrunde liegenden CLR-Typs ausgerichtet werden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-152">The override has the potential (whether for malicious purposes or otherwise) to change the reported type information about a XAML type so that it no longer aligns in an expected way with the type system information of its underlying CLR type.</span></span> <span data-ttu-id="f4c49-153">Verwenden Sie für sicherheitskritische Überprüfungen von Zuweisungs Vorgängen und Zugriff stattdessen den zugrunde liegenden CLR-Typ.</span><span class="sxs-lookup"><span data-stu-id="f4c49-153">For any security-critical checks of assignment operations and access, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanAssignTo">
      <MemberSignature Language="C#" Value="public virtual bool CanAssignTo (System.Xaml.XamlType xamlType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanAssignTo(class System.Xaml.XamlType xamlType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanAssignTo(System::Xaml::XamlType ^ xamlType);" />
      <MemberSignature Language="F#" Value="abstract member CanAssignTo : System.Xaml.XamlType -&gt; bool&#xA;override this.CanAssignTo : System.Xaml.XamlType -&gt; bool" Usage="xamlType.CanAssignTo xamlType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlType" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType"><span data-ttu-id="f4c49-154">Der Typ, der anhand des aktuellen <see cref="T:System.Xaml.XamlType" /> überprüft werden soll.</span><span class="sxs-lookup"><span data-stu-id="f4c49-154">The type to check against the current <see cref="T:System.Xaml.XamlType" /> .</span></span></param>
        <summary><span data-ttu-id="f4c49-155">Gibt einen Wert zurück, der angibt, ob eine Instanz der <see cref="T:System.Xaml.XamlType" />-Klasse die angegebene <see cref="T:System.Xaml.XamlType" />-Klasse in der Liste zuweisbarer Typen enthält.</span><span class="sxs-lookup"><span data-stu-id="f4c49-155">Returns a value that indicates whether an instance of this <see cref="T:System.Xaml.XamlType" /> has the specified <see cref="T:System.Xaml.XamlType" /> in its list of assignable types.</span></span></summary>
        <returns><span data-ttu-id="f4c49-156"><see langword="true" />, wenn <paramref name="xamlType" /> in der Liste der zuweisbaren Typen enthalten ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-156"><see langword="true" /> if <paramref name="xamlType" /> is in the assignable types list; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-157">Obwohl der zustellbare Typ nicht über alle Funktionen des Verweis Typs verfügt, kann er für die Zuweisung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-157">Although the assignable type does not have all the capabilities of the reference type, you can use it for assignment.</span></span> <span data-ttu-id="f4c49-158">Beispielsweise können Sie mit der-Zuweisung Typübereinstimmungen für die Werte einer-Eigenschaft vornehmen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-158">For example, you can use assignment to make type matches for the values of a property.</span></span> <span data-ttu-id="f4c49-159">Das Konzept der zustellbaren Typen in XAML ähnelt dem Konzept der Umwandlung im CLR-Typsystem.</span><span class="sxs-lookup"><span data-stu-id="f4c49-159">The concept of assignable types in XAML is similar to the concept of casting up in the CLR type system.</span></span> <span data-ttu-id="f4c49-160">Beispielsweise verfügt jeder Typ unter einem CLR-Typsystem über eine <xref:System.Object> in der Liste der zustellbaren Typen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-160">For example, under a CLR type system, every type has an <xref:System.Object> in its assignable type list.</span></span>  
  
 <span data-ttu-id="f4c49-161">Wenn eine der beiden <xref:System.Xaml.XamlType>-Instanzen, die für den Vergleich verwendet werden, <xref:System.Xaml.XamlType.IsUnknown%2A> gleich `true` ist, hat diese Methode einen besonderen unbekannten Modus, der `true` zurückgibt, wenn die beiden <xref:System.Xaml.XamlType>-Instanzen äquivalent sind.</span><span class="sxs-lookup"><span data-stu-id="f4c49-161">If one of the two <xref:System.Xaml.XamlType> instances that are used for comparison has <xref:System.Xaml.XamlType.IsUnknown%2A> equal to `true`, this method has a special Unknown mode that returns `true` if the two <xref:System.Xaml.XamlType> instances are equivalent.</span></span>  
  
 <span data-ttu-id="f4c49-162">Die Standard Implementierung verwendet die CLR-<xref:System.Type> von <xref:System.Xaml.XamlType.UnderlyingType%2A> für diesen <xref:System.Xaml.XamlType> und die Eingabe <xref:System.Xaml.XamlType> und ruft <xref:System.Type.IsAssignableFrom%2A> auf.</span><span class="sxs-lookup"><span data-stu-id="f4c49-162">The default implementation uses the CLR <xref:System.Type> from <xref:System.Xaml.XamlType.UnderlyingType%2A> for this <xref:System.Xaml.XamlType> and the input <xref:System.Xaml.XamlType>, and calls <xref:System.Type.IsAssignableFrom%2A>.</span></span> <span data-ttu-id="f4c49-163">Überschreiben Sie diese Methode, wenn Sie eine andere Bestimmung von zustellbaren Typen wünschen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-163">Override this method if you want a different determination of assignable types.</span></span>  
  
 <span data-ttu-id="f4c49-164">Beim Übergeben eines NULL-`xamlType` wird keine Ausnahme ausgelöst, und es wird immer `false` zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="f4c49-164">Passing a null `xamlType` does not throw an exception and always returns `false`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f4c49-165"><xref:System.Xaml.XamlType.CanAssignTo%2A> ist virtuell und kann daher überschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-165"><xref:System.Xaml.XamlType.CanAssignTo%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="f4c49-166">Die außer Kraft Setzung hat das Potenzial (für böswillige Zwecke oder anderweitig), um die Zustell barkeit eines XAML-Typs so zu ändern, dass er nicht mehr erwartungsgemäß mit dem Typumwandlungs Verhalten seines zugrunde liegenden CLR-Typs ausgerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="f4c49-166">The override has the potential (whether for malicious purposes or otherwise) to change the assignability of a XAML type so that it no longer aligns in an expected way with the type-casting behavior of its underlying CLR type.</span></span> <span data-ttu-id="f4c49-167">Verwenden Sie für sicherheitskritische Überprüfungen von Zuweisungs Vorgängen und Zugriff stattdessen den zugrunde liegenden CLR-Typ.</span><span class="sxs-lookup"><span data-stu-id="f4c49-167">For any security-critical checks of assignment operations and access, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConstructionRequiresArguments">
      <MemberSignature Language="C#" Value="public bool ConstructionRequiresArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConstructionRequiresArguments" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ConstructionRequiresArguments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConstructionRequiresArguments As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConstructionRequiresArguments { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ConstructionRequiresArguments : bool" Usage="System.Xaml.XamlType.ConstructionRequiresArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f4c49-168">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt Argumente (generische Einschränkungen für <see langword="x:TypeArguments" />, Initialisierungstext oder andere XAML-Techniken) aufweisen muss, um eine gültige Instanz des Typs zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-168">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> must have arguments (generic constraints through <see langword="x:TypeArguments" />, initialization text, or other XAML techniques) to construct a valid instance of the type.</span></span></summary>
        <value><span data-ttu-id="f4c49-169"><see langword="true" />, wenn die Erstellung einer Instanz einen Argumentwert erfordert, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-169"><see langword="true" /> if construction of an instance requires some argument value; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-170">Wenn Sie nicht die standardmäßige interne CLR-reflektionstechnik für eine <xref:System.Xaml.XamlType> verwenden, können Aufrufe dieser Eigenschaft <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A>-über Schreibungen für von <xref:System.Xaml.XamlType> abgeleitete Klassen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-170">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="f4c49-171">Weitere Informationen zu Rückgabe Werten und anderem Verhalten finden Sie in der Dokumentation zu <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> für diesen Typ.</span><span class="sxs-lookup"><span data-stu-id="f4c49-171">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentProperty">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember ContentProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlMember ContentProperty" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ContentProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentProperty As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlMember ^ ContentProperty { System::Xaml::XamlMember ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentProperty : System.Xaml.XamlMember" Usage="System.Xaml.XamlType.ContentProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f4c49-172">Ruft die <see cref="T:System.Xaml.XamlMember" />-Informationen für die Inhaltseigenschaft dieses <see cref="T:System.Xaml.XamlType" />-Objekts ab.</span><span class="sxs-lookup"><span data-stu-id="f4c49-172">Gets the <see cref="T:System.Xaml.XamlMember" /> information for the content property of this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <value><span data-ttu-id="f4c49-173"><see cref="T:System.Xaml.XamlMember" />-Informationen für die Inhaltseigenschaft dieses <see cref="T:System.Xaml.XamlType" />-Objekts.</span><span class="sxs-lookup"><span data-stu-id="f4c49-173"><see cref="T:System.Xaml.XamlMember" /> information for the content property of this <see cref="T:System.Xaml.XamlType" />.</span></span> <span data-ttu-id="f4c49-174">Kann <see langword="null" /> sein, wenn keine Inhaltseigenschaft vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="f4c49-174">May be <see langword="null" /> if no content property exists.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-175">Wenn Sie die Bindung oder das unterstützen des CLR-Typsystems verwenden, kann die XAML-Inhalts Eigenschaft für einen Typ angegeben werden, indem <xref:System.Windows.Markup.ContentPropertyAttribute> auf die Typdefinition angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="f4c49-175">When using the binding or backing of the CLR type system, the XAML content property can be specified on a type by applying <xref:System.Windows.Markup.ContentPropertyAttribute> to the type definition.</span></span>  
  
 <span data-ttu-id="f4c49-176">Diese Eigenschaft richtet sich nach dem `[content property]`-Informationselement in der [MS-XAML]-Spezifikation.</span><span class="sxs-lookup"><span data-stu-id="f4c49-176">This property aligns to the `[content property]` information item in the [MS-XAML] specification.</span></span>  
  
 <span data-ttu-id="f4c49-177">Wenn Sie nicht die standardmäßige interne CLR-reflektionstechnik für eine <xref:System.Xaml.XamlType> verwenden, können Aufrufe dieser Eigenschaft <xref:System.Xaml.XamlType.LookupContentProperty%2A>-über Schreibungen für von <xref:System.Xaml.XamlType> abgeleitete Klassen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-177">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupContentProperty%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="f4c49-178">Weitere Informationen zu Rückgabe Werten und anderem Verhalten finden Sie in der Dokumentation zu <xref:System.Xaml.XamlType.LookupContentProperty%2A> für diesen Typ.</span><span class="sxs-lookup"><span data-stu-id="f4c49-178">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupContentProperty%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentWrappers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; ContentWrappers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; ContentWrappers" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ContentWrappers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentWrappers As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ ContentWrappers { System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentWrappers : System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="System.Xaml.XamlType.ContentWrappers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f4c49-179">Ruft die Typen ab, mit denen Inhalt für eine Inhaltseigenschaft umschlossen wird, wenn es sich nicht um eine strenge Typübereinstimmung handelt, z. B. Zeichenfolgen in einer stark typisierten <see langword="Collection&lt;T&gt;" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-179">Gets the types that are used to wrap content for a content property when it is not a strict type match, such as strings in a strongly typed <see langword="Collection&lt;T&gt;" />.</span></span></summary>
        <value><span data-ttu-id="f4c49-180">Eine schreibgeschützte Auflistung möglicher Inhaltswrappertypen, andernfalls <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-180">A read-only collection of possible content wrapper types; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-181">Wenn keine Wrapper vorhanden sind, die das lockern der Typen Übereinstimmung berücksichtigen, ist diese Eigenschaft `null`.</span><span class="sxs-lookup"><span data-stu-id="f4c49-181">If there are no wrappers to account for type match loosening, this property is `null`.</span></span>  
  
 <span data-ttu-id="f4c49-182">Typen, die als <xref:System.Xaml.XamlType.CanAssignTo%2A> für einen bestimmten Inhaltstyp ausgewertet werden, werden für Zwecke von <xref:System.Xaml.XamlType.ContentWrappers%2A> nicht als mehrere Typen betrachtet.</span><span class="sxs-lookup"><span data-stu-id="f4c49-182">Types that evaluate as <xref:System.Xaml.XamlType.CanAssignTo%2A> for a specific content type are not considered multiple types for purposes of <xref:System.Xaml.XamlType.ContentWrappers%2A>.</span></span>  
  
 <span data-ttu-id="f4c49-183">In der CLR-Bindung für <xref:System.Xaml> und <xref:System.Xaml.XamlType> kann der XAML-Inhaltstyp für einen Typ als <xref:System.Windows.Markup.ContentWrapperAttribute> angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-183">In the CLR binding for <xref:System.Xaml> and <xref:System.Xaml.XamlType>, the XAML content wrapper type can be specified on a type as a <xref:System.Windows.Markup.ContentWrapperAttribute>.</span></span>  
  
 <span data-ttu-id="f4c49-184">Wenn Sie nicht die standardmäßige interne CLR-reflektionstechnik für eine <xref:System.Xaml.XamlType> verwenden, können Aufrufe dieser Eigenschaft <xref:System.Xaml.XamlType.LookupContentWrappers%2A>-über Schreibungen für von <xref:System.Xaml.XamlType> abgeleitete Klassen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-184">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupContentWrappers%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="f4c49-185">Weitere Informationen zu Rückgabe Werten und anderem Verhalten finden Sie in der Dokumentation zu <xref:System.Xaml.XamlType.LookupContentWrappers%2A> für diesen Typ.</span><span class="sxs-lookup"><span data-stu-id="f4c49-185">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupContentWrappers%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferringLoader">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; DeferringLoader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; DeferringLoader" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.DeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeferringLoader As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ DeferringLoader { System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeferringLoader : System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;" Usage="System.Xaml.XamlType.DeferringLoader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f4c49-186">Ruft das <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt ab, das für diesen Typ das Konvertierungsverhalten für verzögertes Laden darstellt.</span><span class="sxs-lookup"><span data-stu-id="f4c49-186">Gets the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> that represents the deferred loading conversion behavior for this type.</span></span></summary>
        <value><span data-ttu-id="f4c49-187">Der <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> mit <see cref="T:System.Xaml.XamlDeferringLoader" />-Einschränkung, der für diesen Typ das Verhalten für verzögertes Laden darstellt.</span><span class="sxs-lookup"><span data-stu-id="f4c49-187">The <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Xaml.XamlDeferringLoader" /> constraint that represents the deferred loading behavior for this type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-188">Das XAML-Vorlagen Verhalten in WPF ist ein Beispiel für verzögertes Laden Verhalten.</span><span class="sxs-lookup"><span data-stu-id="f4c49-188">XAML template behavior in WPF is an example of deferred loading behavior.</span></span>  
  
 <span data-ttu-id="f4c49-189">Wenn Sie nicht die standardmäßige interne CLR-reflektionstechnik für eine <xref:System.Xaml.XamlType> verwenden, können Aufrufe dieser Eigenschaft <xref:System.Xaml.XamlType.LookupDeferringLoader%2A>-über Schreibungen für von <xref:System.Xaml.XamlType> abgeleitete Klassen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-189">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupDeferringLoader%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="f4c49-190">Weitere Informationen zu Rückgabe Werten und anderem Verhalten finden Sie in der Dokumentation zu <xref:System.Xaml.XamlType.LookupDeferringLoader%2A> für diesen Typ.</span><span class="sxs-lookup"><span data-stu-id="f4c49-190">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupDeferringLoader%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f4c49-191">Gibt an, ob das aktuelle Objekt einem anderen Objekt entspricht.</span><span class="sxs-lookup"><span data-stu-id="f4c49-191">Indicates whether the current object is equal to another object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="xamlType.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="f4c49-192">Das Objekt, das mit diesem Objekt verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="f4c49-192">The object to compare with this object.</span></span></param>
        <summary><span data-ttu-id="f4c49-193">Gibt an, ob das aktuelle Objekt einem anderen Objekt entspricht.</span><span class="sxs-lookup"><span data-stu-id="f4c49-193">Indicates whether the current object is equal to another object.</span></span></summary>
        <returns><span data-ttu-id="f4c49-194"><see langword="true" />, wenn das aktuelle Objekt gleich dem <paramref name="obj" />-Parameter ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-194"><see langword="true" /> if the current object is equal to the <paramref name="obj" /> parameter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Xaml.XamlType other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Xaml.XamlType other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.Equals(System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As XamlType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Xaml::XamlType ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Xaml.XamlType -&gt; bool" Usage="xamlType.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="f4c49-195">Ein Objekt, das mit diesem Objekt verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="f4c49-195">An object to compare with this object.</span></span></param>
        <summary><span data-ttu-id="f4c49-196">Gibt an, ob das aktuelle Objekt gleich einem anderen Objekt des gleichen Typs ist.</span><span class="sxs-lookup"><span data-stu-id="f4c49-196">Indicates whether the current object is equal to another object of the same type.</span></span></summary>
        <returns><span data-ttu-id="f4c49-197"><see langword="true" />, wenn das aktuelle Objekt gleich dem <paramref name="other" />-Parameter ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-197"><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAliasedProperty">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember GetAliasedProperty (System.Xaml.XamlDirective directive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xaml.XamlMember GetAliasedProperty(class System.Xaml.XamlDirective directive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetAliasedProperty(System.Xaml.XamlDirective)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAliasedProperty (directive As XamlDirective) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::XamlMember ^ GetAliasedProperty(System::Xaml::XamlDirective ^ directive);" />
      <MemberSignature Language="F#" Value="member this.GetAliasedProperty : System.Xaml.XamlDirective -&gt; System.Xaml.XamlMember" Usage="xamlType.GetAliasedProperty directive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directive" Type="System.Xaml.XamlDirective" />
      </Parameters>
      <Docs>
        <param name="directive"><span data-ttu-id="f4c49-198">Die Direktive, für die der mit einem Alias versehene Member gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="f4c49-198">The directive for which to find the aliased member.</span></span></param>
        <summary><span data-ttu-id="f4c49-199">Gibt den XAML-Member zurück, der durch die <see cref="T:System.Xaml.XamlType" />-Klasse mit einem Alias für die XAML-Direktive versehen ist.</span><span class="sxs-lookup"><span data-stu-id="f4c49-199">Returns the XAML member that is aliased to a XAML directive by this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="f4c49-200">Der mit einem Alias versehene Member, sofern gefunden, andernfalls <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-200">The aliased member, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-201">Wenn Sie nicht die standardmäßige interne CLR-reflektionstechnik für eine <xref:System.Xaml.XamlType> verwenden, können Aufrufe dieser Methode <xref:System.Xaml.XamlType.LookupAliasedProperty%2A>-über Schreibungen für von <xref:System.Xaml.XamlType> abgeleitete Klassen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-201">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this method can invoke <xref:System.Xaml.XamlType.LookupAliasedProperty%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="f4c49-202">Weitere Informationen zu Rückgabe Werten und anderem Verhalten finden Sie in der Dokumentation zu <xref:System.Xaml.XamlType.LookupAliasedProperty%2A> für diesen Typ.</span><span class="sxs-lookup"><span data-stu-id="f4c49-202">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupAliasedProperty%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAttachableMembers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt; GetAllAttachableMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class System.Xaml.XamlMember&gt; GetAllAttachableMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetAllAttachableMembers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAttachableMembers () As ICollection(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;System::Xaml::XamlMember ^&gt; ^ GetAllAttachableMembers();" />
      <MemberSignature Language="F#" Value="member this.GetAllAttachableMembers : unit -&gt; System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt;" Usage="xamlType.GetAllAttachableMembers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f4c49-203">Gibt eine Auflistung zurück, die alle anfügbaren Eigenschaften enthält, die von dieser <see cref="T:System.Xaml.XamlType" />-Klasse verfügbar gemacht werden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-203">Returns a collection that contains all the attachable properties that are exposed by this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="f4c49-204">Eine Auflistung, die null oder mehr <see cref="T:System.Xaml.XamlMember" />-Werte enthält.</span><span class="sxs-lookup"><span data-stu-id="f4c49-204">A collection that contains zero or more <see cref="T:System.Xaml.XamlMember" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-205">Jede <xref:System.Xaml.XamlMember> in der zurückgegebenen Auflistung sollte Werte enthalten, die das Konzept unterstützen, dass <xref:System.Xaml.XamlMember> ein anfügbares Element ist.</span><span class="sxs-lookup"><span data-stu-id="f4c49-205">Each <xref:System.Xaml.XamlMember> in the returned collection should contain values that support the concept that the <xref:System.Xaml.XamlMember> is an attachable member.</span></span> <span data-ttu-id="f4c49-206">Beispielsweise sollten Member `true` für <xref:System.Xaml.XamlMember.IsAttachable%2A>, einen Typ für <xref:System.Xaml.XamlMember.TargetType%2A> usw. zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="f4c49-206">For example, members should return `true` for <xref:System.Xaml.XamlMember.IsAttachable%2A>, a type for <xref:System.Xaml.XamlMember.TargetType%2A>, and so on.</span></span>  
  
 <span data-ttu-id="f4c49-207">Wenn Sie nicht die standardmäßige interne CLR-reflektionstechnik für eine <xref:System.Xaml.XamlType> verwenden, können Aufrufe dieser Methode <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A>-über Schreibungen für von <xref:System.Xaml.XamlType> abgeleitete Klassen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-207">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this method can invoke <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="f4c49-208">Weitere Informationen zu Rückgabe Werten und anderem Verhalten finden Sie in der Dokumentation zu <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> für diesen Typ.</span><span class="sxs-lookup"><span data-stu-id="f4c49-208">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllMembers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt; GetAllMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class System.Xaml.XamlMember&gt; GetAllMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetAllMembers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllMembers () As ICollection(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;System::Xaml::XamlMember ^&gt; ^ GetAllMembers();" />
      <MemberSignature Language="F#" Value="member this.GetAllMembers : unit -&gt; System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt;" Usage="xamlType.GetAllMembers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f4c49-209">Gibt eine Auflistung zurück, die alle Member enthält, die von dieser <see cref="T:System.Xaml.XamlType" />-Klasse verfügbar gemacht wurden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-209">Returns a collection that contains all the members that are exposed by this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="f4c49-210">Eine Auflistung, die null oder mehr <see cref="T:System.Xaml.XamlMember" />-Werte enthält.</span><span class="sxs-lookup"><span data-stu-id="f4c49-210">A collection that contains zero or more <see cref="T:System.Xaml.XamlMember" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-211">Aufrufe dieser Methode können <xref:System.Xaml.XamlType.LookupAllMembers%2A>-über Schreibungen für abgeleitete Klassen von <xref:System.Xaml.XamlType> aufrufen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-211">Calls to this method can invoke <xref:System.Xaml.XamlType.LookupAllMembers%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttachableMember">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember GetAttachableMember (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xaml.XamlMember GetAttachableMember(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetAttachableMember(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAttachableMember (name As String) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::XamlMember ^ GetAttachableMember(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetAttachableMember : string -&gt; System.Xaml.XamlMember" Usage="xamlType.GetAttachableMember name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f4c49-212">Der Name des abzurufenden, anfügbaren Members in der Form <c>ownerTypeName.MemberName</c>.</span><span class="sxs-lookup"><span data-stu-id="f4c49-212">The name of the attachable member to get, in <c>ownerTypeName.MemberName</c> form.</span></span></param>
        <summary><span data-ttu-id="f4c49-213">Gibt einen <see cref="T:System.Xaml.XamlMember" /> zurück, der einen bestimmten benannten Member von diesem <see cref="T:System.Xaml.XamlType" /> darstellt, der anfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="f4c49-213">Returns a <see cref="T:System.Xaml.XamlMember" /> representing a specific named attachable member of this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="f4c49-214">Ein <see cref="T:System.Xaml.XamlMember" />-Objekt für den angeforderten anfügbaren Member; andernfalls <see langword="null" />, wenn kein anfügbarer Member dieses Namens existiert.</span><span class="sxs-lookup"><span data-stu-id="f4c49-214">A <see cref="T:System.Xaml.XamlMember" /> object for the requested attachable member; otherwise, <see langword="null" />, if no attachable member by that name exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-215">Aufrufe dieser Methode können <xref:System.Xaml.XamlType.LookupAttachableMember%2A>-über Schreibungen für abgeleitete Klassen von <xref:System.Xaml.XamlType> aufrufen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-215">Calls to this method can invoke <xref:System.Xaml.XamlType.LookupAttachableMember%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f4c49-216"><xref:System.Xaml.XamlType.LookupAttachableMember%2A> ist virtuell und kann daher überschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-216"><xref:System.Xaml.XamlType.LookupAttachableMember%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="f4c49-217">Die außer Kraft Setzung hat die Möglichkeit, die gemeldeten Member eines XAML-Typs zu ändern, um die gemeldeten Member eines XAML-Typs so zu ändern, dass Sie nicht mehr erwartungsgemäß mit den <xref:System.ComponentModel.TypeDescriptor>-`Get*`-Informationen zum zugrunde liegenden CLR-Typ übereinstimmen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-217">The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <xref:System.ComponentModel.TypeDescriptor> `Get*` information about the underlying CLR type.</span></span> <span data-ttu-id="f4c49-218">Verwenden Sie für alle sicherheitskritischen Überprüfungen der Element Berichterstattung stattdessen den zugrunde liegenden CLR-Typ.</span><span class="sxs-lookup"><span data-stu-id="f4c49-218">For any security-critical checks of member reporting, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="xamlType.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f4c49-219">Gibt den Hashcode für dieses Objekt zurück.</span><span class="sxs-lookup"><span data-stu-id="f4c49-219">Returns the hash code for this object.</span></span></summary>
        <returns><span data-ttu-id="f4c49-220">Ein ganzzahliger Hashcode.</span><span class="sxs-lookup"><span data-stu-id="f4c49-220">An integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember GetMember (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xaml.XamlMember GetMember(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetMember(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMember (name As String) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::XamlMember ^ GetMember(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetMember : string -&gt; System.Xaml.XamlMember" Usage="xamlType.GetMember name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f4c49-221">Der Name des abzurufenden Members (als Zeichenfolge).</span><span class="sxs-lookup"><span data-stu-id="f4c49-221">The name of the member to get (as a string).</span></span></param>
        <summary><span data-ttu-id="f4c49-222">Gibt einen <see cref="T:System.Xaml.XamlMember" /> für einen bestimmten benannten Member aus diesem <see cref="T:System.Xaml.XamlType" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="f4c49-222">Returns a <see cref="T:System.Xaml.XamlMember" /> for a specific named member from this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="f4c49-223">Die <see cref="T:System.Xaml.XamlMember" />-Informationen für den Member, wenn ein derartiger Member gefunden wurde, andernfalls <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-223">The <see cref="T:System.Xaml.XamlMember" /> information for the member, if such a member was found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-224">Der Wert für "`name`" wird als nicht qualifiziert erwartet.</span><span class="sxs-lookup"><span data-stu-id="f4c49-224">The value for `name` is expected to be unqualified.</span></span> <span data-ttu-id="f4c49-225">Typqualifizierte Namen, die angeben, dass ein angefügtes Mitglied an <xref:System.Xaml.XamlType.GetAttachableMember%2A> gesendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="f4c49-225">Type-qualified names that indicate an attached member should be submitted to <xref:System.Xaml.XamlType.GetAttachableMember%2A> instead.</span></span> <span data-ttu-id="f4c49-226">Elementnamen mit Präfix dürfen nicht verwendet werden. ein Präfix ist situationsbedingt zu einer Verwendung, und das XAML-Typsystem kennt den Kontext einer solchen Verwendung und wie das Präfix zugeordnet wird.</span><span class="sxs-lookup"><span data-stu-id="f4c49-226">Prefixed member names should not be used; a prefix is situational to a usage and the XAML type system cannot know the context of such a usage and how the prefix is mapped.</span></span>  
  
 <span data-ttu-id="f4c49-227">Aufrufe dieser Methode können <xref:System.Xaml.XamlType.LookupMember%2A>-über Schreibungen für abgeleitete Klassen von <xref:System.Xaml.XamlType> aufrufen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-227">Calls to this method can invoke <xref:System.Xaml.XamlType.LookupMember%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f4c49-228"><xref:System.Xaml.XamlType.LookupMember%2A> ist virtuell und kann daher überschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-228"><xref:System.Xaml.XamlType.LookupMember%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="f4c49-229">Die außer Kraft Setzung hat die Möglichkeit, die gemeldeten Member eines XAML-Typs zu ändern, um die gemeldeten Member eines XAML-Typs so zu ändern, dass Sie nicht mehr erwartungsgemäß mit den <xref:System.ComponentModel.TypeDescriptor>-`Get*`-Informationen zum zugrunde liegenden CLR-Typ übereinstimmen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-229">The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <xref:System.ComponentModel.TypeDescriptor> `Get*` information about the underlying CLR type.</span></span> <span data-ttu-id="f4c49-230">Verwenden Sie für alle sicherheitskritischen Überprüfungen der Element Berichterstattung stattdessen den zugrunde liegenden CLR-Typ.</span><span class="sxs-lookup"><span data-stu-id="f4c49-230">For any security-critical checks of member reporting, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPositionalParameters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; GetPositionalParameters (int parameterCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; GetPositionalParameters(int32 parameterCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetPositionalParameters(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPositionalParameters (parameterCount As Integer) As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ GetPositionalParameters(int parameterCount);" />
      <MemberSignature Language="F#" Value="member this.GetPositionalParameters : int -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="xamlType.GetPositionalParameters parameterCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterCount"><span data-ttu-id="f4c49-231">Die Anzahl (Stelligkeit) des bestimmten Syntax- oder Konstruktormodus, zu dem Sie Informationen anzeigen möchten.</span><span class="sxs-lookup"><span data-stu-id="f4c49-231">The count (arity) of the particular syntax or constructor mode that you want information about.</span></span></param>
        <summary><span data-ttu-id="f4c49-232">Für Markuperweiterungstypen werden die Typen der Positionsparameter zurückgegeben, die bei einer bestimmten Verwendung der Markuperweiterung für diesen <see cref="T:System.Xaml.XamlType" /> unterstützt werden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-232">For markup extension types, returns the types of the positional parameters that are supported in a specific markup extension usage for this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="f4c49-233">Eine Liste von <see cref="T:System.Xaml.XamlType" />-Werten, wobei jeder <see cref="T:System.Xaml.XamlType" /> der Typ für diese Position in der Syntax ist.</span><span class="sxs-lookup"><span data-stu-id="f4c49-233">A list of <see cref="T:System.Xaml.XamlType" /> values, where each <see cref="T:System.Xaml.XamlType" /> is the type for that position in the syntax.</span></span> <span data-ttu-id="f4c49-234">Beim Angeben von Markupeingaben für die Markuperweiterung müssen die Typen in der gleichen Reihenfolge angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-234">You must specify the types in the same order when you supply markup input for the markup extension.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-235">Diese API ist nur relevant, wenn dieses <xref:System.Xaml.XamlType> eine Markup Erweiterung darstellt (<xref:System.Xaml.XamlType.IsMarkupExtension%2A> ist `true`).</span><span class="sxs-lookup"><span data-stu-id="f4c49-235">This API is only relevant if this <xref:System.Xaml.XamlType> represents a markup extension (<xref:System.Xaml.XamlType.IsMarkupExtension%2A> is `true`).</span></span>  
  
 <span data-ttu-id="f4c49-236">Der Eingabe `parameterCount` ist nicht für die Anforderung des Typs eines bestimmten Positions Parameters vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-236">The input `parameterCount` is not for requesting the type of a specific positional parameter.</span></span> <span data-ttu-id="f4c49-237">Es dient zum Angeben der Stelligkeit einer Markup Erweiterungs Verwendung.</span><span class="sxs-lookup"><span data-stu-id="f4c49-237">It is for specifying the arity of a markup extension usage.</span></span> <span data-ttu-id="f4c49-238">Die Verwendung von Markup Erweiterungen weist oft mehrere "Signaturen" auf und verwendet eine andere parameterität (Anzahl) von Positions Parametern, um unterscheiden zu können.</span><span class="sxs-lookup"><span data-stu-id="f4c49-238">Markup extension usage often has multiple "signatures" and uses different parameter arity (count) of positional parameters to differentiate.</span></span> <span data-ttu-id="f4c49-239">Sie können jedoch einen Schema Kontext so konfigurieren, dass doppelte Typen zugelassen werden und Typen der Positions Parameter für die Differenzierung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-239">However, you can configure a schema context to allow duplicate arities and use types of the positional parameters for differentiation.</span></span> <span data-ttu-id="f4c49-240">Weitere Informationen finden Sie unter <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>.</span><span class="sxs-lookup"><span data-stu-id="f4c49-240">For more information, see <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>.</span></span> <span data-ttu-id="f4c49-241">Für eine bestimmte Stelligkeit (Anzahl) können die Parameter Positionen und-Typen variieren.</span><span class="sxs-lookup"><span data-stu-id="f4c49-241">For a specific arity (count), the parameter positions and types can vary.</span></span> <span data-ttu-id="f4c49-242">Um den positionellen Typ der Markup Erweiterungs Verwendung einer bestimmten Arität zu erhalten, wird zuerst <xref:System.Xaml.XamlType.GetPositionalParameters%2A> aufgerufen, der die Anzahl der Dezimalstellen angibt.</span><span class="sxs-lookup"><span data-stu-id="f4c49-242">To get the positional type of a specific arity's markup extension usage, you first call <xref:System.Xaml.XamlType.GetPositionalParameters%2A> specifying the arity count.</span></span> <span data-ttu-id="f4c49-243">Anschließend wird das Element an dieser Position aus der zurückgegebenen Auflistung zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="f4c49-243">Then get the item at that position from the returned collection.</span></span>  
  
 <span data-ttu-id="f4c49-244">Aufrufe dieser Methode können <xref:System.Xaml.XamlType.LookupPositionalParameters%2A>-über Schreibungen für abgeleitete Klassen von <xref:System.Xaml.XamlType> aufrufen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-244">Calls to this method can invoke <xref:System.Xaml.XamlType.LookupPositionalParameters%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXamlNamespaces">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt; GetXamlNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetXamlNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetXamlNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXamlNamespaces () As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetXamlNamespaces();" />
      <MemberSignature Language="F#" Value="abstract member GetXamlNamespaces : unit -&gt; System.Collections.Generic.IList&lt;string&gt;&#xA;override this.GetXamlNamespaces : unit -&gt; System.Collections.Generic.IList&lt;string&gt;" Usage="xamlType.GetXamlNamespaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f4c49-245">Gibt eine Liste von Zeichenfolgenbezeichnern für XAML-Namespaces zurück, in denen der Typ enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="f4c49-245">Returns a list of string identifiers for XAML namespaces that the type is included in.</span></span></summary>
        <returns><span data-ttu-id="f4c49-246">Eine Liste von Zeichenfolgenwerten, in der jede Zeichenfolge der URI-Bezeichner für einen XAML-Namespace ist.</span><span class="sxs-lookup"><span data-stu-id="f4c49-246">A list of string values, where each string is the URI identifier for a XAML namespace.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-247">Typische XAML-Namespace Bezeichner sind Zeichen folgen in der URI-Form.</span><span class="sxs-lookup"><span data-stu-id="f4c49-247">Typical XAML namespace identifiers are strings in URI form.</span></span>  
  
 <span data-ttu-id="f4c49-248">Die Standard Implementierung überprüft Folgendes in der angegebenen Reihenfolge: der XAML-Namespace, der in der Konstruktion bereitgestellt wird (nur <xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29>-Signatur); und die Namespaces, die im Schema Kontext verfügbar sind.</span><span class="sxs-lookup"><span data-stu-id="f4c49-248">The default implementation checks the following, in order: the XAML namespace that is supplied in construction (<xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29> signature only); and the namespaces that are available from the schema context.</span></span> <span data-ttu-id="f4c49-249">Wenn diese alle `null` sind, wird eine neue Liste generiert, die eine einzelne leere Zeichenfolge enthält.</span><span class="sxs-lookup"><span data-stu-id="f4c49-249">If these are each `null`, a new list is generated that contains a single empty string.</span></span> <span data-ttu-id="f4c49-250">Sie können diese Methode überschreiben, um die Such Methodik zu ändern.</span><span class="sxs-lookup"><span data-stu-id="f4c49-250">You can override this method to change the lookup methodology.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoker">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlTypeInvoker Invoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlTypeInvoker Invoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.Invoker" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Invoker As XamlTypeInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlTypeInvoker ^ Invoker { System::Xaml::Schema::XamlTypeInvoker ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Invoker : System.Xaml.Schema.XamlTypeInvoker" Usage="System.Xaml.XamlType.Invoker" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlTypeInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f4c49-251">Ruft die <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />-Implementierung ab, die diesem <see cref="T:System.Xaml.XamlType" />-Objekt zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="f4c49-251">Gets the <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> implementation that is associated with this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <value><span data-ttu-id="f4c49-252">Die <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />-Implementierung, die diesem <see cref="T:System.Xaml.XamlType" />-Objekt zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="f4c49-252">The <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> implementation that is associated with this <see cref="T:System.Xaml.XamlType" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-253">Wenn Sie nicht die standardmäßige interne CLR-reflektionstechnik für eine <xref:System.Xaml.XamlType> verwenden, kann der Aufruf von <xref:System.Xaml.XamlType.Invoker%2A> entweder <xref:System.Xaml.XamlType.LookupInvoker%2A> oder eine bestimmte außer Kraft setzung dieser Methode aufrufen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-253">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calling <xref:System.Xaml.XamlType.Invoker%2A> can invoke either <xref:System.Xaml.XamlType.LookupInvoker%2A> or a specific override of that method.</span></span> <span data-ttu-id="f4c49-254">Weitere Informationen zu Rückgabe Werten und anderem Verhalten finden Sie in der Dokumentation zu <xref:System.Xaml.XamlType.LookupInvoker%2A> für diesen Typ.</span><span class="sxs-lookup"><span data-stu-id="f4c49-254">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupInvoker%2A> on this type.</span></span>  
  
 <span data-ttu-id="f4c49-255">Wenn eine <xref:System.Xaml.XamlType.LookupInvoker%2A>-außer Kraft Setzung `null` zurückgibt, oder wenn die Standard Implementierung `null` zurückgibt, weil <xref:System.Xaml.XamlType.UnderlyingType%2A> für diesen <xref:System.Xaml.XamlType> fehlt, gibt <xref:System.Xaml.XamlType.Invoker%2A> <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=nameWithType> zurück.</span><span class="sxs-lookup"><span data-stu-id="f4c49-255">If a <xref:System.Xaml.XamlType.LookupInvoker%2A> override returns `null`, or if the default implementation returns `null` because of lack of <xref:System.Xaml.XamlType.UnderlyingType%2A> for this <xref:System.Xaml.XamlType>, then <xref:System.Xaml.XamlType.Invoker%2A> returns <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAmbient">
      <MemberSignature Language="C#" Value="public bool IsAmbient { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAmbient" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsAmbient" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAmbient As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAmbient { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAmbient : bool" Usage="System.Xaml.XamlType.IsAmbient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f4c49-256">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen Umgebungstyp gemäß XAML-Definition darstellt.</span><span class="sxs-lookup"><span data-stu-id="f4c49-256">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents an ambient type, as per the XAML definition.</span></span></summary>
        <value><span data-ttu-id="f4c49-257"><see langword="true" />, wenn das <see cref="T:System.Xaml.XamlType" />-Objekt einen Umgebungstyp darstellt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-257"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents an ambient type; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-258">Wenn Sie nicht die standardmäßige interne CLR-reflektionstechnik für eine <xref:System.Xaml.XamlType> verwenden, können Aufrufe dieser Eigenschaft <xref:System.Xaml.XamlType.LookupIsAmbient%2A>-über Schreibungen für von <xref:System.Xaml.XamlType> abgeleitete Klassen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-258">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsAmbient%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="f4c49-259">Weitere Informationen zu Rückgabe Werten und anderem Verhalten finden Sie in der Dokumentation zu <xref:System.Xaml.XamlType.LookupIsAmbient%2A> für diesen Typ.</span><span class="sxs-lookup"><span data-stu-id="f4c49-259">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsAmbient%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsArray">
      <MemberSignature Language="C#" Value="public bool IsArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsArray" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsArray" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsArray As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsArray { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsArray : bool" Usage="System.Xaml.XamlType.IsArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f4c49-260">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt ein Array darstellt.</span><span class="sxs-lookup"><span data-stu-id="f4c49-260">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents an array.</span></span></summary>
        <value><span data-ttu-id="f4c49-261"><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt ein Array darstellt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-261"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents an array; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-262">Wenn Sie nicht die standardmäßige interne CLR-reflektionstechnik für eine <xref:System.Xaml.XamlType> verwenden, können Aufrufe dieser Eigenschaft <xref:System.Xaml.XamlType.LookupCollectionKind%2A>-über Schreibungen für von <xref:System.Xaml.XamlType> abgeleitete Klassen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-262">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupCollectionKind%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="f4c49-263">Weitere Informationen zu Rückgabe Werten und anderem Verhalten finden Sie in der Dokumentation zu <xref:System.Xaml.XamlType.LookupCollectionKind%2A> für diesen Typ.</span><span class="sxs-lookup"><span data-stu-id="f4c49-263">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupCollectionKind%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCollection">
      <MemberSignature Language="C#" Value="public bool IsCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCollection" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCollection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCollection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCollection : bool" Usage="System.Xaml.XamlType.IsCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f4c49-264">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt eine Auflistung darstellt.</span><span class="sxs-lookup"><span data-stu-id="f4c49-264">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a collection.</span></span></summary>
        <value><span data-ttu-id="f4c49-265"><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt eine Auflistung darstellt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-265"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a collection; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-266">Wenn Sie nicht die standardmäßige interne CLR-reflektionstechnik für eine <xref:System.Xaml.XamlType> verwenden, können Aufrufe dieser Eigenschaft <xref:System.Xaml.XamlType.LookupCollectionKind%2A>-über Schreibungen für von <xref:System.Xaml.XamlType> abgeleitete Klassen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-266">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupCollectionKind%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="f4c49-267">Weitere Informationen zu Rückgabe Werten und anderem Verhalten finden Sie in der Dokumentation zu <xref:System.Xaml.XamlType.LookupCollectionKind%2A> für diesen Typ.</span><span class="sxs-lookup"><span data-stu-id="f4c49-267">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupCollectionKind%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConstructible">
      <MemberSignature Language="C#" Value="public bool IsConstructible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConstructible" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsConstructible" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsConstructible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsConstructible { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsConstructible : bool" Usage="System.Xaml.XamlType.IsConstructible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f4c49-268">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen erstellbaren Typ gemäß XAML-Definition darstellt.</span><span class="sxs-lookup"><span data-stu-id="f4c49-268">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a constructible type, as per the XAML definition.</span></span></summary>
        <value><span data-ttu-id="f4c49-269"><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen erstellbaren Typ darstellt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-269"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a constructible type; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-270">Diese Eigenschaft richtet sich nach dem `[is default constructible]`-Informationselement in der [MS-XAML]-Spezifikation.</span><span class="sxs-lookup"><span data-stu-id="f4c49-270">This property aligns to the `[is default constructible]` information item in the [MS-XAML] specification.</span></span>  
  
 <span data-ttu-id="f4c49-271">Wenn Sie nicht die standardmäßige interne CLR-reflektionstechnik für eine <xref:System.Xaml.XamlType> verwenden, können Aufrufe dieser Eigenschaft <xref:System.Xaml.XamlType.LookupIsConstructible%2A>-über Schreibungen für von <xref:System.Xaml.XamlType> abgeleitete Klassen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-271">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsConstructible%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="f4c49-272">Weitere Informationen zu Rückgabe Werten und anderem Verhalten finden Sie in der Dokumentation zu <xref:System.Xaml.XamlType.LookupIsConstructible%2A> für diesen Typ.</span><span class="sxs-lookup"><span data-stu-id="f4c49-272">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsConstructible%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlType.ConstructionRequiresArguments" />
      </Docs>
    </Member>
    <Member MemberName="IsDictionary">
      <MemberSignature Language="C#" Value="public bool IsDictionary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDictionary" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsDictionary" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDictionary As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDictionary { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDictionary : bool" Usage="System.Xaml.XamlType.IsDictionary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f4c49-273">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt ein Wörterbuch gemäß XAML-Definition darstellt.</span><span class="sxs-lookup"><span data-stu-id="f4c49-273">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a dictionary, as per the XAML definition.</span></span></summary>
        <value><span data-ttu-id="f4c49-274"><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt ein Wörterbuch darstellt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-274"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a dictionary; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-275">Diese Eigenschaft richtet sich nach dem `[is dictionary]`-Informationselement in der [MS-XAML]-Spezifikation.</span><span class="sxs-lookup"><span data-stu-id="f4c49-275">This property aligns to the `[is dictionary]` information item in the [MS-XAML] specification.</span></span>  
  
 <span data-ttu-id="f4c49-276">Wenn Sie nicht die standardmäßige interne CLR-reflektionstechnik für eine <xref:System.Xaml.XamlType> verwenden, können Aufrufe dieser Eigenschaft <xref:System.Xaml.XamlType.LookupCollectionKind%2A>-über Schreibungen für von <xref:System.Xaml.XamlType> abgeleitete Klassen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-276">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupCollectionKind%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="f4c49-277">Weitere Informationen zu Rückgabe Werten und anderem Verhalten finden Sie in der Dokumentation zu <xref:System.Xaml.XamlType.LookupCollectionKind%2A> für diesen Typ.</span><span class="sxs-lookup"><span data-stu-id="f4c49-277">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupCollectionKind%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGeneric">
      <MemberSignature Language="C#" Value="public bool IsGeneric { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGeneric" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsGeneric" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsGeneric As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsGeneric { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsGeneric : bool" Usage="System.Xaml.XamlType.IsGeneric" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f4c49-278">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen generischen Typ darstellt.</span><span class="sxs-lookup"><span data-stu-id="f4c49-278">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a generic type.</span></span></summary>
        <value><span data-ttu-id="f4c49-279"><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen generischen Typ darstellt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-279"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a generic type; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-280">Diese Eigenschaft ist eine Hilfseigenschaft, die auf einen NULL-Wert <xref:System.Xaml.XamlType.TypeArguments%2A> prüft.</span><span class="sxs-lookup"><span data-stu-id="f4c49-280">This property is a helper property that checks for a null value of <xref:System.Xaml.XamlType.TypeArguments%2A>.</span></span> <span data-ttu-id="f4c49-281">Es gibt keine bestimmte `Lookup`-Methode, die sich auf <xref:System.Xaml.XamlType.IsGeneric%2A> bezieht.</span><span class="sxs-lookup"><span data-stu-id="f4c49-281">There is no specific `Lookup` method related to <xref:System.Xaml.XamlType.IsGeneric%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMarkupExtension">
      <MemberSignature Language="C#" Value="public bool IsMarkupExtension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMarkupExtension" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsMarkupExtension" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMarkupExtension As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMarkupExtension { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMarkupExtension : bool" Usage="System.Xaml.XamlType.IsMarkupExtension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f4c49-282">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt eine Markuperweiterung darstellt.</span><span class="sxs-lookup"><span data-stu-id="f4c49-282">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a markup extension.</span></span></summary>
        <value><span data-ttu-id="f4c49-283"><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt eine Markuperweiterung darstellt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-283"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a markup extension; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-284">In XAML-Spezifikations Begriffen muss dieser Typ `x:MarkupExtension` zugewiesen werden, damit `true` für <xref:System.Xaml.XamlType.IsMarkupExtension%2A> zurückgegeben werden kann.</span><span class="sxs-lookup"><span data-stu-id="f4c49-284">In XAML specification terms, this type must be assignable to `x:MarkupExtension` in order to return `true` for <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.</span></span>  
  
 <span data-ttu-id="f4c49-285">Wenn Sie nicht die standardmäßige interne CLR-reflektionstechnik für eine <xref:System.Xaml.XamlType> verwenden, können Aufrufe dieser Eigenschaft <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A>-über Schreibungen für von <xref:System.Xaml.XamlType> abgeleitete Klassen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-285">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="f4c49-286">Weitere Informationen zu Rückgabe Werten und anderem Verhalten finden Sie in der Dokumentation zu <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> für diesen Typ.</span><span class="sxs-lookup"><span data-stu-id="f4c49-286">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameScope">
      <MemberSignature Language="C#" Value="public bool IsNameScope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameScope" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsNameScope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameScope As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameScope { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNameScope : bool" Usage="System.Xaml.XamlType.IsNameScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f4c49-287">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen XAML-Namescope gemäß XAML-Definition darstellt.</span><span class="sxs-lookup"><span data-stu-id="f4c49-287">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a XAML namescope, as per the XAML definition.</span></span></summary>
        <value><span data-ttu-id="f4c49-288"><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen XAML-Namescope darstellt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-288"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a XAML namescope; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-289">Ein XAML-Namescope erzwingt die namens Eindeutigkeit der Eigenschaft oder Eigenschaften, die für `x:Name` @ no__t-1 @ no__t-2 verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="f4c49-289">A XAML namescope enforces the name uniqueness of the property or properties used for `x:Name` / `[name property]`.</span></span> <span data-ttu-id="f4c49-290">Wenn <xref:System.Xaml.XamlType.IsNameScope%2A> `true` ist, sollte ein Mechanismus zum Erzwingen der Eindeutigkeit vorhanden sein, der aus der Perspektive dieses Typs, der einen XAML-Namescope besitzt, ausgewertet werden sollte.</span><span class="sxs-lookup"><span data-stu-id="f4c49-290">If <xref:System.Xaml.XamlType.IsNameScope%2A> is `true`, some mechanism for enforcing uniqueness should exist and should evaluate from the perspective of this type owning a XAML namescope.</span></span> <span data-ttu-id="f4c49-291">Der XAML-Namescope erweitert dann den Inhalt des Typs, bis ein anderer XAML-Namescope-Typ gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="f4c49-291">The XAML namescope then extends to the content of the type until another XAML namescope-owning type is encountered.</span></span>  
  
 <span data-ttu-id="f4c49-292">Diese Eigenschaft richtet sich nach dem `[is name scope]`-Informationselement in der [MS-XAML]-Spezifikation.</span><span class="sxs-lookup"><span data-stu-id="f4c49-292">This property aligns to the `[is name scope]` information item in the [MS-XAML] specification.</span></span>  
  
 <span data-ttu-id="f4c49-293">Wenn Sie nicht die standardmäßige interne CLR-reflektionstechnik für eine <xref:System.Xaml.XamlType> verwenden, können Aufrufe dieser Eigenschaft <xref:System.Xaml.XamlType.LookupIsNameScope%2A>-über Schreibungen für von <xref:System.Xaml.XamlType> abgeleitete Klassen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-293">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsNameScope%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameValid">
      <MemberSignature Language="C#" Value="public bool IsNameValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameValid" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsNameValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNameValid : bool" Usage="System.Xaml.XamlType.IsNameValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f4c49-294">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt mit einer gültigen <see langword="xamlName" />-Zeichenfolge als <see cref="P:System.Xaml.XamlType.Name" />-Eigenschaft initialisiert wird.</span><span class="sxs-lookup"><span data-stu-id="f4c49-294">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> is initialized by using a valid <see langword="xamlName" /> string as its <see cref="P:System.Xaml.XamlType.Name" />.</span></span></summary>
        <value><span data-ttu-id="f4c49-295"><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt mit einer gültigen <see langword="xamlName" />-Zeichenfolge initialisiert wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-295"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> is initialized by using a valid <see langword="xamlName" /> string; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool" Usage="System.Xaml.XamlType.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f4c49-296">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen Nullable-Typ gemäß XAML-Definition darstellt.</span><span class="sxs-lookup"><span data-stu-id="f4c49-296">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a nullable type, as per the XAML definition.</span></span></summary>
        <value><span data-ttu-id="f4c49-297"><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen Nullable-Typ darstellt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-297"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a nullable type; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-298">Diese Eigenschaft richtet sich nach dem `[is nullable]`-Informationselement in der [MS-XAML]-Spezifikation.</span><span class="sxs-lookup"><span data-stu-id="f4c49-298">This property aligns to the `[is nullable]` information item in the [MS-XAML] specification.</span></span>  
  
 <span data-ttu-id="f4c49-299">Wenn Sie nicht die standardmäßige interne CLR-reflektionstechnik für eine <xref:System.Xaml.XamlType> verwenden, können Aufrufe dieser Eigenschaft <xref:System.Xaml.XamlType.LookupIsNullable%2A>-über Schreibungen für von <xref:System.Xaml.XamlType> abgeleitete Klassen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-299">If you are not using the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsNullable%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPublic">
      <MemberSignature Language="C#" Value="public bool IsPublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPublic" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsPublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPublic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPublic : bool" Usage="System.Xaml.XamlType.IsPublic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f4c49-300">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen öffentlichen Typ im relevanten Typsystem darstellt.</span><span class="sxs-lookup"><span data-stu-id="f4c49-300">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a public type in the relevant type system.</span></span></summary>
        <value><span data-ttu-id="f4c49-301"><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen öffentlichen Typ darstellt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-301"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a public type; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-302">Wenn Sie nicht die standardmäßige interne CLR-reflektionstechnik für eine <xref:System.Xaml.XamlType> verwenden, können Aufrufe dieser Eigenschaft <xref:System.Xaml.XamlType.LookupIsPublic%2A>-über Schreibungen für von <xref:System.Xaml.XamlType> abgeleitete Klassen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-302">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsPublic%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f4c49-303"><xref:System.Xaml.XamlType.LookupIsPublic%2A> ist virtuell und kann daher überschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-303"><xref:System.Xaml.XamlType.LookupIsPublic%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="f4c49-304">Die außer Kraft Setzung hat die Möglichkeit, die gemeldeten Zugriffs Informationen zu einem XAML-Typ zu ändern, um die gemeldeten Zugriffs Informationen zu einem XAML-Typ so zu ändern, dass Sie nicht mehr erwartungsgemäß mit dem Typsystem und den Zugriffs Informationen des zugrunde liegenden CLR-Typs ausgerichtet werden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-304">The override has the potential (whether for malicious purposes or otherwise) to change the reported access information about a XAML type so that it no longer aligns in an expected way with the type system and access information of its underlying CLR type.</span></span> <span data-ttu-id="f4c49-305">Verwenden Sie für sicherheitskritische Überprüfungen von Zuweisungs Vorgängen und Zugriff stattdessen den zugrunde liegenden CLR-Typ.</span><span class="sxs-lookup"><span data-stu-id="f4c49-305">For any security-critical checks of assignment operations and access, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnknown">
      <MemberSignature Language="C#" Value="public bool IsUnknown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnknown" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsUnknown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUnknown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUnknown { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUnknown : bool" Usage="System.Xaml.XamlType.IsUnknown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f4c49-306">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen Typ darstellt, der nicht im zugrunde liegenden Typsystem aufgelöst werden kann.</span><span class="sxs-lookup"><span data-stu-id="f4c49-306">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a type that cannot be resolved in the underlying type system.</span></span></summary>
        <value><span data-ttu-id="f4c49-307"><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen nicht auflösbaren Typ darstellt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-307"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents an unresolvable type; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-308">Wenn Sie nicht die standardmäßige interne CLR-reflektionstechnik für eine <xref:System.Xaml.XamlType> verwenden, können Aufrufe dieser Eigenschaft <xref:System.Xaml.XamlType.LookupIsUnknown%2A>-über Schreibungen für von <xref:System.Xaml.XamlType> abgeleitete Klassen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-308">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsUnknown%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
 <span data-ttu-id="f4c49-309">Bei einem Ladepfad, der <xref:System.Xaml.XamlObjectWriter> umfasst, kann ein <xref:System.Xaml.XamlType> mit `true` für <xref:System.Xaml.XamlType.IsUnknown%2A> nicht in ein Objekt Diagramm geschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-309">For a load path that involves <xref:System.Xaml.XamlObjectWriter>, a <xref:System.Xaml.XamlType> that has `true` for <xref:System.Xaml.XamlType.IsUnknown%2A> cannot be written into an object graph.</span></span> <span data-ttu-id="f4c49-310">Unter den Standard Implementierungen in <xref:System.Xaml> löst der <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A?displayProperty=nameWithType>-Befehl eine <xref:System.Xaml.XamlObjectWriterException> aus, wenn der relevante <xref:System.Xaml.XamlType>-Bericht `true` für <xref:System.Xaml.XamlType.IsUnknown%2A> ist.</span><span class="sxs-lookup"><span data-stu-id="f4c49-310">Under the default implementations in <xref:System.Xaml> , the <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A?displayProperty=nameWithType> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlType> reports `true` for <xref:System.Xaml.XamlType.IsUnknown%2A>.</span></span> <span data-ttu-id="f4c49-311">Sie sollten eine <xref:System.Xaml.XamlType>, die <xref:System.Xaml.XamlType.IsUnknown%2A> aufweist, nicht als `true` übergeben, es sei denn, Sie sind darauf vorbereitet, die Ausnahmen von <xref:System.Xaml.XamlObjectWriter> zu behandeln, oder Sie haben andere Möglichkeiten, das <xref:System.Xaml.XamlObjectWriter>-Verhalten oder den XAML-knotenstream vor dem Schreiben des Objekt Diagramms anzupassen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-311">You should not pass a <xref:System.Xaml.XamlType> that has <xref:System.Xaml.XamlType.IsUnknown%2A> as `true` unless you are prepared to handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior or the XAML node stream prior to writing the object graph.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUsableDuringInitialization">
      <MemberSignature Language="C#" Value="public bool IsUsableDuringInitialization { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUsableDuringInitialization" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsUsableDuringInitialization" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUsableDuringInitialization As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUsableDuringInitialization { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUsableDuringInitialization : bool" Usage="System.Xaml.XamlType.IsUsableDuringInitialization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f4c49-312">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt während der XAML-Initialisierung von oben nach unten erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="f4c49-312">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> is built top-down during XAML initialization.</span></span></summary>
        <value><span data-ttu-id="f4c49-313"><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt während der XAML-Initialisierung von oben nach unten erstellt wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-313"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> is built top-down during XAML initialization; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="f4c49-314">Die Standardeinstellung ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-314">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-315">Top-Down ist eine Metapher, die das XAML-Prozessor Verhalten beim Erstellen des Objekt Diagramms anweist.</span><span class="sxs-lookup"><span data-stu-id="f4c49-315">Top-down is a metaphor that approximates XAML processor behavior when creating the object graph.</span></span> <span data-ttu-id="f4c49-316">Wenn ein Typ von oben nach unten erstellt wird, wird er instanziiert, an das übergeordnete Element angefügt und seine Eigenschaften festgelegt.</span><span class="sxs-lookup"><span data-stu-id="f4c49-316">When built top-down, a type is instantiated, attached to the parent, and then has its properties set.</span></span> <span data-ttu-id="f4c49-317">Bei der Top-Down-Konstruktion wird vermieden, dass von der Eigenschaft geänderte Handler mehrmals aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-317">Top-down construction avoids invoking property-changed handlers multiple times.</span></span> <span data-ttu-id="f4c49-318">Eine solche Behandlung sorgt für das Objekt Diagramm und beseitigt daher die Aufrufe mehrerer Handler und bietet eine Leistungsoptimierung für den Start des Objekt Diagramms.</span><span class="sxs-lookup"><span data-stu-id="f4c49-318">Such handling ripples up the object graph and therefore, eliminates the multiple handler calls and provides a performance optimization for startup of the object graph.</span></span>  
  
 <span data-ttu-id="f4c49-319">Wenn Sie nicht die standardmäßige interne CLR-reflektionstechnik für eine <xref:System.Xaml.XamlType> verwenden, können Aufrufe dieser Eigenschaft <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A>-über Schreibungen für von <xref:System.Xaml.XamlType> abgeleitete Klassen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-319">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="f4c49-320">Weitere Informationen zu Rückgabe Werten und anderem Verhalten finden Sie in der Dokumentation zu <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> für diesen Typ.</span><span class="sxs-lookup"><span data-stu-id="f4c49-320">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream)" />
        <altmember cref="P:System.Windows.FrameworkElement.IsInitialized" />
      </Docs>
    </Member>
    <Member MemberName="IsWhitespaceSignificantCollection">
      <MemberSignature Language="C#" Value="public bool IsWhitespaceSignificantCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWhitespaceSignificantCollection" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsWhitespaceSignificantCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWhitespaceSignificantCollection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWhitespaceSignificantCollection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWhitespaceSignificantCollection : bool" Usage="System.Xaml.XamlType.IsWhitespaceSignificantCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f4c49-321">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt eine leerraumsignifikante Auflistung gemäß der XML-Definition darstellt.</span><span class="sxs-lookup"><span data-stu-id="f4c49-321">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a whitespace significant collection, as per the XML definition.</span></span></summary>
        <value><span data-ttu-id="f4c49-322"><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt eine leerraumsignifikante Auflistung darstellt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-322"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a whitespace significant collection; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-323">Wenn Sie nicht die standardmäßige interne CLR-reflektionstechnik für eine <xref:System.Xaml.XamlType> verwenden, können Aufrufe dieser Eigenschaft <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A>-über Schreibungen für von <xref:System.Xaml.XamlType> abgeleitete Klassen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-323">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="f4c49-324">Weitere Informationen zu Rückgabe Werten und anderem Verhalten finden Sie in der Dokumentation zu <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> für diesen Typ.</span><span class="sxs-lookup"><span data-stu-id="f4c49-324">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsXData">
      <MemberSignature Language="C#" Value="public bool IsXData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsXData" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsXData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsXData As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsXData { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsXData : bool" Usage="System.Xaml.XamlType.IsXData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f4c49-325">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt XML-<see langword="XDATA" /> gemäß XAML-Definition darstellt.</span><span class="sxs-lookup"><span data-stu-id="f4c49-325">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents XML <see langword="XDATA" />, as per the XAML definition.</span></span></summary>
        <value><span data-ttu-id="f4c49-326"><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt <see langword="XDATA" /> darstellt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-326"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents <see langword="XDATA" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-327">Diese Eigenschaft richtet sich nach dem `[is xdata]`-Informationselement in der [MS-XAML]-Spezifikation.</span><span class="sxs-lookup"><span data-stu-id="f4c49-327">This property aligns to the `[is xdata]` information item in the [MS-XAML] specification.</span></span>  
  
 <span data-ttu-id="f4c49-328">Wenn Sie nicht die standardmäßige interne CLR-reflektionstechnik für eine <xref:System.Xaml.XamlType> verwenden, können Aufrufe dieser Eigenschaft <xref:System.Xaml.XamlType.LookupIsXData%2A>-über Schreibungen für von <xref:System.Xaml.XamlType> abgeleitete Klassen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-328">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsXData%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="f4c49-329">Weitere Informationen zu Rückgabe Werten und anderem Verhalten finden Sie in der Dokumentation zu <xref:System.Xaml.XamlType.LookupIsXData%2A> für diesen Typ.</span><span class="sxs-lookup"><span data-stu-id="f4c49-329">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsXData%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType ItemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType ItemType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ItemType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ ItemType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemType : System.Xaml.XamlType" Usage="System.Xaml.XamlType.ItemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f4c49-330">Ruft einen Wert ab, der die Typinformationen für die <see langword="Items" />-Eigenschaft dieses <see cref="T:System.Xaml.XamlType" />-Objekts enthält.</span><span class="sxs-lookup"><span data-stu-id="f4c49-330">Gets a value that provides the type information for the <see langword="Items" /> property of this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <value><span data-ttu-id="f4c49-331">Ein <see cref="T:System.Xaml.XamlType" />-Objekt für den Typ der Elemente in der Auflistung, andernfalls <see langword="null" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt keine Auflistung darstellt.</span><span class="sxs-lookup"><span data-stu-id="f4c49-331">A <see cref="T:System.Xaml.XamlType" /> object for the type of the items in the collection; otherwise, <see langword="null" />, if this <see cref="T:System.Xaml.XamlType" /> does not represent a collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-332">Diese Eigenschaft ist nur relevant, wenn dieses <xref:System.Xaml.XamlType> eine Auflistung darstellt (<xref:System.Xaml.XamlType.IsCollection%2A> ist `true`).</span><span class="sxs-lookup"><span data-stu-id="f4c49-332">This property is only relevant if this <xref:System.Xaml.XamlType> represents a collection (<xref:System.Xaml.XamlType.IsCollection%2A> is `true`).</span></span> <span data-ttu-id="f4c49-333">Die `Items`-Eigenschaft ist eine beliebige Eigenschaft, die Elemente in diesem Typ von Sammlung oder Array enthält.</span><span class="sxs-lookup"><span data-stu-id="f4c49-333">The `Items` property is whatever property holds items in that type of collection or array.</span></span>  
  
 <span data-ttu-id="f4c49-334">Wenn Sie nicht die standardmäßige interne CLR-reflektionstechnik für eine <xref:System.Xaml.XamlType> verwenden, können Aufrufe dieser Eigenschaft <xref:System.Xaml.XamlType.LookupItemType%2A>-über Schreibungen für von <xref:System.Xaml.XamlType> abgeleitete Klassen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-334">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupItemType%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="f4c49-335">Weitere Informationen zu Rückgabe Werten und anderem Verhalten finden Sie in der Dokumentation zu <xref:System.Xaml.XamlType.LookupItemType%2A> für diesen Typ.</span><span class="sxs-lookup"><span data-stu-id="f4c49-335">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupItemType%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType KeyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType KeyType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.KeyType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ KeyType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyType : System.Xaml.XamlType" Usage="System.Xaml.XamlType.KeyType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f4c49-336">Ruft einen Wert ab, der die Typinformationen für die Schlüsseleigenschaft von diesem <see cref="T:System.Xaml.XamlType" />-Objekt enthält, wenn das <see cref="T:System.Xaml.XamlType" />-Objekt ein Wörterbuch darstellt.</span><span class="sxs-lookup"><span data-stu-id="f4c49-336">Gets a value that provides the type information for the key property of this <see cref="T:System.Xaml.XamlType" />, if the <see cref="T:System.Xaml.XamlType" /> represents a dictionary.</span></span></summary>
        <value><span data-ttu-id="f4c49-337">Ein <see cref="T:System.Xaml.XamlType" />-Objekt für den Typ des Schlüssels für die Wörterbuchverwendung, andernfalls <see langword="null" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt kein Wörterbuch darstellt.</span><span class="sxs-lookup"><span data-stu-id="f4c49-337">A <see cref="T:System.Xaml.XamlType" /> object for the type of the key for dictionary usage, otherwise, <see langword="null" />, if this <see cref="T:System.Xaml.XamlType" /> does not represent a dictionary.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-338">Diese Eigenschaft ist nur relevant, wenn dieses <xref:System.Xaml.XamlType> ein Wörterbuch darstellt (<xref:System.Xaml.XamlType.IsDictionary%2A> ist `true`).</span><span class="sxs-lookup"><span data-stu-id="f4c49-338">This property is only relevant if this <xref:System.Xaml.XamlType> represents a dictionary (<xref:System.Xaml.XamlType.IsDictionary%2A> is `true`).</span></span>  
  
 <span data-ttu-id="f4c49-339">Wenn Sie nicht die standardmäßige interne CLR-reflektionstechnik für eine <xref:System.Xaml.XamlType> verwenden, können Aufrufe dieser Eigenschaft <xref:System.Xaml.XamlType.LookupKeyType%2A>-über Schreibungen für von <xref:System.Xaml.XamlType> abgeleitete Klassen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-339">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupKeyType%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="f4c49-340">Weitere Informationen zu Rückgabe Werten und anderem Verhalten finden Sie in der Dokumentation zu <xref:System.Xaml.XamlType.LookupKeyType%2A> für diesen Typ.</span><span class="sxs-lookup"><span data-stu-id="f4c49-340">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupKeyType%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAliasedProperty">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlMember LookupAliasedProperty (System.Xaml.XamlDirective directive);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlMember LookupAliasedProperty(class System.Xaml.XamlDirective directive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAliasedProperty (directive As XamlDirective) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlMember ^ LookupAliasedProperty(System::Xaml::XamlDirective ^ directive);" />
      <MemberSignature Language="F#" Value="abstract member LookupAliasedProperty : System.Xaml.XamlDirective -&gt; System.Xaml.XamlMember&#xA;override this.LookupAliasedProperty : System.Xaml.XamlDirective -&gt; System.Xaml.XamlMember" Usage="xamlType.LookupAliasedProperty directive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directive" Type="System.Xaml.XamlDirective" />
      </Parameters>
      <Docs>
        <param name="directive"><span data-ttu-id="f4c49-341">Die Direktive, für die der mit einem Alias versehene Member gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="f4c49-341">The directive for which to find the aliased member.</span></span></param>
        <summary><span data-ttu-id="f4c49-342">Gibt den XAML-Member zurück, der durch die <see cref="T:System.Xaml.XamlType" />-Klasse mit einem Alias für die XAML-Direktive versehen ist.</span><span class="sxs-lookup"><span data-stu-id="f4c49-342">Returns the XAML member that is aliased to a XAML directive by this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="f4c49-343">Der mit einem Alias versehene Member, sofern gefunden, andernfalls <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-343">The aliased member, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-344">Diese Methode kann aufgerufen werden, wenn ein Aufrufer einen Wert aus <xref:System.Xaml.XamlType.GetAliasedProperty%2A> abruft.</span><span class="sxs-lookup"><span data-stu-id="f4c49-344">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.GetAliasedProperty%2A>.</span></span>  
  
 <span data-ttu-id="f4c49-345">Die Standard Implementierung kann Ergebnisse für die folgenden XAML-Direktiven zurückgeben: `Key`; `Name`; `Uid`; und `xml:lang`.</span><span class="sxs-lookup"><span data-stu-id="f4c49-345">The default implementation can return results for the following XAML directives: `Key`; `Name`; `Uid`; and `xml:lang`.</span></span> <span data-ttu-id="f4c49-346">Werte für diese hängen von der zugrunde liegenden Reflektion ab und geben möglicherweise noch `null` zurück, wenn keine Alias Eigenschaft gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="f4c49-346">Values for these depend on underlying reflection and might still return `null` if no aliased property is found.</span></span>  
  
 <span data-ttu-id="f4c49-347">Überschreiben Sie diese Methode, wenn Sie nicht auf die interne Standard-CLR-Reflektion Vertrauen und Metadaten oder andere Techniken zum Melden der XAML-typsysteminformationen oder der Schema Informationen eines Typs verwenden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-347">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or the schema information of a type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xaml.XamlDirective" />
        <altmember cref="T:System.Xaml.XamlLanguage" />
      </Docs>
    </Member>
    <Member MemberName="LookupAllAttachableMembers">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlMember&gt; LookupAllAttachableMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlMember&gt; LookupAllAttachableMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAllAttachableMembers" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAllAttachableMembers () As IEnumerable(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlMember ^&gt; ^ LookupAllAttachableMembers();" />
      <MemberSignature Language="F#" Value="abstract member LookupAllAttachableMembers : unit -&gt; seq&lt;System.Xaml.XamlMember&gt;&#xA;override this.LookupAllAttachableMembers : unit -&gt; seq&lt;System.Xaml.XamlMember&gt;" Usage="xamlType.LookupAllAttachableMembers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f4c49-348">Gibt einen aufzählbaren Satz zurück, der alle anfügbaren, von diesem <see cref="T:System.Xaml.XamlType" /> verfügbar gemachten Eigenschaften enthält.</span><span class="sxs-lookup"><span data-stu-id="f4c49-348">Returns an enumerable set that contains all attachable properties that are exposed by this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="f4c49-349">Ein aufzählbarer Satz, der 0 (null) oder mehr <see cref="T:System.Xaml.XamlMember" />-Werte enthält, andernfalls <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-349">An enumerable set that contains zero or more <see cref="T:System.Xaml.XamlMember" /> values; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-350">Diese Methode kann aufgerufen werden, wenn ein Aufrufer einen Wert aus <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A> abruft.</span><span class="sxs-lookup"><span data-stu-id="f4c49-350">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A>.</span></span>  
  
 <span data-ttu-id="f4c49-351">Obwohl <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A> eine generische Auflistung zurückgibt, gibt diese `Lookup`-Methode einen generischen Aufzähl baren Satz zurück.</span><span class="sxs-lookup"><span data-stu-id="f4c49-351">Although <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A> returns a generic collection, this `Lookup` method returns a generic enumerable set.</span></span>  
  
 <span data-ttu-id="f4c49-352">Die Standard Implementierung verwendet die interne CLR-Reflektion.</span><span class="sxs-lookup"><span data-stu-id="f4c49-352">The default implementation uses the internal CLR reflection.</span></span> <span data-ttu-id="f4c49-353">Wenn <xref:System.Xaml.XamlType.UnderlyingType%2A> `null` ist, kann die Standard Implementierung <xref:System.Xaml.XamlType.BaseType%2A> verwenden, sofern Sie verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="f4c49-353">When <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`, the default implementation can use <xref:System.Xaml.XamlType.BaseType%2A>, if it is available.</span></span> <span data-ttu-id="f4c49-354">Mit diesem Verhalten wird <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> rekursiv aufgerufen, um einen gültigen Basistyp zu finden, und `null` zurückgegeben, wenn kein gültiger Basistyp vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="f4c49-354">This behavior calls <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> recursively to attempt to find a valid base type and returns `null` if no valid base type exists.</span></span>  
  
 <span data-ttu-id="f4c49-355">Überschreiben Sie diese Methode, wenn Sie nicht auf die interne Standard-CLR-Reflektion Vertrauen und Metadaten oder andere Techniken zum Melden von XAML-typsysteminformationen oder Schema Informationen eines Typs verwenden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-355">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span> <span data-ttu-id="f4c49-356">Eine NULL-Rückgabe sollte für Fälle reserviert werden, in denen Informationen aufgrund fehlender Typsystem-oder reflektionserunterstützung nicht bestimmt werden können.</span><span class="sxs-lookup"><span data-stu-id="f4c49-356">A null return should be reserved for cases where information cannot be determined because of lack of type system or reflection support.</span></span> <span data-ttu-id="f4c49-357">Wenn ein Typ gültig ist und Reflektion oder andere Techniken verfügbar sind, ein Typ aber keine anfügbaren Member hat, sollten Sie stattdessen einen leeren <xref:System.Collections.Generic.IEnumerable%601>-Satz zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="f4c49-357">If a type is valid and reflection or other techniques are available, but a type does not have attachable members, you should instead return an empty <xref:System.Collections.Generic.IEnumerable%601> set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAllMembers">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlMember&gt; LookupAllMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlMember&gt; LookupAllMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAllMembers" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAllMembers () As IEnumerable(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlMember ^&gt; ^ LookupAllMembers();" />
      <MemberSignature Language="F#" Value="abstract member LookupAllMembers : unit -&gt; seq&lt;System.Xaml.XamlMember&gt;&#xA;override this.LookupAllMembers : unit -&gt; seq&lt;System.Xaml.XamlMember&gt;" Usage="xamlType.LookupAllMembers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f4c49-358">Gibt einen aufzählbaren Satz zurück, der alle Member enthält, die von diesem <see cref="T:System.Xaml.XamlType" /> verfügbar gemacht werden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-358">Returns an enumerable set that contains all the members that are exposed by this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="f4c49-359">Ein aufzählbarer Satz, der 0 (null) oder mehr <see cref="T:System.Xaml.XamlMember" />-Werte enthält.</span><span class="sxs-lookup"><span data-stu-id="f4c49-359">An enumerable set that contains zero or more <see cref="T:System.Xaml.XamlMember" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-360">Diese Methode kann aufgerufen werden, wenn ein Aufrufer einen Wert aus <xref:System.Xaml.XamlType.GetAllMembers%2A> abruft.</span><span class="sxs-lookup"><span data-stu-id="f4c49-360">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.GetAllMembers%2A>.</span></span>  
  
 <span data-ttu-id="f4c49-361">Obwohl <xref:System.Xaml.XamlType.GetAllMembers%2A> eine generische Auflistung zurückgibt, gibt diese `Lookup`-Methode einen generischen Aufzähl baren Satz zurück.</span><span class="sxs-lookup"><span data-stu-id="f4c49-361">Although <xref:System.Xaml.XamlType.GetAllMembers%2A> returns a generic collection, this `Lookup` method returns a generic enumerable set.</span></span>  
  
 <span data-ttu-id="f4c49-362">Die Standard Implementierung verwendet die interne CLR-Reflektion.</span><span class="sxs-lookup"><span data-stu-id="f4c49-362">The default implementation uses the internal CLR reflection.</span></span> <span data-ttu-id="f4c49-363">In Fällen, in denen <xref:System.Xaml.XamlType.UnderlyingType%2A> `null` ist, kann die Standard Implementierung <xref:System.Xaml.XamlType.BaseType%2A> verwenden, sofern Sie verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="f4c49-363">For cases where <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`, the default implementation can use <xref:System.Xaml.XamlType.BaseType%2A>, if it is available.</span></span> <span data-ttu-id="f4c49-364">Mit diesem Verhalten wird <xref:System.Xaml.XamlType.LookupAllMembers%2A> rekursiv aufgerufen, um einen gültigen Basistyp zu finden, und `null` zurückgegeben, wenn kein gültiger Basistyp vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="f4c49-364">This behavior calls <xref:System.Xaml.XamlType.LookupAllMembers%2A> recursively to attempt to find a valid base type, and returns `null` if no valid base type exists.</span></span>  
  
 <span data-ttu-id="f4c49-365">Überschreiben Sie diese Methode, wenn Sie nicht auf die interne Standard-CLR-Reflektion Vertrauen und Metadaten oder andere Techniken zum Melden von XAML-typsysteminformationen oder Schema Informationen eines Typs verwenden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-365">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span> <span data-ttu-id="f4c49-366">Eine NULL-Rückgabe sollte für Fälle reserviert werden, in denen Informationen aufgrund fehlender Typsystem-oder reflektionserunterstützung nicht bestimmt werden können.</span><span class="sxs-lookup"><span data-stu-id="f4c49-366">A null return should be reserved for cases where information cannot be determined because of lack of type system or reflection support.</span></span> <span data-ttu-id="f4c49-367">Wenn ein Typ gültig ist, sind Reflektion oder andere Techniken verfügbar. Wenn ein Typ nicht über Member verfügt, sollten Sie stattdessen einen leeren <xref:System.Collections.Generic.IEnumerable%601>-Satz zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="f4c49-367">If a type is valid, reflection or other techniques are available; if a type does not have members, you should instead return an empty <xref:System.Collections.Generic.IEnumerable%601> set.</span></span>  
  
 <span data-ttu-id="f4c49-368">Rückgabewerte für <xref:System.Xaml.XamlType.LookupAllMembers%2A> und <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> sollten sich gegenseitig ausschließen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-368">Return values for <xref:System.Xaml.XamlType.LookupAllMembers%2A> and <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> should be mutually exclusive.</span></span> <span data-ttu-id="f4c49-369">In einer Situation, in der eine Unterstützungs-Typsystem Eigenschaft eine standardmäßige instanzverwendung sowie eine anfügbare Verwendung unterstützen kann, sollte dieser Member als zwei unterschiedliche <xref:System.Xaml.XamlMember>-Werte gemeldet werden, wobei ein Wert in der anfügbaren Liste und ein anderer in der Liste der Standard Mitglieder.</span><span class="sxs-lookup"><span data-stu-id="f4c49-369">If you have a situation where a backing type system property can support a standard instance usage as well as an attachable usage, that member should be reported as two different <xref:System.Xaml.XamlMember> values, with one value appearing in the attachable list and another in the standard members list.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAllowedContentTypes">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; LookupAllowedContentTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; LookupAllowedContentTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAllowedContentTypes" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAllowedContentTypes () As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ LookupAllowedContentTypes();" />
      <MemberSignature Language="F#" Value="abstract member LookupAllowedContentTypes : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;&#xA;override this.LookupAllowedContentTypes : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="xamlType.LookupAllowedContentTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f4c49-370">Gibt eine Liste der Typen zurück, die als <see cref="P:System.Xaml.XamlType.ContentProperty" />-Wert für dieses <see cref="T:System.Xaml.XamlType" />-Objekt verwendbar sind.</span><span class="sxs-lookup"><span data-stu-id="f4c49-370">Returns a list of the types that are usable as the <see cref="P:System.Xaml.XamlType.ContentProperty" /> value for this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="f4c49-371">Eine Liste möglicher Inhaltstypen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-371">A list of possible content types.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-372">Diese Methode kann aufgerufen werden, wenn ein Aufrufer einen Wert aus <xref:System.Xaml.XamlType.AllowedContentTypes%2A> abruft.</span><span class="sxs-lookup"><span data-stu-id="f4c49-372">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.</span></span>  
  
 <span data-ttu-id="f4c49-373">Typen, die als <xref:System.Xaml.XamlType.CanAssignTo%2A> für einen bestimmten Inhaltstyp ausgewertet werden, werden für Zwecke von <xref:System.Xaml.XamlType.AllowedContentTypes%2A> nicht als mehrere Typen betrachtet.</span><span class="sxs-lookup"><span data-stu-id="f4c49-373">Types that evaluate as <xref:System.Xaml.XamlType.CanAssignTo%2A> for a specific content type are not considered multiple types for purposes of <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.</span></span>  
  
 <span data-ttu-id="f4c49-374">In der Standard Implementierung können andere Eigenschaften von <xref:System.Xaml.XamlType> (<xref:System.Xaml.XamlType.ContentWrappers%2A>, <xref:System.Xaml.XamlType.ContentProperty%2A> oder <xref:System.Xaml.XamlType.ItemType%2A>) verwendet werden, um ein Ergebnis zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="f4c49-374">The default implementation can use other properties of <xref:System.Xaml.XamlType> (<xref:System.Xaml.XamlType.ContentWrappers%2A>, <xref:System.Xaml.XamlType.ContentProperty%2A>, or <xref:System.Xaml.XamlType.ItemType%2A>) to obtain a result.</span></span> <span data-ttu-id="f4c49-375">Die `Lookup`-über Schreibungen für die vorherige Eigenschaften Liste können auch in dieser Bestimmung aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-375">The `Lookup` overrides for the preceding property list can also be invoked in this determination.</span></span>  
  
 <span data-ttu-id="f4c49-376">Überschreiben Sie diese Methode, wenn Sie nicht auf die interne Standard-CLR-Reflektion Vertrauen und Metadaten oder andere Techniken zum Melden von XAML-typsysteminformationen oder Schema Informationen eines Typs verwenden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-376">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAttachableMember">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlMember LookupAttachableMember (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlMember LookupAttachableMember(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAttachableMember(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAttachableMember (name As String) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlMember ^ LookupAttachableMember(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member LookupAttachableMember : string -&gt; System.Xaml.XamlMember&#xA;override this.LookupAttachableMember : string -&gt; System.Xaml.XamlMember" Usage="xamlType.LookupAttachableMember name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f4c49-377">Der Name des abzurufenden, anfügbaren Members in der Form <c>ownerTypeName.MemberName</c>.</span><span class="sxs-lookup"><span data-stu-id="f4c49-377">The name of the attachable member to get, in <c>ownerTypeName.MemberName</c> form.</span></span></param>
        <summary><span data-ttu-id="f4c49-378">Gibt einen <see cref="T:System.Xaml.XamlMember" /> für einen bestimmten benannten anfügbaren Member aus diesem <see cref="T:System.Xaml.XamlType" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="f4c49-378">Returns a <see cref="T:System.Xaml.XamlMember" /> for a specific named attachable from this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="f4c49-379">Ein <see cref="T:System.Xaml.XamlMember" />-Objekt für den angeforderten anfügbaren Member; andernfalls <see langword="null" />, wenn kein anfügbarer Member dieses Namens existiert.</span><span class="sxs-lookup"><span data-stu-id="f4c49-379">A <see cref="T:System.Xaml.XamlMember" /> object for the requested attachable member; otherwise, <see langword="null" />, if no attachable member by that name exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-380">Diese Methode kann aufgerufen werden, wenn ein Aufrufer einen Wert aus <xref:System.Xaml.XamlType.GetAttachableMember%2A> abruft.</span><span class="sxs-lookup"><span data-stu-id="f4c49-380">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.GetAttachableMember%2A>.</span></span>  
  
 <span data-ttu-id="f4c49-381">Die Standard Implementierung verwendet die interne CLR-Reflektion.</span><span class="sxs-lookup"><span data-stu-id="f4c49-381">The default implementation uses the internal CLR reflection.</span></span> <span data-ttu-id="f4c49-382">Wenn <xref:System.Xaml.XamlType.UnderlyingType%2A> `null` ist, kann die Standard Implementierung <xref:System.Xaml.XamlType.BaseType%2A> verwenden, sofern Sie verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="f4c49-382">When <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`, the default implementation can use <xref:System.Xaml.XamlType.BaseType%2A>, if it is available.</span></span> <span data-ttu-id="f4c49-383">Mit diesem Verhalten wird <xref:System.Xaml.XamlType.LookupAttachableMember%2A> rekursiv aufgerufen, um einen gültigen Basistyp zu finden, und `null` zurückgegeben, wenn kein gültiger Basistyp vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="f4c49-383">This behavior calls <xref:System.Xaml.XamlType.LookupAttachableMember%2A> recursively to attempt to find a valid base type and returns `null` if no valid base type exists.</span></span>  
  
 <span data-ttu-id="f4c49-384">Überschreiben Sie diese Methode, wenn Sie nicht auf die interne Standard-CLR-Reflektion Vertrauen und Metadaten oder andere Techniken zum Melden von XAML-typsysteminformationen oder Schema Informationen eines Typs verwenden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-384">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f4c49-385"><xref:System.Xaml.XamlType.LookupAttachableMember%2A> ist virtuell und kann daher überschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-385"><xref:System.Xaml.XamlType.LookupAttachableMember%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="f4c49-386">Die außer Kraft Setzung hat die Möglichkeit, die gemeldeten Member eines XAML-Typs zu ändern, um die gemeldeten Member eines XAML-Typs so zu ändern, dass Sie nicht mehr erwartungsgemäß mit den <xref:System.ComponentModel.TypeDescriptor>-`Get*`-Informationen zum zugrunde liegenden CLR-Typ übereinstimmen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-386">The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <xref:System.ComponentModel.TypeDescriptor> `Get*` information about the underlying CLR type.</span></span> <span data-ttu-id="f4c49-387">Verwenden Sie für alle sicherheitskritischen Überprüfungen der Element Berichterstattung stattdessen den zugrunde liegenden CLR-Typ.</span><span class="sxs-lookup"><span data-stu-id="f4c49-387">For any security-critical checks of member reporting, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupBaseType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupBaseType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupBaseType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupBaseType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupBaseType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupBaseType();" />
      <MemberSignature Language="F#" Value="abstract member LookupBaseType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupBaseType : unit -&gt; System.Xaml.XamlType" Usage="xamlType.LookupBaseType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f4c49-388">Gibt das <see cref="T:System.Xaml.XamlType" />-Objekt für den unmittelbaren Basistyp dieses XAML-Typs zurück.</span><span class="sxs-lookup"><span data-stu-id="f4c49-388">Returns the <see cref="T:System.Xaml.XamlType" /> for the immediate base type of this XAML type.</span></span> <span data-ttu-id="f4c49-389">Die Ermittlung dieses Werts basiert auf dem zugrunde liegenden Typ des <see cref="T:System.Xaml.XamlType" />-Objekts und des Schemakontexts.</span><span class="sxs-lookup"><span data-stu-id="f4c49-389">Determination of this value is based on the underlying type of this <see cref="T:System.Xaml.XamlType" /> and schema context.</span></span></summary>
        <returns><span data-ttu-id="f4c49-390">Das <see cref="T:System.Xaml.XamlType" />-Objekt für den unmittelbaren Basistyp dieses XAML-Typs.</span><span class="sxs-lookup"><span data-stu-id="f4c49-390">The <see cref="T:System.Xaml.XamlType" /> for the immediate base type of this XAML type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-391">Diese Methode kann aufgerufen werden, wenn ein Aufrufer einen Wert aus <xref:System.Xaml.XamlType.BaseType%2A> abruft.</span><span class="sxs-lookup"><span data-stu-id="f4c49-391">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.BaseType%2A>.</span></span>  
  
 <span data-ttu-id="f4c49-392">Die Standard Implementierung gibt möglicherweise eine interne Konstante zurück, die die <xref:System.Object> darstellt, wenn <xref:System.Xaml.XamlType.UnderlyingType%2A> `null` ist.</span><span class="sxs-lookup"><span data-stu-id="f4c49-392">The default implementation might return an internal constant that represents the <xref:System.Object> if <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`.</span></span>  
  
 <span data-ttu-id="f4c49-393">Überschreiben Sie diese Methode, wenn Sie nicht auf die interne Standard-CLR-Reflektion Vertrauen und Metadaten oder andere Techniken zum Melden von XAML-typsysteminformationen oder Schema Informationen eines Typs verwenden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-393">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f4c49-394"><xref:System.Xaml.XamlType.LookupBaseType%2A> ist virtuell und kann daher überschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-394"><xref:System.Xaml.XamlType.LookupBaseType%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="f4c49-395">Die außer Kraft Setzung hat die Möglichkeit, die gemeldeten Typinformationen zu einem XAML-Typ zu ändern, um die gemeldeten Typinformationen zu einem XAML-Typ so zu ändern, dass Sie nicht mehr erwartungsgemäß mit den typsysteminformationen des zugrunde liegenden CLR-Typs ausgerichtet werden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-395">The override has the potential (whether for malicious purposes or otherwise) to change the reported type information about a XAML type so that it no longer aligns in an expected way with the type system information of its underlying CLR type.</span></span> <span data-ttu-id="f4c49-396">Verwenden Sie für sicherheitskritische Überprüfungen von Zuweisungs Vorgängen und Zugriff stattdessen den zugrunde liegenden CLR-Typ.</span><span class="sxs-lookup"><span data-stu-id="f4c49-396">For any security-critical checks of assignment operations and access, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupCollectionKind">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlCollectionKind LookupCollectionKind ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Xaml.Schema.XamlCollectionKind LookupCollectionKind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupCollectionKind" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupCollectionKind () As XamlCollectionKind" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlCollectionKind LookupCollectionKind();" />
      <MemberSignature Language="F#" Value="abstract member LookupCollectionKind : unit -&gt; System.Xaml.Schema.XamlCollectionKind&#xA;override this.LookupCollectionKind : unit -&gt; System.Xaml.Schema.XamlCollectionKind" Usage="xamlType.LookupCollectionKind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlCollectionKind</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f4c49-397">Gibt einen Wert der <see cref="T:System.Xaml.Schema.XamlCollectionKind" />-Enumeration zurück, durch den deklariert wird, welcher bestimmte Auflistungstyp von diesem <see cref="T:System.Xaml.XamlType" />-Objekt verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="f4c49-397">Returns a value of the <see cref="T:System.Xaml.Schema.XamlCollectionKind" /> enumeration that declares which specific collection type this <see cref="T:System.Xaml.XamlType" /> uses.</span></span></summary>
        <returns><span data-ttu-id="f4c49-398">Ein Wert der <see cref="T:System.Xaml.Schema.XamlCollectionKind" />-Enumeration.</span><span class="sxs-lookup"><span data-stu-id="f4c49-398">A value of the <see cref="T:System.Xaml.Schema.XamlCollectionKind" /> enumeration.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-399">Diese Methode wird von einer internen privaten Methode aufgerufen (es gibt keine öffentliche `CollectionKind`-oder `GetCollectionKind`-API auf <xref:System.Xaml.XamlType>).</span><span class="sxs-lookup"><span data-stu-id="f4c49-399">This method is invoked by an internal private method (no public `CollectionKind` or `GetCollectionKind` API exists on <xref:System.Xaml.XamlType>).</span></span>  
  
 <span data-ttu-id="f4c49-400">Die Standard Implementierung verwendet die interne CLR-Reflektion.</span><span class="sxs-lookup"><span data-stu-id="f4c49-400">The default implementation uses the internal CLR reflection.</span></span> <span data-ttu-id="f4c49-401">In Fällen, in denen <xref:System.Xaml.XamlType.UnderlyingType%2A> `null` ist, kann die Standard Implementierung <xref:System.Xaml.XamlType.BaseType%2A> verwenden, sofern Sie verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="f4c49-401">For cases where <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`, the default implementation can use <xref:System.Xaml.XamlType.BaseType%2A>, if it is available.</span></span> <span data-ttu-id="f4c49-402">Dieses Verhalten ruft indirekt <xref:System.Xaml.XamlType.LookupCollectionKind%2A> rekursiv auf, um einen gültigen Basistyp zu suchen. Es wird <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType> zurückgegeben, wenn kein gültiger Basistyp vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="f4c49-402">This behavior indirectly calls <xref:System.Xaml.XamlType.LookupCollectionKind%2A> recursively to attempt to find a valid base type; it returns <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType> if no valid base type exists.</span></span> <span data-ttu-id="f4c49-403">Im Allgemeinen versucht die Standard Implementierung, die `Add`-Methode des zugrunde liegenden Typs durch Reflektion zu finden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-403">In general, the default implementation attempts to find the `Add` method of the underlying type by reflection.</span></span> <span data-ttu-id="f4c49-404">Wenn Sie gefunden wird, sind die <xref:System.Reflection.MethodInfo> der `Add`-Methode ausreichend Informationen, um zu bestimmen, welcher <xref:System.Xaml.Schema.XamlCollectionKind>-Wert zurückgegeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="f4c49-404">If found, the <xref:System.Reflection.MethodInfo> of the `Add` method is enough information to determine which <xref:System.Xaml.Schema.XamlCollectionKind> value should be returned.</span></span> <span data-ttu-id="f4c49-405">Andernfalls wird <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType>zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="f4c49-405">Otherwise, it returns <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f4c49-406">Überschreiben Sie diese Methode, wenn Sie nicht auf die interne Standard-CLR-Reflektion Vertrauen und Metadaten oder andere Techniken zum Melden von XAML-typsysteminformationen oder Schema Informationen eines Typs verwenden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-406">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupConstructionRequiresArguments">
      <MemberSignature Language="C#" Value="protected virtual bool LookupConstructionRequiresArguments ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupConstructionRequiresArguments() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupConstructionRequiresArguments" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupConstructionRequiresArguments () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupConstructionRequiresArguments();" />
      <MemberSignature Language="F#" Value="abstract member LookupConstructionRequiresArguments : unit -&gt; bool&#xA;override this.LookupConstructionRequiresArguments : unit -&gt; bool" Usage="xamlType.LookupConstructionRequiresArguments " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f4c49-407">Gibt einen Wert zurück, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt Argumente (generische Einschränkungen für <see langword="x:TypeArguments" />, Initialisierungstext oder andere XAML-Techniken) aufweisen muss, um eine gültige Instanz des Typs zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-407">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> must have arguments (generic constraints through <see langword="x:TypeArguments" />, initialization text, or other XAML techniques) to construct a valid instance of the type.</span></span></summary>
        <returns><span data-ttu-id="f4c49-408"><see langword="true" />, wenn die Erstellung einer Instanz einen Argumentwert erfordert, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-408"><see langword="true" /> if construction of an instance requires some argument value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-409">Diese Methode kann aufgerufen werden, wenn ein Aufrufer einen Wert aus <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A> abruft.</span><span class="sxs-lookup"><span data-stu-id="f4c49-409">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>.</span></span>  
  
 <span data-ttu-id="f4c49-410">Die Standard Implementierung gibt `false` für Typen zurück, die im CLR-Typsystem als Werttypen angesehen werden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-410">The default implementation returns `false` for types considered value types in the CLR type system.</span></span> <span data-ttu-id="f4c49-411">Für andere als Werttypen wird die CLR-Reflektion <xref:System.Reflection.ConstructorInfo> verwendet, um zu bestimmen, ob ein Parameter loser Konstruktor vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="f4c49-411">For other than value types, CLR reflection <xref:System.Reflection.ConstructorInfo> is used to determine whether a parameterless constructor exists.</span></span>  
  
 <span data-ttu-id="f4c49-412">Überschreiben Sie diese Methode, wenn Sie nicht auf die interne Standard-CLR-Reflektion Vertrauen und Metadaten oder andere Techniken zum Melden von XAML-typsysteminformationen oder Schema Informationen eines Typs verwenden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-412">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupContentProperty">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlMember LookupContentProperty ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlMember LookupContentProperty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupContentProperty" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupContentProperty () As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlMember ^ LookupContentProperty();" />
      <MemberSignature Language="F#" Value="abstract member LookupContentProperty : unit -&gt; System.Xaml.XamlMember&#xA;override this.LookupContentProperty : unit -&gt; System.Xaml.XamlMember" Usage="xamlType.LookupContentProperty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f4c49-413">Gibt <see cref="T:System.Xaml.XamlMember" />-Informationen für die Inhaltseigenschaft dieses <see cref="T:System.Xaml.XamlType" />-Objekts zurück.</span><span class="sxs-lookup"><span data-stu-id="f4c49-413">Returns <see cref="T:System.Xaml.XamlMember" /> information for the content property of this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="f4c49-414"><see cref="T:System.Xaml.XamlMember" />-Informationen für die Inhaltseigenschaft dieses <see cref="T:System.Xaml.XamlType" />-Objekts.</span><span class="sxs-lookup"><span data-stu-id="f4c49-414"><see cref="T:System.Xaml.XamlMember" /> information for the content property of this <see cref="T:System.Xaml.XamlType" />.</span></span> <span data-ttu-id="f4c49-415">Kann <see langword="null" /> sein.</span><span class="sxs-lookup"><span data-stu-id="f4c49-415">May be <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-416">Diese Methode kann aufgerufen werden, wenn ein Aufrufer einen Wert aus <xref:System.Xaml.XamlType.ContentProperty%2A> abruft.</span><span class="sxs-lookup"><span data-stu-id="f4c49-416">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.ContentProperty%2A>.</span></span>  
  
 <span data-ttu-id="f4c49-417">Die Standard Implementierung überprüft <xref:System.Windows.Markup.ContentPropertyAttribute> für die Typdefinition.</span><span class="sxs-lookup"><span data-stu-id="f4c49-417">The default implementation checks for <xref:System.Windows.Markup.ContentPropertyAttribute> on the type definition.</span></span> <span data-ttu-id="f4c49-418">Es kann auch <xref:System.Xaml.XamlType.BaseType%2A> für das-Attribut überprüfen, wenn für den unmittelbaren zugrunde liegenden Typ kein Attribut gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="f4c49-418">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="f4c49-419">Wenn diese Überprüfungen keinen Inhaltstyp ermitteln, gibt die Standard Implementierung `null` zurück.</span><span class="sxs-lookup"><span data-stu-id="f4c49-419">If these checks do not discover a content type, the default implementation returns `null`.</span></span>  
  
 <span data-ttu-id="f4c49-420">Überschreiben Sie diese Methode, wenn Sie nicht auf die interne Standard-CLR-Reflektion Vertrauen und Metadaten oder andere Techniken zum Melden von XAML-typsysteminformationen oder Schema Informationen eines Typs verwenden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-420">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupContentWrappers">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; LookupContentWrappers ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; LookupContentWrappers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupContentWrappers" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupContentWrappers () As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ LookupContentWrappers();" />
      <MemberSignature Language="F#" Value="abstract member LookupContentWrappers : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;&#xA;override this.LookupContentWrappers : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="xamlType.LookupContentWrappers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f4c49-421">Ruft eine Liste von <see cref="T:System.Xaml.XamlType" />-Werten ab, die die Inhaltswrapper für dieses <see cref="T:System.Xaml.XamlType" />-Objekt darstellen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-421">Gets a list of <see cref="T:System.Xaml.XamlType" /> values that represent the content wrappers for this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="f4c49-422">Eine Liste von <see cref="T:System.Xaml.XamlType" />-Werten, die die Inhaltswrapper für dieses <see cref="T:System.Xaml.XamlType" />-Objekt darstellen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-422">A list of <see cref="T:System.Xaml.XamlType" /> values that represent the content wrappers for this <see cref="T:System.Xaml.XamlType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-423">Ein Inhalts Wrapper ist eine Klasse, die den inhaltsammlungstyp darstellt, wenn die in dieser Auflistung verwendeten Typen nicht an das Typsystem zusammenhängend sind.</span><span class="sxs-lookup"><span data-stu-id="f4c49-423">A content wrapper is a class that represents the content collection type when the types that are used in that collection are not contiguous to the type system.</span></span> <span data-ttu-id="f4c49-424">Es wird erwartet, dass die Typen der Sammel Elemente für den Inhalts Wrapper in gewisser Weise über <xref:System.Object> oder ein neutrales Objekt Äquivalent hinaus begrenzt sind.</span><span class="sxs-lookup"><span data-stu-id="f4c49-424">The types of collection items for the content wrapper are expected to be limited in some manner beyond <xref:System.Object> or a neutral object equivalent.</span></span> <span data-ttu-id="f4c49-425">Diese Einschränkung wird jedoch nur durch das Design oder den Zweck der Eigenschaften erzwungen, die diesen Typ verwenden, nicht vom Typsystem.</span><span class="sxs-lookup"><span data-stu-id="f4c49-425">However, this limitation is only enforced by the design or purpose of the properties that use that type, and not by the type system.</span></span> <span data-ttu-id="f4c49-426">Für einen Typ können mehrere Inhalts Wrapper vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="f4c49-426">More than one content wrapper can exist on a type.</span></span>  
  
 <span data-ttu-id="f4c49-427">Eine Beispiel Klasse und ein Szenario aus der WPF-XAML-Implementierung finden Sie unter <xref:System.Windows.Documents.InlineCollection>.</span><span class="sxs-lookup"><span data-stu-id="f4c49-427">For an example class and scenario from the WPF XAML implementation, see <xref:System.Windows.Documents.InlineCollection>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupCustomAttributeProvider">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupCustomAttributeProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupCustomAttributeProvider () As ICustomAttributeProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::ICustomAttributeProvider ^ LookupCustomAttributeProvider();" />
      <MemberSignature Language="F#" Value="abstract member LookupCustomAttributeProvider : unit -&gt; System.Reflection.ICustomAttributeProvider&#xA;override this.LookupCustomAttributeProvider : unit -&gt; System.Reflection.ICustomAttributeProvider" Usage="xamlType.LookupCustomAttributeProvider " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ICustomAttributeProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f4c49-428">Gibt bei der Implementierung in einer abgeleiteten Klasse eine <see cref="T:System.Reflection.ICustomAttributeProvider" />-Implementierung zurück.</span><span class="sxs-lookup"><span data-stu-id="f4c49-428">When implemented in a derived class, returns an <see cref="T:System.Reflection.ICustomAttributeProvider" /> implementation.</span></span></summary>
        <returns><span data-ttu-id="f4c49-429">Eine <see cref="T:System.Reflection.ICustomAttributeProvider" />-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="f4c49-429">An <see cref="T:System.Reflection.ICustomAttributeProvider" /> implementation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-430">Überschreiben Sie diese Methode, um die interne Reflektion mit einer alternativen Methode zum Abrufen von CLR-Attributwerten bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-430">Override this method to provide the internal reflection with an alternative way to obtain CLR attribute values.</span></span> <span data-ttu-id="f4c49-431">Wenn keine außer Kraft Setzung vorhanden ist, verwendet der interne Reflektor typische CLR-reflektionslogik.</span><span class="sxs-lookup"><span data-stu-id="f4c49-431">In absence of an override, the internal reflector uses typical CLR reflection logic.</span></span>  
  
 <span data-ttu-id="f4c49-432">Die Standardimplementierung gibt `null` zurück.</span><span class="sxs-lookup"><span data-stu-id="f4c49-432">The default implementation returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupDeferringLoader">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupDeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupDeferringLoader () As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ LookupDeferringLoader();" />
      <MemberSignature Language="F#" Value="abstract member LookupDeferringLoader : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;&#xA;override this.LookupDeferringLoader : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;" Usage="xamlType.LookupDeferringLoader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f4c49-433">Gibt ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt zurück, das für verzögertes Laden von in XAML deklarierten Objekten verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="f4c49-433">Returns a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which is used for deferred loading of XAML-declared objects.</span></span></summary>
        <returns><span data-ttu-id="f4c49-434">Ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, der eine <see cref="T:System.Xaml.XamlDeferringLoader" />-Einschränkung für den generischen Typ besitzt.</span><span class="sxs-lookup"><span data-stu-id="f4c49-434">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> that has a <see cref="T:System.Xaml.XamlDeferringLoader" /> constraint on the generic.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-435">Diese Methode kann aufgerufen werden, wenn ein Aufrufer einen Wert aus <xref:System.Xaml.XamlType.DeferringLoader%2A> abruft.</span><span class="sxs-lookup"><span data-stu-id="f4c49-435">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.DeferringLoader%2A>.</span></span> <span data-ttu-id="f4c49-436">Überschreiben Sie diese Methode, wenn <xref:System.Xaml.XamlType.DeferringLoader%2A> einen anderen Wert zurückgeben soll, als durch die standardmäßige interne Reflektion aktiviert ist, und stellen Sie auch benutzerdefinierte <xref:System.Xaml.Schema.XamlTypeInvoker>-Informationen bereit.</span><span class="sxs-lookup"><span data-stu-id="f4c49-436">Override this method if you want <xref:System.Xaml.XamlType.DeferringLoader%2A> to return a different value than is enabled by default internal reflection and are also providing custom <xref:System.Xaml.Schema.XamlTypeInvoker> information.</span></span>  
  
 <span data-ttu-id="f4c49-437">Die Standard Implementierung gibt ein-Objekt auf der Basis von Lese <xref:System.Windows.Markup.XamlDeferLoadAttribute> zurück.</span><span class="sxs-lookup"><span data-stu-id="f4c49-437">The default implementation returns an object on the basis of reading <xref:System.Windows.Markup.XamlDeferLoadAttribute>.</span></span> <span data-ttu-id="f4c49-438">Es kann auch <xref:System.Xaml.XamlType.BaseType%2A> für das-Attribut überprüfen, wenn für den unmittelbaren zugrunde liegenden Typ kein Attribut gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="f4c49-438">It can also  check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="f4c49-439">Wenn ein Wert nicht verfügbar ist, gibt diese Methode `null` zurück.</span><span class="sxs-lookup"><span data-stu-id="f4c49-439">If a value is unavailable, this method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupInvoker">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlTypeInvoker LookupInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlTypeInvoker LookupInvoker() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupInvoker" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupInvoker () As XamlTypeInvoker" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlTypeInvoker ^ LookupInvoker();" />
      <MemberSignature Language="F#" Value="abstract member LookupInvoker : unit -&gt; System.Xaml.Schema.XamlTypeInvoker&#xA;override this.LookupInvoker : unit -&gt; System.Xaml.Schema.XamlTypeInvoker" Usage="xamlType.LookupInvoker " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlTypeInvoker</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f4c49-440">Gibt einen <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> zurück, der diesem <see cref="T:System.Xaml.XamlType" /> zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="f4c49-440">Returns a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> that is associated with this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="f4c49-441">Die <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />-Informationen für diesen <see cref="T:System.Xaml.XamlType" />, andernfalls <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-441">The <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> information for this <see cref="T:System.Xaml.XamlType" />; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-442">Diese Methode kann durch Aufrufe von <xref:System.Xaml.XamlType.Invoker%2A> aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-442">This method can be invoked by calls to <xref:System.Xaml.XamlType.Invoker%2A>.</span></span>  
  
 <span data-ttu-id="f4c49-443">Die Standard Implementierung erfordert nicht, dass ein <xref:System.Xaml.XamlType> mithilfe eines Konstruktors erstellt wird, der eine anfängliche <xref:System.Xaml.Schema.XamlTypeInvoker> übergibt.</span><span class="sxs-lookup"><span data-stu-id="f4c49-443">The default implementation does not require that a <xref:System.Xaml.XamlType> be constructed by using one of the constructors that pass an initial <xref:System.Xaml.Schema.XamlTypeInvoker>.</span></span> <span data-ttu-id="f4c49-444">Für den <xref:System.Xaml.XamlType> muss jedoch ein <xref:System.Xaml.XamlType.UnderlyingType%2A>-Wert vorhanden sein. Andernfalls gibt die Standard Implementierung `null` zurück.</span><span class="sxs-lookup"><span data-stu-id="f4c49-444">However, an <xref:System.Xaml.XamlType.UnderlyingType%2A> value must exist for the <xref:System.Xaml.XamlType>; otherwise, the default implementation returns `null`.</span></span>  
  
 <span data-ttu-id="f4c49-445">Überschreiben Sie diese Methode, wenn Sie auch eine abgeleitete Klasse aus <xref:System.Xaml.Schema.XamlTypeInvoker> erstellen und die abgeleitete Klasse zurückgeben möchten.</span><span class="sxs-lookup"><span data-stu-id="f4c49-445">Override this method if you also create a derived class from <xref:System.Xaml.Schema.XamlTypeInvoker> and intend to return the derived class.</span></span> <span data-ttu-id="f4c49-446">Wenn Sie `null` zurückgeben, gibt <xref:System.Xaml.XamlType.Invoker%2A> <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=nameWithType> an Aufrufer zurück.</span><span class="sxs-lookup"><span data-stu-id="f4c49-446">If you return `null`, <xref:System.Xaml.XamlType.Invoker%2A> returns <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=nameWithType> to callers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsAmbient">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsAmbient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsAmbient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsAmbient" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsAmbient () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsAmbient();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsAmbient : unit -&gt; bool&#xA;override this.LookupIsAmbient : unit -&gt; bool" Usage="xamlType.LookupIsAmbient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f4c49-447">Gibt einen Wert zurück, der angibt, ob dieser <see cref="T:System.Xaml.XamlType" /> einen Umgebungstyp gemäß XAML-Definition darstellt.</span><span class="sxs-lookup"><span data-stu-id="f4c49-447">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents an ambient type, as per the XAML definition.</span></span></summary>
        <returns><span data-ttu-id="f4c49-448"><see langword="true" />, wenn das <see cref="T:System.Xaml.XamlType" />-Objekt einen Umgebungstyp darstellt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-448"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents an ambient type; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-449">Diese Methode kann durch Aufrufe von <xref:System.Xaml.XamlType.IsAmbient%2A> aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-449">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsAmbient%2A>.</span></span>  
  
 <span data-ttu-id="f4c49-450">Die Standard Implementierung verwendet die CLR-Reflektion für die <xref:System.Xaml.XamlType.UnderlyingType%2A> und kann die Basis Typen überprüfen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-450">The default implementation uses CLR reflection on the <xref:System.Xaml.XamlType.UnderlyingType%2A> and can check the base types.</span></span> <span data-ttu-id="f4c49-451">Diese Implementierung überprüft die <xref:System.Windows.Markup.AmbientAttribute>, die auf die Definition des entsprechenden Typs auf Klassenebene angewendet wird, und gibt in diesem Fall `true` zurück.</span><span class="sxs-lookup"><span data-stu-id="f4c49-451">This implementation checks for the <xref:System.Windows.Markup.AmbientAttribute> that is applied to the relevant type's definition at the class level and returns `true` in this case.</span></span> <span data-ttu-id="f4c49-452">Alle anderen Fälle geben `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="f4c49-452">All other cases return `false`.</span></span>  
  
 <span data-ttu-id="f4c49-453">Überschreiben Sie diese Methode, wenn <xref:System.Xaml.XamlType.IsAmbient%2A> einen anderen Wert zurückgeben soll, als durch die standardmäßige interne Reflektion aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="f4c49-453">Override this method if you want <xref:System.Xaml.XamlType.IsAmbient%2A> to return a different value than is enabled by default internal reflection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsConstructible">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsConstructible ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsConstructible() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsConstructible" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsConstructible () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsConstructible();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsConstructible : unit -&gt; bool&#xA;override this.LookupIsConstructible : unit -&gt; bool" Usage="xamlType.LookupIsConstructible " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f4c49-454">Gibt einen Wert zurück, der angibt, ob dieser <see cref="T:System.Xaml.XamlType" /> einen erstellbaren Typ gemäß XAML-Definition darstellt.</span><span class="sxs-lookup"><span data-stu-id="f4c49-454">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a constructible type, as per the XAML definition.</span></span></summary>
        <returns><span data-ttu-id="f4c49-455"><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen erstellbaren Typ darstellt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-455"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a constructible type; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-456">Diese Methode kann durch Aufrufe von <xref:System.Xaml.XamlType.IsConstructible%2A> aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-456">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsConstructible%2A>.</span></span>  
  
 <span data-ttu-id="f4c49-457">Die Standard Implementierung verwendet die CLR-Reflektion für die <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span><span class="sxs-lookup"><span data-stu-id="f4c49-457">The default implementation uses CLR reflection on the <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span></span> <span data-ttu-id="f4c49-458">Der Typ muss "konkret", "Non-netsted" und "Closed" sein.</span><span class="sxs-lookup"><span data-stu-id="f4c49-458">The type must be concrete, non-nested, and closed.</span></span> <span data-ttu-id="f4c49-459">Die Standard Implementierung überprüft, ob der Typ ein Werttyp und die Rückgabe von <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A> ist.</span><span class="sxs-lookup"><span data-stu-id="f4c49-459">The default implementation checks whether the type is a value type and the return of <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>.</span></span> <span data-ttu-id="f4c49-460">Bei einem NULL-<xref:System.Xaml.XamlType.UnderlyingType%2A> gibt diese Methode `true` zurück.</span><span class="sxs-lookup"><span data-stu-id="f4c49-460">For a null <xref:System.Xaml.XamlType.UnderlyingType%2A>, this method returns `true`.</span></span>  
  
 <span data-ttu-id="f4c49-461">Überschreiben Sie diese Methode, wenn <xref:System.Xaml.XamlType.IsConstructible%2A> einen anderen Wert zurückgeben soll, als durch die standardmäßige interne Reflektion aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="f4c49-461">Override this method if you want <xref:System.Xaml.XamlType.IsConstructible%2A> to return a different value than is enabled by default internal reflection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsMarkupExtension">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsMarkupExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsMarkupExtension() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsMarkupExtension" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsMarkupExtension () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsMarkupExtension();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsMarkupExtension : unit -&gt; bool&#xA;override this.LookupIsMarkupExtension : unit -&gt; bool" Usage="xamlType.LookupIsMarkupExtension " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f4c49-462">Gibt einen Wert zurück, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt eine Markuperweiterung darstellt.</span><span class="sxs-lookup"><span data-stu-id="f4c49-462">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a markup extension.</span></span></summary>
        <returns><span data-ttu-id="f4c49-463"><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt eine Markuperweiterung darstellt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-463"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a markup extension; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-464">Diese Methode kann durch Aufrufe von <xref:System.Xaml.XamlType.IsMarkupExtension%2A> aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-464">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.</span></span>  
  
 <span data-ttu-id="f4c49-465">Die Standard Implementierung besteht nur aus folgendem:</span><span class="sxs-lookup"><span data-stu-id="f4c49-465">The default implementation consists only of this call:</span></span>  
  
 `return CanAssignTo(XamlLanguage.MarkupExtension);`  
  
 <span data-ttu-id="f4c49-466">Überschreiben Sie diese Methode, wenn Sie <xref:System.Xaml.XamlType.IsMarkupExtension%2A> andere Logik verwenden möchten.</span><span class="sxs-lookup"><span data-stu-id="f4c49-466">Override this method if you want <xref:System.Xaml.XamlType.IsMarkupExtension%2A> to use different logic.</span></span>  
  
 <span data-ttu-id="f4c49-467">In XAML-Spezifikations Begriffen muss dieser Typ `x:MarkupExtension` zugewiesen werden, damit `true` für <xref:System.Xaml.XamlType.IsMarkupExtension%2A> zurückgegeben werden kann.</span><span class="sxs-lookup"><span data-stu-id="f4c49-467">In XAML specification terms, this type must be assignable to `x:MarkupExtension` in order to return `true` for <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsNameScope">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsNameScope ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsNameScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsNameScope" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsNameScope () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsNameScope();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsNameScope : unit -&gt; bool&#xA;override this.LookupIsNameScope : unit -&gt; bool" Usage="xamlType.LookupIsNameScope " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f4c49-468">Gibt einen Wert zurück, der angibt, ob dieser <see cref="T:System.Xaml.XamlType" /> einen XAML-Namescope gemäß XAML-Definition darstellt.</span><span class="sxs-lookup"><span data-stu-id="f4c49-468">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a XAML namescope, as per the XAML definition.</span></span></summary>
        <returns><span data-ttu-id="f4c49-469"><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen XAML-Namescope darstellt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-469"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a XAML namescope; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-470">Diese Methode kann durch Aufrufe von <xref:System.Xaml.XamlType.IsNameScope%2A> aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-470">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsNameScope%2A>.</span></span>  
  
 <span data-ttu-id="f4c49-471">Die Standard Implementierung bewirkt, dass ein <xref:System.Xaml.XamlType.CanAssignTo%2A>-Aufrufes indirekt für den-Typ <xref:System.Windows.Markup.INameScope> aufruft.</span><span class="sxs-lookup"><span data-stu-id="f4c49-471">The default implementation makes a <xref:System.Xaml.XamlType.CanAssignTo%2A> call indirectly against the type <xref:System.Windows.Markup.INameScope>.</span></span> <span data-ttu-id="f4c49-472"><xref:System.Windows.Markup.INameScope> ist eine Schnittstelle, die in der Assembly "WindowsBase. dll" definiert ist.</span><span class="sxs-lookup"><span data-stu-id="f4c49-472"><xref:System.Windows.Markup.INameScope> is an interface that is defined in the assembly WindowsBase.dll.</span></span> <span data-ttu-id="f4c49-473">Diese Vorgehensweise für die XAML-Namescope-Identifikation wird sowohl von WPF als auch von Windows Workflow Foundation-Implementierungen von XAML verwendet.</span><span class="sxs-lookup"><span data-stu-id="f4c49-473">This technique for XAML namescope identification is used both by WPF and Windows Workflow Foundation implementations of XAML.</span></span>  
  
 <span data-ttu-id="f4c49-474">Überschreiben Sie diese Methode, wenn Sie <xref:System.Xaml.XamlType.IsNameScope%2A> andere Logik verwenden möchten.</span><span class="sxs-lookup"><span data-stu-id="f4c49-474">Override this method if you want <xref:System.Xaml.XamlType.IsNameScope%2A> to use different logic.</span></span>  
  
 <span data-ttu-id="f4c49-475">Ein XAML-Namescope erzwingt die namens Eindeutigkeit der Eigenschaft oder Eigenschaften, die für `x:Name` @ no__t-1 @ no__t-2 verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-475">A XAML namescope enforces the name uniqueness of the property or properties that are used for `x:Name` / `[name property]`.</span></span> <span data-ttu-id="f4c49-476">Wenn <xref:System.Xaml.XamlType.IsNameScope%2A> `true` ist, sollte ein Mechanismus für die Erzwingung der Eindeutigkeit vorhanden sein, und Sie sollten aus der Perspektive dieses Typs auswerten, der einen XAML-Namescope besitzt.</span><span class="sxs-lookup"><span data-stu-id="f4c49-476">If <xref:System.Xaml.XamlType.IsNameScope%2A> is `true`, then some mechanism for enforcing uniqueness should exist and should evaluate from the perspective of this type owning a XAML namescope.</span></span> <span data-ttu-id="f4c49-477">Der XAML-Namespace wird dann auf den Inhalt des Typs ausgedehnt, bis ein anderer durch XAML-Namescope ermittelter Typ gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="f4c49-477">The XAML namescope then extends to the content of the type until another XAML namescope owning type is encountered.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlObjectWriter.RootNameScope" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsNullable">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsNullable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsNullable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsNullable" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsNullable () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsNullable();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsNullable : unit -&gt; bool&#xA;override this.LookupIsNullable : unit -&gt; bool" Usage="xamlType.LookupIsNullable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f4c49-478">Gibt einen Wert zurück, der angibt, ob dieser <see cref="T:System.Xaml.XamlType" /> einen Nullable-Typ gemäß XAML-Definition darstellt.</span><span class="sxs-lookup"><span data-stu-id="f4c49-478">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a nullable type, as per the XAML definition.</span></span></summary>
        <returns><span data-ttu-id="f4c49-479"><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen Nullable-Typ darstellt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-479"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a nullable type; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-480">Diese Methode kann durch Aufrufe von <xref:System.Xaml.XamlType.IsNullable%2A> aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-480">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsNullable%2A>.</span></span>  
  
 <span data-ttu-id="f4c49-481">Die Standard Implementierung trifft basierend auf dem CLR-Kernbibliothek-Prinzip, das NULL-Werte zulässt, eine Entscheidung, die auf <xref:System.Xaml.XamlType.UnderlyingType%2A> überprüft wird.</span><span class="sxs-lookup"><span data-stu-id="f4c49-481">The default implementation makes a determination based on the CLR core library nullable concept, checked against <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span></span> <span data-ttu-id="f4c49-482">Bei einem NULL-<xref:System.Xaml.XamlType.UnderlyingType%2A> wird `true` zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="f4c49-482">For a null <xref:System.Xaml.XamlType.UnderlyingType%2A>, it returns `true`.</span></span>  
  
 <span data-ttu-id="f4c49-483">Überschreiben Sie diese Methode, wenn Sie <xref:System.Xaml.XamlType.IsNullable%2A> andere Logik verwenden möchten.</span><span class="sxs-lookup"><span data-stu-id="f4c49-483">Override this method if you want <xref:System.Xaml.XamlType.IsNullable%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsPublic">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsPublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsPublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsPublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsPublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsPublic();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsPublic : unit -&gt; bool&#xA;override this.LookupIsPublic : unit -&gt; bool" Usage="xamlType.LookupIsPublic " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f4c49-484">Gibt einen Wert zurück, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen öffentlichen Typ im relevanten Typsystem darstellt.</span><span class="sxs-lookup"><span data-stu-id="f4c49-484">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a public type in the relevant type system.</span></span></summary>
        <returns><span data-ttu-id="f4c49-485"><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen öffentlichen Typ darstellt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-485"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a public type; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-486">Diese Methode kann durch Aufrufe von <xref:System.Xaml.XamlType.IsPublic%2A> aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-486">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsPublic%2A>.</span></span>  
  
 <span data-ttu-id="f4c49-487">Die Standard Implementierung verwendet die CLR-Reflektion für eine nicht-NULL-<xref:System.Xaml.XamlType.UnderlyingType%2A>.</span><span class="sxs-lookup"><span data-stu-id="f4c49-487">The default implementation uses CLR reflection against a non-null <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span></span> <span data-ttu-id="f4c49-488">Bei einem NULL-<xref:System.Xaml.XamlType.UnderlyingType%2A> wird `true` zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="f4c49-488">For a null <xref:System.Xaml.XamlType.UnderlyingType%2A>, it returns `true`.</span></span>  
  
 <span data-ttu-id="f4c49-489">Überschreiben Sie diese Methode, wenn Sie <xref:System.Xaml.XamlType.IsPublic%2A> andere Logik verwenden möchten.</span><span class="sxs-lookup"><span data-stu-id="f4c49-489">Override this method if you want <xref:System.Xaml.XamlType.IsPublic%2A> to use different logic.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f4c49-490"><xref:System.Xaml.XamlType.LookupIsPublic%2A> ist virtuell und kann daher überschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-490"><xref:System.Xaml.XamlType.LookupIsPublic%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="f4c49-491">Die außer Kraft Setzung hat die Möglichkeit, die gemeldeten Zugriffs Informationen zu einem XAML-Typ zu ändern, um die gemeldeten Zugriffs Informationen zu einem XAML-Typ so zu ändern, dass Sie nicht mehr erwartungsgemäß mit dem Typsystem oder den Zugriffs Informationen des zugrunde liegenden CLR-Typs ausgerichtet werden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-491">The override has the potential (whether for malicious purposes or otherwise) to change the reported access information about a XAML type so that it no longer aligns in an expected way with the type system or access information of its underlying CLR type.</span></span> <span data-ttu-id="f4c49-492">Verwenden Sie für sicherheitskritische Überprüfungen von Zuweisungs Vorgängen und Zugriff stattdessen den zugrunde liegenden CLR-Typ.</span><span class="sxs-lookup"><span data-stu-id="f4c49-492">For any security-critical checks of assignment operations and access, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsUnknown">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsUnknown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsUnknown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsUnknown" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsUnknown () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsUnknown();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsUnknown : unit -&gt; bool&#xA;override this.LookupIsUnknown : unit -&gt; bool" Usage="xamlType.LookupIsUnknown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f4c49-493">Gibt einen Wert zurück, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen Typ darstellt, der nicht im zugrunde liegenden Typsystem aufgelöst werden kann.</span><span class="sxs-lookup"><span data-stu-id="f4c49-493">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a type that cannot be resolved in the underlying type system.</span></span></summary>
        <returns><span data-ttu-id="f4c49-494"><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen nicht auflösbaren Typ darstellt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-494"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a nonresolvable type; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-495">Diese Methode kann durch Aufrufe von <xref:System.Xaml.XamlType.IsUnknown%2A> aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-495">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="f4c49-496">Die Standard Implementierung kann CLR-Reflektion verwenden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-496">The default implementation can use CLR reflection.</span></span> <span data-ttu-id="f4c49-497">Bei einem NULL-<xref:System.Xaml.XamlType.UnderlyingType%2A> wird `true` zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="f4c49-497">For a null <xref:System.Xaml.XamlType.UnderlyingType%2A>, it returns `true`.</span></span>  
  
 <span data-ttu-id="f4c49-498">Überschreiben Sie diese Methode, wenn Sie <xref:System.Xaml.XamlType.IsUnknown%2A> andere Logik verwenden möchten.</span><span class="sxs-lookup"><span data-stu-id="f4c49-498">Override this method if you want <xref:System.Xaml.XamlType.IsUnknown%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsWhitespaceSignificantCollection">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsWhitespaceSignificantCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsWhitespaceSignificantCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsWhitespaceSignificantCollection () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsWhitespaceSignificantCollection();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsWhitespaceSignificantCollection : unit -&gt; bool&#xA;override this.LookupIsWhitespaceSignificantCollection : unit -&gt; bool" Usage="xamlType.LookupIsWhitespaceSignificantCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f4c49-499">Gibt einen Wert zurück, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt eine leerraumsignifikante Auflistung gemäß der XML-Definition darstellt.</span><span class="sxs-lookup"><span data-stu-id="f4c49-499">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a whitespace significant collection, as per the XML definition.</span></span></summary>
        <returns><span data-ttu-id="f4c49-500"><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt eine leerraumsignifikante Auflistung darstellt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-500"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a white-space significant collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-501">Diese Methode kann durch Aufrufe von <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A> aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-501">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A>.</span></span>  
  
 <span data-ttu-id="f4c49-502">Die Standard Implementierung gibt einen Wert zurück, der auf dem Lesen <xref:System.Windows.Markup.WhitespaceSignificantCollectionAttribute> basiert.</span><span class="sxs-lookup"><span data-stu-id="f4c49-502">The default implementation returns a value based on reading <xref:System.Windows.Markup.WhitespaceSignificantCollectionAttribute>.</span></span> <span data-ttu-id="f4c49-503">Außerdem kann die <xref:System.Xaml.XamlType.BaseType%2A> für das-Attribut überprüft werden, wenn für den unmittelbaren zugrunde liegenden Typ kein Attribut gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="f4c49-503">It can also check the <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="f4c49-504">Wenn kein Wert verfügbar ist, wird `false` zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="f4c49-504">If a value is not available, it returns `false`.</span></span>  
  
 <span data-ttu-id="f4c49-505">Überschreiben Sie diese Methode, wenn Sie <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A> andere Logik verwenden möchten.</span><span class="sxs-lookup"><span data-stu-id="f4c49-505">Override this method if you want <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsXData">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsXData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsXData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsXData" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsXData () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsXData();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsXData : unit -&gt; bool&#xA;override this.LookupIsXData : unit -&gt; bool" Usage="xamlType.LookupIsXData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f4c49-506">Gibt einen Wert zurück, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt XML-<see langword="XDATA" /> gemäß XAML-Definition darstellt.</span><span class="sxs-lookup"><span data-stu-id="f4c49-506">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents XML <see langword="XDATA" />, as per the XAML definition.</span></span></summary>
        <returns><span data-ttu-id="f4c49-507"><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt <see langword="XDATA" /> darstellt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-507"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents <see langword="XDATA" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-508">Diese Methode kann durch Aufrufe von <xref:System.Xaml.XamlType.IsXData%2A> aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-508">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsXData%2A>.</span></span>  
  
 <span data-ttu-id="f4c49-509">Die Standard Implementierung bewirkt, dass ein <xref:System.Xaml.XamlType.CanAssignTo%2A>-Aufrufes indirekt für den-Typ <xref:System.Xml.Serialization.IXmlSerializable> aufruft.</span><span class="sxs-lookup"><span data-stu-id="f4c49-509">The default implementation makes a <xref:System.Xaml.XamlType.CanAssignTo%2A> call indirectly against the type <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 <span data-ttu-id="f4c49-510">Überschreiben Sie diese Methode, wenn Sie <xref:System.Xaml.XamlType.IsXData%2A> andere Logik verwenden möchten.</span><span class="sxs-lookup"><span data-stu-id="f4c49-510">Override this method if you want <xref:System.Xaml.XamlType.IsXData%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupItemType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupItemType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupItemType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupItemType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupItemType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupItemType();" />
      <MemberSignature Language="F#" Value="abstract member LookupItemType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupItemType : unit -&gt; System.Xaml.XamlType" Usage="xamlType.LookupItemType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f4c49-511">Gibt einen Wert zurück, der die Typinformationen für die <see langword="Items" />-Eigenschaft dieses <see cref="T:System.Xaml.XamlType" />-Objekts enthält.</span><span class="sxs-lookup"><span data-stu-id="f4c49-511">Returns a value that provides the type information for the <see langword="Items" /> property of this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="f4c49-512">Ein <see cref="T:System.Xaml.XamlType" />-Objekt für den Typ der Elemente in der Auflistung, andernfalls <see langword="null" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt keine Auflistung darstellt</span><span class="sxs-lookup"><span data-stu-id="f4c49-512">A <see cref="T:System.Xaml.XamlType" /> object for the type of the items in the collection; otherwise, <see langword="null" /> if this <see cref="T:System.Xaml.XamlType" /> does not represent a collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-513">Diese Methode kann durch Aufrufe von <xref:System.Xaml.XamlType.ItemType%2A> aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-513">This method can be invoked by calls to <xref:System.Xaml.XamlType.ItemType%2A>.</span></span>  
  
 <span data-ttu-id="f4c49-514">Die Standard Implementierung kann CLR-reflektionskonzepte verwenden, wie z. b. das Überprüfen einer `Add`-Methode durch <xref:System.Reflection.MethodInfo> und die Verwendung der <xref:System.Reflection.ParameterInfo>; Überprüfen von <xref:System.Xaml.XamlType.IsArray%2A>; und überprüfen Sie <xref:System.Xaml.XamlType.BaseType%2A>, und versuchen Sie, die gleiche Logik zu testen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-514">The default implementation can use CLR reflection concepts, such as checking for an `Add` method by <xref:System.Reflection.MethodInfo> and using the <xref:System.Reflection.ParameterInfo>; checking <xref:System.Xaml.XamlType.IsArray%2A>; and checking <xref:System.Xaml.XamlType.BaseType%2A> and trying the same logic there.</span></span>  
  
 <span data-ttu-id="f4c49-515">Überschreiben Sie diese Methode, wenn Sie <xref:System.Xaml.XamlType.ItemType%2A> andere Logik verwenden möchten.</span><span class="sxs-lookup"><span data-stu-id="f4c49-515">Override this method if you want <xref:System.Xaml.XamlType.ItemType%2A> to use different logic.</span></span> <span data-ttu-id="f4c49-516">Fälle, in denen <xref:System.Xaml.XamlType.LookupCollectionKind%2A> zurückgibt <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType> sollte `null` zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="f4c49-516">Cases where <xref:System.Xaml.XamlType.LookupCollectionKind%2A> returns <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType> should return `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupKeyType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupKeyType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupKeyType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupKeyType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupKeyType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupKeyType();" />
      <MemberSignature Language="F#" Value="abstract member LookupKeyType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupKeyType : unit -&gt; System.Xaml.XamlType" Usage="xamlType.LookupKeyType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f4c49-517">Gibt einen Wert zurück, der die Typinformationen für die Schlüsseleigenschaft von diesem <see cref="T:System.Xaml.XamlType" />-Objekt enthält, wenn das <see cref="T:System.Xaml.XamlType" />-Objekt ein Wörterbuch darstellt.</span><span class="sxs-lookup"><span data-stu-id="f4c49-517">Returns a value that provides the type information for the key property of this <see cref="T:System.Xaml.XamlType" />, if the <see cref="T:System.Xaml.XamlType" /> represents a dictionary.</span></span></summary>
        <returns><span data-ttu-id="f4c49-518">Ein <see cref="T:System.Xaml.XamlType" />-Objekt für den Typ des Schlüssels für die Wörterbuchverwendung oder <see langword="null" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt kein Wörterbuch darstellt.</span><span class="sxs-lookup"><span data-stu-id="f4c49-518">A <see cref="T:System.Xaml.XamlType" /> object for the type of the key for dictionary usage, or <see langword="null" /> if this <see cref="T:System.Xaml.XamlType" /> does not represent a dictionary,</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-519">Diese Methode kann durch Aufrufe von <xref:System.Xaml.XamlType.KeyType%2A> aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-519">This method can be invoked by calls to <xref:System.Xaml.XamlType.KeyType%2A>.</span></span>  
  
 <span data-ttu-id="f4c49-520">Die Standard Implementierung kann CLR-reflektionskonzepte verwenden, wie z. b. das Überprüfen einer `Add`-Methode durch <xref:System.Reflection.MethodInfo> und die Verwendung der <xref:System.Reflection.ParameterInfo>; und überprüfen <xref:System.Xaml.XamlType.BaseType%2A> und versuchen dieselbe Logik.</span><span class="sxs-lookup"><span data-stu-id="f4c49-520">The default implementation can use CLR reflection concepts, such as checking for an `Add` method by <xref:System.Reflection.MethodInfo> and using the <xref:System.Reflection.ParameterInfo>; and checking <xref:System.Xaml.XamlType.BaseType%2A> and trying the same logic there.</span></span>  
  
 <span data-ttu-id="f4c49-521">Überschreiben Sie diese Methode, wenn Sie <xref:System.Xaml.XamlType.KeyType%2A> andere Logik verwenden möchten.</span><span class="sxs-lookup"><span data-stu-id="f4c49-521">Override this method if you want <xref:System.Xaml.XamlType.KeyType%2A> to use different logic.</span></span> <span data-ttu-id="f4c49-522">Fälle, in denen <xref:System.Xaml.XamlType.LookupCollectionKind%2A> nicht zurückgibt <xref:System.Xaml.Schema.XamlCollectionKind.Dictionary?displayProperty=nameWithType> sollte `null` zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="f4c49-522">Cases where <xref:System.Xaml.XamlType.LookupCollectionKind%2A> does not return <xref:System.Xaml.Schema.XamlCollectionKind.Dictionary?displayProperty=nameWithType> should return `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupMarkupExtensionReturnType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupMarkupExtensionReturnType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupMarkupExtensionReturnType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupMarkupExtensionReturnType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupMarkupExtensionReturnType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupMarkupExtensionReturnType();" />
      <MemberSignature Language="F#" Value="abstract member LookupMarkupExtensionReturnType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupMarkupExtensionReturnType : unit -&gt; System.Xaml.XamlType" Usage="xamlType.LookupMarkupExtensionReturnType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f4c49-523">Gibt einen Wert zurück, der die Typinformationen für das zurückgegebene <see langword="ProvideValue" />-Objekt dieses <see cref="T:System.Xaml.XamlType" />-Objekts enthält, wenn es eine Markuperweiterung darstellt.</span><span class="sxs-lookup"><span data-stu-id="f4c49-523">Returns a value that provides the type information for the returned <see langword="ProvideValue" /> of this <see cref="T:System.Xaml.XamlType" />, if it represents a markup extension.</span></span></summary>
        <returns><span data-ttu-id="f4c49-524">Ein <see cref="T:System.Xaml.XamlType" />-Objekt für den Rückgabetyp für die Verwendung der Markuperweiterung, andernfalls <see langword="null" />, wenn dieser <see cref="T:System.Xaml.XamlType" /> keine Markuperweiterung darstellt.</span><span class="sxs-lookup"><span data-stu-id="f4c49-524">A <see cref="T:System.Xaml.XamlType" /> object for the return type for markup extension usage; otherwise, <see langword="null" />, if this <see cref="T:System.Xaml.XamlType" /> does not represent a markup extension.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-525">Diese Methode kann durch Aufrufe von <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A> aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-525">This method can be invoked by calls to <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A>.</span></span>  
  
 <span data-ttu-id="f4c49-526">Die Standard Implementierung gibt einen <xref:System.Xaml.XamlType> auf der Grundlage des Lesens <xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute> zurück.</span><span class="sxs-lookup"><span data-stu-id="f4c49-526">The default implementation returns a <xref:System.Xaml.XamlType> on the basis of reading <xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute>.</span></span> <span data-ttu-id="f4c49-527">Es kann auch <xref:System.Xaml.XamlType.BaseType%2A> für das-Attribut überprüfen, wenn für den unmittelbaren zugrunde liegenden Typ kein Attribut gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="f4c49-527">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="f4c49-528">Wenn kein Wert verfügbar ist, wird `null` zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="f4c49-528">If a value is not available, it returns `null`.</span></span>  
  
 <span data-ttu-id="f4c49-529">Überschreiben Sie diese Methode, wenn Sie <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A> andere Logik verwenden möchten.</span><span class="sxs-lookup"><span data-stu-id="f4c49-529">Override this method if you want <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupMember">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlMember LookupMember (string name, bool skipReadOnlyCheck);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlMember LookupMember(string name, bool skipReadOnlyCheck) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupMember(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupMember (name As String, skipReadOnlyCheck As Boolean) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlMember ^ LookupMember(System::String ^ name, bool skipReadOnlyCheck);" />
      <MemberSignature Language="F#" Value="abstract member LookupMember : string * bool -&gt; System.Xaml.XamlMember&#xA;override this.LookupMember : string * bool -&gt; System.Xaml.XamlMember" Usage="xamlType.LookupMember (name, skipReadOnlyCheck)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="skipReadOnlyCheck" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f4c49-530">Der Name des abzurufenden Members (als Zeichenfolge).</span><span class="sxs-lookup"><span data-stu-id="f4c49-530">The name of the member to get (as a string).</span></span></param>
        <param name="skipReadOnlyCheck"><span data-ttu-id="f4c49-531"><see langword="true" />, um einen Member zurückzugeben, auch wenn dieser Member den Wert <see langword="true" /> für <see cref="P:System.Xaml.XamlMember.IsReadOnly" /> aufweist. <see langword="false" />, wenn kein <see cref="P:System.Xaml.XamlMember.IsReadOnly" />-Member zurückgegeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="f4c49-531"><see langword="true" /> to return a member even if that member has a <see langword="true" /> value for <see cref="P:System.Xaml.XamlMember.IsReadOnly" />; <see langword="false" /> to not return a <see cref="P:System.Xaml.XamlMember.IsReadOnly" /> member.</span></span> <span data-ttu-id="f4c49-532">Die Standardeinstellung ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-532">The default is <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="f4c49-533">Gibt den <see cref="T:System.Xaml.XamlMember" /> für einen bestimmten benannten Member aus diesem <see cref="T:System.Xaml.XamlType" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="f4c49-533">Returns the <see cref="T:System.Xaml.XamlMember" /> for a specific named member from this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="f4c49-534">Die <see cref="T:System.Xaml.XamlMember" />-Informationen für den Member, wenn ein Member gefunden wurde, andernfalls <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-534">The <see cref="T:System.Xaml.XamlMember" /> information for the member, if a member was found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-535">Diese Methode kann durch Aufrufe von <xref:System.Xaml.XamlType.GetMember%2A> aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-535">This method can be invoked by calls to <xref:System.Xaml.XamlType.GetMember%2A>.</span></span>  
  
 <span data-ttu-id="f4c49-536">Die Standard Implementierung gibt eine @no__t 0 (null) zurück, die auf der internen CLR-Reflektion und Auswertung des Schema Kontexts basiert.</span><span class="sxs-lookup"><span data-stu-id="f4c49-536">The default implementation returns a <xref:System.Xaml.XamlType> based on internal CLR reflection and evaluation against the schema context.</span></span>  
  
 <span data-ttu-id="f4c49-537">Überschreiben Sie diese Methode, wenn Sie <xref:System.Xaml.XamlType.GetMember%2A> andere Logik verwenden möchten.</span><span class="sxs-lookup"><span data-stu-id="f4c49-537">Override this method if you want <xref:System.Xaml.XamlType.GetMember%2A> to use different logic.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f4c49-538"><xref:System.Xaml.XamlType.LookupMember%2A> ist virtuell und kann daher überschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-538"><xref:System.Xaml.XamlType.LookupMember%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="f4c49-539">Die außer Kraft Setzung hat die Möglichkeit, die gemeldeten Member eines XAML-Typs zu ändern, um die gemeldeten Member eines XAML-Typs so zu ändern, dass Sie nicht mehr erwartungsgemäß mit den <xref:System.ComponentModel.TypeDescriptor>-`Get*`-Informationen zum zugrunde liegenden CLR-Typ übereinstimmen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-539">The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <xref:System.ComponentModel.TypeDescriptor> `Get*` information about the underlying CLR type.</span></span> <span data-ttu-id="f4c49-540">Verwenden Sie für alle sicherheitskritischen Überprüfungen der Element Berichterstattung stattdessen den zugrunde liegenden CLR-Typ.</span><span class="sxs-lookup"><span data-stu-id="f4c49-540">For any security-critical checks of member reporting, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupPositionalParameters">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; LookupPositionalParameters (int parameterCount);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; LookupPositionalParameters(int32 parameterCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupPositionalParameters(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupPositionalParameters (parameterCount As Integer) As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ LookupPositionalParameters(int parameterCount);" />
      <MemberSignature Language="F#" Value="abstract member LookupPositionalParameters : int -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;&#xA;override this.LookupPositionalParameters : int -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="xamlType.LookupPositionalParameters parameterCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterCount"><span data-ttu-id="f4c49-541">Die Anzahl (Stelligkeit) des bestimmten Syntax- oder Konstruktormodus, zu dem Sie Informationen anzeigen möchten.</span><span class="sxs-lookup"><span data-stu-id="f4c49-541">The count (arity) of the particular syntax or constructor mode that you want information about.</span></span></param>
        <summary><span data-ttu-id="f4c49-542">Für Markuperweiterungstypen werden die Typen der Positionsparameter zurückgegeben, die bei einer bestimmten Verwendung der Markuperweiterung für diesen <see cref="T:System.Xaml.XamlType" /> unterstützt werden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-542">For markup extension types, returns the types of the positional parameters that are supported in a specific markup extension usage for this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="f4c49-543">Eine Liste von <see cref="T:System.Xaml.XamlType" />-Werten, wobei jedes derartige <see cref="T:System.Xaml.XamlType" />-Objekt der Typ für diese Position in der Syntax ist.</span><span class="sxs-lookup"><span data-stu-id="f4c49-543">A list of <see cref="T:System.Xaml.XamlType" /> values where each such <see cref="T:System.Xaml.XamlType" /> is the type for that position in the syntax.</span></span> <span data-ttu-id="f4c49-544">Beim Angeben von Markupeingaben für die Markuperweiterung müssen diese Typen in der gleichen Reihenfolge angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-544">You must specify those types in the same order when supplying markup input for the markup extension.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-545">Diese Methode kann durch Aufrufe von <xref:System.Xaml.XamlType.GetPositionalParameters%2A> aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-545">This method can be invoked by calls to <xref:System.Xaml.XamlType.GetPositionalParameters%2A>.</span></span>  
  
 <span data-ttu-id="f4c49-546">Die Standard Implementierung verwendet interne Reflektionsinformationen, die auf der Suche nach Konstruktoren und der Überprüfung der Stelligkeit</span><span class="sxs-lookup"><span data-stu-id="f4c49-546">The default implementation uses internal reflection information based on finding constructors and checking the arity.</span></span> <span data-ttu-id="f4c49-547">Überschreiben Sie diese Methode, wenn Sie <xref:System.Xaml.XamlType.GetPositionalParameters%2A> andere Logik verwenden möchten.</span><span class="sxs-lookup"><span data-stu-id="f4c49-547">Override this method if you want <xref:System.Xaml.XamlType.GetPositionalParameters%2A> to use different logic.</span></span>  
  
 <span data-ttu-id="f4c49-548">Diese API ist nur relevant, wenn dieses <xref:System.Xaml.XamlType> eine Markup Erweiterung darstellt (<xref:System.Xaml.XamlType.IsMarkupExtension%2A> ist `true`).</span><span class="sxs-lookup"><span data-stu-id="f4c49-548">This API is only relevant if this <xref:System.Xaml.XamlType> represents a markup extension (<xref:System.Xaml.XamlType.IsMarkupExtension%2A> is `true`).</span></span>  
  
 <span data-ttu-id="f4c49-549">Der Eingabe `parameterCount` ist nicht für die Anforderung des Typs eines bestimmten Positions Parameters vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-549">The input `parameterCount` is not for requesting the type of a specific positional parameter.</span></span> <span data-ttu-id="f4c49-550">Es dient zum Angeben der Stelligkeit einer Markup Erweiterungs Verwendung.</span><span class="sxs-lookup"><span data-stu-id="f4c49-550">It is for specifying the arity of a markup extension usage.</span></span> <span data-ttu-id="f4c49-551">Die Verwendung von Markup Erweiterungen weist oft mehrere Signaturen auf und verwendet eine andere parameterität (Anzahl) von Positions Parametern, um unterscheiden zu können.</span><span class="sxs-lookup"><span data-stu-id="f4c49-551">Markup extension usage often has multiple signatures and uses different parameter arity (count) of positional parameters to differentiate.</span></span> <span data-ttu-id="f4c49-552">Sie können jedoch einen Schema Kontext so konfigurieren, dass doppelte Typen zugelassen werden und Typen der Positions Parameter für die Differenzierung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-552">However, you can configure a schema context to allow duplicate arities and use types of the positional parameters for differentiation.</span></span> <span data-ttu-id="f4c49-553">Weitere Informationen finden Sie unter <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>.</span><span class="sxs-lookup"><span data-stu-id="f4c49-553">For more information, see <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>.</span></span> <span data-ttu-id="f4c49-554">Für eine bestimmte Anzahl von Stelligkeit können die Parameter Positionen und-Typen variieren.</span><span class="sxs-lookup"><span data-stu-id="f4c49-554">For a specific arity count, the parameter positions and types can vary.</span></span> <span data-ttu-id="f4c49-555">Um den positionellen Typ der Markup Erweiterungs Verwendung einer bestimmten Arität zu erhalten, wird zuerst <xref:System.Xaml.XamlType.GetPositionalParameters%2A> mit der Stelligkeit gezählt.</span><span class="sxs-lookup"><span data-stu-id="f4c49-555">To get the positional type of a specific arity's markup extension usage, you first call <xref:System.Xaml.XamlType.GetPositionalParameters%2A> with the arity count.</span></span> <span data-ttu-id="f4c49-556">Anschließend wird das Element an dieser Position aus der zurückgegebenen Auflistung zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="f4c49-556">Then get the item at that position from the returned collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupSetMarkupExtensionHandler">
      <MemberSignature Language="C#" Value="protected virtual EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; LookupSetMarkupExtensionHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.EventHandler`1&lt;class System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; LookupSetMarkupExtensionHandler() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupSetMarkupExtensionHandler" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupSetMarkupExtensionHandler () As EventHandler(Of XamlSetMarkupExtensionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual EventHandler&lt;System::Windows::Markup::XamlSetMarkupExtensionEventArgs ^&gt; ^ LookupSetMarkupExtensionHandler();" />
      <MemberSignature Language="F#" Value="abstract member LookupSetMarkupExtensionHandler : unit -&gt; EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;&#xA;override this.LookupSetMarkupExtensionHandler : unit -&gt; EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;" Usage="xamlType.LookupSetMarkupExtensionHandler " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f4c49-557">Gibt einen Handlerrückruf zurück, der für set-Vorgänge von Markuperweiterungen verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="f4c49-557">Returns a handler callback to use for the set operations of markup extensions.</span></span></summary>
        <returns><span data-ttu-id="f4c49-558">Ein Handlerrückruf, der für set-Vorgänge von Markuperweiterungen verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="f4c49-558">A handler callback to use for the set operations of markup extensions.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-559">Die Standard Implementierung gibt einen Wert zurück, der auf dem Lesen <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute> basiert.</span><span class="sxs-lookup"><span data-stu-id="f4c49-559">The default implementation returns a value based on reading <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>.</span></span> <span data-ttu-id="f4c49-560">Es kann auch <xref:System.Xaml.XamlType.BaseType%2A> für das-Attribut überprüfen, wenn für den unmittelbaren zugrunde liegenden Typ kein Attribut gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="f4c49-560">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="f4c49-561">Wenn ein Wert nicht verfügbar ist, wird `null` zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="f4c49-561">If a value is unavailable, it returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupSetTypeConverterHandler">
      <MemberSignature Language="C#" Value="protected virtual EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt; LookupSetTypeConverterHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.EventHandler`1&lt;class System.Windows.Markup.XamlSetTypeConverterEventArgs&gt; LookupSetTypeConverterHandler() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupSetTypeConverterHandler" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupSetTypeConverterHandler () As EventHandler(Of XamlSetTypeConverterEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual EventHandler&lt;System::Windows::Markup::XamlSetTypeConverterEventArgs ^&gt; ^ LookupSetTypeConverterHandler();" />
      <MemberSignature Language="F#" Value="abstract member LookupSetTypeConverterHandler : unit -&gt; EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;&#xA;override this.LookupSetTypeConverterHandler : unit -&gt; EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;" Usage="xamlType.LookupSetTypeConverterHandler " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f4c49-562">Gibt einen Handler zurück, der in Fällen von Typkonverterfestlegung verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="f4c49-562">Returns a handler to use for type converter setting cases.</span></span></summary>
        <returns><span data-ttu-id="f4c49-563">Ein Handler, der in Fällen von Typkonverterfestlegung verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="f4c49-563">A handler to use for type converter setting cases.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-564">Die Standard Implementierung gibt einen Wert zurück, der auf dem Lesen <xref:System.Windows.Markup.XamlSetTypeConverterAttribute> basiert.</span><span class="sxs-lookup"><span data-stu-id="f4c49-564">The default implementation returns a value based on reading <xref:System.Windows.Markup.XamlSetTypeConverterAttribute>.</span></span> <span data-ttu-id="f4c49-565">Es kann auch <xref:System.Xaml.XamlType.BaseType%2A> für das-Attribut überprüfen, wenn für den unmittelbaren zugrunde liegenden Typ kein Attribut gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="f4c49-565">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="f4c49-566">Wenn ein Wert nicht verfügbar ist, wird `null` zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="f4c49-566">If a value is unavailable, it returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupTrimSurroundingWhitespace">
      <MemberSignature Language="C#" Value="protected virtual bool LookupTrimSurroundingWhitespace ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupTrimSurroundingWhitespace() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupTrimSurroundingWhitespace" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTrimSurroundingWhitespace () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupTrimSurroundingWhitespace();" />
      <MemberSignature Language="F#" Value="abstract member LookupTrimSurroundingWhitespace : unit -&gt; bool&#xA;override this.LookupTrimSurroundingWhitespace : unit -&gt; bool" Usage="xamlType.LookupTrimSurroundingWhitespace " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f4c49-567">Gibt einen Wert zurück, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt mit einem Modus serialisiert werden soll, in dem umgebender Leerraum abgeschnitten wird.</span><span class="sxs-lookup"><span data-stu-id="f4c49-567">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> should be serialized using a mode that  trims surrounding whitespace.</span></span></summary>
        <returns><span data-ttu-id="f4c49-568"><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt mit einem Modus serialisiert werden soll, in dem umgebender Leerraum abgeschnitten wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-568"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> should be serialized in a mode that trims surrounding whitespace; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-569">Diese Methode kann durch Aufrufe von <xref:System.Xaml.XamlType.TrimSurroundingWhitespace%2A> aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-569">This method can be invoked by calls to <xref:System.Xaml.XamlType.TrimSurroundingWhitespace%2A>.</span></span>  
  
 <span data-ttu-id="f4c49-570">Die Standard Implementierung gibt einen Wert zurück, der auf dem Lesen <xref:System.Windows.Markup.TrimSurroundingWhitespaceAttribute> basiert.</span><span class="sxs-lookup"><span data-stu-id="f4c49-570">The default implementation returns a value based on reading <xref:System.Windows.Markup.TrimSurroundingWhitespaceAttribute>.</span></span> <span data-ttu-id="f4c49-571">Es kann auch <xref:System.Xaml.XamlType.BaseType%2A> für das-Attribut überprüfen, wenn für den unmittelbaren zugrunde liegenden Typ kein Attribut gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="f4c49-571">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="f4c49-572">Wenn ein Wert nicht verfügbar ist, wird `false` zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="f4c49-572">If a value is unavailable, it returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupTypeConverter">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; LookupTypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; LookupTypeConverter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupTypeConverter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTypeConverter () As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ LookupTypeConverter();" />
      <MemberSignature Language="F#" Value="abstract member LookupTypeConverter : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;&#xA;override this.LookupTypeConverter : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" Usage="xamlType.LookupTypeConverter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f4c49-573">Gibt ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt mit einer <see cref="T:System.ComponentModel.TypeConverter" />-Einschränkung zurück, das das Typkonvertierungsverhalten für Werte dieses <see cref="T:System.Xaml.XamlType" />-Objekts darstellt.</span><span class="sxs-lookup"><span data-stu-id="f4c49-573">Returns a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> that has a <see cref="T:System.ComponentModel.TypeConverter" /> constraint, which represents type-conversion behavior for values of this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="f4c49-574">Gibt ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt mit <see cref="T:System.ComponentModel.TypeConverter" />-Einschränkung zurück, das das Typkonvertierungsverhalten für Werte dieses <see cref="T:System.Xaml.XamlType" />-Objekts darstellt, andernfalls <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-574">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.ComponentModel.TypeConverter" /> constraint that represents type-conversion behavior for values of this <see cref="T:System.Xaml.XamlType" />; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-575">Diese Methode kann durch Aufrufe von <xref:System.Xaml.XamlType.TypeConverter%2A> aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-575">This method can be invoked by calls to <xref:System.Xaml.XamlType.TypeConverter%2A>.</span></span>  
  
 <span data-ttu-id="f4c49-576">Die Standard Implementierung gibt einen Wert zurück, der auf dem Lesen <xref:System.ComponentModel.TypeConverterAttribute> basiert.</span><span class="sxs-lookup"><span data-stu-id="f4c49-576">The default implementation returns a value based on reading <xref:System.ComponentModel.TypeConverterAttribute>.</span></span> <span data-ttu-id="f4c49-577">Die Standard Implementierung kann auch <xref:System.Xaml.XamlType.BaseType%2A> für das-Attribut überprüfen, wenn für den unmittelbaren zugrunde liegenden Typ kein Attribut gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="f4c49-577">The default implementation can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="f4c49-578">Außerdem ist eine spezielle Logik für die Standard Konvertierung von Enumerationen, allgemeinen Werttypen und Generika enthalten.</span><span class="sxs-lookup"><span data-stu-id="f4c49-578">It also includes special logic for default conversion of enumerations, common value types, and generics.</span></span> <span data-ttu-id="f4c49-579">Wenn ein Wert nicht verfügbar ist, wird `null` zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="f4c49-579">If a value is unavailable, it returns `null`.</span></span>  
  
 <span data-ttu-id="f4c49-580">Überschreiben Sie diese Methode, wenn Sie <xref:System.Xaml.XamlType.TypeConverter%2A> andere Logik verwenden möchten.</span><span class="sxs-lookup"><span data-stu-id="f4c49-580">Override this method if you want <xref:System.Xaml.XamlType.TypeConverter%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingType">
      <MemberSignature Language="C#" Value="protected virtual Type LookupUnderlyingType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Type LookupUnderlyingType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupUnderlyingType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingType () As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Type ^ LookupUnderlyingType();" />
      <MemberSignature Language="F#" Value="abstract member LookupUnderlyingType : unit -&gt; Type&#xA;override this.LookupUnderlyingType : unit -&gt; Type" Usage="xamlType.LookupUnderlyingType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f4c49-581">Gibt das <see cref="T:System.Type" />-Objekt der CLR zurück, das diesem <see cref="T:System.Xaml.XamlType" />-Objekt unterliegt.</span><span class="sxs-lookup"><span data-stu-id="f4c49-581">Returns the CLR <see cref="T:System.Type" /> that underlies this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="f4c49-582">Das <see cref="T:System.Type" />-Objekt der CLR, das diesem <see cref="T:System.Xaml.XamlType" />-Objekt unterliegt, andernfalls <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-582">The CLR <see cref="T:System.Type" /> that underlies this <see cref="T:System.Xaml.XamlType" />; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-583">Diese Methode kann durch Aufrufe von <xref:System.Xaml.XamlType.UnderlyingType%2A> aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-583">This method can be invoked by calls to <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span></span>  
  
 <span data-ttu-id="f4c49-584">Die Standard Implementierung gibt ein internes Feld zurück.</span><span class="sxs-lookup"><span data-stu-id="f4c49-584">The default implementation returns an internal field.</span></span> <span data-ttu-id="f4c49-585">Dieses Feld wird im Allgemeinen während der Erstellung initialisiert, und sein Wert basiert darauf, welcher Konstruktor aufgerufen wurde und welche Informationen Sie angegeben haben.</span><span class="sxs-lookup"><span data-stu-id="f4c49-585">That field is generally initialized during construction and its value is based on which constructor was called and the information that you provided.</span></span>  
  
 <span data-ttu-id="f4c49-586">Überschreiben Sie diese Methode, wenn Sie <xref:System.Xaml.XamlType.UnderlyingType%2A> andere Logik verwenden möchten.</span><span class="sxs-lookup"><span data-stu-id="f4c49-586">Override this method if you want <xref:System.Xaml.XamlType.UnderlyingType%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupUsableDuringInitialization">
      <MemberSignature Language="C#" Value="protected virtual bool LookupUsableDuringInitialization ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupUsableDuringInitialization() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupUsableDuringInitialization" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUsableDuringInitialization () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupUsableDuringInitialization();" />
      <MemberSignature Language="F#" Value="abstract member LookupUsableDuringInitialization : unit -&gt; bool&#xA;override this.LookupUsableDuringInitialization : unit -&gt; bool" Usage="xamlType.LookupUsableDuringInitialization " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f4c49-587">Gibt einen Wert zurück, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt während der XAML-Initialisierung von oben nach unten erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="f4c49-587">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> is built top-down during XAML initialization.</span></span></summary>
        <returns><span data-ttu-id="f4c49-588"><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt während der XAML-Initialisierung von oben nach unten erstellt wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-588"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> is built top-down during XAML initialization; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-589">Top-Down ist eine Metapher, die das XAML-Prozessor Verhalten beim Erstellen des Objekt Diagramms anweist.</span><span class="sxs-lookup"><span data-stu-id="f4c49-589">Top-down is a metaphor that approximates XAML processor behavior when it creates the object graph.</span></span> <span data-ttu-id="f4c49-590">Wenn ein Typ von oben nach unten erstellt wird, wird er instanziiert, an das übergeordnete Element angefügt und seine Eigenschaften festgelegt.</span><span class="sxs-lookup"><span data-stu-id="f4c49-590">When built top-down, a type is instantiated, attached to the parent, and has its properties set.</span></span> <span data-ttu-id="f4c49-591">Bei der Top-Down-Konstruktion wird vermieden, dass von der Eigenschaft geänderte Handler mehrmals aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-591">Top-down construction avoids invoking property-changed handlers multiple times.</span></span> <span data-ttu-id="f4c49-592">Eine solche Behandlung sorgt für das Objekt Diagramm und beseitigt daher die Aufrufe mehrerer Handler und bietet eine Leistungsoptimierung für den Start des Objekt Diagramms.</span><span class="sxs-lookup"><span data-stu-id="f4c49-592">Such handling ripples up the object graph and therefore, eliminates the multiple handler calls and provides a performance optimization for startup of the object graph.</span></span>  
  
 <span data-ttu-id="f4c49-593">Diese Methode kann durch Aufrufe von <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A> aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-593">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A>.</span></span>  
  
 <span data-ttu-id="f4c49-594">Die Standard Implementierung gibt einen Wert zurück, der auf dem Lesen <xref:System.Windows.Markup.UsableDuringInitializationAttribute> basiert.</span><span class="sxs-lookup"><span data-stu-id="f4c49-594">The default implementation returns a value based on reading <xref:System.Windows.Markup.UsableDuringInitializationAttribute>.</span></span> <span data-ttu-id="f4c49-595">Es kann auch <xref:System.Xaml.XamlType.BaseType%2A> für das-Attribut überprüfen, wenn für den unmittelbaren zugrunde liegenden Typ kein Attribut gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="f4c49-595">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="f4c49-596">Wenn ein Wert nicht verfügbar ist, wird `false` zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="f4c49-596">If a value is unavailable, it returns `false`.</span></span>  
  
 <span data-ttu-id="f4c49-597">Überschreiben Sie diese Methode, wenn Sie <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A> andere Logik verwenden möchten.</span><span class="sxs-lookup"><span data-stu-id="f4c49-597">Override this method if you want <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupValueSerializer">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupValueSerializer () As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ LookupValueSerializer();" />
      <MemberSignature Language="F#" Value="abstract member LookupValueSerializer : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;&#xA;override this.LookupValueSerializer : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;" Usage="xamlType.LookupValueSerializer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f4c49-598">Gibt ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt mit einer <see cref="T:System.Windows.Markup.ValueSerializer" />-Einschränkung zurück, das das Wertserialisierungsverhalten für Werte dieses <see cref="T:System.Xaml.XamlType" />-Objekts darstellt.</span><span class="sxs-lookup"><span data-stu-id="f4c49-598">Returns a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> that has a <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint, which represents value serialization behavior for values of this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="f4c49-599">Ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt mit der <see cref="T:System.Windows.Markup.ValueSerializer" />-Einschränkung, das das Wertserialisierungsverhalten für Werte dieses <see cref="T:System.Xaml.XamlType" />-Objekts darstellt, andernfalls <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-599">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint that represents value serialization behavior for values of this <see cref="T:System.Xaml.XamlType" />; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-600">Diese Methode kann durch Aufrufe von <xref:System.Xaml.XamlType.ValueSerializer%2A> aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="f4c49-600">This method can be invoked by calls to <xref:System.Xaml.XamlType.ValueSerializer%2A>.</span></span>  
  
 <span data-ttu-id="f4c49-601">Die Standard Implementierung gibt einen Wert zurück, der auf dem Lesen <xref:System.Windows.Markup.ValueSerializerAttribute> basiert.</span><span class="sxs-lookup"><span data-stu-id="f4c49-601">The default implementation returns a value based on reading <xref:System.Windows.Markup.ValueSerializerAttribute>.</span></span> <span data-ttu-id="f4c49-602">Es kann auch <xref:System.Xaml.XamlType.BaseType%2A> für das-Attribut überprüfen, wenn für den unmittelbaren zugrunde liegenden Typ kein Attribut gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="f4c49-602">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="f4c49-603">Außerdem ist eine spezielle Logik für die Standardserialisierung von Enumerationen, allgemeinen Werttypen oder Generika enthalten.</span><span class="sxs-lookup"><span data-stu-id="f4c49-603">It also includes special logic for default serialization of enumerations, common value types, or generics.</span></span> <span data-ttu-id="f4c49-604">Wenn ein Wert nicht verfügbar ist, wird `null` zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="f4c49-604">If a value is unavailable, it returns `null`.</span></span>  
  
 <span data-ttu-id="f4c49-605">Überschreiben Sie diese Methode, wenn Sie <xref:System.Xaml.XamlType.ValueSerializer%2A> andere Logik verwenden möchten.</span><span class="sxs-lookup"><span data-stu-id="f4c49-605">Override this method if you want <xref:System.Xaml.XamlType.ValueSerializer%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkupExtensionReturnType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType MarkupExtensionReturnType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType MarkupExtensionReturnType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.MarkupExtensionReturnType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MarkupExtensionReturnType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ MarkupExtensionReturnType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MarkupExtensionReturnType : System.Xaml.XamlType" Usage="System.Xaml.XamlType.MarkupExtensionReturnType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f4c49-606">Ruft einen Wert ab, der die Typinformationen für das zurückgegebene <see langword="ProvideValue" />-Objekt dieses <see cref="T:System.Xaml.XamlType" />-Objekts enthält, wenn es eine Markuperweiterung darstellt.</span><span class="sxs-lookup"><span data-stu-id="f4c49-606">Gets a value that provides the type information for the returned <see langword="ProvideValue" /> of this <see cref="T:System.Xaml.XamlType" />, if it represents a markup extension.</span></span></summary>
        <value><span data-ttu-id="f4c49-607">Ein <see cref="T:System.Xaml.XamlType" />-Objekt für den Rückgabetyp für die Verwendung der Markuperweiterung, andernfalls <see langword="null" />, wenn dieser <see cref="T:System.Xaml.XamlType" /> keine Markuperweiterung darstellt.</span><span class="sxs-lookup"><span data-stu-id="f4c49-607">A <see cref="T:System.Xaml.XamlType" /> object for the return type for markup extension usage; otherwise, <see langword="null" />, if this <see cref="T:System.Xaml.XamlType" /> does not represent a markup extension.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-608">Diese Eigenschaft ist nur relevant, wenn dieses <xref:System.Xaml.XamlType> eine Markup Erweiterung darstellt (`x:MarkupExtension` in der Liste der zustellbaren Typen).</span><span class="sxs-lookup"><span data-stu-id="f4c49-608">This property is only relevant if this <xref:System.Xaml.XamlType> represents a markup extension (`x:MarkupExtension` is in the assignable types list).</span></span>  
  
 <span data-ttu-id="f4c49-609">Wenn Sie nicht die standardmäßige interne CLR-reflektionstechnik für eine <xref:System.Xaml.XamlType> verwenden, können Aufrufe dieser Eigenschaft <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A>-über Schreibungen für von <xref:System.Xaml.XamlType> abgeleitete Klassen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-609">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="f4c49-610">Weitere Informationen zu Rückgabe Werten und anderem Verhalten finden Sie in der Dokumentation zu <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> für diesen Typ.</span><span class="sxs-lookup"><span data-stu-id="f4c49-610">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xaml.XamlType.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f4c49-611">Ruft den Zeichenfolgennamen des Typs ab, den dieses <see cref="T:System.Xaml.XamlType" />-Objekt darstellt.</span><span class="sxs-lookup"><span data-stu-id="f4c49-611">Gets the string name of the type that this <see cref="T:System.Xaml.XamlType" /> represents.</span></span></summary>
        <value><span data-ttu-id="f4c49-612">Der Zeichenfolgenname dieses XAML-Typs.</span><span class="sxs-lookup"><span data-stu-id="f4c49-612">The string name of this XAML type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-613">Diese Eigenschaft ruft in der Regel den vom Schema erstellten Namen (gemäß der <xref:System.Xaml.XamlType.%23ctor%2A>-Signatur) oder den Namen der <xref:System.Type> ab, wenn Sie mit dem entsprechenden Konstruktor des CLR-Typsystems erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="f4c49-613">This property typically gets the schema-constructed name (per the <xref:System.Xaml.XamlType.%23ctor%2A> signature), or the name of the <xref:System.Type>, if it is constructed by using the pertinent constructor of the CLR type system.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Xaml.XamlType xamlType1, System.Xaml.XamlType xamlType2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Xaml.XamlType xamlType1, class System.Xaml.XamlType xamlType2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (xamlType1 As XamlType, xamlType2 As XamlType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Xaml::XamlType ^ xamlType1, System::Xaml::XamlType ^ xamlType2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Xaml.XamlType * System.Xaml.XamlType -&gt; bool" Usage="xamlType1 = xamlType2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlType1" Type="System.Xaml.XamlType" />
        <Parameter Name="xamlType2" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType1"><span data-ttu-id="f4c49-614"><see cref="T:System.Xaml.XamlType" /> oder <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-614">A <see cref="T:System.Xaml.XamlType" /> or <see langword="null" />.</span></span></param>
        <param name="xamlType2"><span data-ttu-id="f4c49-615"><see cref="T:System.Xaml.XamlType" /> oder <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-615">A <see cref="T:System.Xaml.XamlType" /> or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="f4c49-616">Bestimmt, ob zwei angegebene <see cref="T:System.Xaml.XamlType" />-Objekte denselben Wert haben.</span><span class="sxs-lookup"><span data-stu-id="f4c49-616">Determines whether two specified <see cref="T:System.Xaml.XamlType" /> objects have the same value.</span></span></summary>
        <returns><span data-ttu-id="f4c49-617"><see langword="true" />, wenn <paramref name="xamlType1" /> und <paramref name="xamlType2" /> denselben Wert haben, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-617"><see langword="true" /> if the value of <paramref name="xamlType1" /> is the same as the value of <paramref name="xamlType2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Xaml.XamlType xamlType1, System.Xaml.XamlType xamlType2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Xaml.XamlType xamlType1, class System.Xaml.XamlType xamlType2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (xamlType1 As XamlType, xamlType2 As XamlType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Xaml::XamlType ^ xamlType1, System::Xaml::XamlType ^ xamlType2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Xaml.XamlType * System.Xaml.XamlType -&gt; bool" Usage="System.Xaml.XamlType.op_Inequality (xamlType1, xamlType2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlType1" Type="System.Xaml.XamlType" />
        <Parameter Name="xamlType2" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType1"><span data-ttu-id="f4c49-618"><see cref="T:System.Xaml.XamlType" /> oder <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-618">A <see cref="T:System.Xaml.XamlType" /> or <see langword="null" />.</span></span></param>
        <param name="xamlType2"><span data-ttu-id="f4c49-619"><see cref="T:System.Xaml.XamlType" /> oder <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-619">A <see cref="T:System.Xaml.XamlType" /> or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="f4c49-620">Bestimmt, ob zwei angegebene <see cref="T:System.Xaml.XamlType" />-Objekte verschiedene Werte haben.</span><span class="sxs-lookup"><span data-stu-id="f4c49-620">Determines whether two specified <see cref="T:System.Xaml.XamlType" /> objects have different values.</span></span></summary>
        <returns><span data-ttu-id="f4c49-621"><see langword="true" />, wenn der Wert von <paramref name="xamlType1" /> vom Wert von <paramref name="xamlType2" /> verschieden ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-621"><see langword="true" /> if the value of <paramref name="xamlType1" /> is different from the value of <paramref name="xamlType2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredXamlNamespace">
      <MemberSignature Language="C#" Value="public string PreferredXamlNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredXamlNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.PreferredXamlNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreferredXamlNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PreferredXamlNamespace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredXamlNamespace : string" Usage="System.Xaml.XamlType.PreferredXamlNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f4c49-622">Ruft den einzelnen XAML-Namespace ab, der der primäre XAML-Namespace für diesen <see cref="T:System.Xaml.XamlType" /> ist.</span><span class="sxs-lookup"><span data-stu-id="f4c49-622">Gets the single XAML namespace that is the primary XAML namespace for this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <value><span data-ttu-id="f4c49-623">Der Bezeichner für den primären XAML-Namespace für diesen XAML-Typ als Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="f4c49-623">The identifier, as a string, of the primary XAML namespace for this XAML type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-624">Diese Implementierung bietet denselben Wert wie das Aufrufen von <xref:System.Xaml.XamlType.GetXamlNamespaces%2A> und das anschließende Abrufen der ersten Wert Zeichenfolge aus der zurückgegebenen Aufzähl Bare-Menge.</span><span class="sxs-lookup"><span data-stu-id="f4c49-624">This implementation provides the same value as calling <xref:System.Xaml.XamlType.GetXamlNamespaces%2A> and then getting the first value string from the returned enumerable set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaContext">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlSchemaContext SchemaContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlSchemaContext SchemaContext" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.SchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SchemaContext As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlSchemaContext ^ SchemaContext { System::Xaml::XamlSchemaContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaContext : System.Xaml.XamlSchemaContext" Usage="System.Xaml.XamlType.SchemaContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f4c49-625">Ruft das aktive <see cref="T:System.Xaml.XamlSchemaContext" />-Objekt zum Verarbeiten dieses <see cref="T:System.Xaml.XamlType" />-Objekt ab.</span><span class="sxs-lookup"><span data-stu-id="f4c49-625">Gets the active <see cref="T:System.Xaml.XamlSchemaContext" /> for processing this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <value><span data-ttu-id="f4c49-626">Das aktive <see cref="T:System.Xaml.XamlSchemaContext" />-Objekt zum Verarbeiten dieses <see cref="T:System.Xaml.XamlType" />-Objekts.</span><span class="sxs-lookup"><span data-stu-id="f4c49-626">The active <see cref="T:System.Xaml.XamlSchemaContext" /> for processing this <see cref="T:System.Xaml.XamlType" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-627"><xref:System.Xaml.XamlSchemaContext> ist ein erforderlicher Parameter Eintrag beim Erstellen einer <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="f4c49-627"><xref:System.Xaml.XamlSchemaContext> is a required parameter entry when constructing a <xref:System.Xaml.XamlType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="xamlType.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f4c49-628">Gibt eine Zeichenfolgendarstellung für diese <see cref="T:System.Xaml.XamlType" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="f4c49-628">Returns a string representation of this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="f4c49-629">Eine Zeichenfolgendarstellung für diese <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-629">A string representation of this <see cref="T:System.Xaml.XamlType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-630">Die <xref:System.Xaml.XamlType>-Implementierung von <xref:System.Object.ToString%2A> gibt die <xref:System.Xaml.XamlType.Name%2A>-Eigenschaft des <xref:System.Xaml.XamlType> zurück.</span><span class="sxs-lookup"><span data-stu-id="f4c49-630">The <xref:System.Xaml.XamlType> implementation of <xref:System.Object.ToString%2A> returns the <xref:System.Xaml.XamlType.Name%2A> property of the <xref:System.Xaml.XamlType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimSurroundingWhitespace">
      <MemberSignature Language="C#" Value="public bool TrimSurroundingWhitespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TrimSurroundingWhitespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.TrimSurroundingWhitespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TrimSurroundingWhitespace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TrimSurroundingWhitespace { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.TrimSurroundingWhitespace : bool" Usage="System.Xaml.XamlType.TrimSurroundingWhitespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f4c49-631">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt Leerraumbehandlungsverhalten für die Serialisierung aufweist, bei dem umgebender Leerraum in seinem Inhalt abgeschnitten wird.</span><span class="sxs-lookup"><span data-stu-id="f4c49-631">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> has whitespace handling behavior for serialization that trims the surrounding whitespace in its content.</span></span></summary>
        <value><span data-ttu-id="f4c49-632"><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen Typ darstellt, der Leerraumeinschränkung verwendet, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-632"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a type that uses whitespace trimming; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-633">Wenn Sie nicht die standardmäßige interne CLR-reflektionstechnik für eine <xref:System.Xaml.XamlType> verwenden, können Aufrufe dieser Eigenschaft <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A>-über Schreibungen für von <xref:System.Xaml.XamlType> abgeleitete Klassen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-633">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="f4c49-634">Weitere Informationen zu Rückgabe Werten und anderem Verhalten finden Sie in der Dokumentation zu <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> für diesen Typ.</span><span class="sxs-lookup"><span data-stu-id="f4c49-634">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeArguments">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; TypeArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; TypeArguments" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.TypeArguments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeArguments As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ TypeArguments { System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeArguments : System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="System.Xaml.XamlType.TypeArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f4c49-635">Ruft eine Liste von Typargumenten für Fälle ab, in denen dieses <see cref="T:System.Xaml.XamlType" />-Objekt ein generisches Objekt darstellt.</span><span class="sxs-lookup"><span data-stu-id="f4c49-635">Gets a list of type arguments for cases where this <see cref="T:System.Xaml.XamlType" /> represents a generic.</span></span></summary>
        <value><span data-ttu-id="f4c49-636">Eine Liste von Typargumenttypen, andernfalls <see langword="null" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt kein generisches Objekt darstellt.</span><span class="sxs-lookup"><span data-stu-id="f4c49-636">A list of type argument types; otherwise, <see langword="null" />, if this <see cref="T:System.Xaml.XamlType" /> does not represent a generic.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-637">Es gibt bestimmte Szenarien für eine <xref:System.Xaml.XamlType>, bei der der <xref:System.Xaml.XamlType.TypeArguments%2A>-Parameter aufgerufen wird, gibt eine Liste zurück, in der die Typen noch geöffnet sind.</span><span class="sxs-lookup"><span data-stu-id="f4c49-637">There are certain scenarios for a <xref:System.Xaml.XamlType> where calling the <xref:System.Xaml.XamlType.TypeArguments%2A> parameter returns a list where the types are still open.</span></span> <span data-ttu-id="f4c49-638">In diesem Fall verfügt mindestens einer der zurückgegebenen <xref:System.Xaml.XamlType>-Werte über Platzhalter Werte für <xref:System.Xaml.XamlType.Name%2A?displayProperty=nameWithType>, wie z. b. `T`, um darzustellen, dass der generische weiterhin geöffnet ist.</span><span class="sxs-lookup"><span data-stu-id="f4c49-638">In this case, one or more of the returned <xref:System.Xaml.XamlType> values will have placeholder values for <xref:System.Xaml.XamlType.Name%2A?displayProperty=nameWithType>, such as `T`, to represent that the generic is still open.</span></span> <span data-ttu-id="f4c49-639">Dieses Szenario kann auftreten, wenn Sie einen <xref:System.Xaml.XamlType> von einem-Aufruf<xref:System.Xaml.XamlSchemaContext.GetXamlType%2A> anstelle von einer XAML-Reader-Implementierung erhalten.</span><span class="sxs-lookup"><span data-stu-id="f4c49-639">This scenario can occur if you get a <xref:System.Xaml.XamlType> from a call to <xref:System.Xaml.XamlSchemaContext.GetXamlType%2A>, instead of from a XAML reader implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeConverter">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; TypeConverter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; TypeConverter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.TypeConverter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeConverter As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ TypeConverter { System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeConverter : System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" Usage="System.Xaml.XamlType.TypeConverter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f4c49-640">Ruft ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt mit der <see cref="T:System.ComponentModel.TypeConverter" />-Einschränkung ab, das das Typkonvertierungsverhalten für Werte dieses <see cref="T:System.Xaml.XamlType" />-Objekts darstellt.</span><span class="sxs-lookup"><span data-stu-id="f4c49-640">Gets a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.ComponentModel.TypeConverter" /> constraint that represents type conversion behavior for values of this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <value><span data-ttu-id="f4c49-641">Ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt mit der <see cref="T:System.ComponentModel.TypeConverter" />-Einschränkung, das das Typkonvertierungsverhalten für Werte dieses <see cref="T:System.Xaml.XamlType" />-Objekts darstellt.</span><span class="sxs-lookup"><span data-stu-id="f4c49-641">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.ComponentModel.TypeConverter" /> constraint that represents type conversion behavior for values of this <see cref="T:System.Xaml.XamlType" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-642">Wenn Sie nicht die standardmäßige interne CLR-reflektionstechnik für eine <xref:System.Xaml.XamlType> verwenden, können Aufrufe dieser Eigenschaft <xref:System.Xaml.XamlType.LookupTypeConverter%2A>-über Schreibungen für von <xref:System.Xaml.XamlType> abgeleitete Klassen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-642">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupTypeConverter%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="f4c49-643">Weitere Informationen zu Rückgabe Werten und anderem Verhalten finden Sie in der Dokumentation zu <xref:System.Xaml.XamlType.LookupTypeConverter%2A> für diesen Typ.</span><span class="sxs-lookup"><span data-stu-id="f4c49-643">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupTypeConverter%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingType">
      <MemberSignature Language="C#" Value="public Type UnderlyingType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type UnderlyingType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.UnderlyingType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ UnderlyingType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingType : Type" Usage="System.Xaml.XamlType.UnderlyingType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f4c49-644">Ruft das <see cref="T:System.Type" />-Objekt der CLR ab, die diesem <see cref="T:System.Xaml.XamlType" />-Objekt unterliegt.</span><span class="sxs-lookup"><span data-stu-id="f4c49-644">Gets the CLR <see cref="T:System.Type" /> that underlies this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <value><span data-ttu-id="f4c49-645">Der CLR-<see cref="T:System.Type" />, der diesem <see cref="T:System.Xaml.XamlType" /> zugrunde liegt.</span><span class="sxs-lookup"><span data-stu-id="f4c49-645">The CLR <see cref="T:System.Type" /> that underlies this <see cref="T:System.Xaml.XamlType" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueSerializer">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; ValueSerializer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; ValueSerializer" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueSerializer As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ ValueSerializer { System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueSerializer : System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;" Usage="System.Xaml.XamlType.ValueSerializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f4c49-646">Ruft ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt mit <see cref="T:System.Windows.Markup.ValueSerializer" />-Einschränkung ab, das das Wertserialisierungsverhalten für Werte dieses <see cref="T:System.Xaml.XamlType" />-Objekts darstellt.</span><span class="sxs-lookup"><span data-stu-id="f4c49-646">Gets a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint that represents value serialization behavior for values of this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <value><span data-ttu-id="f4c49-647">Ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt mit der <see cref="T:System.Windows.Markup.ValueSerializer" />-Einschränkung, das das Wertserialisierungsverhalten für Werte dieses <see cref="T:System.Xaml.XamlType" />-Objekts darstellt, andernfalls <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f4c49-647">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint that represents value serialization behavior for values of this <see cref="T:System.Xaml.XamlType" />; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c49-648">Wenn Sie nicht die standardmäßige interne CLR-reflektionstechnik für eine <xref:System.Xaml.XamlType> verwenden, können Aufrufe dieser Eigenschaft <xref:System.Xaml.XamlType.LookupValueSerializer%2A>-über Schreibungen für von <xref:System.Xaml.XamlType> abgeleitete Klassen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="f4c49-648">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupValueSerializer%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="f4c49-649">Weitere Informationen zu Rückgabe Werten und anderem Verhalten finden Sie in der Dokumentation zu <xref:System.Xaml.XamlType.LookupValueSerializer%2A> für diesen Typ.</span><span class="sxs-lookup"><span data-stu-id="f4c49-649">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupValueSerializer%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
