<Type Name="XamlReaderSettings" FullName="System.Xaml.XamlReaderSettings">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d9e6ae92facd4536b2b4e3e3d7c28a320791bc7e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36443928" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlReaderSettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlReaderSettings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlReaderSettings" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlReaderSettings" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlReaderSettings" />
  <TypeSignature Language="F#" Value="type XamlReaderSettings = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Gibt Verarbeitungsregeln oder Optionseinstellungen für eine <see cref="T:System.Xaml.XamlReader" />-Implementierung an.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Standardmäßig eine initialisierte <xref:System.Xaml.XamlReaderSettings> Objekt verwendet die Werte für seine Eigenschaften entsprechen die Standardwerte, z. B. erwartet `false` für boolesche Eigenschaften oder null-Werte für Eigenschaften mit Verweistypen. Standardinitialisierung ergibt sich die folgenden Werte:  
  
-   Die <xref:System.Xaml.XamlReaderSettings.BaseUri%2A> und <xref:System.Xaml.XamlReaderSettings.LocalAssembly%2A> Eigenschaften sind `null`.  
  
-   Die <xref:System.Xaml.XamlReaderSettings.IgnoreUidsOnPropertyElements%2A>-Eigenschaft ist `false`.  
  
-   Die <xref:System.Xaml.XamlReaderSettings.ProvideLineInfo%2A> Eigenschaft `false` im Objektmodell; allerdings sie kann festgelegt werden `true` zur Laufzeit basierend auf der geladenen ausführbaren Dateien und ihrer Debugeinstellungen oder durch Verwendung von XAML-Schemakontext.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlReaderSettings" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlReaderSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReaderSettings.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlReaderSettings();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlReaderSettings" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zur Initialisierung von einer <xref:System.Xaml.XamlReaderSettings> Standardinstanz, finden Sie unter <xref:System.Xaml.XamlReaderSettings>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlReaderSettings (System.Xaml.XamlReaderSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlReaderSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReaderSettings.#ctor(System.Xaml.XamlReaderSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (settings As XamlReaderSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlReaderSettings(System::Xaml::XamlReaderSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlReaderSettings : System.Xaml.XamlReaderSettings -&gt; System.Xaml.XamlReaderSettings" Usage="new System.Xaml.XamlReaderSettings settings" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="settings" Type="System.Xaml.XamlReaderSettings" />
      </Parameters>
      <Docs>
        <param name="settings">Ein vorhandenes <see cref="T:System.Xaml.XamlReaderSettings" />-Objekt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlReaderSettings" />-Klasse auf der Grundlage von Werten in einem anderen <see cref="T:System.Xaml.XamlReaderSettings" />-Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor unterstützt das Zusammenführen von Einstellungen für XAML-Reader an, in dem zusätzliche Einstellungen auch aus anderen Teilnehmer der datenleserprozess stammen können.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowProtectedMembersOnRoot">
      <MemberSignature Language="C#" Value="public bool AllowProtectedMembersOnRoot { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowProtectedMembersOnRoot" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReaderSettings.AllowProtectedMembersOnRoot" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowProtectedMembersOnRoot As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowProtectedMembersOnRoot { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowProtectedMembersOnRoot : bool with get, set" Usage="System.Xaml.XamlReaderSettings.AllowProtectedMembersOnRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob beim Melden der XAML-Typdarstellung das Stammobjekt Member mit einem geschützten Codezugriffsmodell enthalten darf, oder legt diesen fest.</summary>
        <value>
          <see langword="true" />, wenn das Stammobjekt Member mit einem geschützten Codezugriffsmodell enthalten darf, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Einstellung ist für einige XAML-Implementierungen, z. B. WPF, wo das Stammobjekt häufig eine "Factory ist" für das Generieren einer Instanz von einem Mustertyp, wenn dieses Muster-Typs nicht immer eine praktische Objektinstanz ist, relevant. Z. B. einen Stammwert von `UserControl` verfügt über eine bestimmte Bedeutung für WPF und Silverlight-Anwendungsmodelle und `UserControl` könnte geschützte Eigenschaften (`UserControl.Content`), dass der Parser Zugriff benötigt. Tools und Entwurfsoberflächen benötigen auch Zugriff auf diese Eigenschaften. Diese Fälle sollten im allgemeinen XAML-Typsystem als beschreibbare Eigenschaften gemeldet werden, obwohl sie in der Unterstützungstypsystem Zugriff geschützt haben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseUri">
      <MemberSignature Language="C#" Value="public Uri BaseUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReaderSettings.BaseUri" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ BaseUri { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BaseUri : Uri with get, set" Usage="System.Xaml.XamlReaderSettings.BaseUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Basis-URI ab, mit dem relative Pfade aufgelöst werden, oder legt ihn fest.</summary>
        <value>Der zu verwendende Basis-URI. Der Standardwert ist <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Einige URI-bezogenen Eigenschaften in der .NET Framework-XAML-Dienste-API behandelt URIs für die Verwendung von XAML-Namespaces als Zeichenfolgen. Diese Eigenschaft verwendet jedoch das "true" <xref:System.Uri> Typ.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreUidsOnPropertyElements">
      <MemberSignature Language="C#" Value="public bool IgnoreUidsOnPropertyElements { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreUidsOnPropertyElements" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReaderSettings.IgnoreUidsOnPropertyElements" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreUidsOnPropertyElements As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreUidsOnPropertyElements { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreUidsOnPropertyElements : bool with get, set" Usage="System.Xaml.XamlReaderSettings.IgnoreUidsOnPropertyElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der XAML-Reader Werte für <see langword="x:Uid" />-Attribute ignorieren soll, die in Eigenschaftselementen vorhanden sind, oder legt diesen fest.</summary>
        <value>
          <see langword="true" />, wenn der Reader Werte für <see langword="x:Uid" />-Attribute in Eigenschaftenelementen ignorieren soll. <see langword="false" />, wenn der Reader <see langword="x:Uid" />-Attribute von Eigenschaftenelementen verarbeiten soll. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Während der Lokalisierung der `x:Uid` Attribut wird verwendet, um Elemente im Markup zu ermitteln, sodass Tools für die Lokalisierung von XAML-Elementen als separate Entitäten für die Lokalisierung verarbeiten können. Attribute werden in der Regel nicht für Eigenschaftenelemente in XAML angezeigt. Allerdings `x:Uid` ist eine Ausnahme aus, da einige Verwendungen lokalisierten chinesischer Text in ein Eigenschaftenelement als Inhalt, anstelle von einfügen als separates Objekt, das empfangen kann einen eigenen `x:Uid`. Festlegen einer <xref:System.Xaml.XamlReaderSettings.IgnoreUidsOnPropertyElements%2A> Wert `true` ermöglicht einen strengeren Modus. Der Standardwert von `false` Property-Element die Verarbeitung fortsetzt `x:Uid` Attribute.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly LocalAssembly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly LocalAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReaderSettings.LocalAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Property LocalAssembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Assembly ^ LocalAssembly { System::Reflection::Assembly ^ get(); void set(System::Reflection::Assembly ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LocalAssembly : System.Reflection.Assembly with get, set" Usage="System.Xaml.XamlReaderSettings.LocalAssembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Objekt ab, das die aktuelle lokale Assembly darstellt, die verarbeitet werden soll, oder legt dieses fest. Diese Assemblyinformationen werden potenziell für Aufrufe von Hilfs-APIs wie <see cref="M:System.Xaml.XamlType.GetAllMembers" /> verwendet.</summary>
        <value>Eine <see cref="T:System.Reflection.Assembly" />-Objekt für CLR-Reflektion.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProvideLineInfo">
      <MemberSignature Language="C#" Value="public bool ProvideLineInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProvideLineInfo" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReaderSettings.ProvideLineInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property ProvideLineInfo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProvideLineInfo { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ProvideLineInfo : bool with get, set" Usage="System.Xaml.XamlReaderSettings.ProvideLineInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Reader Zeilennummer und Position bereitstellen kann, oder legt ihn fest.</summary>
        <value>
          <see langword="true" />, wenn der Reader Zeilennummer- und Positionsinformationen angeben kann, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlReaderSettings.ProvideLineInfo%2A> ist `false` im Objektmodell; allerdings sie kann festgelegt werden `true` zur Laufzeit auf Grundlage der geladenen ausführbaren Dateien und deren Debugeinstellungen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValuesMustBeString">
      <MemberSignature Language="C#" Value="public bool ValuesMustBeString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValuesMustBeString" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReaderSettings.ValuesMustBeString" />
      <MemberSignature Language="VB.NET" Value="Public Property ValuesMustBeString As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValuesMustBeString { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValuesMustBeString : bool with get, set" Usage="System.Xaml.XamlReaderSettings.ValuesMustBeString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Reader erzwingt, dass alle <see langword="Value" />-Knoten als <see langword="String" />-Typ verarbeitet werden, oder legt ihn fest.</summary>
        <value>
          <see langword="true" />, wenn der Reader erzwingt, dass nur <see langword="String" /> in <see langword="Value" />-Knoten enthalten ist, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zusätzlich zu <xref:System.String>, ein mögliches `Value` unter einigen Implementierungen von XAML-Inhalt ist <xref:System.Windows.Markup.XData>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>