<Type Name="IXamlNameResolver" FullName="System.Xaml.IXamlNameResolver">
  <Metadata><Meta Name="ms.openlocfilehash" Value="90cae556443f64c1d3b144159cd56e000f2d4284" /><Meta Name="ms.sourcegitcommit" Value="9506e50ec7beb4fa30206b9840dc546b035a6600" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/23/2020" /><Meta Name="ms.locfileid" Value="83952457" /></Metadata><TypeSignature Language="C#" Value="public interface IXamlNameResolver" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IXamlNameResolver" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.IXamlNameResolver" />
  <TypeSignature Language="VB.NET" Value="Public Interface IXamlNameResolver" />
  <TypeSignature Language="C++ CLI" Value="public interface class IXamlNameResolver" />
  <TypeSignature Language="F#" Value="type IXamlNameResolver = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="7977c-101">Beschreibt einen Dienst, von dem nach dem XAML-Namen angegebene Objekte zurückgegeben werden können, oder von dem alternativ ein Token zurückgegeben wird, das die Namensauflösung zurückstellt.</span><span class="sxs-lookup"><span data-stu-id="7977c-101">Describes a service that can return objects that are specified by XAML name, or alternatively, returns a token that defers name resolution.</span></span> <span data-ttu-id="7977c-102">Vom Dienst kann auch ein aufzählbarer Satz aller benannten Objekte zurückgegeben werden, die im XAML-Namescope enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="7977c-102">The service can also return an enumerable set of all named objects that are in the XAML namescope.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7977c-103">Diese Schnittstelle ist nicht für die externe Implementierung typischer XAML-Szenarien gedacht, da es sich um einen Dienst handelt.</span><span class="sxs-lookup"><span data-stu-id="7977c-103">This interface is not intended for external implementation of typical XAML scenarios because it is a service.</span></span> <span data-ttu-id="7977c-104">Dieser Dienst ermöglicht Markup Erweiterungen und Typkonvertern, XAML-Namen in andere Objekte aus derselben XAML-Quelle aufzulösen, während Sie sich noch in einer XAML-Knoten Darstellung befinden.</span><span class="sxs-lookup"><span data-stu-id="7977c-104">This service enables markup extensions and type converters to resolve XAML names to other objects from the same XAML source while they are still in a XAML node representation.</span></span> <span data-ttu-id="7977c-105">Der Dienst kann verwendet werden, um Forward-Verweise für alle Mechanismen aufzulösen, die XAML-Namen für den nichtlinearen Zugriff auf die umgebende XAML-Produktion verwenden.</span><span class="sxs-lookup"><span data-stu-id="7977c-105">The service can be used to resolve forward references for any mechanism that relies on XAML names for nonlinear access to the surrounding XAML production.</span></span> <span data-ttu-id="7977c-106">Weitere Informationen finden Sie unter [Typkonverter und Markup Erweiterungen für XAML](/dotnet/framework/xaml-services/type-converters-and-markup-extensions-for-xaml).</span><span class="sxs-lookup"><span data-stu-id="7977c-106">For more information, see [Type Converters and Markup Extensions for XAML](/dotnet/framework/xaml-services/type-converters-and-markup-extensions-for-xaml).</span></span>  
  
 <span data-ttu-id="7977c-107">Typkonverter und Markup Erweiterungen können <xref:System.Xaml.IXamlNameResolver> als Dienst im Dienst Kontext Abfragen, der von einem XAML-objektwriter bereitgestellt wird, wenn der XAML-objektwriter das Wert Konvertierungs Verhalten aufruft.</span><span class="sxs-lookup"><span data-stu-id="7977c-107">Type converters and markup extensions can query for <xref:System.Xaml.IXamlNameResolver> as a service on the service context that is provided by a XAML object writer, when the XAML object writer invokes value conversion behavior.</span></span> <span data-ttu-id="7977c-108">Weitere Informationen finden Sie unter [Typkonverter und Markup Erweiterungen für XAML](/dotnet/framework/xaml-services/type-converters-and-markup-extensions-for-xaml) und [Dienst Kontexte, die für Typkonverter und Markup Erweiterungen verfügbar sind](/dotnet/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions).</span><span class="sxs-lookup"><span data-stu-id="7977c-108">For more information, see [Type Converters and Markup Extensions for XAML](/dotnet/framework/xaml-services/type-converters-and-markup-extensions-for-xaml) and [Service Contexts Available to Type Converters and Markup Extensions](/dotnet/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions).</span></span>  
  
 <span data-ttu-id="7977c-109">Dieser Dienst macht eine API verfügbar, die die Namensauflösung verzögern kann.</span><span class="sxs-lookup"><span data-stu-id="7977c-109">This service exposes an API that can defer name resolution.</span></span> <span data-ttu-id="7977c-110">Die vom Dienst implementierte Metapher besteht darin, dass Namen, die nicht in einem ersten Durchlauf eines partiellen namens Objekt Diagramms aufgelöst werden können, gespeichert und zum Erstellen des fixuptokens verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="7977c-110">The metaphor implemented by the service is that names that cannot be resolved in a first pass against a partial name-object graph should be stored and used to create the fixup token.</span></span> <span data-ttu-id="7977c-111">Im Standardverhalten werden alle diese Namen bei einem zweiten Durchlauf für einen anderen Auflösungs Versuch übermittelt.</span><span class="sxs-lookup"><span data-stu-id="7977c-111">In the default behavior, all such names are submitted for another resolution attempt on a second pass.</span></span> <span data-ttu-id="7977c-112">Im zweiten Durchlauf ist das allgemeine Name-Objekt-Diagramm vollständig, und alle fixuptoken können aufgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="7977c-112">On the second pass, the overall name-object graph is complete, and all the fixup tokens are able to resolve.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7977c-113">Auch wenn Sie durch eine bestimmte Implementierung zugelassen werden, haben vorwärts Verweise in XAML unweigerlich Leistungs Konsequenzen.</span><span class="sxs-lookup"><span data-stu-id="7977c-113">Even if they are permitted by a particular implementation, forward references in XAML inevitably have performance consequences.</span></span> <span data-ttu-id="7977c-114">Als bewährte Vorgehensweise für XAML mit Produktionsqualität sollten Sie nach Möglichkeit keine vorwärts Verweise vermeiden.</span><span class="sxs-lookup"><span data-stu-id="7977c-114">As a best practice for production-quality XAML, avoid forward references whenever possible.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Markup.INameScopeDictionary" />
    <altmember cref="T:System.Windows.NameScope" />
  </Docs>
  <Members>
    <Member MemberName="GetAllNamesAndValuesInScope">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; GetAllNamesAndValuesInScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; GetAllNamesAndValuesInScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IXamlNameResolver.GetAllNamesAndValuesInScope" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllNamesAndValuesInScope () As IEnumerable(Of KeyValuePair(Of String, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ GetAllNamesAndValuesInScope();" />
      <MemberSignature Language="F#" Value="abstract member GetAllNamesAndValuesInScope : unit -&gt; seq&lt;System.Collections.Generic.KeyValuePair&lt;string, obj&gt;&gt;" Usage="iXamlNameResolver.GetAllNamesAndValuesInScope " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7977c-115">Gibt einen aufzählbaren Satz aller benannten Objekte im XAML-Namescope zurück.</span><span class="sxs-lookup"><span data-stu-id="7977c-115">Returns an enumerable set of all named objects in the XAML namescope.</span></span></summary>
        <returns><span data-ttu-id="7977c-116">Ein aufzählbarer Satz von <see cref="T:System.Collections.Generic.KeyValuePair`2" />-Objekten.</span><span class="sxs-lookup"><span data-stu-id="7977c-116">An enumerable set of <see cref="T:System.Collections.Generic.KeyValuePair`2" /> objects.</span></span> <span data-ttu-id="7977c-117">Für jede <see cref="T:System.Collections.Generic.KeyValuePair`2" />-Struktur ist die <see cref="P:System.Collections.Generic.KeyValuePair`2.Key" />-Komponente eine Zeichenfolge, und die <see cref="P:System.Collections.Generic.KeyValuePair`2.Value" />-Komponente ist das Objekt, von dem der <see cref="P:System.Collections.Generic.KeyValuePair`2.Key" />-Name im XAML-Namescope verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="7977c-117">For each <see cref="T:System.Collections.Generic.KeyValuePair`2" />, the <see cref="P:System.Collections.Generic.KeyValuePair`2.Key" /> component is a string, and the <see cref="P:System.Collections.Generic.KeyValuePair`2.Value" /> component is the object that uses the <see cref="P:System.Collections.Generic.KeyValuePair`2.Key" /> name in the XAML namescope.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFixupToken">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7977c-118">Gibt ein Objekt zurück, das bestimmte Markupmuster korrigieren kann, die Vorwärtsverweise erzeugen.</span><span class="sxs-lookup"><span data-stu-id="7977c-118">Returns an object that can correct for certain markup patterns that produce forward references.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFixupToken">
      <MemberSignature Language="C#" Value="public object GetFixupToken (System.Collections.Generic.IEnumerable&lt;string&gt; names);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFixupToken(class System.Collections.Generic.IEnumerable`1&lt;string&gt; names) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFixupToken (names As IEnumerable(Of String)) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFixupToken(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ names);" />
      <MemberSignature Language="F#" Value="abstract member GetFixupToken : seq&lt;string&gt; -&gt; obj" Usage="iXamlNameResolver.GetFixupToken names" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="names" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="names"><span data-ttu-id="7977c-119">Eine Auflistung von Namen, die mögliche Vorwärtsverweise sind.</span><span class="sxs-lookup"><span data-stu-id="7977c-119">A collection of names that are possible forward references.</span></span></param>
        <summary><span data-ttu-id="7977c-120">Gibt ein Objekt zurück, das bestimmte Markupmuster korrigieren kann, die Vorwärtsverweise erzeugen.</span><span class="sxs-lookup"><span data-stu-id="7977c-120">Returns an object that can correct for certain markup patterns that produce forward references.</span></span></summary>
        <returns><span data-ttu-id="7977c-121">Ein Objekt, das ein Token für das Suchverhalten bereitstellt, das später ausgewertet werden soll.</span><span class="sxs-lookup"><span data-stu-id="7977c-121">An object that provides a token for lookup behavior to be evaluated later.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7977c-122">Vorhandene interne Dienstanbieter, die in Schema Kontexten für Markup Erweiterungen und Typkonverter verfügbar sind, können diesen Dienst implementieren. Allerdings wird ein interner Typ zurückgegeben, den nur die vorhandenen XAML-Writer verarbeiten können, die unter dem standardmäßigen XAML-Schema Kontext funktionieren.</span><span class="sxs-lookup"><span data-stu-id="7977c-122">Existing internal service providers that are available in schema contexts for markup extensions and type converters can implement this service; however, they return an internal type that only the existing XAML writers that work under the default XAML schema context can process.</span></span>  
  
 <span data-ttu-id="7977c-123">Wenn alle Namen, auf die verwiesen wird, auflösbar sind, wird der Benutzercode aufgerufen, um jeden Namen in der Liste zu analysieren.</span><span class="sxs-lookup"><span data-stu-id="7977c-123">When all the forward referenced names are resolvable, the user code is called to reparse each name in the list.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFixupToken">
      <MemberSignature Language="C#" Value="public object GetFixupToken (System.Collections.Generic.IEnumerable&lt;string&gt; names, bool canAssignDirectly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFixupToken(class System.Collections.Generic.IEnumerable`1&lt;string&gt; names, bool canAssignDirectly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFixupToken (names As IEnumerable(Of String), canAssignDirectly As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFixupToken(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ names, bool canAssignDirectly);" />
      <MemberSignature Language="F#" Value="abstract member GetFixupToken : seq&lt;string&gt; * bool -&gt; obj" Usage="iXamlNameResolver.GetFixupToken (names, canAssignDirectly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="names" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="canAssignDirectly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="names"><span data-ttu-id="7977c-124">Eine Auflistung von Namen, die mögliche Vorwärtsverweise sind.</span><span class="sxs-lookup"><span data-stu-id="7977c-124">A collection of names that are possible forward references.</span></span></param>
        <param name="canAssignDirectly"><span data-ttu-id="7977c-125"><see langword="true" />, wenn der aufgelöste Namensverweis sofort der Zieleigenschaft zugewiesen werden soll.</span><span class="sxs-lookup"><span data-stu-id="7977c-125"><see langword="true" /> to immediately assign the resolved name reference to the target property.</span></span> <span data-ttu-id="7977c-126"><see langword="false" />, wenn der Benutzercode für eine erneute Analyse aufgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="7977c-126"><see langword="false" /> to call the user code for a reparse.</span></span> <span data-ttu-id="7977c-127">Das Standardverhalten ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7977c-127">The default behavior is <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="7977c-128">Gibt ein Objekt zurück, das bestimmte Markupmuster korrigieren kann, die Vorwärtsverweise erzeugen.</span><span class="sxs-lookup"><span data-stu-id="7977c-128">Returns an object that can correct for certain markup patterns that produce forward references.</span></span></summary>
        <returns><span data-ttu-id="7977c-129">Ein Objekt, das ein Token für das Suchverhalten bereitstellt, das später ausgewertet werden soll.</span><span class="sxs-lookup"><span data-stu-id="7977c-129">An object that provides a token for lookup behavior to be evaluated later.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7977c-130">Vorhandene interne Dienstanbieter, die in Schema Kontexten für Markup Erweiterungen und Typkonverter verfügbar sind, implementieren diesen Dienst. Allerdings wird ein interner Typ zurückgegeben, der nur von den vorhandenen XAML-Writern verarbeitet werden kann, die im standardmäßigen XAML-Schema Kontext funktionieren.</span><span class="sxs-lookup"><span data-stu-id="7977c-130">Existing internal service providers that are available in schema contexts for markup extensions and type converters implement this service; however, they return an internal type that can only be processed by the existing XAML writers that work under the default XAML schema context.</span></span>  
  
 <span data-ttu-id="7977c-131">Wenn den Wert `canAssignDirectly` `false` hat und alle Namen, auf die verwiesen wird, auflösbar sind, wird der Benutzercode aufgerufen, um jeden Namen in der Liste zu analysieren.</span><span class="sxs-lookup"><span data-stu-id="7977c-131">If `canAssignDirectly` is `false`, when all the forward referenced names are resolvable, the user code is called to reparse each name in the list.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixupTokenAvailable">
      <MemberSignature Language="C#" Value="public bool IsFixupTokenAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixupTokenAvailable" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.IXamlNameResolver.IsFixupTokenAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFixupTokenAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFixupTokenAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFixupTokenAvailable : bool" Usage="System.Xaml.IXamlNameResolver.IsFixupTokenAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7977c-132">Ruft einen Wert ab, der bestimmt, ob der Aufruf der <see cref="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" />-Methode möglich ist, um einen Namen in ein Token für Vorwärtsauflösung aufzulösen.</span><span class="sxs-lookup"><span data-stu-id="7977c-132">Gets a value that determines whether calling <see cref="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" /> is available in order to resolve a name into a token for forward resolution.</span></span></summary>
        <value><span data-ttu-id="7977c-133"><see langword="true" />, wenn <see cref="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" /> als Implementierung verfügbar ist, von der ein nützliches Token für die Vorwärtsauflösung zurückgegeben wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7977c-133"><see langword="true" /> if <see cref="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" /> is available as an implementation that returns a useful token for forward resolution; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7977c-134">Diese Eigenschaft gibt zurück, `false` Wenn kein <xref:System.Xaml.IXamlNameResolver.GetFixupToken%2A> Token zurückgibt, da ein an <xref:System.Xaml.Schema.XamlValueConverter%601> der zweiten Übergabe an einem vorhandenen Token beteiligt ist.</span><span class="sxs-lookup"><span data-stu-id="7977c-134">This property returns `false` when <xref:System.Xaml.IXamlNameResolver.GetFixupToken%2A> does not return a token because a <xref:System.Xaml.Schema.XamlValueConverter%601> is involved in the second pass on an existing token.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNameScopeInitializationComplete">
      <MemberSignature Language="C#" Value="event EventHandler OnNameScopeInitializationComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler OnNameScopeInitializationComplete" />
      <MemberSignature Language="DocId" Value="E:System.Xaml.IXamlNameResolver.OnNameScopeInitializationComplete" />
      <MemberSignature Language="VB.NET" Value="Event OnNameScopeInitializationComplete As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ OnNameScopeInitializationComplete;" />
      <MemberSignature Language="F#" Value="member this.OnNameScopeInitializationComplete : EventHandler " Usage="member this.OnNameScopeInitializationComplete : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7977c-135">Tritt auf, wenn von einem XAML-Prozessor alle relevanten Namen zur Unterstützung des XAML-Namescopes registriert wurden.</span><span class="sxs-lookup"><span data-stu-id="7977c-135">Occurs when a XAML processor has registered all the relevant names to the backing XAML namescope.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resolve">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7977c-136">Löst ein Objekt aus einem Namensverweis auf.</span><span class="sxs-lookup"><span data-stu-id="7977c-136">Resolves an object from a name reference.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public object Resolve (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Resolve(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IXamlNameResolver.Resolve(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Resolve (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Resolve(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member Resolve : string -&gt; obj" Usage="iXamlNameResolver.Resolve name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="7977c-137">Der aufzulösende Namenverweis.</span><span class="sxs-lookup"><span data-stu-id="7977c-137">The name reference to resolve.</span></span></param>
        <summary><span data-ttu-id="7977c-138">Löst ein Objekt aus einem Namensverweis auf.</span><span class="sxs-lookup"><span data-stu-id="7977c-138">Resolves an object from a name reference.</span></span></summary>
        <returns><span data-ttu-id="7977c-139">Das aufgelöste Objekt oder NULL.</span><span class="sxs-lookup"><span data-stu-id="7977c-139">The resolved object; or null.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7977c-140">Wenn ein Wert als zurückgegeben wird `null` , kann ein vorwärts Verweis vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="7977c-140">If a value is returned as `null`, a forward reference might exist.</span></span> <span data-ttu-id="7977c-141">Implementierungen, die Forward-Verweise unterstützen möchten, können das `FixupToken` Muster über die <xref:System.Xaml.IXamlNameResolver.GetFixupToken%2A> -und- <xref:System.Xaml.IXamlNameResolver.IsFixupTokenAvailable%2A> APIs verwenden.</span><span class="sxs-lookup"><span data-stu-id="7977c-141">Implementations that want to support forward references can use the `FixupToken` pattern through the <xref:System.Xaml.IXamlNameResolver.GetFixupToken%2A> and <xref:System.Xaml.IXamlNameResolver.IsFixupTokenAvailable%2A> APIs.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.INameScope.FindName(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public object Resolve (string name, out bool isFullyInitialized);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Resolve(string name, [out] bool&amp; isFullyInitialized) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IXamlNameResolver.Resolve(System.String,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Resolve (name As String, ByRef isFullyInitialized As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Resolve(System::String ^ name, [Runtime::InteropServices::Out] bool % isFullyInitialized);" />
      <MemberSignature Language="F#" Value="abstract member Resolve : string * bool -&gt; obj" Usage="iXamlNameResolver.Resolve (name, isFullyInitialized)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="isFullyInitialized" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="7977c-142">Der aufzulösende Namenverweis.</span><span class="sxs-lookup"><span data-stu-id="7977c-142">The name reference to resolve.</span></span></param>
        <param name="isFullyInitialized"><span data-ttu-id="7977c-143">Nach dem Beenden dieser Methode <see langword="true" />, wenn das zurückgegebene Objekt von nicht aufgelösten Verweisen abhängig ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7977c-143">When this method returns, <see langword="true" /> if the returned object has any dependencies on unresolved references; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="7977c-144">Löst ein Objekt von einem Namensverweis auf und stellt einen Nachverfolgungswert bereit, durch den angegeben wird, ob das Objekt vollständig zu Objektdiagrammzwecken initialisiert wurde.</span><span class="sxs-lookup"><span data-stu-id="7977c-144">Resolves an object from a name reference, and provides a tracking value that reports whether the object is fully initialized for object graph purposes.</span></span></summary>
        <returns><span data-ttu-id="7977c-145">Ein Objekt, das ein Token für das Suchverhalten bereitstellt, das später ausgewertet werden soll.</span><span class="sxs-lookup"><span data-stu-id="7977c-145">An object that provides a token for lookup behavior to be evaluated later.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
