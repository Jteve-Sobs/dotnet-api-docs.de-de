<Type Name="IXamlNameResolver" FullName="System.Xaml.IXamlNameResolver">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d67e5a9c4f9c2ce02dc2b22b5eaba13b6e960c70" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69427524" /></Metadata><TypeSignature Language="C#" Value="public interface IXamlNameResolver" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IXamlNameResolver" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.IXamlNameResolver" />
  <TypeSignature Language="VB.NET" Value="Public Interface IXamlNameResolver" />
  <TypeSignature Language="C++ CLI" Value="public interface class IXamlNameResolver" />
  <TypeSignature Language="F#" Value="type IXamlNameResolver = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Beschreibt einen Dienst, von dem nach dem XAML-Namen angegebene Objekte zurückgegeben werden können, oder von dem alternativ ein Token zurückgegeben wird, das die Namensauflösung zurückstellt. Vom Dienst kann auch ein aufzählbarer Satz aller benannten Objekte zurückgegeben werden, die im XAML-Namescope enthalten sind.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Schnittstelle ist nicht für die externe Implementierung typischer XAML-Szenarien gedacht, da es sich um einen Dienst handelt. Dieser Dienst ermöglicht Markup Erweiterungen und Typkonvertern, XAML-Namen in andere Objekte aus derselben XAML-Quelle aufzulösen, während Sie sich noch in einer XAML-Knoten Darstellung befinden. Der Dienst kann verwendet werden, um Forward-Verweise für alle Mechanismen aufzulösen, die XAML-Namen für den nichtlinearen Zugriff auf die umgebende XAML-Produktion verwenden. Weitere Informationen finden Sie unter [Typkonverter und Markup Erweiterungen für XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md).  
  
 Typkonverter und Markup Erweiterungen können <xref:System.Xaml.IXamlNameResolver> als Dienst im Dienst Kontext Abfragen, der von einem XAML-objektwriter bereitgestellt wird, wenn der XAML-objektwriter das Wert Konvertierungs Verhalten aufruft. Weitere Informationen finden Sie unter [Typkonverter und Markup Erweiterungen für XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) und [Dienst Kontexte, die für Typkonverter und Markup Erweiterungen verfügbar sind](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).  
  
 Dieser Dienst macht eine API verfügbar, die die Namensauflösung verzögern kann. Die vom Dienst implementierte Metapher besteht darin, dass Namen, die nicht in einem ersten Durchlauf eines partiellen namens Objekt Diagramms aufgelöst werden können, gespeichert und zum Erstellen des fixuptokens verwendet werden. Im Standardverhalten werden alle diese Namen bei einem zweiten Durchlauf für einen anderen Auflösungs Versuch übermittelt. Im zweiten Durchlauf ist das allgemeine Name-Objekt-Diagramm vollständig, und alle fixuptoken können aufgelöst werden.  
  
> [!NOTE]
>  Auch wenn Sie durch eine bestimmte Implementierung zugelassen werden, haben vorwärts Verweise in XAML unweigerlich Leistungs Konsequenzen. Als bewährte Vorgehensweise für XAML mit Produktionsqualität sollten Sie nach Möglichkeit keine vorwärts Verweise vermeiden.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Markup.INameScopeDictionary" />
    <altmember cref="T:System.Windows.NameScope" />
  </Docs>
  <Members>
    <Member MemberName="GetAllNamesAndValuesInScope">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; GetAllNamesAndValuesInScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; GetAllNamesAndValuesInScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IXamlNameResolver.GetAllNamesAndValuesInScope" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllNamesAndValuesInScope () As IEnumerable(Of KeyValuePair(Of String, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ GetAllNamesAndValuesInScope();" />
      <MemberSignature Language="F#" Value="abstract member GetAllNamesAndValuesInScope : unit -&gt; seq&lt;System.Collections.Generic.KeyValuePair&lt;string, obj&gt;&gt;" Usage="iXamlNameResolver.GetAllNamesAndValuesInScope " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen aufzählbaren Satz aller benannten Objekte im XAML-Namescope zurück.</summary>
        <returns>Ein aufzählbarer Satz von <see cref="T:System.Collections.Generic.KeyValuePair`2" />-Objekten. Für jede <see cref="T:System.Collections.Generic.KeyValuePair`2" />-Struktur ist die <see cref="P:System.Collections.Generic.KeyValuePair`2.Key" />-Komponente eine Zeichenfolge, und die <see cref="P:System.Collections.Generic.KeyValuePair`2.Value" />-Komponente ist das Objekt, von dem der <see cref="P:System.Collections.Generic.KeyValuePair`2.Key" />-Name im XAML-Namescope verwendet wird.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFixupToken">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt ein Objekt zurück, das bestimmte Markupmuster korrigieren kann, die Vorwärtsverweise erzeugen.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFixupToken">
      <MemberSignature Language="C#" Value="public object GetFixupToken (System.Collections.Generic.IEnumerable&lt;string&gt; names);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFixupToken(class System.Collections.Generic.IEnumerable`1&lt;string&gt; names) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFixupToken (names As IEnumerable(Of String)) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFixupToken(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ names);" />
      <MemberSignature Language="F#" Value="abstract member GetFixupToken : seq&lt;string&gt; -&gt; obj" Usage="iXamlNameResolver.GetFixupToken names" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="names" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="names">Eine Auflistung von Namen, die mögliche Vorwärtsverweise sind.</param>
        <summary>Gibt ein Objekt zurück, das bestimmte Markupmuster korrigieren kann, die Vorwärtsverweise erzeugen.</summary>
        <returns>Ein Objekt, das ein Token für das Suchverhalten bereitstellt, das später ausgewertet werden soll.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vorhandene interne Dienstanbieter, die in Schema Kontexten für Markup Erweiterungen und Typkonverter verfügbar sind, können diesen Dienst implementieren. Allerdings wird ein interner Typ zurückgegeben, den nur die vorhandenen XAML-Writer verarbeiten können, die unter dem standardmäßigen XAML-Schema Kontext funktionieren.  
  
 Wenn alle Namen, auf die verwiesen wird, auflösbar sind, wird der Benutzercode aufgerufen, um jeden Namen in der Liste zu analysieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFixupToken">
      <MemberSignature Language="C#" Value="public object GetFixupToken (System.Collections.Generic.IEnumerable&lt;string&gt; names, bool canAssignDirectly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFixupToken(class System.Collections.Generic.IEnumerable`1&lt;string&gt; names, bool canAssignDirectly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFixupToken (names As IEnumerable(Of String), canAssignDirectly As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFixupToken(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ names, bool canAssignDirectly);" />
      <MemberSignature Language="F#" Value="abstract member GetFixupToken : seq&lt;string&gt; * bool -&gt; obj" Usage="iXamlNameResolver.GetFixupToken (names, canAssignDirectly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="names" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="canAssignDirectly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="names">Eine Auflistung von Namen, die mögliche Vorwärtsverweise sind.</param>
        <param name="canAssignDirectly"><see langword="true" />, wenn der aufgelöste Namensverweis sofort der Zieleigenschaft zugewiesen werden soll. <see langword="false" />, wenn der Benutzercode für eine erneute Analyse aufgerufen werden soll. Das Standardverhalten ist <see langword="false" />.</param>
        <summary>Gibt ein Objekt zurück, das bestimmte Markupmuster korrigieren kann, die Vorwärtsverweise erzeugen.</summary>
        <returns>Ein Objekt, das ein Token für das Suchverhalten bereitstellt, das später ausgewertet werden soll.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vorhandene interne Dienstanbieter, die in Schema Kontexten für Markup Erweiterungen und Typkonverter verfügbar sind, implementieren diesen Dienst. Allerdings wird ein interner Typ zurückgegeben, der nur von den vorhandenen XAML-Writern verarbeitet werden kann, die im standardmäßigen XAML-Schema Kontext funktionieren.  
  
 Wenn `canAssignDirectly` den `false`Wert hat und alle Namen, auf die verwiesen wird, auflösbar sind, wird der Benutzercode aufgerufen, um jeden Namen in der Liste zu analysieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixupTokenAvailable">
      <MemberSignature Language="C#" Value="public bool IsFixupTokenAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixupTokenAvailable" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.IXamlNameResolver.IsFixupTokenAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFixupTokenAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFixupTokenAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFixupTokenAvailable : bool" Usage="System.Xaml.IXamlNameResolver.IsFixupTokenAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der bestimmt, ob der Aufruf der <see cref="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" />-Methode möglich ist, um einen Namen in ein Token für Vorwärtsauflösung aufzulösen.</summary>
        <value><see langword="true" />, wenn <see cref="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" /> als Implementierung verfügbar ist, von der ein nützliches Token für die Vorwärtsauflösung zurückgegeben wird, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft gibt `false` zurück <xref:System.Xaml.IXamlNameResolver.GetFixupToken%2A> , wenn kein Token zurückgibt, <xref:System.Xaml.Schema.XamlValueConverter%601> da ein an der zweiten Übergabe an einem vorhandenen Token beteiligt ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNameScopeInitializationComplete">
      <MemberSignature Language="C#" Value="event EventHandler OnNameScopeInitializationComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler OnNameScopeInitializationComplete" />
      <MemberSignature Language="DocId" Value="E:System.Xaml.IXamlNameResolver.OnNameScopeInitializationComplete" />
      <MemberSignature Language="VB.NET" Value="Event OnNameScopeInitializationComplete As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ OnNameScopeInitializationComplete;" />
      <MemberSignature Language="F#" Value="member this.OnNameScopeInitializationComplete : EventHandler " Usage="member this.OnNameScopeInitializationComplete : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn von einem XAML-Prozessor alle relevanten Namen zur Unterstützung des XAML-Namescopes registriert wurden.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resolve">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Löst ein Objekt aus einem Namensverweis auf.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public object Resolve (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Resolve(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IXamlNameResolver.Resolve(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Resolve (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Resolve(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member Resolve : string -&gt; obj" Usage="iXamlNameResolver.Resolve name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der aufzulösende Namenverweis.</param>
        <summary>Löst ein Objekt aus einem Namensverweis auf.</summary>
        <returns>Das aufgelöste Objekt oder NULL.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein Wert als `null`zurückgegeben wird, kann ein vorwärts Verweis vorhanden sein. Implementierungen, die Forward-Verweise unterstützen möchten, `FixupToken` können das Muster <xref:System.Xaml.IXamlNameResolver.GetFixupToken%2A> über <xref:System.Xaml.IXamlNameResolver.IsFixupTokenAvailable%2A> die-und-APIs verwenden.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.INameScope.FindName(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public object Resolve (string name, out bool isFullyInitialized);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Resolve(string name, [out] bool&amp; isFullyInitialized) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IXamlNameResolver.Resolve(System.String,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Resolve (name As String, ByRef isFullyInitialized As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Resolve(System::String ^ name, [Runtime::InteropServices::Out] bool % isFullyInitialized);" />
      <MemberSignature Language="F#" Value="abstract member Resolve : string *  -&gt; obj" Usage="iXamlNameResolver.Resolve (name, isFullyInitialized)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="isFullyInitialized" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name">Der aufzulösende Namenverweis.</param>
        <param name="isFullyInitialized">Nach dem Beenden dieser Methode <see langword="true" />, wenn das zurückgegebene Objekt von nicht aufgelösten Verweisen abhängig ist, andernfalls <see langword="false" />.</param>
        <summary>Löst ein Objekt von einem Namensverweis auf und stellt einen Nachverfolgungswert bereit, durch den angegeben wird, ob das Objekt vollständig zu Objektdiagrammzwecken initialisiert wurde.</summary>
        <returns>Ein Objekt, das ein Token für das Suchverhalten bereitstellt, das später ausgewertet werden soll.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
