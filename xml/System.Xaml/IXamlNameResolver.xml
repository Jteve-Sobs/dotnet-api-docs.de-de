<Type Name="IXamlNameResolver" FullName="System.Xaml.IXamlNameResolver">
  <Metadata><Meta Name="ms.openlocfilehash" Value="314f8938eb885657afa66593d61c25f5593412a0" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64288345" /></Metadata><TypeSignature Language="C#" Value="public interface IXamlNameResolver" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IXamlNameResolver" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.IXamlNameResolver" />
  <TypeSignature Language="VB.NET" Value="Public Interface IXamlNameResolver" />
  <TypeSignature Language="C++ CLI" Value="public interface class IXamlNameResolver" />
  <TypeSignature Language="F#" Value="type IXamlNameResolver = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Beschreibt einen Dienst, von dem nach dem XAML-Namen angegebene Objekte zurückgegeben werden können, oder von dem alternativ ein Token zurückgegeben wird, das die Namensauflösung zurückstellt. Vom Dienst kann auch ein aufzählbarer Satz aller benannten Objekte zurückgegeben werden, die im XAML-Namescope enthalten sind.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Schnittstelle ist nicht für die externe Implementierung des typische XAML-Szenarien vorgesehen, da es sich um einen Dienst handelt. Dieser Dienst ermöglicht es, Markuperweiterungen und Typkonverter um XAML-Namen auf andere Objekte aus derselben Quelle von XAML aufzulösen, während sie weiterhin in einer XAML-knotendarstellung sind. Der Dienst kann verwendet werden, um Vorwärtsverweise für jedweden Mechanismus zu beheben, die XAML-Namen für die nicht lineare Zugriff auf die umgebenden XAML-Produktion verwendet. Weitere Informationen finden Sie unter [Typkonverter und Markuperweiterungen für XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md).  
  
 Typkonverter und Markuperweiterungen können Abfragen für <xref:System.Xaml.IXamlNameResolver> als Dienst auf den Dienstkontext, der durch ein XAML-Objektwriter bereitgestellt wird, wenn der XAML-Objektwriter Wertkonvertierungsverhalten aufruft. Weitere Informationen finden Sie unter [Typkonverter und Markuperweiterungen für XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) und [Service Contexts Available to Type Converters and Markup Extensions](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).  
  
 Dieser Dienst macht eine API, die namensauflösung den Vortritt lassen. Die Metapher, die vom Dienst implementiert ist, dass die Namen, die im ersten Schritt für eine partielle Name / Objekt-Graph nicht aufgelöst werden können gespeichert und zum Erstellen des Fixuptokens verwendet werden soll. Das Standardverhalten werden alle solchen Namen für einen anderen Auflösungsversuch auf einem zweiten Durchlauf gesendet. Klicken Sie im zweiten Durchlauf der allgemeine Name / Objekt-Diagramm abgeschlossen ist, und alle Fixup-Token sind auflösen.  
  
> [!NOTE]
>  Auch wenn sie durch eine bestimmte Implementierung zulässig sind, können Vorwärtsverweisen in XAML unweigerlich die Leistung beeinträchtigen. Vermeiden Sie als bewährte Methode für die Produktion einsetzbaren XAML Vorwärtsverweise, wann immer möglich.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Markup.INameScopeDictionary" />
    <altmember cref="T:System.Windows.NameScope" />
  </Docs>
  <Members>
    <Member MemberName="GetAllNamesAndValuesInScope">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; GetAllNamesAndValuesInScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; GetAllNamesAndValuesInScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IXamlNameResolver.GetAllNamesAndValuesInScope" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllNamesAndValuesInScope () As IEnumerable(Of KeyValuePair(Of String, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ GetAllNamesAndValuesInScope();" />
      <MemberSignature Language="F#" Value="abstract member GetAllNamesAndValuesInScope : unit -&gt; seq&lt;System.Collections.Generic.KeyValuePair&lt;string, obj&gt;&gt;" Usage="iXamlNameResolver.GetAllNamesAndValuesInScope " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen aufzählbaren Satz aller benannten Objekte im XAML-Namescope zurück.</summary>
        <returns>Ein aufzählbarer Satz von <see cref="T:System.Collections.Generic.KeyValuePair`2" />-Objekten. Für jede <see cref="T:System.Collections.Generic.KeyValuePair`2" />-Struktur ist die <see cref="P:System.Collections.Generic.KeyValuePair`2.Key" />-Komponente eine Zeichenfolge, und die <see cref="P:System.Collections.Generic.KeyValuePair`2.Value" />-Komponente ist das Objekt, von dem der <see cref="P:System.Collections.Generic.KeyValuePair`2.Key" />-Name im XAML-Namescope verwendet wird.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFixupToken">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt ein Objekt zurück, das bestimmte Markupmuster korrigieren kann, die Vorwärtsverweise erzeugen.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFixupToken">
      <MemberSignature Language="C#" Value="public object GetFixupToken (System.Collections.Generic.IEnumerable&lt;string&gt; names);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFixupToken(class System.Collections.Generic.IEnumerable`1&lt;string&gt; names) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFixupToken (names As IEnumerable(Of String)) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFixupToken(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ names);" />
      <MemberSignature Language="F#" Value="abstract member GetFixupToken : seq&lt;string&gt; -&gt; obj" Usage="iXamlNameResolver.GetFixupToken names" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="names" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="names">Eine Auflistung von Namen, die mögliche Vorwärtsverweise sind.</param>
        <summary>Gibt ein Objekt zurück, das bestimmte Markupmuster korrigieren kann, die Vorwärtsverweise erzeugen.</summary>
        <returns>Ein Objekt, das ein Token für das Suchverhalten bereitstellt, das später ausgewertet werden soll.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vorhandenen internen Dienstanbieter, die finden Sie im Schema-Kontexten für Markuperweiterungen und Typkonverter können diesen Dienst implementieren. Geben sie jedoch einen internen Typ, den nur den vorhandenen XAML Writer an, die in der Standard-XAML-Schemakontext funktionieren verarbeiten kann zurück.  
  
 Wenn alle vorwärts referenzierten Namen aufgelöst werden, der Benutzercode aufgerufen, um abweichender jeder Name in der Liste.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFixupToken">
      <MemberSignature Language="C#" Value="public object GetFixupToken (System.Collections.Generic.IEnumerable&lt;string&gt; names, bool canAssignDirectly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFixupToken(class System.Collections.Generic.IEnumerable`1&lt;string&gt; names, bool canAssignDirectly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFixupToken (names As IEnumerable(Of String), canAssignDirectly As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFixupToken(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ names, bool canAssignDirectly);" />
      <MemberSignature Language="F#" Value="abstract member GetFixupToken : seq&lt;string&gt; * bool -&gt; obj" Usage="iXamlNameResolver.GetFixupToken (names, canAssignDirectly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="names" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="canAssignDirectly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="names">Eine Auflistung von Namen, die mögliche Vorwärtsverweise sind.</param>
        <param name="canAssignDirectly"><see langword="true" />, wenn der aufgelöste Namensverweis sofort der Zieleigenschaft zugewiesen werden soll. <see langword="false" />, wenn der Benutzercode für eine erneute Analyse aufgerufen werden soll. Das Standardverhalten ist <see langword="false" />.</param>
        <summary>Gibt ein Objekt zurück, das bestimmte Markupmuster korrigieren kann, die Vorwärtsverweise erzeugen.</summary>
        <returns>Ein Objekt, das ein Token für das Suchverhalten bereitstellt, das später ausgewertet werden soll.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vorhandenen internen Dienstanbieter, die finden Sie im Schema-Kontexten für Markuperweiterungen und Typkonverter implementieren dieses Diensts. Geben sie jedoch einen internen Typ, der nur von den vorhandenen XAML-Writern verarbeitet werden kann, die in der Standard-XAML-Schemakontext funktionieren zurück.  
  
 Wenn `canAssignDirectly` ist `false`, wenn alle vorwärts referenzierten Namen aufgelöst werden kann, sind der Benutzercode wird aufgerufen, um jeder Name in der Liste erneut analysiert werden muss.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixupTokenAvailable">
      <MemberSignature Language="C#" Value="public bool IsFixupTokenAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixupTokenAvailable" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.IXamlNameResolver.IsFixupTokenAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFixupTokenAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFixupTokenAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFixupTokenAvailable : bool" Usage="System.Xaml.IXamlNameResolver.IsFixupTokenAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der bestimmt, ob der Aufruf der <see cref="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" />-Methode möglich ist, um einen Namen in ein Token für Vorwärtsauflösung aufzulösen.</summary>
        <value><see langword="true" />, wenn <see cref="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" /> als Implementierung verfügbar ist, von der ein nützliches Token für die Vorwärtsauflösung zurückgegeben wird, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft gibt `false` beim <xref:System.Xaml.IXamlNameResolver.GetFixupToken%2A> ein Token wird nicht zurückgegeben werden, da eine <xref:System.Xaml.Schema.XamlValueConverter%601> im zweiten Durchlauf auf einem vorhandenen Token beteiligt ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNameScopeInitializationComplete">
      <MemberSignature Language="C#" Value="event EventHandler OnNameScopeInitializationComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler OnNameScopeInitializationComplete" />
      <MemberSignature Language="DocId" Value="E:System.Xaml.IXamlNameResolver.OnNameScopeInitializationComplete" />
      <MemberSignature Language="VB.NET" Value="Event OnNameScopeInitializationComplete As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ OnNameScopeInitializationComplete;" />
      <MemberSignature Language="F#" Value="member this.OnNameScopeInitializationComplete : EventHandler " Usage="member this.OnNameScopeInitializationComplete : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn von einem XAML-Prozessor alle relevanten Namen zur Unterstützung des XAML-Namescopes registriert wurden.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resolve">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Löst ein Objekt aus einem Namensverweis auf.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public object Resolve (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Resolve(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IXamlNameResolver.Resolve(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Resolve (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Resolve(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member Resolve : string -&gt; obj" Usage="iXamlNameResolver.Resolve name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der aufzulösende Namenverweis.</param>
        <summary>Löst ein Objekt aus einem Namensverweis auf.</summary>
        <returns>Das aufgelöste Objekt oder NULL.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein Wert, als zurückgegeben wird `null`, ein Vorwärtsverweis existieren. Implementierungen, die Vorwärtsverweise unterstützen möchten können die `FixupToken` Muster über die <xref:System.Xaml.IXamlNameResolver.GetFixupToken%2A> und <xref:System.Xaml.IXamlNameResolver.IsFixupTokenAvailable%2A> APIs.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.INameScope.FindName(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public object Resolve (string name, out bool isFullyInitialized);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Resolve(string name, [out] bool&amp; isFullyInitialized) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IXamlNameResolver.Resolve(System.String,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Resolve (name As String, ByRef isFullyInitialized As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Resolve(System::String ^ name, [Runtime::InteropServices::Out] bool % isFullyInitialized);" />
      <MemberSignature Language="F#" Value="abstract member Resolve : string *  -&gt; obj" Usage="iXamlNameResolver.Resolve (name, isFullyInitialized)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="isFullyInitialized" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name">Der aufzulösende Namenverweis.</param>
        <param name="isFullyInitialized">Nach dem Beenden dieser Methode <see langword="true" />, wenn das zurückgegebene Objekt von nicht aufgelösten Verweisen abhängig ist, andernfalls <see langword="false" />.</param>
        <summary>Löst ein Objekt von einem Namensverweis auf und stellt einen Nachverfolgungswert bereit, durch den angegeben wird, ob das Objekt vollständig zu Objektdiagrammzwecken initialisiert wurde.</summary>
        <returns>Ein Objekt, das ein Token für das Suchverhalten bereitstellt, das später ausgewertet werden soll.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>