<Type Name="XamlNodeQueue" FullName="System.Xaml.XamlNodeQueue">
  <Metadata><Meta Name="ms.openlocfilehash" Value="897946bb72137131b83651a1b5aec9f497c63de8" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86692187" /></Metadata><TypeSignature Language="C#" Value="public class XamlNodeQueue" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlNodeQueue extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlNodeQueue" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlNodeQueue" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlNodeQueue" />
  <TypeSignature Language="F#" Value="type XamlNodeQueue = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt einen Puffer zum Schreiben von Knoten und zum Lesen der Knoten bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Knoten werden vom verwendet, <xref:System.Xaml.XamlNodeQueue> Wenn Sie vom XAML-Reader gelesen werden. Wenn Sie eine Liste von XAML-Knoten benötigen, die wiedergegeben werden können, oder ein Listen Modell, das zufälligen Zugriff unterstützt, finden Sie weitere Informationen unter <xref:System.Xaml.XamlNodeList> .  
  
 Wenn Sie ein erstellen <xref:System.Xaml.XamlNodeQueue> , erstellen Sie einen Writer-Delegaten, der als Wert vorhanden ist <xref:System.Xaml.XamlNodeQueue.Writer%2A> . Der Writer-Delegat basiert auf einer internen XAML-Writer-Klasse, die speziell für XAML-Knoten gilt.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlNodeQueue (System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlNodeQueue.#ctor(System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlNodeQueue(System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlNodeQueue : System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlNodeQueue" Usage="new System.Xaml.XamlNodeQueue schemaContext" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="schemaContext">Der Schemakontext, der für Knotenvorgänge verwendet werden soll.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlNodeQueue" />-Klasse unter Verwendung des angegebenen XAML-Schemakontexts.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Schema Kontext wird auf den XAML-Writer angewendet, der als <xref:System.Xaml.XamlNodeQueue.Writer%2A> Wert vorhanden ist.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="xamlSchemaContext" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlNodeQueue.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Xaml.XamlNodeQueue.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Knoten im <see cref="T:System.Xaml.XamlNodeQueue" />-Objekt ab.</summary>
        <value>Die Anzahl der Knoten im <see cref="T:System.Xaml.XamlNodeQueue" />-Objekt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlNodeQueue.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="System.Xaml.XamlNodeQueue.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der bestimmt, ob dieses <see cref="T:System.Xaml.XamlNodeQueue" />-Objekt keine Knoten enthält.</summary>
        <value><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlNodeQueue" />-Objekt keine Knoten enthält. <see langword="false" />, wenn dieses <see cref="T:System.Xaml.XamlNodeQueue" />-Objekt Knoten enthält.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reader">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlReader Reader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlReader Reader" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlNodeQueue.Reader" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Reader As XamlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlReader ^ Reader { System::Xaml::XamlReader ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Reader : System.Xaml.XamlReader" Usage="System.Xaml.XamlNodeQueue.Reader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlReader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Implementierungsdelegat für den XAML-Reader ab.</summary>
        <value>Ein Implementierungsdelegat für den XAML-Reader.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Xaml.XamlException">Der XAML-Writer, der für die Knotenliste verwendet wird, ist kein gültiger XAML-Schemakontext.</exception>
      </Docs>
    </Member>
    <Member MemberName="Writer">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlWriter Writer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlWriter Writer" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlNodeQueue.Writer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Writer As XamlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlWriter ^ Writer { System::Xaml::XamlWriter ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Writer : System.Xaml.XamlWriter" Usage="System.Xaml.XamlNodeQueue.Writer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den zugeordneten XAML-Writer ab.</summary>
        <value>Der zugeordnete XAML-Writer.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xaml.XamlObjectWriter" />
      </Docs>
    </Member>
  </Members>
</Type>
