<Type Name="IAmbientProvider" FullName="System.Xaml.IAmbientProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b1efea7e8c431289711e4bdfb3feaf27fa12d53e" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52590842" /></Metadata><TypeSignature Language="C#" Value="public interface IAmbientProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAmbientProvider" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.IAmbientProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAmbientProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAmbientProvider" />
  <TypeSignature Language="F#" Value="type IAmbientProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Stellt einen Dienst dar, von dem Informationselemente zu Ambient-Eigenschaften oder Ambient-Typen an Typkonverter und Markuperweiterungen zurückgegeben werden können.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Schnittstelle stellt den Dienst, mit denen Typkonverter und Markuperweiterungen zum Abrufen der ambient-Eigenschaft-IDs für das XAML-Typsystem kann (<xref:System.Xaml.XamlMember> Objekte). Der Dienst kann auch die ambient-Eigenschaftswerte aus Klassen abrufen. Typen können auch ambient sein. ein Element, das als Wert dieses Typs wird verwendet, sollte als ambient betrachtet werden.  
  
 Dieser Dienst wird in der Regel durch einen Aufruf zurückgegeben <xref:System.IServiceProvider.GetService%2A>, die ein Dienstkontext-spezifischen Dienstanbieter erfolgt. Der Dienstanbieter steht in der Regel Kontexte, die sie, wie der Ausführungscode eines Wertkonverters benötigen. Weitere Informationen finden Sie unter [Typkonverter und Markuperweiterungen für XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) und [Service Contexts Available to Type Converters and Markup Extensions](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).  
  
## <a name="about-ambient-properties"></a>Informationen zu Ambient-Eigenschaften  
 Eine Ambiente-Eigenschaft ist eine Eigenschaft, deren Eigenschaftswert in den Typ-Konverter und Markuperweiterungsverwendungen, die vorhanden sind, in die XAML-Knotenstruktur und das Objektdiagramm, die von ihr erstellten verfügbar sein sollte. Dies ist relevant für einen XAML-Prozessor, während der Phase Objekt zum Schreiben des Pfads laden oder der Serialisierungsphase eines Speichervorgangs Pfad.  
  
 Im Fall Pfad laden kann der Wert der ambient-Eigenschaft den Wert in ein Objektdiagramm aus anderen Eigenschaften beeinflussen, die darunter liegenden in einer XAML-Knotenstruktur vorhanden sind. Bei der Verarbeitung als eine XAML-Knotenstream das Umgebungskonzept bedeutet, dass der Wert der ambient-Eigenschaft muss für Typkonverter und Markuperweiterungen von `StartObject` zu `EndObject`. Auf ähnliche Weise einen Typkonverter, der verwendet wird, für den Speichervorgang Pfad Kenntnisse über die ambient-Eigenschaft und den Wert verwenden kann. Daher ist die XAML, das erstellt wird eine bessere Round-Trip-Darstellung.  
  
 Für Elemente in der Regel gibt XAML die Reihenfolge keine in der Member eines Objekts verarbeitet werden müssen. Jedoch ambient-Eigenschaft-Wert muss zuerst verarbeitet werden, die der XAML-Reader, damit die Typ-Konverter und Markuperweiterungsverwendungen, die in anderen Eigenschaften enthalten sind, die über zugreifen können die <xref:System.Xaml.IAmbientProvider> Service.  
  
 <xref:System.Xaml.XamlMember.DependsOn%2A> ist ein ähnliches Konzept, das XAML-Knoten-Verarbeitungsreihenfolge auch beeinflusst. Allerdings <xref:System.Xaml.XamlMember.DependsOn%2A> kann nur verwendet werden, für die Peer-Member und Knoten Beziehungen; es kann nicht alle abhängigen Elemente beeinflussen. Darüber hinaus <xref:System.Xaml.XamlMember.DependsOn%2A> direkt beeinflusst Graph-Eigenschaft festlegen; Objekt während die Ambiente-Technik Typkonverter oder Markuperweiterungen verwendet. In der ambient-Technik muss gibt es zudem eine bestimmte Typkonverter oder die Erweiterung Markupdefinition, der angibt, wie der ambient-Eigenschaft-Wert interpretiert und auf das Objekt angewendet werden soll.  
  
## <a name="wpf-usage-notes"></a>Hinweise zur WPF-Verwendung  
 Eine ambient-Eigenschaft-Szenario, das im dargestellt ist die [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Featuresatz ist <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType>, die können die erforderliche Eigenschaft Name Nachschlagefelder für andere Werte qualifizieren. In diesem Fall die <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> Wert qualifiziert die <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> Werte, die in die darunter liegenden XAML-Knoten befinden. <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> wird verwendet, der Typkonverterverhalten für eine <xref:System.Windows.DependencyProperty>. Dieses Verhalten greift auf den Ambient- <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> Wert durch Abfragen <xref:System.Xaml.IAmbientProvider.GetFirstAmbientValue%2A> aus einen Dienstkontext, der für Typkonverter und Markuperweiterungen verfügbar ist.  
  
 Eine ambient-Typ-Szenario, die in der WPF-Featuresatz dargestellte ist <xref:System.Windows.ResourceDictionary>. <xref:System.Windows.ResourceDictionary> verfügt über eine <xref:System.Windows.ResourceDictionary.MergedDictionaries%2A> -Eigenschaft, die andere enthält kann <xref:System.Windows.ResourceDictionary> Objekte zusammenführen und der gewünschten Auflösungsreihenfolge Ressource für die zusammengeführten Szenario Konflikte mit der Reihenfolge, in Typen geladen werden. <xref:System.Windows.ResourceDictionary> wendet <xref:System.Windows.Markup.AmbientAttribute> , damit ein XAML-Prozessor die Verweise in einem zusammengeführten Wörterbuch mit ordnungsgemäß verarbeiten kann `StaticResource` Verwendungen. Insbesondere `StaticResource` ist eine Markuperweiterung, die aufruft <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%2A>.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.AmbientPropertyValue" />
  </Docs>
  <Members>
    <MemberGroup MemberName="GetAllAmbientValues">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt einen aufzählbaren Satz von Ambient-Typ- oder Eigenschaftsinformationselementen für den angeforderten Bereich zurück.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAllAmbientValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;object&gt; GetAllAmbientValues (params System.Xaml.XamlType[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;object&gt; GetAllAmbientValues(class System.Xaml.XamlType[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Xaml.XamlType[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAmbientValues (ParamArray types As XamlType()) As IEnumerable(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ GetAllAmbientValues(... cli::array &lt;System::Xaml::XamlType ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="abstract member GetAllAmbientValues : System.Xaml.XamlType[] -&gt; seq&lt;obj&gt;" Usage="iAmbientProvider.GetAllAmbientValues types" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Xaml.XamlType[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="types">Der Satz von Typen, von dem Informationen zu Ambient-Typen abgerufen werden sollen.</param>
        <summary>Gibt einen aufzählbaren Satz von Objektinstanzen möglicher Ambient-Typen für die angeforderten Typen zurück.</summary>
        <returns>Ein aufzählbarer Satz von Objekten, die die Werte für den angeforderten Satz von <see cref="T:System.Xaml.XamlType" />-Bezeichnern darstellen.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAmbientValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues (System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; ceilingTypes, params System.Xaml.XamlMember[] properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues(class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; ceilingTypes, class System.Xaml.XamlMember[] properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAmbientValues (ceilingTypes As IEnumerable(Of XamlType), ParamArray properties As XamlMember()) As IEnumerable(Of AmbientPropertyValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Xaml::AmbientPropertyValue ^&gt; ^ GetAllAmbientValues(System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ ceilingTypes, ... cli::array &lt;System::Xaml::XamlMember ^&gt; ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member GetAllAmbientValues : seq&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlMember[] -&gt; seq&lt;System.Xaml.AmbientPropertyValue&gt;" Usage="iAmbientProvider.GetAllAmbientValues (ceilingTypes, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ceilingTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="properties" Type="System.Xaml.XamlMember[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ceilingTypes">Gibt mindestens einen Typ an, von dem die Auswertung beendet werden sollte, wenn er im Objektdiagramm nach oben traversiert wird. Dieser Typ enthält die gewünschte Ambient-Eigenschaft. Kann <see langword="null" /> sein.</param>
        <param name="properties">Gibt mindestens einen Eigenschaftenbezeichner an, durch den die Eigenschaften identifiziert werden, die als ambient betrachtet werden sollen.</param>
        <summary>Gibt einen aufzählbaren Satz von Ambient-Eigenschaftsinformationselementen für den angeforderten Eigenschaftssatz zurück.</summary>
        <returns>Ein aufzählbarer Satz von Ambient-Eigenschaftsinformationselementen für den angeforderten Satz von Eigenschaften. Die Eigenschaftsinformationen für jedes zurückgegebene <see cref="T:System.Xaml.AmbientPropertyValue" />-Objekt entsprechen einer der eingegebenen <paramref name="properties" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jede <xref:System.Xaml.AmbientPropertyValue> zurückgegeben wird, enthält die <xref:System.Xaml.XamlMember> -ID und einen Eigenschaftswert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAmbientValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues (System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; ceilingTypes, bool searchLiveStackOnly, System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; types, params System.Xaml.XamlMember[] properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues(class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; ceilingTypes, bool searchLiveStackOnly, class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; types, class System.Xaml.XamlMember[] properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Boolean,System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAmbientValues (ceilingTypes As IEnumerable(Of XamlType), searchLiveStackOnly As Boolean, types As IEnumerable(Of XamlType), ParamArray properties As XamlMember()) As IEnumerable(Of AmbientPropertyValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Xaml::AmbientPropertyValue ^&gt; ^ GetAllAmbientValues(System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ ceilingTypes, bool searchLiveStackOnly, System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ types, ... cli::array &lt;System::Xaml::XamlMember ^&gt; ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member GetAllAmbientValues : seq&lt;System.Xaml.XamlType&gt; * bool * seq&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlMember[] -&gt; seq&lt;System.Xaml.AmbientPropertyValue&gt;" Usage="iAmbientProvider.GetAllAmbientValues (ceilingTypes, searchLiveStackOnly, types, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ceilingTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="searchLiveStackOnly" Type="System.Boolean" />
        <Parameter Name="types" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="properties" Type="System.Xaml.XamlMember[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ceilingTypes">Gibt mindestens einen Typ an, von dem die Auswertung beendet werden sollte, wenn er im Objektdiagramm nach oben traversiert wird. Dieser Typ enthält die gewünschte Ambient-Eigenschaft. Kann <see langword="null" /> sein.</param>
        <param name="searchLiveStackOnly"><see langword="true" />, um keinen gespeicherten Kontext zu verwenden; <see langword="false" />, um einen gespeicherten Kontext zu verwenden. Der Standardwert ist <see langword="false" />.</param>
        <param name="types">Gibt mindestens ein Typbezeichnerobjekt an, das die Typen identifiziert, die als ambient betrachtet werden sollen.</param>
        <param name="properties">Gibt mindestens einen Eigenschaftenbezeichner an, durch den die Eigenschaften identifiziert werden, die als ambient betrachtet werden sollen.</param>
        <summary>Gibt einen aufzählbaren Satz von Ambient-Eigenschaftsinformationselementen für den angeforderten Satz von Typen und Eigenschaften zurück.</summary>
        <returns>Ein aufzählbarer Satz von Ambient-Eigenschaftsinformationselementen für den angeforderten Satz von Typen und Eigenschaften. Die Eigenschaftsinformationen für jedes zurückgegebene <see cref="T:System.Xaml.AmbientPropertyValue" />-Objekt entsprechen einer der eingegebenen <paramref name="types" /> oder <paramref name="properties" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jede <xref:System.Xaml.AmbientPropertyValue> zurückgegeben wird, enthält die <xref:System.Xaml.XamlMember> -ID und einen Eigenschaftswert.  
  
 Dieser spezielle <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%2A> Überladung kann ambient-Typen suchen und die Ambiente-Eigenschaften in der gleichen pass-through-Struktur. Mit dieser Überladung führt zu einer Sortierung der Elemente in der zurückgegebene Wert, der sich vom <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Collections.Generic.IEnumerable%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlMember%5B%5D%29> oder <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Xaml.XamlType%5B%5D%29>.  
  
 Diese Überladung ermöglicht auch die Suche auf alle gespeicherten Kontext nicht verwendet. Die <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Collections.Generic.IEnumerable%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlMember%5B%5D%29> oder <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Xaml.XamlType%5B%5D%29> Überladungen implizit einen gespeicherten Kontext verwenden, sofern diese verfügbar ist (sie immer fungieren, als wäre eine implizite `searchLiveStackOnly` Parameter `false`). Das Konzept der gespeicherten Kontext wird möglicherweise anders behandelt werden, indem bestimmten XAML-Schema-Kontexten oder Frameworks, die XAML einbinden. In der WPF XAML-Implementierung werden die gespeicherten Kontexte für vorlagenerweiterung sowie andere Funktionsbereiche verwendet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFirstAmbientValue">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt einen einzelnen Ambient-Typ oder ein Eigenschaftsinformationselement vom angeforderten Satz zurück. Dies ist abhängig von der zuerst gefundenen Eigenschaft.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFirstAmbientValue">
      <MemberSignature Language="C#" Value="public object GetFirstAmbientValue (params System.Xaml.XamlType[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFirstAmbientValue(class System.Xaml.XamlType[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Xaml.XamlType[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstAmbientValue (ParamArray types As XamlType()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFirstAmbientValue(... cli::array &lt;System::Xaml::XamlType ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="abstract member GetFirstAmbientValue : System.Xaml.XamlType[] -&gt; obj" Usage="iAmbientProvider.GetFirstAmbientValue types" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Xaml.XamlType[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="types">Der Satz von Typen, von dem Informationen zu Ambient-Typen abgerufen werden sollen.</param>
        <summary>Gibt das erste übereinstimmende Objekt zurück, bei dem es sich um einen möglichen Ambient-Typ für die angeforderten Typen handelt.</summary>
        <returns>Das erste Ergebnisobjekt für den angeforderten Satz.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFirstAmbientValue">
      <MemberSignature Language="C#" Value="public System.Xaml.AmbientPropertyValue GetFirstAmbientValue (System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; ceilingTypes, params System.Xaml.XamlMember[] properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xaml.AmbientPropertyValue GetFirstAmbientValue(class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; ceilingTypes, class System.Xaml.XamlMember[] properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstAmbientValue (ceilingTypes As IEnumerable(Of XamlType), ParamArray properties As XamlMember()) As AmbientPropertyValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::AmbientPropertyValue ^ GetFirstAmbientValue(System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ ceilingTypes, ... cli::array &lt;System::Xaml::XamlMember ^&gt; ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member GetFirstAmbientValue : seq&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlMember[] -&gt; System.Xaml.AmbientPropertyValue" Usage="iAmbientProvider.GetFirstAmbientValue (ceilingTypes, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.AmbientPropertyValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ceilingTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="properties" Type="System.Xaml.XamlMember[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ceilingTypes">Gibt mindestens einen Typ an, von dem die Auswertung beendet werden sollte, wenn er im Objektdiagramm nach oben traversiert wird. Dieser Typ enthält die gewünschte Ambient-Eigenschaft.</param>
        <param name="properties">Gibt mindestens ein Objekt an, durch das die Eigenschaften identifiziert werden, die als "ambient" betrachtet werden sollen.</param>
        <summary>Gibt ein einzelnes Ambient-Eigenschaftsinformationselement vom angeforderten Eigenschaftssatz zurück. Dies ist abhängig von der zuerst gefundenen Eigenschaft.</summary>
        <returns>Ein einzelnes Ambient-Eigenschaftsinformationselement für den ersten Ambient-Eigenschaftswert aus der <paramref name="properties" />-Liste, der gefunden wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jede <xref:System.Xaml.AmbientPropertyValue> zurückgegeben wird, enthält die <xref:System.Xaml.XamlMember> -ID und einen Eigenschaftswert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>