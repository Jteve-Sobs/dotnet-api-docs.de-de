<Type Name="IAmbientProvider" FullName="System.Xaml.IAmbientProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b1efea7e8c431289711e4bdfb3feaf27fa12d53e" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52590842" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IAmbientProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAmbientProvider" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.IAmbientProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAmbientProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAmbientProvider" />
  <TypeSignature Language="F#" Value="type IAmbientProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="150c8-101">Stellt einen Dienst dar, von dem Informationselemente zu Ambient-Eigenschaften oder Ambient-Typen an Typkonverter und Markuperweiterungen zurückgegeben werden können.</span>
      <span class="sxs-lookup">
        <span data-stu-id="150c8-101">Represents a service that can return information items about ambient properties or ambient types to type converters and markup extensions.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="150c8-102">Diese Schnittstelle stellt den Dienst, mit denen Typkonverter und Markuperweiterungen zum Abrufen der ambient-Eigenschaft-IDs für das XAML-Typsystem kann (<xref:System.Xaml.XamlMember> Objekte).</span><span class="sxs-lookup"><span data-stu-id="150c8-102">This interface represents the service that can help type converters and markup extensions to get the ambient property identifiers for the XAML type system (<xref:System.Xaml.XamlMember> objects).</span></span> <span data-ttu-id="150c8-103">Der Dienst kann auch die ambient-Eigenschaftswerte aus Klassen abrufen.</span><span class="sxs-lookup"><span data-stu-id="150c8-103">The service can also get the ambient property values from classes.</span></span> <span data-ttu-id="150c8-104">Typen können auch ambient sein. ein Element, das als Wert dieses Typs wird verwendet, sollte als ambient betrachtet werden.</span><span class="sxs-lookup"><span data-stu-id="150c8-104">Types can also be ambient; any member that uses that type as its value should be considered ambient.</span></span>  
  
 <span data-ttu-id="150c8-105">Dieser Dienst wird in der Regel durch einen Aufruf zurückgegeben <xref:System.IServiceProvider.GetService%2A>, die ein Dienstkontext-spezifischen Dienstanbieter erfolgt.</span><span class="sxs-lookup"><span data-stu-id="150c8-105">This service is typically returned through a call to <xref:System.IServiceProvider.GetService%2A>, which is made against a context-specific service provider.</span></span> <span data-ttu-id="150c8-106">Der Dienstanbieter steht in der Regel Kontexte, die sie, wie der Ausführungscode eines Wertkonverters benötigen.</span><span class="sxs-lookup"><span data-stu-id="150c8-106">The service provider is generally available to contexts that need it, such as the execution code of a value converter.</span></span> <span data-ttu-id="150c8-107">Weitere Informationen finden Sie unter [Typkonverter und Markuperweiterungen für XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) und [Service Contexts Available to Type Converters and Markup Extensions](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).</span><span class="sxs-lookup"><span data-stu-id="150c8-107">For more information, see [Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) and [Service Contexts Available to Type Converters and Markup Extensions](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).</span></span>  
  
## <a name="about-ambient-properties"></a><span data-ttu-id="150c8-108">Informationen zu Ambient-Eigenschaften</span><span class="sxs-lookup"><span data-stu-id="150c8-108">About Ambient Properties</span></span>  
 <span data-ttu-id="150c8-109">Eine Ambiente-Eigenschaft ist eine Eigenschaft, deren Eigenschaftswert in den Typ-Konverter und Markuperweiterungsverwendungen, die vorhanden sind, in die XAML-Knotenstruktur und das Objektdiagramm, die von ihr erstellten verfügbar sein sollte.</span><span class="sxs-lookup"><span data-stu-id="150c8-109">An ambient property is a property whose property value should be available to type converter and markup extension usages that exist in the XAML node structure and in the object graph created from it.</span></span> <span data-ttu-id="150c8-110">Dies ist relevant für einen XAML-Prozessor, während der Phase Objekt zum Schreiben des Pfads laden oder der Serialisierungsphase eines Speichervorgangs Pfad.</span><span class="sxs-lookup"><span data-stu-id="150c8-110">This is relevant for a XAML processor during the object-writing phase of the load path or the serialization phase of a save path.</span></span>  
  
 <span data-ttu-id="150c8-111">Im Fall Pfad laden kann der Wert der ambient-Eigenschaft den Wert in ein Objektdiagramm aus anderen Eigenschaften beeinflussen, die darunter liegenden in einer XAML-Knotenstruktur vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="150c8-111">In the load path case, the ambient property value might influence the value in the object graph of other properties that exist underneath it in a XAML node structure.</span></span> <span data-ttu-id="150c8-112">Bei der Verarbeitung als eine XAML-Knotenstream das Umgebungskonzept bedeutet, dass der Wert der ambient-Eigenschaft muss für Typkonverter und Markuperweiterungen von `StartObject` zu `EndObject`.</span><span class="sxs-lookup"><span data-stu-id="150c8-112">When processed as a XAML node stream, the ambient concept means the ambient property value must be available to type converters and markup extensions from `StartObject` to `EndObject`.</span></span> <span data-ttu-id="150c8-113">Auf ähnliche Weise einen Typkonverter, der verwendet wird, für den Speichervorgang Pfad Kenntnisse über die ambient-Eigenschaft und den Wert verwenden kann.</span><span class="sxs-lookup"><span data-stu-id="150c8-113">Similarly, a type converter that is used for the save path can use knowledge of the ambient property and its value.</span></span> <span data-ttu-id="150c8-114">Daher ist die XAML, das erstellt wird eine bessere Round-Trip-Darstellung.</span><span class="sxs-lookup"><span data-stu-id="150c8-114">Therefore, the XAML that is produced is a better round-trip representation.</span></span>  
  
 <span data-ttu-id="150c8-115">Für Elemente in der Regel gibt XAML die Reihenfolge keine in der Member eines Objekts verarbeitet werden müssen.</span><span class="sxs-lookup"><span data-stu-id="150c8-115">For members in general, XAML does not specify the order in which members of an object must be processed.</span></span> <span data-ttu-id="150c8-116">Jedoch ambient-Eigenschaft-Wert muss zuerst verarbeitet werden, die der XAML-Reader, damit die Typ-Konverter und Markuperweiterungsverwendungen, die in anderen Eigenschaften enthalten sind, die über zugreifen können die <xref:System.Xaml.IAmbientProvider> Service.</span><span class="sxs-lookup"><span data-stu-id="150c8-116">However, any ambient property value must be processed first by the XAML reader so that the type converter and markup extension usages that are contained in other properties can access it through the <xref:System.Xaml.IAmbientProvider> service.</span></span>  
  
 <span data-ttu-id="150c8-117"><xref:System.Xaml.XamlMember.DependsOn%2A> ist ein ähnliches Konzept, das XAML-Knoten-Verarbeitungsreihenfolge auch beeinflusst.</span><span class="sxs-lookup"><span data-stu-id="150c8-117"><xref:System.Xaml.XamlMember.DependsOn%2A> is a similar concept that also influences XAML node-processing order.</span></span> <span data-ttu-id="150c8-118">Allerdings <xref:System.Xaml.XamlMember.DependsOn%2A> kann nur verwendet werden, für die Peer-Member und Knoten Beziehungen; es kann nicht alle abhängigen Elemente beeinflussen.</span><span class="sxs-lookup"><span data-stu-id="150c8-118">However, <xref:System.Xaml.XamlMember.DependsOn%2A> can only be used for peer member and node relationships; it cannot influence all descendants.</span></span> <span data-ttu-id="150c8-119">Darüber hinaus <xref:System.Xaml.XamlMember.DependsOn%2A> direkt beeinflusst Graph-Eigenschaft festlegen; Objekt während die Ambiente-Technik Typkonverter oder Markuperweiterungen verwendet.</span><span class="sxs-lookup"><span data-stu-id="150c8-119">Also, <xref:System.Xaml.XamlMember.DependsOn%2A> directly influences object graph property setting; whereas the ambient technique relies on type converters or markup extensions.</span></span> <span data-ttu-id="150c8-120">In der ambient-Technik muss gibt es zudem eine bestimmte Typkonverter oder die Erweiterung Markupdefinition, der angibt, wie der ambient-Eigenschaft-Wert interpretiert und auf das Objekt angewendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="150c8-120">In the ambient technique, there must also be a specific type converter or markup extension definition that specifies how the ambient property value should be interpreted and applied to the object.</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="150c8-121">Hinweise zur WPF-Verwendung</span><span class="sxs-lookup"><span data-stu-id="150c8-121">WPF Usage Notes</span></span>  
 <span data-ttu-id="150c8-122">Eine ambient-Eigenschaft-Szenario, das im dargestellt ist die [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Featuresatz ist <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType>, die können die erforderliche Eigenschaft Name Nachschlagefelder für andere Werte qualifizieren.</span><span class="sxs-lookup"><span data-stu-id="150c8-122">An ambient property scenario that is illustrated in the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] feature set is <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType>, which can qualify the necessary property name lookups for other values.</span></span> <span data-ttu-id="150c8-123">In diesem Fall die <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> Wert qualifiziert die <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> Werte, die in die darunter liegenden XAML-Knoten befinden.</span><span class="sxs-lookup"><span data-stu-id="150c8-123">In this case, the <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> value qualifies the <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> values that are located in the XAML nodes underneath it.</span></span> <span data-ttu-id="150c8-124"><xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> wird verwendet, der Typkonverterverhalten für eine <xref:System.Windows.DependencyProperty>.</span><span class="sxs-lookup"><span data-stu-id="150c8-124"><xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> uses the type converter behavior for a <xref:System.Windows.DependencyProperty>.</span></span> <span data-ttu-id="150c8-125">Dieses Verhalten greift auf den Ambient- <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> Wert durch Abfragen <xref:System.Xaml.IAmbientProvider.GetFirstAmbientValue%2A> aus einen Dienstkontext, der für Typkonverter und Markuperweiterungen verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="150c8-125">This behavior accesses the ambient <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> value by querying <xref:System.Xaml.IAmbientProvider.GetFirstAmbientValue%2A> from a service context that is available to type converters and markup extensions.</span></span>  
  
 <span data-ttu-id="150c8-126">Eine ambient-Typ-Szenario, die in der WPF-Featuresatz dargestellte ist <xref:System.Windows.ResourceDictionary>.</span><span class="sxs-lookup"><span data-stu-id="150c8-126">An ambient type scenario that is illustrated in the WPF feature set is <xref:System.Windows.ResourceDictionary>.</span></span> <span data-ttu-id="150c8-127"><xref:System.Windows.ResourceDictionary> verfügt über eine <xref:System.Windows.ResourceDictionary.MergedDictionaries%2A> -Eigenschaft, die andere enthält kann <xref:System.Windows.ResourceDictionary> Objekte zusammenführen und der gewünschten Auflösungsreihenfolge Ressource für die zusammengeführten Szenario Konflikte mit der Reihenfolge, in Typen geladen werden.</span><span class="sxs-lookup"><span data-stu-id="150c8-127"><xref:System.Windows.ResourceDictionary> has a <xref:System.Windows.ResourceDictionary.MergedDictionaries%2A> property that can contain other <xref:System.Windows.ResourceDictionary> objects to merge, and the intended order of resource resolution for the merged scenario clashes with the order that types are loaded.</span></span> <span data-ttu-id="150c8-128"><xref:System.Windows.ResourceDictionary> wendet <xref:System.Windows.Markup.AmbientAttribute> , damit ein XAML-Prozessor die Verweise in einem zusammengeführten Wörterbuch mit ordnungsgemäß verarbeiten kann `StaticResource` Verwendungen.</span><span class="sxs-lookup"><span data-stu-id="150c8-128"><xref:System.Windows.ResourceDictionary> applies <xref:System.Windows.Markup.AmbientAttribute> so that a XAML processor can correctly process the references in a merged dictionary with `StaticResource` usages.</span></span> <span data-ttu-id="150c8-129">Insbesondere `StaticResource` ist eine Markuperweiterung, die aufruft <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%2A>.</span><span class="sxs-lookup"><span data-stu-id="150c8-129">Specifically, `StaticResource` is a markup extension, which calls <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%2A>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.AmbientPropertyValue" />
  </Docs>
  <Members>
    <MemberGroup MemberName="GetAllAmbientValues">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="150c8-130">Gibt einen aufzählbaren Satz von Ambient-Typ- oder Eigenschaftsinformationselementen für den angeforderten Bereich zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="150c8-130">Returns an enumerable set of ambient type or property information items for the requested scope.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAllAmbientValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;object&gt; GetAllAmbientValues (params System.Xaml.XamlType[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;object&gt; GetAllAmbientValues(class System.Xaml.XamlType[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Xaml.XamlType[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAmbientValues (ParamArray types As XamlType()) As IEnumerable(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ GetAllAmbientValues(... cli::array &lt;System::Xaml::XamlType ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="abstract member GetAllAmbientValues : System.Xaml.XamlType[] -&gt; seq&lt;obj&gt;" Usage="iAmbientProvider.GetAllAmbientValues types" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Xaml.XamlType[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="types">
          <span data-ttu-id="150c8-131">Der Satz von Typen, von dem Informationen zu Ambient-Typen abgerufen werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="150c8-131">The set of types from which to retrieve ambient type information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="150c8-132">Gibt einen aufzählbaren Satz von Objektinstanzen möglicher Ambient-Typen für die angeforderten Typen zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="150c8-132">Returns an enumerable set of object instances of possible ambient types for the requested types.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="150c8-133">Ein aufzählbarer Satz von Objekten, die die Werte für den angeforderten Satz von <see cref="T:System.Xaml.XamlType" />-Bezeichnern darstellen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="150c8-133">An enumerable set of objects that represent the values for the requested set of <see cref="T:System.Xaml.XamlType" /> identifiers.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAmbientValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues (System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; ceilingTypes, params System.Xaml.XamlMember[] properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues(class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; ceilingTypes, class System.Xaml.XamlMember[] properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAmbientValues (ceilingTypes As IEnumerable(Of XamlType), ParamArray properties As XamlMember()) As IEnumerable(Of AmbientPropertyValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Xaml::AmbientPropertyValue ^&gt; ^ GetAllAmbientValues(System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ ceilingTypes, ... cli::array &lt;System::Xaml::XamlMember ^&gt; ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member GetAllAmbientValues : seq&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlMember[] -&gt; seq&lt;System.Xaml.AmbientPropertyValue&gt;" Usage="iAmbientProvider.GetAllAmbientValues (ceilingTypes, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ceilingTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="properties" Type="System.Xaml.XamlMember[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ceilingTypes">
          <span data-ttu-id="150c8-134">Gibt mindestens einen Typ an, von dem die Auswertung beendet werden sollte, wenn er im Objektdiagramm nach oben traversiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="150c8-134">Specifies one or more types that should stop the evaluation when they are encountered traversing upward in the object graph.</span>
          </span>
          <span data-ttu-id="150c8-135">Dieser Typ enthält die gewünschte Ambient-Eigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="150c8-135">This type holds the desired ambient property.</span>
          </span>
          <span data-ttu-id="150c8-136">Kann <see langword="null" /> sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="150c8-136">May be <see langword="null" />.</span>
          </span>
        </param>
        <param name="properties">
          <span data-ttu-id="150c8-137">Gibt mindestens einen Eigenschaftenbezeichner an, durch den die Eigenschaften identifiziert werden, die als ambient betrachtet werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="150c8-137">Specifies one or more property identifier objects that identify the properties to be considered ambient.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="150c8-138">Gibt einen aufzählbaren Satz von Ambient-Eigenschaftsinformationselementen für den angeforderten Eigenschaftssatz zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="150c8-138">Returns an enumerable set of ambient property information items for the requested set of properties.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="150c8-139">Ein aufzählbarer Satz von Ambient-Eigenschaftsinformationselementen für den angeforderten Satz von Eigenschaften.</span>
          <span class="sxs-lookup">
            <span data-stu-id="150c8-139">An enumerable set of ambient property information items for the requested set of properties.</span>
          </span>
          <span data-ttu-id="150c8-140">Die Eigenschaftsinformationen für jedes zurückgegebene <see cref="T:System.Xaml.AmbientPropertyValue" />-Objekt entsprechen einer der eingegebenen <paramref name="properties" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="150c8-140">The property information for each <see cref="T:System.Xaml.AmbientPropertyValue" /> that is returned will match one of the input <paramref name="properties" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="150c8-141">Jede <xref:System.Xaml.AmbientPropertyValue> zurückgegeben wird, enthält die <xref:System.Xaml.XamlMember> -ID und einen Eigenschaftswert.</span><span class="sxs-lookup"><span data-stu-id="150c8-141">Each <xref:System.Xaml.AmbientPropertyValue> that is returned contains the <xref:System.Xaml.XamlMember> identifier and a property value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAmbientValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues (System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; ceilingTypes, bool searchLiveStackOnly, System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; types, params System.Xaml.XamlMember[] properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues(class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; ceilingTypes, bool searchLiveStackOnly, class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; types, class System.Xaml.XamlMember[] properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Boolean,System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAmbientValues (ceilingTypes As IEnumerable(Of XamlType), searchLiveStackOnly As Boolean, types As IEnumerable(Of XamlType), ParamArray properties As XamlMember()) As IEnumerable(Of AmbientPropertyValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Xaml::AmbientPropertyValue ^&gt; ^ GetAllAmbientValues(System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ ceilingTypes, bool searchLiveStackOnly, System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ types, ... cli::array &lt;System::Xaml::XamlMember ^&gt; ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member GetAllAmbientValues : seq&lt;System.Xaml.XamlType&gt; * bool * seq&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlMember[] -&gt; seq&lt;System.Xaml.AmbientPropertyValue&gt;" Usage="iAmbientProvider.GetAllAmbientValues (ceilingTypes, searchLiveStackOnly, types, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ceilingTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="searchLiveStackOnly" Type="System.Boolean" />
        <Parameter Name="types" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="properties" Type="System.Xaml.XamlMember[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ceilingTypes">
          <span data-ttu-id="150c8-142">Gibt mindestens einen Typ an, von dem die Auswertung beendet werden sollte, wenn er im Objektdiagramm nach oben traversiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="150c8-142">Specifies one or more types that should stop the evaluation when they are encountered traversing upward in the object graph.</span>
          </span>
          <span data-ttu-id="150c8-143">Dieser Typ enthält die gewünschte Ambient-Eigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="150c8-143">This type holds the desired ambient property.</span>
          </span>
          <span data-ttu-id="150c8-144">Kann <see langword="null" /> sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="150c8-144">May be <see langword="null" />.</span>
          </span>
        </param>
        <param name="searchLiveStackOnly">
          <span data-ttu-id="150c8-145">
            <see langword="true" />, um keinen gespeicherten Kontext zu verwenden; <see langword="false" />, um einen gespeicherten Kontext zu verwenden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="150c8-145">
              <see langword="true" /> to not use a saved context; <see langword="false" /> to use a saved context.</span>
          </span>
          <span data-ttu-id="150c8-146">Der Standardwert ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="150c8-146">The default is <see langword="false" />.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="150c8-147">Gibt mindestens ein Typbezeichnerobjekt an, das die Typen identifiziert, die als ambient betrachtet werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="150c8-147">Specifies one or more type identifier objects that identify the types to be considered ambient.</span>
          </span>
        </param>
        <param name="properties">
          <span data-ttu-id="150c8-148">Gibt mindestens einen Eigenschaftenbezeichner an, durch den die Eigenschaften identifiziert werden, die als ambient betrachtet werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="150c8-148">Specifies one or more property identifier objects that identify the properties to be considered ambient.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="150c8-149">Gibt einen aufzählbaren Satz von Ambient-Eigenschaftsinformationselementen für den angeforderten Satz von Typen und Eigenschaften zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="150c8-149">Returns an enumerable set of ambient property information items for the requested set of types and properties.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="150c8-150">Ein aufzählbarer Satz von Ambient-Eigenschaftsinformationselementen für den angeforderten Satz von Typen und Eigenschaften.</span>
          <span class="sxs-lookup">
            <span data-stu-id="150c8-150">An enumerable set of ambient property information items for the requested set of types and properties.</span>
          </span>
          <span data-ttu-id="150c8-151">Die Eigenschaftsinformationen für jedes zurückgegebene <see cref="T:System.Xaml.AmbientPropertyValue" />-Objekt entsprechen einer der eingegebenen <paramref name="types" /> oder <paramref name="properties" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="150c8-151">The property information for each <see cref="T:System.Xaml.AmbientPropertyValue" /> that is returned will match one of the input <paramref name="types" /> or <paramref name="properties" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="150c8-152">Jede <xref:System.Xaml.AmbientPropertyValue> zurückgegeben wird, enthält die <xref:System.Xaml.XamlMember> -ID und einen Eigenschaftswert.</span><span class="sxs-lookup"><span data-stu-id="150c8-152">Each <xref:System.Xaml.AmbientPropertyValue> that is returned contains the <xref:System.Xaml.XamlMember> identifier and a property value.</span></span>  
  
 <span data-ttu-id="150c8-153">Dieser spezielle <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%2A> Überladung kann ambient-Typen suchen und die Ambiente-Eigenschaften in der gleichen pass-through-Struktur.</span><span class="sxs-lookup"><span data-stu-id="150c8-153">This particular <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%2A> overload can search for ambient types and ambient properties in the same pass through a tree.</span></span> <span data-ttu-id="150c8-154">Mit dieser Überladung führt zu einer Sortierung der Elemente in der zurückgegebene Wert, der sich vom <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Collections.Generic.IEnumerable%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlMember%5B%5D%29> oder <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Xaml.XamlType%5B%5D%29>.</span><span class="sxs-lookup"><span data-stu-id="150c8-154">Using this overload results in an ordering of items in the return value that is different from <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Collections.Generic.IEnumerable%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlMember%5B%5D%29> or <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Xaml.XamlType%5B%5D%29>.</span></span>  
  
 <span data-ttu-id="150c8-155">Diese Überladung ermöglicht auch die Suche auf alle gespeicherten Kontext nicht verwendet.</span><span class="sxs-lookup"><span data-stu-id="150c8-155">This overload also permits the search to not use any saved context.</span></span> <span data-ttu-id="150c8-156">Die <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Collections.Generic.IEnumerable%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlMember%5B%5D%29> oder <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Xaml.XamlType%5B%5D%29> Überladungen implizit einen gespeicherten Kontext verwenden, sofern diese verfügbar ist (sie immer fungieren, als wäre eine implizite `searchLiveStackOnly` Parameter `false`).</span><span class="sxs-lookup"><span data-stu-id="150c8-156">The <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Collections.Generic.IEnumerable%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlMember%5B%5D%29> or <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Xaml.XamlType%5B%5D%29> overloads implicitly use a saved context if it is available (they always act as if an implicit `searchLiveStackOnly` parameter is `false`).</span></span> <span data-ttu-id="150c8-157">Das Konzept der gespeicherten Kontext wird möglicherweise anders behandelt werden, indem bestimmten XAML-Schema-Kontexten oder Frameworks, die XAML einbinden.</span><span class="sxs-lookup"><span data-stu-id="150c8-157">The concept of a saved context is potentially handled differently by particular XAML schema contexts, or by frameworks that incorporate XAML.</span></span> <span data-ttu-id="150c8-158">In der WPF XAML-Implementierung werden die gespeicherten Kontexte für vorlagenerweiterung sowie andere Funktionsbereiche verwendet.</span><span class="sxs-lookup"><span data-stu-id="150c8-158">In the WPF XAML implementation, saved contexts are used for template expansion, as well as other feature areas.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFirstAmbientValue">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="150c8-159">Gibt einen einzelnen Ambient-Typ oder ein Eigenschaftsinformationselement vom angeforderten Satz zurück. Dies ist abhängig von der zuerst gefundenen Eigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="150c8-159">Returns a single ambient type or property information item from the requested set, based on which property is first encountered.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFirstAmbientValue">
      <MemberSignature Language="C#" Value="public object GetFirstAmbientValue (params System.Xaml.XamlType[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFirstAmbientValue(class System.Xaml.XamlType[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Xaml.XamlType[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstAmbientValue (ParamArray types As XamlType()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFirstAmbientValue(... cli::array &lt;System::Xaml::XamlType ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="abstract member GetFirstAmbientValue : System.Xaml.XamlType[] -&gt; obj" Usage="iAmbientProvider.GetFirstAmbientValue types" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Xaml.XamlType[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="types">
          <span data-ttu-id="150c8-160">Der Satz von Typen, von dem Informationen zu Ambient-Typen abgerufen werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="150c8-160">The set of types from which to retrieve ambient type information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="150c8-161">Gibt das erste übereinstimmende Objekt zurück, bei dem es sich um einen möglichen Ambient-Typ für die angeforderten Typen handelt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="150c8-161">Returns the first matching object that is a possible ambient type for the requested types.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="150c8-162">Das erste Ergebnisobjekt für den angeforderten Satz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="150c8-162">The first result object for the requested set.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFirstAmbientValue">
      <MemberSignature Language="C#" Value="public System.Xaml.AmbientPropertyValue GetFirstAmbientValue (System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; ceilingTypes, params System.Xaml.XamlMember[] properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xaml.AmbientPropertyValue GetFirstAmbientValue(class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; ceilingTypes, class System.Xaml.XamlMember[] properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstAmbientValue (ceilingTypes As IEnumerable(Of XamlType), ParamArray properties As XamlMember()) As AmbientPropertyValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::AmbientPropertyValue ^ GetFirstAmbientValue(System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ ceilingTypes, ... cli::array &lt;System::Xaml::XamlMember ^&gt; ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member GetFirstAmbientValue : seq&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlMember[] -&gt; System.Xaml.AmbientPropertyValue" Usage="iAmbientProvider.GetFirstAmbientValue (ceilingTypes, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.AmbientPropertyValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ceilingTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="properties" Type="System.Xaml.XamlMember[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ceilingTypes">
          <span data-ttu-id="150c8-163">Gibt mindestens einen Typ an, von dem die Auswertung beendet werden sollte, wenn er im Objektdiagramm nach oben traversiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="150c8-163">Specifies one or more types that should stop the evaluation when they are encountered traversing upward in the object graph.</span>
          </span>
          <span data-ttu-id="150c8-164">Dieser Typ enthält die gewünschte Ambient-Eigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="150c8-164">This type holds the desired ambient property.</span>
          </span>
        </param>
        <param name="properties">
          <span data-ttu-id="150c8-165">Gibt mindestens ein Objekt an, durch das die Eigenschaften identifiziert werden, die als "ambient" betrachtet werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="150c8-165">Specifies one or more objects that identify the properties to be considered ambient.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="150c8-166">Gibt ein einzelnes Ambient-Eigenschaftsinformationselement vom angeforderten Eigenschaftssatz zurück. Dies ist abhängig von der zuerst gefundenen Eigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="150c8-166">Returns a single ambient property information item from the requested set of properties, based on which property is first encountered.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="150c8-167">Ein einzelnes Ambient-Eigenschaftsinformationselement für den ersten Ambient-Eigenschaftswert aus der <paramref name="properties" />-Liste, der gefunden wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="150c8-167">A single ambient property information item for the first ambient property value from the <paramref name="properties" /> list that is found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="150c8-168">Jede <xref:System.Xaml.AmbientPropertyValue> zurückgegeben wird, enthält die <xref:System.Xaml.XamlMember> -ID und einen Eigenschaftswert.</span><span class="sxs-lookup"><span data-stu-id="150c8-168">Each <xref:System.Xaml.AmbientPropertyValue> that is returned contains the <xref:System.Xaml.XamlMember> identifier and a property value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>