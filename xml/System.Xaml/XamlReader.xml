<Type Name="XamlReader" FullName="System.Xaml.XamlReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="849d2e0c9bee513161cca5e65badec4967daf83c" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51864280" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class XamlReader : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XamlReader extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlReader" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XamlReader&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlReader abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type XamlReader = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Stellt Basisdefinitionen für Klassen bereit, die XAML-Eingabe nutzen und XAML-Knotenstreams erzeugen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlReader> ist eine abstrakte Klasse, und bietet keine Implementierungen oder Definitionen, die ein Ergebnis der Arbeiten für alle Elemente aufweisen. Elemente, die eine Implementierung, in verfügen <xref:System.Xaml.XamlReader> sind in den Hinweisen für diesen Member aufgeführt. Insbesondere <xref:System.Xaml.XamlReader> verfügt über mehrere abstrakte Member, die implementiert werden müssen, und mehrere virtuelle Member.  
  
 Der virtuelle Elemente <xref:System.Xaml.XamlReader.ReadSubtree%2A> und <xref:System.Xaml.XamlReader.Skip%2A> jedes bieten eine Standardimplementierung, die in den meisten Fällen geeignet ist. Allerdings die <xref:System.Xaml.XamlReader.ReadSubtree%2A> und <xref:System.Xaml.XamlReader.Skip%2A> standardimplementierungen andere erwarteten Verhaltens der von der implementierenden XAML-Reader abhängig sein, insbesondere sie verlassen sich auf die <xref:System.Xaml.XamlReader.Read%2A> außer Kraft setzen. <xref:System.Xaml.XamlReader.Dispose%2A> ist auch ein virtueller Member, der über eine funktionierende-Standardimplementierung verfügt.  
  
 Die folgenden beiden Klassen sind die relevantesten und praktischen abgeleiteten Klassen in .NET Framework-XAML-Dienste und der System.Xaml-Assembly:  
  
-   <xref:System.Xaml.XamlObjectReader>, die ein Objektdiagramm, wie z. B. das aktive Objektdiagramm einer Anwendung zur Laufzeit lesen.  
  
-   <xref:System.Xaml.XamlXmlReader>, die XAML in Form einer XML-Textdatei mit einer allgemeinen lesen <xref:System.Xml.XmlReader> , lädt die Datei als ein Vermittler Hilfsklasse.  
  
 Andere XAML-Reader, aus anderen Frameworks enthalten <xref:System.Windows.Baml2006.Baml2006Reader> und <xref:System.Activities.Debugger.XamlDebuggerXmlReader>.  
  
 <xref:System.Xaml.XamlReader> unterscheidet sich von [!INCLUDE[TLA#tla_xmldom](~/includes/tlasharptla-xmldom-md.md)] und <xref:System.Xml.XmlReader> Entwurfsprinzipien, da <xref:System.Xaml.XamlReader> verfügt nicht über eine `Create` Methode, um zugrunde liegende standardmäßigen XAML-readerimplementierungen zurückzugeben. Sie müssen stattdessen bestimmte abgeleitete Klassen für XAML-Reader instanziieren, indem Sie ihre Konstruktoren oder andere mandantenklassen geltenden schemaanpassungen Hilfs-APIs aufrufen.  
  
## <a name="subtree-readers"></a>Teilstruktur Leser  
 Rufen Sie zum größten Teil, <xref:System.Xaml.XamlReader> API im Kontext der bestimmten XAML-Reader-Klassen, die von abgeleitet <xref:System.Xaml.XamlReader>. Sie können jedoch in einem speziellen Fall zugreifen <xref:System.Xaml.XamlReader> -API in einem praktischen XAML-Reader-Instanz, die nicht öffentlichen und nicht abgeleitet ist <xref:System.Xaml.XamlObjectReader> oder <xref:System.Xaml.XamlXmlReader>. Dieser Fall ist, beim Aufrufen <xref:System.Xaml.XamlReader.ReadSubtree%2A>, gibt eine <xref:System.Xaml.XamlReader> Instanz. In der Standardimplementierung der <xref:System.Xaml.XamlReader> , von dieser API zurückgegebenen ist eine interne Klasse.  
  
 Die <xref:System.Xaml.XamlReader> abgerufen, für die Teilstruktur lesen gültige Aktionen für APIs verfügt, z. B. <xref:System.Xaml.XamlReader.Read%2A> und <xref:System.Xaml.XamlReader.NodeType%2A>, und diese Aktionen hängen von der übergeordneten Klasse von Ressourcenreadern. Dieser Entwurf ermöglicht die interne Klasse, um die Frame-Ebene nachzuverfolgen, in die Teilstruktur eingegeben wurde. Die Teilstruktur fungiert <xref:System.Xaml.XamlReader> stellt sicher, dass der Reader bestimmte Unterstruktur EOF, wenn die aktuellen Knotenposition außerhalb des zulässigen Bereichs der Teilstruktur verschoben wird meldet, oder `null` am aktuellen Knoten.  
  
 Hinweise zur Nutzung von Teilstruktur Reader befinden sich auf bestimmte <xref:System.Xaml.XamlReader> APIs.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlObjectReader" />
    <altmember cref="T:System.Xaml.XamlXmlReader" />
    <altmember cref="T:System.Xaml.XamlReaderSettings" />
    <related type="Article" href="https://msdn.microsoft.com/library/7c11abec-1075-474c-9d9b-778e5dab21c3">Grundlagen zu XAML-Knotenstreamstrukturen und -konzepten</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlReader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert die <see cref="T:System.Xaml.XamlReader" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="xamlReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Schließt den XAML-Knotenstream.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der basisimplementierung wird aufrufen <xref:System.Xaml.XamlReader.Close%2A> Aufrufe <xref:System.Xaml.XamlReader.Dispose%2A> mit der `isDisposing` Parameter als `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="xamlReader.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" />, um die verwalteten Ressourcen freizugeben, andernfalls <see langword="false" />.</param>
        <summary>Gibt die von der <see cref="T:System.Xaml.XamlReader" />-Klasse verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie müssen zum Abrufen der Basisklasse aufrufen <xref:System.Xaml.XamlReader.IsDisposed%2A>  =  `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="protected bool IsDisposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.IsDisposed" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsDisposed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsDisposed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDisposed : bool" Usage="System.Xaml.XamlReader.IsDisposed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab, ob die <see cref="M:System.Xaml.XamlReader.Dispose(System.Boolean)" />-Methode aufgerufen wurde.</summary>
        <value>
          <see langword="true" />, wenn <see cref="M:System.Xaml.XamlReader.Dispose(System.Boolean)" /> aufgerufen wurde, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEof">
      <MemberSignature Language="C#" Value="public abstract bool IsEof { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEof" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.IsEof" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsEof As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsEof { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEof : bool" Usage="System.Xaml.XamlReader.IsEof" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bei der Implementierung in einer abgeleiteten Klasse wird ein Wert abgerufen, durch den angegeben wird, ob sich die Readerposition am Dateiende befindet.</summary>
        <value>
          <see langword="true" />, wenn sich die Position am konzeptionellen Dateiende des XAML-Knotenstreams befindet, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Teilstruktur Leser können Aufrufen <xref:System.Xaml.XamlReader.IsEof%2A>, mit dem Verhalten, das die Begrenzungen des eingegebenen Teilstruktur korrekt widerspiegelt. Weitere Informationen finden Sie im Abschnitt "Teilstruktur Leser" im <xref:System.Xaml.XamlReader>, oder finden Sie unter <xref:System.Xaml.XamlReader.ReadSubtree%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlObjectReader.IsEof" />
        <altmember cref="P:System.Xaml.XamlXmlReader.IsEof" />
      </Docs>
    </Member>
    <Member MemberName="Member">
      <MemberSignature Language="C#" Value="public abstract System.Xaml.XamlMember Member { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlMember Member" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.Member" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Member As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xaml::XamlMember ^ Member { System::Xaml::XamlMember ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Member : System.Xaml.XamlMember" Usage="System.Xaml.XamlReader.Member" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bei der Implementierung in einer abgeleiteten Klasse wird der aktuelle Member an der Readerposition abgerufen, wenn sich die Readerposition in einem <see cref="F:System.Xaml.XamlNodeType.StartMember" />-Feld befindet.</summary>
        <value>Der aktuelle Member oder <see langword="null" />, wenn sich die Readerposition nicht in einem Member befindet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Teilstruktur Leser können Aufrufen <xref:System.Xaml.XamlReader.Member%2A>, mit Einschränkungen der Verhalten. Weitere Informationen finden Sie im Abschnitt "Teilstruktur Leser" im <xref:System.Xaml.XamlReader>, oder finden Sie unter <xref:System.Xaml.XamlReader.ReadSubtree%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlObjectReader.Member" />
        <altmember cref="P:System.Xaml.XamlXmlReader.Member" />
        <altmember cref="T:System.Xaml.XamlMember" />
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public abstract System.Xaml.NamespaceDeclaration Namespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.NamespaceDeclaration Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Namespace As NamespaceDeclaration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xaml::NamespaceDeclaration ^ Namespace { System::Xaml::NamespaceDeclaration ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : System.Xaml.NamespaceDeclaration" Usage="System.Xaml.XamlReader.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.NamespaceDeclaration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft bei der Implementierung in einer abgeleiteten Klasse die XAML-Namespaceinformationen aus dem aktuellen Knoten ab.</summary>
        <value>Die XAML-Namespaceinformationen, sofern verfügbar, andernfalls <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der vorgesehene Entwurf dieser API ist nur ein Ergebnis ungleich Null, wenn zurückzugebende der <xref:System.Xaml.XamlReader.NodeType%2A> des aktuellen Knotens ist <xref:System.Xaml.XamlNodeType.NamespaceDeclaration>. Die Eigenschaft meldet den XAML-Namespace, der für Objekte oder Elemente in einem allgemeinen Umfang gilt nicht, wie er unter einem XAML-Schemakontext interpretiert. Ihre Anwendung muss bereitgestellt werden Cacheinformationen für den aktiven XAML-Namespace, wie sie XAML-Knoten durchläuft, wenn Sie diese Informationen in einer Weise benötigen, außer wie der XAML-Schemakontext an einen Writer gemeldet wird. Finden Sie unter <xref:System.Xaml.XamlXmlReader.Namespace%2A> für Notizen auf der referenzimplementierung.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlObjectReader.Namespace" />
        <altmember cref="P:System.Xaml.XamlXmlReader.Namespace" />
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public abstract System.Xaml.XamlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xaml.XamlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property NodeType As XamlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xaml::XamlNodeType NodeType { System::Xaml::XamlNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xaml.XamlNodeType" Usage="System.Xaml.XamlReader.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft beim Implementieren in einer abgeleiteten Klasse den Typ des aktuellen Knotens ab.</summary>
        <value>Ein Wert der <see cref="T:System.Xaml.XamlNodeType" />-Enumeration.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Teilstruktur Leser können Aufrufen <xref:System.Xaml.XamlReader.NodeType%2A>, mit Einschränkungen der Verhalten. Weitere Informationen finden Sie im Abschnitt "Teilstruktur Leser" im <xref:System.Xaml.XamlReader>, oder finden Sie unter <xref:System.Xaml.XamlReader.ReadSubtree%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlObjectReader.NodeType" />
        <altmember cref="P:System.Xaml.XamlXmlReader.NodeType" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public abstract bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Read();" />
      <MemberSignature Language="F#" Value="abstract member Read : unit -&gt; bool" Usage="xamlReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bei der Implementierung in einer abgeleiteten Klasse wird der nächste XAML-Knoten aus der Quelle bereitgestellt, wenn ein Knoten verfügbar ist.</summary>
        <returns>
          <see langword="true" />, wenn ein Knoten verfügbar ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Teilstruktur Leser können Aufrufen <xref:System.Xaml.XamlReader.Read%2A>, mit Einschränkungen der Verhalten. Weitere Informationen finden Sie im Abschnitt "Teilstruktur Leser" im <xref:System.Xaml.XamlReader>, oder finden Sie unter <xref:System.Xaml.XamlReader.ReadSubtree%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xaml.XamlXmlReader.Read" />
        <altmember cref="M:System.Xaml.XamlObjectReader.Read" />
      </Docs>
    </Member>
    <Member MemberName="ReadSubtree">
      <MemberSignature Language="C#" Value="public virtual System.Xaml.XamlReader ReadSubtree ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xaml.XamlReader ReadSubtree() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReader.ReadSubtree" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadSubtree () As XamlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xaml::XamlReader ^ ReadSubtree();" />
      <MemberSignature Language="F#" Value="abstract member ReadSubtree : unit -&gt; System.Xaml.XamlReader&#xA;override this.ReadSubtree : unit -&gt; System.Xaml.XamlReader" Usage="xamlReader.ReadSubtree " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt ein <see cref="T:System.Xaml.XamlReader" />-Objekt auf Grundlage des aktuellen <see cref="T:System.Xaml.XamlReader" />-Objekts zurück, bei dem das zurückgegebene <see cref="T:System.Xaml.XamlReader" />-Objekt zum Durchlaufen einer Teilstruktur der XAML-Knotenstruktur verwendet wird.</summary>
        <returns>Eine neue Instanz des XAML-Reader für die Teilstruktur.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode verfügt über eine Standardimplementierung, und gibt einen gültigen <xref:System.Xaml.XamlReader>. Das zurückgegebene <xref:System.Xaml.XamlReader> ist eine interne Klasse, die bestimmte beschränkt <xref:System.Xaml.XamlReader> Aktionen. Die Einschränkungen sind konsistent Ziel nur eine dimensionierte Teilstruktur von größeren Quelle für eine XAML-Knotengruppe und Zurückgeben von End-of-File lesen oder `null` auf dem aktuellen Knoten aus, wenn die Teilstruktur beendet wird.  
  
 Im Allgemeinen sollten Sie überprüfen, den aktuellen Knoten auf dem ersten <xref:System.Xaml.XamlReader.Read%2A> zu bestimmen, ob Sie einen Teilstrukturreader benötigen. Wie Sie dies überprüfen möglicherweise implementierungsspezifische; Vermeiden Sie jedoch mehrere Teilstrukturreader für jede Teilstruktur erstellen. Vermeiden Sie außerdem das Aufrufen eines Readers Teilstruktur für bestimmte Knoten Fälle (z. B. für <xref:System.Xaml.XamlNodeType.NamespaceDeclaration>), kann keine Teilstruktur von Knoten enthalten.  
  
 Nachdem Sie einen Reader für die Unterstruktur erhalten haben, müssen Sie aufrufen <xref:System.Xaml.XamlReader.Read%2A> darauf, um das Abrufen eines aktuellen Knotens (oder rufen Sie <xref:System.Xaml.XamlReader.Skip%2A> einen nächsten Knoten abrufen). Sie rufen nicht automatisch eine Knotenposition des ersten aus dem Teilstrukturreader bei ihrer Erstellung.  
  
 Der Reader, die Sie, indem aufrufen abrufen <xref:System.Xaml.XamlReader.ReadSubtree%2A> aus diesen Standard-Implementierung ist eine interne Klasse. Die interne Klasse basiert auf der <xref:System.Xaml.XamlReader> Implementierung, die verwendet wird, wenn <xref:System.Xaml.XamlReader.ReadSubtree%2A> aufgerufen wird. Dient der internen Klasse zum Umschließen der <xref:System.Xaml.XamlReader.Read%2A> und allgemeine Traversal-Verhalten. Der Durchlauf bleibt innerhalb der vorgesehenen Teilstruktur durch Aufzeichnen der <xref:System.Xaml.XamlNodeType.StartMember> / <xref:System.Xaml.XamlNodeType.EndMember> Paare oder <xref:System.Xaml.XamlNodeType.StartObject> / <xref:System.Xaml.XamlNodeType.EndObject> Paare. Wird außerdem korrekte `false` für <xref:System.Xaml.XamlReader.Read%2A> und `true` für <xref:System.Xaml.XamlReader.IsEof%2A> Wenn der Reader befindet sich am Ende der Teilstruktur, wie von seinem Einstiegspunkt definiert. Im Allgemeinen, dass Sie davon ausgehen, die alle <xref:System.Xaml.XamlReader> -API, die Sie aus einem Teilstrukturreader aufrufen hat dieselbe Implementierung als die gesamte <xref:System.Xaml.XamlReader> mit Ausnahme der Traversierung umgebenden Verhalten.  
  
 Allerdings <xref:System.Xaml.XamlReader.ReadSubtree%2A> virtuell ist. Aus diesem Grund für einen bestimmten <xref:System.Xaml.XamlReader> Implementierung bietet Verhalten, das vom unterscheidet die <xref:System.Xaml.XamlReader> interne Wrapperverhalten; und ein <xref:System.Xaml.XamlReader> Implementierung kann sogar Teilstruktur Reader Funktionen deaktivieren, indem die Rückgabe <xref:System.NotImplementedException> oder andere Ausnahmen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaContext">
      <MemberSignature Language="C#" Value="public abstract System.Xaml.XamlSchemaContext SchemaContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlSchemaContext SchemaContext" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.SchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SchemaContext As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xaml::XamlSchemaContext ^ SchemaContext { System::Xaml::XamlSchemaContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaContext : System.Xaml.XamlSchemaContext" Usage="System.Xaml.XamlReader.SchemaContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft beim Implementieren in einer abgeleiteten Klasse ein Objekt ab, das XAML-Schemakontextinformationen für den Informationssatz bereitstellt.</summary>
        <value>Ein Objekt, das XAML-Schemakontextinformationen für den Informationssatz bereitstellt.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Xaml.XamlObjectReader.SchemaContext" />
        <altmember cref="P:System.Xaml.XamlXmlReader.SchemaContext" />
      </Docs>
    </Member>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public virtual void Skip ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Skip() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReader.Skip" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Skip ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Skip();" />
      <MemberSignature Language="F#" Value="abstract member Skip : unit -&gt; unit&#xA;override this.Skip : unit -&gt; unit" Usage="xamlReader.Skip " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Überspringt den aktuellen Knoten und verschiebt die Readerposition weiter zum nächsten Knoten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Einmal übersprungen, <xref:System.Xaml.XamlReader.Read%2A> wird aufgerufen, die standardmäßig <xref:System.Xaml.XamlReader.Skip%2A> Implementierung. In der Regel nicht aufrufen <xref:System.Xaml.XamlReader.Skip%2A> und <xref:System.Xaml.XamlReader.Read%2A> nacheinander.  
  
 In der standardmäßigen <xref:System.Xaml.XamlReader.Skip%2A> Implementierung verschiedene Aktionen werden ausgeführt, je nachdem, welche <xref:System.Xaml.XamlReader.NodeType%2A> die Position des Readers ist zurzeit aktiviert. Wenn sich die Readerposition derzeit auf einem <xref:System.Xaml.XamlNodeType.StartMember> oder <xref:System.Xaml.XamlNodeType.StartObject>, Member oder ein Objekt übersprungen wird. Für andere <xref:System.Xaml.XamlReader.NodeType%2A> Werte, wird keine Aktion ausgeführt als Aufruf <xref:System.Xaml.XamlReader.Read%2A> von der aktuellen Position.  
  
 Teilstruktur Leser können Aufrufen <xref:System.Xaml.XamlReader.Skip%2A>, mit Einschränkungen der Verhalten. Weitere Informationen finden Sie im Abschnitt "Teilstruktur Leser" im <xref:System.Xaml.XamlReader>, oder finden Sie unter <xref:System.Xaml.XamlReader.ReadSubtree%2A>.  
  
 Das Verhalten des Knoten-Struktur der <xref:System.Xaml.XamlReader.Skip%2A?displayProperty=nameWithType> basiert darauf, dass die XML-Entsprechung <xref:System.Xml.XmlReader.Skip%2A?displayProperty=nameWithType>. Auf der Grundlage der <xref:System.Xml.XmlReader.Skip%2A?displayProperty=nameWithType> Verhalten Äquivalenz, <xref:System.Xaml.XamlReader.Skip%2A?displayProperty=nameWithType> überspringt die Knoten und dessen Teilstruktur, nicht nur die Knoten der einzelnen Eintrag.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReader.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt alle von der aktuellen Instanz der <see cref="T:System.Xaml.XamlReader" />-Klasse verwendeten Ressourcen frei.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public abstract System.Xaml.XamlType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType Type" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.Type" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Type As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xaml::XamlType ^ Type { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : System.Xaml.XamlType" Usage="System.Xaml.XamlReader.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft beim Implementieren in einer abgeleiteten Klasse das <see cref="T:System.Xaml.XamlType" />-Objekt des aktuellen Knotens ab.</summary>
        <value>Das <see cref="T:System.Xaml.XamlType" />-Objekt des aktuellen Knotens, andernfalls <see langword="null" />, wenn sich die aktuelle Position des Readers nicht in einem Objekt befindet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Teilstruktur Leser können Aufrufen <xref:System.Xaml.XamlReader.Type%2A>, mit Einschränkungen der Verhalten. Weitere Informationen finden Sie im Abschnitt "Teilstruktur Leser" im <xref:System.Xaml.XamlReader>, oder finden Sie unter <xref:System.Xaml.XamlReader.ReadSubtree%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlObjectReader.Type" />
        <altmember cref="P:System.Xaml.XamlXmlReader.Type" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public abstract object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.Value" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj" Usage="System.Xaml.XamlReader.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft beim Implementieren in einer abgeleiteten Klasse den Wert des aktuellen Knotens ab.</summary>
        <value>Der Wert des aktuellen Knotens oder <see langword="null" />, wenn sich die aktuelle Position des Readers nicht auf einem <see cref="F:System.Xaml.XamlNodeType.Value" />-Knotentyp befindet.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Xaml.XamlObjectReader.Value" />
        <altmember cref="P:System.Xaml.XamlXmlReader.Value" />
      </Docs>
    </Member>
  </Members>
</Type>