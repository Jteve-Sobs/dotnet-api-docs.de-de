<Type Name="IDestinationTypeProvider" FullName="System.Xaml.IDestinationTypeProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9c0902f060cf70a990455e9cd7000558331b3fac" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="36444929" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDestinationTypeProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDestinationTypeProvider" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.IDestinationTypeProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDestinationTypeProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDestinationTypeProvider" />
  <TypeSignature Language="F#" Value="type IDestinationTypeProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Stellt einen Dienst dar, von dem ein CLR-Typsystembezeichner für den Zieltyp zurückgegeben werden kann. Der Zieltyp ist in Fällen relevant, in denen der Zieltyp für einen property-setting-Vorgang durch Reflektion oder andere Mechanismen indirekt gemeldet wird.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Typ, der von zurückgegebene <xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> wird von der aktuellen Position des XAML-Knotenstreams aufgelöst, mit der aktuellen XAML-Schemakontext.  
  
 Wenn Sie das XAML-Typsystem verwenden, wie durch .NET Framework-XAML-Dienste und den Dienstkontext unter diesen Bedingungen implementiert <xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> gibt die <xref:System.Xaml.XamlType.UnderlyingType%2A> basierend auf verfügbaren XAML-Typsysteminformationen und CLR-basierten XAML-Schemakontext.  
  
 Dieser Dienst ist relevant für Situationen, in dem reinen CLR-Reflektion oder andere Mechanismen nicht genügend Informationen zu einem Zieltyp bereitstellen können. Im folgenden finden eine Liste einiger relevanten Szenarien für <xref:System.Xaml.IDestinationTypeProvider>:  
  
-   Die CLR-Typsystems meldet einen indirekten Typ aufgrund wie die CLR definiert und verwendet und einen Zieltyp für die "true" werden sollen. Beispielsweise verwenden Sie die APIs im .NET Framework-XAML-Dienste diesen Dienst intern beim Verarbeiten von Ereignismember. Ereignisse werden gemeldet, von der reinen CLR-Reflektion als eine <xref:System.Delegate>.  
  
-   Möchten sicherstellen, dass der Zieltyp, der eine Typkonverterverwendung dem erwarteten Typ übereinstimmt, den die Typkonverter erstellen kann. Dieses Szenario ist nützlich, wenn der Zieltyp parametrisiert ist oder generisch.  
  
-   Der Wertkonverter ist von einer Verwendung aufgerufen wird, die in eine andere Wertkonverter geschachtelt. In diesem Fall <xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> die Schachtelung und gibt den Zieltyp der tatsächlichen-Eigenschaft festgelegt wird, anstatt den Ausgabetyp des dazwischenliegenden Wertkonverters zurück.  
  
 Typkonverter und Markuperweiterungen können Abfragen für <xref:System.Xaml.IDestinationTypeProvider> als Dienst auf den Dienstkontext, der durch ein XAML-Objektwriter bereitgestellt wird, wenn der XAML-Objektwriter Wertkonvertierungsverhalten aufruft. Weitere Informationen finden Sie unter [Typkonverter und Markuperweiterungen für XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) und [Service Contexts Available to Type Converters and Markup Extensions](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlObjectWriter" />
  </Docs>
  <Members>
    <Member MemberName="GetDestinationType">
      <MemberSignature Language="C#" Value="public Type GetDestinationType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetDestinationType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IDestinationTypeProvider.GetDestinationType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDestinationType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetDestinationType();" />
      <MemberSignature Language="F#" Value="abstract member GetDestinationType : unit -&gt; Type" Usage="iDestinationTypeProvider.GetDestinationType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt den CLR-<see cref="T:System.Type" /> zurück, der den Zieltyp für den relevanten Typkonverter oder die Markuperweiterung angibt.</summary>
        <returns>Ein CLR-<see cref="T:System.Type" />-Wert für den Zieltyp.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode hat keine Eingabeparameter. Was zurückgegeben (und ob als Rückgabe `null`) richtet sich nach der aktuellen Knotenposition im XAML-Knotenstream.  
  
## <a name="service-implementers"></a>Dienstimplementierer  
 Wenn Sie diesen Dienst erneut implementieren die <xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> Methode sollte den Typ, der eine Markuperweiterung oder Typkonverter geht davon aus, überprüfen Sie anhand der spezifischste Konvertierung oder Ausgabe-Typs zurückgeben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>