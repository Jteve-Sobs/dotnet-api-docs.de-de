<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XamlSchemaContext.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c3cb020dadf6911a6184d7c73f01746771d9bdf1.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c3cb020dadf6911a6184d7c73f01746771d9bdf1</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlSchemaContext">
          <source>Defines a reusable context for interpreting or mapping XAML types, and the types in the assemblies that underlie them.</source>
          <target state="translated">Definiert einen wiederverwendbaren Kontext zum Interpretieren oder Zuordnen von XAML-Typen und der Typen in den Assemblys, die ihnen zugrunde liegen.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>A XAML schema context provides a layer of abstraction between a schema or vocabulary for XAML, and a specific parser implementation.</source>
          <target state="translated">Ein XAML-Schemakontext stellt eine Abstraktionsebene zwischen ein Schema oder Vokabular für XAML und einer bestimmten Parser-Implementierung.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>By inserting the concept of a schema context, the schema can be used with different XAML parsers, and the schema context fills in the details that are needed to interact with a specific XAML parser.</source>
          <target state="translated">Durch Einfügen von das Konzept eines Schemakontexts, das Schema kann mit anderen XAML-Parser verwendet werden, und der Schemakontext füllt die Details, die für die Interaktion mit einem bestimmten XAML-Parser erforderlich sind.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>For example, the XAML schema context provides query APIs that relate to XAML concepts or to the CLR binding to the XAML type system.</source>
          <target state="translated">Beispielsweise enthält der XAML-Schemakontext Abfrage APIs, die die Verwendung von XAML-Konzepte oder auf die CLR-Bindung für XAML-Typsystem beziehen.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>The XAML schema context is also responsible for maintaining the assembly list of loaded assemblies, which defines where a XAML parser looks for backing types.</source>
          <target state="translated">Der XAML-Schemakontext ist auch für die Verwaltung der Assemblyliste der geladenen Assemblys, die definiert, in denen ein XAML-Parser Unterstützungstypen sucht zuständig.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>In an <ph id="ph1">&lt;see cref="T:System.AppDomain" /&gt;</ph>, a <ph id="ph2">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> can be shared between multiple callers, which include both full and partial trust callers.</source>
          <target state="translated">In einer <ph id="ph1">&lt;see cref="T:System.AppDomain" /&gt;</ph>, eine <ph id="ph2">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> zwischen den verschiedenen Aufrufer, darunter sowohl vollständige und teilweise vertrauenswürdige Aufrufer freigegeben werden können.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>This situation exists in frameworks such as WPF, which provide partial-trust access to XAML loading for portions of the WPF application model.</source>
          <target state="translated">Diese Situation ist in Frameworks wie z. B. WPF, die teilweise vertrauenswürdigen Zugriff in XAML für Teile des Modells WPF-Anwendung bereitstellen laden vorhanden.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>The default <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> implementation provides safeguards in this scenario by keeping all its properties and settings immutable.</source>
          <target state="translated">Die Standardeinstellung <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> -Implementierung bietet Schutzmaßnahmen in diesem Szenario bleiben alle zugehörigen Eigenschaften und Einstellungen, die unveränderlich.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>Derived implementations should also consider following this model of immutability for properties and settings of a XAML schema context.</source>
          <target state="translated">Abgeleitete Implementierungen sollten auch nach diesem Modell der Unveränderlichkeit für Eigenschaften und Einstellungen von einem XAML-Schemakontext.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> base class is designed so that lookups have no externally observable side effects.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> Basisklasse ist so konzipiert, dass Suchvorgänge keine extern wahrnehmbaren Nebeneffekte haben.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>The types that are referenced by <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> APIs in the base class, such as <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>, also produce no side effects from lookups.</source>
          <target state="translated">Die Typen, die verweist <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> -APIs in der Base-Klasse, z. B. <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> oder <ph id="ph3">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>, erzeugen auch keine Nebeneffekte von suchen.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>All data that is needed to make a schema determination should be available from the construction and settings of the <ph id="ph1">&lt;see cref="T:System.AppDomain" /&gt;</ph>.</source>
          <target state="translated">Alle Daten, die erforderlich ist, um ein Schema zu bestimmen, die zur Erstellung und die Einstellungen des verfügbar sein sollte die <ph id="ph1">&lt;see cref="T:System.AppDomain" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>Notice that no lookup APIs rely on explicitly passed-in services; their input relies on string input only.</source>
          <target state="translated">Beachten Sie, dass keine Such-APIs auf explizit übergeben Dienste beruhen; Ihre Eingabe basiert auf nur Zeichenfolgen.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> base class, and <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> are all thread safe in their base implementations.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> -Basisklasse und <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> und <ph id="ph3">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> sind alle threadsicher in ihre Basis Implementierungen.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>If you derive from <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> or derive XAML type system classes such as <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> , you can choose whether your classes will behave as thread safe.</source>
          <target state="translated">Ableiten von <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> oder leiten Sie die Verwendung von XAML-Typ Systemklassen z. B. <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> und <ph id="ph3">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> , Sie können auswählen, ob Ihre Klassen als threadsicher Verhalten.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlSchemaContext">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
          <source>An enumerable set of assembly information items.</source>
          <target state="translated">Ein aufzählbarer Satz von Assemblyinformationselementen.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
          <source>Each assembly information item is specified by an <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> value.</source>
          <target state="translated">Jedes Assemblyinformationselement wird durch einen <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>-Wert angegeben.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> class, based on a set of reference assemblies.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>-Klasse auf der Grundlage eines Satzes von Verweisassemblys.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.#ctor(System.Xaml.XamlSchemaContextSettings)">
          <source>The settings object to use to construct the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>.</source>
          <target state="translated">Das Einstellungsobjekt für das Erstellen der <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.#ctor(System.Xaml.XamlSchemaContextSettings)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> class, based on a settings object.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>-Klasse auf der Grundlage eines Einstellungsobjekts.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.#ctor(System.Xaml.XamlSchemaContextSettings)">
          <source>The settings object stores information about text converter and markup extension specifics for the schema context.</source>
          <target state="translated">Das Einstellungsobjekt speichert Informationen zu den Konverter für Text und Markup Extension Einzelheiten der Schemakontext.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.#ctor(System.Xaml.XamlSchemaContextSettings)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContextSettings&gt;</ph>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContextSettings&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Xaml.XamlSchemaContextSettings)">
          <source>An enumerable set of assembly information.</source>
          <target state="translated">Ein aufzählbarer Satz von Assemblyinformationen.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Xaml.XamlSchemaContextSettings)">
          <source>Each assembly information item is specified by an <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> value.</source>
          <target state="translated">Jedes Assemblyinformationselement wird durch einen <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>-Wert angegeben.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Xaml.XamlSchemaContextSettings)">
          <source>The settings object to use to construct the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>.</source>
          <target state="translated">Das Einstellungsobjekt für das Erstellen der <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Xaml.XamlSchemaContextSettings)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> class, based on a set of reference assemblies and a settings object.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>-Klasse auf Grundlage eines Satzes von Verweisassemblys und eines Einstellungsobjekts.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.Finalize">
          <source>Provides a nonstandard <ph id="ph1">&lt;see langword="Finalize" /&gt;</ph> implementation that does not invoke <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">Stellt eine nicht standardmäßige <ph id="ph1">&lt;see langword="Finalize" /&gt;</ph>-Implementierung bereit, in der <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph> nicht aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.Finalize">
          <source>XAML schema contexts should not be disposed by automatic garbage collection or by manual operations.</source>
          <target state="translated">Verwendung von XAML-Schemakontexten sollten nicht durch die automatische Garbagecollection oder durch manuelle Schritte verworfen werden.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.Finalize">
          <source>Although XAML schema contexts  have no unmanaged resources, <ph id="ph1">&lt;xref:System.Windows.Markup.XamlDeferLoadAttribute&gt;</ph> properties might still be active, and disposing a XAML schema context can interfere with the related defer-load operation.</source>
          <target state="translated">Obwohl XAML-Schemakontexten keine nicht verwalteten Ressourcen haben <ph id="ph1">&lt;xref:System.Windows.Markup.XamlDeferLoadAttribute&gt;</ph> Eigenschaften möglicherweise immer noch aktiv sein, und einen XAML-Schemakontext disposing kann verhindern, dass die zugehörigen-Ladevorgang.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.Finalize">
          <source><ph id="ph1">&lt;xref:System.AppDomain.AssemblyLoad&gt;</ph> event handlers, which are hooked internally as weak references, are cleaned up by this implementation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AppDomain.AssemblyLoad&gt;</ph> Ereignishandler, die intern als schwache Verweise verknüpft sind, werden von dieser Implementierung bereinigt.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces">
          <source>Gets a value that specifies whether a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup API.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob ein XAML-Schema und der Kontext vollqualifizierte Assemblynamen in den von der Such-API zurückgegebenen Werten verwenden.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup APIs; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn ein XAML-Schema und der Kontext vollqualifizierte Assemblynamen in den von den Such-APIs zurückgegebenen Werten verwenden, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces">
          <source>This property returns the <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=nameWithType&gt;</ph> value that is established in the settings for the <ph id="ph2">&lt;xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29&gt;</ph> constructor signature.</source>
          <target state="translated">Diese Eigenschaft gibt die <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=nameWithType&gt;</ph> -Wert, der in den Einstellungen für hergestellt wird die <ph id="ph2">&lt;xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29&gt;</ph> Konstruktorsignatur.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces">
          <source>If other signatures were used for construction or if <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=nameWithType&gt;</ph> is not specifically set to <ph id="ph2">`true`</ph>, the value of this property is <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Wenn andere Signaturen für die Konstruktion verwendet werden oder wenn <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=nameWithType&gt;</ph> nicht speziell auf festgelegt ist <ph id="ph2">`true`</ph>, der Wert dieser Eigenschaft ist <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces">
          <source>The value of this property influences the strings that are returned by <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces%2A&gt;</ph>.</source>
          <target state="translated">Der Wert dieser Eigenschaft wirkt sich auf die Zeichenfolgen, die von zurückgegeben werden <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces">
          <source>If <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the assembly portion of the string reports the equivalent of <ph id="ph3">&lt;xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces%2A&gt;</ph> ist <ph id="ph2">`true`</ph>, die Assemblyteil der Zeichenfolge gibt die Entsprechung der <ph id="ph3">&lt;xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces">
          <source>Searches the assemblies that are held by this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> and returns a set of namespaces.</source>
          <target state="translated">Sucht die in dieser <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>-Klasse enthaltenen Assemblys und gibt einen Satz von Namespaces zurück.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces">
          <source>An enumerable set of namespace identifiers.</source>
          <target state="translated">Ein aufzählbarer Satz von Namespacebezeichnern.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces">
          <source>These identifiers are provided as strings.</source>
          <target state="translated">Diese Bezeichner werden als Zeichenfolgen bereitgestellt.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces">
          <source>This method only searches the reference assemblies if they are passed in through construction or property setting.</source>
          <target state="translated">Diese Methode sucht nur die Verweisassemblys, wenn sie durch Einstellung in der Konstruktion oder Eigenschaft übergeben werden.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces">
          <source>If no assemblies are established as reference assemblies, the logic of this method examines all loaded assemblies where this <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContext&gt;</ph> is active.</source>
          <target state="translated">Wenn keine Assemblys als Verweisassemblys festgelegt werden, überprüft die Logik dieser Methode alle geladenen Assemblys, in denen dies <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContext&gt;</ph> aktiv ist.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetAllXamlTypes(System.String)">
          <source>The XAML namespace to return types for.</source>
          <target state="translated">Der XAML-Namespace, für den Typen zurückgegeben werden sollen.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetAllXamlTypes(System.String)">
          <source>Searches the assemblies that are held by this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> and returns a set of types from the specified XAML namespace.</source>
          <target state="translated">Sucht die in dieser <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>-Klasse enthaltenen Assemblys und gibt einen Satz von Typen aus dem angegebenen XAML-Namespace zurück.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetAllXamlTypes(System.String)">
          <source>An enumerable set of XAML types.</source>
          <target state="translated">Ein aufzählbarer Satz von XAML-Typen.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetAllXamlTypes(System.String)">
          <source>Each XAML type in the set is represented by a <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> object.</source>
          <target state="translated">Jeder XAML-Typ im Satz wird durch ein <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>-Objekt dargestellt.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)">
          <source>The XAML namespace to get the preferred prefix for.</source>
          <target state="translated">Der XAML-Namespace, für den das bevorzugte Präfix abgerufen werden soll.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)">
          <source>Gets a string that is reported as the preferred prefix for consumers to use when they map the specified XAML namespace.</source>
          <target state="translated">Ruft beim Zuordnen des angegebenen XAML-Namespaces eine Zeichenfolge ab, die als bevorzugtes Präfix für Consumer angegeben wird.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)">
          <source>A string that consumers should use when they map the specified XAML namespace for markup use.</source>
          <target state="translated">Eine Zeichenfolge, die von Consumern beim Zuordnen des angegebenen XAML-Namespaces zur Markupverwendung verwendet werden sollte.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)">
          <source>The most immediate consumer of the information is typically a XAML writer.</source>
          <target state="translated">Die aktuellste Consumer der Informationen wird in der Regel ein XAML-Writer.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)">
          <source>Other indirect consumers include design tools.</source>
          <target state="translated">Andere indirekte Consumer einschließen Entwurfstools</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)">
          <source>As part of the XAML binding for the common language runtime (CLR), you can specify this information by applying <ph id="ph1">&lt;xref:System.Windows.Markup.XmlnsPrefixAttribute&gt;</ph> at the assembly level.</source>
          <target state="translated">Sie können diese Informationen im Rahmen der Verwendung von XAML-Bindung für die common Language Runtime (CLR) angeben, durch Anwenden von <ph id="ph1">&lt;xref:System.Windows.Markup.XmlnsPrefixAttribute&gt;</ph> auf Assemblyebene.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)">
          <source><ph id="ph1">&lt;paramref name="xmlns" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xmlns" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.GetValueConverter``1(System.Type,System.Xaml.XamlType)">
          <source>The specific converter base class.</source>
          <target state="translated">Die bestimmte Konverterbasisklasse.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetValueConverter``1(System.Type,System.Xaml.XamlType)">
          <source>The converter implementation.</source>
          <target state="translated">Die Konverterimplementierung.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetValueConverter``1(System.Type,System.Xaml.XamlType)">
          <source>The desired destination type for the converter.</source>
          <target state="translated">Der gewünschte Zieltyp für den Konverter.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetValueConverter``1(System.Type,System.Xaml.XamlType)">
          <source>Returns a value converter that can convert to the requested <ph id="ph1">&lt;paramref name="targetType" /&gt;</ph>.</source>
          <target state="translated">Gibt einen Wertkonverter zurück, der eine Konvertierung in den angeforderten <ph id="ph1">&lt;paramref name="targetType" /&gt;</ph> vornehmen kann.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetValueConverter``1(System.Type,System.Xaml.XamlType)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> with a constraint that matches the constraint that is put on the method call.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> mit einer Einschränkung, die der auf den Methodenaufruf angewendeten Einschränkung entspricht.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)">
          <source>The XAML namespace that contains the named directive.</source>
          <target state="translated">Der XAML-Namespace, der die benannte Direktive enthält.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)">
          <source>The name of the directive to obtain.</source>
          <target state="translated">Der Name der abzurufenden Direktive.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> value that represents a directive, either for the XAML language or for a particular implementation.</source>
          <target state="translated">Gibt einen <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>-Wert zurück, der eine Direktive darstellt (entweder für die XAML-Sprache oder für eine bestimmte Implementierung).</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> object that represents the requested directive.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>-Objekt, das die angeforderte Direktive darstellt.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)">
          <source>Override this method if you create a derived class from <ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> as part of a XAML type system extension scenario.</source>
          <target state="translated">Überschreiben Sie diese Methode, wenn Sie eine abgeleitete Klasse von erstellen <ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> als Bestandteil des Szenarios Erweiterung System für eine Verwendung von XAML-Typ.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="xamlNamespace" /&gt;</ph> or <ph id="ph2">&lt;paramref name="name" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xamlNamespace" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="name" /&gt;</ph> ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlSchemaContext">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> that is based on either a CLR or XAML type identifier.</source>
          <target state="translated">Gibt ein <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>-Objekt zurück, das auf einem CLR-Typbezeichner oder XAML-Typbezeichner basiert.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Type)">
          <source>The type to get a <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> for.</source>
          <target state="translated">Der Typ, für den ein <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>-Objekt abgerufen werden soll.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Type)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> that is based on a CLR type identifier.</source>
          <target state="translated">Gibt ein <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>-Objekt zurück, das auf einem CLR-Typbezeichner basiert.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> that matches the input <ph id="ph2">&lt;paramref name="type" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>-Objekt, das dem <ph id="ph2">&lt;paramref name="type" /&gt;</ph> der Eingabe entspricht.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Type)">
          <source>This overload assumes that you are using the CLR for the backing type system.</source>
          <target state="translated">Diese Überladung wird davon ausgegangen, dass Sie die CLR für das Unterstützungstypsystem verwenden.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Type)">
          <source>If you are not using the CLR type system, use <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContext.GetXamlType%28System.Xaml.Schema.XamlTypeName%29&gt;</ph>.</source>
          <target state="translated">Wenn Sie das CLR-Typsystem nicht verwenden, verwenden Sie <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContext.GetXamlType%28System.Xaml.Schema.XamlTypeName%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Type)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Xaml.Schema.XamlTypeName)">
          <source>The XAML type name to get a <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> for.</source>
          <target state="translated">Der XAML-Typname, für den ein <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>-Objekt abgerufen werden soll.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Xaml.Schema.XamlTypeName)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> that is based on a XAML system type name.</source>
          <target state="translated">Gibt ein <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>-Objekt zurück, das auf einem XAML-Systemtypnamen basiert.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Xaml.Schema.XamlTypeName)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> that matches the input <ph id="ph2">&lt;paramref name="xamlTypeName" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>-Objekt, das dem <ph id="ph2">&lt;paramref name="xamlTypeName" /&gt;</ph> der Eingabe entspricht.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Xaml.Schema.XamlTypeName)">
          <source>A component of <ph id="ph1">&lt;paramref name="xamlTypeName" /&gt;</ph> (<ph id="ph2">&lt;see cref="P:System.Xaml.Schema.XamlTypeName.Name" /&gt;</ph> or <ph id="ph3">&lt;see cref="P:System.Xaml.Schema.XamlTypeName.Namespace" /&gt;</ph>) is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Eine Komonenten von <ph id="ph1">&lt;paramref name="xamlTypeName" /&gt;</ph> (<ph id="ph2">&lt;see cref="P:System.Xaml.Schema.XamlTypeName.Name" /&gt;</ph> oder <ph id="ph3">&lt;see cref="P:System.Xaml.Schema.XamlTypeName.Namespace" /&gt;</ph>) lautet <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Xaml.Schema.XamlTypeName)">
          <source><ph id="ph1">&lt;paramref name="xamlTypeName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xamlTypeName" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])">
          <source>The XAML namespace that contains the desired type.</source>
          <target state="translated">Der XAML-Namespace, der den gewünschten Typ enthält.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])">
          <source>The string name of the desired type.</source>
          <target state="translated">Der Zeichenfolgenname des gewünschten Typs.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])">
          <source>The initialization type arguments for a generic type.</source>
          <target state="translated">Die Initialisierungstypargumente für einen generischen Typ.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> that is based on a XAML namespace and a string for the type name.</source>
          <target state="translated">Gibt einen <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> zurück, der auf einem XAML-Namespace und einer Zeichenfolge für den Typnamen basiert.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])">
          <source>This signature can specify the type arguments for cases where the desired type is a generic type.</source>
          <target state="translated">Diese Signatur kann die Typargumente für Fälle angeben, bei denen der gewünschte Typ ein generischer Typ ist.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> that matches the input criteria.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>-Objekt, das den Eingabekriterien entspricht.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)">
          <source>The name of the assembly to load.</source>
          <target state="translated">Der Namen zu ladenden Assembly.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)">
          <source>Called when operations use this schema context to resolve an assembly that is required in order to resolve the XAML namespaces that it contains.</source>
          <target state="translated">Wird aufgerufen, wenn für Vorgänge mithilfe des Schemakontexts eine Assembly aufgelöst wird, die für die Auflösung des darin enthaltenen XAML-Namespaces erforderlich ist.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)">
          <source>The resolved assembly.</source>
          <target state="translated">Die aufgelöste Assembly.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)">
          <source>The underlying assembly resolution technique, which is an internal API, has built-in tolerances for different string forms of an assembly name as based on the <ph id="ph1">&lt;xref:System.Reflection.AssemblyName&gt;</ph> construction behavior.</source>
          <target state="translated">Das Verfahren Auflösung zugrunde liegenden Assembly an, die eine interne API ist, hat integrierte Toleranzen für andere Zeichenfolgenformen von Namen einer Assembly im auf der Grundlage der <ph id="ph1">&lt;xref:System.Reflection.AssemblyName&gt;</ph> Konstruktion Verhalten.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)">
          <source>The purpose of this API is to enable first-opportunity resolution against known sets of assemblies, such as against reference assemblies instead of against a global assembly cache.</source>
          <target state="translated">Der Zweck dieser API werden erste-Chance-Auflösung für bekannte Sätze von Assemblys, z. B. gegen Verweisassemblys statt für den globalen Assemblycache zu aktivieren.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)">
          <source>If the list of reference assemblies is populated, the default implementation can access the known reference assemblies.</source>
          <target state="translated">Wenn die Liste der Verweisassemblys aufgefüllt wird, kann die standardmäßige Implementierung die bekannten Verweisassemblys zugreifen.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlSchemaContext.ReferenceAssemblies">
          <source>Gets an enumerable set of reference assemblies for the XAML schema context.</source>
          <target state="translated">Ruft einen aufzählbaren Satz von Verweisassemblys für den XAML-Schemakontext ab.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.ReferenceAssemblies">
          <source>An enumerable set of reference assemblies for the schema context.</source>
          <target state="translated">Ein aufzählbarer Satz von Verweisassemblys für den Schemakontext.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.ReferenceAssemblies">
          <source>Each assembly information item is specified by an <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> value.</source>
          <target state="translated">Jedes Assemblyinformationselement wird durch einen <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>-Wert angegeben.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
          <source>Gets a value that specifies whether a XAML schema and its context support markup extensions that have two constructors with the same arity (number of input parameters).</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob ein XAML-Schema und der Kontext Markuperweiterungen unterstützen, in denen zwei Konstruktoren mit der gleichen Stelligkeit (Anzahl von Eingabeparametern) enthalten sind.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the schema context permits markup extensions that have duplicate arity; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn der Schemakontext Markuperweiterungen mit doppelter Stelligkeit zulässt, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Der Standardwert ist <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
          <source>This property returns the <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=nameWithType&gt;</ph> value that is established in the settings for the <ph id="ph2">&lt;xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29&gt;</ph> constructor signature.</source>
          <target state="translated">Diese Eigenschaft gibt die <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=nameWithType&gt;</ph> -Wert, der in den Einstellungen für hergestellt wird die <ph id="ph2">&lt;xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29&gt;</ph> Konstruktorsignatur.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
          <source>If other signatures are used for construction or if <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=nameWithType&gt;</ph> is not specifically set to <ph id="ph2">`true`</ph>, the value of this property is <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Wenn andere Signaturen für die Konstruktion verwendet werden oder wenn <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=nameWithType&gt;</ph> nicht speziell auf festgelegt ist <ph id="ph2">`true`</ph>, der Wert dieser Eigenschaft ist <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
          <source>Duplicate arity of markup extensions is not specifically addressed by the XAML specification [MS-XAML], section 6.6.7.2.</source>
          <target state="translated">Doppelter Stelligkeit von Markuperweiterungen wird durch die Verwendung von XAML-Spezifikation [MS-XAML] Abschnitt 6.6.7.2 nicht gesondert behandelt.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
          <source>This is because formation of the XAML information item for a markup extension is identical regardless of duplicate arity that might exist in the markup extension implementation.</source>
          <target state="translated">Dies ist, da die Bildung des Elements XAML-Informationen für eine Markuperweiterung unabhängig von der doppelte Stelligkeit identisch ist, die ggf. in der Implementierung der Markuperweiterung vorhanden.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
          <source>Only the actual invocation of the markup extension and its <ph id="ph1">`ProvideValue`</ph> exposes any issues associated with duplicate arity.</source>
          <target state="translated">Nur den eigentlichen Aufruf der Markuperweiterung und die zugehörige <ph id="ph1">`ProvideValue`</ph> macht alle Probleme in Zusammenhang mit doppelte Stelligkeit handelt.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
          <source>Behavior for handling duplicate arity is thus undefined and is left up to each implementing XAML schema context and its XAML writer integration.</source>
          <target state="translated">Verhalten für die Behandlung doppelten Stelligkeit ist daher nicht definiert und bleibt bis zu einzelnen implementierende XAML-Schemakontext und die Verwendung von XAML-Writer-Integration.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
          <source>The default XAML schema context as implemented for .NET Framework XAML Services operations does not support duplicate arity; various .NET Framework XAML Services APIs will throw exceptions when processing markup extension usage with underlying duplicate arity.</source>
          <target state="translated">Die Verwendung von XAML-Standardschemakontext wie für .NET Framework XAML Services-Vorgänge implementiert unterstützt keine doppelten Stelligkeit; verschiedene .NET Framework-XAML-Dienste-APIs werden Ausnahmen auslösen, bei der Verarbeitung von Markuperweiterungsverwendung mit zugrunde liegenden doppelte Stelligkeit handelt.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
          <source>For more information about defining markup extensions, see <bpt id="p1">[</bpt>Markup Extensions for XAML Overview<ept id="p1">](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md)</ept>.</source>
          <target state="translated">Weitere Informationen zum Definieren von Markuperweiterungen finden Sie unter <bpt id="p1">[</bpt>Markup Extensions for XAML Overview<ept id="p1">](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
          <source>The <ph id="ph1">&lt;see langword="xmlns" /&gt;</ph> string for the XAML namespace to be checked for a compatible result.</source>
          <target state="translated">Die <ph id="ph1">&lt;see langword="xmlns" /&gt;</ph>-Zeichenfolge für den XAML-Namespace, der auf ein kompatibles Ergebnis überprüft werden soll.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
          <source>When this method returns, the <ph id="ph1">&lt;see langword="xmlns" /&gt;</ph> string for a compatible XAML namespace request.</source>
          <target state="translated">Wenn diese Methode beendet wird, die <ph id="ph1">&lt;see langword="xmlns" /&gt;</ph>-Zeichenfolge für eine kompatible XAML-Namespaceanforderung.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
          <source>This might be identical to <bpt id="p1">&lt;c&gt;</bpt>xamlNamespace<ept id="p1">&lt;/c&gt;</ept> if the method returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Diese kann mit <bpt id="p1">&lt;c&gt;</bpt>xamlNamespace<ept id="p1">&lt;/c&gt;</ept> identisch sein, wenn die Methode <ph id="ph1">&lt;see langword="false" /&gt;</ph> zurückgibt.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
          <source>Returns the success or failure of a request for a compatible XAML namespace.</source>
          <target state="translated">Gibt den Erfolg oder den Fehler der Anforderung eines kompatiblen XAML-Namespaces zurück.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
          <source>A successful request reports that XAML namespace as an out parameter.</source>
          <target state="translated">Bei einer erfolgreichen Anforderung wird dieser XAML-Namespace als Out-Parameter gemeldet.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="compatibleNamespace" /&gt;</ph> contains a usable result; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn <ph id="ph2">&lt;paramref name="compatibleNamespace" /&gt;</ph> ein verwendbares Ergebnis enthält, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
          <source>Internally, this method uses the following lookup order:</source>
          <target state="translated">Diese Methode verwendet intern die folgenden Suchreihenfolge:</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
          <source>An internally implemented compatibility dictionary, which may have been populated by an earlier lookup.</source>
          <target state="translated">Ein Kompatibilitätswörterbuch intern implementierte, die möglicherweise von einer früheren Suche aufgefüllt wurde.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Markup.XmlnsCompatibleWithAttribute&gt;</ph> parameter evaluation.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Windows.Markup.XmlnsCompatibleWithAttribute&gt;</ph> Parameter Auswertung.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
          <source>If no other compatible namespace is discovered and this method returns <ph id="ph1">`false`</ph>, the <ph id="ph2">`compatibleNamespace`</ph> parameter output might have the same value as the <ph id="ph3">`xamlNamespace`</ph> input.</source>
          <target state="translated">Wenn kein anderer kompatibler Namespace ermittelt wird und die Rückgabe dieser Methode <ph id="ph1">`false`</ph>, <ph id="ph2">`compatibleNamespace`</ph> Parameter Ausgabe möglicherweise den gleichen Wert wie die <ph id="ph3">`xamlNamespace`</ph> Eingabe.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
          <source><ph id="ph1">&lt;paramref name="xamlNamespace" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xamlNamespace" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>