<Type Name="AmbientPropertyValue" FullName="System.Xaml.AmbientPropertyValue">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8ac1019d6f6938640827003bd367cec9d9d3e719" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86606699" /></Metadata><TypeSignature Language="C#" Value="public class AmbientPropertyValue" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AmbientPropertyValue extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.AmbientPropertyValue" />
  <TypeSignature Language="VB.NET" Value="Public Class AmbientPropertyValue" />
  <TypeSignature Language="C++ CLI" Value="public ref class AmbientPropertyValue" />
  <TypeSignature Language="F#" Value="type AmbientPropertyValue = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Meldet Informationen zu einer Ambient-Eigenschaft als Teil einer <see cref="T:System.Xaml.IAmbientProvider" />-Implementierung.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.AmbientPropertyValue> stellt ein Informationselement dar, das durch Aufrufen einer <xref:System.Xaml.IAmbientProvider> Dienst Methode zurückgegeben wird. Die- `GetAll` Methoden geben Enumerationen oder Arrays von <xref:System.Xaml.AmbientPropertyValue> Elementen zurück. die- `GetFirst` Methoden geben ein einzelnes-Element zurück <xref:System.Xaml.AmbientPropertyValue> .  
  
## <a name="about-ambient-properties"></a>Informationen zu Ambient-Eigenschaften  
 Eine Ambient-Eigenschaft ist eine Eigenschaft, deren Eigenschafts Wert für die Wert Konverter-Verwendung in der XAML-Knoten Struktur und das Objekt Diagramm darunter verfügbar sein soll. Das Ambient-Konzept ist für einen XAML-Prozessor während der Objekt Schreibphase des Ladepfad oder der Serialisierungsphase eines Speicher Pfads relevant.  
  
 Ein Typ kann auch als Ambient attributiert werden. In diesem Fall werden alle Eigenschaften, die den attributierten Typ verwenden, als Ambient gemeldet.  
  
 Im Fall des Lade Pfades könnte der Ambient-Eigenschafts Wert den Wert des Objekt Diagramms beeinflussen, das in einer XAML-Knoten Struktur unter diesem Wert vorhanden ist. Bei der Verarbeitung als XAML-knotenstream impliziert das Ambient-Konzept, dass der Ambient-Eigenschafts Wert für Typkonverter und Markup Erweiterungen von zu verfügbar sein muss `StartObject` `EndObject` . Ebenso kann ein Typkonverter oder eine Markup Erweiterung, der für den Speicherpfad verwendet wird, die Ambient-Eigenschaft und deren Wert suchen. Daher ist die XAML, die erstellt wird, eine bessere Roundtrip-Darstellung.  
  
 In der Sprachdefinition gibt XAML nicht die Reihenfolge an, in der Member eines Objekts verarbeitet werden müssen. Allerdings muss jeder Ambient-Eigenschafts Wert zuerst vom XAML-Reader verarbeitet werden, damit der Typkonverter und die Verwendung von Markup Erweiterungen, die in anderen Eigenschaften enthalten sind, über den Dienst darauf zugreifen können <xref:System.Xaml.IAmbientProvider> .  
  
 <xref:System.Xaml.XamlMember.DependsOn%2A> ist ein ähnliches Konzept, das auch die Reihenfolge der XAML-Knoten Verarbeitung beeinflusst. Kann jedoch <xref:System.Xaml.XamlMember.DependsOn%2A> nur für peermember-und Knoten Beziehungen verwendet werden; Sie kann nicht alle Nachfolger beeinflussen. Außerdem <xref:System.Xaml.XamlMember.DependsOn%2A> wirkt sich die Eigenschafts Einstellung des Objekt Diagramms direkt aus, während die Umgebungs Technik auf Typkonvertern oder Markup Erweiterungen basiert. Bei der Ambient-Technik muss auch ein spezifischer Typkonverter oder eine Definition für eine Markup Erweiterung vorhanden sein. Jeder Typkonverter oder jede Markup Erweiterung kann bestimmen, wie der Ambient-Eigenschafts Wert interpretiert und auf den Objekt Diagramm Speicherort angewendet werden soll, an dem der Typkonverter oder die Markup Erweiterung verwendet wird.  
  
## <a name="wpf-usage-notes"></a>Hinweise zur WPF-Verwendung  
 Ein Umgebungs Eigenschafts Szenario, das in der [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] featuremenge veranschaulicht wird <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> , ist, das die erforderlichen Eigenschaften Namen suchen nach anderen Werten qualifizieren kann. In diesem Fall qualifiziert der <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> Wert die <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> Werte in den darunter liegenden XAML-Knoten. <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> verwendet das Typkonverterverhalten für eine <xref:System.Windows.DependencyProperty> . Dieses Verhalten greift <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> durch Abfragen <xref:System.Xaml.IAmbientProvider.GetFirstAmbientValue%2A> von einem Dienst Kontext, der für Typkonverter und Markup Erweiterungen verfügbar ist, auf den Ambient-Wert zu.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.IAmbientProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbientPropertyValue (System.Xaml.XamlMember property, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlMember property, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.AmbientPropertyValue.#ctor(System.Xaml.XamlMember,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (property As XamlMember, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbientPropertyValue(System::Xaml::XamlMember ^ property, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Xaml.AmbientPropertyValue : System.Xaml.XamlMember * obj -&gt; System.Xaml.AmbientPropertyValue" Usage="new System.Xaml.AmbientPropertyValue (property, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="property" Type="System.Xaml.XamlMember" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">Der Bezeichner, der die Ambient-Eigenschaft darstellt.</param>
        <param name="value">Der zu meldende Wert.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xaml.AmbientPropertyValue" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RetrievedProperty">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember RetrievedProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlMember RetrievedProperty" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.AmbientPropertyValue.RetrievedProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RetrievedProperty As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlMember ^ RetrievedProperty { System::Xaml::XamlMember ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RetrievedProperty : System.Xaml.XamlMember" Usage="System.Xaml.AmbientPropertyValue.RetrievedProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den XAML-Typsystembezeichner ab, der (<see cref="T:System.Xaml.XamlMember" />), der die Ambient-Eigenschaft darstellt.</summary>
        <value>Der Bezeichner, der die Ambient-Eigenschaft darstellt.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Markup.AmbientAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.AmbientPropertyValue.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj" Usage="System.Xaml.AmbientPropertyValue.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert der Ambient-Eigenschaft ab.</summary>
        <value>Der Wert der Ambient-Eigenschaft.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
