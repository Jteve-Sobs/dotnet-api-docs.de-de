<Type Name="AmbientPropertyValue" FullName="System.Xaml.AmbientPropertyValue">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fa556d627fd741b02d3d7c31895e65f06e8daaed" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69427761" /></Metadata><TypeSignature Language="C#" Value="public class AmbientPropertyValue" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AmbientPropertyValue extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.AmbientPropertyValue" />
  <TypeSignature Language="VB.NET" Value="Public Class AmbientPropertyValue" />
  <TypeSignature Language="C++ CLI" Value="public ref class AmbientPropertyValue" />
  <TypeSignature Language="F#" Value="type AmbientPropertyValue = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e01f2-101">Meldet Informationen zu einer Ambient-Eigenschaft als Teil einer <see cref="T:System.Xaml.IAmbientProvider" />-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="e01f2-101">Reports information about an ambient property, as part of an <see cref="T:System.Xaml.IAmbientProvider" /> implementation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e01f2-102"><xref:System.Xaml.AmbientPropertyValue>stellt ein Informationselement dar, das durch Aufrufen einer <xref:System.Xaml.IAmbientProvider> Dienst Methode zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="e01f2-102"><xref:System.Xaml.AmbientPropertyValue> represents an information item that is returned by calling an <xref:System.Xaml.IAmbientProvider> service method.</span></span> <span data-ttu-id="e01f2-103">Die `GetAll` -Methoden geben Enumerationen oder Arrays <xref:System.Xaml.AmbientPropertyValue> von Elementen zurück `GetFirst` . die-Methoden <xref:System.Xaml.AmbientPropertyValue>geben ein einzelnes-Element zurück.</span><span class="sxs-lookup"><span data-stu-id="e01f2-103">The `GetAll` methods return enumerations or arrays of <xref:System.Xaml.AmbientPropertyValue> items; the `GetFirst` methods return a single <xref:System.Xaml.AmbientPropertyValue>.</span></span>  
  
## <a name="about-ambient-properties"></a><span data-ttu-id="e01f2-104">Informationen zu Ambient-Eigenschaften</span><span class="sxs-lookup"><span data-stu-id="e01f2-104">About Ambient Properties</span></span>  
 <span data-ttu-id="e01f2-105">Eine Ambient-Eigenschaft ist eine Eigenschaft, deren Eigenschafts Wert für die Wert Konverter-Verwendung in der XAML-Knoten Struktur und das Objekt Diagramm darunter verfügbar sein soll.</span><span class="sxs-lookup"><span data-stu-id="e01f2-105">An ambient property is a property whose property value should be available to value converter usage in the XAML node structure and to the object graph underneath it.</span></span> <span data-ttu-id="e01f2-106">Das Ambient-Konzept ist für einen XAML-Prozessor während der Objekt Schreibphase des Ladepfad oder der Serialisierungsphase eines Speicher Pfads relevant.</span><span class="sxs-lookup"><span data-stu-id="e01f2-106">The ambient concept  is relevant for a XAML processor during the object-writing phase of the load path or the serialization phase of a save path.</span></span>  
  
 <span data-ttu-id="e01f2-107">Ein Typ kann auch als Ambient attributiert werden.</span><span class="sxs-lookup"><span data-stu-id="e01f2-107">A type can also be attributed as ambient.</span></span> <span data-ttu-id="e01f2-108">In diesem Fall werden alle Eigenschaften, die den attributierten Typ verwenden, als Ambient gemeldet.</span><span class="sxs-lookup"><span data-stu-id="e01f2-108">In this case, all properties that use the attributed type are reported as ambient.</span></span>  
  
 <span data-ttu-id="e01f2-109">Im Fall des Lade Pfades könnte der Ambient-Eigenschafts Wert den Wert des Objekt Diagramms beeinflussen, das in einer XAML-Knoten Struktur unter diesem Wert vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="e01f2-109">In the load path case, the ambient property value might influence the object graph produced value of other properties that exist underneath it in a XAML node structure.</span></span> <span data-ttu-id="e01f2-110">Bei der Verarbeitung als XAML-knotenstream impliziert das Ambient-Konzept, dass der Ambient-Eigenschafts Wert für Typkonverter und Markup Erweiterungen `StartObject` von `EndObject`zu verfügbar sein muss.</span><span class="sxs-lookup"><span data-stu-id="e01f2-110">When processed as a XAML node stream, the ambient concept implies that the ambient property value must be available to type converters and markup extensions from `StartObject` to `EndObject`.</span></span> <span data-ttu-id="e01f2-111">Ebenso kann ein Typkonverter oder eine Markup Erweiterung, der für den Speicherpfad verwendet wird, die Ambient-Eigenschaft und deren Wert suchen.</span><span class="sxs-lookup"><span data-stu-id="e01f2-111">Similarly, a type converter or markup extension that is used for the save path can look up the ambient property and its value.</span></span> <span data-ttu-id="e01f2-112">Daher ist die XAML, die erstellt wird, eine bessere Roundtrip-Darstellung.</span><span class="sxs-lookup"><span data-stu-id="e01f2-112">Therefore, the XAML that is produced is a better round-trip representation.</span></span>  
  
 <span data-ttu-id="e01f2-113">In der Sprachdefinition gibt XAML nicht die Reihenfolge an, in der Member eines Objekts verarbeitet werden müssen.</span><span class="sxs-lookup"><span data-stu-id="e01f2-113">By its language definition, XAML does not specify the order in which members of an object must be processed.</span></span> <span data-ttu-id="e01f2-114">Allerdings muss jeder Ambient-Eigenschafts Wert zuerst vom XAML-Reader verarbeitet werden, damit der Typkonverter und die Verwendung von Markup Erweiterungen, die in anderen Eigenschaften enthalten sind <xref:System.Xaml.IAmbientProvider> , über den Dienst darauf zugreifen können.</span><span class="sxs-lookup"><span data-stu-id="e01f2-114">However, any ambient property value must be processed first by the XAML reader so that the type converter and markup extension usage that are contained in other properties can access it through the <xref:System.Xaml.IAmbientProvider> service.</span></span>  
  
 <span data-ttu-id="e01f2-115"><xref:System.Xaml.XamlMember.DependsOn%2A>ist ein ähnliches Konzept, das auch die Reihenfolge der XAML-Knoten Verarbeitung beeinflusst.</span><span class="sxs-lookup"><span data-stu-id="e01f2-115"><xref:System.Xaml.XamlMember.DependsOn%2A> is a similar concept that also influences XAML node-processing order.</span></span> <span data-ttu-id="e01f2-116"><xref:System.Xaml.XamlMember.DependsOn%2A> Kann jedoch nur für peermember-und Knoten Beziehungen verwendet werden; Sie kann nicht alle Nachfolger beeinflussen.</span><span class="sxs-lookup"><span data-stu-id="e01f2-116">However, <xref:System.Xaml.XamlMember.DependsOn%2A> can only be used for peer member and node relationships; it cannot influence all descendants.</span></span> <span data-ttu-id="e01f2-117">Außerdem wirkt <xref:System.Xaml.XamlMember.DependsOn%2A> sich die Eigenschafts Einstellung des Objekt Diagramms direkt aus, während die Umgebungs Technik auf Typkonvertern oder Markup Erweiterungen basiert.</span><span class="sxs-lookup"><span data-stu-id="e01f2-117">Also, <xref:System.Xaml.XamlMember.DependsOn%2A> directly influences object graph property setting, whereas the ambient technique relies on type converters or markup extensions.</span></span> <span data-ttu-id="e01f2-118">Bei der Ambient-Technik muss auch ein spezifischer Typkonverter oder eine Definition für eine Markup Erweiterung vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="e01f2-118">In the ambient technique, there must also be a specific type converter or markup extension definition.</span></span> <span data-ttu-id="e01f2-119">Jeder Typkonverter oder jede Markup Erweiterung kann bestimmen, wie der Ambient-Eigenschafts Wert interpretiert und auf den Objekt Diagramm Speicherort angewendet werden soll, an dem der Typkonverter oder die Markup Erweiterung verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="e01f2-119">It is up to each type converter or markup extension to determine how the ambient property value should be interpreted and applied to the object graph location where the type converter or markup extension is used.</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="e01f2-120">Hinweise zur WPF-Verwendung</span><span class="sxs-lookup"><span data-stu-id="e01f2-120">WPF Usage Notes</span></span>  
 <span data-ttu-id="e01f2-121">Ein Umgebungs Eigenschafts Szenario, das in der [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] featuremenge <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType>veranschaulicht wird, ist, das die erforderlichen Eigenschaften Namen suchen nach anderen Werten qualifizieren kann.</span><span class="sxs-lookup"><span data-stu-id="e01f2-121">An ambient property scenario that is illustrated in the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] feature set is <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType>, which can qualify the necessary property name lookups for other values.</span></span> <span data-ttu-id="e01f2-122">In diesem Fall qualifiziert der <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> Wert die <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> Werte in den darunter liegenden XAML-Knoten.</span><span class="sxs-lookup"><span data-stu-id="e01f2-122">In this case, the <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> value qualifies the <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> values in the XAML nodes underneath it.</span></span> <span data-ttu-id="e01f2-123"><xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType>verwendet das Typkonverterverhalten für <xref:System.Windows.DependencyProperty>eine.</span><span class="sxs-lookup"><span data-stu-id="e01f2-123"><xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> uses the type converter behavior for a <xref:System.Windows.DependencyProperty>.</span></span> <span data-ttu-id="e01f2-124">Dieses Verhalten greift durch <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> <xref:System.Xaml.IAmbientProvider.GetFirstAmbientValue%2A> Abfragen von einem Dienst Kontext, der für Typkonverter und Markup Erweiterungen verfügbar ist, auf den Ambient-Wert zu.</span><span class="sxs-lookup"><span data-stu-id="e01f2-124">This behavior accesses the ambient <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> value by querying <xref:System.Xaml.IAmbientProvider.GetFirstAmbientValue%2A> from a service context that is available to type converters and markup extensions.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.IAmbientProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbientPropertyValue (System.Xaml.XamlMember property, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlMember property, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.AmbientPropertyValue.#ctor(System.Xaml.XamlMember,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (property As XamlMember, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbientPropertyValue(System::Xaml::XamlMember ^ property, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Xaml.AmbientPropertyValue : System.Xaml.XamlMember * obj -&gt; System.Xaml.AmbientPropertyValue" Usage="new System.Xaml.AmbientPropertyValue (property, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="property" Type="System.Xaml.XamlMember" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="e01f2-125">Der Bezeichner, der die Ambient-Eigenschaft darstellt.</span><span class="sxs-lookup"><span data-stu-id="e01f2-125">The identifier that represents the ambient property.</span></span></param>
        <param name="value"><span data-ttu-id="e01f2-126">Der zu meldende Wert.</span><span class="sxs-lookup"><span data-stu-id="e01f2-126">The value to report.</span></span></param>
        <summary><span data-ttu-id="e01f2-127">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.AmbientPropertyValue" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="e01f2-127">Initializes a new instance of the <see cref="T:System.Xaml.AmbientPropertyValue" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RetrievedProperty">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember RetrievedProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlMember RetrievedProperty" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.AmbientPropertyValue.RetrievedProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RetrievedProperty As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlMember ^ RetrievedProperty { System::Xaml::XamlMember ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RetrievedProperty : System.Xaml.XamlMember" Usage="System.Xaml.AmbientPropertyValue.RetrievedProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e01f2-128">Ruft den XAML-Typsystembezeichner ab, der (<see cref="T:System.Xaml.XamlMember" />), der die Ambient-Eigenschaft darstellt.</span><span class="sxs-lookup"><span data-stu-id="e01f2-128">Gets the XAML type system identifier (<see cref="T:System.Xaml.XamlMember" />) that represents the ambient property.</span></span></summary>
        <value><span data-ttu-id="e01f2-129">Der Bezeichner, der die Ambient-Eigenschaft darstellt.</span><span class="sxs-lookup"><span data-stu-id="e01f2-129">The identifier that represents the ambient property.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Markup.AmbientAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.AmbientPropertyValue.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj" Usage="System.Xaml.AmbientPropertyValue.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e01f2-130">Ruft den Wert der Ambient-Eigenschaft ab.</span><span class="sxs-lookup"><span data-stu-id="e01f2-130">Gets the value of the ambient property.</span></span></summary>
        <value><span data-ttu-id="e01f2-131">Der Wert der Ambient-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="e01f2-131">The value of the ambient property.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
