<Type Name="AmbientPropertyValue" FullName="System.Xaml.AmbientPropertyValue">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3a44eb2004abcae643ccb9cf6df0b05aa26fb2db" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39985649" /></Metadata><TypeSignature Language="C#" Value="public class AmbientPropertyValue" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AmbientPropertyValue extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.AmbientPropertyValue" />
  <TypeSignature Language="VB.NET" Value="Public Class AmbientPropertyValue" />
  <TypeSignature Language="C++ CLI" Value="public ref class AmbientPropertyValue" />
  <TypeSignature Language="F#" Value="type AmbientPropertyValue = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Meldet Informationen zu einer Ambient-Eigenschaft als Teil einer <see cref="T:System.Xaml.IAmbientProvider" />-Implementierung.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.AmbientPropertyValue> Stellt ein Informationselement, das durch den Aufruf zurückgegeben wird ein <xref:System.Xaml.IAmbientProvider> -Dienstmethode. Die `GetAll` Methoden zurückgeben, Enumerationen oder Arrays mit <xref:System.Xaml.AmbientPropertyValue> Elemente; die `GetFirst` Methoden zurückgeben eine einzelnen <xref:System.Xaml.AmbientPropertyValue>.  
  
## <a name="about-ambient-properties"></a>Informationen zu Ambient-Eigenschaften  
 Eine Ambiente-Eigenschaft ist eine Eigenschaft, dessen Eigenschaftswert Wert Konverter Nutzung in der XAML-Knotenstruktur sowie das Objektdiagramm, darunter zur Verfügung stehen sollten. Das Umgebungskonzept ist relevant für einen XAML-Prozessor, während der Phase Objekt zum Schreiben des Pfads laden oder der Serialisierungsphase eines Speichervorgangs Pfad.  
  
 Ein Typ kann auch als ambient zugeschrieben werden. In diesem Fall werden alle Eigenschaften, mit denen den attributierten Typ als Umgebung gemeldet.  
  
 Im Fall Pfad laden kann der Wert der ambient-Eigenschaft den Graphen Objektwert anderer Eigenschaften beeinflussen, die darunter liegenden in einer XAML-Knotenstruktur vorhanden sind. Wenn als eine XAML-Knotenstream verarbeitet, das Umgebungskonzept impliziert, dass der Wert der ambient-Eigenschaft für Typkonverter und Markuperweiterungen von verfügbar sein muss `StartObject` zu `EndObject`. Auf ähnliche Weise als Typkonverter oder die Markuperweiterung typerweiterung, die verwendet wird der Speichervorgang Pfad kann finden Sie in der ambient-Eigenschaft und dessen Wert. Daher ist die XAML, das erstellt wird eine bessere Round-Trip-Darstellung.  
  
 Definitionsgemäß Sprache ist in XAML nicht die Reihenfolge angeben, in der Member eines Objekts verarbeitet werden müssen. Jedoch ambient-Eigenschaft-Wert muss zuerst verarbeitet werden, die der XAML-Reader, damit die Typ-Konverter und Markuperweiterungsverwendungen, die in anderen Eigenschaften enthalten sind, die über zugreifen kann die <xref:System.Xaml.IAmbientProvider> Service.  
  
 <xref:System.Xaml.XamlMember.DependsOn%2A> ist ein ähnliches Konzept, das XAML-Knoten-Verarbeitungsreihenfolge auch beeinflusst. Allerdings <xref:System.Xaml.XamlMember.DependsOn%2A> kann nur verwendet werden, für die Peer-Member und Knoten Beziehungen; es kann nicht alle abhängigen Elemente beeinflussen. Darüber hinaus <xref:System.Xaml.XamlMember.DependsOn%2A> direkt beeinflusst Graph-Eigenschaft festlegen, Objekt während die Ambiente-Technik Typkonverter oder Markuperweiterungen verwendet. In der ambient-Technik muss gibt es zudem eine bestimmte Typkonverter oder die Erweiterung der Markupdefinition. Es ist Aufgabe der einzelnen Typkonverter oder die Markuperweiterung, um zu bestimmen, wie der ambient-Eigenschaft-Wert interpretiert und auf den Speicherort des Objekts-Diagramm, in dem der Typkonverter oder die Markuperweiterung verwendet wird, angewendet werden soll.  
  
## <a name="wpf-usage-notes"></a>Hinweise zur WPF-Verwendung  
 Eine ambient-Eigenschaft-Szenario, das im dargestellt ist die [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Featuresatz ist <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType>, die können die erforderliche Eigenschaft Name Nachschlagefelder für andere Werte qualifizieren. In diesem Fall die <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> Wert qualifiziert die <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> Werte in die darunter liegenden XAML-Knoten. <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> wird verwendet, der Typkonverterverhalten für eine <xref:System.Windows.DependencyProperty>. Dieses Verhalten greift auf den Ambient- <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> Wert durch Abfragen <xref:System.Xaml.IAmbientProvider.GetFirstAmbientValue%2A> aus einen Dienstkontext, der für Typkonverter und Markuperweiterungen verfügbar ist.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.IAmbientProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbientPropertyValue (System.Xaml.XamlMember property, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlMember property, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.AmbientPropertyValue.#ctor(System.Xaml.XamlMember,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (property As XamlMember, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbientPropertyValue(System::Xaml::XamlMember ^ property, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Xaml.AmbientPropertyValue : System.Xaml.XamlMember * obj -&gt; System.Xaml.AmbientPropertyValue" Usage="new System.Xaml.AmbientPropertyValue (property, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="property" Type="System.Xaml.XamlMember" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">Der Bezeichner, der die Ambient-Eigenschaft darstellt.</param>
        <param name="value">Der zu meldende Wert.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xaml.AmbientPropertyValue" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RetrievedProperty">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember RetrievedProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlMember RetrievedProperty" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.AmbientPropertyValue.RetrievedProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RetrievedProperty As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlMember ^ RetrievedProperty { System::Xaml::XamlMember ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RetrievedProperty : System.Xaml.XamlMember" Usage="System.Xaml.AmbientPropertyValue.RetrievedProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den XAML-Typsystembezeichner ab, der (<see cref="T:System.Xaml.XamlMember" />), der die Ambient-Eigenschaft darstellt.</summary>
        <value>Der Bezeichner, der die Ambient-Eigenschaft darstellt.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Markup.AmbientAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.AmbientPropertyValue.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj" Usage="System.Xaml.AmbientPropertyValue.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert der Ambient-Eigenschaft ab.</summary>
        <value>Der Wert der Ambient-Eigenschaft.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>