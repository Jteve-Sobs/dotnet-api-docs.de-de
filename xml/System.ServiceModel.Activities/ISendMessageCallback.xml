<Type Name="ISendMessageCallback" FullName="System.ServiceModel.Activities.ISendMessageCallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5f58f6e3b166020fc8bc2725072f68b99b4561ad" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69158367" /></Metadata><TypeSignature Language="C#" Value="public interface ISendMessageCallback" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISendMessageCallback" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Activities.ISendMessageCallback" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISendMessageCallback" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISendMessageCallback" />
  <TypeSignature Language="F#" Value="type ISendMessageCallback = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ebba2-101">Eine Schnittstelle, die einen Rückruf implementiert, der aufgerufen wird, kurz bevor eine Meldung von der <see cref="T:System.ServiceModel.Activities.Send" />-Aktivität oder der <see cref="T:System.ServiceModel.Activities.SendParametersContent" />-Aktivität gesendet wird.</span><span class="sxs-lookup"><span data-stu-id="ebba2-101">An interface that implements a callback that is called just before a message is sent on the wire by the <see cref="T:System.ServiceModel.Activities.Send" /> or <see cref="T:System.ServiceModel.Activities.SendParametersContent" /> activities.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ebba2-102">Im folgenden Beispiel wird gezeigt, wie die <xref:System.ServiceModel.Activities.ISendMessageCallback> -Schnittstelle in einen neuen Header einer Nachricht implementiert wird, bevor Sie über das Netzwerk gesendet wird.</span><span class="sxs-lookup"><span data-stu-id="ebba2-102">The following example shows how to implement the <xref:System.ServiceModel.Activities.ISendMessageCallback> interface to a new header to a message before it is sent out on the wire.</span></span>  
  
 [!code-csharp[AccessingOperationContext#0](~/samples/snippets/csharp/VS_Snippets_CFX/accessingoperationcontext/cs/sendinstanceidcallback.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="OnSendMessage">
      <MemberSignature Language="C#" Value="public void OnSendMessage (System.ServiceModel.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnSendMessage(class System.ServiceModel.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.ISendMessageCallback.OnSendMessage(System.ServiceModel.OperationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnSendMessage(System::ServiceModel::OperationContext ^ operationContext);" />
      <MemberSignature Language="F#" Value="abstract member OnSendMessage : System.ServiceModel.OperationContext -&gt; unit" Usage="iSendMessageCallback.OnSendMessage operationContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationContext" Type="System.ServiceModel.OperationContext" />
      </Parameters>
      <Docs>
        <param name="operationContext"><span data-ttu-id="ebba2-103">Der Kontext des Vorgangs, mit dem die Meldung gesendet wird.</span><span class="sxs-lookup"><span data-stu-id="ebba2-103">The operation's context under which the message is being sent.</span></span></param>
        <summary><span data-ttu-id="ebba2-104">Wird ausgeführt, wenn eine Dienstmeldung gesendet wird.</span><span class="sxs-lookup"><span data-stu-id="ebba2-104">Executed when a service message is sent.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ebba2-105">Im folgenden Beispiel wird gezeigt, wie die <xref:System.ServiceModel.Activities.ISendMessageCallback> -Schnittstelle in einen neuen Header einer Nachricht implementiert wird, bevor Sie über das Netzwerk gesendet wird.</span><span class="sxs-lookup"><span data-stu-id="ebba2-105">The following example shows how to implement the <xref:System.ServiceModel.Activities.ISendMessageCallback> interface to a new header to a message before it is sent out on the wire.</span></span>  
  
 [!code-csharp[AccessingOperationContext#0](~/samples/snippets/csharp/VS_Snippets_CFX/accessingoperationcontext/cs/sendinstanceidcallback.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
