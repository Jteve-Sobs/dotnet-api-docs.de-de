<Type Name="FilterType" FullName="System.ServiceModel.Routing.Configuration.FilterType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="69720027a07ee88eed1a9a1ec843680756a24599" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum FilterType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed FilterType extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Routing.Configuration.FilterType" />
  <TypeSignature Language="VB.NET" Value="Public Enum FilterType" />
  <TypeSignature Language="C++ CLI" Value="public enum class FilterType" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Routing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
      <span data-ttu-id="000e3-101">Gibt den Typ des Filters an, der zum Weiterleiten von Meldungen verwendet werden soll.</span>
      <span class="sxs-lookup">
        <span data-stu-id="000e3-101">Specifies the type of filter to use when routing messages.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[crabout](~/includes/crabout-md.md)]<span data-ttu-id="000e3-102"> mithilfe von <xref:System.ServiceModel.Routing.Configuration.FilterType>, siehe <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>.</span><span class="sxs-lookup"><span data-stu-id="000e3-102"> using <xref:System.ServiceModel.Routing.Configuration.FilterType>, see <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="Action" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Routing.Configuration.FilterType Action = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Routing.Configuration.FilterType.Action" />
      <MemberSignature Language="VB.NET" Value="Action" />
      <MemberSignature Language="C++ CLI" Value="Action" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Routing.Configuration.FilterType</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="000e3-103">Verwenden Sie <see cref="T:System.ServiceModel.Dispatcher.ActionMessageFilter" />, um nach einer Aktion zu filtern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="000e3-103">Use <see cref="T:System.ServiceModel.Dispatcher.ActionMessageFilter" /> to filter on an action.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="And">
      <MemberSignature Language="C#" Value="And" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Routing.Configuration.FilterType And = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Routing.Configuration.FilterType.And" />
      <MemberSignature Language="VB.NET" Value="And" />
      <MemberSignature Language="C++ CLI" Value="And" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Routing.Configuration.FilterType</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="000e3-104">Verwenden Sie <see cref="T:System.ServiceModel.Dispatcher.StrictAndMessageFilter" />, um mit zwei Meldungsfiltern zu filtern, die über AND verknüpft sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="000e3-104">Use <see cref="T:System.ServiceModel.Dispatcher.StrictAndMessageFilter" /> to filter on two message filters, ANDed together.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Custom">
      <MemberSignature Language="C#" Value="Custom" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Routing.Configuration.FilterType Custom = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Routing.Configuration.FilterType.Custom" />
      <MemberSignature Language="VB.NET" Value="Custom" />
      <MemberSignature Language="C++ CLI" Value="Custom" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Routing.Configuration.FilterType</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="000e3-105">Verwenden Sie einen benutzerdefinierten Filter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="000e3-105">Use a user-defined filter.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="EndpointAddress">
      <MemberSignature Language="C#" Value="EndpointAddress" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Routing.Configuration.FilterType EndpointAddress = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Routing.Configuration.FilterType.EndpointAddress" />
      <MemberSignature Language="VB.NET" Value="EndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="EndpointAddress" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Routing.Configuration.FilterType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="000e3-106">Verwenden Sie den <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" />, und setzen Sie <see cref="P:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.IncludeHostNameInComparison" /> auf **FALSE**, um nach der Adresse zu filtern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="000e3-106">Use <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> with <see cref="P:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.IncludeHostNameInComparison" /> set to **false** to filter on the address.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="EndpointName">
      <MemberSignature Language="C#" Value="EndpointName" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Routing.Configuration.FilterType EndpointName = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Routing.Configuration.FilterType.EndpointName" />
      <MemberSignature Language="VB.NET" Value="EndpointName" />
      <MemberSignature Language="C++ CLI" Value="EndpointName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Routing.Configuration.FilterType</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="000e3-107">Verwenden Sie den <see cref="T:System.ServiceModel.Dispatcher.EndpointNameMessageFilter" />, um nach dem Namen des Dienstendpunkts zu filtern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="000e3-107">Use the <see cref="T:System.ServiceModel.Dispatcher.EndpointNameMessageFilter" /> to filter on the name of the service endpoint.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="MatchAll">
      <MemberSignature Language="C#" Value="MatchAll" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Routing.Configuration.FilterType MatchAll = int32(6)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Routing.Configuration.FilterType.MatchAll" />
      <MemberSignature Language="VB.NET" Value="MatchAll" />
      <MemberSignature Language="C++ CLI" Value="MatchAll" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Routing.Configuration.FilterType</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="000e3-108">Verwenden Sie den <see cref="T:System.ServiceModel.Dispatcher.MatchAllMessageFilter" />, um eine Entsprechung für alle Meldungen zu finden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="000e3-108">Use the <see cref="T:System.ServiceModel.Dispatcher.MatchAllMessageFilter" /> to match all messages.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="PrefixEndpointAddress">
      <MemberSignature Language="C#" Value="PrefixEndpointAddress" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Routing.Configuration.FilterType PrefixEndpointAddress = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Routing.Configuration.FilterType.PrefixEndpointAddress" />
      <MemberSignature Language="VB.NET" Value="PrefixEndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="PrefixEndpointAddress" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Routing.Configuration.FilterType</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="000e3-109">Verwenden Sie den <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" />, und setzen Sie <see cref="P:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison" /> auf **FALSE**, um anhand der längsten Präfixübereinstimmung nach der Adresse zu filtern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="000e3-109">Use <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> with <see cref="P:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison" /> set to **false** to filter on the address using longest prefix matching.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="XPath">
      <MemberSignature Language="C#" Value="XPath" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Routing.Configuration.FilterType XPath = int32(7)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Routing.Configuration.FilterType.XPath" />
      <MemberSignature Language="VB.NET" Value="XPath" />
      <MemberSignature Language="C++ CLI" Value="XPath" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Routing.Configuration.FilterType</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="000e3-110">Verwenden Sie den <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />, um nach einem XPath-Ausdruck zu filtern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="000e3-110">Use the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> to filter on an XPath expression.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>