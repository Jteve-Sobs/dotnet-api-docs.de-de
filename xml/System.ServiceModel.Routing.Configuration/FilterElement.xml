<Type Name="FilterElement" FullName="System.ServiceModel.Routing.Configuration.FilterElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a0f769a6994abf56ad41f246e06b07557f2593de" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69103786" /></Metadata><TypeSignature Language="C#" Value="public class FilterElement : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FilterElement extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Routing.Configuration.FilterElement" />
  <TypeSignature Language="VB.NET" Value="Public Class FilterElement&#xA;Inherits ConfigurationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class FilterElement : System::Configuration::ConfigurationElement" />
  <TypeSignature Language="F#" Value="type FilterElement = class&#xA;    inherit ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Routing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="3e48a-101">Stellt ein Konfigurationselement dar, das ein Filterelement definiert.</span><span class="sxs-lookup"><span data-stu-id="3e48a-101">Represents a configuration element that defines a filter element.</span></span> <span data-ttu-id="3e48a-102">Dieses Element wird zur Definition des Filtertyps sowie zusätzlicher Daten oder Parameter verwendet, die der Filter benötigt.</span><span class="sxs-lookup"><span data-stu-id="3e48a-102">This element is used to define the type of filter, as well as any supporting data or parameters required by the filter.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FilterElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Routing.Configuration.FilterElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FilterElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3e48a-103">Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Routing.Configuration.FilterElement" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="3e48a-103">Initializes a new instance of the <see cref="T:System.ServiceModel.Routing.Configuration.FilterElement" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomType">
      <MemberSignature Language="C#" Value="public string CustomType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CustomType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Routing.Configuration.FilterElement.CustomType" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CustomType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomType : string with get, set" Usage="System.ServiceModel.Routing.Configuration.FilterElement.CustomType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("customType", DefaultValue=Mono.Cecil.CustomAttributeArgument, Options=System.Configuration.ConfigurationPropertyOptions.None)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e48a-104">Ruft den vollqualifizierten Typnamen des benutzerdefinierten Typs ab, der als Filter verwendet werden soll, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="3e48a-104">Gets or sets the fully-qualified type name of the custom type to be used as a filter.</span></span></summary>
        <value><span data-ttu-id="3e48a-105">Der vollqualifizierte Typ.</span><span class="sxs-lookup"><span data-stu-id="3e48a-105">The fully-qualified type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e48a-106">Wenn für<xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterType%2A> ein benutzerdefinierter Typ festgelegt wurde, dann ist <xref:System.ServiceModel.Routing.Configuration.FilterElement.CustomType%2A> der vollqualifizierte Typname der zu erstellenden Klasse.</span><span class="sxs-lookup"><span data-stu-id="3e48a-106">If <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterType%2A> is set to custom, <xref:System.ServiceModel.Routing.Configuration.FilterElement.CustomType%2A> is the fully-qualified type name of the class to create.</span></span> <span data-ttu-id="3e48a-107"><xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A> kann auch Werte enthalten, die während der Auswertung des <xref:System.ServiceModel.Routing.Configuration.FilterElement.CustomType%2A>-Filters verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="3e48a-107"><xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A> can also contain values to be used during evaluation of the <xref:System.ServiceModel.Routing.Configuration.FilterElement.CustomType%2A> filter.</span></span> <span data-ttu-id="3e48a-108">Der <xref:System.ServiceModel.Routing.Configuration.FilterElement.CustomType%2A> muss einen Konstruktor implementieren, der einen Zeichenfolgenwert annimmt, der die <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>-Informationen enthält.</span><span class="sxs-lookup"><span data-stu-id="3e48a-108">The <xref:System.ServiceModel.Routing.Configuration.FilterElement.CustomType%2A> must implement a constructor that accepts a string value, which contains the <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A> information.</span></span>  
  
 <span data-ttu-id="3e48a-109">Weitere Informationen finden Sie unter <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>.</span><span class="sxs-lookup"><span data-stu-id="3e48a-109">For more information, see <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter1">
      <MemberSignature Language="C#" Value="public string Filter1 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Filter1" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Routing.Configuration.FilterElement.Filter1" />
      <MemberSignature Language="VB.NET" Value="Public Property Filter1 As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Filter1 { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Filter1 : string with get, set" Usage="System.ServiceModel.Routing.Configuration.FilterElement.Filter1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("filter1", DefaultValue=Mono.Cecil.CustomAttributeArgument, Options=System.Configuration.ConfigurationPropertyOptions.None)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e48a-110">Ruft die Filter1-Daten dieses Konfigurationselements ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="3e48a-110">Gets or sets the filter1 data of this configuration element.</span></span> <span data-ttu-id="3e48a-111">Dieser Wert wird nur verwendet, wenn <see cref="P:System.ServiceModel.Routing.Configuration.FilterElement.FilterType" /> auf "And" gesetzt wird.</span><span class="sxs-lookup"><span data-stu-id="3e48a-111">This value is only used when <see cref="P:System.ServiceModel.Routing.Configuration.FilterElement.FilterType" /> is set to And.</span></span></summary>
        <value><span data-ttu-id="3e48a-112">Der Filter1-Wert dieses Elements.</span><span class="sxs-lookup"><span data-stu-id="3e48a-112">The filter1 value of this element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e48a-113">Der Inhalt von <xref:System.ServiceModel.Routing.Configuration.FilterElement.Filter1%2A> wird nur während der Auswertung des AND-Filters verwendet.</span><span class="sxs-lookup"><span data-stu-id="3e48a-113">The content of <xref:System.ServiceModel.Routing.Configuration.FilterElement.Filter1%2A> is only used during evaluation of the AND filter.</span></span> <span data-ttu-id="3e48a-114">Weitere Informationen finden Sie unter <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>.</span><span class="sxs-lookup"><span data-stu-id="3e48a-114">For more information, see <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter2">
      <MemberSignature Language="C#" Value="public string Filter2 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Filter2" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Routing.Configuration.FilterElement.Filter2" />
      <MemberSignature Language="VB.NET" Value="Public Property Filter2 As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Filter2 { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Filter2 : string with get, set" Usage="System.ServiceModel.Routing.Configuration.FilterElement.Filter2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("filter2", DefaultValue=Mono.Cecil.CustomAttributeArgument, Options=System.Configuration.ConfigurationPropertyOptions.None)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e48a-115">Ruft die Filter2-Daten dieses Konfigurationselements ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="3e48a-115">Gets or sets the filter2 data of this configuration element.</span></span> <span data-ttu-id="3e48a-116">Dieser Wert wird nur verwendet, wenn <see cref="P:System.ServiceModel.Routing.Configuration.FilterElement.FilterType" /> auf "AND" gesetzt wird.</span><span class="sxs-lookup"><span data-stu-id="3e48a-116">This value is only used when <see cref="P:System.ServiceModel.Routing.Configuration.FilterElement.FilterType" /> is set to AND.</span></span></summary>
        <value><span data-ttu-id="3e48a-117">Der Filter2-Wert dieses Elements.</span><span class="sxs-lookup"><span data-stu-id="3e48a-117">The filter2 value of this element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e48a-118">Der Inhalt von <xref:System.ServiceModel.Routing.Configuration.FilterElement.Filter2%2A> wird nur während der Auswertung der AND-Filter verwendet.</span><span class="sxs-lookup"><span data-stu-id="3e48a-118">The content of <xref:System.ServiceModel.Routing.Configuration.FilterElement.Filter2%2A> is only used during evaluation of the AND filters.</span></span> <span data-ttu-id="3e48a-119">Weitere Informationen finden Sie unter <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>.</span><span class="sxs-lookup"><span data-stu-id="3e48a-119">For more information, see <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterData">
      <MemberSignature Language="C#" Value="public string FilterData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterData" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Routing.Configuration.FilterElement.FilterData" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterData As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterData { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FilterData : string with get, set" Usage="System.ServiceModel.Routing.Configuration.FilterElement.FilterData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("filterData", DefaultValue=Mono.Cecil.CustomAttributeArgument, Options=System.Configuration.ConfigurationPropertyOptions.None)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e48a-120">Ruft die Filterdaten dieses Konfigurationselements ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="3e48a-120">Gets or sets the filter data of this configuration element.</span></span></summary>
        <value><span data-ttu-id="3e48a-121">Die Filterdaten dieses Elements.</span><span class="sxs-lookup"><span data-stu-id="3e48a-121">The filter data of this element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e48a-122">In der folgenden Tabelle wird die Bedeutung der <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>, basierend auf dem Wert für <xref:System.ServiceModel.Routing.Configuration.FilterType>, beschrieben.</span><span class="sxs-lookup"><span data-stu-id="3e48a-122">The following table describes the meaning of <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A> based on the value of <xref:System.ServiceModel.Routing.Configuration.FilterType>.</span></span>  
  
|<span data-ttu-id="3e48a-123">Filtertyp</span><span class="sxs-lookup"><span data-stu-id="3e48a-123">Filter  Type</span></span>|<span data-ttu-id="3e48a-124">Beschreibung</span><span class="sxs-lookup"><span data-stu-id="3e48a-124">Description</span></span>|<span data-ttu-id="3e48a-125">Bedeutung der Filterdaten</span><span class="sxs-lookup"><span data-stu-id="3e48a-125">Filter Data Meaning</span></span>|<span data-ttu-id="3e48a-126">Beispielfilter</span><span class="sxs-lookup"><span data-stu-id="3e48a-126">Example Filter</span></span>|  
|------------------|-----------------|-------------------------|--------------------|  
|<span data-ttu-id="3e48a-127">Aktion</span><span class="sxs-lookup"><span data-stu-id="3e48a-127">Action</span></span>|<span data-ttu-id="3e48a-128">Verwendet den ActionMessageFilter, der in WCF enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="3e48a-128">Uses the ActionMessageFilter that comes with WCF.</span></span>|<span data-ttu-id="3e48a-129">Die Aktion, nach der gefiltert werden soll.</span><span class="sxs-lookup"><span data-stu-id="3e48a-129">The Action to filter upon.</span></span>|`<filter name="action1" filterType="Action" filterData="http://ACTION" />`|  
|<span data-ttu-id="3e48a-130">Adresse</span><span class="sxs-lookup"><span data-stu-id="3e48a-130">Address</span></span>|<span data-ttu-id="3e48a-131">Verwendet den EndpointAddressMessageFilter, der in WCF enthalten ist, wobei " ignore host name" == true.</span><span class="sxs-lookup"><span data-stu-id="3e48a-131">Uses the EndpointAddressMessageFilter that comes with WCF with ignore host name == true.</span></span>|<span data-ttu-id="3e48a-132">Die Adresse, nach der gefiltert werden soll (im To-Header).</span><span class="sxs-lookup"><span data-stu-id="3e48a-132">The address to filter upon (in the To header).</span></span>|`<filter name="address1" filterType="Address" filterData="http://host/vdir/s.svc/b" />`|  
|<span data-ttu-id="3e48a-133">AddressPrefix</span><span class="sxs-lookup"><span data-stu-id="3e48a-133">AddressPrefix</span></span>|<span data-ttu-id="3e48a-134">Verwendet den PrefixEndpointAddressMessageFilter, der in WCF enthalten ist, wobei " ignore host name" == true.</span><span class="sxs-lookup"><span data-stu-id="3e48a-134">Uses the PrefixEndpointAddressMessageFilter that comes with WCF with ignore host name == true.</span></span>|<span data-ttu-id="3e48a-135">Die Adresse, nach der unter Verwendung der längsten Präfixübereinstimmung gefiltert werden soll.</span><span class="sxs-lookup"><span data-stu-id="3e48a-135">The address to filter upon using longest prefix matching.</span></span>|`<filter name="prefix1" filterType="AddressPrefix" filterData="http://host" />`|  
|<span data-ttu-id="3e48a-136">StrictAnd</span><span class="sxs-lookup"><span data-stu-id="3e48a-136">StrictAnd</span></span>|<span data-ttu-id="3e48a-137">Ein benutzerdefinierter AndMessageFilter, der vor der Rückgabe stets beide Bedingungen auswertet.</span><span class="sxs-lookup"><span data-stu-id="3e48a-137">A custom AndMessageFilter that always evaluates both conditions before returning.</span></span>|<span data-ttu-id="3e48a-138">"filterData" wird nicht verwendet. Stattdessen verfügen "filter1" und "filter2" über die Namen der entsprechenden Meldungsfilter (ebenfalls in der Tabelle), die per AND verbunden sein sollten.</span><span class="sxs-lookup"><span data-stu-id="3e48a-138">filterData is not used, instead filter1 and filter2 have the names of the corresponding messages filters (also in the table), which should be ANDed together.</span></span>|`<filter name="and1" filterType="And" filter1="address1" filter2="action1" />`|  
|<span data-ttu-id="3e48a-139">Benutzerdefiniert</span><span class="sxs-lookup"><span data-stu-id="3e48a-139">Custom</span></span>|<span data-ttu-id="3e48a-140">Ein benutzerdefinierter Typ, der den MessageFilter erweitert und über einen Konstruktor verfügt, der eine Zeichenfolge verwendet.</span><span class="sxs-lookup"><span data-stu-id="3e48a-140">A user-defined type that extends MessageFilter and has a constructor taking a string.</span></span>|<span data-ttu-id="3e48a-141">Das Attribut "customType" ist der vollqualifizierte Typname der zu erstellenden Klasse. "filterData" ist die Zeichenfolge, die beim Erstellen des Filters an den Konstruktor übergeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="3e48a-141">customType attribute is the fully-qualified type name of the class to create, filterData is the string to pass to the constructor when creating the filter.</span></span>|`<filter name="custom1" filterType="Custom" customType="CustomAssembly.CustomMsgFilter, CustomAssembly" filterData="Custom Data" />`|  
|<span data-ttu-id="3e48a-142">EndpointName</span><span class="sxs-lookup"><span data-stu-id="3e48a-142">EndpointName</span></span>|<span data-ttu-id="3e48a-143">Ein benutzerdefinierter Meldungsfilter zur Verwendung einzig und allein im Routingdienst, der Meldungen auf Grundlage des Namens des Dienstendpunkts filtert.</span><span class="sxs-lookup"><span data-stu-id="3e48a-143">A custom message filter for use solely in the Routing Service, which filters messages based on the name of the service endpoint.</span></span>|<span data-ttu-id="3e48a-144">Der Name des Dienst Endpunkts, z. b.: "serviceEndpoint1".</span><span class="sxs-lookup"><span data-stu-id="3e48a-144">The name of the service endpoint, for example: "serviceEndpoint1".</span></span>  <span data-ttu-id="3e48a-145">Hierbei sollte es sich um einen der Endpunkte handeln, die vom Routingdienst verfügbar gemacht werden.</span><span class="sxs-lookup"><span data-stu-id="3e48a-145">This should be one of the endpoints exposed on the Routing Service.</span></span>|`<filter name="stock1" filterType="Endpoint" filterData="SvcEndpoint" />`|  
|<span data-ttu-id="3e48a-146">MatchAll</span><span class="sxs-lookup"><span data-stu-id="3e48a-146">MatchAll</span></span>|<span data-ttu-id="3e48a-147">Verwendet den MatchAllMessageFilter, der in WCF enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="3e48a-147">Uses the MatchAllMessageFilter that comes with WCF.</span></span>|<span data-ttu-id="3e48a-148">Nicht zutreffend</span><span class="sxs-lookup"><span data-stu-id="3e48a-148">N/A</span></span>|`<filter name="matchAll1" filterType="MatchAll" />`|  
|<span data-ttu-id="3e48a-149">XPath</span><span class="sxs-lookup"><span data-stu-id="3e48a-149">XPath</span></span>|<span data-ttu-id="3e48a-150">Verwendet den XPathMessageFilter, der in WCF enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="3e48a-150">Uses the XPathMessageFilter that comes with WCF.</span></span>|<span data-ttu-id="3e48a-151">Die XPath-Abfrage, die beim Ermitteln von Übereinstimmungen für Nachrichten verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="3e48a-151">The XPath query to use when matching messages.</span></span>|`<filter name="XPath1" filterType="XPath" filterData="//ns:element" />`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterType">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Routing.Configuration.FilterType FilterType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.Routing.Configuration.FilterType FilterType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Routing.Configuration.FilterElement.FilterType" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterType As FilterType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Routing::Configuration::FilterType FilterType { System::ServiceModel::Routing::Configuration::FilterType get(); void set(System::ServiceModel::Routing::Configuration::FilterType value); };" />
      <MemberSignature Language="F#" Value="member this.FilterType : System.ServiceModel.Routing.Configuration.FilterType with get, set" Usage="System.ServiceModel.Routing.Configuration.FilterElement.FilterType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("filterType", DefaultValue=Mono.Cecil.CustomAttributeArgument, Options=System.Configuration.ConfigurationPropertyOptions.IsRequired)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Routing.Configuration.FilterType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e48a-152">Ruft den <see cref="T:System.ServiceModel.Routing.Configuration.FilterType" /> dieses Konfigurationselements ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="3e48a-152">Gets or sets the <see cref="T:System.ServiceModel.Routing.Configuration.FilterType" /> of this configuration element.</span></span></summary>
        <value><span data-ttu-id="3e48a-153">Der Filtertyp dieses Elements.</span><span class="sxs-lookup"><span data-stu-id="3e48a-153">The filter type of this element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Routing.Configuration.FilterElement.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.ServiceModel.Routing.Configuration.FilterElement.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("name", DefaultValue=Mono.Cecil.CustomAttributeArgument, Options=System.Configuration.ConfigurationPropertyOptions.IsRequired | System.Configuration.ConfigurationPropertyOptions.IsKey)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e48a-154">Ruft den Namen dieses Konfigurationselements ab oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="3e48a-154">Gets or sets the name of this configuration element.</span></span></summary>
        <value><span data-ttu-id="3e48a-155">Der eindeutige Name dieses Konfigurationselements.</span><span class="sxs-lookup"><span data-stu-id="3e48a-155">The unique name of this configuration element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
