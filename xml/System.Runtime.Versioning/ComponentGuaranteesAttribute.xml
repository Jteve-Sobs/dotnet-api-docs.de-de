<Type Name="ComponentGuaranteesAttribute" FullName="System.Runtime.Versioning.ComponentGuaranteesAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ffd93eeacc9694f90ac9359eefcd6b72d3d67190" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75082505" /></Metadata><TypeSignature Language="C#" Value="public sealed class ComponentGuaranteesAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ComponentGuaranteesAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Versioning.ComponentGuaranteesAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ComponentGuaranteesAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComponentGuaranteesAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ComponentGuaranteesAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;netstandard-2.1;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Constructor | System.AttributeTargets.Delegate | System.AttributeTargets.Enum | System.AttributeTargets.Event | System.AttributeTargets.Interface | System.AttributeTargets.Method | System.AttributeTargets.Module | System.AttributeTargets.Property | System.AttributeTargets.Struct, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definiert die Kompatibilitätsgarantie einer Komponente, eines Typs oder eines Typmembers, die bzw. der mehrere Versionen umfassen kann.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> wird von Entwicklern von Komponenten und Klassenbibliotheken verwendet, um den Grad der Kompatibilität anzugeben, den Consumer Ihrer Bibliotheken in mehreren Versionen erwarten können. Gibt den Grad der Garantie an, dass eine zukünftige Version der Bibliothek oder Komponente einen vorhandenen Client nicht unterbricht. Clients können dann die <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> als Unterstützung beim Entwerfen Ihrer eigenen Schnittstellen verwenden, um die Stabilität zwischen verschiedenen Versionen zu gewährleisten.  
  
> [!NOTE]
>  Der Common Language Runtime (CLR) verwendet dieses Attribut in keiner Weise. Der Wert liegt darin, dass die Absicht des Komponenten Autors formal dokumentiert wird. Kompilierzeit Tools können diese Deklarationen auch verwenden, um Kompilierzeitfehler zu erkennen, die andernfalls die deklarierte Garantie unterbrechen würden.  
  
## <a name="levels-of-compatibility"></a>Kompatibilitäts Grade  
 Der <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> unterstützt die folgenden Kompatibilitäts Grade, die von Membern der <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>-Enumeration dargestellt werden:  
  
-   Keine Versions-zu-Version-Kompatibilität (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None?displayProperty=nameWithType>). Der Client kann davon ausgehen, dass zukünftige Versionen den vorhandenen Client unterbrechen. Weitere Informationen finden Sie im Abschnitt [keine Kompatibilität](#None) weiter unten in diesem Thema.  
  
-   Seite-an-Version-Kompatibilität (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide?displayProperty=nameWithType>). Die Komponente wurde so getestet, dass Sie funktioniert, wenn mehr als eine Version der Assembly in derselben Anwendungsdomäne geladen wird. Im Allgemeinen kann die Kompatibilität in zukünftigen Versionen unterbrechen. Wenn jedoch wichtige Änderungen vorgenommen werden, wird die alte Version nicht geändert, aber neben der neuen Version vorhanden. Die parallele Ausführung ist die erwartete Methode, damit vorhandene Clients funktionieren, wenn wichtige Änderungen vorgenommen werden. Weitere Informationen finden Sie im Abschnitt parallele [Kompatibilität](#SideBySide) weiter unten in diesem Thema.  
  
-   Stabile Versions-zu-Version-Kompatibilität (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable?displayProperty=nameWithType>). Zukünftige Versionen sollten den Client nicht unterbrechen, und eine parallele Ausführung sollte nicht benötigt werden. Wenn der Client jedoch versehentlich beschädigt ist, kann die parallele Ausführung verwendet werden, um das Problem zu beheben. Weitere Informationen finden Sie im Abschnitt [stabile Kompatibilität](#Standard) .  
  
-   Exchange-Version-zu-Version-Kompatibilität (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange?displayProperty=nameWithType>). Es wird außerordentlich Sorgfalt geboten, um sicherzustellen, dass zukünftige Versionen den Client nicht unterbrechen. Der Client sollte nur diese Typen in der Signatur von Schnittstellen verwenden, die für die Kommunikation mit anderen Assemblys verwendet werden, die unabhängig voneinander bereitgestellt werden. Es wird davon ausgegangen, dass sich nur eine Version dieser Typen in einer bestimmten Anwendungsdomäne befindet. Dies bedeutet, dass die parallele Ausführung das Kompatibilitätsproblem nicht beheben kann, wenn ein Client unterbrochen wird. Weitere Informationen finden Sie im Abschnitt [Exchange-Typkompatibilität](#Exchange) .  
  
 In den folgenden Abschnitten wird jede Ebene der Garantie ausführlicher erläutert.  
  
<a name="None"></a>   
### <a name="no-compatibility"></a>Keine Kompatibilität  
 Durch das Markieren einer Komponente als <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None?displayProperty=nameWithType> wird angegeben, dass der Anbieter keine Garantie bezüglich der Kompatibilität hat. Clients sollten keine Abhängigkeiten von den verfügbar gemachten Schnittstellen berücksichtigen. Diese Kompatibilitäts Stufe eignet sich für Typen, die experimentell sind oder öffentlich verfügbar gemacht werden, aber nur für Komponenten vorgesehen sind, die immer gleichzeitig aktualisiert werden. <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None> explizit angibt, dass diese Komponente von externen Komponenten nicht verwendet werden soll.  
  
<a name="SideBySide"></a>   
### <a name="side-by-side-compatibility"></a>Seite-an-Seite-Kompatibilität  
 Das Markieren einer Komponente als <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide?displayProperty=nameWithType> gibt an, dass die Komponente so getestet wurde, dass Sie funktioniert, wenn mehrere Versionen der Assembly in dieselbe Anwendungsdomäne geladen werden. Wichtige Änderungen sind zulässig, solange Sie an der Assembly vorgenommen werden, die über die höhere Versionsnummer verfügt. Komponenten, die an eine alte Version der Assembly gebunden sind, werden voraussichtlich weiterhin an die alte Version gebunden, und andere Komponenten können an die neue Version gebunden werden. Es ist auch möglich, eine Komponente zu aktualisieren, die als <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide> deklariert ist, indem Sie die alte Version debugdend ändert.  
  
<a name="Standard"></a>   
### <a name="stable-compatibility"></a>Stabile Kompatibilität  
 Das Markieren eines Typs als <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable?displayProperty=nameWithType> gibt an, dass der Typ über mehrere Versionen hinweg stabil bleiben soll. Allerdings kann es auch vorkommen, dass eine parallele Version eines stabilen Typs in derselben Anwendungsdomäne vorhanden ist.  
  
 Stabile Typen behalten eine hohe binäre Kompatibilitäts Leiste bei. Aus diesem Grund sollten Anbieter keine wichtigen Änderungen an stabilen Typen vornehmen. Die folgenden Arten von Änderungen sind akzeptabel:  
  
-   Hinzufügen von privaten Instanzfeldern oder Entfernen von Feldern aus einem Typ, solange das Serialisierungsformat dadurch nicht unterbricht wird.  
  
-   Ändern eines nicht serialisierbaren Typs in einen serialisierbaren Typ. (Ein serialisierbarer Typ kann jedoch nicht in einen Typ geändert werden, der nicht serialisierbar ist.)  
  
-   Auslösen neuer, stärker abgeleiteter Ausnahmen aus einer Methode.  
  
-   Verbessern der Leistung einer Methode.  
  
-   Ändern des Bereichs von Rückgabe Werten, solange sich die Änderung nicht negativ auf die Mehrzahl der Clients auswirkt.  
  
-   Korrektur schwerwiegender Fehler, wenn die geschäftliche Begründung hoch ist und die Anzahl der betroffenen Clients gering ist.  
  
 Da bei neuen Versionen stabiler Komponenten die Ausführung vorhandener Clients nicht zu erwarten ist, ist in der Regel nur eine Version einer stabilen Komponente in einer Anwendungsdomäne erforderlich. Dies ist jedoch nicht zwingend erforderlich, da stabile Typen nicht als bekannte Austausch Typen verwendet werden, denen alle Komponenten zustimmen. Wenn eine neue Version einer stabilen Komponente eine Komponente versehentlich unterbricht und andere Komponenten die neue Version benötigen, kann das Problem möglicherweise behoben werden, indem sowohl die alte als auch die neue Komponente geladen werden.  
  
 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> bietet eine stärkere Versions Kompatibilitäts Garantie als <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None>. Dies ist ein gängiger Standardwert für Komponenten mit mehreren Versionen.  
  
 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> können mit <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide>kombiniert werden, was besagt, dass die Komponente die Kompatibilität nicht unterbricht, sondern getestet wird, wenn mehrere Versionen in eine bestimmte Anwendungsdomäne geladen werden.  
  
 Nachdem ein Typ oder eine Methode als <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable>gekennzeichnet wurde, kann er auf <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange>aktualisiert werden. Sie kann jedoch nicht auf <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None>herabgestuft werden.  
  
<a name="Exchange"></a>   
### <a name="exchange-type-compatibility"></a>Exchange-Typkompatibilität  
 Das Markieren eines Typs als <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange?displayProperty=nameWithType> bietet eine stärkere Versions Kompatibilitäts Garantie als <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable>und sollte auf die stabilsten aller Typen angewendet werden. Diese Typen sind für den Austausch zwischen unabhängig erstellten Komponenten über alle Komponenten Grenzen hinweg in beiden Zeiträumen (beliebige Version der CLR oder einer beliebigen Version einer Komponente oder Anwendung) und Speicherplatz (Prozess übergreifend, Cross-CLR in einem Prozess) vorgesehen. Anwendungsübergreifende Domäne in einer CLR). Wenn ein Breaking Change an einem Austauschtyp vorgenommen wird, ist es nicht möglich, das Problem zu beheben, indem mehrere Versionen des Typs geladen werden.  
  
 Exchange-Typen sollten nur geändert werden, wenn ein Problem sehr schwerwiegend ist (z. b. ein schwerwiegendes Sicherheitsproblem) oder die Wahrscheinlichkeit eines Bruchs sehr gering ist (d. h., wenn das Verhalten bereits auf zufällige Weise unterbrochen wurde, dass der Code keine Abhängigkeit von dem Code durchführen konnte). Sie können die folgenden Arten von Änderungen an einem Austauschtyp vornehmen:  
  
-   Fügen Sie Vererbung von neuen Schnittstellendefinitionen hinzu.  
  
-   Fügen Sie neue private Methoden hinzu, mit denen die Methoden neu geerbte Schnittstellendefinitionen implementiert werden.  
  
-   Fügen Sie neue statische Felder hinzu.  
  
-   Fügen Sie neue statische Methoden hinzu.  
  
-   Fügen Sie neue nicht virtuelle Instanzmethoden hinzu.  
  
 Folgendes gilt als wichtige Änderungen, die für primitive Typen nicht zulässig sind:  
  
-   Ändern der Serialisierungsformate. Versions tolerante Serialisierung ist erforderlich.  
  
-   Hinzufügen oder Entfernen von privaten Instanzfeldern. Dies birgt das Risiko, das Serialisierungsformat des Typs zu ändern und Client Code zu unterbrechen, der Reflektion verwendet  
  
-   Ändern der Serialisierbarkeit eines Typs. Ein nicht serialisierbarer Typ kann nicht serialisierbar gemacht werden und umgekehrt.  
  
-   Auslösen verschiedener Ausnahmen von einer Methode.  
  
-   Ändern des Bereichs der Rückgabewerte einer Methode, es sei denn, die Element Definition löst diese Möglichkeit aus und gibt eindeutig an, wie Clients unbekannte Werte verarbeiten sollten.  
  
-   Die meisten Fehler werden behoben. Consumer des Typs verlassen sich auf das vorhandene Verhalten.  
  
 Nachdem eine Komponente, ein Typ oder ein Member mit der <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange> Garantie gekennzeichnet wurde, kann Sie weder in <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> noch in <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None>geändert werden.  
  
 In der Regel sind Exchange-Typen die grundlegenden Typen (z. b. <xref:System.Int32> und <xref:System.String> im .NET Framework) und Schnittstellen (z. b. <xref:System.Collections.Generic.IList%601>, <xref:System.Collections.Generic.IEnumerable%601>und <xref:System.IComparable%601>), die häufig in öffentlichen Schnittstellen verwendet werden.  
  
 Exchange-Typen können öffentlich nur andere Typen verfügbar machen, die ebenfalls mit <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange> Kompatibilität gekennzeichnet sind. Außerdem können Exchange-Typen nicht vom Verhalten von Windows-APIs abhängen, die geändert werden können.  
  
## <a name="component-guarantees-a-summary"></a>Komponenten Garantien: eine Zusammenfassung  
 In der folgenden Tabelle wird angegeben, wie sich die Merkmale und die Verwendung einer Komponente auf die Kompatibilitäts Garantie auswirken.  
  
|Komponenten Merkmale|Exchange|Stable|Seite-an-Seite|Keine|  
|-------------------------------|--------------|------------|--------------------|----------|  
|Kann in Schnittstellen zwischen Komponenten verwendet werden, die unabhängig voneinander verwendet werden.|Y|N|N|N|  
|Kann (privat) von einer Assembly verwendet werden, die unabhängig voneinander verwendet wird.|Y|Y|Y|N|  
|In einer einzelnen Anwendungsdomäne können mehrere Versionen vorhanden sein.|N|Y|Y|Y|  
|Kann wichtige Änderungen vornehmen|N|N|Y|Y|  
|Getestet, um zu gewährleisten, dass bestimmte Versionen der Assembly gleichzeitig geladen werden können.|N|N|Y|N|  
|Können wichtige Änderungen vornehmen.|N|N|N|Y|  
|Kann sehr sichere, nicht unterbrechende Wartungs Änderungen vornehmen.|Y|Y|Y|Y|  
  
## <a name="applying-the-attribute"></a>Anwenden des Attributs  
 Sie können den <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> auf eine Assembly, einen Typ oder einen Typmember anwenden. Die Anwendung ist hierarchisch. Standardmäßig definiert die durch die <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A>-Eigenschaft des Attributs auf Assemblyebene definierte Garantie die Garantie aller Typen in der Assembly und aller Member in diesen Typen. Ebenso gilt: Wenn die Garantie auf den Typ angewendet wird, gilt sie standardmäßig auch für jeden Member des Typs.  
  
 Diese geerbte Garantie kann überschrieben werden, indem der <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> auf einzelne Typen und Typmember angewendet wird. Garantien, die den Standardwert überschreiben, können jedoch nur die Garantie Schwächen. Diese können nicht verstärkt werden. Wenn eine Assembly z. b. mit der <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None>-Garantie gekennzeichnet ist, haben deren Typen und Member keine Kompatibilitäts Garantie, und jede andere Garantie, die auf Typen oder Member in der Assembly angewendet wird, wird ignoriert.  
  
## <a name="testing-the-guarantee"></a>Testen der Garantie  
 Die <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A>-Eigenschaft gibt einen Member der <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>-Enumeration zurück, der mit dem <xref:System.FlagsAttribute>-Attribut markiert ist. Dies bedeutet, dass Sie auf das Flag testen sollten, an dem Sie interessiert sind, indem Sie potenziell unbekannte Flags maskieren. Im folgenden Beispiel wird z. b. getestet, ob ein Typ als <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable>gekennzeichnet ist.  
  
 [!code-csharp[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/cs/apply1.cs#1)]
 [!code-vb[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/vb/apply1.vb#1)]  
  
 Im folgenden Beispiel wird getestet, ob ein Typ als <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> oder <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange>markiert ist.  
  
 [!code-csharp[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/cs/apply1.cs#2)]
 [!code-vb[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/vb/apply1.vb#2)]  
  
 Im folgenden Beispiel wird getestet, ob ein Typ als <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None> gekennzeichnet ist (d. h. weder <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> noch <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange>).  
  
 [!code-csharp[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/cs/apply1.cs#3)]
 [!code-vb[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/vb/apply1.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Versioning.ComponentGuaranteesOptions" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComponentGuaranteesAttribute (System.Runtime.Versioning.ComponentGuaranteesOptions guarantees);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Runtime.Versioning.ComponentGuaranteesOptions guarantees) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Versioning.ComponentGuaranteesAttribute.#ctor(System.Runtime.Versioning.ComponentGuaranteesOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (guarantees As ComponentGuaranteesOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComponentGuaranteesAttribute(System::Runtime::Versioning::ComponentGuaranteesOptions guarantees);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Versioning.ComponentGuaranteesAttribute : System.Runtime.Versioning.ComponentGuaranteesOptions -&gt; System.Runtime.Versioning.ComponentGuaranteesAttribute" Usage="new System.Runtime.Versioning.ComponentGuaranteesAttribute guarantees" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="guarantees" Type="System.Runtime.Versioning.ComponentGuaranteesOptions" />
      </Parameters>
      <Docs>
        <param name="guarantees">Einer der Enumerationswerte, der die Ebene der Kompatibilität angibt, die über mehrere Versionen garantiert wird.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Versioning.ComponentGuaranteesAttribute" />-Klasse mit einem Wert, der den garantierten Kompatibilitätsgrad einer Bibliothek, eines Typs oder eines Members über mehrere Versionen angibt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute>-Klasse instanziiert wird, wird der Wert des `guarantees`-Parameters der <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A>-Eigenschaft zugewiesen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Guarantees">
      <MemberSignature Language="C#" Value="public System.Runtime.Versioning.ComponentGuaranteesOptions Guarantees { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Versioning.ComponentGuaranteesOptions Guarantees" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Guarantees As ComponentGuaranteesOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Versioning::ComponentGuaranteesOptions Guarantees { System::Runtime::Versioning::ComponentGuaranteesOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.Guarantees : System.Runtime.Versioning.ComponentGuaranteesOptions" Usage="System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Versioning.ComponentGuaranteesOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der den garantierten Kompatibilitätsgrad einer Bibliothek, eines Typs oder Typmembers angibt, die bzw. der mehrere Versionen umfasst.</summary>
        <value>Einer der Enumerationswerte, der die Ebene der Kompatibilität angibt, die über mehrere Versionen garantiert wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert der <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A>-Eigenschaft entspricht dem `guarantees`-Parameter des <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.%23ctor%2A>-Konstruktors.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
