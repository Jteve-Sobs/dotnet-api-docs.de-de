<Type Name="Timer" FullName="System.Timers.Timer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="164608ed635298d746615cf7b58686e703eba38d" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69143468" /></Metadata><TypeSignature Language="C#" Value="public class Timer : System.ComponentModel.Component, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Timer extends System.ComponentModel.Component implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Timers.Timer" />
  <TypeSignature Language="VB.NET" Value="Public Class Timer&#xA;Inherits Component&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class Timer : System::ComponentModel::Component, System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type Timer = class&#xA;    inherit Component&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-3.0;netstandard-2.1">
      <AttributeName>System.ComponentModel.DefaultEvent("Elapsed")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-3.0;netstandard-2.1">
      <AttributeName>System.ComponentModel.DefaultProperty("Interval")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c546e-101">Generiert nach Ablauf eines festgelegten Intervalls ein Ereignis. Bietet auch die Option zum Generieren wiederkehrender Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="c546e-101">Generates an event after a set interval, with an option to generate recurring events.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c546e-102">Die <xref:System.Timers.Timer>-Komponente ist ein serverbasierter Timer, der nach Verstreichen der in der <xref:System.Timers.Timer.Interval%2A>-Eigenschaft angegebenen Zeit (in Millisekunden) ein <xref:System.Timers.Timer.Elapsed>-Ereignis in Ihrer Anwendung auslöst.</span><span class="sxs-lookup"><span data-stu-id="c546e-102">The <xref:System.Timers.Timer> component is a server-based timer that raises an <xref:System.Timers.Timer.Elapsed> event in your application after the number of milliseconds in the <xref:System.Timers.Timer.Interval%2A> property has elapsed.</span></span> <span data-ttu-id="c546e-103">Sie können das <xref:System.Timers.Timer>-Objekt mit der <xref:System.Timers.Timer.AutoReset%2A>-Eigenschaft so konfigurieren, dass es das Ereignis nur einmal oder wiederholt auslöst.</span><span class="sxs-lookup"><span data-stu-id="c546e-103">You can configure the <xref:System.Timers.Timer> object to raise the event just once or repeatedly using the <xref:System.Timers.Timer.AutoReset%2A> property.</span></span> <span data-ttu-id="c546e-104">Normalerweise wird ein <xref:System.Timers.Timer>-Objekt so auf Klassenebene deklariert, dass es im Gültigkeitsbereich verbleibt, solange es benötigt wird.</span><span class="sxs-lookup"><span data-stu-id="c546e-104">Typically, a <xref:System.Timers.Timer> object is declared at the class level so that it stays in scope as long as it is needed.</span></span> <span data-ttu-id="c546e-105">Sie können das zugehörige <xref:System.Timers.Timer.Elapsed>-Ereignis dann behandeln, um eine zyklische Verarbeitung zu ermöglichen.</span><span class="sxs-lookup"><span data-stu-id="c546e-105">You can then handle its <xref:System.Timers.Timer.Elapsed> event to provide regular processing.</span></span> <span data-ttu-id="c546e-106">Nehmen wir beispielsweise an, Sie haben einen kritischen Server, der rund um die Uhr in Betrieb gehalten werden muss.</span><span class="sxs-lookup"><span data-stu-id="c546e-106">For example, suppose you have a critical server that must be kept running 24 hours a day, 7 days a week.</span></span> <span data-ttu-id="c546e-107">Hierfür könnten Sie einen Dienst erstellen, der den Server mithilfe eines <xref:System.Timers.Timer>-Objekts in regelmäßigen Abständen periodisch überprüft und sicherstellt, dass das System fehlerfrei ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="c546e-107">You could create a service that uses a <xref:System.Timers.Timer> object to periodically check the server and ensure that the system is up and running.</span></span> <span data-ttu-id="c546e-108">Falls das System nicht reagiert, könnte der Dienst versuchen, den Server neu zu starten, oder einen Administrator benachrichtigen.</span><span class="sxs-lookup"><span data-stu-id="c546e-108">If the system is not responding, the service could attempt to restart the server or notify an administrator.</span></span>  
  
> [!IMPORTANT]
> <span data-ttu-id="c546e-109">Die <xref:System.Timers.Timer>-Klasse ist nicht für alle .NET-Implementierungen und -Versionen verfügbar, beispielsweise nicht für .NET Standard 1.6 und älter.</span><span class="sxs-lookup"><span data-stu-id="c546e-109">The <xref:System.Timers.Timer> class is not available for all .NET implementations and versions, such as .NET Standard 1.6 and lower versions.</span></span>
> <span data-ttu-id="c546e-110">In diesen Fällen können Sie stattdessen die <xref:System.Threading.Timer?displayProperty=nameWithType>-Klasse verwenden.</span><span class="sxs-lookup"><span data-stu-id="c546e-110">In these cases, you can use the <xref:System.Threading.Timer?displayProperty=nameWithType> class instead.</span></span>
  
 <span data-ttu-id="c546e-111">Dieser Typ implementiert die <xref:System.IDisposable>-Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="c546e-111">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="c546e-112">Nach Abschluss der Verwendung sollten Sie den Typ entweder direkt oder indirekt löschen.</span><span class="sxs-lookup"><span data-stu-id="c546e-112">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="c546e-113">Zum direkten Löschen des Typs rufen Sie seine <xref:System.IDisposable.Dispose%2A>-Methode in einem `try`/`catch`-Block auf.</span><span class="sxs-lookup"><span data-stu-id="c546e-113">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="c546e-114">Zum indirekten Löschen verwenden Sie ein Sprachkonstrukt wie `using` (in C#) oder `Using` (in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="c546e-114">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="c546e-115">Weitere Informationen finden Sie im Abschnitt „Verwenden eines Objekts, das IDisposable implementiert“ des Themas „Die <xref:System.IDisposable>-Schnittstelle“.</span><span class="sxs-lookup"><span data-stu-id="c546e-115">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="c546e-116">Die serverbasierte <xref:System.Timers.Timer?displayProperty=nameWithType>-Klasse ist für die Verwendung mit Workerthreads in einer Multithreadumgebung konzipiert.</span><span class="sxs-lookup"><span data-stu-id="c546e-116">The server-based <xref:System.Timers.Timer?displayProperty=nameWithType> class is designed for use with worker threads in a multithreaded environment.</span></span> <span data-ttu-id="c546e-117">Servertimer können threadübergreifend eingesetzt werden, um das ausgelöste <xref:System.Timers.Timer.Elapsed>-Ereignis zu behandeln. Hierdurch wird eine im Vergleich zu Windows-Timern größere Genauigkeit beim rechtzeitigen Auslösen des Ereignisses erzielt.</span><span class="sxs-lookup"><span data-stu-id="c546e-117">Server timers can move among threads to handle the raised <xref:System.Timers.Timer.Elapsed> event, resulting in more accuracy than Windows timers in raising the event on time.</span></span>  
  
 <span data-ttu-id="c546e-118">Die <xref:System.Timers.Timer?displayProperty=nameWithType>-Komponente löst basierend auf dem Wert der Eigenschaft <xref:System.Timers.Timer.Interval%2A> (in Millisekunden) das <xref:System.Timers.Timer.Elapsed>-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="c546e-118">The <xref:System.Timers.Timer?displayProperty=nameWithType> component raises the <xref:System.Timers.Timer.Elapsed> event, based on the value (in milliseconds) of the <xref:System.Timers.Timer.Interval%2A> property.</span></span> <span data-ttu-id="c546e-119">Sie können dieses Ereignis behandeln, um die erforderliche Verarbeitung durchzuführen.</span><span class="sxs-lookup"><span data-stu-id="c546e-119">You can handle this event to perform the processing you need.</span></span> <span data-ttu-id="c546e-120">Angenommen, Sie haben eine Anwendung für den Onlinevertrieb entwickelt, die fortlaufend Kundenaufträge an eine Datenbank sendet.</span><span class="sxs-lookup"><span data-stu-id="c546e-120">For example, suppose that you have an online sales application that continuously posts sales orders to a database.</span></span> <span data-ttu-id="c546e-121">Der Dienst, der die Versandanweisungen zusammenstellt, bearbeitet immer mehrere Aufträge gleichzeitig statt jedes Auftrags einzeln.</span><span class="sxs-lookup"><span data-stu-id="c546e-121">The service that compiles the instructions for shipping operates on a batch of orders rather than processing each order individually.</span></span> <span data-ttu-id="c546e-122">Mit einem <xref:System.Timers.Timer> könnten Sie die Batchverarbeitung alle 30 Minuten starten.</span><span class="sxs-lookup"><span data-stu-id="c546e-122">You could use a <xref:System.Timers.Timer> to start the batch processing every 30 minutes.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c546e-123">Die System.Timers.Timer-Klasse hat die gleiche Auflösung wie die Systemuhr.</span><span class="sxs-lookup"><span data-stu-id="c546e-123">The System.Timers.Timer class has the same resolution as the system clock.</span></span> <span data-ttu-id="c546e-124">Das bedeutet, dass das <xref:System.Timers.Timer.Elapsed>-Ereignis in einem durch die Auflösung der Systemuhr definierten Intervall ausgelöst wird, wenn die <xref:System.Timers.Timer.Interval%2A>-Eigenschaft kleiner als die Systemuhrauflösung ist.</span><span class="sxs-lookup"><span data-stu-id="c546e-124">This means that the <xref:System.Timers.Timer.Elapsed> event will fire at an interval defined by the resolution of the system clock if the <xref:System.Timers.Timer.Interval%2A> property is less than the resolution of the system clock.</span></span> <span data-ttu-id="c546e-125">Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Timers.Timer.Interval%2A>-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c546e-125">For more information, see the <xref:System.Timers.Timer.Interval%2A> property.</span></span>  
  
 <span data-ttu-id="c546e-126">Wenn <xref:System.Timers.Timer.AutoReset%2A> auf `false` festgelegt ist, löst ein <xref:System.Timers.Timer?displayProperty=nameWithType>-Objekt das <xref:System.Timers.Timer.Elapsed>-Ereignis nach dem Verstreichen des ersten <xref:System.Timers.Timer.Interval%2A> nur einmalig aus.</span><span class="sxs-lookup"><span data-stu-id="c546e-126">When <xref:System.Timers.Timer.AutoReset%2A> is set to `false`, a <xref:System.Timers.Timer?displayProperty=nameWithType> object raises the <xref:System.Timers.Timer.Elapsed> event only once, after the first <xref:System.Timers.Timer.Interval%2A> has elapsed.</span></span> <span data-ttu-id="c546e-127">Damit das <xref:System.Timers.Timer.Elapsed>-Ereignis regelmäßig in dem durch <xref:System.Timers.Timer.Interval%2A> definierten Intervall ausgelöst wird, legen Sie <xref:System.Timers.Timer.AutoReset%2A> auf `true` fest. Dies entspricht auch dem Standardwert.</span><span class="sxs-lookup"><span data-stu-id="c546e-127">To keep raising the <xref:System.Timers.Timer.Elapsed> event regularly at the interval defined by the <xref:System.Timers.Timer.Interval%2A>, set <xref:System.Timers.Timer.AutoReset%2A> to `true`, which is the default value.</span></span>  
  
 <span data-ttu-id="c546e-128">Die <xref:System.Timers.Timer>-Komponente fängt alle Ausnahmen, die von Ereignishandlern für das <xref:System.Timers.Timer.Elapsed>-Ereignis ausgelöst werden, ab und unterdrückt sie.</span><span class="sxs-lookup"><span data-stu-id="c546e-128">The <xref:System.Timers.Timer> component catches and suppresses all exceptions thrown by event handlers for the <xref:System.Timers.Timer.Elapsed> event.</span></span> <span data-ttu-id="c546e-129">Dieses Verhalten kann sich in zukünftigen .NET Framework-Versionen ändern.</span><span class="sxs-lookup"><span data-stu-id="c546e-129">This behavior is subject to change in future releases of the .NET Framework.</span></span> <span data-ttu-id="c546e-130">Beachten Sie jedoch, dass dies nicht für Ereignishandler gilt, die asynchron ausgeführt werden und den Operator `await` (in C#) bzw. `Await` (in Visual Basic) enthalten.</span><span class="sxs-lookup"><span data-stu-id="c546e-130">Note, however, that this is not true of event handlers that execute asynchronously and include the `await` operator (in C#)  or the `Await` operator (in Visual Basic).</span></span> <span data-ttu-id="c546e-131">Ausnahmen, die in diesen Ereignishandlern ausgelöst werden, werden wie im folgenden Beispiel veranschaulicht an den aufrufenden Thread übermittelt.</span><span class="sxs-lookup"><span data-stu-id="c546e-131">Exceptions thrown in these event handlers are propagated back to the calling thread, as the following example illustrates.</span></span> <span data-ttu-id="c546e-132">Weitere Informationen zu Ausnahmen, die in asynchronen Methoden ausgelöst werden, finden Sie unter [Ausnahmebehandlung](~/docs/standard/parallel-programming/exception-handling-task-parallel-library.md).</span><span class="sxs-lookup"><span data-stu-id="c546e-132">For more information on exceptions thrown in asynchronous methods, see   [Exception Handling](~/docs/standard/parallel-programming/exception-handling-task-parallel-library.md).</span></span>  
  
 [!code-csharp[System.Timers.Timer#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/AsyncHandlerEx1.cs#3)]
 [!code-vb[System.Timers.Timer#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/AsyncHandlerEx1.vb#3)]  
  
 <span data-ttu-id="c546e-133">Wenn die <xref:System.Timers.Timer.SynchronizingObject%2A>-Eigenschaft `null` ist, wird das <xref:System.Timers.Timer.Elapsed>-Ereignis für einen <xref:System.Threading.ThreadPool>-Thread ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="c546e-133">If the <xref:System.Timers.Timer.SynchronizingObject%2A> property is `null`, the <xref:System.Timers.Timer.Elapsed> event is raised on a <xref:System.Threading.ThreadPool> thread.</span></span> <span data-ttu-id="c546e-134">Dauert die Verarbeitung des <xref:System.Timers.Timer.Elapsed>-Ereignisses länger als <xref:System.Timers.Timer.Interval%2A>, dann kann das Ereignis für einen anderen <xref:System.Threading.ThreadPool>-Thread erneut ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="c546e-134">If processing of the <xref:System.Timers.Timer.Elapsed> event lasts longer than <xref:System.Timers.Timer.Interval%2A>, the event might be raised again on another <xref:System.Threading.ThreadPool> thread.</span></span> <span data-ttu-id="c546e-135">In dieser Situation muss der Ereignishandler eintrittsinvariant sein.</span><span class="sxs-lookup"><span data-stu-id="c546e-135">In this situation, the event handler should be reentrant.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c546e-136">Die Ereignisbehandlungsmethode kann für einen Thread zur gleichen Zeit ausgeführt werden, zu der ein anderer Thread die <xref:System.Timers.Timer.Stop%2A>-Methode aufruft oder die <xref:System.Timers.Timer.Enabled%2A>-Eigenschaft auf `false` festlegt.</span><span class="sxs-lookup"><span data-stu-id="c546e-136">The event-handling method might run on one thread at the same time that another thread calls the <xref:System.Timers.Timer.Stop%2A> method or sets the <xref:System.Timers.Timer.Enabled%2A> property to `false`.</span></span> <span data-ttu-id="c546e-137">Dies kann dazu führen, dass das <xref:System.Timers.Timer.Elapsed>-Ereignis ausgelöst wird, nachdem der Timer gestoppt wurde.</span><span class="sxs-lookup"><span data-stu-id="c546e-137">This might result in the <xref:System.Timers.Timer.Elapsed> event being raised after the timer is stopped.</span></span> <span data-ttu-id="c546e-138">Der Beispielcode für die <xref:System.Timers.Timer.Stop%2A>-Methode zeigt eine Möglichkeit, diese Racebedingung zu vermeiden.</span><span class="sxs-lookup"><span data-stu-id="c546e-138">The example code for the <xref:System.Timers.Timer.Stop%2A> method shows one way to avoid this race condition.</span></span>  
  
 <span data-ttu-id="c546e-139">Auch wenn <xref:System.Timers.Timer.SynchronizingObject%2A> nicht `null` ist, können <xref:System.Timers.Timer.Elapsed>-Ereignisse auftreten, wenn die Methoden <xref:System.Timers.Timer.Dispose%2A> oder <xref:System.Timers.Timer.Stop%2A> aufgerufen wurden oder die <xref:System.Timers.Timer.Enabled%2A>-Eigenschaft auf `false` festgelegt wurde, da das Signal zum Auslösen des <xref:System.Timers.Timer.Elapsed>-Ereignisses für die Ausführung stets in die Warteschlange eines Threadpoolthreads eingereiht wird.</span><span class="sxs-lookup"><span data-stu-id="c546e-139">Even if <xref:System.Timers.Timer.SynchronizingObject%2A> is not `null`, <xref:System.Timers.Timer.Elapsed> events can occur after the <xref:System.Timers.Timer.Dispose%2A> or <xref:System.Timers.Timer.Stop%2A> method has been called or after the <xref:System.Timers.Timer.Enabled%2A> property has been set to `false`, because the signal to raise the <xref:System.Timers.Timer.Elapsed> event is always queued for execution on a thread pool thread.</span></span> <span data-ttu-id="c546e-140">Eine Möglichkeit, diese Racebedingung aufzulösen, besteht darin, ein Flag zu setzen, das den Ereignishandler für das <xref:System.Timers.Timer.Elapsed>-Ereignis anweist, nachfolgende Ereignisse zu ignorieren.</span><span class="sxs-lookup"><span data-stu-id="c546e-140">One way to resolve this race condition is to set a flag that tells the event handler for the <xref:System.Timers.Timer.Elapsed> event to ignore subsequent events.</span></span>  
  
 <span data-ttu-id="c546e-141">Wenn Sie die <xref:System.Timers.Timer?displayProperty=nameWithType>-Klasse mit einem Benutzeroberflächenelement wie etwa einem Formular oder einem Steuerelement verwenden, ohne dafür den Timer festzulegen, weisen Sie der <xref:System.Timers.Timer.SynchronizingObject%2A>-Eigenschaft das Formular oder Steuerelement zu, das den <xref:System.Timers.Timer> enthält, um das Ereignis auf den Benutzeroberflächenthread zu marshallen.</span><span class="sxs-lookup"><span data-stu-id="c546e-141">If you use the <xref:System.Timers.Timer?displayProperty=nameWithType> class with a user interface element, such as a form or control, without placing the timer on that user interface element, assign the form or control that contains the <xref:System.Timers.Timer> to the <xref:System.Timers.Timer.SynchronizingObject%2A> property, so that the event is marshaled to the user interface thread.</span></span>  
  
 <span data-ttu-id="c546e-142">Eine Liste der Standardeigenschaftenwerte für eine <xref:System.Timers.Timer>-Instanz finden Sie in den Ausführungen zum <xref:System.Timers.Timer.%23ctor%2A>-Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="c546e-142">For a list of default property values for an instance of <xref:System.Timers.Timer>, see the <xref:System.Timers.Timer.%23ctor%2A> constructor.</span></span>  
  
> [!TIP]
>  <span data-ttu-id="c546e-143">Beachten Sie, dass .NET vier Klassen mit dem Namen `Timer` enthält, die jeweils unterschiedliche Funktionen erfüllen:</span><span class="sxs-lookup"><span data-stu-id="c546e-143">Be aware that .NET includes four classes named `Timer`, each of which offers different functionality:</span></span>  
>   
> - <span data-ttu-id="c546e-144"><xref:System.Timers.Timer?displayProperty=nameWithType> (dieses Thema): Löst in regelmäßigen Abständen ein Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="c546e-144"><xref:System.Timers.Timer?displayProperty=nameWithType> (this topic): fires an event at regular intervals.</span></span> <span data-ttu-id="c546e-145">Die Klasse ist für den Einsatz als serverbasierte oder Dienstkomponente in einer Multithreadumgebung vorgesehen. Sie hat keine Benutzeroberfläche und ist zur Laufzeit nicht sichtbar.</span><span class="sxs-lookup"><span data-stu-id="c546e-145">The class is intended for use as a server-based or service component in a multithreaded environment; it has no user interface and is not visible at runtime.</span></span>  
> - <span data-ttu-id="c546e-146"><xref:System.Threading.Timer?displayProperty=nameWithType>: Führt in regelmäßigen Abständen eine einzelne Rückrufmethode für einen Threadpoolthread aus.</span><span class="sxs-lookup"><span data-stu-id="c546e-146"><xref:System.Threading.Timer?displayProperty=nameWithType>: executes a single callback method on a thread pool thread at regular intervals.</span></span> <span data-ttu-id="c546e-147">Die Rückrufmethode wird definiert, wenn der Timer instanziiert wird, und kann nicht geändert werden.</span><span class="sxs-lookup"><span data-stu-id="c546e-147">The callback method is defined when the timer is instantiated and cannot be changed.</span></span> <span data-ttu-id="c546e-148">Wie die <xref:System.Timers.Timer?displayProperty=nameWithType>-Klasse ist diese Klasse für den Einsatz als serverbasierte oder Dienstkomponente in einer Multithreadumgebung vorgesehen. Sie hat keine Benutzeroberfläche und ist zur Laufzeit nicht sichtbar.</span><span class="sxs-lookup"><span data-stu-id="c546e-148">Like the <xref:System.Timers.Timer?displayProperty=nameWithType> class, this class is intended for use as a server-based or service component in a multithreaded environment; it has no user interface and is not visible at runtime.</span></span>  
> - <span data-ttu-id="c546e-149"><xref:System.Windows.Forms.Timer?displayProperty=nameWithType> (nur .NET Framework): Dies ist eine Windows Forms-Komponente, die in regelmäßigen Abständen ein Ereignis auslöst.</span><span class="sxs-lookup"><span data-stu-id="c546e-149"><xref:System.Windows.Forms.Timer?displayProperty=nameWithType> (.NET Framework only): a Windows Forms component that fires an event at regular intervals.</span></span> <span data-ttu-id="c546e-150">Die Komponente besitzt keine Benutzeroberfläche und wurde für die Verwendung in einer Singlethreadumgebung entwickelt.</span><span class="sxs-lookup"><span data-stu-id="c546e-150">The component has no user interface and is designed for use in a single-threaded environment.</span></span>  
> - <span data-ttu-id="c546e-151"><xref:System.Web.UI.Timer?displayProperty=nameWithType> (nur .NET Framework): Hierbei handelt es sich um eine ASP.NET-Komponente, die in regelmäßigen Abständen asynchrone oder synchrone Webseitenpostbacks durchführt.</span><span class="sxs-lookup"><span data-stu-id="c546e-151"><xref:System.Web.UI.Timer?displayProperty=nameWithType> (.NET Framework only): an ASP.NET component that performs asynchronous or synchronous web page postbacks at a regular interval.</span></span>  

## Examples  
 <span data-ttu-id="c546e-152">Das folgende Beispiel instanziiert ein `System.Timers.Timer`-Objekt, das sein <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType>-Ereignis alle zwei Sekunden (2000 Millisekunden) auslöst, einen Ereignishandler für das Ereignis einrichtet und den Timer startet.</span><span class="sxs-lookup"><span data-stu-id="c546e-152">The following example instantiates a `System.Timers.Timer` object that fires its <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event every two seconds (2,000 milliseconds), sets up an event handler for the  event, and starts the timer.</span></span> <span data-ttu-id="c546e-153">Der Ereignishandler zeigt den Wert der <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType>-Eigenschaft bei jedem Auslösen an.</span><span class="sxs-lookup"><span data-stu-id="c546e-153">The event handler displays the value of the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> property each time it is raised.</span></span>  
  
 [!code-csharp[System.Timers.Timer#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/timer2a.cs#2)]
 [!code-vb[System.Timers.Timer#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/timer2a.vb#2)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="c546e-154">Alle öffentlichen <see langword="static" />-Member dieses Typs sind threadsicher.</span><span class="sxs-lookup"><span data-stu-id="c546e-154">Any public <see langword="static" /> members of this type are thread safe.</span></span> <span data-ttu-id="c546e-155">Bei Instanzmembern ist die Threadsicherheit nicht gewährleistet.</span><span class="sxs-lookup"><span data-stu-id="c546e-155">Any instance members are not guaranteed to be thread safe.</span></span></threadsafe>
    <altmember cref="P:System.Timers.Timer.AutoReset" />
    <altmember cref="P:System.Timers.Timer.Interval" />
    <altmember cref="E:System.Timers.Timer.Elapsed" />
    <altmember cref="M:System.Timers.Timer.#ctor" />
    <altmember cref="T:System.Threading.Timer" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c546e-156">Initialisiert eine neue Instanz der <see cref="T:System.Timers.Timer" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="c546e-156">Initializes a new instance of the <see cref="T:System.Timers.Timer" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Timers.Timer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c546e-157">Initialisiert eine neue Instanz der <see cref="T:System.Timers.Timer" />-Klasse und legt alle Eigenschaften auf die Anfangswerte fest.</span><span class="sxs-lookup"><span data-stu-id="c546e-157">Initializes a new instance of the <see cref="T:System.Timers.Timer" /> class, and sets all the properties to their initial values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c546e-158">In der folgenden Tabelle werden die anfänglichen Eigenschaftswerte für <xref:System.Timers.Timer>eine Instanz von angezeigt.</span><span class="sxs-lookup"><span data-stu-id="c546e-158">The following table shows initial property values for an instance of <xref:System.Timers.Timer>.</span></span>  
  
|<span data-ttu-id="c546e-159">Eigenschaft</span><span class="sxs-lookup"><span data-stu-id="c546e-159">Property</span></span>|<span data-ttu-id="c546e-160">Anfangswert</span><span class="sxs-lookup"><span data-stu-id="c546e-160">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Timers.Timer.AutoReset%2A>|`true`|  
|<xref:System.Timers.Timer.Enabled%2A>|`false`|  
|<xref:System.Timers.Timer.Interval%2A>|<span data-ttu-id="c546e-161">100 Millisekunden</span><span class="sxs-lookup"><span data-stu-id="c546e-161">100 milliseconds</span></span>|  
|<xref:System.Timers.Timer.SynchronizingObject%2A>|<span data-ttu-id="c546e-162">Ein NULL-Verweis (`Nothing` in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="c546e-162">A null reference (`Nothing` in Visual Basic).</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c546e-163">Das folgende Beispiel instanziiert ein <xref:System.Timers.Timer>-Objekt, das sein <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType>-Ereignis alle zwei Sekunden (2000 Millisekunden) auslöst, einen Ereignishandler für das Ereignis einrichtet und den Timer startet.</span><span class="sxs-lookup"><span data-stu-id="c546e-163">The following example instantiates a <xref:System.Timers.Timer> object that fires its <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event every two seconds (2000 milliseconds), sets up an event handler for the event, and starts the timer.</span></span> <span data-ttu-id="c546e-164">Der Ereignishandler zeigt den Wert der <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType>-Eigenschaft bei jedem Auslösen an.</span><span class="sxs-lookup"><span data-stu-id="c546e-164">The event handler displays the value of the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> property each time it is raised.</span></span>  
  
 [!code-cpp[System.Timers.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.timers.timer/cpp/timer1.cpp#1)]
 [!code-csharp[System.Timers.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/timer1.cs#1)]
 [!code-vb[System.Timers.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/timer1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Timers.Timer.AutoReset" />
        <altmember cref="P:System.Timers.Timer.Enabled" />
        <altmember cref="P:System.Timers.Timer.Interval" />
        <altmember cref="P:System.Timers.Timer.SynchronizingObject" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer (double interval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 interval) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Timers.Timer.#ctor(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (interval As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer(double interval);" />
      <MemberSignature Language="F#" Value="new System.Timers.Timer : double -&gt; System.Timers.Timer" Usage="new System.Timers.Timer interval" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="interval" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="interval"><span data-ttu-id="c546e-165">Die Zeit zwischen den Ereignissen in Millisekunden.</span><span class="sxs-lookup"><span data-stu-id="c546e-165">The time, in milliseconds, between events.</span></span> <span data-ttu-id="c546e-166">Der Wert muss größer als 0 (null) und kleiner als oder gleich <see cref="F:System.Int32.MaxValue" /> sein.</span><span class="sxs-lookup"><span data-stu-id="c546e-166">The value must be greater than zero and less than or equal to <see cref="F:System.Int32.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="c546e-167">Initialisiert eine neue Instanz der <see cref="T:System.Timers.Timer" />-Klasse, wobei die <see cref="P:System.Timers.Timer.Interval" />-Eigenschaft auf den angegebenen Wert (in Millisekunden) festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="c546e-167">Initializes a new instance of the <see cref="T:System.Timers.Timer" /> class, and sets the <see cref="P:System.Timers.Timer.Interval" /> property to the specified number of milliseconds.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c546e-168">Dieser Konstruktor legt die <xref:System.Timers.Timer.Interval%2A> -Eigenschaft der neuen Timer-Instanz fest, aktiviert jedoch nicht den Timer.</span><span class="sxs-lookup"><span data-stu-id="c546e-168">This constructor sets the <xref:System.Timers.Timer.Interval%2A> property of the new timer instance, but does not enable the timer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c546e-169">Das folgende Beispiel instanziiert ein <xref:System.Timers.Timer>-Objekt, das sein <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType>-Ereignis alle zwei Sekunden (2000 Millisekunden) auslöst, einen Ereignishandler für das Ereignis einrichtet und den Timer startet.</span><span class="sxs-lookup"><span data-stu-id="c546e-169">The following example instantiates a <xref:System.Timers.Timer> object that fires its <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event every two seconds (2000 milliseconds), sets up an event handler for the event, and starts the timer.</span></span> <span data-ttu-id="c546e-170">Der Ereignishandler zeigt den Wert der <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType>-Eigenschaft bei jedem Auslösen an.</span><span class="sxs-lookup"><span data-stu-id="c546e-170">The event handler displays the value of the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> property each time it is raised.</span></span>  
  
 [!code-csharp[System.Timers.Timer#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/AsyncHandlerEx1.cs#3)]
 [!code-vb[System.Timers.Timer#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/AsyncHandlerEx1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c546e-171">Der Wert des <paramref name="interval" />-Parameters muss größer oder gleich 0 (null) oder größer als <see cref="F:System.Int32.MaxValue" /> sein.</span><span class="sxs-lookup"><span data-stu-id="c546e-171">The value of the <paramref name="interval" /> parameter is less than or equal to zero, or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <altmember cref="P:System.Timers.Timer.Interval" />
      </Docs>
    </Member>
    <Member MemberName="AutoReset">
      <MemberSignature Language="C#" Value="public bool AutoReset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoReset" />
      <MemberSignature Language="DocId" Value="P:System.Timers.Timer.AutoReset" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoReset As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoReset { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoReset : bool with get, set" Usage="System.Timers.Timer.AutoReset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Timers.TimersDescription("Indicates whether the timer will be restarted when it is enabled.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.Timers.TimersDescription("TimerAutoReset")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c546e-172">Ruft einen booleschen Wert ab, der angibt, ob der <see cref="T:System.Timers.Timer" /> das <see cref="E:System.Timers.Timer.Elapsed" />-Ereignis nur einmal (<see langword="false" />) oder wiederholt (<see langword="true" />) auslösen soll, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="c546e-172">Gets or sets a Boolean indicating whether the <see cref="T:System.Timers.Timer" /> should raise the <see cref="E:System.Timers.Timer.Elapsed" /> event only once (<see langword="false" />) or repeatedly (<see langword="true" />).</span></span></summary>
        <value><span data-ttu-id="c546e-173"><see langword="true" />, wenn der <see cref="T:System.Timers.Timer" /> das <see cref="E:System.Timers.Timer.Elapsed" />-Ereignis immer auslösen soll, wenn das Intervall abläuft, <see langword="false" />, wenn das <see cref="E:System.Timers.Timer.Elapsed" />-Ereignis nur einmal nach dem ersten Ablaufen des Intervalls ausgelöst werden soll.</span><span class="sxs-lookup"><span data-stu-id="c546e-173"><see langword="true" /> if the <see cref="T:System.Timers.Timer" /> should raise the <see cref="E:System.Timers.Timer.Elapsed" /> event each time the interval elapses; <see langword="false" /> if it should raise the <see cref="E:System.Timers.Timer.Elapsed" /> event only once, after the first time the interval elapses.</span></span> <span data-ttu-id="c546e-174">Der Standardwert ist <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="c546e-174">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c546e-175">Wenn der <xref:System.Timers.Timer> bereits aktiviert ist, wenn <xref:System.Timers.Timer.Start%2A> die-Methode aufgerufen wird, wird das Intervall zurückgesetzt.</span><span class="sxs-lookup"><span data-stu-id="c546e-175">If the <xref:System.Timers.Timer> is already enabled when the <xref:System.Timers.Timer.Start%2A> method is called, the interval is reset.</span></span> <span data-ttu-id="c546e-176">Wenn <xref:System.Timers.Timer.AutoReset%2A>den Wert <xref:System.Timers.Timer.Start%2A> hat, muss die-Methode aufgerufen werden, um die Anzahl erneut zu starten. `false`</span><span class="sxs-lookup"><span data-stu-id="c546e-176">If <xref:System.Timers.Timer.AutoReset%2A> is `false`, the <xref:System.Timers.Timer.Start%2A> method must be called in order to start the count again.</span></span>  
  
 <span data-ttu-id="c546e-177">Das Zurücksetzen des Intervalls wirkt <xref:System.Timers.Timer.Elapsed> sich auf das Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="c546e-177">Resetting the interval affects when the <xref:System.Timers.Timer.Elapsed> event is raised.</span></span> <span data-ttu-id="c546e-178">Wenn Sie z. b. das Intervall auf 5 Sekunden festlegen und dann die <xref:System.Timers.Timer.Enabled%2A> -Eigenschaft `true`auf festlegen, wird die Anzahl zum <xref:System.Timers.Timer.Enabled%2A> Zeitpunkt der Festlegung von gestartet.</span><span class="sxs-lookup"><span data-stu-id="c546e-178">For example, if you set the interval to 5 seconds and then set the <xref:System.Timers.Timer.Enabled%2A> property to `true`, the count starts at the time <xref:System.Timers.Timer.Enabled%2A> is set.</span></span> <span data-ttu-id="c546e-179">Wenn Sie das Intervall auf 10 Sekunden zurücksetzen, wenn die Anzahl 3 Sekunden beträgt <xref:System.Timers.Timer.Elapsed> , wird das-Ereignis zum ersten Mal nach 13 Sekunden <xref:System.Timers.Timer.Enabled%2A> ausgelöst, nachdem die `true`-Eigenschaft auf festgelegt wurde.</span><span class="sxs-lookup"><span data-stu-id="c546e-179">If you reset the interval to 10 seconds when the count is 3 seconds, the <xref:System.Timers.Timer.Elapsed> event is raised for the first time 13 seconds after the <xref:System.Timers.Timer.Enabled%2A> property was set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c546e-180">Im folgenden Beispiel wird ein <xref:System.Timers.Timer> - <xref:System.Timers.Timer.Elapsed> Ereignis erstellt, dessen-Ereignis nach 1,5 Sekunden ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="c546e-180">The following example creates a <xref:System.Timers.Timer> whose <xref:System.Timers.Timer.Elapsed> event fires after 1.5 seconds.</span></span> <span data-ttu-id="c546e-181">Der zugehörige Ereignishandler zeigt dann "Hallo Welt!"</span><span class="sxs-lookup"><span data-stu-id="c546e-181">Its event handler then displays "Hello World!"</span></span> <span data-ttu-id="c546e-182">in der Konsole.</span><span class="sxs-lookup"><span data-stu-id="c546e-182">on the console.</span></span>  
  
 [!code-cpp[Classic Timer.Timer1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Timer.Timer1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer.Timer1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Timer.Timer1 Example/CS/source.cs#1)]
 [!code-vb[Classic Timer.Timer1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Timer.Timer1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Timers.Timer.Interval" />
        <altmember cref="P:System.Timers.Timer.Enabled" />
        <altmember cref="M:System.Timers.Timer.Start" />
        <altmember cref="E:System.Timers.Timer.Elapsed" />
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Timers.Timer.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginInit();" />
      <MemberSignature Language="F#" Value="abstract member BeginInit : unit -&gt; unit&#xA;override this.BeginInit : unit -&gt; unit" Usage="timer.BeginInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c546e-183">Beginnt die Laufzeitinitialisierung eines <see cref="T:System.Timers.Timer" />, der in einem Formular oder von einer anderen Komponente verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="c546e-183">Begins the run-time initialization of a <see cref="T:System.Timers.Timer" /> that is used on a form or by another component.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c546e-184">Die [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] Entwurfs Umgebung verwendet diese Methode, um die Initialisierung einer Komponente zu starten, die in einem Formular oder von einer anderen Komponente verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="c546e-184">The [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] design environment uses this method to start the initialization of a component that is used on a form or by another component.</span></span> <span data-ttu-id="c546e-185">Die <xref:System.Timers.Timer.EndInit%2A> -Methode beendet die Initialisierung.</span><span class="sxs-lookup"><span data-stu-id="c546e-185">The <xref:System.Timers.Timer.EndInit%2A> method ends the initialization.</span></span> <span data-ttu-id="c546e-186">Die Verwendung <xref:System.Timers.Timer.BeginInit%2A> der <xref:System.Timers.Timer.EndInit%2A> -Methode und der-Methode verhindert, dass das Steuerelement verwendet wird, bevor es vollständig initialisiert</span><span class="sxs-lookup"><span data-stu-id="c546e-186">Using the <xref:System.Timers.Timer.BeginInit%2A> and <xref:System.Timers.Timer.EndInit%2A> methods prevents the control from being used before it is fully initialized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Timers.Timer.Enabled" />
        <altmember cref="M:System.Timers.Timer.EndInit" />
        <altmember cref="P:System.Timers.Timer.Interval" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Timers.Timer.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="timer.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c546e-187">Gibt die von der <see cref="T:System.Timers.Timer" /> verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="c546e-187">Releases the resources used by the <see cref="T:System.Timers.Timer" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c546e-188">Die <xref:System.Timers.Timer.Close%2A> -Methode ruft wiederum die `Dispose` -Methode auf.</span><span class="sxs-lookup"><span data-stu-id="c546e-188">The <xref:System.Timers.Timer.Close%2A> method in turn calls the `Dispose` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Timers.Timer.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="timer.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="c546e-189"><see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</span><span class="sxs-lookup"><span data-stu-id="c546e-189"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="c546e-190">Gibt alle von der aktuellen <see cref="T:System.Timers.Timer" />-Klasse verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="c546e-190">Releases all resources used by the current <see cref="T:System.Timers.Timer" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Elapsed">
      <MemberSignature Language="C#" Value="public event System.Timers.ElapsedEventHandler Elapsed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Timers.ElapsedEventHandler Elapsed" />
      <MemberSignature Language="DocId" Value="E:System.Timers.Timer.Elapsed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Elapsed As ElapsedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Timers::ElapsedEventHandler ^ Elapsed;" />
      <MemberSignature Language="F#" Value="member this.Elapsed : System.Timers.ElapsedEventHandler " Usage="member this.Elapsed : System.Timers.ElapsedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Timers.TimersDescription("Occurs when the Interval has elapsed.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.Timers.TimersDescription("TimerIntervalElapsed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Timers.ElapsedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c546e-191">Tritt ein, wenn das Intervall abläuft.</span><span class="sxs-lookup"><span data-stu-id="c546e-191">Occurs when the interval elapses.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c546e-192">Das <xref:System.Timers.Timer.Elapsed> `true` -Ereignis wird ausgelöst, <xref:System.Timers.Timer.Enabled%2A> wenn die-Eigenschaft und das von der <xref:System.Timers.Timer.Interval%2A> -Eigenschaft definierte Zeitintervall (in Millisekunden) abläuft.</span><span class="sxs-lookup"><span data-stu-id="c546e-192">The <xref:System.Timers.Timer.Elapsed> event is raised if the <xref:System.Timers.Timer.Enabled%2A> property is `true` and the time interval (in milliseconds) defined by the <xref:System.Timers.Timer.Interval%2A> property elapses.</span></span> <span data-ttu-id="c546e-193">Wenn die <xref:System.Timers.Timer.AutoReset%2A> -Eigenschaft `true`ist, wird das-Ereignis in einem von der <xref:System.Timers.Timer.Interval%2A> -Eigenschaft definierten Intervall wiederholt ausgelöst. andernfalls wird das-Ereignis nur einmal ausgelöst, <xref:System.Timers.Timer.Interval%2A> wenn der Wert erstmalig abläuft.</span><span class="sxs-lookup"><span data-stu-id="c546e-193">If the <xref:System.Timers.Timer.AutoReset%2A> property is `true`, the event is raised repeatedly at an interval defined by the <xref:System.Timers.Timer.Interval%2A> property; otherwise, the event is raised only once, the first time the <xref:System.Timers.Timer.Interval%2A> value elapses.</span></span>  
  
 <span data-ttu-id="c546e-194">Wenn <xref:System.Timers.Timer.Interval%2A> festgelegt wird, <xref:System.Timers.Timer> nachdem gestartet wurde, wird die Anzahl zurückgesetzt.</span><span class="sxs-lookup"><span data-stu-id="c546e-194">If <xref:System.Timers.Timer.Interval%2A> is set after the <xref:System.Timers.Timer> has started, the count is reset.</span></span> <span data-ttu-id="c546e-195">Wenn Sie z. b. das Intervall auf 5 Sekunden festlegen und dann <xref:System.Timers.Timer.Enabled%2A> auf `true`festlegen, wird die Anzahl zum Zeitpunkt <xref:System.Timers.Timer.Enabled%2A> der Festlegung von gestartet.</span><span class="sxs-lookup"><span data-stu-id="c546e-195">For example, if you set the interval to 5 seconds and then set <xref:System.Timers.Timer.Enabled%2A> to `true`, the count starts at the time <xref:System.Timers.Timer.Enabled%2A> is set.</span></span> <span data-ttu-id="c546e-196">Wenn Sie das Intervall auf 10 Sekunden zurücksetzen, wenn die Anzahl 3 Sekunden <xref:System.Timers.Timer.Elapsed> beträgt, wird das-Ereignis zum ersten Mal ausgelöst <xref:System.Timers.Timer.Enabled%2A> , nachdem auf `true`festgelegt wurde.</span><span class="sxs-lookup"><span data-stu-id="c546e-196">If you reset the interval to 10 seconds when count is 3 seconds, the <xref:System.Timers.Timer.Elapsed> event is raised for the first time 13 seconds after <xref:System.Timers.Timer.Enabled%2A> was set to `true`.</span></span>  
  
 <span data-ttu-id="c546e-197">Wenn die <xref:System.Timers.Timer.SynchronizingObject%2A> -Eigenschaft `null`ist, <xref:System.Timers.Timer.Elapsed> wird das-Ereignis in <xref:System.Threading.ThreadPool> einem Thread ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="c546e-197">If the <xref:System.Timers.Timer.SynchronizingObject%2A> property is `null`,the <xref:System.Timers.Timer.Elapsed> event is raised on a <xref:System.Threading.ThreadPool> thread.</span></span> <span data-ttu-id="c546e-198">Wenn die Verarbeitung des <xref:System.Timers.Timer.Elapsed> Ereignisses länger als <xref:System.Timers.Timer.Interval%2A>dauert, wird das Ereignis möglicherweise erneut in einem anderen <xref:System.Threading.ThreadPool> Thread ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="c546e-198">If the processing of the <xref:System.Timers.Timer.Elapsed> event lasts longer than <xref:System.Timers.Timer.Interval%2A>, the event might be raised again on another <xref:System.Threading.ThreadPool> thread.</span></span> <span data-ttu-id="c546e-199">In dieser Situation muss der Ereignishandler eintrittsinvariant sein.</span><span class="sxs-lookup"><span data-stu-id="c546e-199">In this situation, the event handler should be reentrant.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c546e-200">Die Ereignisbehandlungsmethode kann für einen Thread zur gleichen Zeit ausgeführt werden, zu der ein anderer Thread die <xref:System.Timers.Timer.Stop%2A>-Methode aufruft oder die <xref:System.Timers.Timer.Enabled%2A>-Eigenschaft auf `false` festlegt.</span><span class="sxs-lookup"><span data-stu-id="c546e-200">The event-handling method might run on one thread at the same time that another thread calls the <xref:System.Timers.Timer.Stop%2A> method or sets the <xref:System.Timers.Timer.Enabled%2A> property to `false`.</span></span> <span data-ttu-id="c546e-201">Dies kann dazu führen, dass das <xref:System.Timers.Timer.Elapsed>-Ereignis ausgelöst wird, nachdem der Timer gestoppt wurde.</span><span class="sxs-lookup"><span data-stu-id="c546e-201">This might result in the <xref:System.Timers.Timer.Elapsed> event being raised after the timer is stopped.</span></span> <span data-ttu-id="c546e-202">Der Beispielcode für die <xref:System.Timers.Timer.Stop%2A>-Methode zeigt eine Möglichkeit, diese Racebedingung zu vermeiden.</span><span class="sxs-lookup"><span data-stu-id="c546e-202">The example code for the <xref:System.Timers.Timer.Stop%2A> method shows one way to avoid this race condition.</span></span>  
  
 <span data-ttu-id="c546e-203">Auch wenn <xref:System.Timers.Timer.SynchronizingObject%2A> nicht `null` ist, können <xref:System.Timers.Timer.Elapsed>-Ereignisse auftreten, wenn die Methoden <xref:System.Timers.Timer.Dispose%2A> oder <xref:System.Timers.Timer.Stop%2A> aufgerufen wurden oder die <xref:System.Timers.Timer.Enabled%2A>-Eigenschaft auf `false` festgelegt wurde, da das Signal zum Auslösen des <xref:System.Timers.Timer.Elapsed>-Ereignisses für die Ausführung stets in die Warteschlange eines Threadpoolthreads eingereiht wird.</span><span class="sxs-lookup"><span data-stu-id="c546e-203">Even if <xref:System.Timers.Timer.SynchronizingObject%2A> is not `null`, <xref:System.Timers.Timer.Elapsed> events can occur after the <xref:System.Timers.Timer.Dispose%2A> or <xref:System.Timers.Timer.Stop%2A> method has been called or after the <xref:System.Timers.Timer.Enabled%2A> property has been set to `false`, because the signal to raise the <xref:System.Timers.Timer.Elapsed> event is always queued for execution on a thread pool thread.</span></span> <span data-ttu-id="c546e-204">Eine Möglichkeit, diese Racebedingung aufzulösen, besteht darin, ein Flag zu setzen, das den Ereignishandler für das <xref:System.Timers.Timer.Elapsed>-Ereignis anweist, nachfolgende Ereignisse zu ignorieren.</span><span class="sxs-lookup"><span data-stu-id="c546e-204">One way to resolve this race condition is to set a flag that tells the event handler for the <xref:System.Timers.Timer.Elapsed> event to ignore subsequent events.</span></span>  
  
 <span data-ttu-id="c546e-205">Die <xref:System.Timers.Timer>-Komponente fängt alle Ausnahmen, die von Ereignishandlern für das <xref:System.Timers.Timer.Elapsed>-Ereignis ausgelöst werden, ab und unterdrückt sie.</span><span class="sxs-lookup"><span data-stu-id="c546e-205">The <xref:System.Timers.Timer> component catches and suppresses all exceptions thrown by event handlers for the <xref:System.Timers.Timer.Elapsed> event.</span></span> <span data-ttu-id="c546e-206">Dieses Verhalten kann sich in zukünftigen .NET Framework-Versionen ändern.</span><span class="sxs-lookup"><span data-stu-id="c546e-206">This behavior is subject to change in future releases of the .NET Framework.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c546e-207">Das folgende Beispiel instanziiert ein <xref:System.Timers.Timer>-Objekt, das sein <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType>-Ereignis alle zwei Sekunden (2000 Millisekunden) auslöst, einen Ereignishandler für das Ereignis einrichtet und den Timer startet.</span><span class="sxs-lookup"><span data-stu-id="c546e-207">The following example instantiates a <xref:System.Timers.Timer> object that fires its <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event every two seconds (2000 milliseconds), sets up an event handler for the event, and starts the timer.</span></span> <span data-ttu-id="c546e-208">Der Ereignishandler zeigt den Wert der <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType>-Eigenschaft bei jedem Auslösen an.</span><span class="sxs-lookup"><span data-stu-id="c546e-208">The event handler displays the value of the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> property each time it is raised.</span></span>  
  
 [!code-cpp[System.Timers.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.timers.timer/cpp/timer1.cpp#1)]
 [!code-csharp[System.Timers.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/timer1.cs#1)]
 [!code-vb[System.Timers.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/timer1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Timers.Timer.Interval" />
        <altmember cref="P:System.Timers.Timer.AutoReset" />
        <altmember cref="E:System.Timers.Timer.Elapsed" />
        <altmember cref="T:System.Timers.ElapsedEventArgs" />
        <altmember cref="T:System.Timers.ElapsedEventHandler" />
        <altmember cref="P:System.Timers.Timer.Enabled" />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Timers.Timer.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Timers.Timer.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Timers.TimersDescription("Indicates whether the timer is enabled to fire events at a defined interval.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.Timers.TimersDescription("TimerEnabled")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c546e-209">Ruft einen Wert ab, der angibt, ob der <see cref="T:System.Timers.Timer" /> das <see cref="E:System.Timers.Timer.Elapsed" />-Ereignis auslösen soll, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="c546e-209">Gets or sets a value indicating whether the <see cref="T:System.Timers.Timer" /> should raise the <see cref="E:System.Timers.Timer.Elapsed" /> event.</span></span></summary>
        <value><span data-ttu-id="c546e-210"><see langword="true" />, wenn <see cref="T:System.Timers.Timer" /> das <see cref="E:System.Timers.Timer.Elapsed" />-Ereignis auslösen soll, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c546e-210"><see langword="true" /> if the <see cref="T:System.Timers.Timer" /> should raise the <see cref="E:System.Timers.Timer.Elapsed" /> event; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c546e-211">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c546e-211">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c546e-212">Das <xref:System.Timers.Timer.Enabled%2A> festlegen `true` von auf entspricht dem Aufruf <xref:System.Timers.Timer.Start%2A>von, während <xref:System.Timers.Timer.Enabled%2A> das `false` Festlegen von auf das gleiche <xref:System.Timers.Timer.Stop%2A>ist wie das Aufrufen von.</span><span class="sxs-lookup"><span data-stu-id="c546e-212">Setting <xref:System.Timers.Timer.Enabled%2A> to `true` is the same as calling <xref:System.Timers.Timer.Start%2A>, while setting <xref:System.Timers.Timer.Enabled%2A> to `false` is the same as calling <xref:System.Timers.Timer.Stop%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c546e-213">Das Signal zum Erhöhen des <xref:System.Timers.Timer.Elapsed> Ereignisses wird immer zur Ausführung in einem <xref:System.Threading.ThreadPool> Thread in die Warteschlange eingereiht.</span><span class="sxs-lookup"><span data-stu-id="c546e-213">The signal to raise the <xref:System.Timers.Timer.Elapsed> event is always queued for execution on a <xref:System.Threading.ThreadPool> thread.</span></span> <span data-ttu-id="c546e-214">Dies kann dazu führen, <xref:System.Timers.Timer.Elapsed> dass das-Ereignis ausgelöst <xref:System.Timers.Timer.Enabled%2A> wird, nachdem die `false`-Eigenschaft auf festgelegt wurde.</span><span class="sxs-lookup"><span data-stu-id="c546e-214">This might result in the <xref:System.Timers.Timer.Elapsed> event being raised after the <xref:System.Timers.Timer.Enabled%2A> property is set to `false`.</span></span> <span data-ttu-id="c546e-215">Das Codebeispiel für die <xref:System.Timers.Timer.Stop%2A> -Methode zeigt eine Möglichkeit, diese Racebedingung zu umgehen.</span><span class="sxs-lookup"><span data-stu-id="c546e-215">The code example for the <xref:System.Timers.Timer.Stop%2A> method shows one way to work around this race condition.</span></span>  
  
 <span data-ttu-id="c546e-216">Wenn <xref:System.Timers.Timer.Enabled%2A> auf `true` und auffest`false`gelegt ist ,<xref:System.Timers.Timer> löst das- Ereignisnureinmalaus,wenndasIntervalldasersteMalabläuft.<xref:System.Timers.Timer.Elapsed> <xref:System.Timers.Timer.AutoReset%2A></span><span class="sxs-lookup"><span data-stu-id="c546e-216">If <xref:System.Timers.Timer.Enabled%2A> is set to `true` and <xref:System.Timers.Timer.AutoReset%2A> is set to `false`, the <xref:System.Timers.Timer> raises the <xref:System.Timers.Timer.Elapsed> event only once, the first time the interval elapses.</span></span>  
  
 <span data-ttu-id="c546e-217">Wenn das Intervall festgelegt wird, <xref:System.Timers.Timer> nachdem gestartet wurde, wird die Anzahl zurückgesetzt.</span><span class="sxs-lookup"><span data-stu-id="c546e-217">If the interval is set after the <xref:System.Timers.Timer> has started, the count is reset.</span></span> <span data-ttu-id="c546e-218">Wenn Sie z. b. das Intervall auf 5 Sekunden festlegen und dann die <xref:System.Timers.Timer.Enabled%2A> -Eigenschaft `true`auf festlegen, wird die Anzahl zum <xref:System.Timers.Timer.Enabled%2A> Zeitpunkt der Festlegung von gestartet.</span><span class="sxs-lookup"><span data-stu-id="c546e-218">For example, if you set the interval to 5 seconds and then set the <xref:System.Timers.Timer.Enabled%2A> property to `true`, the count starts at the time <xref:System.Timers.Timer.Enabled%2A> is set.</span></span> <span data-ttu-id="c546e-219">Wenn Sie das Intervall auf 10 Sekunden zurücksetzen, wenn die Anzahl 3 Sekunden <xref:System.Timers.Timer.Elapsed> beträgt, wird das-Ereignis zum ersten Mal ausgelöst <xref:System.Timers.Timer.Enabled%2A> , nachdem auf `true`festgelegt wurde.</span><span class="sxs-lookup"><span data-stu-id="c546e-219">If you reset the interval to 10 seconds when count is 3 seconds, the <xref:System.Timers.Timer.Elapsed> event is raised for the first time 13 seconds after <xref:System.Timers.Timer.Enabled%2A> was set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c546e-220">Einige visuelle Designer, z. b. die in Microsoft Visual Studio, <xref:System.Timers.Timer.Enabled%2A> legen beim `true` Einfügen eines neuen <xref:System.Timers.Timer>die-Eigenschaft auf fest.</span><span class="sxs-lookup"><span data-stu-id="c546e-220">Some visual designers, such as those in Microsoft Visual Studio, set the <xref:System.Timers.Timer.Enabled%2A> property to `true` when inserting a new <xref:System.Timers.Timer>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c546e-221">Im folgenden Beispiel wird ein <xref:System.Timers.Timer> -Objekt instanziiert, das <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> das-Ereignis alle zwei Sekunden (2000 Millisekunden) auslöst, einen Ereignishandler für das-Ereignis festlegt und den Timer startet.</span><span class="sxs-lookup"><span data-stu-id="c546e-221">The following example instantiates a <xref:System.Timers.Timer> object that fires its <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event every two seconds (2000 milliseconds), sets up an event handler for the  event, and starts the timer.</span></span> <span data-ttu-id="c546e-222">Der Ereignishandler zeigt den Wert der <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType>-Eigenschaft bei jedem Auslösen an.</span><span class="sxs-lookup"><span data-stu-id="c546e-222">The event handler displays the value of the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> property each time it is raised.</span></span>  
  
 [!code-cpp[System.Timers.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.timers.timer/cpp/timer1.cpp#1)]
 [!code-csharp[System.Timers.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/timer1.cs#1)]
 [!code-vb[System.Timers.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/timer1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c546e-223">Diese Eigenschaft kann nicht festgelegt werden, da der Zeitgeber freigegeben wurde.</span><span class="sxs-lookup"><span data-stu-id="c546e-223">This property cannot be set because the timer has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c546e-224">Die <see cref="P:System.Timers.Timer.Interval" />-Eigenschaft wurde auf einen größeren Wert als <see cref="F:System.Int32.MaxValue" /> festgelegt, bevor der Timer aktiviert wurde.</span><span class="sxs-lookup"><span data-stu-id="c546e-224">The <see cref="P:System.Timers.Timer.Interval" /> property was set to a value greater than <see cref="F:System.Int32.MaxValue" /> before the timer was enabled.</span></span></exception>
        <altmember cref="P:System.Timers.Timer.Interval" />
        <altmember cref="P:System.Timers.Timer.AutoReset" />
        <altmember cref="M:System.Timers.Timer.Start" />
        <altmember cref="M:System.Timers.Timer.Stop" />
        <altmember cref="E:System.Timers.Timer.Elapsed" />
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Timers.Timer.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndInit();" />
      <MemberSignature Language="F#" Value="abstract member EndInit : unit -&gt; unit&#xA;override this.EndInit : unit -&gt; unit" Usage="timer.EndInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c546e-225">Beendet die Laufzeitinitialisierung eines <see cref="T:System.Timers.Timer" />, der in einem Formular oder von einer anderen Komponente verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="c546e-225">Ends the run-time initialization of a <see cref="T:System.Timers.Timer" /> that is used on a form or by another component.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c546e-226">Die [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] Entwurfs Umgebung verwendet diese Methode, um die Initialisierung einer Komponente zu beenden, die in einem Formular oder von einer anderen Komponente verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="c546e-226">The [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] design environment uses this method to end the initialization of a component that is used on a form or by another component.</span></span> <span data-ttu-id="c546e-227">Die <xref:System.Timers.Timer.BeginInit%2A> -Methode startet die Initialisierung.</span><span class="sxs-lookup"><span data-stu-id="c546e-227">The <xref:System.Timers.Timer.BeginInit%2A> method starts the initialization.</span></span> <span data-ttu-id="c546e-228">Die Verwendung <xref:System.Timers.Timer.BeginInit%2A> der <xref:System.Timers.Timer.EndInit%2A> -Methode und der-Methode verhindert, dass das Steuerelement verwendet wird, bevor es vollständig initialisiert</span><span class="sxs-lookup"><span data-stu-id="c546e-228">Using the <xref:System.Timers.Timer.BeginInit%2A> and <xref:System.Timers.Timer.EndInit%2A> methods prevents the control from being used before it is fully initialized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Timers.Timer.BeginInit" />
        <altmember cref="P:System.Timers.Timer.Enabled" />
        <altmember cref="P:System.Timers.Timer.Interval" />
      </Docs>
    </Member>
    <Member MemberName="Interval">
      <MemberSignature Language="C#" Value="public double Interval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Interval" />
      <MemberSignature Language="DocId" Value="P:System.Timers.Timer.Interval" />
      <MemberSignature Language="VB.NET" Value="Public Property Interval As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Interval { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Interval : double with get, set" Usage="System.Timers.Timer.Interval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue(100)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Timers.TimersDescription("The number of milliseconds between timer events.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.Timers.TimersDescription("TimerInterval")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c546e-229">Ruft das Intervall in Millisekunden ab, in dem das <see cref="E:System.Timers.Timer.Elapsed" />-Ereignis ausgelöst wird, oder legt dieses fest.</span><span class="sxs-lookup"><span data-stu-id="c546e-229">Gets or sets the interval, expressed in milliseconds, at which to raise the <see cref="E:System.Timers.Timer.Elapsed" /> event.</span></span></summary>
        <value><span data-ttu-id="c546e-230">Die Zeit zwischen den <see cref="E:System.Timers.Timer.Elapsed" />-Ereignissen in Millisekunden.</span><span class="sxs-lookup"><span data-stu-id="c546e-230">The time, in milliseconds, between <see cref="E:System.Timers.Timer.Elapsed" /> events.</span></span> <span data-ttu-id="c546e-231">Der Wert muss größer als 0 (null) und kleiner als oder gleich <see cref="F:System.Int32.MaxValue" /> sein.</span><span class="sxs-lookup"><span data-stu-id="c546e-231">The value must be greater than zero, and less than or equal to <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="c546e-232">Der Standardwert ist 100 Millisekunden.</span><span class="sxs-lookup"><span data-stu-id="c546e-232">The default is 100 milliseconds.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c546e-233">Mit der <xref:System.Timers.Timer.Interval%2A> -Eigenschaft können Sie die Häufigkeit ermitteln, mit <xref:System.Timers.Timer.Elapsed> der das Ereignis ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="c546e-233">You use the <xref:System.Timers.Timer.Interval%2A> property to determine the frequency at which the <xref:System.Timers.Timer.Elapsed> event is fired.</span></span> <span data-ttu-id="c546e-234">Da die <xref:System.Timers.Timer> -Klasse von der Systemuhr abhängig ist, hat Sie dieselbe Auflösung wie die Systemuhr.</span><span class="sxs-lookup"><span data-stu-id="c546e-234">Because the <xref:System.Timers.Timer> class depends on the system clock, it has the same resolution as the system clock.</span></span> <span data-ttu-id="c546e-235">Das bedeutet, dass das <xref:System.Timers.Timer.Elapsed>-Ereignis in einem durch die Auflösung der Systemuhr definierten Intervall ausgelöst wird, wenn die <xref:System.Timers.Timer.Interval%2A>-Eigenschaft kleiner als die Systemuhrauflösung ist.</span><span class="sxs-lookup"><span data-stu-id="c546e-235">This means that the <xref:System.Timers.Timer.Elapsed> event will fire at an interval defined by the resolution of the system clock if the <xref:System.Timers.Timer.Interval%2A> property is less than the resolution of the system clock.</span></span> <span data-ttu-id="c546e-236">Im folgenden Beispiel wird die <xref:System.Timers.Timer.Interval%2A> -Eigenschaft auf 5 Millisekunden festgelegt.</span><span class="sxs-lookup"><span data-stu-id="c546e-236">The following example sets the <xref:System.Timers.Timer.Interval%2A> property to 5 milliseconds.</span></span> <span data-ttu-id="c546e-237">Wenn die Systemzeit [!INCLUDE[win7](~/includes/win7-md.md)] auf einem System mit einer Auflösung von ungefähr 15 Millisekunden ausgeführt wird, wird das Ereignis ungefähr alle 15 Millisekunden anstatt alle fünf Millisekunden ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="c546e-237">When run on a [!INCLUDE[win7](~/includes/win7-md.md)] system whose system clock has a resolution of approximately 15 milliseconds, the event fires approximately every 15 milliseconds rather than every 5 milliseconds.</span></span>  
  
 [!code-csharp[System.Timers.Timer.Interval#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer.interval/cs/interval2.cs#1)]
 [!code-vb[System.Timers.Timer.Interval#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer.interval/vb/interval2.vb#1)]  
  
 <span data-ttu-id="c546e-238">Sie können den folgenden Code verwenden, um die Auflösung der Systemuhr im aktuellen System zu bestimmen:</span><span class="sxs-lookup"><span data-stu-id="c546e-238">You can use the following code to determine the resolution of the system clock on the current system:</span></span>  
  
 [!code-csharp[System.Timers.Timer.Interval#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer.interval/cs/resolution1.cs#2)]
 [!code-vb[System.Timers.Timer.Interval#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer.interval/vb/resolution1.vb#2)]  
  
 <span data-ttu-id="c546e-239">Wenn Ihre APP eine größere Auflösung als die von der <xref:System.Timers.Timer> -Klasse oder der Systemuhr angebotene erfordert, verwenden Sie die hochauflösenden multilösungs-Timer. Weitere Informationen finden [Sie unter Vorgehensweise: Verwenden Sie den Zeit Geber mit](https://msdn.microsoft.com/library/aa964692.aspx)hoher Auflösung.</span><span class="sxs-lookup"><span data-stu-id="c546e-239">If your app requires greater resolution than that offered by the <xref:System.Timers.Timer> class or the system clock, use the high-resolution multimedia timers; see [How to: Use the High-Resolution Timer](https://msdn.microsoft.com/library/aa964692.aspx).</span></span>  
  
 <span data-ttu-id="c546e-240">Wenn das Intervall festgelegt wird, <xref:System.Timers.Timer> nachdem gestartet wurde, wird die Anzahl zurückgesetzt.</span><span class="sxs-lookup"><span data-stu-id="c546e-240">If the interval is set after the <xref:System.Timers.Timer> has started, the count is reset.</span></span> <span data-ttu-id="c546e-241">Wenn Sie z. b. das Intervall auf 5 Sekunden festlegen und dann die <xref:System.Timers.Timer.Enabled%2A> -Eigenschaft `true`auf festlegen, wird die Anzahl zum <xref:System.Timers.Timer.Enabled%2A> Zeitpunkt der Festlegung von gestartet.</span><span class="sxs-lookup"><span data-stu-id="c546e-241">For example, if you set the interval to 5 seconds and then set the <xref:System.Timers.Timer.Enabled%2A> property to `true`, the count starts at the time <xref:System.Timers.Timer.Enabled%2A> is set.</span></span> <span data-ttu-id="c546e-242">Wenn Sie das Intervall auf 10 Sekunden zurücksetzen, wenn die Anzahl 3 Sekunden <xref:System.Timers.Timer.Elapsed> beträgt, wird das-Ereignis zum ersten Mal ausgelöst <xref:System.Timers.Timer.Enabled%2A> , nachdem auf `true`festgelegt wurde.</span><span class="sxs-lookup"><span data-stu-id="c546e-242">If you reset the interval to 10 seconds when count is 3 seconds, the <xref:System.Timers.Timer.Elapsed> event is raised for the first time 13 seconds after <xref:System.Timers.Timer.Enabled%2A> was set to `true`.</span></span>  
  
 <span data-ttu-id="c546e-243">Wenn <xref:System.Timers.Timer.Enabled%2A> auf `true` und auffest`false`gelegt ist ,<xref:System.Timers.Timer> löst das- Ereignisnureinmalaus,wenndasIntervalldasersteMalabläuft.<xref:System.Timers.Timer.Elapsed> <xref:System.Timers.Timer.AutoReset%2A></span><span class="sxs-lookup"><span data-stu-id="c546e-243">If <xref:System.Timers.Timer.Enabled%2A> is set to `true` and <xref:System.Timers.Timer.AutoReset%2A> is set to `false`, the <xref:System.Timers.Timer> raises the <xref:System.Timers.Timer.Elapsed> event only once, the first time the interval elapses.</span></span> <span data-ttu-id="c546e-244"><xref:System.Timers.Timer.Enabled%2A>wird dann auf `false`festgelegt.</span><span class="sxs-lookup"><span data-stu-id="c546e-244"><xref:System.Timers.Timer.Enabled%2A> is then set to `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c546e-245">Wenn <xref:System.Timers.Timer.Enabled%2A> und <xref:System.Timers.Timer.AutoReset%2A> auf <xref:System.Timers.Timer.Interval%2A> <xref:System.Timers.Timer.Elapsed> <xref:System.Timers.Timer.Enabled%2A> festgelegt sind und der Timer zuvor aktiviert wurde, bewirkt das Festlegen der-Eigenschaft, dass das-Ereignis einmal ausgelöst wird, als ob die-Eigenschaft auf festgelegt wurde. `false` `true`.</span><span class="sxs-lookup"><span data-stu-id="c546e-245">If <xref:System.Timers.Timer.Enabled%2A> and <xref:System.Timers.Timer.AutoReset%2A> are both set to `false`, and the timer has previously been enabled, setting the <xref:System.Timers.Timer.Interval%2A> property causes the <xref:System.Timers.Timer.Elapsed> event to be raised once, as if the <xref:System.Timers.Timer.Enabled%2A> property had been set to `true`.</span></span> <span data-ttu-id="c546e-246">Um das Intervall festzulegen, ohne das-Ereignis zu erhöhen, können <xref:System.Timers.Timer.Enabled%2A> Sie die `true`-Eigenschaft temporär auf festlegen, die <xref:System.Timers.Timer.Interval%2A> -Eigenschaft auf das gewünschte Zeitintervall <xref:System.Timers.Timer.Enabled%2A> festlegen und die `false`-Eigenschaft dann sofort wieder auf festlegen.</span><span class="sxs-lookup"><span data-stu-id="c546e-246">To set the interval without raising the event, you can temporarily set the <xref:System.Timers.Timer.Enabled%2A> property to `true`, set the <xref:System.Timers.Timer.Interval%2A> property to the desired time interval, and then immediately set the <xref:System.Timers.Timer.Enabled%2A> property back to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c546e-247">Das folgende Beispiel instanziiert ein <xref:System.Timers.Timer>-Objekt, das sein <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType>-Ereignis alle zwei Sekunden (2000 Millisekunden) auslöst, einen Ereignishandler für das Ereignis einrichtet und den Timer startet.</span><span class="sxs-lookup"><span data-stu-id="c546e-247">The following example instantiates a <xref:System.Timers.Timer> object that fires its <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event every two seconds (2000 milliseconds), sets up an event handler for the event, and starts the timer.</span></span> <span data-ttu-id="c546e-248">Der Ereignishandler zeigt den Wert der <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType>-Eigenschaft bei jedem Auslösen an.</span><span class="sxs-lookup"><span data-stu-id="c546e-248">The event handler displays the value of the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> property each time it is raised.</span></span>  
  
 [!code-cpp[System.Timers.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.timers.timer/cpp/timer1.cpp#1)]
 [!code-csharp[System.Timers.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/timer1.cs#1)]
 [!code-vb[System.Timers.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/timer1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c546e-249">Das Intervall ist kleiner oder gleich 0 (null).</span><span class="sxs-lookup"><span data-stu-id="c546e-249">The interval is less than or equal to zero.</span></span>  
  
<span data-ttu-id="c546e-250">- oder -</span><span class="sxs-lookup"><span data-stu-id="c546e-250">-or-</span></span> 
<span data-ttu-id="c546e-251">Das Intervall ist größer als <see cref="F:System.Int32.MaxValue" />, und der Zeitgeber ist gegenwärtig aktiviert.</span><span class="sxs-lookup"><span data-stu-id="c546e-251">The interval is greater than <see cref="F:System.Int32.MaxValue" />, and the timer is currently enabled.</span></span> <span data-ttu-id="c546e-252">(Wenn der Zeitgeber nicht gerade aktiviert ist, wird keine Ausnahme ausgelöst, bis er aktiviert wird.)</span><span class="sxs-lookup"><span data-stu-id="c546e-252">(If the timer is not currently enabled, no exception is thrown until it becomes enabled.)</span></span></exception>
        <altmember cref="P:System.Timers.Timer.AutoReset" />
        <altmember cref="P:System.Timers.Timer.Enabled" />
        <altmember cref="E:System.Timers.Timer.Elapsed" />
      </Docs>
    </Member>
    <Member MemberName="Site">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.ISite Site { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISite Site" />
      <MemberSignature Language="DocId" Value="P:System.Timers.Timer.Site" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Site As ISite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::ISite ^ Site { System::ComponentModel::ISite ^ get(); void set(System::ComponentModel::ISite ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Site : System.ComponentModel.ISite with get, set" Usage="System.Timers.Timer.Site" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c546e-253">Ruft die Site ab, die die <see cref="T:System.Timers.Timer" />-Klasse im Entwurfsmodus an ihren Container bindet, oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="c546e-253">Gets or sets the site that binds the <see cref="T:System.Timers.Timer" /> to its container in design mode.</span></span></summary>
        <value><span data-ttu-id="c546e-254">Eine <see cref="T:System.ComponentModel.ISite" />-Schnittstelle, die die Site darstellt, die das <see cref="T:System.Timers.Timer" />-Objekt an ihren Container bindet.</span><span class="sxs-lookup"><span data-stu-id="c546e-254">An <see cref="T:System.ComponentModel.ISite" /> interface representing the site that binds the <see cref="T:System.Timers.Timer" /> object to its container.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c546e-255">-Standorte binden <xref:System.ComponentModel.Component> an einen <xref:System.ComponentModel.Container> und ermöglichen die Kommunikation zwischen Ihnen und ermöglichen dem Container die Verwaltung seiner Komponenten.</span><span class="sxs-lookup"><span data-stu-id="c546e-255">Sites bind a <xref:System.ComponentModel.Component> to a <xref:System.ComponentModel.Container> and enable communication between them, as well as providing a way for the container to manage its components.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Timers.Timer.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="timer.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c546e-256">Beginnt mit dem Auslösen des <see cref="E:System.Timers.Timer.Elapsed" />-Ereignisses durch Festlegen von <see cref="P:System.Timers.Timer.Enabled" /> auf <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="c546e-256">Starts raising the <see cref="E:System.Timers.Timer.Elapsed" /> event by setting <see cref="P:System.Timers.Timer.Enabled" /> to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c546e-257">Wenn <xref:System.Timers.Timer.Start%2A> aufgerufen wird und <xref:System.Timers.Timer.AutoReset%2A> `false`auffestgelegt <xref:System.Timers.Timer> ist, löst das- Ereignisnureinmalaus,wenndasIntervalldasersteMalabläuft.<xref:System.Timers.Timer.Elapsed></span><span class="sxs-lookup"><span data-stu-id="c546e-257">If <xref:System.Timers.Timer.Start%2A> is called and <xref:System.Timers.Timer.AutoReset%2A> is set to `false`, the <xref:System.Timers.Timer> raises the <xref:System.Timers.Timer.Elapsed> event only once, the first time the interval elapses.</span></span> <span data-ttu-id="c546e-258">Wenn <xref:System.Timers.Timer.Start%2A> aufgerufen wird <xref:System.Timers.Timer.AutoReset%2A> <xref:System.Timers.Timer> und den Wert <xref:System.Timers.Timer.Elapsed> hat, löst das-Ereignis aus, wenn das Intervall das erste Mal abläuft und das-Ereignis im angegebenen Intervall weiterhin auslöst. `true`</span><span class="sxs-lookup"><span data-stu-id="c546e-258">If <xref:System.Timers.Timer.Start%2A> is called and <xref:System.Timers.Timer.AutoReset%2A> is `true`, the <xref:System.Timers.Timer> raises the <xref:System.Timers.Timer.Elapsed> event the first time the interval elapses and continues to raise the event on the specified interval.</span></span>  
  
 <span data-ttu-id="c546e-259">Sie können auch die zeitliche Steuerung starten <xref:System.Timers.Timer.Enabled%2A> , `true`indem Sie auf festlegen.</span><span class="sxs-lookup"><span data-stu-id="c546e-259">You can also start timing by setting <xref:System.Timers.Timer.Enabled%2A> to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c546e-260">Wenn <xref:System.Timers.Timer.AutoReset%2A>den Wert <xref:System.Timers.Timer.Start%2A> hat, muss die-Methode aufgerufen werden, um die Anzahl erneut zu starten. `false`</span><span class="sxs-lookup"><span data-stu-id="c546e-260">If <xref:System.Timers.Timer.AutoReset%2A> is `false`, the <xref:System.Timers.Timer.Start%2A> method must be called in order to start the count again.</span></span>  
  
 <span data-ttu-id="c546e-261">Ein Aufrufder <xref:System.Timers.Timer.Start%2A> -Methode, wenn der Timer aktiviert ist, hat keine Auswirkungen.</span><span class="sxs-lookup"><span data-stu-id="c546e-261">A call to the <xref:System.Timers.Timer.Start%2A> method when the timer is enabled has no effect.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c546e-262">Der <see cref="T:System.Timers.Timer" /> wird mit einem Intervall erstellt, das größer gleich <see cref="F:System.Int32.MaxValue" /> + 1 ist, oder auf ein Intervall kleiner als 0 (null) festgelegt.</span><span class="sxs-lookup"><span data-stu-id="c546e-262">The <see cref="T:System.Timers.Timer" /> is created with an interval equal to or greater than <see cref="F:System.Int32.MaxValue" /> + 1, or set to an interval less than zero.</span></span></exception>
        <altmember cref="P:System.Timers.Timer.Interval" />
        <altmember cref="P:System.Timers.Timer.AutoReset" />
        <altmember cref="P:System.Timers.Timer.Enabled" />
        <altmember cref="M:System.Timers.Timer.Stop" />
        <altmember cref="E:System.Timers.Timer.Elapsed" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Timers.Timer.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="timer.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c546e-263">Unterbricht das Auslösen des <see cref="E:System.Timers.Timer.Elapsed" />-Ereignisses durch Festlegen von <see cref="P:System.Timers.Timer.Enabled" /> auf <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c546e-263">Stops raising the <see cref="E:System.Timers.Timer.Elapsed" /> event by setting <see cref="P:System.Timers.Timer.Enabled" /> to <see langword="false" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c546e-264">Sie können auch die zeitliche Steuerung Abbrechen <xref:System.Timers.Timer.Enabled%2A> , `false`indem Sie auf festlegen.</span><span class="sxs-lookup"><span data-stu-id="c546e-264">You can also stop timing by setting <xref:System.Timers.Timer.Enabled%2A> to `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c546e-265">Das Signal zum Erhöhen des <xref:System.Timers.Timer.Elapsed> Ereignisses wird immer zur Ausführung in einem <xref:System.Threading.ThreadPool> Thread in die Warteschlange eingereiht, sodass die Ereignis Behandlungsmethode in einem Thread ausgeführt werden kann, wenn ein Aufruf der <xref:System.Timers.Timer.Stop%2A> -Methode in einem anderen Thread ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="c546e-265">The signal to raise the <xref:System.Timers.Timer.Elapsed> event is always queued for execution on a <xref:System.Threading.ThreadPool> thread, so the event-handling method might run on one thread at the same time that a call to the <xref:System.Timers.Timer.Stop%2A> method runs on another thread.</span></span> <span data-ttu-id="c546e-266">Dies kann dazu führen, <xref:System.Timers.Timer.Elapsed> dass das Ereignis ausgelöst wird <xref:System.Timers.Timer.Stop%2A> , nachdem die-Methode aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="c546e-266">This might result in the <xref:System.Timers.Timer.Elapsed> event being raised after the <xref:System.Timers.Timer.Stop%2A> method is called.</span></span> <span data-ttu-id="c546e-267">Das Codebeispiel im nächsten Abschnitt zeigt eine Möglichkeit, diese Racebedingung zu umgehen.</span><span class="sxs-lookup"><span data-stu-id="c546e-267">The code example in the next section shows one way to work around this race condition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c546e-268">Das folgende Beispiel instanziiert ein `System.Timers.Timer`-Objekt, das sein <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType>-Ereignis alle zwei Sekunden (2000 Millisekunden) auslöst, einen Ereignishandler für das Ereignis einrichtet und den Timer startet.</span><span class="sxs-lookup"><span data-stu-id="c546e-268">The following example instantiates a `System.Timers.Timer` object that fires its <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event every two seconds (2,000 milliseconds), sets up an event handler for the  event, and starts the timer.</span></span> <span data-ttu-id="c546e-269">Der Ereignishandler zeigt den Wert der <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType>-Eigenschaft bei jedem Auslösen an.</span><span class="sxs-lookup"><span data-stu-id="c546e-269">The event handler displays the value of the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> property each time it is raised.</span></span> <span data-ttu-id="c546e-270">Wenn der Benutzer die EINGABETASTE drückt, ruft die Anwendung die <xref:System.Timers.Timer.Stop%2A> -Methode auf, bevor die Anwendung beendet wird.</span><span class="sxs-lookup"><span data-stu-id="c546e-270">When the user presses the Enter key, the application calls the  <xref:System.Timers.Timer.Stop%2A> method before terminating the application.</span></span>  
  
 [!code-csharp[System.Timers.Timer#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/timer2a.cs#2)]
 [!code-vb[System.Timers.Timer#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/timer2a.vb#2)]  
  
 <span data-ttu-id="c546e-271">Im folgenden Codebeispiel wird eine Möglichkeit veranschaulicht, um zu verhindern, dass <xref:System.Timers.Timer.Stop%2A> der Thread, der die-Methode <xref:System.Timers.Timer.Elapsed> aufruft, fortgesetzt wird, bis ein <xref:System.Timers.Timer.Elapsed> aktuell ausgeführtes Ereignis endet, und dass zwei Ereignisse daran gehindert werden, den Ereignishandler auf dem gleichen Zeit (häufig als Reentrancy bezeichnet).</span><span class="sxs-lookup"><span data-stu-id="c546e-271">The following code example shows one way to prevent the thread that calls the <xref:System.Timers.Timer.Stop%2A> method from continuing until a currently executing <xref:System.Timers.Timer.Elapsed> event ends, and also to prevent two <xref:System.Timers.Timer.Elapsed> events from executing the event handler at the same time (often referred to as reentrancy).</span></span>  
  
 <span data-ttu-id="c546e-272">Im Beispiel werden 100 Testläufe ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="c546e-272">The example executes 100 test runs.</span></span> <span data-ttu-id="c546e-273">Jedes Mal, wenn der Test ausgeführt wird, wird der Timer mit einem Intervall von 150 Millisekunden gestartet.</span><span class="sxs-lookup"><span data-stu-id="c546e-273">Each time the test is run, the timer is started with an interval of 150 milliseconds.</span></span> <span data-ttu-id="c546e-274">Der Ereignishandler verwendet die <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> -Methode, um eine Aufgabe zu simulieren, die nach dem Zufallsprinzip zwischen 50 und 200 Millisekunden variiert.</span><span class="sxs-lookup"><span data-stu-id="c546e-274">The event handler uses the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method to simulate a task that randomly varies in length from 50 to 200 milliseconds.</span></span> <span data-ttu-id="c546e-275">Die Testmethode startet außerdem einen Steuerungs Thread, der auf eine Sekunde wartet und dann den Timer stoppt.</span><span class="sxs-lookup"><span data-stu-id="c546e-275">The test method also starts a control thread that waits for a second and then stops the timer.</span></span> <span data-ttu-id="c546e-276">Wenn ein Ereignis behandelt wird, wenn der Steuer Thread den Timer stoppt, muss der Steuerungs Thread warten, bis das Ereignis abgeschlossen ist, bevor der Vorgang fortgesetzt wird.</span><span class="sxs-lookup"><span data-stu-id="c546e-276">If an event is being handled when the control thread stops the timer, the control thread must wait until the event is finished before proceeding.</span></span>  
  
 <span data-ttu-id="c546e-277">Die <xref:System.Threading.Interlocked.CompareExchange%28System.Int32%40%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> -Methoden Überladung wird verwendet, um einen erneuten eintreten zu vermeiden und zu verhindern, dass der Steuerungs Thread fortgesetzt wird, bis ein Ausführungs Ereignis endet.</span><span class="sxs-lookup"><span data-stu-id="c546e-277">The <xref:System.Threading.Interlocked.CompareExchange%28System.Int32%40%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method overload is used to avoid reentrancy and to prevent the control thread from continuing until an executing event ends.</span></span> <span data-ttu-id="c546e-278">Der Ereignishandler verwendet die <xref:System.Threading.Interlocked.CompareExchange%28System.Int32%40%2CSystem.Int32%2CSystem.Int32%29> -Methode, um eine Steuerelement Variable auf 1 festzulegen, aber nur, wenn der Wert momentan 0 (null) ist.</span><span class="sxs-lookup"><span data-stu-id="c546e-278">The event handler uses the <xref:System.Threading.Interlocked.CompareExchange%28System.Int32%40%2CSystem.Int32%2CSystem.Int32%29> method to set a control variable to 1, but only if the value is currently zero.</span></span> <span data-ttu-id="c546e-279">Dies ist ein atomarer Vorgang.</span><span class="sxs-lookup"><span data-stu-id="c546e-279">This is an atomic operation.</span></span> <span data-ttu-id="c546e-280">Wenn der Rückgabewert 0 (null) ist, wurde die Steuerungs Variable auf 1 festgelegt, und der Ereignishandler wird fortgesetzt.</span><span class="sxs-lookup"><span data-stu-id="c546e-280">If the return value is zero, the control variable has been set to 1 and the event handler proceeds.</span></span> <span data-ttu-id="c546e-281">Wenn der Rückgabewert ungleich 0 (null) ist, wird das Ereignis einfach verworfen, um einen erneuten eintreten zu vermeiden.</span><span class="sxs-lookup"><span data-stu-id="c546e-281">If the return value is non-zero, the event is simply discarded to avoid reentrancy.</span></span> <span data-ttu-id="c546e-282">(Wenn es notwendig wäre, jedes Ereignis auszuführen, wäre <xref:System.Threading.Monitor> die Klasse eine bessere Möglichkeit, die Ereignisse zu synchronisieren.) Wenn der Ereignishandler beendet wird, wird die Steuerelement Variable auf 0 (null) zurückgesetzt.</span><span class="sxs-lookup"><span data-stu-id="c546e-282">(If it were necessary to execute every event, the <xref:System.Threading.Monitor> class would be a better way to synchronize the events.) When the event handler ends, it sets the control variable back to zero.</span></span> <span data-ttu-id="c546e-283">Im Beispiel wird die Gesamtzahl der ausgeführten Ereignisse aufgezeichnet, die aufgrund eines erneuten Eintretens verworfen wurden und nach dem Aufrufen <xref:System.Timers.Timer.Stop%2A> der-Methode aufgetreten sind.</span><span class="sxs-lookup"><span data-stu-id="c546e-283">The example records the total number of events that executed, that were discarded because of reentrancy, and that occurred after the <xref:System.Timers.Timer.Stop%2A> method was called.</span></span>  
  
 <span data-ttu-id="c546e-284">Der Steuerungs Thread verwendet die <xref:System.Threading.Interlocked.CompareExchange%28System.Int32%40%2CSystem.Int32%2CSystem.Int32%29> -Methode, um die Steuerelement Variable auf-1 (minus 1) festzulegen, aber nur, wenn der Wert momentan 0 (null) ist.</span><span class="sxs-lookup"><span data-stu-id="c546e-284">The control thread uses the <xref:System.Threading.Interlocked.CompareExchange%28System.Int32%40%2CSystem.Int32%2CSystem.Int32%29> method to set the control variable to -1 (minus one), but only if the value is currently zero.</span></span> <span data-ttu-id="c546e-285">Wenn die atomarische Operation einen Wert ungleich 0 (null) zurückgibt, wird zurzeit ein Ereignis ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="c546e-285">If the atomic operation returns non-zero, an event is currently executing.</span></span> <span data-ttu-id="c546e-286">Der Steuerungs Thread wartet und versucht es erneut.</span><span class="sxs-lookup"><span data-stu-id="c546e-286">The control thread waits and tries again.</span></span> <span data-ttu-id="c546e-287">Im Beispiel wird aufgezeichnet, wie oft der Steuerungs Thread auf den Abschluss eines Ereignisses warten musste.</span><span class="sxs-lookup"><span data-stu-id="c546e-287">The example records the number of times the control thread had to wait for an event to finish.</span></span>  
  
 [!code-csharp[Timer.Stop#1](~/samples/snippets/csharp/VS_Snippets_CLR/Timer.Stop/CS/source.cs#1)]
 [!code-vb[Timer.Stop#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Timer.Stop/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Timers.Timer.Enabled" />
        <altmember cref="M:System.Timers.Timer.Start" />
        <altmember cref="E:System.Timers.Timer.Elapsed" />
      </Docs>
    </Member>
    <Member MemberName="SynchronizingObject">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ISynchronizeInvoke SynchronizingObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISynchronizeInvoke SynchronizingObject" />
      <MemberSignature Language="DocId" Value="P:System.Timers.Timer.SynchronizingObject" />
      <MemberSignature Language="VB.NET" Value="Public Property SynchronizingObject As ISynchronizeInvoke" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::ISynchronizeInvoke ^ SynchronizingObject { System::ComponentModel::ISynchronizeInvoke ^ get(); void set(System::ComponentModel::ISynchronizeInvoke ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SynchronizingObject : System.ComponentModel.ISynchronizeInvoke with get, set" Usage="System.Timers.Timer.SynchronizingObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Timers.TimersDescription("The object used to marshal the event handler calls issued when an interval has elapsed.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.Timers.TimersDescription("TimerSynchronizingObject")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISynchronizeInvoke</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c546e-288">Ruft das Objekt ab, das zum Marshallen von Ereignishandleraufrufen verwendet wird, die nach Ablauf eines Intervalls ausgegeben werden, oder legt dieses fest.</span><span class="sxs-lookup"><span data-stu-id="c546e-288">Gets or sets the object used to marshal event-handler calls that are issued when an interval has elapsed.</span></span></summary>
        <value><span data-ttu-id="c546e-289">Die <see cref="T:System.ComponentModel.ISynchronizeInvoke" />-Schnittstelle, die das Objekt zum Marshallen von Ereignishandleraufrufen darstellt, die nach Ablauf eines Intervalls ausgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="c546e-289">The <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> representing the object used to marshal the event-handler calls that are issued when an interval has elapsed.</span></span> <span data-ttu-id="c546e-290">Der Standardwert ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c546e-290">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c546e-291">Wenn <xref:System.Timers.Timer.SynchronizingObject%2A>den Wert <xref:System.Timers.Timer.Elapsed> hat, wird die Methode, die das Ereignis behandelt, in einem Thread aus dem System Thread Pool aufgerufen. `null`</span><span class="sxs-lookup"><span data-stu-id="c546e-291">When <xref:System.Timers.Timer.SynchronizingObject%2A> is `null`, the method that handles the <xref:System.Timers.Timer.Elapsed> event is called on a thread from the system-thread pool.</span></span> <span data-ttu-id="c546e-292">Weitere Informationen zu System Thread Pools finden <xref:System.Threading.ThreadPool>Sie unter.</span><span class="sxs-lookup"><span data-stu-id="c546e-292">For more information on system-thread pools, see <xref:System.Threading.ThreadPool>.</span></span>  
  
 <span data-ttu-id="c546e-293">Wenn das <xref:System.Timers.Timer.Elapsed> Ereignis von einer Visual Windows Forms-Komponente behandelt wird, z. b. einer Schaltfläche, kann der Zugriff auf die Komponente über den System Thread Pool zu einer Ausnahme führen oder funktioniert nicht.</span><span class="sxs-lookup"><span data-stu-id="c546e-293">When the <xref:System.Timers.Timer.Elapsed> event is handled by a visual Windows Forms component, such as a button, accessing the component through the system-thread pool might result in an exception or just might not work.</span></span> <span data-ttu-id="c546e-294">Vermeiden Sie diesen Effekt, <xref:System.Timers.Timer.SynchronizingObject%2A> indem Sie auf eine Windows Forms Komponente festlegen, die bewirkt, dass <xref:System.Timers.Timer.Elapsed> die Methode, die das Ereignis behandelt, für denselben Thread aufgerufen wird, auf dem die Komponente erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="c546e-294">Avoid this effect by setting <xref:System.Timers.Timer.SynchronizingObject%2A> to a Windows Forms component, which causes the method that handles the <xref:System.Timers.Timer.Elapsed> event to be called on the same thread that the component was created on.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c546e-295">Auch wenn die <xref:System.Timers.Timer.SynchronizingObject%2A> -Eigenschaft nicht `null`ist <xref:System.Timers.Timer.Elapsed> , können Ereignisse auftreten, <xref:System.Timers.Timer.Dispose%2A> nachdem <xref:System.Timers.Timer.Stop%2A> die-Methode oder die-Methode <xref:System.Timers.Timer.Enabled%2A> aufgerufen wurde, oder nachdem `false`die-Eigenschaft auf festgelegt wurde, da das Signal ausgelöst wird. Das <xref:System.Timers.Timer.Elapsed> Ereignis wird immer zur Ausführung in einem Thread Pool Thread in die Warteschlange eingereiht.</span><span class="sxs-lookup"><span data-stu-id="c546e-295">Even if the <xref:System.Timers.Timer.SynchronizingObject%2A> property is not `null`, <xref:System.Timers.Timer.Elapsed> events can occur after the <xref:System.Timers.Timer.Dispose%2A> or <xref:System.Timers.Timer.Stop%2A> method has been called or after the <xref:System.Timers.Timer.Enabled%2A> property has been set to `false`, because the signal to raise the <xref:System.Timers.Timer.Elapsed> event is always queued for execution on a thread pool thread.</span></span> <span data-ttu-id="c546e-296">Eine Möglichkeit, diese Racebedingung aufzulösen, besteht darin, ein Flag zu setzen, das den Ereignishandler für das <xref:System.Timers.Timer.Elapsed>-Ereignis anweist, nachfolgende Ereignisse zu ignorieren.</span><span class="sxs-lookup"><span data-stu-id="c546e-296">One way to resolve this race condition is to set a flag that tells the event handler for the <xref:System.Timers.Timer.Elapsed> event to ignore subsequent events.</span></span>  
  
 <span data-ttu-id="c546e-297">Wenn in Visual Studio in einem Windows Forms-Designer verwendet <xref:System.Timers.Timer.SynchronizingObject%2A> <xref:System.Timers.Timer>wird,wird automatisch auf das Steuerelement festgelegt, das das enthält. <xref:System.Timers.Timer></span><span class="sxs-lookup"><span data-stu-id="c546e-297">If the <xref:System.Timers.Timer> is used inside Visual Studio in a Windows Forms designer, <xref:System.Timers.Timer.SynchronizingObject%2A> is automatically set to the control that contains the <xref:System.Timers.Timer>.</span></span> <span data-ttu-id="c546e-298">Wenn Sie z. b. ein <xref:System.Timers.Timer> -Objekt in einem `Form1` Designer für (das von <xref:System.Windows.Forms.Form>erbt) <xref:System.Timers.Timer.SynchronizingObject%2A> platzieren, <xref:System.Timers.Timer> wird die-Eigenschaft von auf `Form1`die Instanz von festgelegt.</span><span class="sxs-lookup"><span data-stu-id="c546e-298">For example, if you place a <xref:System.Timers.Timer> on a designer for `Form1` (which inherits from <xref:System.Windows.Forms.Form>), the <xref:System.Timers.Timer.SynchronizingObject%2A> property of <xref:System.Timers.Timer> is set to the instance of `Form1`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c546e-299">Das folgende Beispiel ist eine Windows Forms-APP, die als sehr einfacher Textdatei-Editor fungiert.</span><span class="sxs-lookup"><span data-stu-id="c546e-299">The following example is a Windows Forms app that serves as a very simple text file editor.</span></span> <span data-ttu-id="c546e-300">Wenn der Text im Textfeld nicht gespeichert wurde, wird der Benutzer von der app in Intervallen von einer Minute gefragt, ob er den Inhalt des Textfelds speichern möchte.</span><span class="sxs-lookup"><span data-stu-id="c546e-300">When the text in the text box has not been saved, the app asks the user at one-minute intervals whether he or she wants to save the contents of the text box.</span></span>  <span data-ttu-id="c546e-301">Zu diesem Zweck wird die <xref:System.Timers.Timer.Interval%2A> -Eigenschaft auf eine Minute (60.000 Millisekunden) festgelegt, und <xref:System.Timers.Timer.SynchronizingObject%2A> die-Eigenschaft wird auf <xref:System.Windows.Forms.Form> das-Objekt festgelegt.</span><span class="sxs-lookup"><span data-stu-id="c546e-301">To do this, the <xref:System.Timers.Timer.Interval%2A> property is set to one minute (60,000 milliseconds), and the <xref:System.Timers.Timer.SynchronizingObject%2A> property is set to the <xref:System.Windows.Forms.Form> object.</span></span>  
  
 [!code-csharp[System.Timers.Timer.SynchronizingObject#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Timers.Timer.SynchronizingObject/cs/Form1.cs#1)]
 [!code-vb[System.Timers.Timer.SynchronizingObject#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Timers.Timer.SynchronizingObject/vb/Form1.vb#1)]  
  
 <span data-ttu-id="c546e-302">Das Beispiel erfordert, dass Sie dem Formular die folgenden Steuerelemente hinzufügen:</span><span class="sxs-lookup"><span data-stu-id="c546e-302">The example requires that you add the following controls to the form:</span></span>  
  
-   <span data-ttu-id="c546e-303">Ein <xref:System.Windows.Forms.TextBox> -Steuer `TextBox1` Element namens (seinen Standardnamen).</span><span class="sxs-lookup"><span data-stu-id="c546e-303">A <xref:System.Windows.Forms.TextBox> control named `TextBox1` (its default name).</span></span>  
  
-   <span data-ttu-id="c546e-304">Ein <xref:System.Windows.Forms.Button> -Steuer `Button1` Element namens (seinen Standardnamen).</span><span class="sxs-lookup"><span data-stu-id="c546e-304">A <xref:System.Windows.Forms.Button> control named `Button1` (its default name).</span></span>  
  
-   <span data-ttu-id="c546e-305">Ein <xref:System.Windows.Forms.SaveFileDialog> -Steuer `SaveSaveFileDialog1` Element namens (seinen Standardnamen).</span><span class="sxs-lookup"><span data-stu-id="c546e-305">A <xref:System.Windows.Forms.SaveFileDialog> control named `SaveSaveFileDialog1` (its default name) .</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Form" />
        <altmember cref="T:System.ComponentModel.ISynchronizeInvoke" />
        <altmember cref="T:System.Threading.ThreadPool" />
        <altmember cref="E:System.Timers.Timer.Elapsed" />
      </Docs>
    </Member>
  </Members>
</Type>
