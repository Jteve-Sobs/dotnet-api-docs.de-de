<Type Name="ContractHandle" FullName="System.AddIn.Pipeline.ContractHandle">
  <TypeSignature Language="C#" Value="public class ContractHandle : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContractHandle extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Pipeline.ContractHandle" />
  <TypeSignature Language="VB.NET" Value="Public Class ContractHandle&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContractHandle : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="c41f4-101">Stellt Methoden bereit, die die Lebensdauer eines Add-Ins steuern.</span><span class="sxs-lookup"><span data-stu-id="c41f4-101">Provides methods that control the lifetime of an add-in.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c41f4-102">Da das Add-In Modell die Möglichkeit für die Kommunikation zwischen Anwendungsdomänen und Prozesse-Add-ins bereitstellt, kann nicht es sie bei der Garbage collection abhängig.</span><span class="sxs-lookup"><span data-stu-id="c41f4-102">Because the add-in model provides the ability for add-ins to communicate between application domains and between processes, it cannot rely on the garbage collector to reclaim them.</span></span> <span data-ttu-id="c41f4-103">Diese Klasse stellt eine verweiszählung Mechanismus für das Add-in Bezug eines Tokens Lebensdauer ihren Vertrag.</span><span class="sxs-lookup"><span data-stu-id="c41f4-103">This class provides a reference counting mechanism for the add-in by obtaining a lifetime token to its contract.</span></span>  
  
 <span data-ttu-id="c41f4-104">Wenn eine <xref:System.AddIn.Pipeline.ContractHandle> Objekt erstellt wurde, ruft er die <xref:System.AddIn.Pipeline.ContractBase.AcquireLifetimeToken%2A> Methode für den Vertrag, der an den Konstruktor übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="c41f4-104">When a <xref:System.AddIn.Pipeline.ContractHandle> object is constructed, it calls the <xref:System.AddIn.Pipeline.ContractBase.AcquireLifetimeToken%2A> method on the contract that is passed to the constructor.</span></span> <span data-ttu-id="c41f4-105">Wenn die <xref:System.AddIn.Pipeline.ContractHandle> Objekt freigegeben oder beendet wird, ruft es die <xref:System.AddIn.Pipeline.ContractBase.RevokeLifetimeToken%2A> Methode für den Vertrag, die die für den Vertrag aufhebt.</span><span class="sxs-lookup"><span data-stu-id="c41f4-105">When the <xref:System.AddIn.Pipeline.ContractHandle> object is disposed or finalized, it calls the <xref:System.AddIn.Pipeline.ContractBase.RevokeLifetimeToken%2A> method on the contract, which removes its hold on the contract.</span></span>  
  
 <span data-ttu-id="c41f4-106">Adapter implementieren den Vertrag.</span><span class="sxs-lookup"><span data-stu-id="c41f4-106">Adapters implement the contract.</span></span> <span data-ttu-id="c41f4-107">Die <xref:System.AddIn.Pipeline.ContractHandle> Klasse, damit Pipelineentwickler auf Verwalten der Lebensdauer des Vertrags, die angepasst wird, wird in einem Vertrag-zu-Ansicht-Adapter verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="c41f4-107">The <xref:System.AddIn.Pipeline.ContractHandle> class is designed to be used in a contract-to-view adapter to help pipeline developers manage the lifetime of the contract that is being adapted.</span></span> <span data-ttu-id="c41f4-108">In der Regel wird eine Instanz dieser Klasse wird während der Erstellung der Adapterklasse instanziiert und befindet sich in einem Instanzfeld des Adapters.</span><span class="sxs-lookup"><span data-stu-id="c41f4-108">Typically, an instance of this class is instantiated during the construction of the adapter class and is stored in an instance field of the adapter.</span></span> <span data-ttu-id="c41f4-109">Wenn die Adapterklasse Garbage Collection ist die <xref:System.AddIn.Pipeline.ContractHandle> Objekt auch gesammelt werden und die <xref:System.AddIn.Pipeline.ContractHandle> Objekt wird die Lebensdauertoken für den Vertrag zu widerrufen.</span><span class="sxs-lookup"><span data-stu-id="c41f4-109">When the adapter class is garbage-collected, the <xref:System.AddIn.Pipeline.ContractHandle> object will also be collected and the <xref:System.AddIn.Pipeline.ContractHandle> object will revoke the lifetime token on the contract.</span></span>  
  
 <span data-ttu-id="c41f4-110">Es wird empfohlen, dass Ihre Ansicht-zu-Vertrag-Adapter von erben die <xref:System.AddIn.Pipeline.ContractBase> Klasse.</span><span class="sxs-lookup"><span data-stu-id="c41f4-110">It is recommended that your view-to-contract adapters inherit from the <xref:System.AddIn.Pipeline.ContractBase> class.</span></span> <span data-ttu-id="c41f4-111">Anschließend können Sie eine Standardimplementierung für die Mitglieder der <xref:System.AddIn.Contract.IContract>, was bedeutet, müssen Sie nur die Elemente für den bestimmten Vertrag implementieren.</span><span class="sxs-lookup"><span data-stu-id="c41f4-111">You can then use a default implementation for the members of <xref:System.AddIn.Contract.IContract>, which means you need to implement only the members of your specific contract.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c41f4-112">Im folgende Beispiel wird gezeigt, wie die Lebensdauer-Tokenhandle in einem Vertrag-zu-Ansicht-Adapter auf der Add-in-Seite einer Pipeline festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="c41f4-112">The following example shows how to set the lifetime token handle in a contract-to-view adapter on the add-in side of a pipeline.</span></span>  
  
 [!code-csharp[AddinP2HostSideAdapters#2](~/samples/snippets/csharp/VS_Snippets_CLR/AddInP2HostSideAdapters/cs/Calc2ContractToViewHostSideAdapter.cs#2)]
 [!code-vb[AddinP2HostSideAdapters#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AddInP2HostSideAdapters/vb/Calc2ContractToViewHostSideAdapter.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContractHandle (System.AddIn.Contract.IContract contract);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.AddIn.Contract.IContract contract) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractHandle.#ctor(System.AddIn.Contract.IContract)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contract As IContract)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContractHandle(System::AddIn::Contract::IContract ^ contract);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contract" Type="System.AddIn.Contract.IContract" />
      </Parameters>
      <Docs>
        <param name="contract"><span data-ttu-id="c41f4-113">Der Vertrag, der in der Pipeline verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="c41f4-113">The contract to use in the pipeline.</span></span></param>
        <summary><span data-ttu-id="c41f4-114">Initialisiert eine neue Instanz der <see cref="T:System.AddIn.Pipeline.ContractHandle" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="c41f4-114">Initializes a new instance of the <see cref="T:System.AddIn.Pipeline.ContractHandle" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c41f4-115"><paramref name="contract" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c41f4-115"><paramref name="contract" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AppDomainOwner">
      <MemberSignature Language="C#" Value="public static System.AddIn.Contract.IContract AppDomainOwner (AppDomain domain);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.AddIn.Contract.IContract AppDomainOwner(class System.AppDomain domain) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractHandle.AppDomainOwner(System.AppDomain)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AppDomainOwner (domain As AppDomain) As IContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::AddIn::Contract::IContract ^ AppDomainOwner(AppDomain ^ domain);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.IContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
      </Parameters>
      <Docs>
        <param name="domain"><span data-ttu-id="c41f4-116">Die zu überprüfende Anwendungsdomäne.</span><span class="sxs-lookup"><span data-stu-id="c41f4-116">The application domain to check.</span></span></param>
        <summary><span data-ttu-id="c41f4-117">Ruft die Instanz des Adapters auf Add-In-Seite bei Erstellung der Anwendungsdomäne ab.</span><span class="sxs-lookup"><span data-stu-id="c41f4-117">Gets the instance of the add-in-side adapter when the application domain was created.</span></span></summary>
        <returns><span data-ttu-id="c41f4-118">Ein <see cref="T:System.AddIn.Contract.IContract" />-Objekt, das den Besitzer der Anwendungsdomäne darstellt.</span><span class="sxs-lookup"><span data-stu-id="c41f4-118">An <see cref="T:System.AddIn.Contract.IContract" /> object that represents the owner of the application domain.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c41f4-119">Die Add-In-seitiger Adapter typisiert werden, als <xref:System.AddIn.Contract.IContract>.</span><span class="sxs-lookup"><span data-stu-id="c41f4-119">The add-in-side adapters are typed as <xref:System.AddIn.Contract.IContract>.</span></span>  
  
 <span data-ttu-id="c41f4-120">Wenn die Anwendungsdomäne zuvor von einem Benutzer erstellt wurde, ist kein Besitzer.</span><span class="sxs-lookup"><span data-stu-id="c41f4-120">If the application domain was previously created by a user, there is no owner.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c41f4-121"><paramref name="domain" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c41f4-121"><paramref name="domain" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Contract">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.IContract Contract { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.AddIn.Contract.IContract Contract" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Pipeline.ContractHandle.Contract" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Contract As IContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::AddIn::Contract::IContract ^ Contract { System::AddIn::Contract::IContract ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.IContract</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c41f4-122">Ruft den von einer Pipeline verwendeten Vertrag ab.</span><span class="sxs-lookup"><span data-stu-id="c41f4-122">Gets the contract used by a pipeline.</span></span></summary>
        <value><span data-ttu-id="c41f4-123">Der von <see cref="T:System.AddIn.Contract.IContract" /> abgeleitete Vertrag.</span><span class="sxs-lookup"><span data-stu-id="c41f4-123">The contract, which is derived from <see cref="T:System.AddIn.Contract.IContract" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractOwnsAppDomain">
      <MemberSignature Language="C#" Value="public static bool ContractOwnsAppDomain (System.AddIn.Contract.IContract contract, AppDomain domain);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContractOwnsAppDomain(class System.AddIn.Contract.IContract contract, class System.AppDomain domain) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractHandle.ContractOwnsAppDomain(System.AddIn.Contract.IContract,System.AppDomain)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContractOwnsAppDomain (contract As IContract, domain As AppDomain) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContractOwnsAppDomain(System::AddIn::Contract::IContract ^ contract, AppDomain ^ domain);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.AddIn.Contract.IContract" />
        <Parameter Name="domain" Type="System.AppDomain" />
      </Parameters>
      <Docs>
        <param name="contract"><span data-ttu-id="c41f4-124">Der zu überprüfende Vertrag.</span><span class="sxs-lookup"><span data-stu-id="c41f4-124">The contract to check.</span></span></param>
        <param name="domain"><span data-ttu-id="c41f4-125">Die zu überprüfende Anwendungsdomäne.</span><span class="sxs-lookup"><span data-stu-id="c41f4-125">The application domain to check.</span></span></param>
        <summary><span data-ttu-id="c41f4-126">Bestimmt, ob eine Anwendungsdomäne dem angegebenen Vertrag gehört.</span><span class="sxs-lookup"><span data-stu-id="c41f4-126">Determines whether an application domain is owned by the specified contract.</span></span></summary>
        <returns>
          <span data-ttu-id="c41f4-127"><see langword="true" />, wenn der Vertrag die Anwendungsdomäne besitzt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c41f4-127"><see langword="true" /> if the contract owns the application domain; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c41f4-128"><paramref name="contract" /> oder <paramref name="domain" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c41f4-128"><paramref name="contract" /> or <paramref name="domain" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c41f4-129">Widerruft das Lebensdauertoken für einen Vertrag.</span><span class="sxs-lookup"><span data-stu-id="c41f4-129">Revokes the lifetime token on a contract.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractHandle.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c41f4-130">Widerruft das Lebensdauertoken für einen Vertrag unabhängig von der Eingabe.</span><span class="sxs-lookup"><span data-stu-id="c41f4-130">Revokes the lifetime token on a contract, regardless of input.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractHandle.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="c41f4-131"><see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</span><span class="sxs-lookup"><span data-stu-id="c41f4-131"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="c41f4-132">Widerruft das Lebensdauertoken für den Vertrag unabhängig von der Eingabe und gibt optional die verwalteten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="c41f4-132">Revokes the lifetime token on the contract regardless of input and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ContractHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractHandle.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ContractHandle ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c41f4-133">Gibt die der <see cref="T:System.AddIn.Pipeline.ContractHandle" />-Instanz zugeordneten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="c41f4-133">Releases the resources associated with the <see cref="T:System.AddIn.Pipeline.ContractHandle" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c41f4-134">Diese Methode überschreibt <xref:System.Object.Finalize%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c41f4-134">This method overrides <xref:System.Object.Finalize%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="c41f4-135">Diese Methode sollte nicht von Anwendungscode aufgerufen werden. ein Objekt <xref:System.AddIn.Pipeline.ContractHandle.Finalize%2A> Methode wird automatisch während der Garbagecollection aufgerufen, durch einen Aufruf von seiner Finalisierung verfolgt, durch den Garbage Collector deaktiviert wurde die <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="c41f4-135">Application code should not call this method; an object's <xref:System.AddIn.Pipeline.ContractHandle.Finalize%2A> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="c41f4-136">Wenn vom Garbage Collector aufgerufen, um diese Methode ruft die <xref:System.AddIn.Pipeline.ContractHandle.Dispose%28System.Boolean%29> Methode.</span><span class="sxs-lookup"><span data-stu-id="c41f4-136">When called by the garbage collector, this method calls the <xref:System.AddIn.Pipeline.ContractHandle.Dispose%28System.Boolean%29> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>