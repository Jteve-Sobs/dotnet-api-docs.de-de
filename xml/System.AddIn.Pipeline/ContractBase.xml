<Type Name="ContractBase" FullName="System.AddIn.Pipeline.ContractBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="97f9f9b50a43fa3d050918154b35d9f1e2455110" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48667256" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ContractBase : MarshalByRefObject, System.AddIn.Contract.IContract, System.Runtime.Remoting.Lifetime.ISponsor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContractBase extends System.MarshalByRefObject implements class System.AddIn.Contract.IContract, class System.Runtime.Remoting.Lifetime.ISponsor" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Pipeline.ContractBase" />
  <TypeSignature Language="VB.NET" Value="Public Class ContractBase&#xA;Inherits MarshalByRefObject&#xA;Implements IContract, ISponsor" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContractBase : MarshalByRefObject, System::AddIn::Contract::IContract, System::Runtime::Remoting::Lifetime::ISponsor" />
  <TypeSignature Language="F#" Value="type ContractBase = class&#xA;    inherit MarshalByRefObject&#xA;    interface IContract&#xA;    interface ISponsor" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Lifetime.ISponsor</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Stellt eine Standardimplementierung von <see cref="T:System.AddIn.Contract.IContract" />-Membern bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verträge definieren die Typen und Methoden, die vom Host und das Add-in verwendet. Alle Verträge müssen abgeleitet <xref:System.AddIn.Contract.IContract>. Diese Klasse stellt die Standardimplementierung von <xref:System.AddIn.Contract.IContract> Member.  
  
 ]]></format>
    </remarks>
    <related type="Article" href="http://msdn.microsoft.com/library/8dd45b02-7218-40f9-857d-40d7b98b850b">Add-Ins und Erweiterbarkeit</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContractBase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContractBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.AddIn.Pipeline.ContractBase" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcquireLifetimeToken">
      <MemberSignature Language="C#" Value="public int AcquireLifetimeToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 AcquireLifetimeToken() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractBase.AcquireLifetimeToken" />
      <MemberSignature Language="VB.NET" Value="Public Function AcquireLifetimeToken () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int AcquireLifetimeToken();" />
      <MemberSignature Language="F#" Value="abstract member AcquireLifetimeToken : unit -&gt; int&#xA;override this.AcquireLifetimeToken : unit -&gt; int" Usage="contractBase.AcquireLifetimeToken " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.AddIn.Contract.IContract.AcquireLifetimeToken</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft ein Lebensdauertoken ab.</summary>
        <returns>Eine Zufallszahl, die ein Token identifiziert.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Alle zuvor abgerufenen Token wurden widerrufen.  Es sind weiteren Token verfügbar.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRemoteHashCode">
      <MemberSignature Language="C#" Value="public virtual int GetRemoteHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetRemoteHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractBase.GetRemoteHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRemoteHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetRemoteHashCode();" />
      <MemberSignature Language="F#" Value="abstract member GetRemoteHashCode : unit -&gt; int&#xA;override this.GetRemoteHashCode : unit -&gt; int" Usage="contractBase.GetRemoteHashCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.AddIn.Contract.IContract.GetRemoteHashCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft den Hashcode für das aktuelle <see cref="T:System.AddIn.Pipeline.ContractBase" />-Objekt ab.</summary>
        <returns>Ein Hashcode für das aktuelle <see cref="T:System.AddIn.Pipeline.ContractBase" />-Objekt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFinalRevoke">
      <MemberSignature Language="C#" Value="protected virtual void OnFinalRevoke ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFinalRevoke() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractBase.OnFinalRevoke" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFinalRevoke ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFinalRevoke();" />
      <MemberSignature Language="F#" Value="abstract member OnFinalRevoke : unit -&gt; unit&#xA;override this.OnFinalRevoke : unit -&gt; unit" Usage="contractBase.OnFinalRevoke " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt beim Überschreiben in einem Adapter des Add-Ins systemeigene, im Adapter enthaltene Ressourcen frei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird vom System aufgerufen, wenn die während die Lebensdauer, die Token wurden abgerufen wurde, aus dem aktuellen <xref:System.AddIn.Pipeline.ContractBase> Instanz wurden widerrufen. Verwenden Sie diese Methode, um keine systemeigenen Ressourcen frei, die vom Adapter zu bereinigen und um den angepassten Ansichten zu signalisieren, dass sie dasselbe ausführen soll.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContract">
      <MemberSignature Language="C#" Value="public virtual System.AddIn.Contract.IContract QueryContract (string contractIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.IContract QueryContract(string contractIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractBase.QueryContract(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function QueryContract (contractIdentifier As String) As IContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::AddIn::Contract::IContract ^ QueryContract(System::String ^ contractIdentifier);" />
      <MemberSignature Language="F#" Value="abstract member QueryContract : string -&gt; System.AddIn.Contract.IContract&#xA;override this.QueryContract : string -&gt; System.AddIn.Contract.IContract" Usage="contractBase.QueryContract contractIdentifier" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.AddIn.Contract.IContract.QueryContract(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.IContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contractIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contractIdentifier">Der vollständige Name des Vertrags einschließlich des Assemblynamens.</param>
        <summary>Reflektiert über die Instanz eines Vertrags und gibt den <see langword="this" />-Zeiger zurück, wenn das aktuelle Objekt diesen Vertrag implementiert.</summary>
        <returns>Der <see langword="this" />-Zeiger auf eine <see cref="T:System.AddIn.Contract.IContract" />-Schnittstelle oder <see langword="null" />, wenn der Vertrag nicht implementiert ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode kann überschrieben werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="contractIdentifier" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoteEquals">
      <MemberSignature Language="C#" Value="public virtual bool RemoteEquals (System.AddIn.Contract.IContract contract);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RemoteEquals(class System.AddIn.Contract.IContract contract) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractBase.RemoteEquals(System.AddIn.Contract.IContract)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoteEquals (contract As IContract) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool RemoteEquals(System::AddIn::Contract::IContract ^ contract);" />
      <MemberSignature Language="F#" Value="abstract member RemoteEquals : System.AddIn.Contract.IContract -&gt; bool&#xA;override this.RemoteEquals : System.AddIn.Contract.IContract -&gt; bool" Usage="contractBase.RemoteEquals contract" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.AddIn.Contract.IContract.RemoteEquals(System.AddIn.Contract.IContract)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.AddIn.Contract.IContract" />
      </Parameters>
      <Docs>
        <param name="contract">Das Objekt, das auf Gleichheit mit dem Remoteobjekt überprüft werden soll.</param>
        <summary>Vergleicht ein Objekt auf Gleichheit mit einem Remoteobjekt.</summary>
        <returns>
          <see langword="true" />, wenn das Objekt gleich dem Remoteobjekt ist, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteToString">
      <MemberSignature Language="C#" Value="public virtual string RemoteToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string RemoteToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractBase.RemoteToString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoteToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ RemoteToString();" />
      <MemberSignature Language="F#" Value="abstract member RemoteToString : unit -&gt; string&#xA;override this.RemoteToString : unit -&gt; string" Usage="contractBase.RemoteToString " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.AddIn.Contract.IContract.RemoteToString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft eine Zeichenfolge ab, die ein Remoteobjekt identifiziert.</summary>
        <returns>Eine Zeichenfolge, die das Remoteobjekt identifiziert.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Renewal">
      <MemberSignature Language="C#" Value="public TimeSpan Renewal (System.Runtime.Remoting.Lifetime.ILease lease);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TimeSpan Renewal(class System.Runtime.Remoting.Lifetime.ILease lease) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractBase.Renewal(System.Runtime.Remoting.Lifetime.ILease)" />
      <MemberSignature Language="VB.NET" Value="Public Function Renewal (lease As ILease) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TimeSpan Renewal(System::Runtime::Remoting::Lifetime::ILease ^ lease);" />
      <MemberSignature Language="F#" Value="abstract member Renewal : System.Runtime.Remoting.Lifetime.ILease -&gt; TimeSpan&#xA;override this.Renewal : System.Runtime.Remoting.Lifetime.ILease -&gt; TimeSpan" Usage="contractBase.Renewal lease" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lease" Type="System.Runtime.Remoting.Lifetime.ILease" />
      </Parameters>
      <Docs>
        <param name="lease">Das Lebensdauerlease-Objekt, das vom Remoting-Lebensdauerdienst verwendet wird.</param>
        <summary>Fordert von einem Sponsorclient eine Erneuerung des Lease für das angegebene Objekt an.</summary>
        <returns>Der erneuerte Lease.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="lease" /> ist <see langword="null" />.</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">für volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer. Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden.</permission>
      </Docs>
    </Member>
    <Member MemberName="RevokeLifetimeToken">
      <MemberSignature Language="C#" Value="public void RevokeLifetimeToken (int token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RevokeLifetimeToken(int32 token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractBase.RevokeLifetimeToken(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RevokeLifetimeToken (token As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RevokeLifetimeToken(int token);" />
      <MemberSignature Language="F#" Value="abstract member RevokeLifetimeToken : int -&gt; unit&#xA;override this.RevokeLifetimeToken : int -&gt; unit" Usage="contractBase.RevokeLifetimeToken token" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.AddIn.Contract.IContract.RevokeLifetimeToken(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="token">Die Tokennummer.</param>
        <summary>Entfernt das angegebene Token aus der Liste ausstehender Lebensdauertoken.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn das Token nicht in der Liste ausstehender Lebensdauertoken ist, löst diese Methode eine <xref:System.InvalidOperationException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="token" /> wurde in der Liste ausstehender Lebensdauertoken nicht gefunden.</exception>
      </Docs>
    </Member>
  </Members>
</Type>