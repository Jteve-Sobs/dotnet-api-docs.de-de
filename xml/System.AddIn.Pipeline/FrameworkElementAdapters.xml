<Type Name="FrameworkElementAdapters" FullName="System.AddIn.Pipeline.FrameworkElementAdapters">
  <Metadata><Meta Name="ms.openlocfilehash" Value="481438d62eda9deb4e88ff34d7f88e7bafdf9165" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86595896" /></Metadata><TypeSignature Language="C#" Value="public static class FrameworkElementAdapters" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit FrameworkElementAdapters extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Pipeline.FrameworkElementAdapters" />
  <TypeSignature Language="VB.NET" Value="Public Class FrameworkElementAdapters" />
  <TypeSignature Language="C++ CLI" Value="public ref class FrameworkElementAdapters abstract sealed" />
  <TypeSignature Language="F#" Value="type FrameworkElementAdapters = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Presentation</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.AddIn.Pipeline.FrameworkElementAdapters" /> wird von Windows Presentation Foundation-Add-Ins zur Konvertierung zwischen <see cref="T:System.Windows.FrameworkElement" /> und <see cref="T:System.AddIn.Contract.INativeHandleContract" /> verwendet.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
Windows Presentation Foundation (WPF) erweitert das .NET Framework Add-in-Modell, um die Übergabe von WPF-UIs zwischen Host Anwendungen und Add-ins zuzulassen. WPF erfordert, dass die WPF-Benutzeroberflächen, die entweder direkt oder <xref:System.Windows.FrameworkElement> indirekt von abgeleitet werden. Add-Ins und Host Anwendungen werden jedoch in der Regel in separaten Anwendungs Domänen ausgeführt und sind folglich durch eine Isolations Grenze getrennt. Aus diesem Grund erfordert das .NET Framework Add-in-Modell, dass die Typen, die über die Isolations Grenze hinweg übermittelt werden, Remote fähig sind. Ein Remote barer Typ entspricht einem der folgenden:  
  
-   Implementiert die <xref:System.Runtime.Serialization.ISerializable>-Schnittstelle.  
  
-   Hat das- <xref:System.SerializableAttribute> Attribut angewendet.  
  
-   Wird von der- <xref:System.MarshalByRefObject> Klasse abgeleitet.  
  
 <xref:System.Windows.FrameworkElement> ist nicht Remote fähig und muss in einen Remote fähigen Typ konvertiert werden, bevor Sie über die Isolations Grenze zwischen einem Add-in und einer Host Anwendung übermittelt wird. Zu diesem Zweck müssen Sie die statische-Methode aufzurufen, <xref:System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter%2A> um den <xref:System.Windows.FrameworkElement> in eine Instanz von Remote Table zu konvertieren <xref:System.AddIn.Contract.INativeHandleContract> .  
  
 Sobald der <xref:System.AddIn.Contract.INativeHandleContract> über die Isolations Grenze hinweg übermittelt wird, muss er in einen Typ konvertiert werden, der von der Host Anwendung oder dem Add-in angezeigt werden kann. In diesem Fall wird die statische- <xref:System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter%2A> Methode aufgerufen, um eine <xref:System.AddIn.Contract.INativeHandleContract> in eine zu konvertieren <xref:System.Windows.FrameworkElement> .  
  
 Eine ausführlichere Darstellung von WPF-Add-Ins finden Sie unter [Übersicht über WPF-Add-ins](/dotnet/framework/wpf/app-development/wpf-add-ins-overview).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ContractToViewAdapter">
      <MemberSignature Language="C#" Value="public static System.Windows.FrameworkElement ContractToViewAdapter (System.AddIn.Contract.INativeHandleContract nativeHandleContract);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.FrameworkElement ContractToViewAdapter(class System.AddIn.Contract.INativeHandleContract nativeHandleContract) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter(System.AddIn.Contract.INativeHandleContract)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContractToViewAdapter (nativeHandleContract As INativeHandleContract) As FrameworkElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::FrameworkElement ^ ContractToViewAdapter(System::AddIn::Contract::INativeHandleContract ^ nativeHandleContract);" />
      <MemberSignature Language="F#" Value="static member ContractToViewAdapter : System.AddIn.Contract.INativeHandleContract -&gt; System.Windows.FrameworkElement" Usage="System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter nativeHandleContract" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Presentation</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.FrameworkElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nativeHandleContract" Type="System.AddIn.Contract.INativeHandleContract" />
      </Parameters>
      <Docs>
        <param name="nativeHandleContract">Der <see cref="T:System.AddIn.Contract.INativeHandleContract" />, der über die Isolationsbegrenzung zwischen der Hostanwendung und dem Add-In übergeben wurde.</param>
        <summary>Gibt ein <see cref="T:System.Windows.FrameworkElement" /> zurück, das von einem <see cref="T:System.AddIn.Contract.INativeHandleContract" /> umgewandelt wurde.</summary>
        <returns>Ein <see cref="T:System.Windows.FrameworkElement" />, das von der Hostanwendung oder vom Add-In angezeigt wird, je nachdem, in welcher Richtung [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] zwischen beiden übergeben wird.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter(System.Windows.FrameworkElement)" />
      </Docs>
    </Member>
    <Member MemberName="ViewToContractAdapter">
      <MemberSignature Language="C#" Value="public static System.AddIn.Contract.INativeHandleContract ViewToContractAdapter (System.Windows.FrameworkElement root);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.AddIn.Contract.INativeHandleContract ViewToContractAdapter(class System.Windows.FrameworkElement root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ViewToContractAdapter (root As FrameworkElement) As INativeHandleContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::AddIn::Contract::INativeHandleContract ^ ViewToContractAdapter(System::Windows::FrameworkElement ^ root);" />
      <MemberSignature Language="F#" Value="static member ViewToContractAdapter : System.Windows.FrameworkElement -&gt; System.AddIn.Contract.INativeHandleContract" Usage="System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter root" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Presentation</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.INativeHandleContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="root">Das <see cref="T:System.Windows.FrameworkElement" />, das über die Isolationsbegrenzung zwischen der Hostanwendung und dem Add-In übergeben werden soll.</param>
        <summary>Gibt einen <see cref="T:System.AddIn.Contract.INativeHandleContract" /> zurück, der von einem <see cref="T:System.Windows.FrameworkElement" /> umgewandelt wurde.</summary>
        <returns>Ein <see cref="T:System.AddIn.Contract.INativeHandleContract" />, der von der Hostanwendung oder vom Add-In übergeben wird, je nachdem, in welcher Richtung [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] zwischen beiden übergeben wird.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="root" /> ist nicht das Stammelement einer Struktur von Elementen.</exception>
        <altmember cref="M:System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter(System.AddIn.Contract.INativeHandleContract)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/bb913905(v=vs.90)">WPF-Add-in verfügt über mehrere UIs-Beispiele</related>
      </Docs>
    </Member>
  </Members>
</Type>
