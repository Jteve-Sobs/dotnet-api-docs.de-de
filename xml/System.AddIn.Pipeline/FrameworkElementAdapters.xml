<Type Name="FrameworkElementAdapters" FullName="System.AddIn.Pipeline.FrameworkElementAdapters">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c758f24c642c1510e2b21b5addd93717bbe5eecc" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48667152" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class FrameworkElementAdapters" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit FrameworkElementAdapters extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Pipeline.FrameworkElementAdapters" />
  <TypeSignature Language="VB.NET" Value="Public Class FrameworkElementAdapters" />
  <TypeSignature Language="C++ CLI" Value="public ref class FrameworkElementAdapters abstract sealed" />
  <TypeSignature Language="F#" Value="type FrameworkElementAdapters = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Presentation</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.AddIn.Pipeline.FrameworkElementAdapters" /> wird von Windows Presentation Foundation-Add-Ins zur Konvertierung zwischen <see cref="T:System.Windows.FrameworkElement" /> und <see cref="T:System.AddIn.Contract.INativeHandleContract" /> verwendet.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
Windows Presentation Foundation (WPF) erweitert das .NET Framework-add-in-Modell zum Zulassen von WPF-UIs dazwischen hostanwendungen und Add-Ins übergeben werden. WPF ist erforderlich, dass die WPF-UIs, entweder direkt übergeben oder indirekt abgeleitet <xref:System.Windows.FrameworkElement>. Allerdings-add-ins und -Host Anwendungen in der Regel ausgeführt werden in separaten Anwendungsdomänen und können daher durch eine Isolationsgrenze getrennt wird. Aus diesem Grund erfordert das .NET Framework-add-in-Modell die Typen, die über die Isolationsgrenze hinweg remotefähig sein übergeben werden. Ein remotefähigen Typs entspricht einer der folgenden:  
  
-   Implementiert die <xref:System.Runtime.Serialization.ISerializable>-Schnittstelle.  
  
-   Hat die <xref:System.SerializableAttribute> -Attribut.  
  
-   Leitet sich von der <xref:System.MarshalByRefObject> Klasse.  
  
 <xref:System.Windows.FrameworkElement> kann nicht Remote und müssen in einen remotefähigen Typ konvertiert werden, bevor sie über die isolationsbegrenzung zwischen einem Add-in und eine hostanwendung übergeben wird. Zu diesem Zweck müssen Sie zum Aufrufen der statischen <xref:System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter%2A> Methode zum Konvertieren der <xref:System.Windows.FrameworkElement> mit einer Instanz des remotefähigen <xref:System.AddIn.Contract.INativeHandleContract>.  
  
 Sobald die <xref:System.AddIn.Contract.INativeHandleContract> übergeben wird über die Isolationsgrenze hinweg, muss er konvertiert in einen Typ, der von der hostanwendung oder die Add-in angezeigt werden kann. In diesem Fall die statische <xref:System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter%2A> aufgerufen, um das Konvertieren einer <xref:System.AddIn.Contract.INativeHandleContract> auf eine <xref:System.Windows.FrameworkElement>.  
  
 Ausführlichere Darstellung von WPF-add-ins finden Sie unter [Übersicht über WPF-Add-Ins](~/docs/framework/wpf/app-development/wpf-add-ins-overview.md).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ContractToViewAdapter">
      <MemberSignature Language="C#" Value="public static System.Windows.FrameworkElement ContractToViewAdapter (System.AddIn.Contract.INativeHandleContract nativeHandleContract);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.FrameworkElement ContractToViewAdapter(class System.AddIn.Contract.INativeHandleContract nativeHandleContract) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter(System.AddIn.Contract.INativeHandleContract)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContractToViewAdapter (nativeHandleContract As INativeHandleContract) As FrameworkElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::FrameworkElement ^ ContractToViewAdapter(System::AddIn::Contract::INativeHandleContract ^ nativeHandleContract);" />
      <MemberSignature Language="F#" Value="static member ContractToViewAdapter : System.AddIn.Contract.INativeHandleContract -&gt; System.Windows.FrameworkElement" Usage="System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter nativeHandleContract" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Presentation</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.FrameworkElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nativeHandleContract" Type="System.AddIn.Contract.INativeHandleContract" />
      </Parameters>
      <Docs>
        <param name="nativeHandleContract">Der <see cref="T:System.AddIn.Contract.INativeHandleContract" />, der über die Isolationsbegrenzung zwischen der Hostanwendung und dem Add-In übergeben wurde.</param>
        <summary>Gibt ein <see cref="T:System.Windows.FrameworkElement" /> zurück, das von einem <see cref="T:System.AddIn.Contract.INativeHandleContract" /> umgewandelt wurde.</summary>
        <returns>Ein <see cref="T:System.Windows.FrameworkElement" />, das von der Hostanwendung oder vom Add-In angezeigt wird, je nachdem, in welcher Richtung [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] zwischen beiden übergeben wird.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter(System.Windows.FrameworkElement)" />
      </Docs>
    </Member>
    <Member MemberName="ViewToContractAdapter">
      <MemberSignature Language="C#" Value="public static System.AddIn.Contract.INativeHandleContract ViewToContractAdapter (System.Windows.FrameworkElement root);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.AddIn.Contract.INativeHandleContract ViewToContractAdapter(class System.Windows.FrameworkElement root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ViewToContractAdapter (root As FrameworkElement) As INativeHandleContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::AddIn::Contract::INativeHandleContract ^ ViewToContractAdapter(System::Windows::FrameworkElement ^ root);" />
      <MemberSignature Language="F#" Value="static member ViewToContractAdapter : System.Windows.FrameworkElement -&gt; System.AddIn.Contract.INativeHandleContract" Usage="System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter root" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Presentation</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.INativeHandleContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="root">Das <see cref="T:System.Windows.FrameworkElement" />, das über die Isolationsbegrenzung zwischen der Hostanwendung und dem Add-In übergeben werden soll.</param>
        <summary>Gibt einen <see cref="T:System.AddIn.Contract.INativeHandleContract" /> zurück, der von einem <see cref="T:System.Windows.FrameworkElement" /> umgewandelt wurde.</summary>
        <returns>Ein <see cref="T:System.AddIn.Contract.INativeHandleContract" />, der von der Hostanwendung oder vom Add-In übergeben wird, je nachdem, in welcher Richtung [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] zwischen beiden übergeben wird.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="root" /> ist nicht das Stammelement einer Struktur von Elementen.</exception>
        <altmember cref="M:System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter(System.AddIn.Contract.INativeHandleContract)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/bb913905(v=vs.90)">WPF-Add-In hat mehrere Benutzeroberflächen-Beispiel</related>
      </Docs>
    </Member>
  </Members>
</Type>