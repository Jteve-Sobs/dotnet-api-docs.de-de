<Type Name="CollectionAdapters" FullName="System.AddIn.Pipeline.CollectionAdapters">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="54e98c325da9ddf7893a0a76383b0c0dbca2d7f3" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36647609" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class CollectionAdapters" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CollectionAdapters extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Pipeline.CollectionAdapters" />
  <TypeSignature Language="VB.NET" Value="Public Class CollectionAdapters" />
  <TypeSignature Language="C++ CLI" Value="public ref class CollectionAdapters abstract sealed" />
  <TypeSignature Language="F#" Value="type CollectionAdapters = class" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="77a6e-101">Ermöglicht das Übergeben von Auflistungen zwischen einem Add-In und dessen Hostanwendung.</span>
      <span class="sxs-lookup">
        <span data-stu-id="77a6e-101">Enables collections to be passed between an add-in and its host application.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77a6e-102">Diese Klasse enthält Methoden, mit denen ein <xref:System.Collections.Generic.IList%601> zu konvertierenden Auflistung eine <xref:System.AddIn.Contract.IListContract%601> Auflistung.</span><span class="sxs-lookup"><span data-stu-id="77a6e-102">This class provides methods that enable an <xref:System.Collections.Generic.IList%601> collection to be converted to a <xref:System.AddIn.Contract.IListContract%601> collection.</span></span> <span data-ttu-id="77a6e-103">Die <xref:System.AddIn.Contract.IListContract%601> Auflistung wird über die Isolationsgrenze überwinden übergeben und zurück in ein <xref:System.Collections.Generic.IList%601> -Auflistung, die das Add-in oder die Host-Anwendung verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="77a6e-103">The <xref:System.AddIn.Contract.IListContract%601> collection is passed across the isolation boundary and converted back to an <xref:System.Collections.Generic.IList%601> collection that the add-in or the host application can use.</span></span>  
  
 <span data-ttu-id="77a6e-104">Objekte in Auflistungen müssen möglich sein.</span><span class="sxs-lookup"><span data-stu-id="77a6e-104">Objects in collections must be remotable.</span></span> <span data-ttu-id="77a6e-105">Weitere Informationen zu den Objekttypen, die übergeben werden können, finden Sie unter [Verträge, Ansichten und Adapter](http://msdn.microsoft.com/library/a6460173-9507-4b87-8c07-d4ee245d715c).</span><span class="sxs-lookup"><span data-stu-id="77a6e-105">For more information about the object types that you can pass, see [Contracts, Views, and Adapters](http://msdn.microsoft.com/library/a6460173-9507-4b87-8c07-d4ee245d715c).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ToIList&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;T&gt; ToIList&lt;T&gt; (System.AddIn.Contract.IListContract&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;!!T&gt; ToIList&lt;T&gt;(class System.AddIn.Contract.IListContract`1&lt;!!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.CollectionAdapters.ToIList``1(System.AddIn.Contract.IListContract{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToIList(Of T) (collection As IListContract(Of T)) As IList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Generic::IList&lt;T&gt; ^ ToIList(System::AddIn::Contract::IListContract&lt;T&gt; ^ collection);" />
      <MemberSignature Language="F#" Value="static member ToIList : System.AddIn.Contract.IListContract&lt;'T&gt; -&gt; System.Collections.Generic.IList&lt;'T&gt;" Usage="System.AddIn.Pipeline.CollectionAdapters.ToIList collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="collection" Type="System.AddIn.Contract.IListContract&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="77a6e-106">Der Typ von Objekten, die in der Liste enthalten sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77a6e-106">The type of objects that are contained in the list.</span>
          </span>
          <span data-ttu-id="77a6e-107">
            <c>T</c> muss serialisierbar sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77a6e-107">
              <c>T</c> must be serializable.</span>
          </span>
        </typeparam>
        <param name="collection">
          <span data-ttu-id="77a6e-108">Die Auflistung auf der anderen Seite der Pipeline.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77a6e-108">The collection from the other side of the pipeline.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77a6e-109">Konvertiert die angegebene <see cref="T:System.AddIn.Contract.IListContract`1" />-Auflistung in eine <see cref="T:System.Collections.Generic.IList`1" />-Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77a6e-109">Converts the specified <see cref="T:System.AddIn.Contract.IListContract`1" /> collection to an <see cref="T:System.Collections.Generic.IList`1" /> collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="77a6e-110">Die konvertierte Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77a6e-110">The converted collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77a6e-111">Der Host-Anwendung oder ein add-in kann verwenden Sie das zurückgegebene <xref:System.Collections.Generic.IList%601> Auflistung.</span><span class="sxs-lookup"><span data-stu-id="77a6e-111">The host application or add-in can use the returned <xref:System.Collections.Generic.IList%601> collection.</span></span> <span data-ttu-id="77a6e-112">Die <xref:System.Collections.Generic.IList%601> Auflistung haben eine Lebensdauertoken für den Remoteserver <xref:System.AddIn.Contract.IListContract%601> Auflistung.</span><span class="sxs-lookup"><span data-stu-id="77a6e-112">The <xref:System.Collections.Generic.IList%601> collection will have a lifetime token for the remote <xref:System.AddIn.Contract.IListContract%601> collection.</span></span>  
  
 <span data-ttu-id="77a6e-113">Sollten Sie diese methodenüberladung verwenden nur, wenn der Inhalt des der <xref:System.AddIn.Contract.IListContract%601> sind serialisierbare Typen, die direkt auf die Add-Ins und -Host (statt Typen, die in den Ansichten angepasst werden müssen) übergeben werden können.</span><span class="sxs-lookup"><span data-stu-id="77a6e-113">You should use this method overload only when the contents of the <xref:System.AddIn.Contract.IListContract%601> are serializable types that can be passed directly to the add-in and host (rather than types that must be adapted into views).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77a6e-114">Das folgende Beispiel implementiert ein hostseitige Adapter Pipeline-Segment an, wie beschrieben [Exemplarische Vorgehensweise: Übergeben von Sammlungen zwischen Hosts und -Add-Ins](http://msdn.microsoft.com/library/b532c604-548e-4fab-b11c-377257dd0ee5). Im Beispiel wird die benutzerdefinierte `ProcessBooks` Methode ergreifen Sie hierzu die <xref:System.AddIn.Contract.IListContract%601> Auflistung aus dem Add-in übergeben und die Konvertierung in eine <xref:System.Collections.Generic.IList%601> -Auflistung, die die hostanwendung dann verwenden kann.</span><span class="sxs-lookup"><span data-stu-id="77a6e-114">The following example implements a host-side adapter pipeline segment as described [Walkthrough: Passing Collections Between Hosts and Add-Ins](http://msdn.microsoft.com/library/b532c604-548e-4fab-b11c-377257dd0ee5). The example adapts the custom `ProcessBooks` method by taking the <xref:System.AddIn.Contract.IListContract%601> collection passed from the add-in and converting it to an <xref:System.Collections.Generic.IList%601> collection, which the host application can then use.</span></span>  
  
 [!code-csharp[AddInCollectionPipelineAddInSideAdapter#3](~/samples/snippets/csharp/VS_Snippets_CLR/AddInCollectionPipelineAddInSideAdapter/cs/LibraryManagerViewToContractAddInAdapter.cs#3)]
 [!code-vb[AddInCollectionPipelineAddInSideAdapter#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AddInCollectionPipelineAddInSideAdapter/vb/LibraryManagerViewToContractAddInAdapter.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToIList&lt;TContract,TView&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;TView&gt; ToIList&lt;TContract,TView&gt; (System.AddIn.Contract.IListContract&lt;TContract&gt; collection, Converter&lt;TContract,TView&gt; contractViewAdapter, Converter&lt;TView,TContract&gt; viewContractAdapter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;!!TView&gt; ToIList&lt;TContract, TView&gt;(class System.AddIn.Contract.IListContract`1&lt;!!TContract&gt; collection, class System.Converter`2&lt;!!TContract, !!TView&gt; contractViewAdapter, class System.Converter`2&lt;!!TView, !!TContract&gt; viewContractAdapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.CollectionAdapters.ToIList``2(System.AddIn.Contract.IListContract{``0},System.Converter{``0,``1},System.Converter{``1,``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToIList(Of TContract, TView) (collection As IListContract(Of TContract), contractViewAdapter As Converter(Of TContract, TView), viewContractAdapter As Converter(Of TView, TContract)) As IList(Of TView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TContract, typename TView&gt;&#xA; static System::Collections::Generic::IList&lt;TView&gt; ^ ToIList(System::AddIn::Contract::IListContract&lt;TContract&gt; ^ collection, Converter&lt;TContract, TView&gt; ^ contractViewAdapter, Converter&lt;TView, TContract&gt; ^ viewContractAdapter);" />
      <MemberSignature Language="F#" Value="static member ToIList : System.AddIn.Contract.IListContract&lt;'Contract&gt; * Converter&lt;'Contract, 'View&gt; * Converter&lt;'View, 'Contract&gt; -&gt; System.Collections.Generic.IList&lt;'View&gt;" Usage="System.AddIn.Pipeline.CollectionAdapters.ToIList (collection, contractViewAdapter, viewContractAdapter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;TView&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContract" />
        <TypeParameter Name="TView" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="collection" Type="System.AddIn.Contract.IListContract&lt;TContract&gt;" />
        <Parameter Name="contractViewAdapter" Type="System.Converter&lt;TContract,TView&gt;" />
        <Parameter Name="viewContractAdapter" Type="System.Converter&lt;TView,TContract&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TContract">
          <span data-ttu-id="77a6e-115">Der Typ, den Vertrag definiert für die Übergabe von Objekte vom Typ <c>TView</c> über die Isolationsgrenze überwinden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77a6e-115">The type that defines the contract for passing objects of type <c>TView</c> across the isolation boundary.</span>
          </span>
        </typeparam>
        <typeparam name="TView">
          <span data-ttu-id="77a6e-116">Der Typ, der die Ansicht der Objekte in der Liste definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77a6e-116">The type that defines the view of the objects in the list.</span>
          </span>
        </typeparam>
        <param name="collection">
          <span data-ttu-id="77a6e-117">Die Auflistung, die an die andere Seite der Pipeline übergeben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77a6e-117">The collection to pass to the other side of the pipeline.</span>
          </span>
        </param>
        <param name="contractViewAdapter">
          <span data-ttu-id="77a6e-118">Ein Konverter, der die Daten des im Vertrag definierten Typs an den Typ anpasst, der in der Ansicht erwartet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77a6e-118">A converter that adapts the data from the type defined in the contract to the type expected in the view.</span>
          </span>
        </param>
        <param name="viewContractAdapter">
          <span data-ttu-id="77a6e-119">Ein Konverter, der die Daten des in der Ansicht definierten Typs an den Typ anpasst, der vom Vertrag erwartet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77a6e-119">A converter that adapts the data from the type defined in the view to the type expected by the contract.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77a6e-120">Konvertiert eine angegebene <see cref="T:System.AddIn.Contract.IListContract`1" />-Auflistung unter Verwendung von Konverteradaptern in eine <see cref="T:System.Collections.Generic.IList`1" />-Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77a6e-120">Converts a specified <see cref="T:System.AddIn.Contract.IListContract`1" /> collection to an <see cref="T:System.Collections.Generic.IList`1" /> collection by using converter adapters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="77a6e-121">Die konvertierte Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77a6e-121">The converted collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77a6e-122">Verwenden Sie diese methodenüberladung für <xref:System.AddIn.Contract.IListContract%601> Sammlungen, die Typen, die angepasst werden muss enthalten, bevor sie können, mit der Add-Ins oder Host (statt einfache serialisierbaren Typen übergeben werden, die direkt übergeben werden können).</span><span class="sxs-lookup"><span data-stu-id="77a6e-122">Use this method overload for <xref:System.AddIn.Contract.IListContract%601> collections that contain types that must be adapted before they can be passed to the add-in or host (rather than simple serializable types that can be passed directly).</span></span> <span data-ttu-id="77a6e-123">Der Host-Anwendung oder ein add-in kann verwenden Sie das zurückgegebene <xref:System.Collections.Generic.IList%601> Auflistung.</span><span class="sxs-lookup"><span data-stu-id="77a6e-123">The host application or add-in can use the returned <xref:System.Collections.Generic.IList%601> collection.</span></span> <span data-ttu-id="77a6e-124">Er weist ein Lebensdauertoken für den Remoteserver <xref:System.AddIn.Contract.IListContract%601>.</span><span class="sxs-lookup"><span data-stu-id="77a6e-124">It will have a lifetime token for the remote <xref:System.AddIn.Contract.IListContract%601>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToIListContract&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.AddIn.Contract.IListContract&lt;T&gt; ToIListContract&lt;T&gt; (System.Collections.Generic.IList&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.AddIn.Contract.IListContract`1&lt;!!T&gt; ToIListContract&lt;T&gt;(class System.Collections.Generic.IList`1&lt;!!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.CollectionAdapters.ToIListContract``1(System.Collections.Generic.IList{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToIListContract(Of T) (collection As IList(Of T)) As IListContract(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::AddIn::Contract::IListContract&lt;T&gt; ^ ToIListContract(System::Collections::Generic::IList&lt;T&gt; ^ collection);" />
      <MemberSignature Language="F#" Value="static member ToIListContract : System.Collections.Generic.IList&lt;'T&gt; -&gt; System.AddIn.Contract.IListContract&lt;'T&gt;" Usage="System.AddIn.Pipeline.CollectionAdapters.ToIListContract collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.IListContract&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IList&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="77a6e-125">Der Typ von Objekten, die in der Liste enthalten sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77a6e-125">The type of objects that are contained in the list.</span>
          </span>
          <span data-ttu-id="77a6e-126">
            <c>T</c> muss serialisierbar sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77a6e-126">
              <c>T</c> must be serializable.</span>
          </span>
        </typeparam>
        <param name="collection">
          <span data-ttu-id="77a6e-127">Die zu konvertierende Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77a6e-127">The collection to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77a6e-128">Konvertiert eine angegebene <see cref="T:System.Collections.Generic.IList`1" />-Auflistung in eine <see cref="T:System.AddIn.Contract.IListContract`1" />-Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77a6e-128">Converts a specified <see cref="T:System.Collections.Generic.IList`1" /> collection to an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="77a6e-129">Die konvertierte Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77a6e-129">The converted collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77a6e-130">Die <xref:System.AddIn.Contract.IListContract%601> Auflistung kann über die Isolationsgrenze zwischen Add-Ins und der hostanwendung gemarshallt werden.</span><span class="sxs-lookup"><span data-stu-id="77a6e-130">The <xref:System.AddIn.Contract.IListContract%601> collection can be marshaled across the isolation boundary between the add-in and its host application.</span></span>  
  
 <span data-ttu-id="77a6e-131">Sollten Sie diese methodenüberladung verwenden nur, wenn der Inhalt des der <xref:System.Collections.Generic.IList%601> Auflistung sind die serialisierbaren Typen, die direkt an den Vertrag (anstelle von Typen, die in den Verträgen angepasst werden müssen) übergeben werden können.</span><span class="sxs-lookup"><span data-stu-id="77a6e-131">You should use this method overload only when the contents of the <xref:System.Collections.Generic.IList%601> collection are serializable types that can be passed directly to the contract (rather than types that must be adapted into contracts).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77a6e-132">Das folgende Beispiel implementiert die Klasse, die ein Add-in-Seite Adapter Pipeline-Segment definiert.</span><span class="sxs-lookup"><span data-stu-id="77a6e-132">The following example implements the class that defines an add-in side adapter pipeline segment.</span></span> <span data-ttu-id="77a6e-133">Passt die benutzerdefinierte `ProcessBooks` Methode ergreifen Sie hierzu die <xref:System.Collections.Generic.IList%601> Auflistung aus dem Add-In-Ansichtssegment übergeben und die Konvertierung in eine <xref:System.AddIn.Contract.IListContract%601> -Auflistung, die über die Isolationsgrenze überwinden an den Host gemarshallt werden kann.</span><span class="sxs-lookup"><span data-stu-id="77a6e-133">It adapts the custom `ProcessBooks` method by taking the <xref:System.Collections.Generic.IList%601> collection passed from the add-in view segment and converting it to an <xref:System.AddIn.Contract.IListContract%601> collection that can be marshaled across the isolation boundary to the host.</span></span>  
  
 [!code-csharp[AddInCollectionPipelineHostSideAdapter#4](~/samples/snippets/csharp/VS_Snippets_CLR/AddInCollectionPipelineHostSideAdapter/cs/LibraryManagerContractToViewHostAdapter.cs#4)]
 [!code-vb[AddInCollectionPipelineHostSideAdapter#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/AddInCollectionPipelineHostSideAdapter/vb/LibraryManagerContractToViewHostAdapter.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToIListContract&lt;TView,TContract&gt;">
      <MemberSignature Language="C#" Value="public static System.AddIn.Contract.IListContract&lt;TContract&gt; ToIListContract&lt;TView,TContract&gt; (System.Collections.Generic.IList&lt;TView&gt; collection, Converter&lt;TView,TContract&gt; viewContractAdapter, Converter&lt;TContract,TView&gt; contractViewAdapter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.AddIn.Contract.IListContract`1&lt;!!TContract&gt; ToIListContract&lt;TView, TContract&gt;(class System.Collections.Generic.IList`1&lt;!!TView&gt; collection, class System.Converter`2&lt;!!TView, !!TContract&gt; viewContractAdapter, class System.Converter`2&lt;!!TContract, !!TView&gt; contractViewAdapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.CollectionAdapters.ToIListContract``2(System.Collections.Generic.IList{``0},System.Converter{``0,``1},System.Converter{``1,``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToIListContract(Of TView, TContract) (collection As IList(Of TView), viewContractAdapter As Converter(Of TView, TContract), contractViewAdapter As Converter(Of TContract, TView)) As IListContract(Of TContract)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TView, typename TContract&gt;&#xA; static System::AddIn::Contract::IListContract&lt;TContract&gt; ^ ToIListContract(System::Collections::Generic::IList&lt;TView&gt; ^ collection, Converter&lt;TView, TContract&gt; ^ viewContractAdapter, Converter&lt;TContract, TView&gt; ^ contractViewAdapter);" />
      <MemberSignature Language="F#" Value="static member ToIListContract : System.Collections.Generic.IList&lt;'View&gt; * Converter&lt;'View, 'Contract&gt; * Converter&lt;'Contract, 'View&gt; -&gt; System.AddIn.Contract.IListContract&lt;'Contract&gt;" Usage="System.AddIn.Pipeline.CollectionAdapters.ToIListContract (collection, viewContractAdapter, contractViewAdapter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.IListContract&lt;TContract&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TView" />
        <TypeParameter Name="TContract" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IList&lt;TView&gt;" />
        <Parameter Name="viewContractAdapter" Type="System.Converter&lt;TView,TContract&gt;" />
        <Parameter Name="contractViewAdapter" Type="System.Converter&lt;TContract,TView&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TView">
          <span data-ttu-id="77a6e-134">Der Typ, der die Ansicht der Objekte in der Liste definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77a6e-134">The type that defines the view of the objects in the list.</span>
          </span>
        </typeparam>
        <typeparam name="TContract">
          <span data-ttu-id="77a6e-135">Der Typ, den Vertrag definiert für die Übergabe von Objekte vom Typ <c>TView</c> über die Isolationsgrenze überwinden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77a6e-135">The type that defines the contract for passing objects of type <c>TView</c> across the isolation boundary.</span>
          </span>
        </typeparam>
        <param name="collection">
          <span data-ttu-id="77a6e-136">Die zu konvertierende Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77a6e-136">The collection to convert.</span>
          </span>
        </param>
        <param name="viewContractAdapter">
          <span data-ttu-id="77a6e-137">Ein Konverter, der die Daten des in der Ansicht definierten Typs an den Typ anpasst, der vom Vertrag erwartet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77a6e-137">A converter that adapts the data from the type defined in the view to the type expected by the contract.</span>
          </span>
        </param>
        <param name="contractViewAdapter">
          <span data-ttu-id="77a6e-138">Ein Konverter, der die Daten des im Vertrag definierten Typs an den Typ anpasst, der in der Ansicht erwartet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77a6e-138">A converter that adapts the data from the type defined in the contract to the type expected in the view.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77a6e-139">Konvertiert eine angegebene <see cref="T:System.Collections.Generic.IList`1" />-Auflistung unter Verwendung von Konverteradaptern in eine <see cref="T:System.AddIn.Contract.IListContract`1" />-Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77a6e-139">Converts a specified <see cref="T:System.Collections.Generic.IList`1" /> collection to an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection by using converter adapters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="77a6e-140">Die konvertierte Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77a6e-140">The converted collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77a6e-141">Verwenden Sie diese methodenüberladung für <xref:System.Collections.Generic.IList%601> Sammlungen, die Typen, die in Verträgen angepasst werden muss enthalten, bevor sie können, um den Vertrag (anstelle von einfachen serialisierbaren Typen übergeben werden, die direkt übergeben werden können).</span><span class="sxs-lookup"><span data-stu-id="77a6e-141">Use this method overload for <xref:System.Collections.Generic.IList%601> collections that contain types that must be adapted into contracts before they can be passed to the contract (rather than simple serializable types that can be passed directly).</span></span> <span data-ttu-id="77a6e-142">Die <xref:System.AddIn.Contract.IListContract%601> Auflistung kann über die Isolationsgrenze zwischen einem Add-in und dessen hostanwendung gemarshallt werden.</span><span class="sxs-lookup"><span data-stu-id="77a6e-142">The <xref:System.AddIn.Contract.IListContract%601> collection can be marshaled across the isolation boundary between an add-in and its host application.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>