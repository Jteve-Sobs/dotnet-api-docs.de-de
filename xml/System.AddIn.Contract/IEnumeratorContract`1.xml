<Type Name="IEnumeratorContract&lt;T&gt;" FullName="System.AddIn.Contract.IEnumeratorContract&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="03a75f2a7180daea04a3cd94c66ec02688f2b013" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37705708" /></Metadata><TypeSignature Language="C#" Value="public interface IEnumeratorContract&lt;T&gt; : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnumeratorContract`1&lt;T&gt; implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.IEnumeratorContract`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnumeratorContract(Of T)&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IEnumeratorContract : IDisposable" />
  <TypeSignature Language="F#" Value="type IEnumeratorContract&lt;'T&gt; = interface&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">Der Typ der aufzulistenden Objekte.</typeparam>
    <summary>Listet die Elemente in einer <see cref="T:System.AddIn.Contract.IListContract`1" />-Auflistung auf.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Enumeratoren können verwendet werden, um die Daten in der Auflistung zu lesen, aber sie können nicht zum Ändern der Auflistung verwendet werden.  
  
 Zu Beginn wird der Enumerator vor das erste Element in der Auflistung positioniert. An dieser Position ist der Rückgabewert von <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> ist nicht definiert. Aus diesem Grund müssen Sie aufrufen <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> auf den Enumerator auf das erste Element der Auflistung vor dem Aufruf <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A>.  
  
 <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> gibt solange dasselbe Objekt zurück, bis <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> aufgerufen wird. <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> Legt den Rückgabewert der <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> auf das nächste Element.  
  
 Wenn <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> das Ende der Auflistung übergibt, wird der Enumerator hinter dem letzten Element in der Auflistung platziert, und <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> gibt `false` zurück. Wenn sich der Enumerator an dieser Position befindet, geben nachfolgende Aufrufe von <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> auch `false` zurück. Wenn der letzte Aufruf <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> zurückgegebenen `false`, der Rückgabewert von <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> ist nicht definiert.  
  
 Ein Enumerator bleibt gültig, solange die Auflistung unverändert ist. Werden an der Auflistung Änderungen wie z. B. Hinzufügen, Bearbeiten oder Entfernen von Elementen vorgenommen, verliert der Enumerator unwiederbringlich seine Gültigkeit und sein Verhalten ist nicht definiert.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetCurrent">
      <MemberSignature Language="C#" Value="public T GetCurrent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T GetCurrent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IEnumeratorContract`1.GetCurrent" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrent () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T GetCurrent();" />
      <MemberSignature Language="F#" Value="abstract member GetCurrent : unit -&gt; 'T" Usage="iEnumeratorContract.GetCurrent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt das Objekt in der Auflistung an der aktuellen Position des Enumerators zurück.</summary>
        <returns>Der <see cref="T:System.AddIn.Contract.IContract" /> in der Auflistung an der aktuellen Position des Enumerators.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Rückgabewert von <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> ist nicht definiert, unter der folgenden Bedingungen:  
  
-   Der Enumerator ist vor dem ersten Element in der Auflistung positioniert, sofort nach der Erstellung des Enumerators oder nach <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> aufgerufen wird. <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> muss aufgerufen werden, um den Enumerator auf das erste Element der Auflistung vor dem Aufruf <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A>.  
  
-   Der letzte Aufruf von <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> zurückgegeben `false`, die das Ende der Auflistung angibt.  
  
-   Der Enumerator ist aufgrund von Änderungen am in der Auflistung, z. B. hinzufügen, ändern oder Löschen von Elementen für ungültig erklärt.  
  
 <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> gibt solange dasselbe Objekt zurück, bis <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> aufgerufen wird. <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> Legt den Rückgabewert der <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> auf das nächste Element.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IEnumeratorContract`1.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool" Usage="iEnumeratorContract.MoveNext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Setzt den Enumerator auf das nächste Element der Auflistung.</summary>
        <returns><see langword="true" />, wenn der Enumerator erfolgreich auf das nächste Element gesetzt wurde, <see langword="false" />, wenn der Enumerator das Ende der Auflistung überschritten hat.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nach dem Erstellen eines Enumerators oder nach der <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> Methode aufgerufen wird, wird ein Enumerator vor dem ersten Element der Auflistung positioniert. Der erste Aufruf der <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> Methode verschiebt den Enumerator auf das erste Element der Auflistung.  
  
 Wenn <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> das Ende der Auflistung übergibt, wird der Enumerator hinter dem letzten Element in der Auflistung platziert, und <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> gibt `false` zurück. Wenn der Enumerator ist an dieser Position, nachfolgende Aufrufe von <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> auch zurückgeben `false` bis <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> aufgerufen wird.  
  
 Ein Enumerator bleibt gültig, solange die Auflistung unverändert ist. Wenn der Auflistung, z. B. das Hinzufügen Änderungen, ändern oder Löschen von Elementen, wenn der Enumerator unwiederbringlich ist ungültig, und der nächste Aufruf von <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> oder <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> löst eine <xref:System.InvalidOperationException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Sammlung wurde nach der Erstellung des Enumerators geändert.</exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IEnumeratorContract`1.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit" Usage="iEnumeratorContract.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Setzt den Enumerator auf seine anfängliche Position vor dem ersten Element in der Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Enumerator bleibt gültig, solange die Auflistung unverändert ist. Wenn der Auflistung, z. B. das Hinzufügen Änderungen, ändern oder Löschen von Elementen, wenn der Enumerator unwiederbringlich ist ungültig, und der nächste Aufruf von <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> oder <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> löst eine <xref:System.InvalidOperationException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Sammlung wurde nach der Erstellung des Enumerators geändert.</exception>
      </Docs>
    </Member>
  </Members>
</Type>