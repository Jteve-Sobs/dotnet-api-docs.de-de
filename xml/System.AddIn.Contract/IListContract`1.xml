<Type Name="IListContract&lt;T&gt;" FullName="System.AddIn.Contract.IListContract&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b93185b7c929c6518a44c9d831307f70820de03b" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52251960" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IListContract&lt;T&gt; : System.AddIn.Contract.IContract" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IListContract`1&lt;T&gt; implements class System.AddIn.Contract.IContract" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.IListContract`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IListContract(Of T)&#xA;Implements IContract" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IListContract : System::AddIn::Contract::IContract" />
  <TypeSignature Language="F#" Value="type IListContract&lt;'T&gt; = interface&#xA;    interface IContract" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="b069c-101">Der Vertragstyp der Objekte in der Liste.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b069c-101">The contract type of the objects in the list.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="b069c-102">Stellt eine generische Liste von durch einen Vertrag definierten Typen dar, die verwendet werden, um Auflistungen des entsprechenden Vertragstyps zwischen einem Host und einem Add-In zu übergeben.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b069c-102">Represents a generic list of types that are defined by a contract and are used to pass collections of that contract type between a host and an add-in.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b069c-103">Die <xref:System.AddIn.Pipeline.CollectionAdapters> -Klasse verwendet ein <xref:System.AddIn.Contract.IListContract%601> Schnittstelle, um Auflistungen in beide Richtungen, zwischen dem Host und das Add-in zu übergeben.</span><span class="sxs-lookup"><span data-stu-id="b069c-103">The <xref:System.AddIn.Pipeline.CollectionAdapters> class uses an <xref:System.AddIn.Contract.IListContract%601> interface to pass collections, in both directions, between the host and the add-in.</span></span> <span data-ttu-id="b069c-104">Es wird empfohlen, die Sie verwenden die <xref:System.AddIn.Pipeline.CollectionAdapters> -Klasse anstelle von dieser Klasse direkt in Ihrem Code.</span><span class="sxs-lookup"><span data-stu-id="b069c-104">It is recommended that you use the <xref:System.AddIn.Pipeline.CollectionAdapters> class instead of using this class directly in your code.</span></span> <span data-ttu-id="b069c-105">Ein Beispiel finden Sie unter [Exemplarische Vorgehensweise: Übergeben von Auflistungen zwischen Hosts und Add-Ins](https://msdn.microsoft.com/library/b532c604-548e-4fab-b11c-377257dd0ee5).</span><span class="sxs-lookup"><span data-stu-id="b069c-105">For an example, see [Walkthrough: Passing Collections Between Hosts and Add-Ins](https://msdn.microsoft.com/library/b532c604-548e-4fab-b11c-377257dd0ee5).</span></span>  
  
 <span data-ttu-id="b069c-106">Diese Klasse kann verwendet werden, um Objekte als Verweis zwischen Anwendungsdomänen übergeben werden, da die Objekte nicht serialisiert werden.</span><span class="sxs-lookup"><span data-stu-id="b069c-106">This class can be used to pass objects by reference between application domains because the objects are not serialized.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(T item);" />
      <MemberSignature Language="F#" Value="abstract member Add : 'T -&gt; unit" Usage="iListContract.Add item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="b069c-107">Das hinzuzufügende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b069c-107">The object to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b069c-108">Fügt einer <see cref="T:System.AddIn.Contract.IListContract`1" />-Auflistung ein Objekt hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b069c-108">Adds an object to an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b069c-109">Die `item` Parameter ist ein Typ, der durch den Vertrag definiert ist.</span><span class="sxs-lookup"><span data-stu-id="b069c-109">The `item` parameter must be of a type that is defined by the contract.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit" Usage="iListContract.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b069c-110">Entfernt alle Objekte aus einer <see cref="T:System.AddIn.Contract.IListContract`1" />-Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b069c-110">Removes all objects from an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(T item);" />
      <MemberSignature Language="F#" Value="abstract member Contains : 'T -&gt; bool" Usage="iListContract.Contains item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="b069c-111">Das in der Auflistung zu suchende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b069c-111">The object to look for in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b069c-112">Ermittelt, ob eine <see cref="T:System.AddIn.Contract.IListContract`1" />-Auflistung ein bestimmtes Element enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b069c-112">Determines whether a specific item is in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b069c-113">
            <see langword="true" />, wenn sich <paramref name="item" /> in der Auflistung befindet, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b069c-113">
              <see langword="true" /> if <paramref name="item" /> is in the collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCount">
      <MemberSignature Language="C#" Value="public int GetCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.GetCount" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCount () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCount();" />
      <MemberSignature Language="F#" Value="abstract member GetCount : unit -&gt; int" Usage="iListContract.GetCount " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b069c-114">Ruft die Anzahl der Elemente in einer <see cref="T:System.AddIn.Contract.IListContract`1" />-Auflistung ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b069c-114">Gets the number of items in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b069c-115">Die Anzahl der Elemente in der Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b069c-115">The number of items in the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumeratorContract">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.IEnumeratorContract&lt;T&gt; GetEnumeratorContract ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.IEnumeratorContract`1&lt;!T&gt; GetEnumeratorContract() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.GetEnumeratorContract" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumeratorContract () As IEnumeratorContract(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::IEnumeratorContract&lt;T&gt; ^ GetEnumeratorContract();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumeratorContract : unit -&gt; System.AddIn.Contract.IEnumeratorContract&lt;'T&gt;" Usage="iListContract.GetEnumeratorContract " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.IEnumeratorContract&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b069c-116">Gibt einen Enumerator zurück, der eine <see cref="T:System.AddIn.Contract.IListContract`1" />-Auflistung durchläuft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b069c-116">Returns an enumerator that iterates through an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b069c-117">Ein <see cref="T:System.AddIn.Contract.IEnumeratorContract`1" />-Enumerator, der die Auflistung durchläuft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b069c-117">An <see cref="T:System.AddIn.Contract.IEnumeratorContract`1" /> enumerator to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsReadOnly">
      <MemberSignature Language="C#" Value="public bool GetIsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetIsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.GetIsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIsReadOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetIsReadOnly();" />
      <MemberSignature Language="F#" Value="abstract member GetIsReadOnly : unit -&gt; bool" Usage="iListContract.GetIsReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b069c-118">Bestimmt, ob eine <see cref="T:System.AddIn.Contract.IListContract`1" />-Auflistung schreibgeschützt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b069c-118">Determines whether an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection is read-only.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b069c-119">
            <see langword="true" />, wenn die Auflistung schreibgeschützt ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b069c-119">
              <see langword="true" /> if the collection is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItem">
      <MemberSignature Language="C#" Value="public T GetItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T GetItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.GetItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItem (index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T GetItem(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetItem : int -&gt; 'T" Usage="iListContract.GetItem index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="b069c-120">Der nullbasierte Index des abzurufenden Elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b069c-120">The zero-based index of the item to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b069c-121">Gibt das Element am angegebenen Index einer <see cref="T:System.AddIn.Contract.IListContract`1" />-Auflistung zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b069c-121">Returns the item at the specified index of an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b069c-122">Das Element am angegebenen Index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b069c-122">The item at the specified index.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b069c-123">Die <xref:System.AddIn.Contract.IListContract%601.GetItem%2A> -Methode entfernt das Element am angegebenen Index nicht.</span><span class="sxs-lookup"><span data-stu-id="b069c-123">The <xref:System.AddIn.Contract.IListContract%601.GetItem%2A> method does not remove the item at the specified index.</span></span> <span data-ttu-id="b069c-124">So entfernen Sie ein Element aus der <xref:System.AddIn.Contract.IListContract%601> erfassen, verwenden die <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="b069c-124">To remove an item from the <xref:System.AddIn.Contract.IListContract%601> collection, use the <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="b069c-125">
            <paramref name="index" /> ist kleiner als Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b069c-125">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="b069c-126">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="b069c-126">-or-</span>
          </span>
          <span data-ttu-id="b069c-127">
            <paramref name="index" /> ist größer oder gleich dem Rückgabewert von <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b069c-127">
              <paramref name="index" /> is equal to or greater than the return value of <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.IndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(T item);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : 'T -&gt; int" Usage="iListContract.IndexOf item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="b069c-128">Ein Element in der Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b069c-128">An item in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b069c-129">Gibt den Index eines angegebenen Elements in einer <see cref="T:System.AddIn.Contract.Collections.IListContract`1" />-Auflistung zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b069c-129">Returns the index of a specific item in an <see cref="T:System.AddIn.Contract.Collections.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b069c-130">Der Index des angegebenen Elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b069c-130">The index of the specified item.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b069c-131">Wenn mehrere Objekte desselben Typs in der Auflistung vorhanden sind, gibt diese Methode den Index des Elements, das das erste Vorkommen des angegebenen Typs in der Auflistung ist.</span><span class="sxs-lookup"><span data-stu-id="b069c-131">If there are several objects of the same type in the collection, this method identifies the index of the item that is the first occurrence of the specified type in the collection.</span></span>  
  
 <span data-ttu-id="b069c-132">Die <xref:System.AddIn.Contract.IListContract%601.GetItem%2A> -Methode entfernt das Element am angegebenen Index nicht.</span><span class="sxs-lookup"><span data-stu-id="b069c-132">The <xref:System.AddIn.Contract.IListContract%601.GetItem%2A> method does not remove the item at the specified index.</span></span> <span data-ttu-id="b069c-133">So entfernen Sie ein Element aus der <xref:System.AddIn.Contract.IListContract%601> erfassen, verwenden die <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="b069c-133">To remove an item from the <xref:System.AddIn.Contract.IListContract%601> collection, use the <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="b069c-134">
            <paramref name="index" /> ist kleiner als Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b069c-134">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="b069c-135">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="b069c-135">-or-</span>
          </span>
          <span data-ttu-id="b069c-136">
            <paramref name="index" /> ist größer oder gleich dem Rückgabewert der <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" />-Methode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b069c-136">
              <paramref name="index" /> is equal to or greater than the return value of the <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /> method.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.Insert(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, T item);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * 'T -&gt; unit" Usage="iListContract.Insert (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="b069c-137">Der nullbasierte Index, an dem der <paramref name="item" /> eingefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b069c-137">The zero-based index at which to insert <paramref name="item" />.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="b069c-138">Das <see cref="T:System.AddIn.Contract.IContract" />-Objekt, das in die <see cref="T:System.AddIn.Contract.IListContract`1" />-Auflistung eingefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b069c-138">The <see cref="T:System.AddIn.Contract.IContract" /> object to insert in the <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b069c-139">Fügt ein Element am angegebenen Index in die <see cref="T:System.AddIn.Contract.IListContract`1" />-Auflistung ein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b069c-139">Inserts an item at the specified index in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b069c-140">Nach dem Aufrufen der <xref:System.AddIn.Contract.IListContract%601.Insert%2A> -Methode, die Elemente hinter die Einfügemarke verschoben, um das neue Element aufzunehmen.</span><span class="sxs-lookup"><span data-stu-id="b069c-140">After you call the <xref:System.AddIn.Contract.IListContract%601.Insert%2A> method, the items that follow the insertion point move to accommodate the new item.</span></span> <span data-ttu-id="b069c-141">Die Indizes der Elemente, die verschoben werden, werden ebenfalls aktualisiert.</span><span class="sxs-lookup"><span data-stu-id="b069c-141">The indexes of the items that are moved are also updated.</span></span> <span data-ttu-id="b069c-142">Um ein Element am angegebenen Index ersetzen möchten, verwenden Sie die <xref:System.AddIn.Contract.IListContract%601.SetItem%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="b069c-142">To replace an item at a specified index, use the <xref:System.AddIn.Contract.IListContract%601.SetItem%2A> method.</span></span>  
  
 <span data-ttu-id="b069c-143">Um zu bestimmen, ob ein <xref:System.AddIn.Contract.IListContract%601> Auflistung schreibgeschützt ist, rufen Sie die <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="b069c-143">To determine whether an <xref:System.AddIn.Contract.IListContract%601> collection is read-only, call the <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="b069c-144">
            <paramref name="index" /> ist kleiner als Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b069c-144">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="b069c-145">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="b069c-145">-or-</span>
          </span>
          <span data-ttu-id="b069c-146">
            <paramref name="index" /> ist größer oder gleich dem Rückgabewert von <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b069c-146">
              <paramref name="index" /> is equal to or greater than the return value of <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="b069c-147">Die <see cref="T:System.AddIn.Contract.IListContract`1" />-Auflistung ist schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b069c-147">The <see cref="T:System.AddIn.Contract.IListContract`1" /> collection is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove(T item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : 'T -&gt; bool" Usage="iListContract.Remove item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="b069c-148">Das Element, das aus der Auflistung entfernt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b069c-148">The item to remove from the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b069c-149">Entfernt ein Element aus einer <see cref="T:System.AddIn.Contract.IListContract`1" />-Auflistung eines angegebenen Typs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b069c-149">Removes an item from an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection of a specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b069c-150">
            <see langword="true" />, wenn ein Element entfernt wird, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b069c-150">
              <see langword="true" /> if an item is removed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b069c-151">Sie müssen diese Methode für jedes Objekt eines bestimmten Typs in der Sammlung wiederholen.</span><span class="sxs-lookup"><span data-stu-id="b069c-151">You must repeat this method for each object of a particular type in the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit" Usage="iListContract.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="b069c-152">Der Index des zu entfernenden Elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b069c-152">The index of the item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b069c-153">Entfernt das Element am angegebenen Index aus einer <see cref="T:System.AddIn.Contract.IListContract`1" />-Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b069c-153">Removes the item at the specified index in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b069c-154">Nach dem Aufruf von <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A>, die Elemente, die das entfernte Element folgen zu verschieben, auf dem frei gewordene Stelle einzunehmen.</span><span class="sxs-lookup"><span data-stu-id="b069c-154">After you call <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A>, the items that follow the removed item move to occupy the vacated spot.</span></span> <span data-ttu-id="b069c-155">Die Indizes der Elemente, die verschoben werden, werden ebenfalls aktualisiert.</span><span class="sxs-lookup"><span data-stu-id="b069c-155">The indexes of the items that are moved are also updated.</span></span>  
  
 <span data-ttu-id="b069c-156">Um zu bestimmen, ob ein <xref:System.AddIn.Contract.IListContract%601> Auflistung schreibgeschützt ist, rufen Sie die <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="b069c-156">To determine whether an <xref:System.AddIn.Contract.IListContract%601> collection is read-only, call the <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="b069c-157">
            <paramref name="index" /> ist kleiner als Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b069c-157">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="b069c-158">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="b069c-158">-or-</span>
          </span>
          <span data-ttu-id="b069c-159">
            <paramref name="index" /> ist größer oder gleich dem Rückgabewert der <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" />-Methode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b069c-159">
              <paramref name="index" /> is equal to or greater than the return value of the <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="b069c-160">Die <see cref="T:System.AddIn.Contract.IListContract`1" />-Auflistung ist schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b069c-160">The <see cref="T:System.AddIn.Contract.IListContract`1" /> collection is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="public void SetItem (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetItem(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.SetItem(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetItem (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetItem(int index, T item);" />
      <MemberSignature Language="F#" Value="abstract member SetItem : int * 'T -&gt; unit" Usage="iListContract.SetItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="b069c-161">Der nullbasierte Index, an dem das Element festgelegt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b069c-161">The zero-based index at which to set the item.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="b069c-162">Das am angegebenen Index festzulegende Element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b069c-162">The item to set at the specified index.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b069c-163">Legt das Element am angegebenen Index in einer <see cref="T:System.AddIn.Contract.IListContract`1" />-Auflistung fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b069c-163">Sets the item at the specified index in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b069c-164">Die <xref:System.AddIn.Contract.IListContract%601.SetItem%2A> Methode legt das Element am angegebenen Index fest.</span><span class="sxs-lookup"><span data-stu-id="b069c-164">The <xref:System.AddIn.Contract.IListContract%601.SetItem%2A> method sets the item at the specified index.</span></span> <span data-ttu-id="b069c-165">Zum Hinzufügen eines Elements auf die <xref:System.AddIn.Contract.IListContract%601> erfassen, verwenden die <xref:System.AddIn.Contract.IListContract%601.Insert%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="b069c-165">To add an item to the <xref:System.AddIn.Contract.IListContract%601> collection, use the <xref:System.AddIn.Contract.IListContract%601.Insert%2A> method.</span></span>  
  
 <span data-ttu-id="b069c-166">Um zu bestimmen, ob ein <xref:System.AddIn.Contract.IListContract%601> Auflistung schreibgeschützt ist, rufen Sie die <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="b069c-166">To determine whether an <xref:System.AddIn.Contract.IListContract%601> collection is read-only, call the <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="b069c-167">
            <paramref name="index" /> ist kleiner als Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b069c-167">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="b069c-168">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="b069c-168">-or-</span>
          </span>
          <span data-ttu-id="b069c-169">
            <paramref name="index" /> ist größer oder gleich dem Rückgabewert der <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" />-Methode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b069c-169">
              <paramref name="index" /> is equal to or greater than the return value of the <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="b069c-170">Die <see cref="T:System.AddIn.Contract.IListContract`1" />-Auflistung ist schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b069c-170">The <see cref="T:System.AddIn.Contract.IListContract`1" /> collection is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>