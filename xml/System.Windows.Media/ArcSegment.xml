<Type Name="ArcSegment" FullName="System.Windows.Media.ArcSegment">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e590a9fac00879723d7b34096185be6614841545" /><Meta Name="ms.sourcegitcommit" Value="1654a92bac785a221098172d9cacd405ceaac9b7" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/01/2018" /><Meta Name="ms.locfileid" Value="52733199" /></Metadata><TypeSignature Language="C#" Value="public sealed class ArcSegment : System.Windows.Media.PathSegment" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ArcSegment extends System.Windows.Media.PathSegment" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.ArcSegment" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ArcSegment&#xA;Inherits PathSegment" />
  <TypeSignature Language="C++ CLI" Value="public ref class ArcSegment sealed : System::Windows::Media::PathSegment" />
  <TypeSignature Language="F#" Value="type ArcSegment = class&#xA;    inherit PathSegment" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.PathSegment</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt einen elliptischen Bogen zwischen zwei Punkten dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden einer <xref:System.Windows.Media.PathFigure> zu speichernde Objekt <xref:System.Windows.Media.ArcSegment> Objekten und anderen Segmenten.  
  
 Ein elliptischen Bogens wird definiert, um die Anfangs- und Endpunkte, die x- und y-Radius, x-Achse Drehung Faktor, ein Wert, der angibt, ob das Kreissegment größer als 180 Grad ein, und ein-Wert, der die Richtung, in der der Bogen gezeichnet wird, sein soll. Die <xref:System.Windows.Media.ArcSegment> Klasse enthält eine Eigenschaft für den Anfangspunkt des Bogens nicht; sie definiert nur den Zielpunkt des Bogens dar. Der Anfangspunkt des Bogens ist der aktuelle die <xref:System.Windows.Media.PathFigure> , der die <xref:System.Windows.Media.ArcSegment> hinzugefügt wird.  
  
 Die folgenden Abbildungen zeigen den anderen Endpunkt <xref:System.Windows.Media.ArcSegment.Size%2A>, und <xref:System.Windows.Media.ArcSegment.RotationAngle%2A> Einstellungen.  
  
 ![ArcSegments mit unterschiedlichen Point-Einstellungen](~/add/media/arcsegment-point.png "ArcSegments mit unterschiedlichen Point-Einstellungen")  
  
 ![ArcSegments mit unterschiedlichen Size-Einstellungen](~/add/media/arcsegment-size.png "ArcSegments mit unterschiedlichen Size-Einstellungen")  
  
 ![ArcSegments mit unterschiedlichen RotationAngle-Einstellungen](~/add/media/arcsegment-rotationangle.png "ArcSegments mit unterschiedlichen RotationAngle-Einstellungen")  
  
## <a name="islargearc-and-sweepdirection"></a>IsLargeArc und SweepDirection  
 Für die meisten Bögen von einer bestimmten Position, Größe und Rotation gibt es vier verschiedene Bögen gezeichnet werden können; die <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> und <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> -Eigenschaften angeben, welche Bogen zu verwenden.  
  
 Der Bogen Durchläufe die vier in Frage kommenden zwei große Bögen mit Sweep-Vorgängen um 180 Grad oder größer und zwei darstellen kleinere Bögen mit Sweep-Vorgängen um 180 Grad oder weniger. Wenn <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> ist `true`, dann ist eines der zwei größere Bogen Sweep ausgewählten ist, andernfalls Wenn ist `false`möglich des Bogens kleinere Sweep-Vorgängen ausgewählt werden. Die verbleibenden beiden möglichen Bogen werden jeweils in eine andere Richtung gezeichnet: <xref:System.Windows.Media.SweepDirection.Counterclockwise> oder <xref:System.Windows.Media.SweepDirection.Clockwise>. Die <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> gibt an, welche Eigenschaft.  
  
 Die folgenden Abbildungen zeigen verschiedene <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> und <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> Einstellungen.  
  
 ![ArcSegments mit unterschiedlichen IsLargeArc-Einstellungen](~/add/media/arcsegment-islargearc.png "ArcSegments mit unterschiedlichen IsLargeArc-Einstellungen")  
ArcSegment-Objekte mit unterschiedlichen IsLargeArc-Einstellungen  
  
 ![ArcSegments mit unterschiedlichen SweepDirection-Einstellungen](~/add/media/arcsegment-sweepdirection.png "ArcSegments mit unterschiedlichen SweepDirection-Einstellungen")  
ArcSegment-Objekte mit unterschiedlichen SweepDirection-Einstellungen  
  
## <a name="freezable-features"></a>Funktionen von Freezable-Objekten  
 Ein <xref:System.Windows.Media.ArcSegment> ist eine Art von <xref:System.Windows.Freezable> Objekt. Informationen zu <xref:System.Windows.Freezable> Funktionen, z. B. sperren und zu klonen, finden Sie unter den [Übersicht über Freezable-Objekte](~/docs/framework/wpf/advanced/freezable-objects-overview.md).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.PathFigure" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Media.ArcSegment" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Media.ArcSegment> -Klasse definiert nur den Zielpunkt des Bogens dar; der Anfangspunkt des Bogens ist der aktuelle die <xref:System.Windows.Media.PathFigure>, zu der die <xref:System.Windows.Media.ArcSegment> hinzugefügt wird.  
  
 Für die meisten elliptische Bogen, der eine bestimmte Position, Größe und Drehung gibt es vier verschiedene Bögen gezeichnet werden können. die `largeArc` und `sweepDirection` Parameter geben an, welche Bogen zu verwenden.  
  
 Der Bogen Durchläufe die vier in Frage kommenden zwei große Bögen mit Sweep-Vorgängen um 180 Grad oder größer und zwei darstellen kleinere Bögen mit Sweep-Vorgängen um 180 Grad oder weniger. Wenn `largeArc` ist `true`, dann ist eines der zwei größere Bogen Sweep ausgewählten ist, andernfalls Wenn `largeArc` ist `false`möglich des Bogens kleinere Sweep-Vorgängen ausgewählt werden.  
  
 Wenn `sweepDirection` ist <xref:System.Windows.Media.SweepDirection.Clockwise>, der Bogen in einer Richtung mit positivem Winkel gezeichnet wird. Wenn `sweepDirection` ist <xref:System.Windows.Media.SweepDirection.Counterclockwise>, der Bogen in einer Richtung mit negativem Winkel gezeichnet wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArcSegment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.ArcSegment.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArcSegment();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Media.ArcSegment" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Media.ArcSegment> -Klasse definiert nur den Zielpunkt des Bogens dar; der Anfangspunkt des Bogens ist der aktuelle die <xref:System.Windows.Media.PathFigure>, zu der die <xref:System.Windows.Media.ArcSegment> hinzugefügt wird.  
  
 Für die meisten elliptische Bogen, der eine bestimmte Position, Größe und Drehung gibt es vier verschiedene Bögen gezeichnet werden können. die `largeArc` und `sweepDirection` Parameter geben an, welche Bogen zu verwenden.  
  
 Der Bogen Durchläufe die vier in Frage kommenden zwei große Bögen mit Sweep-Vorgängen um 180 Grad oder größer und zwei darstellen kleinere Bögen mit Sweep-Vorgängen um 180 Grad oder weniger. Wenn `largeArc` ist `true`, dann ist eines der zwei größere Bogen Sweep ausgewählten ist, andernfalls Wenn `largeArc` ist `false`möglich des Bogens kleinere Sweep-Vorgängen ausgewählt werden.  
  
 Wenn `sweepDirection` ist <xref:System.Windows.Media.SweepDirection.Clockwise>, der Bogen in einer Richtung mit positivem Winkel gezeichnet wird. Wenn `sweepDirection` ist <xref:System.Windows.Media.SweepDirection.Counterclockwise>, der Bogen in einer Richtung mit negativem Winkel gezeichnet wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArcSegment (System.Windows.Point point, System.Windows.Size size, double rotationAngle, bool isLargeArc, System.Windows.Media.SweepDirection sweepDirection, bool isStroked);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Point point, valuetype System.Windows.Size size, float64 rotationAngle, bool isLargeArc, valuetype System.Windows.Media.SweepDirection sweepDirection, bool isStroked) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.ArcSegment.#ctor(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArcSegment(System::Windows::Point point, System::Windows::Size size, double rotationAngle, bool isLargeArc, System::Windows::Media::SweepDirection sweepDirection, bool isStroked);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.ArcSegment : System.Windows.Point * System.Windows.Size * double * bool * System.Windows.Media.SweepDirection * bool -&gt; System.Windows.Media.ArcSegment" Usage="new System.Windows.Media.ArcSegment (point, size, rotationAngle, isLargeArc, sweepDirection, isStroked)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="size" Type="System.Windows.Size" />
        <Parameter Name="rotationAngle" Type="System.Double" />
        <Parameter Name="isLargeArc" Type="System.Boolean" />
        <Parameter Name="sweepDirection" Type="System.Windows.Media.SweepDirection" />
        <Parameter Name="isStroked" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point">Der Zielpunkt des Bogens. Der Anfangspunkt des Bogens wird als aktueller Punkt der <see cref="T:System.Windows.Media.PathFigure" /> definiert, der das <see cref="T:System.Windows.Media.ArcSegment" /> hinzugefügt wird.</param>
        <param name="size">Der X- und Y-Radius des Bogens. Der X-Radius wird von der <see cref="P:System.Windows.Size.Width" />-Eigenschaft der <see cref="T:System.Windows.Size" />-Struktur angegeben. Der Y-Radius wird von der <see cref="P:System.Windows.Size.Height" />-Eigenschaft der <see cref="T:System.Windows.Size" />-Struktur angegeben.</param>
        <param name="rotationAngle">Die Drehung der X-Achse der Ellipse.</param>
        <param name="isLargeArc">Gibt an, ob der Bogen größer als 180 Grad sein soll.</param>
        <param name="sweepDirection">Legen Sie als Wert <see cref="F:System.Windows.Media.SweepDirection.Clockwise" /> fest, um den Bogen in einer Richtung mit positivem Winkel zu zeichnen. Legen Sie als Wert <see cref="F:System.Windows.Media.SweepDirection.Counterclockwise" /> fest, um den Bogen in einer Richtung mit negativem Winkel zu zeichnen.</param>
        <param name="isStroked">Legen Sie als Wert <c>TRUE</c> fest, um den Bogen mit Strichen zu zeichnen, wenn zum Rendern des Segments ein <see cref="T:System.Windows.Media.Pen" /> verwendet wird; andernfalls <c>FALSE</c>.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Media.ArcSegment" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Media.ArcSegment> -Klasse definiert nur den Zielpunkt des Bogens dar; der Anfangspunkt des Bogens ist der aktuelle die <xref:System.Windows.Media.PathFigure>, zu der die <xref:System.Windows.Media.ArcSegment> hinzugefügt wird.  
  
 Für die meisten elliptische Bogen, der eine bestimmte Position, Größe und Drehung gibt es vier verschiedene Bögen gezeichnet werden können. die `largeArc` und `sweepDirection` Parameter geben an, welche Bogen zu verwenden.  
  
 Der Bogen Durchläufe die vier in Frage kommenden zwei große Bögen mit Sweep-Vorgängen um 180 Grad oder größer und zwei darstellen kleinere Bögen mit Sweep-Vorgängen um 180 Grad oder weniger. Wenn `largeArc` ist `true`, dann ist eines der zwei größere Bogen Sweep ausgewählten ist, andernfalls Wenn `largeArc` ist `false`möglich des Bogens kleinere Sweep-Vorgängen ausgewählt werden.  
  
 Wenn `sweepDirection` ist <xref:System.Windows.Media.SweepDirection.Clockwise>, der Bogen in einer Richtung mit positivem Winkel gezeichnet wird. Wenn `sweepDirection` ist <xref:System.Windows.Media.SweepDirection.Counterclockwise>, der Bogen in einer Richtung mit negativem Winkel gezeichnet wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.ArcSegment Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.ArcSegment Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.ArcSegment.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As ArcSegment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::ArcSegment ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.ArcSegment" Usage="arcSegment.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.ArcSegment</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt einen änderbaren Klon dieser <see cref="T:System.Windows.Media.ArcSegment" />, indem tiefe Kopien der Werte dieses Objekts erzeugt werden. Beim Kopieren von Abhängigkeitseigenschaften kopiert diese Methode Ressourcenverweise und Datenbindungen (die aber möglicherweise nicht mehr aufgelöst werden können), jedoch keine Animationen oder ihre aktuellen Werte.</summary>
        <returns>Ein änderbarer Klon des aktuellen Objekts. Die <see cref="P:System.Windows.Freezable.IsFrozen" />-Eigenschaft des geklonten Objekts ist <see langword="false" />, auch wenn die <see cref="P:System.Windows.Freezable.IsFrozen" />-Eigenschaft der Quelle <see langword="true." /> war.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird verwendet, um änderbare Kopien zu erzeugen fixierten <xref:System.Windows.Freezable> Objekte (oder ein beliebiges <xref:System.Windows.Freezable> Objekt). Der Einfachheit halber führt Shadowing für diese Methode die geerbte Version mit einer Implementierung mit starker Typisierung.  
  
 Weitere Informationen finden Sie unter <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.ArcSegment CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.ArcSegment CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.ArcSegment.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As ArcSegment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::ArcSegment ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValue : unit -&gt; System.Windows.Media.ArcSegment" Usage="arcSegment.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.ArcSegment</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt einen änderbaren Klon des <see cref="T:System.Windows.Media.ArcSegment" />-Objekts, indem tiefe Kopien der aktuellen Werte dieses Objekts erzeugt werden. Ressourcenverweise, Datenbindungen und Animationen werden nicht kopiert, ihre aktuellen Werte werden jedoch kopiert.</summary>
        <returns>Ein änderbarer Klon des aktuellen Objekts. Die <see cref="P:System.Windows.Freezable.IsFrozen" />-Eigenschaft des geklonten Objekts ist <see langword="false" />, auch wenn die <see cref="P:System.Windows.Freezable.IsFrozen" />-Eigenschaft der Quelle <see langword="true" /> war.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird verwendet, um änderbare Kopien zu erzeugen fixierten <xref:System.Windows.Freezable> Objekte (oder ein beliebiges <xref:System.Windows.Freezable> Objekt). Der Einfachheit halber führt Shadowing für diese Methode die geerbte Version mit einer Implementierung mit starker Typisierung.  
  
 Weitere Informationen finden Sie unter <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.ArcSegment.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceCore : unit -&gt; System.Windows.Freezable&#xA;override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="arcSegment.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLargeArc">
      <MemberSignature Language="C#" Value="public bool IsLargeArc { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLargeArc" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.ArcSegment.IsLargeArc" />
      <MemberSignature Language="VB.NET" Value="Public Property IsLargeArc As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLargeArc { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsLargeArc : bool with get, set" Usage="System.Windows.Media.ArcSegment.IsLargeArc" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Kreissegment größer als 180 Grad sein soll, oder legt ihn fest.</summary>
        <value><see langword="true" /> Wenn das Kreissegment größer als 180 Grad sein soll; andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Für die meisten Bögen von einer bestimmten Position, Größe und Rotation gibt es vier verschiedene Bögen gezeichnet werden können; die <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> und <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> -Eigenschaften angeben, welche Bogen zu verwenden.  
  
 Der Bogen Durchläufe die vier in Frage kommenden zwei große Bögen mit Sweep-Vorgängen um 180 Grad oder größer und zwei darstellen kleinere Bögen mit Sweep-Vorgängen um 180 Grad oder weniger. Wenn <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> ist `true`, dann ist eines der zwei größere Bogen Sweep ausgewählten ist, andernfalls Wenn ist `false`möglich des Bogens kleinere Sweep-Vorgängen ausgewählt werden. Die verbleibenden beiden möglichen Bogen werden jeweils in eine andere Richtung gezeichnet: <xref:System.Windows.Media.SweepDirection.Counterclockwise> oder <xref:System.Windows.Media.SweepDirection.Clockwise>. Die <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> gibt an, welche Eigenschaft.  
  
 Die folgende Abbildung zeigt zwei elliptische Bogen, die identisch sind ihre <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> Einstellungen.  
  
 ![ArcSegments mit unterschiedlichen IsLargeArc-Einstellungen](~/add/media/arcsegment-islargearc.png "ArcSegments mit unterschiedlichen IsLargeArc-Einstellungen")  
ArcSegment-Objekte mit unterschiedlichen IsLargeArc-Einstellungen  
  
<a name="dependencyPropertyInfo_IsLargeArc"></a>   
## <a name="dependency-property-information"></a>Informationen zur Abhängigkeitseigenschaft  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.Media.ArcSegment.IsLargeArcProperty>|  
|Legen Sie auf der Metadaten-Eigenschaften `true`|Keiner|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLargeArcProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsLargeArcProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsLargeArcProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.ArcSegment.IsLargeArcProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsLargeArcProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsLargeArcProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsLargeArcProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.ArcSegment.IsLargeArcProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Media.ArcSegment.IsLargeArc" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Point">
      <MemberSignature Language="C#" Value="public System.Windows.Point Point { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point Point" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.ArcSegment.Point" />
      <MemberSignature Language="VB.NET" Value="Public Property Point As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point Point { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberSignature Language="F#" Value="member this.Point : System.Windows.Point with get, set" Usage="System.Windows.Media.ArcSegment.Point" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Endpunkt des elliptischen Bogens ab oder legt diesen fest.</summary>
        <value>Der Punkt, bis zu dem der Bogen gezeichnet wird. Der Standardwert ist (0,0).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Media.ArcSegment> -Klasse definiert nur den Zielpunkt des Bogens dar; der Anfangspunkt des Bogens ist der aktuelle die <xref:System.Windows.Media.PathFigure> , der die <xref:System.Windows.Media.ArcSegment> hinzugefügt wird.  
  
 Wenn des Bogensegments Start- und Endpunkt identisch sind, wird kein Bogen gezeichnet.  
  
 Für die meisten Bögen von einer bestimmten Position, Größe und Rotation gibt es vier verschiedene Bögen gezeichnet werden können; die <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> und <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> -Eigenschaften angeben, welche Bogen zu verwenden.  
  
 Der Bogen Durchläufe die vier in Frage kommenden zwei große Bögen mit Sweep-Vorgängen um 180 Grad oder größer und zwei darstellen kleinere Bögen mit Sweep-Vorgängen um 180 Grad oder weniger. Wenn <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> ist `true`, dann ist eines der zwei größere Bogen Sweep ausgewählten ist, andernfalls Wenn ist `false`möglich des Bogens kleinere Sweep-Vorgängen ausgewählt werden. Die verbleibenden beiden möglichen Bogen werden jeweils in eine andere Richtung gezeichnet: <xref:System.Windows.Media.SweepDirection.Counterclockwise> oder <xref:System.Windows.Media.SweepDirection.Clockwise>. Die <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> gibt an, welche Eigenschaft.  
  
 Die folgende Abbildung zeigt mehrere elliptische Bogen, die identisch sind ihre <xref:System.Windows.Media.ArcSegment.Point%2A> Einstellungen.  
  
 ![ArcSegments mit unterschiedlichen Point-Einstellungen](~/add/media/arcsegment-point.png "ArcSegments mit unterschiedlichen Point-Einstellungen")  
Mehrere ArcSegment-Objekte mit unterschiedlichen Point-Einstellungen  
  
<a name="dependencyPropertyInfo_Point"></a>   
## <a name="dependency-property-information"></a>Informationen zur Abhängigkeitseigenschaft  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.Media.ArcSegment.PointProperty>|  
|Legen Sie auf der Metadaten-Eigenschaften `true`|Keiner|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PointProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PointProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PointProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.ArcSegment.PointProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PointProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PointProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PointProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.ArcSegment.PointProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Media.ArcSegment.Point" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RotationAngle">
      <MemberSignature Language="C#" Value="public double RotationAngle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 RotationAngle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.ArcSegment.RotationAngle" />
      <MemberSignature Language="VB.NET" Value="Public Property RotationAngle As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double RotationAngle { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.RotationAngle : double with get, set" Usage="System.Windows.Media.ArcSegment.RotationAngle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert (in Grad) ab oder legt ihn fest, um den die Ellipse um die X-Achse gedreht wird.</summary>
        <value>Der Wert (in Grad), um den die Ellipse um die X-Achse gedreht wird. Der Standardwert ist 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die folgende Abbildung zeigt mehrere elliptische Bogen, die identisch sind ihre <xref:System.Windows.Media.ArcSegment.RotationAngle%2A> Einstellungen.  
  
 ![ArcSegments mit unterschiedlichen RotationAngle-Einstellungen](~/add/media/arcsegment-rotationangle.png "ArcSegments mit unterschiedlichen RotationAngle-Einstellungen")  
Mehrere ArcSegment-Objekte mit unterschiedlichen RotationAngle-Einstellungen  
  
 Beachten Sie, wenn die Breite und Höhe des Bogens identisch sind, durch Festlegen dieser Eigenschaft keine Auswirkungen hat.  
  
<a name="dependencyPropertyInfo_RotationAngle"></a>   
## <a name="dependency-property-information"></a>Informationen zur Abhängigkeitseigenschaft  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.Media.ArcSegment.RotationAngleProperty>|  
|Legen Sie auf der Metadaten-Eigenschaften `true`|Keiner|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotationAngleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RotationAngleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RotationAngleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.ArcSegment.RotationAngleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RotationAngleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ RotationAngleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable RotationAngleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.ArcSegment.RotationAngleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die Abhängigkeitseigenschaft <see cref="P:System.Windows.Media.ArcSegment.RotationAngle" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public System.Windows.Size Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Size Size" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.ArcSegment.Size" />
      <MemberSignature Language="VB.NET" Value="Public Property Size As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Size Size { System::Windows::Size get(); void set(System::Windows::Size value); };" />
      <MemberSignature Language="F#" Value="member this.Size : System.Windows.Size with get, set" Usage="System.Windows.Media.ArcSegment.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den X- und Y-Radius des Bogens als <see cref="T:System.Windows.Size" />-Struktur ab oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.Windows.Size" />-Struktur, die den X- und Y-Radius eines elliptischen Bogens beschreibt. Die <see cref="T:System.Windows.Size" /> -Struktur <see cref="P:System.Windows.Size.Width" /> Eigenschaft gibt an, den Radius des Bogens X-, dessen <see cref="P:System.Windows.Size.Height" /> Eigenschaft gibt an, den Radius des Bogens y-. Der Standardwert ist 0,0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die folgende Abbildung zeigt mehrere elliptische Bogen, die identisch sind ihre <xref:System.Windows.Media.ArcSegment.Size%2A> Einstellungen.  
  
 ![ArcSegments mit unterschiedlichen Size-Einstellungen](~/add/media/arcsegment-size.png "ArcSegments mit unterschiedlichen Size-Einstellungen")  
Mehrere ArcSegment-Objekte mit unterschiedlichen Size-Einstellungen  
  
<a name="dependencyPropertyInfo_Size"></a>   
## <a name="dependency-property-information"></a>Informationen zur Abhängigkeitseigenschaft  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.Media.ArcSegment.SizeProperty>|  
|Legen Sie auf der Metadaten-Eigenschaften `true`|Keiner|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SizeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SizeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SizeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.ArcSegment.SizeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SizeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SizeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SizeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.ArcSegment.SizeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Media.ArcSegment.Size" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SweepDirection">
      <MemberSignature Language="C#" Value="public System.Windows.Media.SweepDirection SweepDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.SweepDirection SweepDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.ArcSegment.SweepDirection" />
      <MemberSignature Language="VB.NET" Value="Public Property SweepDirection As SweepDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::SweepDirection SweepDirection { System::Windows::Media::SweepDirection get(); void set(System::Windows::Media::SweepDirection value); };" />
      <MemberSignature Language="F#" Value="member this.SweepDirection : System.Windows.Media.SweepDirection with get, set" Usage="System.Windows.Media.ArcSegment.SweepDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.SweepDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab bzw. legt einen Wert fest, der angibt, ob der Bogen in <see cref="F:System.Windows.Media.SweepDirection.Clockwise" />-Richtung oder <see cref="F:System.Windows.Media.SweepDirection.Counterclockwise" />-Richtung gezeichnet  wird.</summary>
        <value>Ein Wert, der die Richtung angibt, in der der Bogen gezeichnet wird. Der Standardwert ist <see cref="F:System.Windows.Media.SweepDirection.Counterclockwise" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Für eine <xref:System.Windows.Media.ArcSegment> mit einer angegebenen <xref:System.Windows.Media.ArcSegment.Size%2A>, <xref:System.Windows.Media.ArcSegment.RotationAngle%2A>, Punkt beginnen und enden <xref:System.Windows.Media.ArcSegment.Point%2A>, unterschiedliche Bögen sind möglich. Angeben der <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> Eigenschaft verringert die Anzahl der möglichen Bögen auf zwei: einen Bogen gezeichnet wird von den Anfangspunkt bis zum Ende <xref:System.Windows.Media.ArcSegment.Point%2A> in einer <xref:System.Windows.Media.SweepDirection.Clockwise> Richtung und einen Bogen gezeichnet wird von der Startpunkt zum Endpunkt in einer <xref:System.Windows.Media.SweepDirection.Counterclockwise> Richtung.  
  
 Die folgende Abbildung zeigt zwei elliptische Bogen, die identisch sind ihre <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> Einstellungen.  
  
 ![ArcSegments mit unterschiedlichen SweepDirection-Einstellungen](~/add/media/arcsegment-sweepdirection.png "ArcSegments mit unterschiedlichen SweepDirection-Einstellungen")  
ArcSegment-Objekte mit unterschiedlichen SweepDirection-Einstellungen  
  
<a name="dependencyPropertyInfo_SweepDirection"></a>   
## <a name="dependency-property-information"></a>Informationen zur Abhängigkeitseigenschaft  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.Media.ArcSegment.SweepDirectionProperty>|  
|Legen Sie auf der Metadaten-Eigenschaften `true`|Keiner|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SweepDirectionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SweepDirectionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SweepDirectionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.ArcSegment.SweepDirectionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SweepDirectionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SweepDirectionProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SweepDirectionProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.ArcSegment.SweepDirectionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Media.ArcSegment.SweepDirection" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>