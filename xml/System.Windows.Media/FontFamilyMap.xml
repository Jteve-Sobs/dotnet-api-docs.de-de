<Type Name="FontFamilyMap" FullName="System.Windows.Media.FontFamilyMap">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ef6a162442dfe5f25b40d5b0405f3798f1b6fbf6" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36468696" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FontFamilyMap" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FontFamilyMap extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.FontFamilyMap" />
  <TypeSignature Language="VB.NET" Value="Public Class FontFamilyMap" />
  <TypeSignature Language="C++ CLI" Value="public ref class FontFamilyMap" />
  <TypeSignature Language="F#" Value="type FontFamilyMap = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Legt fest, welche <see cref="T:System.Windows.Media.FontFamily" />-für einen angegebenen Satz von Unicode-Codepunkten und eine kulturspezifische Sprache verwendet werden soll.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Media.FontFamilyMap> gibt auch an ein Skalierungsfaktor, sodass das Ziel <xref:System.Windows.Media.FontFamily> Größe angepasst werden, damit sie die Größe der anderen in der zusammengesetzten Schriftfamilie verwendeten Schriftarten besser übereinstimmt.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontFamilyMap ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamilyMap.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FontFamilyMap();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Media.FontFamilyMap" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[FontSnippets#FontMapSnippet1](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontMapSnippets.xaml.cs#fontmapsnippet1)]
 [!code-vb[FontSnippets#FontMapSnippet1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontmapsnippets.xaml.vb#fontmapsnippet1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public System.Windows.Markup.XmlLanguage Language { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Markup.XmlLanguage Language" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamilyMap.Language" />
      <MemberSignature Language="VB.NET" Value="Public Property Language As XmlLanguage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Markup::XmlLanguage ^ Language { System::Windows::Markup::XmlLanguage ^ get(); void set(System::Windows::Markup::XmlLanguage ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Language : System.Windows.Markup.XmlLanguage with get, set" Usage="System.Windows.Media.FontFamilyMap.Language" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.XmlLanguage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die kulturspezifische Sprache für die <see cref="T:System.Windows.Media.FontFamilyMap" /> ab oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.Windows.Markup.XmlLanguage" />-Wert, der die kulturspezifische Sprache darstellt. Der Standardwert ist eine <see langword="null" />-Zeichenfolge.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Media.FontFamilyMap.Language%2A> Eigenschaft kann auf einen der folgenden verweisen:  
  
-   Eine bestimmte Sprache Wenn die <xref:System.Windows.Media.FontFamilyMap> gilt für nur in dieser Sprache.  
  
-   Eine neutrale Sprache, wenn es für eine Gruppe verwandter Sprachen gilt.  
  
-   Eine leere Zeichenfolge trifft auf einer beliebigen Sprache.  
  
 Der Standardwert ist die leere Zeichenfolge.  
  
   
  
## Examples  
 [!code-csharp[FontSnippets#FontMapSnippet5](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontMapSnippets.xaml.cs#fontmapsnippet5)]
 [!code-vb[FontSnippets#FontMapSnippet5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontmapsnippets.xaml.vb#fontmapsnippet5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public double Scale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Scale" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamilyMap.Scale" />
      <MemberSignature Language="VB.NET" Value="Public Property Scale As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Scale { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Scale : double with get, set" Usage="System.Windows.Media.FontFamilyMap.Scale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Schriftartskalierungsfaktor für die Ziel-<see cref="T:System.Windows.Media.FontFamily" /> ab oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.Double" />-Wert, der den Skalierungsfaktor darstellt. Der Standardwert ist <c>1.0</c>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Media.FontFamilyMap.Scale%2A> ermöglicht das Ziel <xref:System.Windows.Media.FontFamily> Größe angepasst werden, damit sie die Größe der anderen in der zusammengesetzten Schriftfamilie verwendeten Schriftarten besser übereinstimmt. Der Skalierungsfaktor ist relativ zum "Em" Einheiten.  
  
   
  
## Examples  
 [!code-csharp[FontSnippets#FontMapSnippet2](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontMapSnippets.xaml.cs#fontmapsnippet2)]
 [!code-vb[FontSnippets#FontMapSnippet2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontmapsnippets.xaml.vb#fontmapsnippet2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamilyMap.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Target { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Target : string with get, set" Usage="System.Windows.Media.FontFamilyMap.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Markup.DesignerSerializationOptions</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Zielschriftfamilie ab, für die der Unicode-Bereich gültig ist, oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.String" />-Wert, der den Namen der Schriftfamilie darstellt. Der Standardwert ist eine <see langword="null" />-Zeichenfolge.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[FontSnippets#FontMapSnippet3](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontMapSnippets.xaml.cs#fontmapsnippet3)]
 [!code-vb[FontSnippets#FontMapSnippet3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontmapsnippets.xaml.vb#fontmapsnippet3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unicode">
      <MemberSignature Language="C#" Value="public string Unicode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Unicode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamilyMap.Unicode" />
      <MemberSignature Language="VB.NET" Value="Public Property Unicode As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Unicode { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Unicode : string with get, set" Usage="System.Windows.Media.FontFamilyMap.Unicode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Markup.DesignerSerializationOptions</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Zeichenfolgenwert ab, der einen oder mehrere Unicode-Codepunktbereiche darstellt, oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.String" />-Wert, der Unicode-Codepunktbereiche darstellt. Der Standardwert ist "0000-10ffff".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeder Unicode-Codepunktbereich wird durch den ersten und letzten Codepunkt im Bereich dargestellt, z. B. `"0000-00ff"`. Die Zeichenfolge von Unicode-Code Point Bereiche wird durch ein Komma getrennt, z. B. `"0000-00ff, 00e0-00ef"`.  
  
 Eine Codepage ist eine Liste der ausgewählten Zeichencodes (Zeichen, die als die Codepunkte dargestellt) in einer bestimmten Reihenfolge. Codepages werden zur Unterstützung bestimmter Sprachen oder Gruppen von Sprachen, die gemeinsame Schriftsysteme verwenden in der Regel definiert. Windows-Codepages enthalten 256 Codepunkte und sind nullbasiert. Bei den meisten Codepages stellen die Codepunkte 0 bis 127 dieselben Zeichen dar. Dadurch können für Geschäftskontinuität und die Legacy-Code. Die Codepunkte 128 bis 255 unterscheiden sich erheblich zwischen Codepages. Weitere Informationen finden Sie unter [Codierung unterstützt Codepages](http://msdn.microsoft.com/library/5db4c290-41d5-41f5-a7e6-3ab0f4bfafae).  
  
   
  
## Examples  
 [!code-csharp[FontSnippets#FontMapSnippet4](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontMapSnippets.xaml.cs#fontmapsnippet4)]
 [!code-vb[FontSnippets#FontMapSnippet4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontmapsnippets.xaml.vb#fontmapsnippet4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">Der Unicode-Bereich ist nicht gültig.</exception>
      </Docs>
    </Member>
  </Members>
</Type>