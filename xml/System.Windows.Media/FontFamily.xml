<Type Name="FontFamily" FullName="System.Windows.Media.FontFamily">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0a7f586f16beba8ee58bca5573f6eee18af8c6c9" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70584641" /></Metadata><TypeSignature Language="C#" Value="public class FontFamily" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FontFamily extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.FontFamily" />
  <TypeSignature Language="VB.NET" Value="Public Class FontFamily" />
  <TypeSignature Language="C++ CLI" Value="public ref class FontFamily" />
  <TypeSignature Language="F#" Value="type FontFamily = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Media.FontFamilyConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Font)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Media.FontFamilyValueSerializer))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt eine Familie verwandter Schriftarten dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Schriftfamilie ist ein Satz von typegesichter, die denselben Familiennamen aufweisen, wie z. b. "Times New Roman", die sich aber in den Features unterscheiden. Diese Featureunterschiede <xref:System.Windows.Media.Typeface.Style%2A>umfassen z. b. kursiv <xref:System.Windows.Media.Typeface.Weight%2A>und wie Fett.  
  
 ![Schriftarten] (~/add/media/fonts.PNG "Schriftarten")  
Beispiel für typegesichter, die Mitglieder der Schriftfamilie "Times New Roman" sind  
  
 Die [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] <xref:System.Windows.Controls.Button> meisten-Elemente, wie <xref:System.Windows.Controls.TextBlock>z. b <xref:System.Windows.Controls.Control.FontFamily%2A> . und, stellen eine Eigenschaft bereit, die verwendet werden kann, um eine Schriftart für den Text Inhalt eines Steuer Elements anzugeben. Sie definieren die Schriftart, indem Sie diese Eigenschaft mit <xref:System.Windows.Media.FontFamily> einem Wert festlegen. In den folgenden Beispielen wird gezeigt, wie auf eine Schriftart [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] in und in Code verwiesen wird.  
  
 [!code-csharp[FontSnippets#FontFallbackSnippet3](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontFamilySnippets.xaml.cs#fontfallbacksnippet3)]
 [!code-vb[FontSnippets#FontFallbackSnippet3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontfamilysnippets.xaml.vb#fontfallbacksnippet3)]
 [!code-xaml[FontSnippets#FontFallbackSnippet3](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontFamilySnippets.xaml#fontfallbacksnippet3)]  
  
 Im vorherigen Beispiel wird auf die Schriftart, auf die verwiesen wird, "Comic Sans MS", durch ihren anzeigen *Amen*verwiesen. Außerdem wird in diesem Beispiel davon ausgegangen, dass die Schriftart in der System Schriftart Auflistung ist.  
  
## <a name="specifying-fonts-in-alternate-directories"></a>Angeben von Schriftarten in alternativen Verzeichnissen  
 Eine [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] -Anwendung kann ein anderes Verzeichnis als das Verzeichnis angeben, in dem die Schriftart Sammlung des Systems zum Auflösen von Schriftart verweisen enthalten ist. Der Anzeige Name der Schriftart kann einen absoluten [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] Wert angeben, um den Schriftart Verweis aufzulösen, wie im folgenden [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] Codebeispiel gezeigt.  
  
 [!code-csharp[FontSnippets#FontPackageSnippet6](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml.cs#fontpackagesnippet6)]
 [!code-vb[FontSnippets#FontPackageSnippet6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontpackagesnippets.xaml.vb#fontpackagesnippet6)]
 [!code-xaml[FontSnippets#FontPackageSnippet6](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml#fontpackagesnippet6)]  
  
 Der Anzeige Name der Schriftart kann auch einen relativen [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] Wert angeben, der einen Basiswert [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] erfordert, um den Schriftart Verweis aufzulösen. Die <xref:System.Windows.Media.FontFamily.BaseUri%2A> -Eigenschaft <xref:System.Windows.Media.FontFamily> des-Objekts entspricht dem Basiswert [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] . Im folgenden Codebeispiel wird gezeigt, wie Sie einen Schriftart Verweis erstellen, der aus einem [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] Basiswert und [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] einem relativen Wert besteht.  
  
 [!code-csharp[FontSnippets#FontPackageSnippet7](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml.cs#fontpackagesnippet7)]
 [!code-vb[FontSnippets#FontPackageSnippet7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontpackagesnippets.xaml.vb#fontpackagesnippet7)]  
  
 Sie können einen Basiswert [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] verwenden, wenn Sie auf eine Schriftart verweisen, die als Teil der Anwendung verpackt ist. Der Basiswert [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] kann z. b. ein "Pack://Application [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]" sein, mit dem Sie auf Schriftarten verweisen können, die als Anwendungs Ressourcen verpackt sind. Das folgende Codebeispiel zeigt einen Schriftart Verweis, der aus einem Basiswert [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] und einem relativen [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] Wert besteht.  
  
 [!code-csharp[FontSnippets#FontPackageSnippet2](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml.cs#fontpackagesnippet2)]
 [!code-vb[FontSnippets#FontPackageSnippet2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontpackagesnippets.xaml.vb#fontpackagesnippet2)]  
  
 Wenn ein <xref:System.Windows.Media.FontFamily> im Markup als Attribut angegeben wird, wird der Basiswert [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] immer impliziert-der [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] Wert ist der [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] der Seite. Der implizite Basiswert [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] wird mit dem relativen [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] Wert in der Zeichenfolge für den anzeigen Amen verwendet, um den Speicherort der Schriftart abzurufen. Beachten Sie im [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] folgenden Beispiel, dass der relative [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] Wert die Notation "./" verwendet. Dies bedeutet "im aktuellen Ordner" des Basiswerts [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] .  
  
 [!code-xaml[FontSnippets#FontPackageSnippet1](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml#fontpackagesnippet1)]  
  
 Eine [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] -Anwendung kann Schriftarten entweder als Inhalts Element, als Ressourcen Element oder als Bibliotheksressourcen Element verpacken. Weitere Informationen finden Sie unter [Schriftarten mit Anwendungen verpacken](~/docs/framework/wpf/advanced/packaging-fonts-with-applications.md).  
  
## <a name="font-fallback"></a>Schriftart-Fallback  
 Der Schriftart Fall Back bezieht sich auf die automatische Ersetzung einer anderen Schriftart als der Schriftart, die von der Client Anwendung ausgewählt wird. Es gibt zwei Hauptgründe, warum ein Fall Back für die Schriftart aufgerufen wird:  
  
-   Die Schriftart, die von der Client Anwendung angegeben wird, ist im System nicht vorhanden.  
  
-   Die Schriftart, die von der Client Anwendung angegeben wird, enthält nicht die zum Rendering von Text erforderlichen Symbole.  
  
 In[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]verwendet der Schriftart Fall Back Mechanismus die standardmäßige Fall Back-Schriftfamilie "Global User Interface" als Ersatz Schriftart. Diese Schriftart ist als zusammengesetzte Schriftart definiert, deren Dateiname "GlobalUserInterface. compositefont" lautet. Weitere Informationen zu zusammengesetzten Schriftarten finden Sie im Abschnitt zusammengesetzte Schriftarten in diesem Thema.  
  
 Der [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Fall Back Mechanismus für die Schriftart [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] ersetzt vorherige Technologien zur Schriftart Ersetzung.  
  
## <a name="defining-a-font-fallback-sequence-in-code"></a>Definieren einer Schriftart Fall Back Sequenz im Code  
 Sie können eine Schriftart Fall Back Sequenz in Ihrem Code definieren, mit der Sie eine Alternative Schriftart definieren können. Wenn Sie ein <xref:System.Windows.Media.FontFamily> -Objekt erstellen, geben Sie mehrere Schriftfamilien Namen, getrennt durch Kommas, <xref:System.String> für den-Parameter an, z. b. "Comic Sans MS, Verdana". Wenn in diesem Fall die Symbole aus der Schriftart "Comic Sans MS" nicht verfügbar sind, werden Symbole aus der Schriftart "Verdana" verwendet. Wenn weder "Comic Sans MS" noch "Verdana" die erforderlichen Glyphen aufweisen, wird die Fall Back-Schriftfamilie der Schriftart verwendet (standardmäßig "globale Benutzeroberfläche").  
  
 In den folgenden Beispielen wird gezeigt, wie eine Schriftart Fall Back Sequenz in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] und im Code definiert wird.  
  
 [!code-csharp[FontSnippets#FontFallbackSnippet1](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontFamilySnippets.xaml.cs#fontfallbacksnippet1)]
 [!code-vb[FontSnippets#FontFallbackSnippet1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontfamilysnippets.xaml.vb#fontfallbacksnippet1)]
 [!code-xaml[FontSnippets#FontFallbackSnippet1](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontFamilySnippets.xaml#fontfallbacksnippet1)]  
  
 Bei einer der Schriftarten in der Fall Back Sequenz können Schriftart Speicherorte angegeben werden. In den folgenden Beispielen wird auf "Pericles Light" als Anwendungs Ressource verwiesen, und auf "Verdana" wird als Member der System Schriftart Auflistung verwiesen.  
  
 [!code-csharp[FontSnippets#FontFallbackSnippet2](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontFamilySnippets.xaml.cs#fontfallbacksnippet2)]
 [!code-vb[FontSnippets#FontFallbackSnippet2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontfamilysnippets.xaml.vb#fontfallbacksnippet2)]
 [!code-xaml[FontSnippets#FontFallbackSnippet2](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontFamilySnippets.xaml#fontfallbacksnippet2)]  
  
## <a name="composite-fonts"></a>Zusammengesetzte Schriftarten  
 Die [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Plattform stellt eine zusammengesetzte Schriftart Funktion bereit, die die Erstellung vollständiger, mehrsprachiger Schriftarten ermöglicht, und um zu vermeiden, dass fehlende Symbole angezeigt werden. Zusammengesetzte Schriftarten [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] ersetzen die Mechanismen für Schriftart Verknüpfungen, Schriftart-fallback, Schriftart Bindung, Schriftart Zuordnung und Endbenutzer definierte Zeichen (EUDC).  
  
 Eine zusammengesetzte Schriftfamilie ist für Anwendungen über die <xref:System.Windows.Media.FontFamily> - <xref:System.Windows.Media.Typeface> und-Konstruktoren genauso verfügbar wie jede andere Schriftfamilie. Jede zusammengesetzte Schriftfamilie hat den Namen und kann, wie andere Schriftarten, lokalisierte Varianten Ihres Namens in mehreren Sprachen bereitstellen.  
  
 Im folgenden Markup Beispiel wird gezeigt, wie eine zusammengesetzte Schriftfamilie als Datenträger Datei definiert werden kann. Diese Datei kann im Standard [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] Schriftart Verzeichnis gespeichert werden, wie jede andere installierte Schriftart, oder Sie kann an einem beliebigen Speicherort referenziert werden, indem [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] Sie beim Verweis auf die Familie anhand des Namens auf verweisen.  
  
 Das folgende Beispiel zeigt das Markup der Schriftfamilie in einem ". CompositeFont "Datei.  
  
 [!code-xaml[CompositeFontMarkup#CF](~/samples/snippets/csharp/VS_Snippets_Wpf/CompositeFontMarkup/CS/comp.xaml#cf)]  
  
 Die folgenden vier zusammengesetzten Schriftarten werden im Windows-Standard Schriftart Verzeichnis als Teil der WPF-Installation angezeigt.  
  
|Schriftart|Hinweise|  
|----------|-----------|  
|Globalmonospace. compositefont|Rendert Text mit einer fest breiten-Schriftart, z. b. "Courier New" für lateinische Zeichen.|  
|Globalsanserif. compositefont|Rendert Text mit einer Sans-Serif-Schriftart, z. b. "Arial" für lateinische Zeichen.|  
|Globalserif. compositefont|Rendert Text mit einer Serif-Schriftart, z. b. "Times New Roman" für lateinische Zeichen.|  
|GlobalUserInterface. compositefont|Rendert Text mit einer Standard Schriftart, z. b. "Times New Roman" für lateinische Zeichen.|  
  
<a name="xamlAttributeUsage_FontFamily"></a>   
## <a name="xaml-attribute-usage"></a>Verwendung von XAML-Attributen  
  
```  
<object FontFamily="fontFamilyName"/>  
- or -  
<object FontFamily="fontFamilyNamesList"/>  
- or -  
<object FontFamily="fontFamilyFolderReference"/>  
- or -  
<object FontFamily="fontFamilyUriReference"/>  
```  
  
<a name="xamlValues_FontFamily"></a>   
## <a name="xaml-values"></a>XAML-Werte  
 *fontFamilyName*  
 Eine Zeichenfolge, die den Namen der Schriftfamilie angibt.  Beispielsweise `"Arial"` oder `"Century Gothic"`.  
  
 *fontfamilynameslist*  
 Eine Zeichenfolge, die mehrere Schrift Familiennamen angibt, die jeweils durch ein Komma getrennt sind (alle Leerräume nach einem Komma werden ignoriert).  Die angegebene erste Schriftfamilie dient als primäre Schriftfamilie. nachfolgende Schriftfamilien dienen als Fall Back Familien, die in Fällen verwendet werden, in denen die primäre Schriftfamilie nicht verfügbar oder nicht anwendbar ist.  `"Arial, Century Gothic"` Gibt z. b. Arial als primäre Schriftfamilie an, mit der Jahrhundert Gotik als Fall Back Schriftfamilie.  
  
 *fontfamilyfolderreference*  
 Eine Zeichenfolge, die einen Ordner mit der Schriftart sowie einen Schriftfamilien Namen angibt.  Der Name des Ordners und der Schriftfamilie werden durch ein #-Zeichen getrennt.  Der Ordner Verweis kann absolut oder relativ sein.  Beispielsweise `"Custom Fonts\#My Custom Font"`.  
  
 *fontfamilyurireference*  
 Eine Zeichenfolge, [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] die ein für die Schriftart sowie einen Schriftfamilien Namen angibt.  Der [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] Schriftfamilien Name und der Schriftfamilien Name werden durch ein #-Zeichen getrennt.  Beispielsweise `"http://MyFontServer/Fonts/#My Custom Font"`.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.Fonts" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Media.FontFamily" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontFamily ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FontFamily();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz einer anonymen <see cref="T:System.Windows.Media.FontFamily" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Parameter losen Konstruktor, wenn Sie eine zusammengesetzte Schriftart Programm gesteuert erstellen möchten. Dies bedeutet, dass Sie keinen Schrift Familiennamen für den Konstruktor angeben müssen, aber Sie müssen die Auflistungen in den <xref:System.Windows.Media.FontFamily.FamilyMaps%2A> -und- <xref:System.Windows.Media.FontFamily.FamilyNames%2A> Auflistungen vor der Verwendung der konstruierten Instanz auffüllen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontFamily (string familyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string familyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (familyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FontFamily(System::String ^ familyName);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.FontFamily : string -&gt; System.Windows.Media.FontFamily" Usage="new System.Windows.Media.FontFamily familyName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="familyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="familyName">Einer oder mehrere Familiennamen, die den Namen der neuen <see cref="T:System.Windows.Media.FontFamily" /> bilden. Mehrere Familiennamen sollten durch Kommas getrennt werden.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Media.FontFamily" />-Klasse aus dem angegebenen Namen der Schriftfamilie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jedem Familiennamen, der `familyName` im-Parameter angegeben ist, kann ein Orts Verweis auf ein Verzeichnis oder einen [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]vorangestellt werden. Der Speicherort Verweis wird durch ein Pfund-Zeichen (`#`) vom Familiennamen getrennt. Mehrere Familiennamen, die im `familyName` -Parameter angegeben sind, müssen durch Kommas getrennt werden.  
  
 Jede Familie kann eine echte Schriftart sein, die direkt einen Satz von Schriftart Dateien mit dem gleichen Familiennamen darstellt, oder ein Verweis auf einen Familiennamen, der in einer zusammengesetzten Schriftart Datei definiert ist.  
  
 Wenn mehrere Familien identifiziert werden, dienen die zweite und die nachfolgenden Schriftfamilien als Fall Back-Familien, die Code Punkte verarbeiten, die von der ersten Schriftfamilie nicht unterstützt werden. Für jeden Codepunkt, der nicht von der ersten Schriftfamilie unterstützt wird, wird jede nachfolgende Familie nacheinander geprüft.  
  
   
  
## Examples  
 [!code-csharp[FontSnippets#103](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/Window1.xaml.cs#103)]
 [!code-vb[FontSnippets#103](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/window1.xaml.vb#103)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="familyName" /> darf nicht <see langword="null" /> sein.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontFamily (Uri baseUri, string familyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUri, string familyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.#ctor(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUri As Uri, familyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FontFamily(Uri ^ baseUri, System::String ^ familyName);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.FontFamily : Uri * string -&gt; System.Windows.Media.FontFamily" Usage="new System.Windows.Media.FontFamily (baseUri, familyName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" />
        <Parameter Name="familyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="baseUri">Gibt die Basis [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] an, die zur Auflösung von <paramref name="familyName" /> verwendet wird.</param>
        <param name="familyName">Einer oder mehrere Familiennamen, die den Namen der neuen <see cref="T:System.Windows.Media.FontFamily" /> bilden. Mehrere Familiennamen sollten durch Kommas getrennt werden.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Media.FontFamily" />-Klasse aus dem angegebenen Namen der Schriftfamilie und einem optionalen Basis-[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]-Wert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der `familyName` Wert kann einen relativen [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] Wert angeben, der eine Basis [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] zum Auflösen des Schriftart Verweises erfordert. Der `baseUri` Wert kann sein `null`.  
  
   
  
## Examples  
 Der folgende Code zeigt einen Schriftart Verweis, der aus einem Basiswert [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] und einem relativen [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] Wert besteht.  
  
 [!code-csharp[FontSnippets#FontPackageSnippet2](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml.cs#fontpackagesnippet2)]
 [!code-vb[FontSnippets#FontPackageSnippet2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontpackagesnippets.xaml.vb#fontpackagesnippet2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Baseline">
      <MemberSignature Language="C#" Value="public double Baseline { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Baseline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.Baseline" />
      <MemberSignature Language="VB.NET" Value="Public Property Baseline As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Baseline { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Baseline : double with get, set" Usage="System.Windows.Media.FontFamily.Baseline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Abstand zwischen der Baseline und dem oberen Rand der Zeichenzelle ab oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.Double" />, das den Abstand zwischen der Baseline und dem oberen Rand der Zeichenzelle als Dezimalbruch der Geviertgröße der Schriftart angibt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseUri">
      <MemberSignature Language="C#" Value="public Uri BaseUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.BaseUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ BaseUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseUri : Uri" Usage="System.Windows.Media.FontFamily.BaseUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Basis-[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] ab, der zum Auflösen des Namens einer Schriftfamilie verwendet wird.</summary>
        <value>Ein Wert vom Typ <see cref="T:System.Uri" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Rückgabewert ist `null` , wenn der Schriftfamilien Name nicht von einer Basis [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] zum Auflösen des Schriftart Verweises abhängig ist. Verwenden Sie die <xref:System.Windows.Media.FontFamily.Source%2A> -Eigenschaft, um den Namen der Schriftart Familie <xref:System.Windows.Media.FontFamily> abzurufen, der zum Erstellen des-Objekts verwendet wird.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt die Ergebnisse des Abrufens <xref:System.Windows.Media.FontFamily.BaseUri%2A> der-Eigenschaft <xref:System.Windows.Media.FontFamily> aus einem-Objekt.  
  
 [!code-csharp[FontSnippets#FontPackageSnippet9](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml.cs#fontpackagesnippet9)]
 [!code-vb[FontSnippets#FontPackageSnippet9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontpackagesnippets.xaml.vb#fontpackagesnippet9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="fontFamily.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Das zu vergleichende <see cref="T:System.Windows.Media.FontFamily" />-Objekt.</param>
        <summary>Ruft einen Wert ab, der angibt, ob das aktuelle Schriftfamilienobjekt und das angegebene Schriftfamilienobjekt identisch sind.</summary>
        <returns><see langword="true" />, wenn <paramref name="o" /> gleich dem aktuellen <see cref="T:System.Windows.Media.FontFamily" />-Objekt ist; andernfalls <see langword="false" />. Wenn <paramref name="o" /> kein <see cref="T:System.Windows.Media.FontFamily" />-Objekt ist, wird <see langword="false" /> zurückgegeben.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FamilyMaps">
      <MemberSignature Language="C#" Value="public System.Windows.Media.FontFamilyMapCollection FamilyMaps { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.FontFamilyMapCollection FamilyMaps" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.FamilyMaps" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FamilyMaps As FontFamilyMapCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::FontFamilyMapCollection ^ FamilyMaps { System::Windows::Media::FontFamilyMapCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FamilyMaps : System.Windows.Media.FontFamilyMapCollection" Usage="System.Windows.Media.FontFamily.FamilyMaps" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.FontFamilyMapCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Auflistung von <see cref="T:System.Windows.Media.FontFamilyMap" />-Objekten ab.</summary>
        <value>Eine <see cref="T:System.Windows.Media.FontFamilyMapCollection" />, die <see cref="T:System.Windows.Media.FontFamilyMap" />-Objekte enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei <xref:System.Windows.Media.FontFamily> Objekten, die mit einem Schrift Familiennamen erstellt werden, gibt <xref:System.Windows.Media.FontFamily.FamilyMaps%2A> die-Eigenschaft eine leere, schreibgeschützte Auflistung zurück.  
  
 Das <xref:System.Windows.Media.FontFamilyMap> -Objekt definiert, welche Schriftart zum Anzeigen eines angegebenen Satzes von Unicode-Zeichen einer angegebenen Kultur verwendet werden soll.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FamilyNames">
      <MemberSignature Language="C#" Value="public System.Windows.Media.LanguageSpecificStringDictionary FamilyNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.LanguageSpecificStringDictionary FamilyNames" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.FamilyNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FamilyNames As LanguageSpecificStringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::LanguageSpecificStringDictionary ^ FamilyNames { System::Windows::Media::LanguageSpecificStringDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FamilyNames : System.Windows.Media.LanguageSpecificStringDictionary" Usage="System.Windows.Media.FontFamily.FamilyNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.LanguageSpecificStringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung von Zeichenfolgen und <see cref="T:System.Globalization.CultureInfo" />-Werten ab, die die Schriftfamiliennamen des <see cref="T:System.Windows.Media.FontFamily" />-Objekts darstellen.</summary>
        <value>Ein <see cref="T:System.Windows.Media.LanguageSpecificStringDictionary" />, das die Namen der Schriftfamilien darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[FontSnippets#106](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/Window1.xaml.cs#106)]
 [!code-vb[FontSnippets#106](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/window1.xaml.vb#106)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FamilyTypefaces">
      <MemberSignature Language="C#" Value="public System.Windows.Media.FamilyTypefaceCollection FamilyTypefaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.FamilyTypefaceCollection FamilyTypefaces" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.FamilyTypefaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FamilyTypefaces As FamilyTypefaceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::FamilyTypefaceCollection ^ FamilyTypefaces { System::Windows::Media::FamilyTypefaceCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FamilyTypefaces : System.Windows.Media.FamilyTypefaceCollection" Usage="System.Windows.Media.FontFamily.FamilyTypefaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.FamilyTypefaceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung von Schriftarten für das <see cref="T:System.Windows.Media.FontFamily" />-Objekt ab.</summary>
        <value>Eine <see cref="T:System.Windows.Media.FamilyTypefaceCollection" />, die eine Auflistung von Schriftarten für das <see cref="T:System.Windows.Media.FontFamily" />-Objekt darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_FamilyTypefaces"></a>   
## <a name="xaml-property-element-usage"></a>Verwendung von XAML-Eigenschaftenelementen  
  
```  
<object>  
  <object.FamilyTypefaces>  
    <OneOrMoreFontFamilyTypefaces/>  
  </object.FamilyTypefaces>  
</object>  
```  
  
<a name="xamlValues_FamilyTypefaces"></a>   
## <a name="xaml-values"></a>XAML-Werte  
 *Oneormorefontfamilytypegesichter*  
 Eine oder mehrere der typegesichter für das <xref:System.Windows.Media.FontFamily> -Objekt.  
  
   
  
## Examples  
 [!code-csharp[FontSnippets#107](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/Window1.xaml.cs#107)]
 [!code-vb[FontSnippets#107](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/window1.xaml.vb#107)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="fontFamily.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Dient als Hashfunktion für <see cref="T:System.Windows.Media.FontFamily" />. Sie ist für die Verwendung in Hashalgorithmen und Datenstrukturen, z. B. in einer Hashtabelle, geeignet.</summary>
        <returns>Ein <see cref="T:System.Int32" />-Wert, der den Hashcode für das aktuelle Objekt darstellt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypefaces">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.Windows.Media.Typeface&gt; GetTypefaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class System.Windows.Media.Typeface&gt; GetTypefaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.GetTypefaces" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypefaces () As ICollection(Of Typeface)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;System::Windows::Media::Typeface ^&gt; ^ GetTypefaces();" />
      <MemberSignature Language="F#" Value="member this.GetTypefaces : unit -&gt; System.Collections.Generic.ICollection&lt;System.Windows.Media.Typeface&gt;" Usage="fontFamily.GetTypefaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Windows.Media.Typeface&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Auflistung von <see cref="T:System.Windows.Media.Typeface" />-Objekten zurück, die die Schrifttypen am Speicherort für Systemstandardschriftarten darstellen.</summary>
        <returns>Eine <see cref="T:System.Collections.Generic.ICollection`1" /> von <see cref="T:System.Windows.Media.Typeface" />-Objekten.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[FontSnippets#104](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/Window1.xaml.cs#104)]
 [!code-vb[FontSnippets#104](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/window1.xaml.vb#104)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineSpacing">
      <MemberSignature Language="C#" Value="public double LineSpacing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 LineSpacing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.LineSpacing" />
      <MemberSignature Language="VB.NET" Value="Public Property LineSpacing As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double LineSpacing { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.LineSpacing : double with get, set" Usage="System.Windows.Media.FontFamily.LineSpacing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Zeilenabstandswert für das <see cref="T:System.Windows.Media.FontFamily" />-Objekt ab oder legt diesen fest. Der Zeilenabstand ist die empfohlene Entfernung von Baseline zu Baseline relativ zur Geviertgröße für den Text in dieser Schriftart.</summary>
        <value>Ein <see cref="T:System.Double" />, das den Zeilenabstand für das <see cref="T:System.Windows.Media.FontFamily" />-Objekt darstellt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.Source" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Source : string" Usage="System.Windows.Media.FontFamily.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Schriftfamiliennamen ab, der zum Erstellen des <see cref="T:System.Windows.Media.FontFamily" />-Objekts verwendet wird.</summary>
        <value>Der Schriftfamilienname des <see cref="T:System.Windows.Media.FontFamily" />-Objekts.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um den Basiswert [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] <xref:System.Windows.Media.FontFamily> eines-Objekts zurückzugeben, <xref:System.Windows.Media.FontFamily.BaseUri%2A>verwenden Sie.  
  
 Wenn das <xref:System.Windows.Media.FontFamily> Objekt ohne Angabe eines Schriftfamilien namens erstellt wurde, ist <xref:System.String.Empty>der Rückgabewert.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt die Ergebnisse des Abrufens <xref:System.Windows.Media.FontFamily.BaseUri%2A> der <xref:System.Windows.Media.FontFamily.Source%2A> -und-Eigenschaftswerte aus einem <xref:System.Windows.Media.FontFamily> -Objekt.  
  
 [!code-csharp[FontSnippets#FontPackageSnippet10](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml.cs#fontpackagesnippet10)]
 [!code-vb[FontSnippets#FontPackageSnippet10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontpackagesnippets.xaml.vb#fontpackagesnippet10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="fontFamily.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt den Wert der <see cref="P:System.Windows.Media.FontFamily.Source" />-Eigenschaft zurück.</summary>
        <returns>Der Quellspeicherort des <see cref="T:System.Windows.Media.FontFamily" />-Objekts, einschließlich des Speicherortverweises auf das Verzeichnis oder den [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)].</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn das <xref:System.Windows.Media.FontFamily> Objekt ohne Angabe eines Schriftfamilien namens erstellt wurde, ist <xref:System.String.Empty>der Rückgabewert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
