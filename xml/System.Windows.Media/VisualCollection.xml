<Type Name="VisualCollection" FullName="System.Windows.Media.VisualCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="19eeb062536a84069070c205aaddc936c33cd61d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class VisualCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit VisualCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.VisualCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class VisualCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualCollection sealed : System::Collections::ICollection" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="0abee-101">Stellt eine geordnete Auflistung von <see cref="T:System.Windows.Media.Visual" />-Objekten dar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0abee-101">Represents an ordered collection of <see cref="T:System.Windows.Media.Visual" /> objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0abee-102">Ein <xref:System.Windows.Media.VisualCollection> besitzt die impliziten Kontextaffinität.</span><span class="sxs-lookup"><span data-stu-id="0abee-102">A <xref:System.Windows.Media.VisualCollection> has implied context affinity.</span></span> <span data-ttu-id="0abee-103">Wenn eine Prozedur versucht, den Zugriff auf die <xref:System.Windows.Media.VisualCollection> aus einem anderen Kontext als dem Kontext des besitzenden <xref:System.Windows.Media.ContainerVisual>, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="0abee-103">If a procedure attempts to access the <xref:System.Windows.Media.VisualCollection> from a different context than the context of the owning <xref:System.Windows.Media.ContainerVisual>, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0abee-104">Im folgende Beispiel wird gezeigt, wie zum Erstellen einer <xref:System.Windows.Media.VisualCollection> und Mitglieder hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="0abee-104">The following example shows how to create a <xref:System.Windows.Media.VisualCollection> and add members to it.</span></span>  
  
 [!code-csharp[DrawingVisualSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingVisualSample/CSharp/Window1.xaml.cs#100)]
 [!code-vb[DrawingVisualSample#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingVisualSample/visualbasic/window1.xaml.vb#100)]  
  
> [!NOTE]
>  <span data-ttu-id="0abee-105">Das vollständige Beispiel finden Sie unter [Hit Test Using DrawingVisuals Sample](http://go.microsoft.com/fwlink/?LinkID=159994).</span><span class="sxs-lookup"><span data-stu-id="0abee-105">For the complete sample, see [Hit Test Using DrawingVisuals Sample](http://go.microsoft.com/fwlink/?LinkID=159994).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualCollection (System.Windows.Media.Visual parent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Media.Visual parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.#ctor(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parent As Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualCollection(System::Windows::Media::Visual ^ parent);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parent" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="parent">
          <span data-ttu-id="0abee-106">Das übergeordnete visuelle Objekt, dessen <see cref="T:System.Windows.Media.VisualCollection" /> zurückgegeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-106">The parent visual object whose <see cref="T:System.Windows.Media.VisualCollection" /> is returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0abee-107">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Media.VisualCollection" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-107">Initializes a new instance of the <see cref="T:System.Windows.Media.VisualCollection" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Windows::Media::Visual ^ visual);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">
          <span data-ttu-id="0abee-108">Das an <see cref="T:System.Windows.Media.Visual" /> anzufügende <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-108">The <see cref="T:System.Windows.Media.Visual" /> to append to the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0abee-109">Fügt ein <see cref="T:System.Windows.Media.Visual" /> an das Ende der <see cref="T:System.Windows.Media.VisualCollection" /> an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-109">Appends a <see cref="T:System.Windows.Media.Visual" /> to the end of the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0abee-110">Der Index in der Auflistung, an dem das <paramref name="visual" />-Objekt hinzugefügt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-110">The index in the collection at which <paramref name="visual" /> was added.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0abee-111">Hinzufügen einer <xref:System.Windows.Media.Visual> , dessen Wert `null` ist zulässig und löst keine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="0abee-111">Adding a <xref:System.Windows.Media.Visual> whose value is `null` is permitted and does not raise an exception.</span></span>  
  
 <span data-ttu-id="0abee-112">Die <xref:System.Windows.Media.VisualCollection.Add%2A> Methode legt auch die über-/ unterordnungsbeziehung zwischen dem übergeordneten Element visuelle Element, das der Besitzer ist von der <xref:System.Windows.Media.VisualCollection>, und dem untergeordneten Element `visual`.</span><span class="sxs-lookup"><span data-stu-id="0abee-112">The <xref:System.Windows.Media.VisualCollection.Add%2A> method also sets up the parent-child relationship between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the child `visual`.</span></span>  
  
 <span data-ttu-id="0abee-113">Wenn Sie größere auf niedriger Ebene Kontrolle über die zugrunde liegende Speicher-Implementierung von untergeordneten visuellen Objekten einer benutzerdefinierten Klasse benötigen, erwägen Sie die <xref:System.Windows.Media.Visual.AddVisualChild%2A> und <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="0abee-113">If you need greater low-level control over the underlying storage implementation of visual child objects of a custom class, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods.</span></span> <span data-ttu-id="0abee-114">Wenn Sie diese Methoden verwenden, Sie müssen Ihre eigene Implementierung Speicher definieren und verwenden Sie keine <xref:System.Windows.Media.VisualCollection>.</span><span class="sxs-lookup"><span data-stu-id="0abee-114">When you use these methods, you must define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0abee-115">Im folgende Beispiel wird gezeigt, wie zum Erstellen einer <xref:System.Windows.Media.VisualCollection> und Mitglieder hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="0abee-115">The following example shows how to create a <xref:System.Windows.Media.VisualCollection> and add members to it.</span></span>  
  
 [!code-csharp[DrawingVisualSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingVisualSample/CSharp/Window1.xaml.cs#100)]
 [!code-vb[DrawingVisualSample#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingVisualSample/visualbasic/window1.xaml.vb#100)]  
  
> [!NOTE]
>  <span data-ttu-id="0abee-116">Das vollständige Beispiel finden Sie unter [Hit Test Using DrawingVisuals Sample](http://go.microsoft.com/fwlink/?LinkID=159994).</span><span class="sxs-lookup"><span data-stu-id="0abee-116">For the complete sample, see [Hit Test Using DrawingVisuals Sample](http://go.microsoft.com/fwlink/?LinkID=159994).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0abee-117">Wenn das <see cref="T:System.ArgumentException" /> ein Stammelement ist, wird eine <see cref="T:System.Windows.Media.Visual" /> ausgelöst.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-117">An <see cref="T:System.ArgumentException" /> is thrown if the <see cref="T:System.Windows.Media.Visual" /> is a root element.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Capacity">
      <MemberSignature Language="C#" Value="public int Capacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Capacity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.Capacity" />
      <MemberSignature Language="VB.NET" Value="Public Property Capacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Capacity { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0abee-118">Ruft die Anzahl der Elemente ab, die die <see cref="T:System.Windows.Media.VisualCollection" /> enthalten kann, oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-118">Gets or sets the number of elements that the <see cref="T:System.Windows.Media.VisualCollection" /> can contain.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0abee-119">Die anfängliche Anzahl von Elementen, die die <see cref="T:System.Windows.Media.VisualCollection" /> enthalten kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-119">The number of elements that the <see cref="T:System.Windows.Media.VisualCollection" /> can contain.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0abee-120">Der Wert der <xref:System.Windows.Media.VisualCollection.Capacity%2A> ist die Anzahl der Elemente, die die <xref:System.Windows.Media.VisualCollection> speichern.</span><span class="sxs-lookup"><span data-stu-id="0abee-120">The value of <xref:System.Windows.Media.VisualCollection.Capacity%2A> is the number of elements that the <xref:System.Windows.Media.VisualCollection> is capable of storing.</span></span> <span data-ttu-id="0abee-121"><xref:System.Windows.Media.VisualCollection.Count%2A> ist die Anzahl von visuellen Elementen, die tatsächlich in der <xref:System.Windows.Media.VisualCollection>.</span><span class="sxs-lookup"><span data-stu-id="0abee-121"><xref:System.Windows.Media.VisualCollection.Count%2A> is the number of visuals that are actually in the <xref:System.Windows.Media.VisualCollection>.</span></span> <span data-ttu-id="0abee-122"><xref:System.Windows.Media.VisualCollection.Capacity%2A> ist immer größer als oder gleich <xref:System.Windows.Media.VisualCollection.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="0abee-122"><xref:System.Windows.Media.VisualCollection.Capacity%2A> is always greater than or equal to <xref:System.Windows.Media.VisualCollection.Count%2A>.</span></span> <span data-ttu-id="0abee-123">Wenn <xref:System.Windows.Media.VisualCollection.Count%2A> überschreitet <xref:System.Windows.Media.VisualCollection.Capacity%2A> beim Hinzufügen von Elementen, die Kapazität der <xref:System.Windows.Media.VisualCollection> erhöht wird.</span><span class="sxs-lookup"><span data-stu-id="0abee-123">If <xref:System.Windows.Media.VisualCollection.Count%2A> exceeds <xref:System.Windows.Media.VisualCollection.Capacity%2A> while adding elements, the capacity of the <xref:System.Windows.Media.VisualCollection> is increased.</span></span> <span data-ttu-id="0abee-124">Standardmäßig <xref:System.Windows.Media.VisualCollection.Capacity%2A> 0 (null).</span><span class="sxs-lookup"><span data-stu-id="0abee-124">By default <xref:System.Windows.Media.VisualCollection.Capacity%2A> is zero.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0abee-125">
            <see cref="P:System.Windows.Media.VisualCollection.Capacity" /> ist auf einen Wert festgelegt, der kleiner als <see cref="P:System.Windows.Media.VisualCollection.Count" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-125">
              <see cref="P:System.Windows.Media.VisualCollection.Capacity" /> is set to a value that is less than <see cref="P:System.Windows.Media.VisualCollection.Count" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0abee-126">Entfernt alle Elemente aus der <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-126">Removes all elements from the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0abee-127">Die <xref:System.Windows.Media.VisualCollection.Count%2A> wird auf 0 (null) zurückgesetzt.</span><span class="sxs-lookup"><span data-stu-id="0abee-127">The <xref:System.Windows.Media.VisualCollection.Count%2A> is reset to zero.</span></span> <span data-ttu-id="0abee-128">Der Wert, der die <xref:System.Windows.Media.VisualCollection.Capacity%2A> bleibt unverändert.</span><span class="sxs-lookup"><span data-stu-id="0abee-128">The value of the <xref:System.Windows.Media.VisualCollection.Capacity%2A> remains unchanged.</span></span> <span data-ttu-id="0abee-129">Die Kapazität des Zurücksetzen der <xref:System.Windows.Media.VisualCollection>legen die <xref:System.Windows.Media.VisualCollection.Capacity%2A> Eigenschaft auf die gewünschte Größe.</span><span class="sxs-lookup"><span data-stu-id="0abee-129">To reset the capacity of the <xref:System.Windows.Media.VisualCollection>, set the <xref:System.Windows.Media.VisualCollection.Capacity%2A> property to the desired size.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.Contains(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Media::Visual ^ visual);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">
          <span data-ttu-id="0abee-130">Das <see cref="T:System.Windows.Media.Visual" />, das in der Auflistung gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-130">The <see cref="T:System.Windows.Media.Visual" /> to search for in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0abee-131">Gibt einen <see cref="T:System.Boolean" />-Wert zurück, der angibt, ob das angegebene <see cref="T:System.Windows.Media.Visual" /> in der Auflistung enthalten ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-131">Returns a <see cref="T:System.Boolean" /> value that indicates whether the specified <see cref="T:System.Windows.Media.Visual" /> is contained in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0abee-132">
            <see langword="true" />, wenn der <paramref name="visual" /> in der Auflistung enthalten ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-132">
              <see langword="true" /> if <paramref name="visual" /> is contained in the collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0abee-133">Das Laufzeitszenario Worst-Case-für diese Funktion ist `O(n)`, wobei `n` ist die Anzahl der Elemente in der <xref:System.Windows.Media.VisualCollection>.</span><span class="sxs-lookup"><span data-stu-id="0abee-133">The worst-case runtime scenario of this function is `O(n)`, where `n` is the number of items in the <xref:System.Windows.Media.VisualCollection>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0abee-134">Kopiert die aktuelle Auflistung in das übergebene Array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-134">Copies the current collection into the passed array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="0abee-135">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus der <see cref="T:System.Windows.Media.VisualCollection" /> kopierten Elemente ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-135">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements that are copied from the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0abee-136">Der nullbasierte Index im <c>array</c>, ab dem kopiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-136">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0abee-137">Kopiert die Elemente in der Auflistung ab einem angegebenen Arrayindex in ein Array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-137">Copies the items in the collection to an array, starting at a specific array index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Windows.Media.Visual[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Windows.Media.Visual[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.CopyTo(System.Windows.Media.Visual[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As Visual(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Windows::Media::Visual ^&gt; ^ array, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Windows.Media.Visual[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="0abee-138">Ein Array von <see cref="T:System.Windows.Media.Visual" />-Objekten (die über eine nullbasierte Indizierung verfügen müssen).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-138">An array of <see cref="T:System.Windows.Media.Visual" /> objects (which must have zero-based indexing).</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0abee-139">Der Index, an dem mit dem Kopieren in <c>array</c> begonnen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-139">The index to start copying from within <c>array</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0abee-140">Kopiert die aktuelle Auflistung in das übergebene <see cref="T:System.Windows.Media.Visual" />-Array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-140">Copies the current collection into the passed <see cref="T:System.Windows.Media.Visual" /> array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0abee-141">Ruft die Anzahl der Elemente in der Auflistung ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-141">Gets the number of elements in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0abee-142">Die Anzahl der Elemente, die in der <see cref="T:System.Windows.Media.VisualCollection" /> enthalten sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-142">The number of elements that the <see cref="T:System.Windows.Media.VisualCollection" /> contains.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0abee-143"><xref:System.Windows.Media.VisualCollection.Count%2A> ist die Anzahl der Elemente, die tatsächlich in der <xref:System.Windows.Media.VisualCollection>.</span><span class="sxs-lookup"><span data-stu-id="0abee-143"><xref:System.Windows.Media.VisualCollection.Count%2A> is the number of elements that are actually in the <xref:System.Windows.Media.VisualCollection>.</span></span> <span data-ttu-id="0abee-144"><xref:System.Windows.Media.VisualCollection.Capacity%2A> ist die Anzahl der Elemente, die die <xref:System.Windows.Media.VisualCollection> speichern.</span><span class="sxs-lookup"><span data-stu-id="0abee-144"><xref:System.Windows.Media.VisualCollection.Capacity%2A> is the number of elements that the <xref:System.Windows.Media.VisualCollection> is capable of storing.</span></span>  
  
 <span data-ttu-id="0abee-145"><xref:System.Windows.Media.VisualCollection.Count%2A> ist immer kleiner als oder gleich <xref:System.Windows.Media.VisualCollection.Capacity%2A>.</span><span class="sxs-lookup"><span data-stu-id="0abee-145"><xref:System.Windows.Media.VisualCollection.Count%2A> is always less than or equal to <xref:System.Windows.Media.VisualCollection.Capacity%2A>.</span></span> <span data-ttu-id="0abee-146">Wenn <xref:System.Windows.Media.VisualCollection.Count%2A> überschreitet <xref:System.Windows.Media.VisualCollection.Capacity%2A> beim Hinzufügen von Elementen, wird die Kapazität der Liste durch Neuzuordnen automatisch vor dem Kopieren der alten Elemente und das Hinzufügen neuer Elemente des internen Arrays verdoppelt.</span><span class="sxs-lookup"><span data-stu-id="0abee-146">If <xref:System.Windows.Media.VisualCollection.Count%2A> exceeds <xref:System.Windows.Media.VisualCollection.Capacity%2A> while adding elements, the capacity of the list is doubled by automatically reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Windows.Media.VisualCollection.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.VisualCollection/Enumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As VisualCollection.Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::VisualCollection::Enumerator GetEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.VisualCollection+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0abee-147">Ruft einen Enumerator ab, der die <see cref="T:System.Windows.Media.VisualCollection" /> durchlaufen kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-147">Retrieves an enumerator that can iterate through the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0abee-148">Ein Enumerator, der zum Durchlaufen der Auflistung verwendet werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-148">An enumerator that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Collections.IEnumerable.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Media::Visual ^ visual);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">
          <span data-ttu-id="0abee-149">Das <see cref="T:System.Windows.Media.Visual" />, das in der <see cref="T:System.Windows.Media.VisualCollection" /> gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-149">The <see cref="T:System.Windows.Media.Visual" /> to locate in the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0abee-150">Gibt den nullbasierten Index des <see cref="T:System.Windows.Media.Visual" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-150">Returns the zero-based index of the <see cref="T:System.Windows.Media.Visual" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0abee-151">Der Index des <see cref="T:System.Windows.Media.Visual" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-151">The index of the <see cref="T:System.Windows.Media.Visual" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0abee-152">Wenn die <xref:System.Windows.Media.Visual> befindet sich nicht in der <xref:System.Windows.Media.VisualCollection>, wird-1 zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="0abee-152">If the <xref:System.Windows.Media.Visual> is not in the <xref:System.Windows.Media.VisualCollection>, -1 is returned.</span></span> <span data-ttu-id="0abee-153">Wenn `null` übergeben wird, an die Methode den Index des ersten Eintrag `null` zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="0abee-153">If `null` is passed to the method, the index of the first entry that has `null` is returned.</span></span> <span data-ttu-id="0abee-154">Wenn kein null-Eintrag vorhanden ist, wird-1 zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="0abee-154">If there is no null entry, -1 is returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Windows::Media::Visual ^ visual);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="0abee-155">Der nullbasierte Index, an dem der Wert eingefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-155">The zero-based index at which the value should be inserted.</span>
          </span>
        </param>
        <param name="visual">
          <span data-ttu-id="0abee-156">Das <see cref="T:System.Windows.Media.Visual" />, das in <see cref="T:System.Windows.Media.VisualCollection" /> eingefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-156">The <see cref="T:System.Windows.Media.Visual" /> to insert into the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0abee-157">Fügt am angegebenen Index ein Element in die <see cref="T:System.Windows.Media.VisualCollection" /> ein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-157">Inserts an element into the <see cref="T:System.Windows.Media.VisualCollection" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0abee-158">Wenn <xref:System.Windows.Media.VisualCollection.Count%2A> bereits gleich <xref:System.Windows.Media.VisualCollection.Capacity%2A>, die Kapazität der <xref:System.Windows.Media.VisualCollection> wird erhöht, bevor die neuen <xref:System.Windows.Media.Visual> eingefügt wird.</span><span class="sxs-lookup"><span data-stu-id="0abee-158">If <xref:System.Windows.Media.VisualCollection.Count%2A> already equals <xref:System.Windows.Media.VisualCollection.Capacity%2A>, the capacity of the <xref:System.Windows.Media.VisualCollection> is increased before the new <xref:System.Windows.Media.Visual> is inserted.</span></span> <span data-ttu-id="0abee-159">Wenn `index` gleich <xref:System.Windows.Media.VisualCollection.Count%2A>, `visual` wird am Ende hinzugefügt <xref:System.Windows.Media.VisualCollection>.</span><span class="sxs-lookup"><span data-stu-id="0abee-159">If `index` is equal to <xref:System.Windows.Media.VisualCollection.Count%2A>, `visual` is added to the end of <xref:System.Windows.Media.VisualCollection>.</span></span> <span data-ttu-id="0abee-160">Vorhandene visuelle Objekte, die größer als oder gleich `index` verschoben werden, um die neue aufzunehmen <xref:System.Windows.Media.Visual>, und ihre Indexwerte werden aktualisiert.</span><span class="sxs-lookup"><span data-stu-id="0abee-160">Any existing visual objects that are equal to or greater than `index` are shifted to accommodate the new <xref:System.Windows.Media.Visual>, and their index values are updated.</span></span>  
  
 <span data-ttu-id="0abee-161">Die <xref:System.Windows.Media.VisualCollection.Insert%2A> Methode legt auch die über-/ unterordnungsbeziehung zwischen dem übergeordneten Element visuelle Element, das der Besitzer ist von der <xref:System.Windows.Media.VisualCollection>, und dem untergeordneten Element `visual`.</span><span class="sxs-lookup"><span data-stu-id="0abee-161">The <xref:System.Windows.Media.VisualCollection.Insert%2A> method also sets up the parent-child relationship between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the child `visual`.</span></span>  
  
 <span data-ttu-id="0abee-162">Wenn Sie größere auf niedriger Ebene Kontrolle über die zugrunde liegende Speicher-Implementierung von untergeordneten visuellen Objekten benötigen, erwägen Sie die <xref:System.Windows.Media.Visual.AddVisualChild%2A> und <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="0abee-162">If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods.</span></span> <span data-ttu-id="0abee-163">Wenn Sie diese Methoden verwenden, Sie definieren eine eigene Implementierung Speicher und verwenden Sie keine <xref:System.Windows.Media.VisualCollection>.</span><span class="sxs-lookup"><span data-stu-id="0abee-163">When you use these methods, you define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0abee-164">
            <paramref name="index" /> ist kleiner als 0 oder größer als <see cref="P:System.Windows.Media.VisualCollection.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-164">
              <paramref name="index" /> is less than zero or greater than <see cref="P:System.Windows.Media.VisualCollection.Count" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0abee-165">Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Windows.Media.VisualCollection" /> schreibgeschützt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-165">Gets a value that indicates whether the <see cref="T:System.Windows.Media.VisualCollection" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0abee-166">Der Wert, der angibt, ob die <see cref="T:System.Windows.Media.VisualCollection" /> schreibgeschützt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-166">The value that indicates whether the <see cref="T:System.Windows.Media.VisualCollection" /> is read-only.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0abee-167">Diese Eigenschaft ist immer `false` für alle <xref:System.Windows.Media.VisualCollection> Objekte.</span><span class="sxs-lookup"><span data-stu-id="0abee-167">This property is always `false` for all <xref:System.Windows.Media.VisualCollection> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0abee-168">Ruft einen Wert ab, der angibt, ob der Zugriff auf <see cref="T:System.Windows.Media.VisualCollection" /> synchronisiert (threadsicher) ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-168">Gets a value that indicates whether access to the <see cref="T:System.Windows.Media.VisualCollection" /> is synchronized (thread-safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0abee-169">Der Wert, der angibt, ob die <see cref="T:System.Windows.Media.VisualCollection" /> synchronisiert (threadsicher) ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-169">The value that indicates whether the <see cref="T:System.Windows.Media.VisualCollection" /> is synchronized (thread-safe).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0abee-170">Diese Eigenschaft ist immer `false` für alle <xref:System.Windows.Media.VisualCollection> Objekte.</span><span class="sxs-lookup"><span data-stu-id="0abee-170">This property is always `false` for all <xref:System.Windows.Media.VisualCollection> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Visual this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Visual Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Visual" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Visual ^ default[int] { System::Windows::Media::Visual ^ get(int index); void set(int index, System::Windows::Media::Visual ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="0abee-171">Der nullbasierte Index des <see cref="T:System.Windows.Media.VisualCollection" />-Objekts, an dem das <see cref="T:System.Windows.Media.Visual" />-Objekt abgerufen oder festgelegt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-171">The zero-based index of the <see cref="T:System.Windows.Media.VisualCollection" /> from which to get or set the <see cref="T:System.Windows.Media.Visual" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0abee-172">Ruft das am nullbasierten Index der <see cref="T:System.Windows.Media.Visual" /> gespeicherte <see cref="T:System.Windows.Media.VisualCollection" /> ab oder legt dieses fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-172">Gets or sets the <see cref="T:System.Windows.Media.Visual" /> that is stored at the zero-based index of the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0abee-173">Das <see cref="T:System.Windows.Media.Visual" />-Objekt, das unter dem <paramref name="index" />-Objekt gespeichert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-173">The <see cref="T:System.Windows.Media.Visual" /> that is stored at <paramref name="index" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0abee-174">Diese Eigenschaft ermöglicht den Zugriff auf einen bestimmten <xref:System.Windows.Media.Visual> in der <xref:System.Windows.Media.VisualCollection> mithilfe eines Indexes.</span><span class="sxs-lookup"><span data-stu-id="0abee-174">This property provides the ability to access a specific <xref:System.Windows.Media.Visual> in the <xref:System.Windows.Media.VisualCollection> by using an index.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0abee-175">
            <paramref name="index" /> ist kleiner als 0 (null), oder <paramref name="index" /> ist größer oder gleich <see cref="P:System.Windows.Media.VisualCollection.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-175">
              <paramref name="index" /> is less than zero, or <paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.Media.VisualCollection.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0abee-176">Für das neue untergeordnete Element ist bereits ein übergeordnetes Element vorhanden, oder der Wert am angegebenen Index ist nicht <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-176">The new child element already has a parent, or the value at the specified index is not <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::Media::Visual ^ visual);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">
          <span data-ttu-id="0abee-177">Der <see cref="T:System.Windows.Media.Visual" />, der aus der <see cref="T:System.Windows.Media.VisualCollection" /> entfernt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-177">The <see cref="T:System.Windows.Media.Visual" /> to remove from the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0abee-178">Entfernt das angegebene <see cref="T:System.Windows.Media.Visual" />-Objekt aus der <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-178">Removes the specified <see cref="T:System.Windows.Media.Visual" /> object from the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0abee-179">Die visuellen Objekte, die auf das entfernte Objekt folgen werden verschoben, um die frei gewordene Position verschoben, und ihre Indexwerte werden aktualisiert.</span><span class="sxs-lookup"><span data-stu-id="0abee-179">The visual objects that follow the removed object are shifted to occupy the vacated position, and their index values are updated.</span></span> <span data-ttu-id="0abee-180">Wenn `visual` ist `null`, das erste `null` Eintrag wird entfernt.</span><span class="sxs-lookup"><span data-stu-id="0abee-180">If `visual` is `null`, the first `null` entry is removed.</span></span> <span data-ttu-id="0abee-181">Beachten Sie, Entfernen einer `null` Eintrag ist linear zur Größe der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="0abee-181">Note that removing a `null` entry is linear in the size of the collection.</span></span>  
  
 <span data-ttu-id="0abee-182">Die <xref:System.Windows.Media.VisualCollection.Remove%2A> Methode entfernt außerdem die über-/ unterordnungsbeziehung zwischen dem übergeordneten Element visuelle Element, das der Besitzer ist von der <xref:System.Windows.Media.VisualCollection>, und dem untergeordneten Element `visual`.</span><span class="sxs-lookup"><span data-stu-id="0abee-182">The <xref:System.Windows.Media.VisualCollection.Remove%2A> method also removes the parent-child relationship between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the child `visual`.</span></span>  
  
 <span data-ttu-id="0abee-183">Wenn Sie größere auf niedriger Ebene Kontrolle über die zugrunde liegende Speicher-Implementierung von untergeordneten visuellen Objekten benötigen, erwägen Sie die <xref:System.Windows.Media.Visual.AddVisualChild%2A> und <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="0abee-183">If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods.</span></span> <span data-ttu-id="0abee-184">Wenn Sie diese Methoden verwenden, Sie definieren eine eigene Implementierung Speicher und verwenden Sie keine <xref:System.Windows.Media.VisualCollection>.</span><span class="sxs-lookup"><span data-stu-id="0abee-184">When you use these methods, you define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="0abee-185">Der nullbasierte Index des zu entfernenden visuellen Elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-185">The zero-based index of the visual to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0abee-186">Entfernt das visuelle Objekt am angegebenen Index in der <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-186">Removes the visual object at the specified index in the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0abee-187">Die visuellen Objekte, die auf das entfernte Objekt folgen werden verschoben, um die frei gewordene Position verschoben, und ihre Indexwerte werden aktualisiert.</span><span class="sxs-lookup"><span data-stu-id="0abee-187">The visual objects that follow the removed object are shifted to occupy the vacated position, and their index values are updated.</span></span>  
  
 <span data-ttu-id="0abee-188">Die <xref:System.Windows.Media.VisualCollection.RemoveAt%2A> Methode entfernt außerdem die über-/ unterordnungsbeziehung zwischen dem übergeordneten Element visuelle Element, das der Besitzer ist von der <xref:System.Windows.Media.VisualCollection>, und dem untergeordneten Element `visual`.</span><span class="sxs-lookup"><span data-stu-id="0abee-188">The <xref:System.Windows.Media.VisualCollection.RemoveAt%2A> method also removes the parent-child relationship between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the child `visual`.</span></span>  
  
 <span data-ttu-id="0abee-189">Wenn Sie größere auf niedriger Ebene Kontrolle über die zugrunde liegende Speicher-Implementierung von untergeordneten visuellen Objekten benötigen, erwägen Sie die <xref:System.Windows.Media.Visual.AddVisualChild%2A> und <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="0abee-189">If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods.</span></span> <span data-ttu-id="0abee-190">Wenn Sie diese Methoden verwenden, Sie definieren eine eigene Implementierung Speicher und verwenden Sie keine <xref:System.Windows.Media.VisualCollection>.</span><span class="sxs-lookup"><span data-stu-id="0abee-190">When you use these methods, you define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0abee-191">
            <paramref name="index" /> ist kleiner als 0 (null), oder <paramref name="index" /> ist größer oder gleich <see cref="P:System.Windows.Media.VisualCollection.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-191">
              <paramref name="index" /> is less than zero, or <paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.Media.VisualCollection.Count" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveRange">
      <MemberSignature Language="C#" Value="public void RemoveRange (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveRange(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveRange (index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveRange(int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="0abee-192">Der nullbasierte Index des zu entfernenden Bereichs von Elementen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-192">The zero-based index of the range of elements to remove.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="0abee-193">Die Anzahl der zu entfernenden Elemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-193">The number of elements to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0abee-194">Entfernt einen Bereich von visuellen Objekten aus der <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-194">Removes a range of visual objects from the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0abee-195">Die visuellen Objekte, die auf die entfernten Objekte werden verschoben, um die frei werdenden Positionen einnehmen, und ihre Indexwerte werden aktualisiert.</span><span class="sxs-lookup"><span data-stu-id="0abee-195">The visual objects that follow the removed objects are shifted to occupy the vacated positions, and their index values are updated.</span></span>  
  
 <span data-ttu-id="0abee-196">Die <xref:System.Windows.Media.VisualCollection.RemoveRange%2A> Methode entfernt außerdem die über-/ unterordnungsbeziehungen zwischen dem übergeordneten visuellen Element, das der Besitzer ist von der <xref:System.Windows.Media.VisualCollection>, und den Bereich der untergeordneten visuellen Elemente.</span><span class="sxs-lookup"><span data-stu-id="0abee-196">The <xref:System.Windows.Media.VisualCollection.RemoveRange%2A> method also removes the parent-child relationships between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the range of child visuals.</span></span>  
  
 <span data-ttu-id="0abee-197">Wenn Sie größere auf niedriger Ebene Kontrolle über die zugrunde liegende Speicher-Implementierung von untergeordneten visuellen Objekten benötigen, erwägen Sie die <xref:System.Windows.Media.Visual.AddVisualChild%2A> und <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="0abee-197">If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods.</span></span> <span data-ttu-id="0abee-198">Wenn Sie diese Methoden verwenden, Sie definieren eine eigene Implementierung Speicher und verwenden Sie keine <xref:System.Windows.Media.VisualCollection>.</span><span class="sxs-lookup"><span data-stu-id="0abee-198">When you use these methods, you define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0abee-199">
            <paramref name="index" /> ist kleiner als 0 (null), oder <paramref name="count" /> ist kleiner als 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-199">
              <paramref name="index" /> is less than zero or <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0abee-200">
            <paramref name="index" /> und <paramref name="count" /> verweisen auf keinen gültigen Bereich von Elementen in der <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-200">
              <paramref name="index" /> and <paramref name="count" /> do not refer to a valid range of elements in the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0abee-201">Ruft ein Objekt ab, mit dem der Zugriff auf <see cref="T:System.Windows.Media.VisualCollection" /> synchronisiert werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-201">Gets an object that can be used to synchronize access to the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0abee-202">Ein Wert vom Typ <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-202">A value of type <see cref="T:System.Object" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0abee-203">Dieser Member unterstützt die [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]-Infrastruktur und ist nicht für die direkte Verwendung im Code vorgesehen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-203">This member supports the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          </span>
          <span data-ttu-id="0abee-204">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-204">For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0abee-205">Ein Objekt, das zum Durchlaufen der Auflistung verwendet werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0abee-205">An object that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>