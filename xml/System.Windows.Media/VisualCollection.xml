<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="VisualCollection.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac519eeb062536a84069070c205aaddc936c33cd61d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">19eeb062536a84069070c205aaddc936c33cd61d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.VisualCollection">
          <source>Represents an ordered collection of <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> objects.</source>
          <target state="translated">Stellt eine geordnete Auflistung von <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>-Objekten dar.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.VisualCollection">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> has implied context affinity.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> besitzt die impliziten Kontextaffinität.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.VisualCollection">
          <source>If a procedure attempts to access the <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> from a different context than the context of the owning <ph id="ph2">&lt;xref:System.Windows.Media.ContainerVisual&gt;</ph>, an exception is thrown.</source>
          <target state="translated">Wenn eine Prozedur versucht, den Zugriff auf die <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> aus einem anderen Kontext als dem Kontext des besitzenden <ph id="ph2">&lt;xref:System.Windows.Media.ContainerVisual&gt;</ph>, wird eine Ausnahme ausgelöst.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.VisualCollection">
          <source>The following example shows how to create a <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> and add members to it.</source>
          <target state="translated">Im folgende Beispiel wird gezeigt, wie zum Erstellen einer <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> und Mitglieder hinzuzufügen.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.VisualCollection">
          <source>For the complete sample, see <bpt id="p1">[</bpt>Hit Test Using DrawingVisuals Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=159994)</ept>.</source>
          <target state="translated">Das vollständige Beispiel finden Sie unter <bpt id="p1">[</bpt>Hit Test Using DrawingVisuals Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=159994)</ept>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.#ctor(System.Windows.Media.Visual)">
          <source>The parent visual object whose <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> is returned.</source>
          <target state="translated">Das übergeordnete visuelle Objekt, dessen <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.#ctor(System.Windows.Media.Visual)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> to append to the <ph id="ph2">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>.</source>
          <target state="translated">Das an <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> anzufügende <ph id="ph2">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)">
          <source>Appends a <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> to the end of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>.</source>
          <target state="translated">Fügt ein <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> an das Ende der <ph id="ph2">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> an.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)">
          <source>The index in the collection at which <ph id="ph1">&lt;paramref name="visual" /&gt;</ph> was added.</source>
          <target state="translated">Der Index in der Auflistung, an dem das <ph id="ph1">&lt;paramref name="visual" /&gt;</ph>-Objekt hinzugefügt wurde.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)">
          <source>Adding a <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> whose value is <ph id="ph2">`null`</ph> is permitted and does not raise an exception.</source>
          <target state="translated">Hinzufügen einer <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> , dessen Wert <ph id="ph2">`null`</ph> ist zulässig und löst keine Ausnahme aus.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Add%2A&gt;</ph> method also sets up the parent-child relationship between the parent visual, which is the owner of the <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>, and the child <ph id="ph3">`visual`</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Add%2A&gt;</ph> Methode legt auch die über-/ unterordnungsbeziehung zwischen dem übergeordneten Element visuelle Element, das der Besitzer ist von der <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>, und dem untergeordneten Element <ph id="ph3">`visual`</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)">
          <source>If you need greater low-level control over the underlying storage implementation of visual child objects of a custom class, consider using the <ph id="ph1">&lt;xref:System.Windows.Media.Visual.AddVisualChild%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Visual.RemoveVisualChild%2A&gt;</ph> methods.</source>
          <target state="translated">Wenn Sie größere auf niedriger Ebene Kontrolle über die zugrunde liegende Speicher-Implementierung von untergeordneten visuellen Objekten einer benutzerdefinierten Klasse benötigen, erwägen Sie die <ph id="ph1">&lt;xref:System.Windows.Media.Visual.AddVisualChild%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Windows.Media.Visual.RemoveVisualChild%2A&gt;</ph> Methoden.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)">
          <source>When you use these methods, you must define your own storage implementation, and do not use <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.</source>
          <target state="translated">Wenn Sie diese Methoden verwenden, Sie müssen Ihre eigene Implementierung Speicher definieren und verwenden Sie keine <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)">
          <source>The following example shows how to create a <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> and add members to it.</source>
          <target state="translated">Im folgende Beispiel wird gezeigt, wie zum Erstellen einer <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> und Mitglieder hinzuzufügen.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)">
          <source>For the complete sample, see <bpt id="p1">[</bpt>Hit Test Using DrawingVisuals Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=159994)</ept>.</source>
          <target state="translated">Das vollständige Beispiel finden Sie unter <bpt id="p1">[</bpt>Hit Test Using DrawingVisuals Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=159994)</ept>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ArgumentException" /&gt;</ph> is thrown if the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> is a root element.</source>
          <target state="translated">Wenn das <ph id="ph1">&lt;see cref="T:System.ArgumentException" /&gt;</ph> ein Stammelement ist, wird eine <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> ausgelöst.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.VisualCollection.Capacity">
          <source>Gets or sets the number of elements that the <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> can contain.</source>
          <target state="translated">Ruft die Anzahl der Elemente ab, die die <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> enthalten kann, oder legt diese fest.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.Capacity">
          <source>The number of elements that the <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> can contain.</source>
          <target state="translated">Die anfängliche Anzahl von Elementen, die die <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> enthalten kann.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.Capacity">
          <source>The value of <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> is capable of storing.</source>
          <target state="translated">Der Wert der <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> ist die Anzahl der Elemente, die die <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> speichern.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.Capacity">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph> is the number of visuals that are actually in the <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph> ist die Anzahl von visuellen Elementen, die tatsächlich in der <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.Capacity">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> is always greater than or equal to <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> ist immer größer als oder gleich <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.Capacity">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph> exceeds <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> while adding elements, the capacity of the <ph id="ph3">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> is increased.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph> überschreitet <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> beim Hinzufügen von Elementen, die Kapazität der <ph id="ph3">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> erhöht wird.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.Capacity">
          <source>By default <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> is zero.</source>
          <target state="translated">Standardmäßig <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> 0 (null).</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.VisualCollection.Capacity">
          <source><ph id="ph1">&lt;see cref="P:System.Windows.Media.VisualCollection.Capacity" /&gt;</ph> is set to a value that is less than <ph id="ph2">&lt;see cref="P:System.Windows.Media.VisualCollection.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Media.VisualCollection.Capacity" /&gt;</ph> ist auf einen Wert festgelegt, der kleiner als <ph id="ph2">&lt;see cref="P:System.Windows.Media.VisualCollection.Count" /&gt;</ph> ist.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.Clear">
          <source>Removes all elements from the <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>.</source>
          <target state="translated">Entfernt alle Elemente aus der <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Clear">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph> is reset to zero.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph> wird auf 0 (null) zurückgesetzt.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Clear">
          <source>The value of the <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> remains unchanged.</source>
          <target state="translated">Der Wert, der die <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> bleibt unverändert.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Clear">
          <source>To reset the capacity of the <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>, set the <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> property to the desired size.</source>
          <target state="translated">Die Kapazität des Zurücksetzen der <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>legen die <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> Eigenschaft auf die gewünschte Größe.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.Contains(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> to search for in the collection.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>, das in der Auflistung gesucht werden soll.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.Contains(System.Windows.Media.Visual)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether the specified <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> is contained in the collection.</source>
          <target state="translated">Gibt einen <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>-Wert zurück, der angibt, ob das angegebene <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> in der Auflistung enthalten ist.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.Contains(System.Windows.Media.Visual)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="visual" /&gt;</ph> is contained in the collection; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn der <ph id="ph2">&lt;paramref name="visual" /&gt;</ph> in der Auflistung enthalten ist, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Contains(System.Windows.Media.Visual)">
          <source>The worst-case runtime scenario of this function is <ph id="ph1">`O(n)`</ph>, where <ph id="ph2">`n`</ph> is the number of items in the <ph id="ph3">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.</source>
          <target state="translated">Das Laufzeitszenario Worst-Case-für diese Funktion ist <ph id="ph1">`O(n)`</ph>, wobei <ph id="ph2">`n`</ph> ist die Anzahl der Elemente in der <ph id="ph3">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.VisualCollection">
          <source>Copies the current collection into the passed array.</source>
          <target state="translated">Kopiert die aktuelle Auflistung in das übergebene Array.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the elements that are copied from the <ph id="ph2">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>.</source>
          <target state="translated">Das eindimensionale <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph>, das das Ziel der aus der <ph id="ph2">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> kopierten Elemente ist.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Der nullbasierte Index im <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept>, ab dem kopiert wird.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.CopyTo(System.Array,System.Int32)">
          <source>Copies the items in the collection to an array, starting at a specific array index.</source>
          <target state="translated">Kopiert die Elemente in der Auflistung ab einem angegebenen Arrayindex in ein Array.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.CopyTo(System.Windows.Media.Visual[],System.Int32)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> objects (which must have zero-based indexing).</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>-Objekten (die über eine nullbasierte Indizierung verfügen müssen).</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.CopyTo(System.Windows.Media.Visual[],System.Int32)">
          <source>The index to start copying from within <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Der Index, an dem mit dem Kopieren in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> begonnen werden soll.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.CopyTo(System.Windows.Media.Visual[],System.Int32)">
          <source>Copies the current collection into the passed <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> array.</source>
          <target state="translated">Kopiert die aktuelle Auflistung in das übergebene <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>-Array.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.VisualCollection.Count">
          <source>Gets the number of elements in the collection.</source>
          <target state="translated">Ruft die Anzahl der Elemente in der Auflistung ab.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.Count">
          <source>The number of elements that the <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> contains.</source>
          <target state="translated">Die Anzahl der Elemente, die in der <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> enthalten sind.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.Count">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph> is the number of elements that are actually in the <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph> ist die Anzahl der Elemente, die tatsächlich in der <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.Count">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> is capable of storing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> ist die Anzahl der Elemente, die die <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> speichern.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.Count">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph> is always less than or equal to <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph> ist immer kleiner als oder gleich <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.Count">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph> exceeds <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> while adding elements, the capacity of the list is doubled by automatically reallocating the internal array before copying the old elements and adding the new elements.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph> überschreitet <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> beim Hinzufügen von Elementen, wird die Kapazität der Liste durch Neuzuordnen automatisch vor dem Kopieren der alten Elemente und das Hinzufügen neuer Elemente des internen Arrays verdoppelt.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.GetEnumerator">
          <source>Retrieves an enumerator that can iterate through the <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>.</source>
          <target state="translated">Ruft einen Enumerator ab, der die <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> durchlaufen kann.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.GetEnumerator">
          <source>An enumerator that can be used to iterate through the collection.</source>
          <target state="translated">Ein Enumerator, der zum Durchlaufen der Auflistung verwendet werden kann.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> to locate in the <ph id="ph2">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>, das in der <ph id="ph2">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> gesucht werden soll.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)">
          <source>Returns the zero-based index of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated">Gibt den nullbasierten Index des <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> zurück.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)">
          <source>The index of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated">Der Index des <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> is not in the <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>, -1 is returned.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> befindet sich nicht in der <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>, wird-1 zurückgegeben.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)">
          <source>If <ph id="ph1">`null`</ph> is passed to the method, the index of the first entry that has <ph id="ph2">`null`</ph> is returned.</source>
          <target state="translated">Wenn <ph id="ph1">`null`</ph> übergeben wird, an die Methode den Index des ersten Eintrag <ph id="ph2">`null`</ph> zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)">
          <source>If there is no null entry, -1 is returned.</source>
          <target state="translated">Wenn kein null-Eintrag vorhanden ist, wird-1 zurückgegeben.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)">
          <source>The zero-based index at which the value should be inserted.</source>
          <target state="translated">Der nullbasierte Index, an dem der Wert eingefügt werden soll.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> to insert into the <ph id="ph2">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>, das in <ph id="ph2">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> eingefügt werden soll.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)">
          <source>Inserts an element into the <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> at the specified index.</source>
          <target state="translated">Fügt am angegebenen Index ein Element in die <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> ein.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph> already equals <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph>, the capacity of the <ph id="ph3">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> is increased before the new <ph id="ph4">&lt;xref:System.Windows.Media.Visual&gt;</ph> is inserted.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph> bereits gleich <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph>, die Kapazität der <ph id="ph3">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> wird erhöht, bevor die neuen <ph id="ph4">&lt;xref:System.Windows.Media.Visual&gt;</ph> eingefügt wird.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)">
          <source>If <ph id="ph1">`index`</ph> is equal to <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph>, <ph id="ph3">`visual`</ph> is added to the end of <ph id="ph4">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.</source>
          <target state="translated">Wenn <ph id="ph1">`index`</ph> gleich <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph>, <ph id="ph3">`visual`</ph> wird am Ende hinzugefügt <ph id="ph4">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)">
          <source>Any existing visual objects that are equal to or greater than <ph id="ph1">`index`</ph> are shifted to accommodate the new <ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph>, and their index values are updated.</source>
          <target state="translated">Vorhandene visuelle Objekte, die größer als oder gleich <ph id="ph1">`index`</ph> verschoben werden, um die neue aufzunehmen <ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph>, und ihre Indexwerte werden aktualisiert.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Insert%2A&gt;</ph> method also sets up the parent-child relationship between the parent visual, which is the owner of the <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>, and the child <ph id="ph3">`visual`</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Insert%2A&gt;</ph> Methode legt auch die über-/ unterordnungsbeziehung zwischen dem übergeordneten Element visuelle Element, das der Besitzer ist von der <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>, und dem untergeordneten Element <ph id="ph3">`visual`</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)">
          <source>If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <ph id="ph1">&lt;xref:System.Windows.Media.Visual.AddVisualChild%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Visual.RemoveVisualChild%2A&gt;</ph> methods.</source>
          <target state="translated">Wenn Sie größere auf niedriger Ebene Kontrolle über die zugrunde liegende Speicher-Implementierung von untergeordneten visuellen Objekten benötigen, erwägen Sie die <ph id="ph1">&lt;xref:System.Windows.Media.Visual.AddVisualChild%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Windows.Media.Visual.RemoveVisualChild%2A&gt;</ph> Methoden.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)">
          <source>When you use these methods, you define your own storage implementation, and do not use <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.</source>
          <target state="translated">Wenn Sie diese Methoden verwenden, Sie definieren eine eigene Implementierung Speicher und verwenden Sie keine <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than <ph id="ph2">&lt;see cref="P:System.Windows.Media.VisualCollection.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ist kleiner als 0 oder größer als <ph id="ph2">&lt;see cref="P:System.Windows.Media.VisualCollection.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.VisualCollection.IsReadOnly">
          <source>Gets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> is read-only.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob die <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> schreibgeschützt ist.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.IsReadOnly">
          <source>The value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> is read-only.</source>
          <target state="translated">Der Wert, der angibt, ob die <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> schreibgeschützt ist.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.IsReadOnly">
          <source>This property is always <ph id="ph1">`false`</ph> for all <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> objects.</source>
          <target state="translated">Diese Eigenschaft ist immer <ph id="ph1">`false`</ph> für alle <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> Objekte.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.VisualCollection.IsSynchronized">
          <source>Gets a value that indicates whether access to the <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> is synchronized (thread-safe).</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob der Zugriff auf <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> synchronisiert (threadsicher) ist.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.IsSynchronized">
          <source>The value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> is synchronized (thread-safe).</source>
          <target state="translated">Der Wert, der angibt, ob die <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> synchronisiert (threadsicher) ist.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.IsSynchronized">
          <source>This property is always <ph id="ph1">`false`</ph> for all <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> objects.</source>
          <target state="translated">Diese Eigenschaft ist immer <ph id="ph1">`false`</ph> für alle <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> Objekte.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.VisualCollection.Item(System.Int32)">
          <source>The zero-based index of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> from which to get or set the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated">Der nullbasierte Index des <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>-Objekts, an dem das <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>-Objekt abgerufen oder festgelegt werden soll.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.VisualCollection.Item(System.Int32)">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> that is stored at the zero-based index of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>.</source>
          <target state="translated">Ruft das am nullbasierten Index der <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> gespeicherte <ph id="ph2">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> ab oder legt dieses fest.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.Item(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> that is stored at <ph id="ph2">&lt;paramref name="index" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>-Objekt, das unter dem <ph id="ph2">&lt;paramref name="index" /&gt;</ph>-Objekt gespeichert wird.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.Item(System.Int32)">
          <source>This property provides the ability to access a specific <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> in the <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> by using an index.</source>
          <target state="translated">Diese Eigenschaft ermöglicht den Zugriff auf einen bestimmten <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> in der <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> mithilfe eines Indexes.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.VisualCollection.Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero, or <ph id="ph2">&lt;paramref name="index" /&gt;</ph> is equal to or greater than <ph id="ph3">&lt;see cref="P:System.Windows.Media.VisualCollection.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ist kleiner als 0 (null), oder <ph id="ph2">&lt;paramref name="index" /&gt;</ph> ist größer oder gleich <ph id="ph3">&lt;see cref="P:System.Windows.Media.VisualCollection.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.VisualCollection.Item(System.Int32)">
          <source>The new child element already has a parent, or the value at the specified index is not <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Für das neue untergeordnete Element ist bereits ein übergeordnetes Element vorhanden, oder der Wert am angegebenen Index ist nicht <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> to remove from the <ph id="ph2">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>, der aus der <ph id="ph2">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> entfernt werden soll.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)">
          <source>Removes the specified <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> object from the <ph id="ph2">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>.</source>
          <target state="translated">Entfernt das angegebene <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>-Objekt aus der <ph id="ph2">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)">
          <source>The visual objects that follow the removed object are shifted to occupy the vacated position, and their index values are updated.</source>
          <target state="translated">Die visuellen Objekte, die auf das entfernte Objekt folgen werden verschoben, um die frei gewordene Position verschoben, und ihre Indexwerte werden aktualisiert.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)">
          <source>If <ph id="ph1">`visual`</ph> is <ph id="ph2">`null`</ph>, the first <ph id="ph3">`null`</ph> entry is removed.</source>
          <target state="translated">Wenn <ph id="ph1">`visual`</ph> ist <ph id="ph2">`null`</ph>, das erste <ph id="ph3">`null`</ph> Eintrag wird entfernt.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)">
          <source>Note that removing a <ph id="ph1">`null`</ph> entry is linear in the size of the collection.</source>
          <target state="translated">Beachten Sie, Entfernen einer <ph id="ph1">`null`</ph> Eintrag ist linear zur Größe der Auflistung.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Remove%2A&gt;</ph> method also removes the parent-child relationship between the parent visual, which is the owner of the <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>, and the child <ph id="ph3">`visual`</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Remove%2A&gt;</ph> Methode entfernt außerdem die über-/ unterordnungsbeziehung zwischen dem übergeordneten Element visuelle Element, das der Besitzer ist von der <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>, und dem untergeordneten Element <ph id="ph3">`visual`</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)">
          <source>If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <ph id="ph1">&lt;xref:System.Windows.Media.Visual.AddVisualChild%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Visual.RemoveVisualChild%2A&gt;</ph> methods.</source>
          <target state="translated">Wenn Sie größere auf niedriger Ebene Kontrolle über die zugrunde liegende Speicher-Implementierung von untergeordneten visuellen Objekten benötigen, erwägen Sie die <ph id="ph1">&lt;xref:System.Windows.Media.Visual.AddVisualChild%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Windows.Media.Visual.RemoveVisualChild%2A&gt;</ph> Methoden.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)">
          <source>When you use these methods, you define your own storage implementation, and do not use <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.</source>
          <target state="translated">Wenn Sie diese Methoden verwenden, Sie definieren eine eigene Implementierung Speicher und verwenden Sie keine <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.RemoveAt(System.Int32)">
          <source>The zero-based index of the visual to remove.</source>
          <target state="translated">Der nullbasierte Index des zu entfernenden visuellen Elements.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.RemoveAt(System.Int32)">
          <source>Removes the visual object at the specified index in the <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>.</source>
          <target state="translated">Entfernt das visuelle Objekt am angegebenen Index in der <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.RemoveAt(System.Int32)">
          <source>The visual objects that follow the removed object are shifted to occupy the vacated position, and their index values are updated.</source>
          <target state="translated">Die visuellen Objekte, die auf das entfernte Objekt folgen werden verschoben, um die frei gewordene Position verschoben, und ihre Indexwerte werden aktualisiert.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.RemoveAt(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.RemoveAt%2A&gt;</ph> method also removes the parent-child relationship between the parent visual, which is the owner of the <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>, and the child <ph id="ph3">`visual`</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.RemoveAt%2A&gt;</ph> Methode entfernt außerdem die über-/ unterordnungsbeziehung zwischen dem übergeordneten Element visuelle Element, das der Besitzer ist von der <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>, und dem untergeordneten Element <ph id="ph3">`visual`</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.RemoveAt(System.Int32)">
          <source>If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <ph id="ph1">&lt;xref:System.Windows.Media.Visual.AddVisualChild%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Visual.RemoveVisualChild%2A&gt;</ph> methods.</source>
          <target state="translated">Wenn Sie größere auf niedriger Ebene Kontrolle über die zugrunde liegende Speicher-Implementierung von untergeordneten visuellen Objekten benötigen, erwägen Sie die <ph id="ph1">&lt;xref:System.Windows.Media.Visual.AddVisualChild%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Windows.Media.Visual.RemoveVisualChild%2A&gt;</ph> Methoden.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.RemoveAt(System.Int32)">
          <source>When you use these methods, you define your own storage implementation, and do not use <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.</source>
          <target state="translated">Wenn Sie diese Methoden verwenden, Sie definieren eine eigene Implementierung Speicher und verwenden Sie keine <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.RemoveAt(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero, or <ph id="ph2">&lt;paramref name="index" /&gt;</ph> is equal to or greater than <ph id="ph3">&lt;see cref="P:System.Windows.Media.VisualCollection.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ist kleiner als 0 (null), oder <ph id="ph2">&lt;paramref name="index" /&gt;</ph> ist größer oder gleich <ph id="ph3">&lt;see cref="P:System.Windows.Media.VisualCollection.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)">
          <source>The zero-based index of the range of elements to remove.</source>
          <target state="translated">Der nullbasierte Index des zu entfernenden Bereichs von Elementen.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)">
          <source>The number of elements to remove.</source>
          <target state="translated">Die Anzahl der zu entfernenden Elemente.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)">
          <source>Removes a range of visual objects from the <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>.</source>
          <target state="translated">Entfernt einen Bereich von visuellen Objekten aus der <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)">
          <source>The visual objects that follow the removed objects are shifted to occupy the vacated positions, and their index values are updated.</source>
          <target state="translated">Die visuellen Objekte, die auf die entfernten Objekte werden verschoben, um die frei werdenden Positionen einnehmen, und ihre Indexwerte werden aktualisiert.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.RemoveRange%2A&gt;</ph> method also removes the parent-child relationships between the parent visual, which is the owner of the <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>, and the range of child visuals.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.RemoveRange%2A&gt;</ph> Methode entfernt außerdem die über-/ unterordnungsbeziehungen zwischen dem übergeordneten visuellen Element, das der Besitzer ist von der <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>, und den Bereich der untergeordneten visuellen Elemente.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)">
          <source>If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <ph id="ph1">&lt;xref:System.Windows.Media.Visual.AddVisualChild%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Visual.RemoveVisualChild%2A&gt;</ph> methods.</source>
          <target state="translated">Wenn Sie größere auf niedriger Ebene Kontrolle über die zugrunde liegende Speicher-Implementierung von untergeordneten visuellen Objekten benötigen, erwägen Sie die <ph id="ph1">&lt;xref:System.Windows.Media.Visual.AddVisualChild%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Windows.Media.Visual.RemoveVisualChild%2A&gt;</ph> Methoden.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)">
          <source>When you use these methods, you define your own storage implementation, and do not use <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.</source>
          <target state="translated">Wenn Sie diese Methoden verwenden, Sie definieren eine eigene Implementierung Speicher und verwenden Sie keine <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ist kleiner als 0 (null), oder <ph id="ph2">&lt;paramref name="count" /&gt;</ph> ist kleiner als 0 (null).</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> do not refer to a valid range of elements in the <ph id="ph3">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> und <ph id="ph2">&lt;paramref name="count" /&gt;</ph> verweisen auf keinen gültigen Bereich von Elementen in der <ph id="ph3">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.VisualCollection.SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>.</source>
          <target state="translated">Ruft ein Objekt ab, mit dem der Zugriff auf <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> synchronisiert werden kann.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.SyncRoot">
          <source>A value of type <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">Ein Wert vom Typ <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>This member supports the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">Dieser Member unterstützt die <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>-Infrastruktur und ist nicht für die direkte Verwendung im Code vorgesehen.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Collections.IEnumerable.GetEnumerator" /&gt;</ph>.</source>
          <target state="translated">Eine Beschreibung dieses Elements finden Sie unter <ph id="ph1">&lt;see cref="M:System.Collections.IEnumerable.GetEnumerator" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>An object that can be used to iterate through the collection.</source>
          <target state="translated">Ein Objekt, das zum Durchlaufen der Auflistung verwendet werden kann.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>