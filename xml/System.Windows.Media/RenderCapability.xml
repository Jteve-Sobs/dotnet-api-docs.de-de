<Type Name="RenderCapability" FullName="System.Windows.Media.RenderCapability">
  <Metadata><Meta Name="ms.openlocfilehash" Value="67106e70cc99579548eae63c64178c979e205ce4" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82488063" /></Metadata><TypeSignature Language="C#" Value="public static class RenderCapability" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit RenderCapability extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.RenderCapability" />
  <TypeSignature Language="VB.NET" Value="Public Class RenderCapability" />
  <TypeSignature Language="C++ CLI" Value="public ref class RenderCapability abstract sealed" />
  <TypeSignature Language="F#" Value="type RenderCapability = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Aktiviert WPF-Anwendungen für die Abfrage der aktuellen Renderingebene für deren zugeordnetes <see cref="T:System.Windows.Threading.Dispatcher" />-Objekt und für die Registrierung für Änderungsbenachrichtigungen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Renderingebene definiert eine Ebene der Grafikleistung eines Geräts, auf dem eine [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]-Anwendung ausgeführt wird. Die Funktionen der Grafikhardware, die sich am stärksten auf die Renderingebene-Ebenen auswirken, lauten wie folgt:  
  
-   Video-RAM: der Umfang des Video Speichers auf der Grafikhardware bestimmt die Größe und die Anzahl der Puffer, die für die Komposition von Grafiken verwendet werden können.  
  
-   Pixel-Shader: ein Pixelshader ist eine Grafik Verarbeitungs Funktion, die Effekte pro Pixel berechnet. Abhängig von der Auflösung der angezeigten Grafiken kann es mehrere Millionen Pixel geben, die für jeden Frame des Displays verarbeitet werden müssen.  
  
-   Vertex-Shader: ein Vertex-Shader ist eine Grafik Verarbeitungs Funktion, die mathematische Operationen für die Scheitelpunkt Daten des Objekts ausführt.  
  
-   Multitexture-Unterstützung: die Multitextur-Unterstützung bezieht sich auf die Fähigkeit, bei einem Mischungs Vorgang auf einem 3D-Grafik Objekt zwei oder mehr unterschiedliche Texturen anzuwenden. Der Grad der Multitexturunterstützung wird durch die Anzahl der Multitextureinheiten in der Grafikhardware bestimmt.  
  
 Die Pixel-Shader-, Vertex-Shader-und Multitextur-Funktionen werden verwendet, um bestimmte [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] Versions Ebenen zu definieren, die wiederum verwendet werden, um die verschiedenen renderingstufen in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]zu definieren. Eine vollständige Beschreibung der Renderingebenen finden Sie unter [renderingstufen für Grafiken](~/docs/framework/wpf/advanced/graphics-rendering-tiers.md).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.RenderOptions" />
    <altmember cref="T:System.Windows.Threading.Dispatcher" />
  </Docs>
  <Members>
    <Member MemberName="IsPixelShaderVersionSupported">
      <MemberSignature Language="C#" Value="public static bool IsPixelShaderVersionSupported (short majorVersionRequested, short minorVersionRequested);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPixelShaderVersionSupported(int16 majorVersionRequested, int16 minorVersionRequested) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.RenderCapability.IsPixelShaderVersionSupported(System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPixelShaderVersionSupported (majorVersionRequested As Short, minorVersionRequested As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPixelShaderVersionSupported(short majorVersionRequested, short minorVersionRequested);" />
      <MemberSignature Language="F#" Value="static member IsPixelShaderVersionSupported : int16 * int16 -&gt; bool" Usage="System.Windows.Media.RenderCapability.IsPixelShaderVersionSupported (majorVersionRequested, minorVersionRequested)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="majorVersionRequested" Type="System.Int16" />
        <Parameter Name="minorVersionRequested" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="majorVersionRequested">Die Hauptversion des Pixelshaders.</param>
        <param name="minorVersionRequested">Die Nebenversion des Pixelshaders.</param>
        <summary>Ruft einen Wert ab, der angibt, ob die angegebene Version des Pixelshaders unterstützt wird.</summary>
        <returns><see langword="true" />, wenn die Version des Pixelshaders von der aktuellen WPF-Version unterstützt wird, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Media.RenderCapability.IsPixelShaderVersionSupported%2A>-Methode gibt `true` zurück, wenn die Pixel-Shader-Version von der aktuellen Version von WPF unterstützt wird, und wenn eine <xref:System.Windows.Media.Effects.Effect>, die die angegebene Haupt-/Nebenversion verwendet, auf der GPU ausgeführt werden kann.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.ShaderEffect" />
      </Docs>
    </Member>
    <Member MemberName="IsPixelShaderVersionSupportedInSoftware">
      <MemberSignature Language="C#" Value="public static bool IsPixelShaderVersionSupportedInSoftware (short majorVersionRequested, short minorVersionRequested);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPixelShaderVersionSupportedInSoftware(int16 majorVersionRequested, int16 minorVersionRequested) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.RenderCapability.IsPixelShaderVersionSupportedInSoftware(System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPixelShaderVersionSupportedInSoftware (majorVersionRequested As Short, minorVersionRequested As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPixelShaderVersionSupportedInSoftware(short majorVersionRequested, short minorVersionRequested);" />
      <MemberSignature Language="F#" Value="static member IsPixelShaderVersionSupportedInSoftware : int16 * int16 -&gt; bool" Usage="System.Windows.Media.RenderCapability.IsPixelShaderVersionSupportedInSoftware (majorVersionRequested, minorVersionRequested)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="majorVersionRequested" Type="System.Int16" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="minorVersionRequested" Type="System.Int16" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="majorVersionRequested">Die Hauptversion des Pixelshaders.</param>
        <param name="minorVersionRequested">Die Nebenversion des Pixelshaders.</param>
        <summary>Ruft einen Wert ab, der angibt, ob die angegebene Version des Pixelshaders auf dem aktuellen System in Software gerendert werden kann.</summary>
        <returns><see langword="true" />, wenn der Pixelshader auf dem aktuellen System in Software gerendert werden kann, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Software Rendering wird nur für den PixelShader 2,0 unterstützt.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.ShaderEffect" />
      </Docs>
    </Member>
    <Member MemberName="IsShaderEffectSoftwareRenderingSupported">
      <MemberSignature Language="C#" Value="public static bool IsShaderEffectSoftwareRenderingSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsShaderEffectSoftwareRenderingSupported" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.RenderCapability.IsShaderEffectSoftwareRenderingSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsShaderEffectSoftwareRenderingSupported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsShaderEffectSoftwareRenderingSupported { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsShaderEffectSoftwareRenderingSupported : bool" Usage="System.Windows.Media.RenderCapability.IsShaderEffectSoftwareRenderingSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0">
          <AttributeName>System.Obsolete("IsShaderEffectSoftwareRenderingSupported property is deprecated.  Use IsPixelShaderVersionSupportedInSoftware static method instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das System Bitmapeffekte in der Software rendern kann.</summary>
        <value><see langword="true" />, wenn das System Bitmapeffekte in der Software rendern kann, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.ShaderEffect" />
      </Docs>
    </Member>
    <Member MemberName="MaxHardwareTextureSize">
      <MemberSignature Language="C#" Value="public static System.Windows.Size MaxHardwareTextureSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Size MaxHardwareTextureSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.RenderCapability.MaxHardwareTextureSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MaxHardwareTextureSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Size MaxHardwareTextureSize { System::Windows::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxHardwareTextureSize : System.Windows.Size" Usage="System.Windows.Media.RenderCapability.MaxHardwareTextureSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die maximale Breite und Höhe zur Bitmaperstellung des zugrunde liegenden Hardwaregeräts ab.</summary>
        <value>Ein <see cref="T:System.Windows.Size" />-Objekt, das die maximale Breite und Höhe zur Hardwarebitmaperstellung darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn mehrere Geräte vorhanden sind, gibt <xref:System.Windows.Media.RenderCapability.MaxHardwareTextureSize%2A> die minimale Größe zwischen diesen zurück.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.BitmapCache" />
      </Docs>
    </Member>
    <Member MemberName="MaxPixelShaderInstructionSlots">
      <MemberSignature Language="C#" Value="public static int MaxPixelShaderInstructionSlots (short majorVersionRequested, short minorVersionRequested);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 MaxPixelShaderInstructionSlots(int16 majorVersionRequested, int16 minorVersionRequested) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.RenderCapability.MaxPixelShaderInstructionSlots(System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MaxPixelShaderInstructionSlots (majorVersionRequested As Short, minorVersionRequested As Short) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int MaxPixelShaderInstructionSlots(short majorVersionRequested, short minorVersionRequested);" />
      <MemberSignature Language="F#" Value="static member MaxPixelShaderInstructionSlots : int16 * int16 -&gt; int" Usage="System.Windows.Media.RenderCapability.MaxPixelShaderInstructionSlots (majorVersionRequested, minorVersionRequested)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="majorVersionRequested" Type="System.Int16" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="minorVersionRequested" Type="System.Int16" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="majorVersionRequested">Die Hauptversion des Pixelshaders.</param>
        <param name="minorVersionRequested">Die Nebenversion des Pixelshaders.</param>
        <summary>Ruft die maximale Anzahl von Anweisungssteckplätzen ab, die von der angegebenen Version des Pixelshaders unterstützt werden.</summary>
        <returns>96 für Pixel Shader 2.0, 512 oder mehr für Pixel Shader 3.0 oder 0 für jede andere Version von Pixel Shader.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Anzahl von Anweisungs Slots, die von Pixel Shader 3,0 unterstützt werden, ist unterschiedlich, aber ist immer 512 oder größer.  
  
 Nur PixelShader 2,0 und 3,0 werden unterstützt.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.ShaderEffect" />
      </Docs>
    </Member>
    <Member MemberName="Tier">
      <MemberSignature Language="C#" Value="public static int Tier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 Tier" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.RenderCapability.Tier" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Tier As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int Tier { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Tier : int" Usage="System.Windows.Media.RenderCapability.Tier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der die Renderingebene für den aktuellen Thread angibt.</summary>
        <value>Ein <see cref="T:System.Int32" />-Wert, dessen höherwertiges Wort der Renderingebene für den aktuellen Thread entspricht.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Ab .NET Framework 4 wurde die Renderingebene 1 neu definiert, um nur Grafikhardware einzuschließen, die [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] 9.0 oder höher unterstützt. Grafikhardware, die [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] 7 oder 8 unterstützt, wird jetzt als Renderingebene 0 definiert.  
  
 Der Rückgabewert ist einer von drei möglichen Werten:  
  
|Rückgabewert|Renderingebene|Hinweise|  
|------------------|--------------------|-----------|  
|0x00000000|0|Für die Anwendung auf dem Gerät ist keine Beschleunigung der Grafikhardware verfügbar. Alle Grafikfunktionen verwenden Softwarebeschleunigung. Die [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)]-Versionsebene ist kleiner als die Version 9.0.|  
|0x00010000|1|Die meisten Grafik Features von [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] werden die Hardwarebeschleunigung verwenden, wenn die erforderlichen Systemressourcen verfügbar sind und nicht ausgeschöpft wurden. Dies entspricht einer [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)]-Version, die größer als oder gleich 9.0 ist.|  
|0x00020000|2|Die meisten Grafik Features von [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] werden die Hardwarebeschleunigung verwenden, vorausgesetzt, dass die erforderlichen Systemressourcen nicht ausgeschöpft wurden. Dies entspricht einer [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)]-Version, die größer als oder gleich 9.0 ist.|  
  
 Die folgende Tabelle zeigt die Unterschiede in den Anforderungen der Grafikhardware für die Renderingebene 1 und 2:  
  
|Funktion|Ebene 1|Ebene 2|  
|-------------|------------|------------|  
|[!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)]-Version|Muss größer als oder gleich 9.0 sein.|Muss größer als oder gleich 9.0 sein.|  
|Video-RAM|Muss größer als oder gleich 60 MB sein.|Muss größer als oder gleich 120 MB sein.|  
|Pixel-Shader|Die Versionsebene muss größer als oder gleich 2.0 sein.|Die Versionsebene muss größer als oder gleich 2.0 sein.|  
|Vertex-Shader|Keine Anforderung.|Die Versionsebene muss größer als oder gleich 2.0 sein.|  
|Multitextur-Einheiten|Keine Anforderung.|Die Anzahl der Einheiten muss größer als oder gleich 4 sein.|  
  
 Weitere Informationen zu den Definitionen für die Renderingebenen finden Sie unter [renderingstufen für Grafiken](~/docs/framework/wpf/advanced/graphics-rendering-tiers.md).  
  
 Wenn dem aktuellen Thread kein <xref:System.Windows.Threading.Dispatcher> Objekt zugeordnet ist, wird automatisch eine erstellt.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie die Renderingebene für den aktuellen Thread zurückgegeben wird.  
  
 [!code-csharp[RenderOptions#RenderCapability1](~/samples/snippets/csharp/VS_Snippets_Wpf/RenderOptions/CSharp/Window1.xaml.cs#rendercapability1)]
 [!code-vb[RenderOptions#RenderCapability1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RenderOptions/visualbasic/window1.xaml.vb#rendercapability1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TierChanged">
      <MemberSignature Language="C#" Value="public static event EventHandler TierChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TierChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.RenderCapability.TierChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event TierChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ TierChanged;" />
      <MemberSignature Language="F#" Value="member this.TierChanged : EventHandler " Usage="member this.TierChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich die Renderingebene für das <see cref="T:System.Windows.Threading.Dispatcher" />-Objekt des aktuellen Threads geändert hat.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn dem aktuellen Thread kein <xref:System.Windows.Threading.Dispatcher> Objekt zugeordnet ist, wird automatisch eine erstellt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
