<Type Name="GlyphRun" FullName="System.Windows.Media.GlyphRun">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1f666898c7b58d0ca1c258ed7d803f092d6368eb" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70629982" /></Metadata><TypeSignature Language="C#" Value="public class GlyphRun : System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GlyphRun extends System.Object implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.GlyphRun" />
  <TypeSignature Language="VB.NET" Value="Public Class GlyphRun&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class GlyphRun : System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type GlyphRun = class&#xA;    interface DUCE.IResource&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="7eb37-101">Stellt eine Sequenz von Symbolen aus einer einzelnen Schriftart einer einzelnen Schriftfamilie mit einer einzelnen Größe und einem einzelnen Renderingstil dar.</span><span class="sxs-lookup"><span data-stu-id="7eb37-101">Represents a sequence of glyphs from a single face of a single font at a single size, and with a single rendering style.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7eb37-102">Das <xref:System.Windows.Media.GlyphRun> -Objekt enthält Schriftart Details wie Glyphe-Indizes und einzelne Symbol Positionen.</span><span class="sxs-lookup"><span data-stu-id="7eb37-102">The <xref:System.Windows.Media.GlyphRun> object includes font details such as glyph indices and individual glyph positions.</span></span> <span data-ttu-id="7eb37-103">Darüber hinaus enthält das <xref:System.Windows.Media.GlyphRun> -Objekt die ursprünglichen Unicode-Code Punkte, aus denen der Testlauf generiert wurde, und Zeichen zu Glyphe-Puffer Offset-Zuordnungsinformationen sowie Zeichen-und pro-Glyphe-Flags.</span><span class="sxs-lookup"><span data-stu-id="7eb37-103">In addition, The <xref:System.Windows.Media.GlyphRun> object contains the original Unicode code points the run was generated from, character to glyph buffer offset mapping information, and per-character and per-glyph flags.</span></span>  
  
 <span data-ttu-id="7eb37-104">Das <xref:System.Windows.Documents.Glyphs> -Element stellt die Ausgabe <xref:System.Windows.Media.GlyphRun> eines in XAML dar.</span><span class="sxs-lookup"><span data-stu-id="7eb37-104">The <xref:System.Windows.Documents.Glyphs> element represents the output of a <xref:System.Windows.Media.GlyphRun> in XAML.</span></span> <span data-ttu-id="7eb37-105">Die folgende Markup Syntax wird verwendet, um das <xref:System.Windows.Documents.Glyphs> -Element zu beschreiben.</span><span class="sxs-lookup"><span data-stu-id="7eb37-105">The following markup syntax is used to describe the <xref:System.Windows.Documents.Glyphs> element.</span></span>  
  
 [!code-xaml[GlyphsOvwSample1#1](~/samples/snippets/csharp/VS_Snippets_Wpf/GlyphsOvwSample1/CS/default.xaml#1)]   
  
 <span data-ttu-id="7eb37-106">Jedes Symbol definiert Metriken, die angeben, wie Sie mit anderen <xref:System.Windows.Documents.Glyphs>ausgerichtet werden.</span><span class="sxs-lookup"><span data-stu-id="7eb37-106">Each glyph defines metrics that specify how it aligns with other <xref:System.Windows.Documents.Glyphs>.</span></span> <span data-ttu-id="7eb37-107">Die folgende Abbildung definiert die verschiedenen typografischen Eigenschaften von zwei unterschiedlichen Symbolen.</span><span class="sxs-lookup"><span data-stu-id="7eb37-107">The following graphic defines the various typographic qualities of two different glyph characters.</span></span>  
  
 <span data-ttu-id="7eb37-108">![Diagraph von Glyphe-Messungen] (~/add/media/glyph-example.png "Diagraph von Glyphe-Messungen")</span><span class="sxs-lookup"><span data-stu-id="7eb37-108">![Diagraph of glyph measurements](~/add/media/glyph-example.png "Diagraph of glyph measurements")</span></span>  
<span data-ttu-id="7eb37-109">Verschiedene typografische Qualitäten von zwei verschiedenen Symbol Zeichen</span><span class="sxs-lookup"><span data-stu-id="7eb37-109">Various typographic qualities of two different glyph characters</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7eb37-110">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Media.GlyphRun" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="7eb37-110">Initializes a new instance of the <see cref="T:System.Windows.Media.GlyphRun" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GlyphRun ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GlyphRun.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GlyphRun();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Obsolete("Use the PixelsPerDip override", false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7eb37-111">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Media.GlyphRun" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="7eb37-111">Initializes a new instance of the <see cref="T:System.Windows.Media.GlyphRun" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GlyphRun (float pixelsPerDip);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 pixelsPerDip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GlyphRun.#ctor(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pixelsPerDip As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GlyphRun(float pixelsPerDip);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.GlyphRun : single -&gt; System.Windows.Media.GlyphRun" Usage="new System.Windows.Media.GlyphRun pixelsPerDip" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pixelsPerDip" Type="System.Single" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="pixelsPerDip"><span data-ttu-id="7eb37-112">Der Wert für Pixel pro dichteunabhängigem Pixel, der dem Skalierungsfaktor entspricht.</span><span class="sxs-lookup"><span data-stu-id="7eb37-112">The Pixels Per Density Independent Pixel value, which is the equivalent of the scale factor.</span></span> <span data-ttu-id="7eb37-113">Wenn der DPI-Wert für einen Bildschirm z.B. 120 beträgt (oder 1,25, da 120/96 = 1,25), werden 1,25 Pixel pro dichteunabhängigem Pixel gezeichnet.</span><span class="sxs-lookup"><span data-stu-id="7eb37-113">For example, if the DPI of a screen is 120 (or 1.25 because 120/96 = 1.25) , 1.25 pixel per density independent pixel is drawn.</span></span> <span data-ttu-id="7eb37-114">DIP ist die von WPF verwendete Maßeinheit, um einen von Geräteauflösung und DPI-Werten unabhängigen Wert anzugeben.</span><span class="sxs-lookup"><span data-stu-id="7eb37-114">DIP is the unit of measurement used by WPF to be independent of device resolution and DPIs.</span></span></param>
        <summary><span data-ttu-id="7eb37-115">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Media.GlyphRun" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="7eb37-115">Initializes a new instance of the <see cref="T:System.Windows.Media.GlyphRun" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GlyphRun (System.Windows.Media.GlyphTypeface glyphTypeface, int bidiLevel, bool isSideways, double renderingEmSize, System.Collections.Generic.IList&lt;ushort&gt; glyphIndices, System.Windows.Point baselineOrigin, System.Collections.Generic.IList&lt;double&gt; advanceWidths, System.Collections.Generic.IList&lt;System.Windows.Point&gt; glyphOffsets, System.Collections.Generic.IList&lt;char&gt; characters, string deviceFontName, System.Collections.Generic.IList&lt;ushort&gt; clusterMap, System.Collections.Generic.IList&lt;bool&gt; caretStops, System.Windows.Markup.XmlLanguage language);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Media.GlyphTypeface glyphTypeface, int32 bidiLevel, bool isSideways, float64 renderingEmSize, class System.Collections.Generic.IList`1&lt;unsigned int16&gt; glyphIndices, valuetype System.Windows.Point baselineOrigin, class System.Collections.Generic.IList`1&lt;float64&gt; advanceWidths, class System.Collections.Generic.IList`1&lt;valuetype System.Windows.Point&gt; glyphOffsets, class System.Collections.Generic.IList`1&lt;char&gt; characters, string deviceFontName, class System.Collections.Generic.IList`1&lt;unsigned int16&gt; clusterMap, class System.Collections.Generic.IList`1&lt;bool&gt; caretStops, class System.Windows.Markup.XmlLanguage language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GlyphRun.#ctor(System.Windows.Media.GlyphTypeface,System.Int32,System.Boolean,System.Double,System.Collections.Generic.IList{System.UInt16},System.Windows.Point,System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Windows.Point},System.Collections.Generic.IList{System.Char},System.String,System.Collections.Generic.IList{System.UInt16},System.Collections.Generic.IList{System.Boolean},System.Windows.Markup.XmlLanguage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GlyphRun(System::Windows::Media::GlyphTypeface ^ glyphTypeface, int bidiLevel, bool isSideways, double renderingEmSize, System::Collections::Generic::IList&lt;System::UInt16&gt; ^ glyphIndices, System::Windows::Point baselineOrigin, System::Collections::Generic::IList&lt;double&gt; ^ advanceWidths, System::Collections::Generic::IList&lt;System::Windows::Point&gt; ^ glyphOffsets, System::Collections::Generic::IList&lt;char&gt; ^ characters, System::String ^ deviceFontName, System::Collections::Generic::IList&lt;System::UInt16&gt; ^ clusterMap, System::Collections::Generic::IList&lt;bool&gt; ^ caretStops, System::Windows::Markup::XmlLanguage ^ language);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.GlyphRun : System.Windows.Media.GlyphTypeface * int * bool * double * System.Collections.Generic.IList&lt;uint16&gt; * System.Windows.Point * System.Collections.Generic.IList&lt;double&gt; * System.Collections.Generic.IList&lt;System.Windows.Point&gt; * System.Collections.Generic.IList&lt;char&gt; * string * System.Collections.Generic.IList&lt;uint16&gt; * System.Collections.Generic.IList&lt;bool&gt; * System.Windows.Markup.XmlLanguage -&gt; System.Windows.Media.GlyphRun" Usage="new System.Windows.Media.GlyphRun (glyphTypeface, bidiLevel, isSideways, renderingEmSize, glyphIndices, baselineOrigin, advanceWidths, glyphOffsets, characters, deviceFontName, clusterMap, caretStops, language)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Obsolete("Use the PixelsPerDip override", false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="glyphTypeface" Type="System.Windows.Media.GlyphTypeface" />
        <Parameter Name="bidiLevel" Type="System.Int32" />
        <Parameter Name="isSideways" Type="System.Boolean" />
        <Parameter Name="renderingEmSize" Type="System.Double" />
        <Parameter Name="glyphIndices" Type="System.Collections.Generic.IList&lt;System.UInt16&gt;" />
        <Parameter Name="baselineOrigin" Type="System.Windows.Point" />
        <Parameter Name="advanceWidths" Type="System.Collections.Generic.IList&lt;System.Double&gt;" />
        <Parameter Name="glyphOffsets" Type="System.Collections.Generic.IList&lt;System.Windows.Point&gt;" />
        <Parameter Name="characters" Type="System.Collections.Generic.IList&lt;System.Char&gt;" />
        <Parameter Name="deviceFontName" Type="System.String" />
        <Parameter Name="clusterMap" Type="System.Collections.Generic.IList&lt;System.UInt16&gt;" />
        <Parameter Name="caretStops" Type="System.Collections.Generic.IList&lt;System.Boolean&gt;" />
        <Parameter Name="language" Type="System.Windows.Markup.XmlLanguage" />
      </Parameters>
      <Docs>
        <param name="glyphTypeface"><span data-ttu-id="7eb37-116">Ein Wert vom Typ <see cref="T:System.Windows.Media.GlyphTypeface" />.</span><span class="sxs-lookup"><span data-stu-id="7eb37-116">A value of type <see cref="T:System.Windows.Media.GlyphTypeface" />.</span></span></param>
        <param name="bidiLevel"><span data-ttu-id="7eb37-117">Ein Wert vom Typ <see cref="T:System.Int32" />.</span><span class="sxs-lookup"><span data-stu-id="7eb37-117">A value of type <see cref="T:System.Int32" />.</span></span></param>
        <param name="isSideways"><span data-ttu-id="7eb37-118">Ein Wert vom Typ <see cref="T:System.Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="7eb37-118">A value of type <see cref="T:System.Boolean" />.</span></span></param>
        <param name="renderingEmSize"><span data-ttu-id="7eb37-119">Ein Wert vom Typ <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="7eb37-119">A value of type <see cref="T:System.Double" />.</span></span></param>
        <param name="glyphIndices"><span data-ttu-id="7eb37-120">Ein Array vom Typ <see cref="T:System.Collections.Generic.IList`1" />.</span><span class="sxs-lookup"><span data-stu-id="7eb37-120">An array of type <see cref="T:System.Collections.Generic.IList`1" />.</span></span></param>
        <param name="baselineOrigin"><span data-ttu-id="7eb37-121">Ein Wert vom Typ <see cref="T:System.Windows.Point" />.</span><span class="sxs-lookup"><span data-stu-id="7eb37-121">A value of type <see cref="T:System.Windows.Point" />.</span></span></param>
        <param name="advanceWidths"><span data-ttu-id="7eb37-122">Ein Array vom Typ <see cref="T:System.Collections.Generic.IList`1" />.</span><span class="sxs-lookup"><span data-stu-id="7eb37-122">An array of type <see cref="T:System.Collections.Generic.IList`1" />.</span></span></param>
        <param name="glyphOffsets"><span data-ttu-id="7eb37-123">Ein Array vom Typ <see cref="T:System.Collections.Generic.IList`1" />.</span><span class="sxs-lookup"><span data-stu-id="7eb37-123">An array of type <see cref="T:System.Collections.Generic.IList`1" />.</span></span></param>
        <param name="characters"><span data-ttu-id="7eb37-124">Ein Array vom Typ <see cref="T:System.Collections.Generic.IList`1" />.</span><span class="sxs-lookup"><span data-stu-id="7eb37-124">An array of type <see cref="T:System.Collections.Generic.IList`1" />.</span></span></param>
        <param name="deviceFontName"><span data-ttu-id="7eb37-125">Ein Wert vom Typ <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="7eb37-125">A value of type <see cref="T:System.String" />.</span></span></param>
        <param name="clusterMap"><span data-ttu-id="7eb37-126">Ein Array vom Typ <see cref="T:System.Collections.Generic.IList`1" />.</span><span class="sxs-lookup"><span data-stu-id="7eb37-126">An array of type <see cref="T:System.Collections.Generic.IList`1" />.</span></span></param>
        <param name="caretStops"><span data-ttu-id="7eb37-127">Ein Array vom Typ <see cref="T:System.Collections.Generic.IList`1" />.</span><span class="sxs-lookup"><span data-stu-id="7eb37-127">An array of type <see cref="T:System.Collections.Generic.IList`1" />.</span></span></param>
        <param name="language"><span data-ttu-id="7eb37-128">Ein Wert vom Typ <see cref="T:System.Windows.Markup.XmlLanguage" />.</span><span class="sxs-lookup"><span data-stu-id="7eb37-128">A value of type <see cref="T:System.Windows.Markup.XmlLanguage" />.</span></span></param>
        <summary><span data-ttu-id="7eb37-129">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Media.GlyphRun" />-Klasse durch Angabe der Eigenschaften der Klasse.</span><span class="sxs-lookup"><span data-stu-id="7eb37-129">Initializes a new instance of the <see cref="T:System.Windows.Media.GlyphRun" /> class by specifying properties of the class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GlyphRun (System.Windows.Media.GlyphTypeface glyphTypeface, int bidiLevel, bool isSideways, double renderingEmSize, float pixelsPerDip, System.Collections.Generic.IList&lt;ushort&gt; glyphIndices, System.Windows.Point baselineOrigin, System.Collections.Generic.IList&lt;double&gt; advanceWidths, System.Collections.Generic.IList&lt;System.Windows.Point&gt; glyphOffsets, System.Collections.Generic.IList&lt;char&gt; characters, string deviceFontName, System.Collections.Generic.IList&lt;ushort&gt; clusterMap, System.Collections.Generic.IList&lt;bool&gt; caretStops, System.Windows.Markup.XmlLanguage language);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Media.GlyphTypeface glyphTypeface, int32 bidiLevel, bool isSideways, float64 renderingEmSize, float32 pixelsPerDip, class System.Collections.Generic.IList`1&lt;unsigned int16&gt; glyphIndices, valuetype System.Windows.Point baselineOrigin, class System.Collections.Generic.IList`1&lt;float64&gt; advanceWidths, class System.Collections.Generic.IList`1&lt;valuetype System.Windows.Point&gt; glyphOffsets, class System.Collections.Generic.IList`1&lt;char&gt; characters, string deviceFontName, class System.Collections.Generic.IList`1&lt;unsigned int16&gt; clusterMap, class System.Collections.Generic.IList`1&lt;bool&gt; caretStops, class System.Windows.Markup.XmlLanguage language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GlyphRun.#ctor(System.Windows.Media.GlyphTypeface,System.Int32,System.Boolean,System.Double,System.Single,System.Collections.Generic.IList{System.UInt16},System.Windows.Point,System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Windows.Point},System.Collections.Generic.IList{System.Char},System.String,System.Collections.Generic.IList{System.UInt16},System.Collections.Generic.IList{System.Boolean},System.Windows.Markup.XmlLanguage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GlyphRun(System::Windows::Media::GlyphTypeface ^ glyphTypeface, int bidiLevel, bool isSideways, double renderingEmSize, float pixelsPerDip, System::Collections::Generic::IList&lt;System::UInt16&gt; ^ glyphIndices, System::Windows::Point baselineOrigin, System::Collections::Generic::IList&lt;double&gt; ^ advanceWidths, System::Collections::Generic::IList&lt;System::Windows::Point&gt; ^ glyphOffsets, System::Collections::Generic::IList&lt;char&gt; ^ characters, System::String ^ deviceFontName, System::Collections::Generic::IList&lt;System::UInt16&gt; ^ clusterMap, System::Collections::Generic::IList&lt;bool&gt; ^ caretStops, System::Windows::Markup::XmlLanguage ^ language);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.GlyphRun : System.Windows.Media.GlyphTypeface * int * bool * double * single * System.Collections.Generic.IList&lt;uint16&gt; * System.Windows.Point * System.Collections.Generic.IList&lt;double&gt; * System.Collections.Generic.IList&lt;System.Windows.Point&gt; * System.Collections.Generic.IList&lt;char&gt; * string * System.Collections.Generic.IList&lt;uint16&gt; * System.Collections.Generic.IList&lt;bool&gt; * System.Windows.Markup.XmlLanguage -&gt; System.Windows.Media.GlyphRun" Usage="new System.Windows.Media.GlyphRun (glyphTypeface, bidiLevel, isSideways, renderingEmSize, pixelsPerDip, glyphIndices, baselineOrigin, advanceWidths, glyphOffsets, characters, deviceFontName, clusterMap, caretStops, language)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="glyphTypeface" Type="System.Windows.Media.GlyphTypeface" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="bidiLevel" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="isSideways" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="renderingEmSize" Type="System.Double" Index="3" FrameworkAlternate="netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="pixelsPerDip" Type="System.Single" Index="4" FrameworkAlternate="netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="glyphIndices" Type="System.Collections.Generic.IList&lt;System.UInt16&gt;" Index="5" FrameworkAlternate="netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="baselineOrigin" Type="System.Windows.Point" Index="6" FrameworkAlternate="netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="advanceWidths" Type="System.Collections.Generic.IList&lt;System.Double&gt;" Index="7" FrameworkAlternate="netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="glyphOffsets" Type="System.Collections.Generic.IList&lt;System.Windows.Point&gt;" Index="8" FrameworkAlternate="netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="characters" Type="System.Collections.Generic.IList&lt;System.Char&gt;" Index="9" FrameworkAlternate="netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="deviceFontName" Type="System.String" Index="10" FrameworkAlternate="netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="clusterMap" Type="System.Collections.Generic.IList&lt;System.UInt16&gt;" Index="11" FrameworkAlternate="netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="caretStops" Type="System.Collections.Generic.IList&lt;System.Boolean&gt;" Index="12" FrameworkAlternate="netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="language" Type="System.Windows.Markup.XmlLanguage" Index="13" FrameworkAlternate="netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="glyphTypeface"><span data-ttu-id="7eb37-130">Ein Wert vom Typ <see cref="T:System.Windows.Media.GlyphTypeface" />.</span><span class="sxs-lookup"><span data-stu-id="7eb37-130">A value of type <see cref="T:System.Windows.Media.GlyphTypeface" />.</span></span></param>
        <param name="bidiLevel"><span data-ttu-id="7eb37-131">Ein Wert vom Typ <see cref="T:System.Int32" />.</span><span class="sxs-lookup"><span data-stu-id="7eb37-131">A value of type <see cref="T:System.Int32" />.</span></span></param>
        <param name="isSideways"><span data-ttu-id="7eb37-132">Ein Wert vom Typ <see cref="T:System.Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="7eb37-132">A value of type <see cref="T:System.Boolean" />.</span></span></param>
        <param name="renderingEmSize"><span data-ttu-id="7eb37-133">Ein Wert vom Typ <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="7eb37-133">A  value of type <see cref="T:System.Double" />.</span></span></param>
        <param name="pixelsPerDip"><span data-ttu-id="7eb37-134">Ein Wert vom Typ <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="7eb37-134">A  value of type <see cref="T:System.Double" />.</span></span></param>
        <param name="glyphIndices"><span data-ttu-id="7eb37-135">Ein Array vom Typ <see cref="T:System.Collections.Generic.IList`1" />.</span><span class="sxs-lookup"><span data-stu-id="7eb37-135">An array of type <see cref="T:System.Collections.Generic.IList`1" />.</span></span></param>
        <param name="baselineOrigin"><span data-ttu-id="7eb37-136">Ein Wert vom Typ <see cref="T:System.Windows.Point" />.</span><span class="sxs-lookup"><span data-stu-id="7eb37-136">A value of type <see cref="T:System.Windows.Point" />.</span></span></param>
        <param name="advanceWidths"><span data-ttu-id="7eb37-137">Ein Array vom Typ <see cref="T:System.Collections.Generic.IList`1" />.</span><span class="sxs-lookup"><span data-stu-id="7eb37-137">An array of type <see cref="T:System.Collections.Generic.IList`1" />.</span></span></param>
        <param name="glyphOffsets"><span data-ttu-id="7eb37-138">Ein Array vom Typ <see cref="T:System.Collections.Generic.IList`1" />.</span><span class="sxs-lookup"><span data-stu-id="7eb37-138">An array of type <see cref="T:System.Collections.Generic.IList`1" />.</span></span></param>
        <param name="characters"><span data-ttu-id="7eb37-139">Ein Array vom Typ <see cref="T:System.Collections.Generic.IList`1" />.</span><span class="sxs-lookup"><span data-stu-id="7eb37-139">An array of type <see cref="T:System.Collections.Generic.IList`1" />.</span></span></param>
        <param name="deviceFontName"><span data-ttu-id="7eb37-140">Ein Wert vom Typ <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="7eb37-140">A value of type <see cref="T:System.String" />.</span></span></param>
        <param name="clusterMap"><span data-ttu-id="7eb37-141">Ein Array vom Typ <see cref="T:System.Collections.Generic.IList`1" />.</span><span class="sxs-lookup"><span data-stu-id="7eb37-141">An array of type <see cref="T:System.Collections.Generic.IList`1" />.</span></span></param>
        <param name="caretStops"><span data-ttu-id="7eb37-142">Ein Array vom Typ <see cref="T:System.Collections.Generic.IList`1" />.</span><span class="sxs-lookup"><span data-stu-id="7eb37-142">An array of type <see cref="T:System.Collections.Generic.IList`1" />.</span></span></param>
        <param name="language"><span data-ttu-id="7eb37-143">Ein Wert vom Typ <see cref="T:System.Windows.Markup.XmlLanguage" />.</span><span class="sxs-lookup"><span data-stu-id="7eb37-143">A value of type <see cref="T:System.Windows.Markup.XmlLanguage" />.</span></span></param>
        <summary><span data-ttu-id="7eb37-144">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Media.GlyphRun" />-Klasse durch Angabe der Eigenschaften der Klasse.</span><span class="sxs-lookup"><span data-stu-id="7eb37-144">Initializes a new instance of the <see cref="T:System.Windows.Media.GlyphRun" /> class by specifying properties of the class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdvanceWidths">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;double&gt; AdvanceWidths { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;float64&gt; AdvanceWidths" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.AdvanceWidths" />
      <MemberSignature Language="VB.NET" Value="Public Property AdvanceWidths As IList(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;double&gt; ^ AdvanceWidths { System::Collections::Generic::IList&lt;double&gt; ^ get(); void set(System::Collections::Generic::IList&lt;double&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AdvanceWidths : System.Collections.Generic.IList&lt;double&gt; with get, set" Usage="System.Windows.Media.GlyphRun.AdvanceWidths" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Media.Converters.DoubleIListConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7eb37-145">Ruft die Liste der <see cref="T:System.Double" />-Werte ab, die die Dickten entsprechend den Glyphindizes darstellen, oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="7eb37-145">Gets or sets the list of <see cref="T:System.Double" /> values that represent the advance widths corresponding to the glyph indices.</span></span></summary>
        <value><span data-ttu-id="7eb37-146">Eine Liste von <see cref="T:System.Double" />-Werten, die die Dickten darstellen.</span><span class="sxs-lookup"><span data-stu-id="7eb37-146">A list of <see cref="T:System.Double" /> values that represent the advance widths.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7eb37-147">Jedes Element in der Liste der vorab breiten entspricht den von der <xref:System.Windows.Media.GlyphRun.GlyphIndices%2A> -Eigenschaft zurückgegebenen Symbol Werten.</span><span class="sxs-lookup"><span data-stu-id="7eb37-147">Each item in the list of advance widths corresponds to the glyph values returned by the <xref:System.Windows.Media.GlyphRun.GlyphIndices%2A> property.</span></span> <span data-ttu-id="7eb37-148">Der nominale Ursprung des n-ten Symbols während der Ausführung (n > 0) ist der nominale Ursprung<sup>des n-</sup> 1<sup>-</sup> ten Symbols plus der n-1<sup></sup></span><span class="sxs-lookup"><span data-stu-id="7eb37-148">The nominal origin of the n<sup>th</sup> glyph in the run (n>0) is the nominal origin of the n-1<sup>th</sup> glyph plus the n-1<sup>th</sup> advance width added along the runs advance vector.</span></span> <span data-ttu-id="7eb37-149">Basis Symbole haben in der Regel eine vorwärts Breite ungleich 0, wohingegen das Kombinieren von Symbolen in der Regel eine vorwärts Breite von 0 (null) aufweist.</span><span class="sxs-lookup"><span data-stu-id="7eb37-149">Base glyphs generally have a non-zero advance width, whereas combining glyphs generally have a zero advance width.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaselineOrigin">
      <MemberSignature Language="C#" Value="public System.Windows.Point BaselineOrigin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point BaselineOrigin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.BaselineOrigin" />
      <MemberSignature Language="VB.NET" Value="Public Property BaselineOrigin As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point BaselineOrigin { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberSignature Language="F#" Value="member this.BaselineOrigin : System.Windows.Point with get, set" Usage="System.Windows.Media.GlyphRun.BaselineOrigin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7eb37-150">Ruft den Baselineursprung des <see cref="T:System.Windows.Media.GlyphRun" /> ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="7eb37-150">Gets or sets the baseline origin of the <see cref="T:System.Windows.Media.GlyphRun" />.</span></span></summary>
        <value><span data-ttu-id="7eb37-151">Ein <see cref="T:System.Windows.Point" />-Wert, der den Urspung der Basisline darstellt.</span><span class="sxs-lookup"><span data-stu-id="7eb37-151">A <see cref="T:System.Windows.Point" /> value representing the baseline origin.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BidiLevel">
      <MemberSignature Language="C#" Value="public int BidiLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BidiLevel" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.BidiLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property BidiLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BidiLevel { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BidiLevel : int with get, set" Usage="System.Windows.Media.GlyphRun.BidiLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7eb37-152">Ruft die bidirektionale Schachtelungsebene des <see cref="T:System.Windows.Media.GlyphRun" /> ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="7eb37-152">Gets or sets the bidirectional nesting level of the <see cref="T:System.Windows.Media.GlyphRun" />.</span></span></summary>
        <value><span data-ttu-id="7eb37-153">Ein <see cref="T:System.Int32" />-Wert, der die bidirektionale Schachtelungsebene darstellt.</span><span class="sxs-lookup"><span data-stu-id="7eb37-153">An <see cref="T:System.Int32" /> value that represents the bidirectional nesting level.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildGeometry">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Geometry BuildGeometry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Geometry BuildGeometry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GlyphRun.BuildGeometry" />
      <MemberSignature Language="VB.NET" Value="Public Function BuildGeometry () As Geometry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Geometry ^ BuildGeometry();" />
      <MemberSignature Language="F#" Value="member this.BuildGeometry : unit -&gt; System.Windows.Media.Geometry" Usage="glyphRun.BuildGeometry " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7eb37-154">Ruft die <see cref="T:System.Windows.Media.Geometry" /> für den <see cref="T:System.Windows.Media.GlyphRun" /> ab.</span><span class="sxs-lookup"><span data-stu-id="7eb37-154">Retrieves the <see cref="T:System.Windows.Media.Geometry" /> for the <see cref="T:System.Windows.Media.GlyphRun" />.</span></span></summary>
        <returns><span data-ttu-id="7eb37-155">Die <see cref="T:System.Windows.Media.Geometry" />, die dem <see cref="T:System.Windows.Media.GlyphRun" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="7eb37-155">The <see cref="T:System.Windows.Media.Geometry" /> corresponding to the <see cref="T:System.Windows.Media.GlyphRun" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7eb37-156">Der <xref:System.Windows.Media.Geometry> zurückgegebene enthält die kombinierte Geometrie aller Symbole <xref:System.Windows.Media.GlyphRun>in.</span><span class="sxs-lookup"><span data-stu-id="7eb37-156">The <xref:System.Windows.Media.Geometry> returned contains the combined geometry of all glyphs in the <xref:System.Windows.Media.GlyphRun>.</span></span> <span data-ttu-id="7eb37-157">Überlappende Kontur werden durch Ausführen einer booleschen Union-Operation zusammengeführt.</span><span class="sxs-lookup"><span data-stu-id="7eb37-157">Overlapping contours are merged by performing a Boolean union operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaretStops">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;bool&gt; CaretStops { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;bool&gt; CaretStops" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.CaretStops" />
      <MemberSignature Language="VB.NET" Value="Public Property CaretStops As IList(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;bool&gt; ^ CaretStops { System::Collections::Generic::IList&lt;bool&gt; ^ get(); void set(System::Collections::Generic::IList&lt;bool&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CaretStops : System.Collections.Generic.IList&lt;bool&gt; with get, set" Usage="System.Windows.Media.GlyphRun.CaretStops" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Media.Converters.BoolIListConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7eb37-158">Ruft die Liste der <see cref="T:System.Boolean" />-Werte ab, die bestimmen, ob für jeden UTF16-Codepunkt Caretzeichenstopps im Unicode vorhanden sind, der den <see cref="T:System.Windows.Media.GlyphRun" /> darstellt, oder legt sie fest.</span><span class="sxs-lookup"><span data-stu-id="7eb37-158">Gets or sets the list of <see cref="T:System.Boolean" /> values that determine whether there are caret stops for every UTF16 code point in the Unicode representing the <see cref="T:System.Windows.Media.GlyphRun" />.</span></span></summary>
        <value><span data-ttu-id="7eb37-159">Eine Liste der <see cref="T:System.Boolean" />-Werte, die angeben, ob Caretzeichenstopps vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="7eb37-159">A list of <see cref="T:System.Boolean" /> values that represent whether there are caret stops.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7eb37-160">Der Rückgabewert ist `null` , wenn ein Caretzeichen für jeden UTF16-Codepunkt in dem Unicode vorhanden ist <xref:System.Windows.Media.GlyphRun>, der darstellt.</span><span class="sxs-lookup"><span data-stu-id="7eb37-160">The return value is `null` if there is a caret stop for every UTF16 code point in the Unicode representing the <xref:System.Windows.Media.GlyphRun>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Characters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;char&gt; Characters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;char&gt; Characters" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.Characters" />
      <MemberSignature Language="VB.NET" Value="Public Property Characters As IList(Of Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;char&gt; ^ Characters { System::Collections::Generic::IList&lt;char&gt; ^ get(); void set(System::Collections::Generic::IList&lt;char&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Characters : System.Collections.Generic.IList&lt;char&gt; with get, set" Usage="System.Windows.Media.GlyphRun.Characters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Media.Converters.CharIListConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7eb37-161">Ruft die Liste der UTF-16-Codepunkte ab, die den Unicode-Inhalt von <see cref="T:System.Windows.Media.GlyphRun" /> darstellen, oder legt die Liste fest.</span><span class="sxs-lookup"><span data-stu-id="7eb37-161">Gets or sets the list of UTF16 code points that represent the Unicode content of the <see cref="T:System.Windows.Media.GlyphRun" />.</span></span></summary>
        <value><span data-ttu-id="7eb37-162">Eine Liste von <see cref="T:System.Char" />-Werten, die den Unicode-Inhalt darstellen.</span><span class="sxs-lookup"><span data-stu-id="7eb37-162">A list of <see cref="T:System.Char" /> values that represent Unicode content.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClusterMap">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;ushort&gt; ClusterMap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;unsigned int16&gt; ClusterMap" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.ClusterMap" />
      <MemberSignature Language="VB.NET" Value="Public Property ClusterMap As IList(Of UShort)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::UInt16&gt; ^ ClusterMap { System::Collections::Generic::IList&lt;System::UInt16&gt; ^ get(); void set(System::Collections::Generic::IList&lt;System::UInt16&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClusterMap : System.Collections.Generic.IList&lt;uint16&gt; with get, set" Usage="System.Windows.Media.GlyphRun.ClusterMap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Media.Converters.UShortIListConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7eb37-163">Ruft die Liste von <see cref="T:System.UInt16" />-Werten ab, die Zeichen in <see cref="T:System.Windows.Media.GlyphRun" /> zu Glyphindizes zuordnet, oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="7eb37-163">Gets or sets the list of <see cref="T:System.UInt16" /> values that maps characters in the <see cref="T:System.Windows.Media.GlyphRun" /> to glyph indices.</span></span></summary>
        <value><span data-ttu-id="7eb37-164">Eine Liste von <see cref="T:System.UInt16" />-Werten, die zugeordnete Glyphindizes darstellen.</span><span class="sxs-lookup"><span data-stu-id="7eb37-164">A list of <see cref="T:System.UInt16" /> values that represent mapped glyph indices.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7eb37-165">In der Liste ist ein Eintrag pro Zeichen vorhanden.</span><span class="sxs-lookup"><span data-stu-id="7eb37-165">There is one entry per character in the list.</span></span> <span data-ttu-id="7eb37-166">Jeder Wert in der Liste gibt den Offset des ersten Symbols, dargestellt durch <xref:System.Windows.Media.GlyphRun.GlyphIndices%2A>, in das entsprechende Zeichen an, dargestellt durch. <xref:System.Windows.Media.GlyphRun.Characters%2A></span><span class="sxs-lookup"><span data-stu-id="7eb37-166">Each value in the list gives the offset of the first glyph, represented by <xref:System.Windows.Media.GlyphRun.GlyphIndices%2A>, to the corresponding character, represented by <xref:System.Windows.Media.GlyphRun.Characters%2A>.</span></span>  
  
 <span data-ttu-id="7eb37-167">Wenn mehrere Zeichen einem einzelnen Symbol oder einer Symbolgruppe zugeordnet sind, die nicht so aufgeschlüsselt werden kann, dass Sie genau einzelnen Zeichen zugeordnet werden kann, haben die Einträge für alle Zeichen denselben Wert: den Offset des ersten Symbols, das diese Gruppe von Zeichen darstellt.</span><span class="sxs-lookup"><span data-stu-id="7eb37-167">Where multiple characters map to a single glyph, or to a glyph group that cannot be broken down to map exactly to individual characters, the entries for all the characters have the same value: the offset of the first glyph that represents this group of characters.</span></span>  
  
 <span data-ttu-id="7eb37-168">Wenn die Liste <xref:System.String.Empty>gleich `null` oder gleich ist, wird angenommen, dass eine Zuordnung zwischen 1 und 1 erfolgt.</span><span class="sxs-lookup"><span data-stu-id="7eb37-168">If the list is `null` or equal to <xref:System.String.Empty>, sequential 1 to 1 mapping is assumed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComputeAlignmentBox">
      <MemberSignature Language="C#" Value="public System.Windows.Rect ComputeAlignmentBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect ComputeAlignmentBox() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GlyphRun.ComputeAlignmentBox" />
      <MemberSignature Language="VB.NET" Value="Public Function ComputeAlignmentBox () As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Rect ComputeAlignmentBox();" />
      <MemberSignature Language="F#" Value="member this.ComputeAlignmentBox : unit -&gt; System.Windows.Rect" Usage="glyphRun.ComputeAlignmentBox " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7eb37-169">Ruft das Ausrichtungsfeld für den <see cref="T:System.Windows.Media.GlyphRun" /> ab.</span><span class="sxs-lookup"><span data-stu-id="7eb37-169">Retrieves the alignment box for the <see cref="T:System.Windows.Media.GlyphRun" />.</span></span></summary>
        <returns><span data-ttu-id="7eb37-170">Ein <see cref="T:System.Windows.Rect" />, das das Ausrichtungsfeld für den <see cref="T:System.Windows.Media.GlyphRun" /> darstellt.</span><span class="sxs-lookup"><span data-stu-id="7eb37-170">A <see cref="T:System.Windows.Rect" /> that represents the alignment box for the <see cref="T:System.Windows.Media.GlyphRun" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7eb37-171">Der zurück <xref:System.Windows.Rect> gegebene ist relativ zum Ursprung <xref:System.Windows.Media.GlyphRun>von.</span><span class="sxs-lookup"><span data-stu-id="7eb37-171">The returned <xref:System.Windows.Rect> is relative to the origin of the <xref:System.Windows.Media.GlyphRun>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComputeInkBoundingBox">
      <MemberSignature Language="C#" Value="public System.Windows.Rect ComputeInkBoundingBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect ComputeInkBoundingBox() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GlyphRun.ComputeInkBoundingBox" />
      <MemberSignature Language="VB.NET" Value="Public Function ComputeInkBoundingBox () As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Rect ComputeInkBoundingBox();" />
      <MemberSignature Language="F#" Value="member this.ComputeInkBoundingBox : unit -&gt; System.Windows.Rect" Usage="glyphRun.ComputeInkBoundingBox " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7eb37-172">Ruft das umgebende Freihandrechteck für den <see cref="T:System.Windows.Media.GlyphRun" /> ab.</span><span class="sxs-lookup"><span data-stu-id="7eb37-172">Retrieves the ink bounding box for the <see cref="T:System.Windows.Media.GlyphRun" />.</span></span></summary>
        <returns><span data-ttu-id="7eb37-173">Ein <see cref="T:System.Windows.Rect" />, das das umgebende Freihandrechteck für den <see cref="T:System.Windows.Media.GlyphRun" /> darstellt.</span><span class="sxs-lookup"><span data-stu-id="7eb37-173">A <see cref="T:System.Windows.Rect" /> that represents the ink bounding box the <see cref="T:System.Windows.Media.GlyphRun" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7eb37-174">Der zurück <xref:System.Windows.Rect> gegebene ist relativ zum Ursprung <xref:System.Windows.Media.GlyphRun>von.</span><span class="sxs-lookup"><span data-stu-id="7eb37-174">The returned <xref:System.Windows.Rect> is relative to the origin of the <xref:System.Windows.Media.GlyphRun>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeviceFontName">
      <MemberSignature Language="C#" Value="public string DeviceFontName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeviceFontName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.DeviceFontName" />
      <MemberSignature Language="VB.NET" Value="Public Property DeviceFontName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DeviceFontName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeviceFontName : string with get, set" Usage="System.Windows.Media.GlyphRun.DeviceFontName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7eb37-175">Ruft die spezifische Geräteschriftart ab, für die der <see cref="T:System.Windows.Media.GlyphRun" /> optimiert ist, oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="7eb37-175">Gets or sets the specific device font for which the <see cref="T:System.Windows.Media.GlyphRun" /> has been optimized.</span></span></summary>
        <value><span data-ttu-id="7eb37-176">Ein <see cref="T:System.String" />-Wert, der die Geräteschriftart darstellt.</span><span class="sxs-lookup"><span data-stu-id="7eb37-176">A <see cref="T:System.String" /> value that represents the device font.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7eb37-177">Wenn ein <xref:System.Windows.Media.GlyphRun> auf einem Gerät mit integrierter Unterstützung für die benannte Geräte Schriftart gerendert wird, sollte <xref:System.Windows.Media.GlyphRun> das mit einem gerätespezifischen Mechanismus zum Auswählen der Schriftart und durch das Senden von Unicode-Code Punkten anstelle von Glyphe-Indizes gerendert werden.</span><span class="sxs-lookup"><span data-stu-id="7eb37-177">When a <xref:System.Windows.Media.GlyphRun> is rendered on a device that has built-in support for the named device font, the <xref:System.Windows.Media.GlyphRun> should be rendered using a device specific mechanism for selecting that font, and by sending Unicode code points rather than glyph indices.</span></span> <span data-ttu-id="7eb37-178">Beim Rendern auf einem Gerät, das keine integrierte Unterstützung für die benannte Geräte Schriftart umfasst, <xref:System.Windows.Media.GlyphRun.DeviceFontName%2A> sollte ignoriert werden.</span><span class="sxs-lookup"><span data-stu-id="7eb37-178">When rendering onto a device that does not include built-in support for the named device font, <xref:System.Windows.Media.GlyphRun.DeviceFontName%2A> should be ignored.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontRenderingEmSize">
      <MemberSignature Language="C#" Value="public double FontRenderingEmSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 FontRenderingEmSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.FontRenderingEmSize" />
      <MemberSignature Language="VB.NET" Value="Public Property FontRenderingEmSize As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double FontRenderingEmSize { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.FontRenderingEmSize : double with get, set" Usage="System.Windows.Media.GlyphRun.FontRenderingEmSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7eb37-179">Ruft die Geviertgröße ab, die zum Rendern des <see cref="T:System.Windows.Media.GlyphRun" /> verwendet wird, oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="7eb37-179">Gets or sets the em size used for rendering the <see cref="T:System.Windows.Media.GlyphRun" />.</span></span></summary>
        <value><span data-ttu-id="7eb37-180">Ein <see cref="T:System.Double" />-Wert, der die zum Rendern verwendete Geviertgröße darstellt.</span><span class="sxs-lookup"><span data-stu-id="7eb37-180">A <see cref="T:System.Double" /> value that represents the em size used for rendering.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCaretCharacterHitFromDistance">
      <MemberSignature Language="C#" Value="public System.Windows.Media.TextFormatting.CharacterHit GetCaretCharacterHitFromDistance (double distance, out bool isInside);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.TextFormatting.CharacterHit GetCaretCharacterHitFromDistance(float64 distance, [out] bool&amp; isInside) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GlyphRun.GetCaretCharacterHitFromDistance(System.Double,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCaretCharacterHitFromDistance (distance As Double, ByRef isInside As Boolean) As CharacterHit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::TextFormatting::CharacterHit GetCaretCharacterHitFromDistance(double distance, [Runtime::InteropServices::Out] bool % isInside);" />
      <MemberSignature Language="F#" Value="member this.GetCaretCharacterHitFromDistance : double *  -&gt; System.Windows.Media.TextFormatting.CharacterHit" Usage="glyphRun.GetCaretCharacterHitFromDistance (distance, isInside)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.CharacterHit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="distance" Type="System.Double" />
        <Parameter Name="isInside" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="distance"><span data-ttu-id="7eb37-181">Der Offset, der zum Berechnen des ermittelten Caretzeichens verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="7eb37-181">Offset to use for computing the caret character hit.</span></span></param>
        <param name="isInside"><span data-ttu-id="7eb37-182">Bestimmt, ob das ermittelte Zeichen im <see cref="T:System.Windows.Media.GlyphRun" /> ist.</span><span class="sxs-lookup"><span data-stu-id="7eb37-182">Determines whether the character hit is inside the <see cref="T:System.Windows.Media.GlyphRun" />.</span></span></param>
        <summary><span data-ttu-id="7eb37-183">Ruft den <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" />-Wert ab, der das ermittelte Caretzeichen des <see cref="T:System.Windows.Media.GlyphRun" /> darstellt.</span><span class="sxs-lookup"><span data-stu-id="7eb37-183">Retrieves the <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> value that represents the character hit of the caret of the <see cref="T:System.Windows.Media.GlyphRun" />.</span></span></summary>
        <returns><span data-ttu-id="7eb37-184">Ein <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" />-Wert, der das ermittelte Zeichen darstellt, das sich am nächsten am <paramref name="distance" />-Wert befindet.</span><span class="sxs-lookup"><span data-stu-id="7eb37-184">A <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> value that represents the character hit that is closest to the <paramref name="distance" /> value.</span></span> <span data-ttu-id="7eb37-185">Das Out-Parameter <paramref name="isInside" /> gibt <see langword="true" /> zurück, wenn sich das ermittelte Zeichen innerhalb des <see cref="T:System.Windows.Media.GlyphRun" /> befindet, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7eb37-185">The out parameter <paramref name="isInside" /> returns <see langword="true" /> if the character hit is inside the <see cref="T:System.Windows.Media.GlyphRun" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7eb37-186">Der `distance` Wert stellt den Offset vom führenden Rand <xref:System.Windows.Media.GlyphRun>von dar.</span><span class="sxs-lookup"><span data-stu-id="7eb37-186">The `distance` value represents the offset from the leading edge of the <xref:System.Windows.Media.GlyphRun>.</span></span>  
  
 <span data-ttu-id="7eb37-187">Wenn der Treffer außerhalb der <xref:System.Windows.Media.GlyphRun>liegt, stellt das Treffer Zeichen das nächste Einfügemarke dar, das in der <xref:System.Windows.Media.GlyphRun>-Auflistung getroffen wurde.</span><span class="sxs-lookup"><span data-stu-id="7eb37-187">If the hit is outside the <xref:System.Windows.Media.GlyphRun>, the character hit represents the closest caret character hit within the <xref:System.Windows.Media.GlyphRun>.</span></span>  
  
 <span data-ttu-id="7eb37-188">Die <xref:System.Windows.Media.TextFormatting.CharacterHit> -Struktur stellt Informationen zu einem in einem <xref:System.Windows.Media.GlyphRun> getroffenen Zeichen dar-den Index des ersten Zeichens, das gefunden wurde, sowie Informationen über den führenden oder nachfolgenden Rand.</span><span class="sxs-lookup"><span data-stu-id="7eb37-188">The <xref:System.Windows.Media.TextFormatting.CharacterHit> structure represents information about a character hit within a <xref:System.Windows.Media.GlyphRun> - the index of the first character that was hit as well as information about the leading or trailing edge.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDistanceFromCaretCharacterHit">
      <MemberSignature Language="C#" Value="public double GetDistanceFromCaretCharacterHit (System.Windows.Media.TextFormatting.CharacterHit characterHit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GetDistanceFromCaretCharacterHit(valuetype System.Windows.Media.TextFormatting.CharacterHit characterHit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GlyphRun.GetDistanceFromCaretCharacterHit(System.Windows.Media.TextFormatting.CharacterHit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GetDistanceFromCaretCharacterHit(System::Windows::Media::TextFormatting::CharacterHit characterHit);" />
      <MemberSignature Language="F#" Value="member this.GetDistanceFromCaretCharacterHit : System.Windows.Media.TextFormatting.CharacterHit -&gt; double" Usage="glyphRun.GetDistanceFromCaretCharacterHit characterHit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="characterHit" Type="System.Windows.Media.TextFormatting.CharacterHit" />
      </Parameters>
      <Docs>
        <param name="characterHit"><span data-ttu-id="7eb37-189">Der <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> zum Berechnen des Offsets.</span><span class="sxs-lookup"><span data-stu-id="7eb37-189">The <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> to use for computing the offset.</span></span></param>
        <summary><span data-ttu-id="7eb37-190">Ruft den Offset vom führenden Rand des <see cref="T:System.Windows.Media.GlyphRun" /> zum führenden oder nachgestellten Rand eines Unterbrechungspunkts mit Caretzeichen ab, der das angegebene ermittelte Zeichen enthält.</span><span class="sxs-lookup"><span data-stu-id="7eb37-190">Retrieves the offset from the leading edge of the <see cref="T:System.Windows.Media.GlyphRun" /> to the leading or trailing edge of a caret stop containing the specified character hit.</span></span></summary>
        <returns><span data-ttu-id="7eb37-191">Ein <see cref="T:System.Double" />, der den Offset vom führenden Rand des <see cref="T:System.Windows.Media.GlyphRun" /> zum führenden oder nachgestellten Rand eines Unterbrechungspunkts mit Caretzeichen, der das ermittelte Zeichen enthält.</span><span class="sxs-lookup"><span data-stu-id="7eb37-191">A <see cref="T:System.Double" /> that represents the offset from the leading edge of the <see cref="T:System.Windows.Media.GlyphRun" /> to the leading or trailing edge of a caret stop containing the character hit.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7eb37-192">Wenn der <xref:System.Windows.Media.GlyphRun> nicht auf den prüfbaren Wert festgelegt ist, wird der Abstand von 0,0 zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="7eb37-192">If the <xref:System.Windows.Media.GlyphRun> is not hit testable, the distance of 0.0 is returned.</span></span> <span data-ttu-id="7eb37-193">Verwenden Sie <xref:System.Windows.Media.GlyphRun.IsHitTestable%2A> die-Eigenschaft, um <xref:System.Windows.Media.GlyphRun> zu bestimmen, ob ein Treffer Test durchführen kann.</span><span class="sxs-lookup"><span data-stu-id="7eb37-193">Use the <xref:System.Windows.Media.GlyphRun.IsHitTestable%2A> property to determine if a <xref:System.Windows.Media.GlyphRun> can be hit test.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7eb37-194">Das ermittelte Zeichen befindet sich außerhalb des von der <see cref="T:System.Windows.Media.GlyphRun" />-Unicode-Zeichenfolge angegebenen Bereichs.</span><span class="sxs-lookup"><span data-stu-id="7eb37-194">The character hit is outside the range specified by the <see cref="T:System.Windows.Media.GlyphRun" /> Unicode string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetNextCaretCharacterHit">
      <MemberSignature Language="C#" Value="public System.Windows.Media.TextFormatting.CharacterHit GetNextCaretCharacterHit (System.Windows.Media.TextFormatting.CharacterHit characterHit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.TextFormatting.CharacterHit GetNextCaretCharacterHit(valuetype System.Windows.Media.TextFormatting.CharacterHit characterHit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GlyphRun.GetNextCaretCharacterHit(System.Windows.Media.TextFormatting.CharacterHit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::TextFormatting::CharacterHit GetNextCaretCharacterHit(System::Windows::Media::TextFormatting::CharacterHit characterHit);" />
      <MemberSignature Language="F#" Value="member this.GetNextCaretCharacterHit : System.Windows.Media.TextFormatting.CharacterHit -&gt; System.Windows.Media.TextFormatting.CharacterHit" Usage="glyphRun.GetNextCaretCharacterHit characterHit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.CharacterHit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="characterHit" Type="System.Windows.Media.TextFormatting.CharacterHit" />
      </Parameters>
      <Docs>
        <param name="characterHit"><span data-ttu-id="7eb37-195">Der <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" />, der zum Berechnen des nächsten Trefferwerts verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="7eb37-195">The <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> to use for computing the next hit value.</span></span></param>
        <summary><span data-ttu-id="7eb37-196">Ruft das nächste gültige ermittelte Caretzeichen in der logischen Richtung im <see cref="T:System.Windows.Media.GlyphRun" /> ab.</span><span class="sxs-lookup"><span data-stu-id="7eb37-196">Retrieves the next valid caret character hit in the logical direction in the <see cref="T:System.Windows.Media.GlyphRun" />.</span></span></summary>
        <returns><span data-ttu-id="7eb37-197">Ein <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" />, der das nächste gültige ermittelte Caretzeichen in der logischen Richtung darstellt.</span><span class="sxs-lookup"><span data-stu-id="7eb37-197">A <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> that represents the next valid caret character hit in the logical direction.</span></span> <span data-ttu-id="7eb37-198">Wenn der Rückgabewert gleich <paramref name="characterHit" /> ist, ist im <see cref="T:System.Windows.Media.GlyphRun" /> keine weitere Navigation möglich.</span><span class="sxs-lookup"><span data-stu-id="7eb37-198">If the return value is equal to <paramref name="characterHit" />, no further navigation is possible in the <see cref="T:System.Windows.Media.GlyphRun" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7eb37-199">Um das vorherige gültige Einfügezeichen abzurufen, verwenden <xref:System.Windows.Media.GlyphRun.GetPreviousCaretCharacterHit%2A>Sie.</span><span class="sxs-lookup"><span data-stu-id="7eb37-199">To retrieve the previous valid caret character hit, use <xref:System.Windows.Media.GlyphRun.GetPreviousCaretCharacterHit%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPreviousCaretCharacterHit">
      <MemberSignature Language="C#" Value="public System.Windows.Media.TextFormatting.CharacterHit GetPreviousCaretCharacterHit (System.Windows.Media.TextFormatting.CharacterHit characterHit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.TextFormatting.CharacterHit GetPreviousCaretCharacterHit(valuetype System.Windows.Media.TextFormatting.CharacterHit characterHit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GlyphRun.GetPreviousCaretCharacterHit(System.Windows.Media.TextFormatting.CharacterHit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::TextFormatting::CharacterHit GetPreviousCaretCharacterHit(System::Windows::Media::TextFormatting::CharacterHit characterHit);" />
      <MemberSignature Language="F#" Value="member this.GetPreviousCaretCharacterHit : System.Windows.Media.TextFormatting.CharacterHit -&gt; System.Windows.Media.TextFormatting.CharacterHit" Usage="glyphRun.GetPreviousCaretCharacterHit characterHit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.CharacterHit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="characterHit" Type="System.Windows.Media.TextFormatting.CharacterHit" />
      </Parameters>
      <Docs>
        <param name="characterHit"><span data-ttu-id="7eb37-200">Der <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" />, der zum Berechnen des vorherigen Trefferwerts verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="7eb37-200">The <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> to use for computing the previous hit value.</span></span></param>
        <summary><span data-ttu-id="7eb37-201">Ruft das vorherige gültige ermittelte Caretzeichen in der logischen Richtung im <see cref="T:System.Windows.Media.GlyphRun" /> ab.</span><span class="sxs-lookup"><span data-stu-id="7eb37-201">Retrieves the previous valid caret character hit in the logical direction in the <see cref="T:System.Windows.Media.GlyphRun" />.</span></span></summary>
        <returns><span data-ttu-id="7eb37-202">Ein <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" />, der das vorherige gültige ermittelte Caretzeichen in der logischen Richtung darstellt.</span><span class="sxs-lookup"><span data-stu-id="7eb37-202">A <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> that represents the previous valid caret character hit in the logical direction.</span></span> <span data-ttu-id="7eb37-203">Wenn der Rückgabewert gleich <paramref name="characterHit" /> ist, ist im <see cref="T:System.Windows.Media.GlyphRun" /> keine weitere Navigation möglich.</span><span class="sxs-lookup"><span data-stu-id="7eb37-203">If the return value is equal to <paramref name="characterHit" />, no further navigation is possible in the <see cref="T:System.Windows.Media.GlyphRun" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7eb37-204">Um das nächste gültige Einfügezeichen abzurufen, verwenden <xref:System.Windows.Media.GlyphRun.GetNextCaretCharacterHit%2A>Sie.</span><span class="sxs-lookup"><span data-stu-id="7eb37-204">To retrieve the next valid caret character hit, use <xref:System.Windows.Media.GlyphRun.GetNextCaretCharacterHit%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GlyphIndices">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;ushort&gt; GlyphIndices { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;unsigned int16&gt; GlyphIndices" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.GlyphIndices" />
      <MemberSignature Language="VB.NET" Value="Public Property GlyphIndices As IList(Of UShort)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::UInt16&gt; ^ GlyphIndices { System::Collections::Generic::IList&lt;System::UInt16&gt; ^ get(); void set(System::Collections::Generic::IList&lt;System::UInt16&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GlyphIndices : System.Collections.Generic.IList&lt;uint16&gt; with get, set" Usage="System.Windows.Media.GlyphRun.GlyphIndices" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Media.Converters.UShortIListConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7eb37-205">Ruft ein Array von <see cref="T:System.UInt16" />-Werten ab, die die Symbolindizes in der zu rendernden physischen Schriftart darstellen, oder legt dieses fest.</span><span class="sxs-lookup"><span data-stu-id="7eb37-205">Gets or sets an array of <see cref="T:System.UInt16" /> values that represent the glyph indices in the rendering physical font.</span></span></summary>
        <value><span data-ttu-id="7eb37-206">Eine Liste von <see cref="T:System.UInt16" />-Werten, die Symbolindizes darstellen.</span><span class="sxs-lookup"><span data-stu-id="7eb37-206">A list of <see cref="T:System.UInt16" /> values that represent the glyph indices.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7eb37-207">Der Standardwert der Glyphe-Indizes wird durch die Zeichen Zuordnungs Tabelle der Schriftart für die entsprechenden Unicode-Code Punkte im inneren Text definiert.</span><span class="sxs-lookup"><span data-stu-id="7eb37-207">The default value of the glyph indices are defined by the font's character map table for the corresponding Unicode code points in the inner text.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GlyphOffsets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Windows.Point&gt; GlyphOffsets { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype System.Windows.Point&gt; GlyphOffsets" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.GlyphOffsets" />
      <MemberSignature Language="VB.NET" Value="Public Property GlyphOffsets As IList(Of Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Windows::Point&gt; ^ GlyphOffsets { System::Collections::Generic::IList&lt;System::Windows::Point&gt; ^ get(); void set(System::Collections::Generic::IList&lt;System::Windows::Point&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GlyphOffsets : System.Collections.Generic.IList&lt;System.Windows.Point&gt; with get, set" Usage="System.Windows.Media.GlyphRun.GlyphOffsets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Media.Converters.PointIListConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Windows.Point&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7eb37-208">Ruft ein Array von <see cref="T:System.Windows.Point" />-Werten ab, die die Offsets der Glyphen in <see cref="T:System.Windows.Media.GlyphRun" /> darstellen, oder legt es fest.</span><span class="sxs-lookup"><span data-stu-id="7eb37-208">Gets or sets an array of <see cref="T:System.Windows.Point" /> values representing the offsets of the glyphs in the <see cref="T:System.Windows.Media.GlyphRun" />.</span></span></summary>
        <value><span data-ttu-id="7eb37-209">Eine Liste der <see cref="T:System.Windows.Point" />-Werte, die die Offsets von Glyphen darstellen.</span><span class="sxs-lookup"><span data-stu-id="7eb37-209">A list of <see cref="T:System.Windows.Point" /> values representing the offsets of glyph.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7eb37-210">Die Symbol Offset Werte werden dem nominalen Symbol Ursprung hinzugefügt, um den endgültigen Ursprung für das Symbol zu generieren.</span><span class="sxs-lookup"><span data-stu-id="7eb37-210">The glyph offset values are added to the nominal glyph origin to generate the final origin for the glyph.</span></span> <span data-ttu-id="7eb37-211">Die <xref:System.Windows.Media.GlyphRun.AdvanceWidths%2A> -Eigenschaft stellt die Werte der nominalen Symbol Ursprünge für den <xref:System.Windows.Media.GlyphRun>dar.</span><span class="sxs-lookup"><span data-stu-id="7eb37-211">The <xref:System.Windows.Media.GlyphRun.AdvanceWidths%2A> property represents the values of the nominal glyph origins for the <xref:System.Windows.Media.GlyphRun>.</span></span>  
  
 <span data-ttu-id="7eb37-212">Basis Symbole haben in der Regel einen Symbol Offset von (0,0), wobei Symbole in der Regel über einen Offset verfügen, der Sie auf dem nächsten vorangehenden Basis Symbol ordnungsgemäß platziert.</span><span class="sxs-lookup"><span data-stu-id="7eb37-212">Base glyphs generally have a glyph offset of (0, 0), combining glyphs generally have an offset that places them correctly on top of the nearest preceding base glyph.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GlyphTypeface">
      <MemberSignature Language="C#" Value="public System.Windows.Media.GlyphTypeface GlyphTypeface { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.GlyphTypeface GlyphTypeface" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.GlyphTypeface" />
      <MemberSignature Language="VB.NET" Value="Public Property GlyphTypeface As GlyphTypeface" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::GlyphTypeface ^ GlyphTypeface { System::Windows::Media::GlyphTypeface ^ get(); void set(System::Windows::Media::GlyphTypeface ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GlyphTypeface : System.Windows.Media.GlyphTypeface with get, set" Usage="System.Windows.Media.GlyphRun.GlyphTypeface" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.GlyphTypeface</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7eb37-213">Ruft die <see cref="T:System.Windows.Media.GlyphTypeface" /> für den <see cref="T:System.Windows.Media.GlyphRun" /> ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="7eb37-213">Gets or sets the <see cref="T:System.Windows.Media.GlyphTypeface" /> for the <see cref="T:System.Windows.Media.GlyphRun" />.</span></span></summary>
        <value><span data-ttu-id="7eb37-214">Der <see cref="T:System.Windows.Media.GlyphTypeface" /> für den <see cref="T:System.Windows.Media.GlyphRun" />.</span><span class="sxs-lookup"><span data-stu-id="7eb37-214">The <see cref="T:System.Windows.Media.GlyphTypeface" /> for the <see cref="T:System.Windows.Media.GlyphRun" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHitTestable">
      <MemberSignature Language="C#" Value="public bool IsHitTestable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHitTestable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.IsHitTestable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsHitTestable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsHitTestable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsHitTestable : bool" Usage="System.Windows.Media.GlyphRun.IsHitTestable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7eb37-215">Ruft einen Wert ab, der angibt, ob innerhalb des <see cref="T:System.Windows.Media.GlyphRun" /> gültige ermittelte Caretzeichen vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="7eb37-215">Gets a value indicating whether there are any valid caret character hits within the <see cref="T:System.Windows.Media.GlyphRun" />.</span></span></summary>
        <value><span data-ttu-id="7eb37-216"><see langword="true" />, wenn gültige ermittelte Caretzeichen vorhanden sind, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7eb37-216"><see langword="true" /> if there are valid caret character hits; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSideways">
      <MemberSignature Language="C#" Value="public bool IsSideways { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSideways" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.IsSideways" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSideways As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSideways { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsSideways : bool with get, set" Usage="System.Windows.Media.GlyphRun.IsSideways" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7eb37-217">Ruft einen Wert ab, der angibt, ob Symbole gedreht werden sollen, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="7eb37-217">Gets or sets a value indicating whether to rotate glyphs.</span></span></summary>
        <value><span data-ttu-id="7eb37-218"><see langword="true" />, wenn die Symbole gedreht werden, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7eb37-218"><see langword="true" /> if the glyphs are rotated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7eb37-219">Wenn  <xref:System.Windows.Media.GlyphRun.IsSideways%2A> den Wert hat, werden die Symbole, die Textzeichen bilden, 90 ° gegen den Uhrzeigersinn mithilfe vertikaler Baseline-positionierungsmetriken gedreht. `true`</span><span class="sxs-lookup"><span data-stu-id="7eb37-219">If <xref:System.Windows.Media.GlyphRun.IsSideways%2A> is `true`, the glyphs that make up text characters are rotated 90° counter-clockwise, using vertical baseline positioning metrics.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public System.Windows.Markup.XmlLanguage Language { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Markup.XmlLanguage Language" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.Language" />
      <MemberSignature Language="VB.NET" Value="Public Property Language As XmlLanguage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Markup::XmlLanguage ^ Language { System::Windows::Markup::XmlLanguage ^ get(); void set(System::Windows::Markup::XmlLanguage ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Language : System.Windows.Markup.XmlLanguage with get, set" Usage="System.Windows.Media.GlyphRun.Language" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.XmlLanguage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7eb37-220">Ruft die <see cref="T:System.Windows.Markup.XmlLanguage" /> für den <see cref="T:System.Windows.Media.GlyphRun" /> ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="7eb37-220">Gets or sets the <see cref="T:System.Windows.Markup.XmlLanguage" /> for the <see cref="T:System.Windows.Media.GlyphRun" />.</span></span></summary>
        <value><span data-ttu-id="7eb37-221">Der <see cref="T:System.Windows.Markup.XmlLanguage" /> für den <see cref="T:System.Windows.Media.GlyphRun" />.</span><span class="sxs-lookup"><span data-stu-id="7eb37-221">The <see cref="T:System.Windows.Markup.XmlLanguage" /> for the <see cref="T:System.Windows.Media.GlyphRun" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelsPerDip">
      <MemberSignature Language="C#" Value="public float PixelsPerDip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 PixelsPerDip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.PixelsPerDip" />
      <MemberSignature Language="VB.NET" Value="Public Property PixelsPerDip As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float PixelsPerDip { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.PixelsPerDip : single with get, set" Usage="System.Windows.Media.GlyphRun.PixelsPerDip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7eb37-222">Ruft die PixelsPerDip ab, wo der Text gerendert werden soll, oder legt sie fest.</span><span class="sxs-lookup"><span data-stu-id="7eb37-222">Get or sets the PixelsPerDip at which the text should be rendered.</span></span></summary>
        <value><span data-ttu-id="7eb37-223">Der aktuelle <see cref="P:System.Windows.Media.GlyphRun.PixelsPerDip" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="7eb37-223">The current <see cref="P:System.Windows.Media.GlyphRun.PixelsPerDip" /> value.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.BeginInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GlyphRun.System#ComponentModel#ISupportInitialize#BeginInit" />
      <MemberSignature Language="VB.NET" Value="Sub BeginInit () Implements ISupportInitialize.BeginInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.BeginInit() = System::ComponentModel::ISupportInitialize::BeginInit;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7eb37-224">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" />.</span><span class="sxs-lookup"><span data-stu-id="7eb37-224">For a description of this member, see <see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.EndInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GlyphRun.System#ComponentModel#ISupportInitialize#EndInit" />
      <MemberSignature Language="VB.NET" Value="Sub EndInit () Implements ISupportInitialize.EndInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.EndInit() = System::ComponentModel::ISupportInitialize::EndInit;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7eb37-225">Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.ComponentModel.ISupportInitialize.EndInit" />.</span><span class="sxs-lookup"><span data-stu-id="7eb37-225">For a description of this member, see <see cref="M:System.ComponentModel.ISupportInitialize.EndInit" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
