<Type Name="PeerCollaborationPermission" FullName="System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fd54587c152902bddb7018cdd5a559ab4e2754a0" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36474189" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class PeerCollaborationPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit PeerCollaborationPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PeerCollaborationPermission&#xA;Inherits CodeAccessPermission&#xA;Implements IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerCollaborationPermission sealed : System::Security::CodeAccessPermission, System::Security::Permissions::IUnrestrictedPermission" />
  <TypeSignature Language="F#" Value="type PeerCollaborationPermission = class&#xA;    inherit CodeAccessPermission&#xA;    interface IUnrestrictedPermission" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="1b40a-101">Specifies the values that define or are used in <see cref="N:System.Net.PeerToPeer.Collaboration" /> object permissions.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1b40a-101">Specifies the values that define or are used in <see cref="N:System.Net.PeerToPeer.Collaboration" /> object permissions.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b40a-102">Die Standardeinstellung <xref:System.Security.Permissions> aller lokalen und Zone Intranetanwendungen collaborationdienste Zugriff auf zulassen und keine Berechtigung ist für Anwendungen für die Internetzone.</span><span class="sxs-lookup"><span data-stu-id="1b40a-102">The default <xref:System.Security.Permissions> allow all local and Intranet zone applications to access collaboration services, and no permission is granted for Internet zone applications.</span></span> <span data-ttu-id="1b40a-103">Das heißt, wenn die Standardberechtigungen nicht geändert wurden, alle verbindungslokale und standortlokale sind Anwendungen haben Zugriff auf Dienste von Peer-zu-Peer-Zusammenarbeit jedoch globale Anwendungen haben keinen Zugriff.</span><span class="sxs-lookup"><span data-stu-id="1b40a-103">In other words, if the default permissions are not changed, all link-local and site-local applications have access to Peer-To-Peer collaboration services, but global applications have no access.</span></span>  
  
 <span data-ttu-id="1b40a-104">Diese Klasse kann nicht abgeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="1b40a-104">This class is not derivable.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Copy" />
    <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.FromXml(System.Security.SecurityElement)" />
    <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerCollaborationPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerCollaborationPermission(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission : System.Security.Permissions.PermissionState -&gt; System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" Usage="new System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">
          <span data-ttu-id="1b40a-105">One of the values in the <see cref="T:System.Security.Permissions.PermissionState" /> enumeration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b40a-105">One of the values in the <see cref="T:System.Security.Permissions.PermissionState" /> enumeration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1b40a-106">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b40a-106">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />.</span>
          </span>
          <span data-ttu-id="1b40a-107">The initial <see cref="T:System.Security.Permissions.PermissionState" /> for this instance is passed when the constructor is called.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b40a-107">The initial <see cref="T:System.Security.Permissions.PermissionState" /> for this instance is passed when the constructor is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b40a-108">Instanzen dieses Typs haben entweder keinen Zugriff auf die durch die Berechtigung geschützten Ressourcen, oder sie haben uneingeschränkten Zugriff auf diese Ressourcen.</span><span class="sxs-lookup"><span data-stu-id="1b40a-108">Instances of this type either have no access to the resource(s) protected by the permission, or they have unrestricted full access to those resources.</span></span>  
  
 <span data-ttu-id="1b40a-109">Wenn der Status ist <xref:System.Security.Permissions.PermissionState.Unrestricted>die <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission> Instanz übergibt alle Forderungen.</span><span class="sxs-lookup"><span data-stu-id="1b40a-109">If state is <xref:System.Security.Permissions.PermissionState.Unrestricted>, the <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission> instance passes all demands.</span></span> <span data-ttu-id="1b40a-110">Wenn der Status jeder andere Wert enthält den <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission> Instanz schlägt fehl, alle Anforderungen.</span><span class="sxs-lookup"><span data-stu-id="1b40a-110">If state contains any other value, the <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission> instance fails all demands.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsUnrestricted" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="abstract member Copy : unit -&gt; System.Security.IPermission&#xA;override this.Copy : unit -&gt; System.Security.IPermission" Usage="peerCollaborationPermission.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1b40a-111">Creates and returns a copy of the current <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b40a-111">Creates and returns a copy of the current <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1b40a-112">A <see cref="T:System.Object" /> that contains a copy of the current instance of <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b40a-112">A <see cref="T:System.Object" /> that contains a copy of the current instance of <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b40a-113">Eine Kopie einer <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission> Instanz erteilt den gleichen Zugriff auf Ressourcen wie die ursprüngliche Berechtigung.</span><span class="sxs-lookup"><span data-stu-id="1b40a-113">A copy of a <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission> instance grants the same access to resources as the original permission.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)" />
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXml (e As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ e);" />
      <MemberSignature Language="F#" Value="abstract member FromXml : System.Security.SecurityElement -&gt; unit&#xA;override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="peerCollaborationPermission.FromXml e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1b40a-114">The XML encoding to use to reconstruct the permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b40a-114">The XML encoding to use to reconstruct the permission.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1b40a-115">Represents the XML object model for encoding security objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b40a-115">Represents the XML object model for encoding security objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b40a-116">Diese Klasse dient eine einfache Implementierung eines einfachen XML-Objektmodells für die Verwendung in das Sicherheitssystem und nicht für die Verwendung als eine allgemeine XML-Objektmodell werden.</span><span class="sxs-lookup"><span data-stu-id="1b40a-116">This class is intended to be a lightweight implementation of a simple XML object model for use within the security system, and not for use as a general XML object model.</span></span>  
  
 <span data-ttu-id="1b40a-117">Diese Klasse kann nicht vererbt werden.</span><span class="sxs-lookup"><span data-stu-id="1b40a-117">This class cannot be inherited.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1b40a-118">-   The parameter is not a valid permission element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b40a-118">-   The parameter is not a valid permission element.</span>
          </span>
          <span data-ttu-id="1b40a-119">-   The parameter does not contain a valid type or class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b40a-119">-   The parameter does not contain a valid type or class.</span>
          </span>
          <span data-ttu-id="1b40a-120">-   The parameter's version number is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b40a-120">-   The parameter's version number is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1b40a-121">The parameter is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b40a-121">The parameter is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.ToXml" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Intersect : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="peerCollaborationPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="1b40a-122">Permission to <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(System.Security.IPermission)" /> with the current permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b40a-122">Permission to <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(System.Security.IPermission)" /> with the current permission.</span>
          </span>
          <span data-ttu-id="1b40a-123">It must be of the same type as the current permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b40a-123">It must be of the same type as the current permission.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1b40a-124">Creates and returns a permission that is the intersection of the current <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> and the specified <paramref name="target" /> permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b40a-124">Creates and returns a permission that is the intersection of the current <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> and the specified <paramref name="target" /> permission.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1b40a-125">A new permission that represents the intersection of the current <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> and the specified <paramref name="target" /> permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b40a-125">A new permission that represents the intersection of the current <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> and the specified <paramref name="target" /> permission.</span>
          </span>
          <span data-ttu-id="1b40a-126">This new permission is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) if the intersection is empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b40a-126">This new permission is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) if the intersection is empty.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b40a-127">Die Schnittmenge zweier Berechtigungen ist eine Berechtigung, die den Satz von Vorgänge zu beschreiben, den beide gemeinsam beschreiben.</span><span class="sxs-lookup"><span data-stu-id="1b40a-127">The intersection of two permissions is a permission that describes the set of operations they both describe in common.</span></span> <span data-ttu-id="1b40a-128">Nur eine Anforderung, die beide ursprünglichen Berechtigungen erfolgreich durchläuft, wird die Schnittmenge übergeben.</span><span class="sxs-lookup"><span data-stu-id="1b40a-128">Only a demand that passes both original permissions will pass the intersection.</span></span>  
  
 <span data-ttu-id="1b40a-129">Die folgenden Anweisungen sind erforderlich, um werden `true` für alle Implementierungen von der <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1b40a-129">The following statements are required to be `true` for all implementations of the <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect%2A> method.</span></span> <span data-ttu-id="1b40a-130">X- und Y repräsentieren <xref:System.Security.IPermission> Objektverweise, die keine `null` Verweis (`Nothing` in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="1b40a-130">X and Y represent <xref:System.Security.IPermission> object references that are not a `null` reference (`Nothing` in Visual Basic).</span></span>  
  
-   <span data-ttu-id="1b40a-131">X.Intersect(X) gibt einen Wert zurück, der gleich X ist.</span><span class="sxs-lookup"><span data-stu-id="1b40a-131">X.Intersect(X) returns a value equal to X.</span></span>  
  
-   <span data-ttu-id="1b40a-132">X.Intersect(Y) gibt denselben Wert wie y.Intersect(x) zurück.</span><span class="sxs-lookup"><span data-stu-id="1b40a-132">X.Intersect(Y) returns the same value as Y.Intersect(X).</span></span>  
  
-   <span data-ttu-id="1b40a-133">X.Intersect (ein `null` Verweis) gibt einen `null` Verweis.</span><span class="sxs-lookup"><span data-stu-id="1b40a-133">X.Intersect(a `null` reference) returns a `null` reference.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1b40a-134">The target parameter is not a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) and is not an instance of the same class as the current permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b40a-134">The target parameter is not a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) and is not an instance of the same class as the current permission.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsSubsetOf(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member IsSubsetOf : System.Security.IPermission -&gt; bool&#xA;override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="peerCollaborationPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="1b40a-135">A permission that is to be tested for the subset relationship.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b40a-135">A permission that is to be tested for the subset relationship.</span>
          </span>
          <span data-ttu-id="1b40a-136">This permission must be of the same type as the current permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b40a-136">This permission must be of the same type as the current permission.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1b40a-137">Determines whether the current <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> is a subset of the specified <paramref name="target" /> permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b40a-137">Determines whether the current <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> is a subset of the specified <paramref name="target" /> permission.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1b40a-138">
            <see langword="True" /> if the current <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> is a subset of the specified permission; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b40a-138">
              <see langword="True" /> if the current <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> is a subset of the specified permission; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b40a-139">Die aktuelle <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission> eine Teilmenge der angegebenen Berechtigung ist, wenn die aktuelle Berechtigung eine Reihe von Vorgängen angibt, die vollständig in die angegebene Berechtigung enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="1b40a-139">The current <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission> is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.</span></span> <span data-ttu-id="1b40a-140">Z. B. eine Berechtigung, die für den Zugriff auf "*C:\example.txt*"ist eine Teilmenge einer Berechtigung, die für den Zugriff auf"*" c: "\\*".</span><span class="sxs-lookup"><span data-stu-id="1b40a-140">For example, a permission that represents access to "*C:\example.txt*" is a subset of a permission that represents access to "*C:\\*".</span></span> <span data-ttu-id="1b40a-141">Wenn diese Methode gibt `true`, die aktuelle Berechtigung stellt keine umfassenderen Zugriff auf die geschützte Ressource als die angegebene Berechtigung.</span><span class="sxs-lookup"><span data-stu-id="1b40a-141">If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.</span></span>  
  
 <span data-ttu-id="1b40a-142">Die folgenden Anweisungen sind erforderlich, um werden `true` für alle Implementierungen von der <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsSubsetOf%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1b40a-142">The following statements are required to be `true` for all implementations of the <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsSubsetOf%2A> method.</span></span> <span data-ttu-id="1b40a-143">X-, Y- und Z repräsentieren <xref:System.Security.IPermission> Objekte, die keine `null` Verweis (`Nothing` in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="1b40a-143">X, Y, and Z represent <xref:System.Security.IPermission> objects that are not a `null` reference (`Nothing` in Visual Basic).</span></span>  
  
-   <span data-ttu-id="1b40a-144">Gibt X.IsSubsetOf(X) `true`.</span><span class="sxs-lookup"><span data-stu-id="1b40a-144">X.IsSubsetOf(X) returns `true`.</span></span>  
  
-   <span data-ttu-id="1b40a-145">X.IsSubsetOf(Y) gibt denselben Wert wie Y.IsSubsetOf(X) zurück, wenn X und Y den gleichen Satz von Berechtigungen darstellen.</span><span class="sxs-lookup"><span data-stu-id="1b40a-145">X.IsSubsetOf(Y) returns the same value as Y.IsSubsetOf(X) if and only if X and Y represent the same set of permissions.</span></span>  
  
-   <span data-ttu-id="1b40a-146">Wenn X.IsSubsetOf(Y) und Y.IsSubsetOf(Z) zurückgeben `true`, gibt X.IsSubsetOf(Z) `true`.</span><span class="sxs-lookup"><span data-stu-id="1b40a-146">If X.IsSubsetOf(Y) and Y.IsSubsetOf(Z) both return `true`, X.IsSubsetOf(Z) returns `true`.</span></span>  
  
 <span data-ttu-id="1b40a-147">Wenn X steht für eine leere [Ipermissions](http://go.microsoft.com/fwlink?LinkID=98303) Objekt mit dem Berechtigungszustand None und Y stellt ein Ipermissions-Objekt, das eine `null` Verweis (`Nothing` in Visual Basic), gibt X.IsSubsetOf(Y) `true`.</span><span class="sxs-lookup"><span data-stu-id="1b40a-147">If X represents an empty [IPermission](http://go.microsoft.com/fwlink?LinkID=98303) object with a permission state of None and Y represents an IPermission object that is a `null` reference (`Nothing` in Visual Basic), X.IsSubsetOf(Y) returns `true`.</span></span> <span data-ttu-id="1b40a-148">Wenn Z auch eine leere Berechtigung ist, gibt der zusammengesetzte Vorgang X.Union(Z) set. IsSubsetOf(Y) zurück, die auch `true` da die <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union%2A> zwei Berechtigungen, die leer ist eine leere Berechtigung.</span><span class="sxs-lookup"><span data-stu-id="1b40a-148">If Z is also an empty permission, the compound set operation X.Union(Z).IsSubsetOf(Y) also returns `true` because the <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union%2A> of two empty permissions is an empty permission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1b40a-149">The parameter is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b40a-149">The parameter is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberSignature Language="F#" Value="abstract member IsUnrestricted : unit -&gt; bool&#xA;override this.IsUnrestricted : unit -&gt; bool" Usage="peerCollaborationPermission.IsUnrestricted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1b40a-150">Returns a value specifying whether the current <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> is unrestricted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b40a-150">Returns a value specifying whether the current <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> is unrestricted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1b40a-151">
            <see langword="True" /> if the current permission is unrestricted; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b40a-151">
              <see langword="True" /> if the current permission is unrestricted; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b40a-152">Eine uneingeschränkte Berechtigung darstellt Zugriff auf allen Ressourcen, die durch die Berechtigung geschützten.</span><span class="sxs-lookup"><span data-stu-id="1b40a-152">An unrestricted permission represents access to any and all resources protected by the permission.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="abstract member ToXml : unit -&gt; System.Security.SecurityElement&#xA;override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="peerCollaborationPermission.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1b40a-153">Creates an XML encoding of the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> and its current state.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b40a-153">Creates an XML encoding of the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> and its current state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1b40a-154">An XML encoding of the permission, including any state information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b40a-154">An XML encoding of the permission, including any state information.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b40a-155">Im Allgemeinen Berechtigung-Klasse, Methoden, die von der Infrastruktur verwendet werden und nicht für die Verwendung in Anwendungen vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="1b40a-155">In general, permission class methods are used by the infrastructure and are not intended for use in applications.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.FromXml(System.Security.SecurityElement)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Union : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="peerCollaborationPermission.Union target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="1b40a-156">A permission to combine with the current permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b40a-156">A permission to combine with the current permission.</span>
          </span>
          <span data-ttu-id="1b40a-157">It must be of the same type as the current permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b40a-157">It must be of the same type as the current permission.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1b40a-158">Creates a permission that is the union of the current <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> and the specified <paramref name="target" /> permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b40a-158">Creates a permission that is the union of the current <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> and the specified <paramref name="target" /> permission.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1b40a-159">A new permission that represents the <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)" /> of the current <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> and the specified permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b40a-159">A new permission that represents the <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)" /> of the current <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> and the specified permission.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b40a-160">Das Ergebnis eines Aufrufs von <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union%2A> ist eine Berechtigung, alle Vorgänge, die sowohl das aktuelle dargestellte darstellt <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission> und der angegebenen Berechtigung.</span><span class="sxs-lookup"><span data-stu-id="1b40a-160">The result of a call to <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union%2A> is a permission that represents all the operations represented by both the current <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission> and the specified permission.</span></span> <span data-ttu-id="1b40a-161">Jede Anforderung, entweder Berechtigung durchläuft, übergibt die Union.</span><span class="sxs-lookup"><span data-stu-id="1b40a-161">Any demand that passes either permission passes their union.</span></span>  
  
 <span data-ttu-id="1b40a-162">Die folgenden Anweisungen sind erforderlich, um werden `true` für alle Implementierungen der Union-Methode.</span><span class="sxs-lookup"><span data-stu-id="1b40a-162">The following statements are required to be `true` for all implementations of the Union method.</span></span> <span data-ttu-id="1b40a-163">X- und Y repräsentieren <xref:System.Security.IPermission> Objekte, die keine `null` Verweis (`Nothing` in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="1b40a-163">X and Y represent <xref:System.Security.IPermission> objects that are not a `null` reference (`Nothing` in Visual Basic).</span></span>  
  
-   <span data-ttu-id="1b40a-164">X.Union(X) gibt ein Objekt mit den gleichen Wert wie X zurück.</span><span class="sxs-lookup"><span data-stu-id="1b40a-164">X.Union(X) returns an object that has the same value as X.</span></span>  
  
-   <span data-ttu-id="1b40a-165">X.Union(Y) gibt ein Objekt, das den gleichen Wert wie das Objekt, das von Y.Union(X) zurückgegeben hat.</span><span class="sxs-lookup"><span data-stu-id="1b40a-165">X.Union(Y) returns an object that has the same value as the object returned by Y.Union(X).</span></span>  
  
-   <span data-ttu-id="1b40a-166">X.Union (ein `null` Verweis (`Nothing` in Visual Basic)) gibt ein Objekt, das den gleichen Wert wie X hat.</span><span class="sxs-lookup"><span data-stu-id="1b40a-166">X.Union(a `null` reference (`Nothing` in Visual Basic)) returns an object that has the same value as X.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1b40a-167">The parameter is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b40a-167">The parameter is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsSubsetOf(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsUnrestricted" />
      </Docs>
    </Member>
  </Members>
</Type>