<Type Name="ContactManager" FullName="System.Net.PeerToPeer.Collaboration.ContactManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c443e1a2ed8889342e0ec70c464462948185977d" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69091555" /></Metadata><TypeSignature Language="C#" Value="public sealed class ContactManager : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ContactManager extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ContactManager&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContactManager sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type ContactManager = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="c0f67-101">Stellt eine Auflistung von <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />-Objekten dar, die in einem Windows-Adressbuch beibehalten werden.</span><span class="sxs-lookup"><span data-stu-id="c0f67-101">Represents a collection of <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> objects which persist in a Windows Address Book.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0f67-102">Diese Klasse besitzt keine öffentlichen Konstruktoren, da ein Verweis darauf von der <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration> -Klasse zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="c0f67-102">This class has no public constructors, since a reference to it is returned by the <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration> class.</span></span>  
  
 <span data-ttu-id="c0f67-103">Adressbücher, die der- <xref:System.Net.PeerToPeer.Collaboration.PeerContact> Verwaltung zugeordnet sind, enthalten diejenigen, die dem Hostpeer und einem Remotepeer zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="c0f67-103">Address books that are associated with <xref:System.Net.PeerToPeer.Collaboration.PeerContact> management include those associated with the host peer and a remote peer.</span></span>  <span data-ttu-id="c0f67-104">Beide Computer können mit anderen Peers zusammenarbeiten. Wenn ein Peer lokal auf dem Remotepeer, aber nicht auf dem Hostpeer ist, kann er dem <xref:System.Net.PeerToPeer.Collaboration.ContactManager> des Hostpeers hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="c0f67-104">Either computer may collaborate with other peers; when a peer is local to the remote peer but not the host peer, it can be added to the <xref:System.Net.PeerToPeer.Collaboration.ContactManager> of the host peer.</span></span> <span data-ttu-id="c0f67-105">Bestimmte Vorgänge für die <xref:System.Net.PeerToPeer.Collaboration.ContactManager> <xref:System.Net.PeerToPeer.Collaboration.ContactManager.AddContact%2A> -Klasse, wie z <xref:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact%2A>. b. und, korrelieren mit den zugeordneten Vorgängen, die für das Windows-Adressbuch des Remotepeers ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="c0f67-105">Certain operations on the <xref:System.Net.PeerToPeer.Collaboration.ContactManager> class, such as <xref:System.Net.PeerToPeer.Collaboration.ContactManager.AddContact%2A> and <xref:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact%2A>, correlate to the associated operations being performed on the Windows Address book of the remote peer.</span></span>  
  
 <span data-ttu-id="c0f67-106">Der Hostpeer kann auf diesen permanenten Speicher zugreifen, <xref:System.Net.PeerToPeer.Collaboration.PeerContact> um Informationen zu erhalten, die mit den Anwendungen verknüpft werden können, an denen ein Peer teilnehmen soll.</span><span class="sxs-lookup"><span data-stu-id="c0f67-106">The host peer has access to this persistent storage for <xref:System.Net.PeerToPeer.Collaboration.PeerContact> information, which can be associated with the applications in which a peer intends to participate.</span></span> <span data-ttu-id="c0f67-107">Ein <xref:System.Net.PeerToPeer.Collaboration.PeerApplication> kann sich selbst als Benutzer <xref:System.Net.PeerToPeer.Collaboration.ContactManager> eines permanenten Stores auf einem Computer identifizieren.</span><span class="sxs-lookup"><span data-stu-id="c0f67-107">A <xref:System.Net.PeerToPeer.Collaboration.PeerApplication> can identify itself as a user of a <xref:System.Net.PeerToPeer.Collaboration.ContactManager> persistent store on a computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0f67-108">Der folgende Beispielcode veranschaulicht, wie ein <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe> -Element aufgezählt und dem lokalen <xref:System.Net.PeerToPeer.Collaboration.PeerContact> <xref:System.Net.PeerToPeer.Collaboration.ContactManager>als hinzugefügt wird:</span><span class="sxs-lookup"><span data-stu-id="c0f67-108">The following example code illustrates how to enumerate a <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe> and add it as a <xref:System.Net.PeerToPeer.Collaboration.PeerContact> to the local <xref:System.Net.PeerToPeer.Collaboration.ContactManager>:</span></span>  
  
 [!code-csharp[NCLPNRPContacts#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPContacts/CS/NCLPNRPContacts.cs#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContact(System.Net.PeerToPeer.PeerName)" />
    <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact(System.Net.PeerToPeer.Collaboration.PeerNearMe)" />
    <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.UpdateContact(System.Net.PeerToPeer.Collaboration.PeerContact)" />
  </Docs>
  <Members>
    <Member MemberName="AddContact">
      <MemberSignature Language="C#" Value="public void AddContact (System.Net.PeerToPeer.Collaboration.PeerContact peerContact);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddContact(class System.Net.PeerToPeer.Collaboration.PeerContact peerContact) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.ContactManager.AddContact(System.Net.PeerToPeer.Collaboration.PeerContact)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddContact(System::Net::PeerToPeer::Collaboration::PeerContact ^ peerContact);" />
      <MemberSignature Language="F#" Value="member this.AddContact : System.Net.PeerToPeer.Collaboration.PeerContact -&gt; unit" Usage="contactManager.AddContact peerContact" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerContact" Type="System.Net.PeerToPeer.Collaboration.PeerContact" />
      </Parameters>
      <Docs>
        <param name="peerContact"><span data-ttu-id="c0f67-109">Die <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />-Instanz, die <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="c0f67-109">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> instance to add to <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />.</span></span></param>
        <summary><span data-ttu-id="c0f67-110">Fügt den angegebenen <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> dem <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> des lokalen Peers hinzu.</span><span class="sxs-lookup"><span data-stu-id="c0f67-110">Adds the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> to the <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> of the local peer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0f67-111">Zum Aufrufen dieser Methode ist <xref:System.Security.Permissions.PermissionState> eine <xref:System.Security.Permissions.PermissionState.Unrestricted>von erforderlich.</span><span class="sxs-lookup"><span data-stu-id="c0f67-111">Calling this method requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState.Unrestricted>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0f67-112">Der folgende Beispielcode veranschaulicht, wie ein <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe> -Element aufgezählt und dem lokalen <xref:System.Net.PeerToPeer.Collaboration.PeerContact> <xref:System.Net.PeerToPeer.Collaboration.ContactManager>als hinzugefügt wird:</span><span class="sxs-lookup"><span data-stu-id="c0f67-112">The following example code illustrates how to enumerate a <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe> and add it as a <xref:System.Net.PeerToPeer.Collaboration.PeerContact> to the local <xref:System.Net.PeerToPeer.Collaboration.ContactManager>:</span></span>  
  
 [!code-csharp[NCLPNRPContacts#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPContacts/CS/NCLPNRPContacts.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0f67-113">Der von <paramref name="peerContact" /> angegebene <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> ist bereits vorhanden.</span><span class="sxs-lookup"><span data-stu-id="c0f67-113">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> specified by <paramref name="peerContact" /> already exists.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0f67-114"><paramref name="peerContact" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0f67-114"><paramref name="peerContact" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c0f67-115">Der angegebene <paramref name="peerContact" /> wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="c0f67-115">The specified <paramref name="peerContact" /> has been disposed.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="c0f67-116">–   Der von <paramref name="peerContact" /> angegebene <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> konnte nicht aus dem serialisierten XML-Format wiederhergestellt werden.</span><span class="sxs-lookup"><span data-stu-id="c0f67-116">-   The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> specified by <paramref name="peerContact" /> could not be reconstituted from its serialized XML format.</span></span>  
  
<span data-ttu-id="c0f67-117">–   Der zu erstellenden <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />-Instanz kann der lokale Peer nicht hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="c0f67-117">-   Unable to add the local peer to the <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> instance being constructed.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync(System.Net.PeerToPeer.Collaboration.PeerNearMe,System.Object)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContacts" />
      </Docs>
    </Member>
    <Member MemberName="ApplicationChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; ApplicationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; ApplicationChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.ContactManager.ApplicationChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ApplicationChanged As EventHandler(Of ApplicationChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::ApplicationChangedEventArgs ^&gt; ^ ApplicationChanged;" />
      <MemberSignature Language="F#" Value="member this.ApplicationChanged : EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; " Usage="member this.ApplicationChanged : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0f67-118">Wird immer ausgelöst, wenn eine <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />, die einem <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> im <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> zugeordnet ist, geändert wurde.</span><span class="sxs-lookup"><span data-stu-id="c0f67-118">Raised whenever a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> associated with a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> in the <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0f67-119">Diese Methode gibt nur Anwendungen zurück, die von Kontakten des aufrufenden Peers veröffentlicht wurden.</span><span class="sxs-lookup"><span data-stu-id="c0f67-119">This method only returns applications published by contacts of the calling peer.</span></span>  
  
 <span data-ttu-id="c0f67-120">Bevor dieses Ereignis ausgelöst werden kann, muss der aktuelle Benutzer des Remote Peers die Zusammenarbeits Ereignisse des Remotepeers abonnieren.</span><span class="sxs-lookup"><span data-stu-id="c0f67-120">Before this event can be raised, the current user of the remote peer must subscribe to the collaboration events of the remote peer.</span></span> <span data-ttu-id="c0f67-121">Das Abonnement wird über die <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> -Methode erreicht.</span><span class="sxs-lookup"><span data-stu-id="c0f67-121">Subscription is accomplished via the <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> method.</span></span>  
  
 <span data-ttu-id="c0f67-122">Für dieses Ereignis ist <xref:System.Security.Permissions.PermissionState> eine <xref:System.Security.Permissions.PermissionState.Unrestricted>von erforderlich.</span><span class="sxs-lookup"><span data-stu-id="c0f67-122">This event requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState.Unrestricted>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c0f67-123">Das aufrufende Objekt wurde freigegeben.</span><span class="sxs-lookup"><span data-stu-id="c0f67-123">The calling object has been disposed.</span></span></exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <Member MemberName="CreateContact">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerContact CreateContact (System.Net.PeerToPeer.Collaboration.PeerNearMe peerNearMe);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerContact CreateContact(class System.Net.PeerToPeer.Collaboration.PeerNearMe peerNearMe) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact(System.Net.PeerToPeer.Collaboration.PeerNearMe)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerContact ^ CreateContact(System::Net::PeerToPeer::Collaboration::PeerNearMe ^ peerNearMe);" />
      <MemberSignature Language="F#" Value="member this.CreateContact : System.Net.PeerToPeer.Collaboration.PeerNearMe -&gt; System.Net.PeerToPeer.Collaboration.PeerContact" Usage="contactManager.CreateContact peerNearMe" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerContact</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerNearMe" Type="System.Net.PeerToPeer.Collaboration.PeerNearMe" />
      </Parameters>
      <Docs>
        <param name="peerNearMe"><span data-ttu-id="c0f67-124">Der <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />, der der neuen <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />-Instanz zugeordnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="c0f67-124">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> to associate with the new <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> instance.</span></span></param>
        <summary><span data-ttu-id="c0f67-125">Erstellt eine <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />-Instanz für das angegebene <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="c0f67-125">Creates a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> instance for the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> object.</span></span></summary>
        <returns><span data-ttu-id="c0f67-126">Eine <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />-Instanz für das angegebene <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />.</span><span class="sxs-lookup"><span data-stu-id="c0f67-126">A <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> instance for the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0f67-127">Zum Aufrufen dieser Methode ist <xref:System.Security.Permissions.PermissionState> eine <xref:System.Security.Permissions.PermissionState.Unrestricted>von erforderlich.</span><span class="sxs-lookup"><span data-stu-id="c0f67-127">Calling this method requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState.Unrestricted>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0f67-128"><paramref name="peerNearMe" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0f67-128"><paramref name="peerNearMe" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c0f67-129">Dieses <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />-Objekt wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="c0f67-129">This <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> object has been disposed.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="c0f67-130">–   Der Kontakt-Manager des in <paramref name="peerNearMe" /> übergebenen Remotepeers war nicht erreichbar, oder der Kontakt konnte nicht aus ihm lesen.</span><span class="sxs-lookup"><span data-stu-id="c0f67-130">-   The contact manager of the remote peer passed in <paramref name="peerNearMe" /> could not be reached, or the contact could not be read from it.</span></span>  
  
<span data-ttu-id="c0f67-131">–   Für die in <paramref name="peerNearMe" /> übergebene <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />-Instanz sind keine Endpunkte festgelegt.</span><span class="sxs-lookup"><span data-stu-id="c0f67-131">-   The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> instance passed in <paramref name="peerNearMe" /> has no endpoints set on it.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.AddContact(System.Net.PeerToPeer.Collaboration.PeerContact)" />
      </Docs>
    </Member>
    <Member MemberName="CreateContactAsync">
      <MemberSignature Language="C#" Value="public void CreateContactAsync (System.Net.PeerToPeer.Collaboration.PeerNearMe peerNearMe, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateContactAsync(class System.Net.PeerToPeer.Collaboration.PeerNearMe peerNearMe, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync(System.Net.PeerToPeer.Collaboration.PeerNearMe,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateContactAsync(System::Net::PeerToPeer::Collaboration::PeerNearMe ^ peerNearMe, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.CreateContactAsync : System.Net.PeerToPeer.Collaboration.PeerNearMe * obj -&gt; unit" Usage="contactManager.CreateContactAsync (peerNearMe, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerNearMe" Type="System.Net.PeerToPeer.Collaboration.PeerNearMe" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerNearMe"><span data-ttu-id="c0f67-132">Der <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />, der der neuen <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />-Instanz zugeordnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="c0f67-132">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> to associate with the new <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> instance.</span></span></param>
        <param name="userToken"><span data-ttu-id="c0f67-133">Ein benutzerdefiniertes <see cref="T:System.Object" />, das Informationen über den <see cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync(System.Net.PeerToPeer.Collaboration.PeerNearMe,System.Object)" />-Vorgang enthält.</span><span class="sxs-lookup"><span data-stu-id="c0f67-133">A user-defined <see cref="T:System.Object" /> that contains information about the <see cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync(System.Net.PeerToPeer.Collaboration.PeerNearMe,System.Object)" /> operation.</span></span> <span data-ttu-id="c0f67-134">Es wird zur Identifizierung dem Rückruf des asynchronen Vorgangs übergeben.</span><span class="sxs-lookup"><span data-stu-id="c0f67-134">It will be passed to the callback of the asynchronous operation for identification.</span></span></param>
        <summary><span data-ttu-id="c0f67-135">Erstellt eine Kontaktinstanz für das angegebene <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="c0f67-135">Creates a contact instance for the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0f67-136">Zum Aufrufen dieser Methode ist <xref:System.Security.Permissions.PermissionState> eine <xref:System.Security.Permissions.PermissionState.Unrestricted>von erforderlich.</span><span class="sxs-lookup"><span data-stu-id="c0f67-136">Calling this method requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState.Unrestricted>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0f67-137"><paramref name="userToken" /> ist bereits vorhanden und wird verwendet.</span><span class="sxs-lookup"><span data-stu-id="c0f67-137"><paramref name="userToken" /> already exists and is in use.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0f67-138"><paramref name="peerNearMe" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0f67-138"><paramref name="peerNearMe" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c0f67-139">Das <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />-Objekt wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="c0f67-139">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> object has been disposed.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="c0f67-140">–   Für die angegebene <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />-Instanz sind keine Endpunkte festgelegt.</span><span class="sxs-lookup"><span data-stu-id="c0f67-140">-   The specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> instance has no endpoints set on it.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.AddContact(System.Net.PeerToPeer.Collaboration.PeerContact)" />
      </Docs>
    </Member>
    <Member MemberName="CreateContactCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.CreateContactCompletedEventArgs&gt; CreateContactCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.CreateContactCompletedEventArgs&gt; CreateContactCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CreateContactCompleted As EventHandler(Of CreateContactCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::CreateContactCompletedEventArgs ^&gt; ^ CreateContactCompleted;" />
      <MemberSignature Language="F#" Value="member this.CreateContactCompleted : EventHandler&lt;System.Net.PeerToPeer.Collaboration.CreateContactCompletedEventArgs&gt; " Usage="member this.CreateContactCompleted : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.CreateContactCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.CreateContactCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0f67-141">Wird immer ausgelöst, wenn eine <see cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact(System.Net.PeerToPeer.Collaboration.PeerNearMe)" />-Methode abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="c0f67-141">Raised whenever a <see cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact(System.Net.PeerToPeer.Collaboration.PeerNearMe)" /> method has completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0f67-142">Dieses Ereignis wird ausgelöst, wenn <xref:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync%2A> die-Methode abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="c0f67-142">This event is raised when the <xref:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync%2A> method has completed.</span></span> <span data-ttu-id="c0f67-143">Sie wird auch ausgelöst, wenn <xref:System.Net.PeerToPeer.Collaboration.ContactManager> der Vorgang mit einem Fehler abgeschlossen oder abgebrochen wird.</span><span class="sxs-lookup"><span data-stu-id="c0f67-143">It is also raised if the <xref:System.Net.PeerToPeer.Collaboration.ContactManager> operation completes in error or is cancelled.</span></span>  
  
 <span data-ttu-id="c0f67-144">Für dieses Ereignis ist <xref:System.Security.Permissions.PermissionState> eine <xref:System.Security.Permissions.PermissionState.Unrestricted>von erforderlich.</span><span class="sxs-lookup"><span data-stu-id="c0f67-144">This event requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState.Unrestricted>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c0f67-145">Das aufrufende Objekt wurde freigegeben.</span><span class="sxs-lookup"><span data-stu-id="c0f67-145">The calling object has been disposed.</span></span></exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.CreateContactCompletedEventArgs" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContact(System.Net.PeerToPeer.PeerName)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteContact">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c0f67-146">Entfernt einen <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> oder einen <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> aus dem <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> des lokalen Peers.</span><span class="sxs-lookup"><span data-stu-id="c0f67-146">Removes a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> or <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> from the <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> of the local peer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteContact">
      <MemberSignature Language="C#" Value="public void DeleteContact (System.Net.PeerToPeer.Collaboration.PeerContact peerContact);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteContact(class System.Net.PeerToPeer.Collaboration.PeerContact peerContact) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact(System.Net.PeerToPeer.Collaboration.PeerContact)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteContact(System::Net::PeerToPeer::Collaboration::PeerContact ^ peerContact);" />
      <MemberSignature Language="F#" Value="member this.DeleteContact : System.Net.PeerToPeer.Collaboration.PeerContact -&gt; unit" Usage="contactManager.DeleteContact peerContact" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerContact" Type="System.Net.PeerToPeer.Collaboration.PeerContact" />
      </Parameters>
      <Docs>
        <param name="peerContact"><span data-ttu-id="c0f67-147">Der <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />, der aus der <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> entfernt werden soll.</span><span class="sxs-lookup"><span data-stu-id="c0f67-147">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> to remove from the <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />.</span></span></param>
        <summary><span data-ttu-id="c0f67-148">Entfernt den angegebenen <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> aus dem <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> des lokalen Peers.</span><span class="sxs-lookup"><span data-stu-id="c0f67-148">Removes the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> from the <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> of the local peer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0f67-149">Zum Aufrufen dieser Methode ist <xref:System.Security.Permissions.PermissionState> eine <xref:System.Security.Permissions.PermissionState.Unrestricted>von erforderlich.</span><span class="sxs-lookup"><span data-stu-id="c0f67-149">Calling this method requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState.Unrestricted>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0f67-150">Im folgenden Codebeispiel wird veranschaulicht, wie ein <xref:System.Net.PeerToPeer.Collaboration.PeerContact> aus dem lokalen <xref:System.Net.PeerToPeer.Collaboration.ContactManager>gelöscht wird:</span><span class="sxs-lookup"><span data-stu-id="c0f67-150">The following code example illustrates how to delete a <xref:System.Net.PeerToPeer.Collaboration.PeerContact> from the local <xref:System.Net.PeerToPeer.Collaboration.ContactManager>:</span></span>  
  
 [!code-csharp[NCLPNRPContacts#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPContacts/CS/NCLPNRPContacts.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0f67-151"><paramref name="peerContact" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0f67-151"><paramref name="peerContact" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContact(System.Net.PeerToPeer.PeerName)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteContact">
      <MemberSignature Language="C#" Value="public void DeleteContact (System.Net.PeerToPeer.PeerName peerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteContact(class System.Net.PeerToPeer.PeerName peerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact(System.Net.PeerToPeer.PeerName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteContact(System::Net::PeerToPeer::PeerName ^ peerName);" />
      <MemberSignature Language="F#" Value="member this.DeleteContact : System.Net.PeerToPeer.PeerName -&gt; unit" Usage="contactManager.DeleteContact peerName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
      </Parameters>
      <Docs>
        <param name="peerName"><span data-ttu-id="c0f67-152">Der <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />, der dem <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> zugeordnet ist, der aus dem <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> entfernt werden soll.</span><span class="sxs-lookup"><span data-stu-id="c0f67-152">The <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> to remove from the <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />.</span></span></param>
        <summary><span data-ttu-id="c0f67-153">Entfernt den <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />, der dem angegebenen <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> aus dem <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> des lokalen Peers zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="c0f67-153">Removes the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> associated with the specified <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> from the <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> of the local peer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0f67-154">Zum Aufrufen dieser Methode ist <xref:System.Security.Permissions.PermissionState> eine <xref:System.Security.Permissions.PermissionState.Unrestricted>von erforderlich.</span><span class="sxs-lookup"><span data-stu-id="c0f67-154">Calling this method requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState.Unrestricted>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0f67-155">Im folgenden Codebeispiel wird veranschaulicht, wie ein <xref:System.Net.PeerToPeer.Collaboration.PeerContact> aus dem lokalen <xref:System.Net.PeerToPeer.Collaboration.ContactManager>gelöscht wird:</span><span class="sxs-lookup"><span data-stu-id="c0f67-155">The following code example illustrates how to delete a <xref:System.Net.PeerToPeer.Collaboration.PeerContact> from the local <xref:System.Net.PeerToPeer.Collaboration.ContactManager>:</span></span>  
  
 [!code-csharp[NCLPNRPContacts#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPContacts/CS/NCLPNRPContacts.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0f67-156">Der <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />, der dem <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> zugeordnet ist, wurde im Contact Manager nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="c0f67-156">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> associated with <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> could not be found in the contact manager.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0f67-157"><paramref name="peerName" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0f67-157"><paramref name="peerName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c0f67-158">Dieses Objekt wurde zuvor von <see cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.Dispose" /> aufgerufen und kann nicht für zukünftige Vorgänge verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="c0f67-158">This object has had <see cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.Dispose" /> previously called on it and cannot be used for future operations.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="c0f67-159"><see cref="Overload:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact" /> -Vorgang kann nicht abgeschlossen werden.</span><span class="sxs-lookup"><span data-stu-id="c0f67-159">Unable to complete <see cref="Overload:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact" /> operation.</span></span></exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.ContactManager.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="contactManager.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c0f67-160">Gibt alle vom <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />-Objekt verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="c0f67-160">Releases all resources used by the <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContact">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerContact GetContact (System.Net.PeerToPeer.PeerName peerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerContact GetContact(class System.Net.PeerToPeer.PeerName peerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContact(System.Net.PeerToPeer.PeerName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerContact ^ GetContact(System::Net::PeerToPeer::PeerName ^ peerName);" />
      <MemberSignature Language="F#" Value="member this.GetContact : System.Net.PeerToPeer.PeerName -&gt; System.Net.PeerToPeer.Collaboration.PeerContact" Usage="contactManager.GetContact peerName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerContact</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
      </Parameters>
      <Docs>
        <param name="peerName"><span data-ttu-id="c0f67-161">Der <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />, der dem abzurufenden <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="c0f67-161">The <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> to be retrieved.</span></span></param>
        <summary><span data-ttu-id="c0f67-162">Gibt das <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />-Objekt für den angegebenen <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="c0f67-162">Returns the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object for the specified <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />.</span></span></summary>
        <returns><span data-ttu-id="c0f67-163">Der dem bereitgestellten <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> zugeordnete <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />.</span><span class="sxs-lookup"><span data-stu-id="c0f67-163"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> associated with the supplied <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0f67-164">Zum Aufrufen dieser Methode ist <xref:System.Security.Permissions.PermissionState> eine <xref:System.Security.Permissions.PermissionState.Unrestricted>von erforderlich.</span><span class="sxs-lookup"><span data-stu-id="c0f67-164">Calling this method requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState.Unrestricted>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0f67-165"><paramref name="peerName" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0f67-165"><paramref name="peerName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c0f67-166">Dieses <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />-Objekt wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="c0f67-166">This <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> object has been disposed.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="c0f67-167">–   Der Kontakt wurde im <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="c0f67-167">-   Contact not found in <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />.</span></span>  
  
<span data-ttu-id="c0f67-168">–   Der Kontakt für den angegebenen <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> kann nicht abgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="c0f67-168">-   Unable to obtain the contact for the supplied <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact(System.Net.PeerToPeer.Collaboration.PeerNearMe)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContacts" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.UpdateContact(System.Net.PeerToPeer.Collaboration.PeerContact)" />
      </Docs>
    </Member>
    <Member MemberName="GetContacts">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerContactCollection GetContacts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerContactCollection GetContacts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContacts" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContacts () As PeerContactCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerContactCollection ^ GetContacts();" />
      <MemberSignature Language="F#" Value="member this.GetContacts : unit -&gt; System.Net.PeerToPeer.Collaboration.PeerContactCollection" Usage="contactManager.GetContacts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerContactCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c0f67-169">Gibt eine <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" /> zurück, die alle Kontakte im <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> des Remotepeers enthält.</span><span class="sxs-lookup"><span data-stu-id="c0f67-169">Returns a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" /> that contains all contacts within the <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> of the remote peer.</span></span></summary>
        <returns><span data-ttu-id="c0f67-170">Eine <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" />, die alle Kontakte im <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> des Remotepeers enthält.</span><span class="sxs-lookup"><span data-stu-id="c0f67-170"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" /> that contains all contacts within the <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> of the remote peer.</span></span>  
  
<span data-ttu-id="c0f67-171">Wenn der Kontakt-Manager leer ist, wird eine Auflistung der Größe 0 (null) zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="c0f67-171">If the contact manager is empty, then a collection of size zero (0) is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0f67-172">Zum Aufrufen dieser Methode ist <xref:System.Security.Permissions.PermissionState> eine <xref:System.Security.Permissions.PermissionState.Unrestricted>von erforderlich.</span><span class="sxs-lookup"><span data-stu-id="c0f67-172">Calling this method requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState.Unrestricted>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0f67-173">Im folgenden Codebeispiel wird veranschaulicht, wie eine <xref:System.Net.PeerToPeer.Collaboration.PeerContactCollection> abgerufen wird, die die in der <xref:System.Net.PeerToPeer.Collaboration.ContactManager>lokalen Umgebung enthaltenen Kontakte darstellt:</span><span class="sxs-lookup"><span data-stu-id="c0f67-173">The following code example illustrates how to retrieve a <xref:System.Net.PeerToPeer.Collaboration.PeerContactCollection> representing the contacts contained in the local <xref:System.Net.PeerToPeer.Collaboration.ContactManager>:</span></span>  
  
 [!code-csharp[NCLPNRPContacts#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPContacts/CS/NCLPNRPContacts.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c0f67-174">Dieses <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />-Objekt wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="c0f67-174">This <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> object has been disposed.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="c0f67-175">Beim Versuch dieser Methode, einen <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> in dieser Peerkontaktauflistung aufzulisten, wurde ein ungültiger Wert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="c0f67-175">An invalid value was returned when this method attempted to enumerate a <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> in this peer contact collection.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact(System.Net.PeerToPeer.Collaboration.PeerNearMe)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync(System.Net.PeerToPeer.Collaboration.PeerNearMe,System.Object)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.UpdateContact(System.Net.PeerToPeer.Collaboration.PeerContact)" />
      </Docs>
    </Member>
    <Member MemberName="LocalContact">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.Collaboration.PeerContact LocalContact { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.PeerToPeer.Collaboration.PeerContact LocalContact" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.ContactManager.LocalContact" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property LocalContact As PeerContact" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::PeerToPeer::Collaboration::PeerContact ^ LocalContact { System::Net::PeerToPeer::Collaboration::PeerContact ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalContact : System.Net.PeerToPeer.Collaboration.PeerContact" Usage="System.Net.PeerToPeer.Collaboration.ContactManager.LocalContact" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerContact</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0f67-176">Ruft den <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> ab, der den lokalen Peer darstellt.</span><span class="sxs-lookup"><span data-stu-id="c0f67-176">Gets the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> representing the local peer.</span></span></summary>
        <value><span data-ttu-id="c0f67-177">Die <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />-Instanz, die den lokalen Peer darstellt.</span><span class="sxs-lookup"><span data-stu-id="c0f67-177">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> instance representing the local peer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0f67-178">Sofern nicht angegeben, ist der Standardwert für diese Eigenschaft `null`.</span><span class="sxs-lookup"><span data-stu-id="c0f67-178">Unless specified, the default value for this property is `null`.</span></span>  
  
 <span data-ttu-id="c0f67-179">Für die Verwendung dieser Eigenschaft <xref:System.Security.Permissions.PermissionState> ist <xref:System.Security.Permissions.PermissionState.Unrestricted>eine von erforderlich.</span><span class="sxs-lookup"><span data-stu-id="c0f67-179">Using this property requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState.Unrestricted>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContacts" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.UpdateContact(System.Net.PeerToPeer.Collaboration.PeerContact)" />
      </Docs>
    </Member>
    <Member MemberName="NameChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.NameChangedEventArgs&gt; NameChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.NameChangedEventArgs&gt; NameChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.ContactManager.NameChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NameChanged As EventHandler(Of NameChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::NameChangedEventArgs ^&gt; ^ NameChanged;" />
      <MemberSignature Language="F#" Value="member this.NameChanged : EventHandler&lt;System.Net.PeerToPeer.Collaboration.NameChangedEventArgs&gt; " Usage="member this.NameChanged : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.NameChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.NameChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0f67-180">Wird immer ausgelöst, wenn der <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />, der einem <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> im <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> zugeordnet ist, geändert wurde.</span><span class="sxs-lookup"><span data-stu-id="c0f67-180">Raised whenever the <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> associated with a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> in the <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0f67-181">Der zugehörige Rückruf stellt einen Verweis auf den <xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A>neuen bereit.</span><span class="sxs-lookup"><span data-stu-id="c0f67-181">The associated callback provides a reference to the new <xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A>.</span></span>  
  
 <span data-ttu-id="c0f67-182">Für dieses Ereignis ist <xref:System.Security.Permissions.PermissionState> eine <xref:System.Security.Permissions.PermissionState.Unrestricted>von erforderlich.</span><span class="sxs-lookup"><span data-stu-id="c0f67-182">This event requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState.Unrestricted>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c0f67-183">Das aufrufende Objekt wurde freigegeben.</span><span class="sxs-lookup"><span data-stu-id="c0f67-183">The calling object has been disposed.</span></span></exception>
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalNameChanged" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.OnNameChanged(System.Net.PeerToPeer.Collaboration.NameChangedEventArgs)" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
      </Docs>
    </Member>
    <Member MemberName="ObjectChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; ObjectChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; ObjectChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.ContactManager.ObjectChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectChanged As EventHandler(Of ObjectChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::ObjectChangedEventArgs ^&gt; ^ ObjectChanged;" />
      <MemberSignature Language="F#" Value="member this.ObjectChanged : EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; " Usage="member this.ObjectChanged : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0f67-184">Wird immer ausgelöst, wenn ein Objekt in registrierten <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />-Objekten eines Kontakts geändert wurde.</span><span class="sxs-lookup"><span data-stu-id="c0f67-184">Raised whenever an object within a contact's registered <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> objects has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0f67-185">Bevor dieses Ereignis ausgelöst werden kann, muss der aktuelle Benutzer des Remote Peers die Zusammenarbeits Ereignisse des Hostpeers abonnieren.</span><span class="sxs-lookup"><span data-stu-id="c0f67-185">Before this event can be raised, the current user of the remote peer must subscribe to the collaboration events of the host peer.</span></span> <span data-ttu-id="c0f67-186">Das Abonnement wird über die Peer Contact <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> -Methoden durchgeführt.</span><span class="sxs-lookup"><span data-stu-id="c0f67-186">Subscription is accomplished via the PeerContact <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> methods.</span></span>  
  
 <span data-ttu-id="c0f67-187">Für dieses Ereignis ist <xref:System.Security.Permissions.PermissionState> eine <xref:System.Security.Permissions.PermissionState.Unrestricted>von erforderlich.</span><span class="sxs-lookup"><span data-stu-id="c0f67-187">This event requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState.Unrestricted>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c0f67-188">Das <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />-Objekt wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="c0f67-188">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> object has been disposed.</span></span></exception>
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.ObjectChanged" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PresenceChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; PresenceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; PresenceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.ContactManager.PresenceChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PresenceChanged As EventHandler(Of PresenceChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::PresenceChangedEventArgs ^&gt; ^ PresenceChanged;" />
      <MemberSignature Language="F#" Value="member this.PresenceChanged : EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; " Usage="member this.PresenceChanged : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0f67-189">Wird immer ausgelöst, wenn der Anwesenheitsstatus eines <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> im <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> geändert wurde.</span><span class="sxs-lookup"><span data-stu-id="c0f67-189">Raised whenever the presence status of a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> in the <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0f67-190">Bevor dieses Ereignis ausgelöst werden kann, muss der aktuelle Benutzer des Remote Peers die Zusammenarbeits Ereignisse des Hostpeers abonnieren.</span><span class="sxs-lookup"><span data-stu-id="c0f67-190">Before this event can be raised, the current user of the remote peer must subscribe to the collaboration events of the host peer.</span></span> <span data-ttu-id="c0f67-191">Das Abonnement wird über die <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> -Methode erreicht.</span><span class="sxs-lookup"><span data-stu-id="c0f67-191">Subscription is accomplished via the <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> method.</span></span>  
  
 <span data-ttu-id="c0f67-192">Für dieses Ereignis ist <xref:System.Security.Permissions.PermissionState> eine <xref:System.Security.Permissions.PermissionState.Unrestricted>von erforderlich.</span><span class="sxs-lookup"><span data-stu-id="c0f67-192">This event requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState.Unrestricted>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c0f67-193">Das <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />-Objekt wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="c0f67-193">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object has been disposed.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo(System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SubscriptionListChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs&gt; SubscriptionListChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs&gt; SubscriptionListChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.ContactManager.SubscriptionListChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SubscriptionListChanged As EventHandler(Of SubscriptionListChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::SubscriptionListChangedEventArgs ^&gt; ^ SubscriptionListChanged;" />
      <MemberSignature Language="F#" Value="member this.SubscriptionListChanged : EventHandler&lt;System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs&gt; " Usage="member this.SubscriptionListChanged : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0f67-194">Wird ausgelöst, wenn die Liste abonnierter Kontakte geändert wird.</span><span class="sxs-lookup"><span data-stu-id="c0f67-194">Raised when the list of subscribed contacts changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0f67-195">Da Abonnements pro Benutzer und nicht pro Prozess oder pro Anwendungsdomäne ausgeführt werden, kann eine andere Anwendung, die auf dem Host ausgeführt wird, auch bewirken, dass dieses Ereignis ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="c0f67-195">Since subscriptions are per user and not per process or per application domain, another application running on the host may also cause this event to be raised.</span></span>  
  
 <span data-ttu-id="c0f67-196">Für dieses Ereignis ist <xref:System.Security.Permissions.PermissionState> eine <xref:System.Security.Permissions.PermissionState.Unrestricted>von erforderlich.</span><span class="sxs-lookup"><span data-stu-id="c0f67-196">This event requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState.Unrestricted>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c0f67-197">Das Objekt wurde freigegeben.</span><span class="sxs-lookup"><span data-stu-id="c0f67-197">The object has been disposed.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Unsubscribe" />
      </Docs>
    </Member>
    <Member MemberName="SynchronizingObject">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ISynchronizeInvoke SynchronizingObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISynchronizeInvoke SynchronizingObject" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.ContactManager.SynchronizingObject" />
      <MemberSignature Language="VB.NET" Value="Public Property SynchronizingObject As ISynchronizeInvoke" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::ISynchronizeInvoke ^ SynchronizingObject { System::ComponentModel::ISynchronizeInvoke ^ get(); void set(System::ComponentModel::ISynchronizeInvoke ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SynchronizingObject : System.ComponentModel.ISynchronizeInvoke with get, set" Usage="System.Net.PeerToPeer.Collaboration.ContactManager.SynchronizingObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Description("SynchronizingObject")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISynchronizeInvoke</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0f67-198">Wenn dieser Eigenschaftswert festgelegt ist, werden für alle Ereignisse, die nicht aufgrund eines asynchronen Vorgangs ausgelöst werden, die zugeordneten Ereignishandler in dem Thread aufgerufen, in dem das spezifische <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.SynchronizingObject" /> erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="c0f67-198">When this property value is set, all events not fired as the result of an asynchronous operation will have the associated event handlers called back on the thread that created the specific <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.SynchronizingObject" />.</span></span></summary>
        <value><span data-ttu-id="c0f67-199">Ein Objekt, das die <see cref="T:System.ComponentModel.ISynchronizeInvoke" />-Schnittstelle implementiert und von Instanzen dieses Typs für die Ereignishandlersynchronisierung in dem Thread verwendet wird, in dem es erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="c0f67-199">Object that implements the <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> interface and is used by instances of this type for event handler synchronization on the thread that created it.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0f67-200">Der Standardwert für diese Eigenschaft ist `null`, der angibt, dass alle Ereignishandler in einem Thread Pool Thread des Systems aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="c0f67-200">The default set value for this property is `null`, indicating that all event handlers are called on a system thread pool thread.</span></span>  
  
 <span data-ttu-id="c0f67-201">Diese Eigenschaft ist in der Regel auf ein Benutzeroberflächen Element wie <xref:System.Windows.Forms.Form> eine-Instanz festgelegt.</span><span class="sxs-lookup"><span data-stu-id="c0f67-201">This property is typically set to a UI element such as a <xref:System.Windows.Forms.Form> instance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c0f67-202">Das aufrufende Objekt wurde freigegeben.</span><span class="sxs-lookup"><span data-stu-id="c0f67-202">The calling object has been disposed.</span></span></exception>
        <altmember cref="N:System.Windows.Forms" />
      </Docs>
    </Member>
    <Member MemberName="UpdateContact">
      <MemberSignature Language="C#" Value="public void UpdateContact (System.Net.PeerToPeer.Collaboration.PeerContact peerContact);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateContact(class System.Net.PeerToPeer.Collaboration.PeerContact peerContact) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.ContactManager.UpdateContact(System.Net.PeerToPeer.Collaboration.PeerContact)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateContact(System::Net::PeerToPeer::Collaboration::PeerContact ^ peerContact);" />
      <MemberSignature Language="F#" Value="member this.UpdateContact : System.Net.PeerToPeer.Collaboration.PeerContact -&gt; unit" Usage="contactManager.UpdateContact peerContact" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerContact" Type="System.Net.PeerToPeer.Collaboration.PeerContact" />
      </Parameters>
      <Docs>
        <param name="peerContact"><span data-ttu-id="c0f67-203">Der <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> muss aktualisiert werden.</span><span class="sxs-lookup"><span data-stu-id="c0f67-203">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> to be updated.</span></span></param>
        <summary><span data-ttu-id="c0f67-204">Aktualisiert die dem <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> zugeordneten Daten.</span><span class="sxs-lookup"><span data-stu-id="c0f67-204">Updates the data associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0f67-205">Zum Aufrufen dieser Methode ist <xref:System.Security.Permissions.PermissionState> eine <xref:System.Security.Permissions.PermissionState.Unrestricted>von erforderlich.</span><span class="sxs-lookup"><span data-stu-id="c0f67-205">Calling this method requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState.Unrestricted>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0f67-206">-   <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> wurde im <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="c0f67-206">-   <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> not found in <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0f67-207"><paramref name="peerContact" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0f67-207"><paramref name="peerContact" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c0f67-208">Dieses <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />-Objekt wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="c0f67-208">This <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object has been disposed.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="c0f67-209"><see cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.UpdateContact(System.Net.PeerToPeer.Collaboration.PeerContact)" />-Vorgang kann nicht abgeschlossen werden.</span><span class="sxs-lookup"><span data-stu-id="c0f67-209">Unable to complete <see cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.UpdateContact(System.Net.PeerToPeer.Collaboration.PeerContact)" /> operation.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.AddContact(System.Net.PeerToPeer.Collaboration.PeerContact)" />
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.Dispose" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContact(System.Net.PeerToPeer.PeerName)" />
      </Docs>
    </Member>
  </Members>
</Type>
