<Type Name="PeerCollaboration" FullName="System.Net.PeerToPeer.Collaboration.PeerCollaboration">
  <Metadata><Meta Name="ms.openlocfilehash" Value="52b467c64553a3e3a4978d44948baab52941e0d5" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70645382" /></Metadata><TypeSignature Language="C#" Value="public static class PeerCollaboration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit PeerCollaboration extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" />
  <TypeSignature Language="VB.NET" Value="Public Class PeerCollaboration" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerCollaboration abstract sealed" />
  <TypeSignature Language="F#" Value="type PeerCollaboration = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Interagiert mit der Peerzusammenarbeitsinfrastruktur. Viele der wichtigsten Zusammenarbeitsszenarios beginnen mit dieser Klasse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei dieser Klasse handelt es sich um eine statische Klasse, die versiegelt und abstrakt ist und keinen öffentlichen Konstruktor hat. Es wird verwendet, um Anwendungs-, Objekt-und Anwesenheits Informationen für Peers zu enthalten und zu verwalten, die Einladungen für eine Zusammenarbeits Sitzung akzeptiert haben. In Bezug auf Peers, Objekte und Anwendungen bietet die PeerCollaboration-Klasse drei Accessoren, eine für jede Auflistung, als Schnittstelle oder konnektivitätspunkt für andere Vorgänge, die auf dem Computer ausgeführt werden.  Diese Klasse kann nicht geerbt werden. ein Kompilierzeitfehler tritt auf, wenn diese versiegelte Klasse als Basisklasse angegeben wird.  
  
 Methoden und Eigenschaften in dieser Klasse können für Folgendes verwendet werden:  
  
-   Starten und Verwalten von Kollaborations Anwendungen  
  
-   Registrieren und Löschen von Anwendungen und Kollaborations Objekten (z. b. Zertifikate, Bilder, Avatare und Textbeschreibungen)  
  
-   Einladen von Peers zu Zusammenarbeits Sitzungen, einschließlich Elementen wie Bereich und Objekten, die diese über das Internet identifizieren  
  
-   Peers <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A> und <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignOut%2A>  die Infrastruktur für die Zusammenarbeit zulassen, Listen von Kontakten verwalten oder Ihre Anwesenheit untereinander veröffentlichen  
  
-   Verwenden <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SynchronizingObject%2A> Sie Eigenschaften und Ereignisse, um die asynchrone Anwendungs Kommunikation zu koordinieren, insbesondere für Änderungen an Name, Anwesenheits, Anwendung oder anderen Objekten.  
  
 "Link-Local Cloud", "Subnet of the Call Peer" und "NearMe Scope" sind Synonym Begriffe. "Internet Bereich" und "Server lose Anwesenheit" sind synonym. Die Site-Local <xref:System.Net.PeerToPeer.PnrpScope> hat im Namespace für die Zusammenarbeit kein Äquivalent.  
  
 Die Verwendung jeder Methode oder Eigenschaft in dieser Klasse erfordert ein <xref:System.Security.Permissions.PermissionState> von. <xref:System.Security.Permissions.PermissionState.Unrestricted> Dieser Status wird beim Beginn der Peer Zusammenarbeits Sitzung erstellt.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ApplicationLaunchInfo">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo ApplicationLaunchInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo ApplicationLaunchInfo" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.ApplicationLaunchInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ApplicationLaunchInfo As PeerApplicationLaunchInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::PeerToPeer::Collaboration::PeerApplicationLaunchInfo ^ ApplicationLaunchInfo { System::Net::PeerToPeer::Collaboration::PeerApplicationLaunchInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationLaunchInfo : System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" Usage="System.Net.PeerToPeer.Collaboration.PeerCollaboration.ApplicationLaunchInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" />-Objekt ab, das Informationen enthält, die benötigt werden, wenn eine Anwendung aufgrund einer Zusammenarbeitsanforderung von einem Remotepeer gestartet wird.</summary>
        <value>Wenn die Anwendung aufgrund einer Einladung gestartet wurde, wird ein <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" />-Objekt zurückgegeben, das Informationen über den Peer, der die Anwendungseinladung gesendet hat, und die Einladung selbst enthält. Andernfalls wird <see langword="null" /> zurückgegeben.  Der Standardwert für diese Eigenschaft ist <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft soll von einer <xref:System.Net.PeerToPeer.Collaboration.PeerApplication> Zusammenarbeits fähigen Instanz verwendet werden, nachdem Sie gestartet wurde, um zu bestimmen, ob Sie aufgrund einer Zusammenarbeits Anforderung von einem Remotepeer gestartet wurde.  Die aufrufende Anwendung sollte die <xref:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo.Data%2A> - <xref:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo.Message%2A> Eigenschaft und die-Eigenschaft überprüfen, um weitere Informationen zur Einladungs Anforderung zu erhalten.  
  
 Für den Zugriff auf diese Eigenschaft <xref:System.Security.Permissions.PermissionState> ist <xref:System.Security.Permissions.PermissionState.Unrestricted>eine von erforderlich. Dieser Status wird beim Beginn der <xref:System.Net.PeerToPeer.Collaboration.Peer> Zusammenarbeits Sitzung erstellt.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalApplicationChanged" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
      </Docs>
    </Member>
    <Member MemberName="ContactManager">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.Collaboration.ContactManager ContactManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.PeerToPeer.Collaboration.ContactManager ContactManager" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.ContactManager" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ContactManager As ContactManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::PeerToPeer::Collaboration::ContactManager ^ ContactManager { System::Net::PeerToPeer::Collaboration::ContactManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContactManager : System.Net.PeerToPeer.Collaboration.ContactManager" Usage="System.Net.PeerToPeer.Collaboration.PeerCollaboration.ContactManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.ContactManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den permanenten Speicher ab, der alle <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />-Objekte für Remotepeers enthält.</summary>
        <value>Ein <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />-Objekt, das alle Peerkontaktobjekte für Remotepeers enthält. Der Standardwert für diese Eigenschaft ist <see langword="null" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />
      </Docs>
    </Member>
    <Member MemberName="DeleteObject">
      <MemberSignature Language="C#" Value="public static void DeleteObject (System.Net.PeerToPeer.Collaboration.PeerObject peerObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteObject(class System.Net.PeerToPeer.Collaboration.PeerObject peerObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.DeleteObject(System.Net.PeerToPeer.Collaboration.PeerObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeleteObject(System::Net::PeerToPeer::Collaboration::PeerObject ^ peerObject);" />
      <MemberSignature Language="F#" Value="static member DeleteObject : System.Net.PeerToPeer.Collaboration.PeerObject -&gt; unit" Usage="System.Net.PeerToPeer.Collaboration.PeerCollaboration.DeleteObject peerObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerObject" Type="System.Net.PeerToPeer.Collaboration.PeerObject" />
      </Parameters>
      <Docs>
        <param name="peerObject">Der <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />, dessen Registrierung aufgehoben werden soll.</param>
        <summary>Hebt die Registrierung für <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> auf, der dem aufrufenden Peer zugeordnet ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Peer Objekte werden automatisch von der Peer Zusammenarbeits Infrastruktur abgemeldet (entfernt), wenn ein Verweis auf das Objekt nicht mehr gültig ist.  Wenn ein Aufrufer keinen Verweis auf das Objekt verwaltet, wird die Registrierung bei der Peer Zusammenarbeits Infrastruktur aufgehoben.  Alternativ kann die Registrierung eines Objekts mithilfe dieser Methode manuell aufgehoben werden.  
  
 Zum Aufrufen dieser Methode ist <xref:System.Security.Permissions.PermissionState> eine <xref:System.Security.Permissions.PermissionState.Unrestricted>von erforderlich. Dieser Status wird beim Beginn der <xref:System.Net.PeerToPeer.Collaboration.Peer> Zusammenarbeits Sitzung erstellt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="peerObject" />-Parameter darf nicht <see langword="null" /> sein.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.DeleteObject(System.Net.PeerToPeer.Collaboration.PeerObject)" />-Vorgang kann nicht abgeschlossen werden.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.UnregisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetLocalRegisteredApplications">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft eine Auflistung von <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />-Objekten ab, die auf dem lokalen Computer registriert sind.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Aufrufer muss sich über die <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A> -Methode oder vor der Verwendung dieser Methode bei der Peer Kollaborations Infrastruktur anmelden.  
  
 Für den Zugriff auf diese Eigenschaft <xref:System.Security.Permissions.PermissionState> ist <xref:System.Security.Permissions.PermissionState.Unrestricted>eine von erforderlich. Dieser Status wird beim Beginn der <xref:System.Net.PeerToPeer.Collaboration.Peer> Zusammenarbeits Sitzung erstellt.  
  
   
  
## Examples  
 Der folgende Beispielcode veranschaulicht, wie Sie eine Auflistung von Anwendungen abrufen, die bei der Zusammenarbeits Infrastruktur registriert sind:  
  
 [!code-csharp[NCLPNRPContacts#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPContacts/CS/NCLPNRPContacts.cs#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetPeersNearMe" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetLocalRegisteredApplications">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetLocalRegisteredApplications ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetLocalRegisteredApplications() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLocalRegisteredApplications () As PeerApplicationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::PeerToPeer::Collaboration::PeerApplicationCollection ^ GetLocalRegisteredApplications();" />
      <MemberSignature Language="F#" Value="static member GetLocalRegisteredApplications : unit -&gt; System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" Usage="System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerApplicationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft alle <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />-Objekte ab, die auf dem lokalen Computer registriert sind.</summary>
        <returns>Eine <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> mit allen Anwendungen, die auf dem lokalen Computer registriert sind. Wenn eine Anwendung nicht gefunden wurde, wird eine Auflistung der Größe 0 (null) zurückgegeben.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vor der Verwendung dieser Methode muss sich der Aufrufer über die <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A> -Methode bei der Peer Kollaborations Infrastruktur anmelden.  
  
 Für den Zugriff auf diese Eigenschaft <xref:System.Security.Permissions.PermissionState> ist <xref:System.Security.Permissions.PermissionState.Unrestricted>eine von erforderlich. Dieser Status wird beim Beginn der <xref:System.Net.PeerToPeer.Collaboration.Peer> Zusammenarbeits Sitzung erstellt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Beim Versuch dieser Methode, die für diesen Peer registrierte Anwendung aufzulisten, wurde ein ungültiger Wert zurückgegeben. Stellen Sie sicher, dass alle Anwendungen über gültige Registrierungswerte verfügen.</exception>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetPeersNearMe" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" />
      </Docs>
    </Member>
    <Member MemberName="GetLocalRegisteredApplications">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetLocalRegisteredApplications (System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetLocalRegisteredApplications(valuetype System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications(System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLocalRegisteredApplications (type As PeerApplicationRegistrationType) As PeerApplicationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::PeerToPeer::Collaboration::PeerApplicationCollection ^ GetLocalRegisteredApplications(System::Net::PeerToPeer::Collaboration::PeerApplicationRegistrationType type);" />
      <MemberSignature Language="F#" Value="static member GetLocalRegisteredApplications : System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType -&gt; System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" Usage="System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerApplicationCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" />
      </Parameters>
      <Docs>
        <param name="type">Der <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" />, der für die angegebene Anwendung zurückgegeben werden soll.</param>
        <summary>Ruft eine Auflistung aller <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />-Objekte ab, die für den angegebenen <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" /> auf dem lokalen Computer registriert sind.</summary>
        <returns>Eine <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> mit allen Anwendungen von dem angegebenen <paramref name="type" />, die auf dem lokalen Computer registriert sind. Wenn eine Anwendung nicht gefunden wurde, wird eine Auflistung der Größe 0 (null) zurückgegeben.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vor der Verwendung dieser Methode muss sich der Aufrufer über die <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A> -Methode bei der Peer Kollaborations Infrastruktur anmelden.  
  
 Für den Zugriff auf diese Methode <xref:System.Security.Permissions.PermissionState> ist <xref:System.Security.Permissions.PermissionState.Unrestricted>eine von erforderlich. Dieser Status wird beim Beginn der <xref:System.Net.PeerToPeer.Collaboration.Peer> Zusammenarbeits Sitzung erstellt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="type" />-Parameter ist auf keinen bekannten Wert in der <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" />-Enumeration festgelegt.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Beim Versuch dieser Methode, die für diesen Peer registrierte Anwendung aufzulisten, wurde ein ungültiger Wert zurückgegeben. Stellen Sie sicher, dass alle Anwendungen über gültige Registrierungswerte verfügen.</exception>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetPeersNearMe" />
      </Docs>
    </Member>
    <Member MemberName="GetLocalSetObjects">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetLocalSetObjects ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetLocalSetObjects() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalSetObjects" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLocalSetObjects () As PeerObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::PeerToPeer::Collaboration::PeerObjectCollection ^ GetLocalSetObjects();" />
      <MemberSignature Language="F#" Value="static member GetLocalSetObjects : unit -&gt; System.Net.PeerToPeer.Collaboration.PeerObjectCollection" Usage="System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalSetObjects " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerObjectCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft alle <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />-Instanzen ab, die vom aufrufenden Peer bei der <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" />-Infrastruktur auf diesem Computer registriert wurden.</summary>
        <returns>Eine <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" /> mit allen <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />-Instanzen, die vom aufrufenden Peer bei der <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" />-Infrastruktur auf dem lokalen Computer registriert wurden.  
  
Wenn auf dem lokalen Computer keine <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />-Instanzen gefunden werden, wird eine Auflistung der Größe 0 (null) zurückgegeben.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Für den Zugriff auf diese Eigenschaft <xref:System.Security.Permissions.PermissionState> ist <xref:System.Security.Permissions.PermissionState.Unrestricted>eine von erforderlich. Dieser Status wird beim Beginn der <xref:System.Net.PeerToPeer.Collaboration.Peer> Zusammenarbeits Sitzung erstellt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Beim Versuch dieser Methode, alle verfügbaren <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />-Instanzen aufzulisten, wurde ein ungültiger Wert zurückgegeben.</exception>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SetObject(System.Net.PeerToPeer.Collaboration.PeerObject)" />
      </Docs>
    </Member>
    <Member MemberName="GetPeersNearMe">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.Collaboration.PeerNearMeCollection GetPeersNearMe ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.PeerToPeer.Collaboration.PeerNearMeCollection GetPeersNearMe() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetPeersNearMe" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPeersNearMe () As PeerNearMeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::PeerToPeer::Collaboration::PeerNearMeCollection ^ GetPeersNearMe();" />
      <MemberSignature Language="F#" Value="static member GetPeersNearMe : unit -&gt; System.Net.PeerToPeer.Collaboration.PeerNearMeCollection" Usage="System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetPeersNearMe " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerNearMeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Auflistung aller <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" />-Endpunkte zurück, die gegenwärtig am Netzwerkteilnetz des aufrufenden Peers angemeldet sind.</summary>
        <returns>Eine <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMeCollection" /> mit allen <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" />-Endpunkten, die gegenwärtig im Bereich "Personen in meiner Umgebung" angemeldet sind.  
  
Wenn keine Peers im Teilnetz gefunden werden, wird eine Auflistung der Größe 0 (null) zurückgegeben.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Rückgabe einer vollständig <xref:System.Net.PeerToPeer.Collaboration.PeerNearMeCollection> mit dieser Methode aufgefüllten Zeitspanne kann nach der Anmeldung abhängig von der Netzwerktopologie und Latenzzeit einen unbestimmten Zeitraum erfordern.  
  
 Zum Aufrufen dieser Methode ist <xref:System.Security.Permissions.PermissionState> eine <xref:System.Security.Permissions.PermissionState.Unrestricted>von erforderlich. Dieser Status wird beim Beginn der <xref:System.Net.PeerToPeer.Collaboration.Peer> Zusammenarbeits Sitzung erstellt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie "Peer-NearMe" als "Peer-nearmecollection" abrufen:  
  
 [!code-csharp[NCLPNRPContacts#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPContacts/CS/NCLPNRPContacts.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Der Peer ist nicht im Bereich "Personen in meiner Umgebung" angemeldet.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Beim Versuch dieser Methode, alle bekannten Endpunkte in Personen in meiner Umgebung aufzulisten, wurde ein ungültiger Wert zurückgegeben.</exception>
      </Docs>
    </Member>
    <Member MemberName="LocalApplicationChanged">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; LocalApplicationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; LocalApplicationChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalApplicationChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event LocalApplicationChanged As EventHandler(Of ApplicationChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Net::PeerToPeer::Collaboration::ApplicationChangedEventArgs ^&gt; ^ LocalApplicationChanged;" />
      <MemberSignature Language="F#" Value="member this.LocalApplicationChanged : EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; " Usage="member this.LocalApplicationChanged : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wird ausgelöst, wenn eine <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> in der <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> für den lokalen Peer auf dem lokalen Host geändert wurde.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerApplication.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="LocalEndPointName">
      <MemberSignature Language="C#" Value="public static string LocalEndPointName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string LocalEndPointName" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalEndPointName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property LocalEndPointName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ LocalEndPointName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LocalEndPointName : string with get, set" Usage="System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalEndPointName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> ab, der dem aufrufenden Peer zugeordnet ist, oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.String" />, der den Namen enthält, der dem Endpunkt des aufrufenden Peers (als <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Name" />-Eigenschaft bereitgestellt) zugeordnet ist. Der Standardwert für diese Eigenschaft ist <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Für den Zugriff auf diese Eigenschaft <xref:System.Security.Permissions.PermissionState> ist <xref:System.Security.Permissions.PermissionState.Unrestricted>eine von erforderlich. Dieser Status wird beim Beginn der <xref:System.Net.PeerToPeer.Collaboration.Peer> Zusammenarbeits Sitzung erstellt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Der <see cref="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalEndPointName" /> kann nicht festgelegt werden.</exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermission" />
      </Docs>
    </Member>
    <Member MemberName="LocalNameChanged">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Net.PeerToPeer.Collaboration.NameChangedEventArgs&gt; LocalNameChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.NameChangedEventArgs&gt; LocalNameChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalNameChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event LocalNameChanged As EventHandler(Of NameChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Net::PeerToPeer::Collaboration::NameChangedEventArgs ^&gt; ^ LocalNameChanged;" />
      <MemberSignature Language="F#" Value="member this.LocalNameChanged : EventHandler&lt;System.Net.PeerToPeer.Collaboration.NameChangedEventArgs&gt; " Usage="member this.LocalNameChanged : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.NameChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.NameChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wird ausgelöst, wenn der Name des <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> auf dem lokalen Host für den lokalen Peer geändert wurde.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerEndPoint.NameChanged" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.OnNameChanged(System.Net.PeerToPeer.Collaboration.NameChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="LocalObjectChanged">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; LocalObjectChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; LocalObjectChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalObjectChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event LocalObjectChanged As EventHandler(Of ObjectChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Net::PeerToPeer::Collaboration::ObjectChangedEventArgs ^&gt; ^ LocalObjectChanged;" />
      <MemberSignature Language="F#" Value="member this.LocalObjectChanged : EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; " Usage="member this.LocalObjectChanged : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ein <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> in der <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" /> für den lokalen Peer auf dem lokalen Host wurde geändert.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerObject.ObjectChanged" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerObject.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="LocalPresenceChanged">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; LocalPresenceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; LocalPresenceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event LocalPresenceChanged As EventHandler(Of PresenceChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Net::PeerToPeer::Collaboration::PresenceChangedEventArgs ^&gt; ^ LocalPresenceChanged;" />
      <MemberSignature Language="F#" Value="member this.LocalPresenceChanged : EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; " Usage="member this.LocalPresenceChanged : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /> des lokalen Peers auf dem lokalen Host wurde geändert.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.PresenceChanged" />
      </Docs>
    </Member>
    <Member MemberName="LocalPresenceInfo">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.Collaboration.PeerPresenceInfo LocalPresenceInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.PeerToPeer.Collaboration.PeerPresenceInfo LocalPresenceInfo" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property LocalPresenceInfo As PeerPresenceInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::PeerToPeer::Collaboration::PeerPresenceInfo ^ LocalPresenceInfo { System::Net::PeerToPeer::Collaboration::PeerPresenceInfo ^ get(); void set(System::Net::PeerToPeer::Collaboration::PeerPresenceInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LocalPresenceInfo : System.Net.PeerToPeer.Collaboration.PeerPresenceInfo with get, set" Usage="System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerPresenceInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anwesenheit für den aufrufenden Peer in der <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" />-Infrastruktur ab oder legt diese fest.</summary>
        <value>Die <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" />, die Anwesenheitsinformationen für den aufrufenden Peer enthält, der sich für eine <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" />-Sitzung registriert hat.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zum Aufrufen dieser Methode ist <xref:System.Security.Permissions.PermissionState> eine <xref:System.Security.Permissions.PermissionState.Unrestricted>von erforderlich. Dieser Status wird beim Beginn der <xref:System.Net.PeerToPeer.Collaboration.Peer> Zusammenarbeits Sitzung erstellt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /> darf nicht <see langword="null" /> angeben.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-   <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus" /> ist offline 
–   Der <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /> kann nicht festgelegt werden</exception>
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceChanged" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.ContactManager.PresenceChanged" />
      </Docs>
    </Member>
    <Member MemberName="RegisterApplication">
      <MemberSignature Language="C#" Value="public static void RegisterApplication (System.Net.PeerToPeer.Collaboration.PeerApplication application, System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterApplication(class System.Net.PeerToPeer.Collaboration.PeerApplication application, valuetype System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterApplication (application As PeerApplication, type As PeerApplicationRegistrationType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterApplication(System::Net::PeerToPeer::Collaboration::PeerApplication ^ application, System::Net::PeerToPeer::Collaboration::PeerApplicationRegistrationType type);" />
      <MemberSignature Language="F#" Value="static member RegisterApplication : System.Net.PeerToPeer.Collaboration.PeerApplication * System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType -&gt; unit" Usage="System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication (application, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="application" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <Parameter Name="type" Type="System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" />
      </Parameters>
      <Docs>
        <param name="application">Die <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />, für die der aufrufende Peer im zugeordneten Bereich (global, lokal und verbindungslokal) registriert werden soll.</param>
        <param name="type">Der Typ der auszuführenden Registrierung.  Die Anwendung kann nur für den aufrufenden Peer oder für alle Peers, die den Computer verwenden, registriert werden.</param>
        <summary>Registriert die angegebene <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> für eine Zusammenarbeit mit dem aufrufenden Peer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der aufrufenden Peer muss sich bei der Peer Kollaborations Infrastruktur mit der <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A> -Methode anmelden, bevor diese Methode aufgerufen wird.  
  
 Für den Zugriff auf diese Methode <xref:System.Security.Permissions.PermissionState> ist <xref:System.Security.Permissions.PermissionState.Unrestricted>eine von erforderlich. Dieser Status wird beim Beginn der <xref:System.Net.PeerToPeer.Collaboration.Peer> Zusammenarbeits Sitzung erstellt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie eine Anwendung bei der Infrastruktur für die Zusammenarbeit registrieren:  
  
 [!code-csharp[NCLPNRPContacts#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPContacts/CS/NCLPNRPContacts.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">–   Die an <paramref name="application" /> übergebene <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Path" />-Eigenschaft für das <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />-Objekt ist <see langword="null." />  
  
–   Die bereitgestellte Peeranwendungsinstanz verfügt über die gleiche global eindeutige <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> wie eine Anwendung, die bereits registriert ist.  Die vorhandene Registrierung muss aufgehoben werden, bevor eine neue Anwendung mit dem bereitgestellten Bezeichner registriert werden kann.</exception>
        <exception cref="T:System.ArgumentNullException">Die Parameter <paramref name="application" /> und <paramref name="type" /> dürfen nicht gleich <see langword="null" /> sein.  Beide Parameter müssen angegeben werden.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Der Typparameter ist in der <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" />-Enumeration nicht auf einen bekannten Wert festgelegt.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Der <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />-Vorgang kann nicht abgeschlossen werden, solange der Aufrufer sich nicht bei der Infrastruktur angemeldet hat.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetObject">
      <MemberSignature Language="C#" Value="public static void SetObject (System.Net.PeerToPeer.Collaboration.PeerObject peerObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetObject(class System.Net.PeerToPeer.Collaboration.PeerObject peerObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SetObject(System.Net.PeerToPeer.Collaboration.PeerObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetObject(System::Net::PeerToPeer::Collaboration::PeerObject ^ peerObject);" />
      <MemberSignature Language="F#" Value="static member SetObject : System.Net.PeerToPeer.Collaboration.PeerObject -&gt; unit" Usage="System.Net.PeerToPeer.Collaboration.PeerCollaboration.SetObject peerObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerObject" Type="System.Net.PeerToPeer.Collaboration.PeerObject" />
      </Parameters>
      <Docs>
        <param name="peerObject">Die zu registrierende <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />.</param>
        <summary>Registriert ein <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />, das dem aufrufenden Peer zugeordnet ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ermöglicht es, dass das Objekt von Remote Peers abgefragt wird, die an dem Bereich beteiligt sind, in dem das Objekt registriert wurde. Wenn das Objekt zuvor registriert wurde, aktualisiert diese Methode die Registrierung. Wenn ein registriertes Objekt außerhalb des Gültigkeits Bereichs liegt, kann es über <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalSetObjects%2A> die-Methode abgerufen werden.  
  
 Die Größe des Daten Teils des <xref:System.Net.PeerToPeer.Collaboration.PeerObject> muss kleiner oder gleich 16.384 Bytes sein.  
  
 Für den Zugriff auf diese Methode <xref:System.Security.Permissions.PermissionState> ist <xref:System.Security.Permissions.PermissionState.Unrestricted>eine von erforderlich. Dieser Status wird beim Beginn der <xref:System.Net.PeerToPeer.Collaboration.Peer> Zusammenarbeits Sitzung erstellt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Objekt ist bereits registriert.</exception>
        <exception cref="T:System.ArgumentNullException">-   <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> kann nicht <see langword="null." /> sein  
  
-   <see cref="P:System.Net.PeerToPeer.Collaboration.PeerObject.Id" /> kann nicht <see langword="null." /> sein</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Der <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SetObject(System.Net.PeerToPeer.Collaboration.PeerObject)" />-Vorgang konnte nicht abgeschlossen werden.</exception>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalSetObjects" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetPeersNearMe" />
      </Docs>
    </Member>
    <Member MemberName="SignIn">
      <MemberSignature Language="C#" Value="public static void SignIn (System.Net.PeerToPeer.Collaboration.PeerScope peerScope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SignIn(valuetype System.Net.PeerToPeer.Collaboration.PeerScope peerScope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn(System.Net.PeerToPeer.Collaboration.PeerScope)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SignIn(System::Net::PeerToPeer::Collaboration::PeerScope peerScope);" />
      <MemberSignature Language="F#" Value="static member SignIn : System.Net.PeerToPeer.Collaboration.PeerScope -&gt; unit" Usage="System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn peerScope" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerScope" Type="System.Net.PeerToPeer.Collaboration.PeerScope" />
      </Parameters>
      <Docs>
        <param name="peerScope">Der Bereich, den der Peer zur Teilnahme an der <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" />-Aktivität verwendet.</param>
        <summary>Meldet den Peer mit dem angegebenen <see cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" /> bei der Zusammenarbeitsinfrastruktur an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Anzeigen Amen sind nicht notwendigerweise eindeutig. Benutzer sollten die Identität der Person überprüfen, indem Sie den anzeigen Amen per e-Mail, Telefon oder Person verwenden, bevor Sie eine Zusammenarbeits Einladung akzeptieren.  
  
 Mit dieser Funktion werden die Benutzer bei der Zusammenarbeits Infrastruktur signiert.  
  
 Für den Zugriff auf diese Methode <xref:System.Security.Permissions.PermissionState> ist <xref:System.Security.Permissions.PermissionState.Unrestricted>eine von erforderlich. Dieser Status wird beim Beginn der <xref:System.Net.PeerToPeer.Collaboration.Peer> Zusammenarbeits Sitzung erstellt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die Benutzer bei der Zusammenarbeits Infrastruktur signiert werden.  
  
 [!code-csharp[NCLPNRPContacts#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPContacts/CS/NCLPNRPContacts.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Für <paramref name="peerScope" /> ist <see cref="F:System.Net.PeerToPeer.Collaboration.PeerScope.None" /> festgelegt.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="peerScope" />-Parameter enthält einen ungültigen Enumerationswert.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Der <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn(System.Net.PeerToPeer.Collaboration.PeerScope)" />-Vorgang konnte nicht abgeschlossen werden.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignInScope" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignOut(System.Net.PeerToPeer.Collaboration.PeerScope)" />
      </Docs>
    </Member>
    <Member MemberName="SignInScope">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.Collaboration.PeerScope SignInScope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Net.PeerToPeer.Collaboration.PeerScope SignInScope" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignInScope" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SignInScope As PeerScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::PeerToPeer::Collaboration::PeerScope SignInScope { System::Net::PeerToPeer::Collaboration::PeerScope get(); };" />
      <MemberSignature Language="F#" Value="member this.SignInScope : System.Net.PeerToPeer.Collaboration.PeerScope" Usage="System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignInScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den <see cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" /> ab, in dem der aufrufende Peer Informationen über Anwesenheit, Funktionen und Objekte veröffentlichen kann.</summary>
        <value>Ein <see cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />-Objekt, das den Bereich angibt, an dem der aufrufende Peer teilnimmt. Der Standardwert für diese Eigenschaft ist <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Peerhost oder die Host Anwendung kann die Peer Teilnahme in Zusammenarbeits Aktivitäten mithilfe separater Bereiche einschränken oder unterscheiden.  
  
 Der aufrufende Peer sollte den Rückgabewert dieser Methode überprüfen, um zu bestimmen, welche weiteren Aktionen erfolgreich ausgeführt werden können.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpScope" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn(System.Net.PeerToPeer.Collaboration.PeerScope)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignOut(System.Net.PeerToPeer.Collaboration.PeerScope)" />
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public static void SignOut (System.Net.PeerToPeer.Collaboration.PeerScope peerScope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SignOut(valuetype System.Net.PeerToPeer.Collaboration.PeerScope peerScope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignOut(System.Net.PeerToPeer.Collaboration.PeerScope)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SignOut(System::Net::PeerToPeer::Collaboration::PeerScope peerScope);" />
      <MemberSignature Language="F#" Value="static member SignOut : System.Net.PeerToPeer.Collaboration.PeerScope -&gt; unit" Usage="System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignOut peerScope" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerScope" Type="System.Net.PeerToPeer.Collaboration.PeerScope" />
      </Parameters>
      <Docs>
        <param name="peerScope">Durch <see cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" /> angegebene Bereichsenumeration.</param>
        <summary>Meldet den Peer aus dem angegebenen Bereich ab.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ist kein anwendungsspezifischer Vorgang, und die Abmeldung wirkt sich möglicherweise auf andere Anwendungen aus, die derzeit ausgeführt werden. Wenn der Benutzer nicht bereits im angegebenen Bereich angemeldet ist, führt dies dazu, dass diese Methode einen No-op-Vorgang bewirkt.  
  
 Wenn sich ein Benutzer bei "Personen in meiner Umgebung" anmeldet, werden die veröffentlichten <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration> Informationen aus dem Endpunkt Objekt Satz gelöscht.  Dies umfasst <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalEndPointName%2A> und <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceInfo%2A>, zusätzlich zu allen identifizierenden Objekten, die vom aufrufenden Peer bei der Zusammenarbeits Infrastruktur registriert werden. Da diese Informationen gelöscht werden, sind Sie nicht mehr für Remote Peers oder einen Peerhost für die Zusammenarbeit verfügbar. Aus der Perspektive <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration> der-Klasse ist die andere Freigabe der gleichen Informationen mit vertrauenswürdigen Kontakten nicht relevant. die <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration> Verwendung der-Klasse wirkt sich nicht auf andere Objekte aus, in denen diese Informationen persistent gespeichert wurden, z. b. ein Remotepeer. <xref:System.Net.PeerToPeer.Collaboration.ContactManager>-Objekt. Ebenso wirkt sich das Löschen eines Peers <xref:System.Net.PeerToPeer.Collaboration.ContactManager> aus dem nicht auf das vorhanden sein in einer Zusammenarbeits Anwendung aus. andere Kontakte können weiterhin ihre Anwesenheit anzeigen und zusammenarbeiten.  
  
 Zum Aufrufen dieser Methode ist <xref:System.Security.Permissions.PermissionState> eine <xref:System.Security.Permissions.PermissionState.Unrestricted>von erforderlich. Dieser Status wird beim Beginn der <xref:System.Net.PeerToPeer.Collaboration.Peer> Zusammenarbeits Sitzung erstellt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="peerScope" />-Parameter enthält einen ungültigen Enumerationswert.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Der <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignOut(System.Net.PeerToPeer.Collaboration.PeerScope)" />-Vorgang konnte nicht abgeschlossen werden.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn(System.Net.PeerToPeer.Collaboration.PeerScope)" />
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignInScope" />
      </Docs>
    </Member>
    <Member MemberName="SynchronizingObject">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.ISynchronizeInvoke SynchronizingObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ComponentModel.ISynchronizeInvoke SynchronizingObject" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SynchronizingObject" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property SynchronizingObject As ISynchronizeInvoke" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ComponentModel::ISynchronizeInvoke ^ SynchronizingObject { System::ComponentModel::ISynchronizeInvoke ^ get(); void set(System::ComponentModel::ISynchronizeInvoke ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SynchronizingObject : System.ComponentModel.ISynchronizeInvoke with get, set" Usage="System.Net.PeerToPeer.Collaboration.PeerCollaboration.SynchronizingObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Description("SynchronizingObject")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISynchronizeInvoke</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Ereignishandler-Rückrufobjekt für alle Ereignishandler ab oder legt dieses fest.</summary>
        <value>Ein Objekt, für das <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> implementiert ist und das für die Anwendungsthreadsynchronisierung verwendet werden soll.  
  
Der Standardwert für diese Eigenschaft ist <see langword="null" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalObjectChanged" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />
      </Docs>
    </Member>
    <Member MemberName="UnregisterApplication">
      <MemberSignature Language="C#" Value="public static void UnregisterApplication (System.Net.PeerToPeer.Collaboration.PeerApplication application, System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UnregisterApplication(class System.Net.PeerToPeer.Collaboration.PeerApplication application, valuetype System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.UnregisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UnregisterApplication (application As PeerApplication, type As PeerApplicationRegistrationType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UnregisterApplication(System::Net::PeerToPeer::Collaboration::PeerApplication ^ application, System::Net::PeerToPeer::Collaboration::PeerApplicationRegistrationType type);" />
      <MemberSignature Language="F#" Value="static member UnregisterApplication : System.Net.PeerToPeer.Collaboration.PeerApplication * System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType -&gt; unit" Usage="System.Net.PeerToPeer.Collaboration.PeerCollaboration.UnregisterApplication (application, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="application" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <Parameter Name="type" Type="System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" />
      </Parameters>
      <Docs>
        <param name="application">Die <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />, deren Registrierung für den aufrufenden Peer aufgehoben werden soll.</param>
        <param name="type">Der Typ der Registrierungsaufhebung, die entweder für den aufrufenden Peer oder für alle auf dem Computer vorhandenen Peers durchgeführt werden soll.</param>
        <summary>Hebt die Registrierung der angegebenen <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> bei der <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" />-Infrastruktur auf.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Aufheben <xref:System.Net.PeerToPeer.Collaboration.PeerApplication> der Registrierung von wird verhindert, dass der aufrufende Peer Kollaborations Einladungen erhält. Wenn die Registrierung der Anwendung, deren Registrierung aufgehoben wurde, nicht bereits registriert war, ist dies kein Vorgang.  
  
 Zum Aufrufen dieser Methode ist <xref:System.Security.Permissions.PermissionState> eine <xref:System.Security.Permissions.PermissionState.Unrestricted>von erforderlich. Dieser Status wird beim Beginn der <xref:System.Net.PeerToPeer.Collaboration.Peer> Zusammenarbeits Sitzung erstellt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die global eindeutige <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> für die angegebene Anwendung ist nicht vorhanden oder leer.</exception>
        <exception cref="T:System.ArgumentNullException">Der Parameter <paramref name="application" /> oder der Parameter <paramref name="type" /> ist auf <see langword="null." /> festgelegt.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="type" />-Parameter ist in <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" /> nicht auf einen bekannten Wert festgelegt.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Der <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.UnregisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />-Vorgang konnte nicht abgeschlossen werden.</exception>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
      </Docs>
    </Member>
  </Members>
</Type>
