<Namespace Name="System.IO.IsolatedStorage">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ee252d49fc62169cfa1a6b14b12e4a28acccda6a" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83951821" /></Metadata><Docs>
    <summary>Der <see cref="N:System.IO.IsolatedStorage" />-Namespace enthält Typen, mit denen isolierte Speicher erstellt und verwendet werden können. Mithilfe dieser Speicher können Sie Daten lesen und schreiben, auf die weniger vertrauenswürdiger Code nicht zugreifen kann, und Sie können verhindern, dass vertrauliche Informationen verfügbar gemacht werden, die an anderer Stelle im Dateisystem gespeichert sind. Die Daten werden in Depots gespeichert, die vom aktuellen Benutzer und der Assembly mit dem Code isoliert sind. Zusätzlich können Daten auch von der Domäne isoliert werden. Sie können zusammen mit der isolierten Speicherung servergespeicherte Benutzerprofile verwenden, sodass die isolierten Speicher vom Benutzer an jedem Ort verwendet werden können. Die <see cref="T:System.IO.IsolatedStorage.IsolatedStorageScope" />-Enumeration gibt verschiedene Arten der Isolation an. Weitere Informationen zu Szenarios für das Verwenden der isolierten Speicherung finden Sie unter <see href="https://docs.microsoft.com/dotnet/standard/io/isolated-storage">Isolierter Speicher</see>.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.IO.IsolatedStorage.IsolatedStorageFile>-Klasse bietet die meisten der für isolierte Speicherung erforderlichen Funktionen. Verwenden Sie diese Klasse zum Abrufen, löschen und Verwalten von isoliertem Speicher. Die <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>-Klasse behandelt das Lesen und Schreiben von Dateien in einem Speicher. Dies ähnelt dem Lesen und Schreiben in standardmäßigen Datei-e/a-Klassen. Weitere Informationen zu e/a-Vorgängen finden Sie im <xref:System.IO>-Namespace.  
  
 Beispiele für die Verwendung von isoliertem Speicher finden Sie unter [isolierter Speicher](/dotnet/standard/io/isolated-storage)  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>