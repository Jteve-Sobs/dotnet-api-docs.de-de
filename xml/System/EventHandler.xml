<Type Name="EventHandler" FullName="System.EventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="40320b4d8fa13a906a4ed922b3213b48caf2a89a" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75042699" /></Metadata><TypeSignature Language="C#" Value="public delegate void EventHandler(object sender, EventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed EventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.EventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub EventHandler(sender As Object, e As EventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void EventHandler(System::Object ^ sender, EventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type EventHandler = delegate of obj * EventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.EventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">Die Quelle des Ereignisses.</param>
    <param name="e">Ein Objekt, das keine Ereignisdaten enthält.</param>
    <summary>Stellt die Methode dar, die ein Ereignis ohne Ereignisdaten behandelt.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Ereignis Modell in der .NET Framework basiert auf einem Ereignis Delegaten, der ein Ereignis mit seinem Handler verbindet. Um ein Ereignis aufzurichten, sind zwei Elemente erforderlich:  
  
-   Ein Delegat, der die Methode identifiziert, die die Antwort auf das Ereignis bereitstellt.  
  
-   Optional eine Klasse, die die Ereignisdaten enthält, wenn das Ereignisdaten bereitstellt.  
  
 Der Delegat ist ein Typ, der eine Signatur definiert, d. h. den Rückgabe Werttyp und die Parameterlisten Typen für eine Methode. Sie können den Delegattyp verwenden, um eine Variable zu deklarieren, die auf eine beliebige Methode mit der gleichen Signatur wie der Delegat verweisen kann.  
  
 Die Standard Signatur eines Ereignishandlerdelegaten definiert eine Methode, die keinen Wert zurückgibt. Der erste Parameter dieser Methode ist vom Typ <xref:System.Object> und verweist auf die Instanz, die das Ereignis auslöst. Der zweite Parameter wird vom Typ <xref:System.EventArgs> abgeleitet und enthält die Ereignisdaten. Wenn das Ereignis keine Ereignisdaten generiert, ist der zweite Parameter einfach der Wert des <xref:System.EventArgs.Empty?displayProperty=nameWithType> Felds. Andernfalls ist der zweite Parameter ein von <xref:System.EventArgs> abgeleiteter Typ, der alle Felder oder Eigenschaften bereitstellt, die zum Speichern der Ereignisdaten erforderlich sind.  
  
 Der <xref:System.EventHandler>-Delegat ist ein vordefinierter Delegat, der speziell eine Ereignishandlermethode für ein Ereignis darstellt, das keine Daten generiert. Wenn das Ereignisdaten generiert, müssen Sie die generische <xref:System.EventHandler%601> Delegatklasse verwenden.  
  
 Fügen Sie dem-Ereignis eine Instanz des-Delegaten hinzu, um das-Ereignis der Methode zuzuordnen, die das-Ereignis behandelt. Der Ereignishandler wird bei jedem Eintreten des Ereignisses aufgerufen, sofern der Delegat nicht entfernt wird.  
  
 Weitere Informationen zu Ereignishandlerdelegaten finden Sie unter [behandeln und Auswerfen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Das folgende Beispiel zeigt ein Ereignis mit dem Namen `ThresholdReached`, das einem <xref:System.EventHandler> Delegaten zugeordnet ist. Die Methode, die dem <xref:System.EventHandler> Delegaten zugewiesen ist, wird in der `OnThresholdReached`-Methode aufgerufen.  
  
 [!code-cpp[EventsOverview#6](~/samples/snippets/cpp/VS_Snippets_CLR/eventsoverview/cpp/programwithdata.cpp#6)]
 [!code-csharp[EventsOverview#6](~/samples/snippets/csharp/VS_Snippets_CLR/eventsoverview/cs/programwithdata.cs#6)]
 [!code-vb[EventsOverview#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventsoverview/vb/module1withdata.vb#6)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.EventHandler`1" />
    <altmember cref="T:System.EventArgs" />
    <altmember cref="T:System.Delegate" />
    <related type="Article" href="https://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f">Behandeln und Auslösen von Ereignissen</related>
    <related type="Article" href="https://msdn.microsoft.com/library/42afade7-3a02-4f2e-868b-95845f302f8f">Gewusst wie: Auslösen und Behandeln von Ereignissen</related>
    <related type="Article" href="https://msdn.microsoft.com/library/8fb0353a-e41b-4e23-b78f-da65db832f70">Ereignisse (Visual Basic)</related>
    <related type="Article" href="https://msdn.microsoft.com/library/a8e51b22-d294-44fb-9539-0072f06c4cb3">Ereignisse (C#-Programmierhandbuch)</related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=261485">Übersicht über Ereignisse und Routing Ereignisse (Windows Store-Apps)</related>
  </Docs>
</Type>
