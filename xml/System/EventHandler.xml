<Type Name="EventHandler" FullName="System.EventHandler">
  <TypeSignature Language="C#" Value="public delegate void EventHandler(object sender, EventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed EventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.EventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub EventHandler(sender As Object, e As EventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void EventHandler(System::Object ^ sender, EventArgs ^ e);" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.EventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="b50a6-101">Die Quelle des Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="b50a6-101">The source of the event.</span></span></param>
    <param name="e"><span data-ttu-id="b50a6-102">Ein Objekt, das keine Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="b50a6-102">An object that contains no event data.</span></span></param>
    <summary><span data-ttu-id="b50a6-103">Stellt die Methode dar, die ein Ereignis ohne Ereignisdaten behandelt.</span><span class="sxs-lookup"><span data-stu-id="b50a6-103">Represents the method that will handle an event that has no event data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b50a6-104">Das Ereignismodell in .NET Framework basiert auf dem Vorhandensein eines Ereignisdelegaten, der ein Ereignis mit dem entsprechenden Handler verbindet.</span><span class="sxs-lookup"><span data-stu-id="b50a6-104">The event model in the .NET Framework is based on having an event delegate that connects an event with its handler.</span></span> <span data-ttu-id="b50a6-105">Um ein Ereignis auszulösen, werden zwei Elemente erforderlich:</span><span class="sxs-lookup"><span data-stu-id="b50a6-105">To raise an event, two elements are needed:</span></span>  
  
-   <span data-ttu-id="b50a6-106">Ein Delegat, der die Methode bestimmt wird, die als Antwort auf das Ereignis bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="b50a6-106">A delegate that identifies the method that provides the response to the event.</span></span>  
  
-   <span data-ttu-id="b50a6-107">Optional, eine Klasse, die die Ereignisdaten enthält, wenn das Ereignis die Daten bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="b50a6-107">Optionally, a class that holds the event data, if the event provides data.</span></span>  
  
 <span data-ttu-id="b50a6-108">Der Delegat ist ein Typ, der eine Signatur, d. h. den Typ des Rückgabewerts und Typen der Parameterliste für eine Methode definiert.</span><span class="sxs-lookup"><span data-stu-id="b50a6-108">The delegate is a type that defines a signature, that is, the return value type and parameter list types for a method.</span></span> <span data-ttu-id="b50a6-109">Den Delegattyp können Sie um eine Variable zu deklarieren, die auf jede Methode mit der gleichen Signatur wie der Delegat verweisen können.</span><span class="sxs-lookup"><span data-stu-id="b50a6-109">You can use the delegate type to declare a variable that can refer to any method with the same signature as the delegate.</span></span>  
  
 <span data-ttu-id="b50a6-110">Die standard-Signatur von einem eventhandlerdelegaten definiert eine Methode, die keinen Wert zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="b50a6-110">The standard signature of an event handler delegate defines a method that does not return a value.</span></span> <span data-ttu-id="b50a6-111">Diese Methode erste Parameter ist vom Typ <xref:System.Object> und bezieht sich auf die Instanz, die das Ereignis auslöst.</span><span class="sxs-lookup"><span data-stu-id="b50a6-111">This method's first parameter is of type <xref:System.Object> and refers to the instance that raises the event.</span></span> <span data-ttu-id="b50a6-112">Der zweite Parameter ist vom Typ abgeleitet <xref:System.EventArgs> und die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="b50a6-112">Its second parameter is derived from type <xref:System.EventArgs> and holds the event data.</span></span> <span data-ttu-id="b50a6-113">Wenn das Ereignis keine Ereignisdaten generiert, wird der zweite Parameter ist einfach der Wert von der <xref:System.EventArgs.Empty?displayProperty=nameWithType> Feld.</span><span class="sxs-lookup"><span data-stu-id="b50a6-113">If the event does not generate event data, the second parameter is simply the value of the <xref:System.EventArgs.Empty?displayProperty=nameWithType> field.</span></span> <span data-ttu-id="b50a6-114">Der zweite Parameter ist, andernfalls abgeleitet <xref:System.EventArgs> und alle Felder oder Eigenschaften erforderlich sind, zum Speichern von Daten für das Ereignis bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="b50a6-114">Otherwise, the second parameter is a type derived from <xref:System.EventArgs> and supplies any fields or properties needed to hold the event data.</span></span>  
  
 <span data-ttu-id="b50a6-115">Die <xref:System.EventHandler> Delegat ist ein vordefinierter Delegat, der insbesondere eine Ereignishandlermethode für ein Ereignis darstellt, die keine Daten generiert.</span><span class="sxs-lookup"><span data-stu-id="b50a6-115">The <xref:System.EventHandler> delegate is a predefined delegate that specifically represents an event handler method for an event that does not generate data.</span></span> <span data-ttu-id="b50a6-116">Wenn das Ereignis Daten generiert, müssen Sie die generische verwenden <xref:System.EventHandler%601> Delegatklasse.</span><span class="sxs-lookup"><span data-stu-id="b50a6-116">If your event does generate data, you must use the generic <xref:System.EventHandler%601> delegate class.</span></span>  
  
 <span data-ttu-id="b50a6-117">Um die Methode das Ereignis zuzuordnen, die das Ereignis behandelt, fügen Sie eine Instanz des Delegaten das Ereignis ein.</span><span class="sxs-lookup"><span data-stu-id="b50a6-117">To associate the event with the method that will handle the event, add an instance of the delegate to the event.</span></span> <span data-ttu-id="b50a6-118">Der Ereignishandler wird bei jedem Eintreten des Ereignisses aufgerufen, sofern der Delegat nicht entfernt wird.</span><span class="sxs-lookup"><span data-stu-id="b50a6-118">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span>  
  
 <span data-ttu-id="b50a6-119">Weitere Informationen zu Ereignishandlerdelegaten, finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="b50a6-119">For more information about event handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b50a6-120">Das folgende Beispiel zeigt ein Ereignis namens `ThresholdReached` zugeordneten ein <xref:System.EventHandler> delegieren.</span><span class="sxs-lookup"><span data-stu-id="b50a6-120">The following example shows an event named `ThresholdReached` that is associated with an <xref:System.EventHandler> delegate.</span></span> <span data-ttu-id="b50a6-121">Die Methode zugewiesene der <xref:System.EventHandler> Delegat wird aufgerufen, der `OnThresholdReached` Methode.</span><span class="sxs-lookup"><span data-stu-id="b50a6-121">The method assigned to the <xref:System.EventHandler> delegate is called in the `OnThresholdReached` method.</span></span>  
  
 [!code-cpp[EventsOverview#6](~/samples/snippets/cpp/VS_Snippets_CLR/eventsoverview/cpp/programwithdata.cpp#6)]
 [!code-csharp[EventsOverview#6](~/samples/snippets/csharp/VS_Snippets_CLR/eventsoverview/cs/programwithdata.cs#6)]
 [!code-vb[EventsOverview#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventsoverview/vb/module1withdata.vb#6)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.EventHandler`1" />
    <altmember cref="T:System.EventArgs" />
    <altmember cref="T:System.Delegate" />
  </Docs>
</Type>