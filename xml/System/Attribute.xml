<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Attribute.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5438da30acd4c8aab15e23998267de1a8ca100d97.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">438da30acd4c8aab15e23998267de1a8ca100d97</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Attribute">
          <source>Represents the base class for custom attributes.</source>
          <target state="translated">Stellt die Basisklasse für benutzerdefinierte Attribute dar.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Attribute">
          <source>The <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> class associates predefined system information or user-defined custom information with a target element.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> Klasse ordnet Systeminformationen vordefinierte oder benutzerdefinierte Informationen benutzerdefinierte ein Target-Element.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Attribute">
          <source>A target element can be an assembly, class, constructor, delegate, enum, event, field, interface, method, portable executable file module, parameter, property, return value, struct, or another attribute.</source>
          <target state="translated">Ein Target-Element kann eine Assembly, Klasse, Konstruktor, Delegaten, Enum, Ereignis, Feld, Schnittstelle, -Methode, portierbare ausführbare Datei Modul, Parameter, Eigenschaft, Rückgabewert, Struktur oder ein anderes Attribut sein.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Attribute">
          <source>Information provided by an attribute is also known as metadata.</source>
          <target state="translated">Angaben, die durch ein Attribut ist auch bekannt als Metadaten.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Attribute">
          <source>Metadata can be examined at run time by your application to control how your program processes data, or before run time by external tools to control how your application itself is processed or maintained.</source>
          <target state="translated">Metadaten zur Laufzeit analysiert werden, von der Anwendung zu steuern, wie Ihre Anwendung Daten verarbeitet oder vor der Laufzeit von externen Tools Steuern wie die Anwendung selbst wird verarbeitet oder verwaltet.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Attribute">
          <source>For example, the .NET Framework predefines and uses attribute types to control run-time behavior, and some programming languages use attribute types to represent language features not directly supported by the .NET Framework common type system.</source>
          <target state="translated">Z. B. .NET Framework vordefiniert und verwendet, um das Laufzeitverhalten zu steuern, und einige Programmiersprachen verwenden Attributtypen zur Darstellung von Sprachfunktionen, die durch das allgemeine Typsystem in .NET Framework nicht direkt unterstützt.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Attribute">
          <source>All attribute types derive directly or indirectly from the <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> class.</source>
          <target state="translated">Alle Typen von Attributen abgeleitet direkt oder indirekt die <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Attribute">
          <source>Attributes can be applied to any target element; multiple attributes can be applied to the same target element; and attributes can be inherited by an element derived from a target element.</source>
          <target state="translated">Attribute können auf ein Target-Element angewendet werden. mehrere Attribute können mit dem gleichen Zielelement angewendet werden. und Attribute von einem Element, das von einem Zielelement abgeleitet geerbt werden können.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Attribute">
          <source>Use the <ph id="ph1">&lt;xref:System.AttributeTargets&gt;</ph> class to specify the target element to which the attribute is applied.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:System.AttributeTargets&gt;</ph> Klasse, um das Zielelement anzugeben, auf die das Attribut angewendet wird.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Attribute">
          <source>The <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> class provides convenient methods to retrieve and test custom attributes.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> -Klasse stellt praktische Methoden zum Abrufen und Testen von benutzerdefinierten Attributen.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Attribute">
          <source>For more information about using attributes, see <bpt id="p1">[</bpt>Applying Attributes<ept id="p1">](~/docs/standard/attributes/applying-attributes.md)</ept> and <bpt id="p2">[</bpt>Attributes<ept id="p2">](~/docs/standard/attributes/index.md)</ept>.</source>
          <target state="translated">Weitere Informationen zum Verwenden von Attributen finden Sie unter <bpt id="p1">[</bpt>Anwenden von Attributen<ept id="p1">](~/docs/standard/attributes/applying-attributes.md)</ept> und <bpt id="p2">[</bpt>Attribute<ept id="p2">](~/docs/standard/attributes/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Attribute">
          <source>The following code example demonstrates the usage of <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht die Verwendung von <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Attribute">
          <source>This type is thread safe.</source>
          <target state="translated">Dieser Typ ist threadsicher.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Attribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.#ctor">
          <source>This constructor is only called by classes that derive from <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>.</source>
          <target state="translated">Dieser Konstruktor wird nur durch abgeleitete Klassen aufgerufen <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.#ctor">
          <source>The following code example shows the definition of a custom parameter <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> class with its constructor.</source>
          <target state="translated">Das folgende Codebeispiel zeigt die Definition eines benutzerdefinierten Parameters <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> Klasse mit ihren Konstruktor.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Attribute.Equals(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to compare with this instance or <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, das mit dieser Instanz oder <ph id="ph2">&lt;see langword="null" /&gt;</ph> verglichen werden soll.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Attribute.Equals(System.Object)">
          <source>Returns a value that indicates whether this instance is equal to a specified object.</source>
          <target state="translated">Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen Objekt ist.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Attribute.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> and this instance are of the same type and have identical field values; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Wenn <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> und diese Instanz vom selben Typ sind und über identische Feldwerte verfügen: <ph id="ph1">&lt;see langword="true" /&gt;</ph>, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Attribute.Equals%2A&gt;</ph> method uses reflection to retrieve field information for the current instance and the <ph id="ph2">`obj`</ph> argument.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Attribute.Equals%2A&gt;</ph> Methode verwendet Reflektion zum Abrufen von Feldinformationen für die aktuelle Instanz und die <ph id="ph2">`obj`</ph> Argument.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Equals(System.Object)">
          <source>It then compares field values.</source>
          <target state="translated">Es vergleicht dann die Feldwerte.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Equals(System.Object)">
          <source>When implementing your own class derived from <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>, you can override the <ph id="ph2">&lt;xref:System.Attribute.Equals%2A&gt;</ph> method.</source>
          <target state="translated">Wenn implementieren eine eigene Klasse abgeleitet wurde. <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>, können Sie überschreiben die <ph id="ph2">&lt;xref:System.Attribute.Equals%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Equals(System.Object)">
          <source>Because it uses reflection, we recommend that you do so.</source>
          <target state="translated">Da Reflektion verwendet wird, wird empfohlen, dass Sie dies tun.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Equals(System.Object)">
          <source>However, your override should perform a standard test for reference equality (the two arguments represent the same object instance) or value equality (the two arguments are of the same type and have identical field values).</source>
          <target state="translated">Allerdings sollten die Außerkraftsetzung einen standard-Test ausführen, auf Verweisgleichheit (zwei Argumente darstellen die gleiche Objektinstanz) oder Wertgleichheit (zwei Argumente vom gleichen Typ sind und identische Werte haben).</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Equals(System.Object)">
          <source>If you want to perform a custom comparison to determine whether two attributes objects are equal, you can override the <ph id="ph1">&lt;xref:System.Attribute.Match%2A&gt;</ph> method.</source>
          <target state="translated">Wenn Sie einen benutzerdefinierten Vergleich aus, um zu bestimmen, ob die beiden Attribute Objekte gleich sind, können Sie Sie überschreiben ausführen möchten die <ph id="ph1">&lt;xref:System.Attribute.Match%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Equals(System.Object)">
          <source>The following example defines two custom parameter <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> classes, then creates several objects of each class and uses the <ph id="ph2">&lt;xref:System.Attribute.Equals%2A&gt;</ph> method to compare them.</source>
          <target state="translated">Das folgende Beispiel definiert zwei benutzerdefinierte Parameter <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> Klassen, jeder Klasse mehrere Objekte erstellt und verwendet die <ph id="ph2">&lt;xref:System.Attribute.Equals%2A&gt;</ph> Methode, um sie miteinander vergleichen.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="T:System.Attribute">
          <source>Retrieves a custom attribute of a specified type applied to an assembly, module, type member, or method parameter.</source>
          <target state="translated">Ruft ein benutzerdefiniertes Attribut eines angegebenen Typs ab, das auf eine Assembly, ein Modul, einen Typmember oder einen Methodenparameter angewendet wird.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> class that describes a reusable collection of modules.</source>
          <target state="translated">Ein von der <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>-Klasse abgeleitetes Objekt, das eine wiederverwendbare Auflistung von Modulen beschreibt.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Der Typ des benutzerdefinierten Attributs oder ein Basistyp, nach dem gesucht werden soll.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)">
          <source>Retrieves a custom attribute applied to a specified assembly.</source>
          <target state="translated">Ruft ein benutzerdefiniertes Attribut ab, das auf eine angegebene Assembly angewendet wird.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)">
          <source>Parameters specify the assembly and the type of the custom attribute to search for.</source>
          <target state="translated">Parameter geben die Assembly und den Typ des zu suchenden benutzerdefinierten Attributs an.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)">
          <source>A reference to the single custom attribute of type <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> that is applied to <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if there is no such attribute.</source>
          <target state="translated">Ein Verweis auf das einzige benutzerdefinierte Attribut vom Typ <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph>, das für <ph id="ph2">&lt;paramref name="element" /&gt;</ph> übernommen wird, oder <ph id="ph3">&lt;see langword="null" /&gt;</ph>, wenn kein solches Attribut vorhanden ist.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)">
          <source>Use the <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph> method if you expect more than one value to be returned, or <ph id="ph2">&lt;xref:System.Reflection.AmbiguousMatchException&gt;</ph> will be thrown.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph> Methode, wenn Sie davon ausgehen, mehrere Werte dass zurückgegeben werden, oder <ph id="ph2">&lt;xref:System.Reflection.AmbiguousMatchException&gt;</ph> ausgelöst.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)">
          <source>Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format.</source>
          <target state="translated">Beginnend mit .NET Framework, Version 2.0, gibt diese Methode Sicherheitsattribute aus, wenn die Attribute in das neue Metadatenformat gespeichert werden.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)">
          <source>Assemblies compiled with version 2.0 or later use the new format.</source>
          <target state="translated">Mit Version 2.0 oder höher kompilierte Assemblys verwenden Sie das neue Format.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)">
          <source>Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</source>
          <target state="translated">Dynamische Assemblys und Assemblys, die mit früheren Versionen von .NET Framework kompiliert verwenden die alte XML-Format.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)">
          <source>See <bpt id="p1">[</bpt>Emitting Declarative Security Attributes<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</source>
          <target state="translated">Finden Sie unter <bpt id="p1">[</bpt>Ausgeben von deklarativen Sicherheitsattribute<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)">
          <source>The following code example illustrates the use of the <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph> method taking an <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> as a parameter.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht die Verwendung von der <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph> Methode Aufnahme einer <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> als Parameter.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> ist nicht von <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph> abgeleitet.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)">
          <source>More than one of the requested attributes was found.</source>
          <target state="translated">Es wurden mehrere der erforderlichen Attribute gefunden.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> class that describes a constructor, event, field, method, or property member of a class.</source>
          <target state="translated">Ein Objekt, das aus der <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph>-Klasse abgeleitet wurde und einen Konstruktor-, Ereignis-, Feld-, Methoden- oder Eigenschaftenmember einer Klasse beschreibt.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Der Typ des benutzerdefinierten Attributs oder ein Basistyp, nach dem gesucht werden soll.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source>Retrieves a custom attribute applied to a member of a type.</source>
          <target state="translated">Ruft ein benutzerdefiniertes Attribut ab, das auf den Member eines Typs angewendet wird.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source>Parameters specify the member, and the type of the custom attribute to search for.</source>
          <target state="translated">Parameter geben den Member und den Typ des zu suchenden benutzerdefinierten Attributs an.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source>A reference to the single custom attribute of type <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> that is applied to <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if there is no such attribute.</source>
          <target state="translated">Ein Verweis auf das einzige benutzerdefinierte Attribut vom Typ <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph>, das für <ph id="ph2">&lt;paramref name="element" /&gt;</ph> übernommen wird, oder <ph id="ph3">&lt;see langword="null" /&gt;</ph>, wenn kein solches Attribut vorhanden ist.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source>A match is determined in the same way described in the Return Value section of <ph id="ph1">&lt;xref:System.Type.IsAssignableFrom%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Eine Übereinstimmung wird bestimmt, auf die gleiche Weise, die in den Rückgabewert Abschnitt beschriebene <ph id="ph1">&lt;xref:System.Type.IsAssignableFrom%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source>Starting with the .NET Framework version 2.0, this method returns security attributes on types, methods, and constructors if the attributes are stored in the new metadata format.</source>
          <target state="translated">Beginnend mit .NET Framework, Version 2.0, gibt diese Methode auf Typen, Methoden und Konstruktoren Sicherheitsattribute zurück, wenn die Attribute in das neue Metadatenformat gespeichert werden.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source>Assemblies compiled with version 2.0 or later use the new format.</source>
          <target state="translated">Mit Version 2.0 oder höher kompilierte Assemblys verwenden Sie das neue Format.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source>Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</source>
          <target state="translated">Dynamische Assemblys und Assemblys, die mit früheren Versionen von .NET Framework kompiliert verwenden die alte XML-Format.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source>See <bpt id="p1">[</bpt>Emitting Declarative Security Attributes<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</source>
          <target state="translated">Finden Sie unter <bpt id="p1">[</bpt>Ausgeben von deklarativen Sicherheitsattribute<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source>The following code example illustrates the use of the <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph> method taking a <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> as a parameter.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht die Verwendung von der <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph> Methode Aufnahme einer <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> als Parameter.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> ist nicht von <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph> abgeleitet.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> is not a constructor, method, property, event, type, or field.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> ist kein Konstruktor, keine Methode, keine Eigenschaft, kein Ereignis, kein Typ und kein Feld.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source>More than one of the requested attributes was found.</source>
          <target state="translated">Es wurden mehrere der erforderlichen Attribute gefunden.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source>A custom attribute type cannot be loaded.</source>
          <target state="translated">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph> class that describes a portable executable file.</source>
          <target state="translated">Ein Objekt, das von der <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph>-Klasse abgeleitet wurde und eine übertragbare ausführbare Datei (Portable Executable, PE) beschreibt.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Der Typ des benutzerdefinierten Attributs oder ein Basistyp, nach dem gesucht werden soll.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)">
          <source>Retrieves a custom attribute applied to a module.</source>
          <target state="translated">Ruft ein benutzerdefiniertes Attribut ab, das auf ein Modul angewendet wird.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)">
          <source>Parameters specify the module, and the type of the custom attribute to search for.</source>
          <target state="translated">Parameter geben das Modul und den Typ des zu suchenden benutzerdefinierten Attributs an.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)">
          <source>A reference to the single custom attribute of type <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> that is applied to <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if there is no such attribute.</source>
          <target state="translated">Ein Verweis auf das einzige benutzerdefinierte Attribut vom Typ <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph>, das für <ph id="ph2">&lt;paramref name="element" /&gt;</ph> übernommen wird, oder <ph id="ph3">&lt;see langword="null" /&gt;</ph>, wenn kein solches Attribut vorhanden ist.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)">
          <source>The following code example illustrates the use of the <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph> method taking a <ph id="ph2">&lt;xref:System.Reflection.Module&gt;</ph> as a parameter.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht die Verwendung von der <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph> Methode Aufnahme einer <ph id="ph2">&lt;xref:System.Reflection.Module&gt;</ph> als Parameter.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> ist nicht von <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph> abgeleitet.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)">
          <source>More than one of the requested attributes was found.</source>
          <target state="translated">Es wurden mehrere der erforderlichen Attribute gefunden.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterInfo" /&gt;</ph> class that describes a parameter of a member of a class.</source>
          <target state="translated">Ein Objekt, das von der <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterInfo" /&gt;</ph>-Klasse abgeleitet wurde und einen Parameter eines Klassenmembers beschreibt.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Der Typ des benutzerdefinierten Attributs oder ein Basistyp, nach dem gesucht werden soll.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)">
          <source>Retrieves a custom attribute applied to a method parameter.</source>
          <target state="translated">Ruft ein benutzerdefiniertes Attribut ab, das auf einen Methodenparameter angewendet wird.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)">
          <source>Parameters specify the method parameter, and the type of the custom attribute to search for.</source>
          <target state="translated">Parameter geben den Methodenparameter und den Typ des zu suchenden benutzerdefinierten Attributs an.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)">
          <source>A reference to the single custom attribute of type <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> that is applied to <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if there is no such attribute.</source>
          <target state="translated">Ein Verweis auf das einzige benutzerdefinierte Attribut vom Typ <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph>, das für <ph id="ph2">&lt;paramref name="element" /&gt;</ph> übernommen wird, oder <ph id="ph3">&lt;see langword="null" /&gt;</ph>, wenn kein solches Attribut vorhanden ist.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)">
          <source>If <ph id="ph1">`element`</ph> represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.</source>
          <target state="translated">Wenn <ph id="ph1">`element`</ph> stellt einen Parameter in einer Methode dar, der ein abgeleiteter Typ, der Rückgabewert enthält die vererbbaren benutzerdefinierten Attribute, die auf den gleichen Parameter in der überschriebenen Basismethoden angewendet.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)">
          <source>The following code example defines a custom parameter <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> class and applies the custom attribute to a method in a derived class and the base of the derived class.</source>
          <target state="translated">Das folgende Codebeispiel definiert einen benutzerdefinierten Parameter <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> Klasse und das benutzerdefinierte Attribut an eine Methode in einer abgeleiteten Klasse und die Basis der abgeleiteten Klasse angewendet.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)">
          <source>The example shows the use of the <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph> method to return the attributes.</source>
          <target state="translated">Das Beispiel zeigt die Verwendung der <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph> Methode, um die Attribute zurückzugeben.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> ist nicht von <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph> abgeleitet.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)">
          <source>More than one of the requested attributes was found.</source>
          <target state="translated">Es wurden mehrere der erforderlichen Attribute gefunden.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)">
          <source>A custom attribute type cannot be loaded.</source>
          <target state="translated">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> class that describes a reusable collection of modules.</source>
          <target state="translated">Ein von der <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>-Klasse abgeleitetes Objekt, das eine wiederverwendbare Auflistung von Modulen beschreibt.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Der Typ des benutzerdefinierten Attributs oder ein Basistyp, nach dem gesucht werden soll.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>This parameter is ignored, and does not affect the operation of this method.</source>
          <target state="translated">Dieser Parameter wird ignoriert und wirkt sich nicht auf die Funktionsweise dieser Methode aus.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>Retrieves a custom attribute applied to an assembly.</source>
          <target state="translated">Ruft ein benutzerdefiniertes Attribut ab, das auf eine Assembly angewendet wird.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>Parameters specify the assembly, the type of the custom attribute to search for, and an ignored search option.</source>
          <target state="translated">Parameter geben die Assembly und den Typ des zu suchenden benutzerdefinierten Attributs und eine ignorierte Suchoption an.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>A reference to the single custom attribute of type <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> that is applied to <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if there is no such attribute.</source>
          <target state="translated">Ein Verweis auf das einzige benutzerdefinierte Attribut vom Typ <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph>, das für <ph id="ph2">&lt;paramref name="element" /&gt;</ph> übernommen wird, oder <ph id="ph3">&lt;see langword="null" /&gt;</ph>, wenn kein solches Attribut vorhanden ist.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format.</source>
          <target state="translated">Beginnend mit .NET Framework, Version 2.0, gibt diese Methode Sicherheitsattribute aus, wenn die Attribute in das neue Metadatenformat gespeichert werden.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>Assemblies compiled with version 2.0 or later use the new format.</source>
          <target state="translated">Mit Version 2.0 oder höher kompilierte Assemblys verwenden Sie das neue Format.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</source>
          <target state="translated">Dynamische Assemblys und Assemblys, die mit früheren Versionen von .NET Framework kompiliert verwenden die alte XML-Format.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>See <bpt id="p1">[</bpt>Emitting Declarative Security Attributes<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</source>
          <target state="translated">Finden Sie unter <bpt id="p1">[</bpt>Ausgeben von deklarativen Sicherheitsattribute<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>The following code example illustrates the use of the <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph> method taking an <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> as a parameter.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht die Verwendung von der <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph> Methode Aufnahme einer <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> als Parameter.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> ist nicht von <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph> abgeleitet.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>More than one of the requested attributes was found.</source>
          <target state="translated">Es wurden mehrere der erforderlichen Attribute gefunden.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> class that describes a constructor, event, field, method, or property member of a class.</source>
          <target state="translated">Ein Objekt, das aus der <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph>-Klasse abgeleitet wurde und einen Konstruktor-, Ereignis-, Feld-, Methoden- oder Eigenschaftenmember einer Klasse beschreibt.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Der Typ des benutzerdefinierten Attributs oder ein Basistyp, nach dem gesucht werden soll.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, specifies to also search the ancestors of <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept> for custom attributes.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;see langword="true" /&gt;</ph>, wird angegeben, dass auch die früheren Versionen von <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept> hinsichtlich benutzerdefinierter Attribute durchsucht werden sollen.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>Retrieves a custom attribute applied to a member of a type.</source>
          <target state="translated">Ruft ein benutzerdefiniertes Attribut ab, das auf den Member eines Typs angewendet wird.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>Parameters specify the member, the type of the custom attribute to search for, and whether to search ancestors of the member.</source>
          <target state="translated">Parameter geben den Member und den Typ des zu suchenden benutzerdefinierten Attributs an und außerdem, ob auch frühere Versionen des Members gesucht werden sollen.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>A reference to the single custom attribute of type <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> that is applied to <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if there is no such attribute.</source>
          <target state="translated">Ein Verweis auf das einzige benutzerdefinierte Attribut vom Typ <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph>, das für <ph id="ph2">&lt;paramref name="element" /&gt;</ph> übernommen wird, oder <ph id="ph3">&lt;see langword="null" /&gt;</ph>, wenn kein solches Attribut vorhanden ist.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>Starting with the .NET Framework version 2.0, this method returns security attributes on types, methods, and constructors if the attributes are stored in the new metadata format.</source>
          <target state="translated">Beginnend mit .NET Framework, Version 2.0, gibt diese Methode auf Typen, Methoden und Konstruktoren Sicherheitsattribute zurück, wenn die Attribute in das neue Metadatenformat gespeichert werden.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>Assemblies compiled with version 2.0 or later use the new format.</source>
          <target state="translated">Mit Version 2.0 oder höher kompilierte Assemblys verwenden Sie das neue Format.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</source>
          <target state="translated">Dynamische Assemblys und Assemblys, die mit früheren Versionen von .NET Framework kompiliert verwenden die alte XML-Format.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>See <bpt id="p1">[</bpt>Emitting Declarative Security Attributes<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</source>
          <target state="translated">Finden Sie unter <bpt id="p1">[</bpt>Ausgeben von deklarativen Sicherheitsattribute<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>The following code example illustrates the use of the <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph> method taking a <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> as a parameter.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht die Verwendung von der <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph> Methode Aufnahme einer <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> als Parameter.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> ist nicht von <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph> abgeleitet.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> is not a constructor, method, property, event, type, or field.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> ist kein Konstruktor, keine Methode, keine Eigenschaft, kein Ereignis, kein Typ und kein Feld.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>More than one of the requested attributes was found.</source>
          <target state="translated">Es wurden mehrere der erforderlichen Attribute gefunden.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>A custom attribute type cannot be loaded.</source>
          <target state="translated">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph> class that describes a portable executable file.</source>
          <target state="translated">Ein Objekt, das von der <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph>-Klasse abgeleitet wurde und eine übertragbare ausführbare Datei (Portable Executable, PE) beschreibt.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Der Typ des benutzerdefinierten Attributs oder ein Basistyp, nach dem gesucht werden soll.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)">
          <source>This parameter is ignored, and does not affect the operation of this method.</source>
          <target state="translated">Dieser Parameter wird ignoriert und wirkt sich nicht auf die Funktionsweise dieser Methode aus.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)">
          <source>Retrieves a custom attribute applied to a module.</source>
          <target state="translated">Ruft ein benutzerdefiniertes Attribut ab, das auf ein Modul angewendet wird.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)">
          <source>Parameters specify the module, the type of the custom attribute to search for, and an ignored search option.</source>
          <target state="translated">Parameter geben das Modul und den Typ des zu suchenden benutzerdefinierten Attributs und eine ignorierte Suchoption an.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)">
          <source>A reference to the single custom attribute of type <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> that is applied to <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if there is no such attribute.</source>
          <target state="translated">Ein Verweis auf das einzige benutzerdefinierte Attribut vom Typ <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph>, das für <ph id="ph2">&lt;paramref name="element" /&gt;</ph> übernommen wird, oder <ph id="ph3">&lt;see langword="null" /&gt;</ph>, wenn kein solches Attribut vorhanden ist.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)">
          <source>The following code example illustrates the use of the <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph> method taking a <ph id="ph2">&lt;xref:System.Reflection.Module&gt;</ph> as a parameter.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht die Verwendung von der <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph> Methode Aufnahme einer <ph id="ph2">&lt;xref:System.Reflection.Module&gt;</ph> als Parameter.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> ist nicht von <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph> abgeleitet.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)">
          <source>More than one of the requested attributes was found.</source>
          <target state="translated">Es wurden mehrere der erforderlichen Attribute gefunden.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterInfo" /&gt;</ph> class that describes a parameter of a member of a class.</source>
          <target state="translated">Ein Objekt, das von der <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterInfo" /&gt;</ph>-Klasse abgeleitet wurde und einen Parameter eines Klassenmembers beschreibt.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Der Typ des benutzerdefinierten Attributs oder ein Basistyp, nach dem gesucht werden soll.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, specifies to also search the ancestors of <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept> for custom attributes.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;see langword="true" /&gt;</ph>, wird angegeben, dass auch die früheren Versionen von <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept> hinsichtlich benutzerdefinierter Attribute durchsucht werden sollen.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>Retrieves a custom attribute applied to a method parameter.</source>
          <target state="translated">Ruft ein benutzerdefiniertes Attribut ab, das auf einen Methodenparameter angewendet wird.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>Parameters specify the method parameter, the type of the custom attribute to search for, and whether to search ancestors of the method parameter.</source>
          <target state="translated">Parameter geben den Methodenparameter und den Typ des zu suchenden benutzerdefinierten Attributs an und außerdem, ob auch frühere Versionen des Methodenparameters gesucht werden sollen.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>A reference to the single custom attribute of type <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> that is applied to <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if there is no such attribute.</source>
          <target state="translated">Ein Verweis auf das einzige benutzerdefinierte Attribut vom Typ <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph>, das für <ph id="ph2">&lt;paramref name="element" /&gt;</ph> übernommen wird, oder <ph id="ph3">&lt;see langword="null" /&gt;</ph>, wenn kein solches Attribut vorhanden ist.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>If <ph id="ph1">`element`</ph> represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.</source>
          <target state="translated">Wenn <ph id="ph1">`element`</ph> stellt einen Parameter in einer Methode dar, der ein abgeleiteter Typ, der Rückgabewert enthält die vererbbaren benutzerdefinierten Attribute, die auf den gleichen Parameter in der überschriebenen Basismethoden angewendet.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>The following code example defines a custom parameter <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> class and applies the custom attribute to a method in a derived class and the base of the derived class.</source>
          <target state="translated">Das folgende Codebeispiel definiert einen benutzerdefinierten Parameter <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> Klasse und das benutzerdefinierte Attribut an eine Methode in einer abgeleiteten Klasse und die Basis der abgeleiteten Klasse angewendet.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>The example shows the use of the <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph> method to return the attributes.</source>
          <target state="translated">Das Beispiel zeigt die Verwendung der <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph> Methode, um die Attribute zurückzugeben.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> ist nicht von <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph> abgeleitet.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>More than one of the requested attributes was found.</source>
          <target state="translated">Es wurden mehrere der erforderlichen Attribute gefunden.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>A custom attribute type cannot be loaded.</source>
          <target state="translated">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="T:System.Attribute">
          <source>Retrieves an array of the custom attributes applied to an assembly, module, type member, or method parameter.</source>
          <target state="translated">Ruft ein Array der benutzerdefinierten Attribute ab, die auf eine Assembly, ein Modul, einen Typmember oder einen Methodenparameter angewendet werden.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> class that describes a reusable collection of modules.</source>
          <target state="translated">Ein von der <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>-Klasse abgeleitetes Objekt, das eine wiederverwendbare Auflistung von Modulen beschreibt.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly)">
          <source>Retrieves an array of the custom attributes applied to an assembly.</source>
          <target state="translated">Ruft ein Array der benutzerdefinierten Attribute ab, die auf eine Assembly angewendet werden.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly)">
          <source>A parameter specifies the assembly.</source>
          <target state="translated">Ein Parameter gibt die Assembly an.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that contains the custom attributes applied to <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, or an empty array if no such custom attributes exist.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>-Array mit den benutzerdefinierten Attributen, die für <ph id="ph2">&lt;paramref name="element" /&gt;</ph> übernommen werden, oder ein leeres Array, wenn keine benutzerdefinierten Attribute vorhanden sind.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly)">
          <source>Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format.</source>
          <target state="translated">Beginnend mit .NET Framework, Version 2.0, gibt diese Methode Sicherheitsattribute aus, wenn die Attribute in das neue Metadatenformat gespeichert werden.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly)">
          <source>Assemblies compiled with version 2.0 or later use the new format.</source>
          <target state="translated">Mit Version 2.0 oder höher kompilierte Assemblys verwenden Sie das neue Format.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly)">
          <source>Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</source>
          <target state="translated">Dynamische Assemblys und Assemblys, die mit früheren Versionen von .NET Framework kompiliert verwenden die alte XML-Format.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly)">
          <source>See <bpt id="p1">[</bpt>Emitting Declarative Security Attributes<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</source>
          <target state="translated">Finden Sie unter <bpt id="p1">[</bpt>Ausgeben von deklarativen Sicherheitsattribute<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly)">
          <source>The following example retrieves the custom attributes found in the current assembly.</source>
          <target state="translated">Im folgende Beispiel ruft die benutzerdefinierten Attribute der aktuellen Assembly ab.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> class that describes a constructor, event, field, method, or property member of a class.</source>
          <target state="translated">Ein Objekt, das aus der <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph>-Klasse abgeleitet wurde und einen Konstruktor-, Ereignis-, Feld-, Methoden- oder Eigenschaftenmember einer Klasse beschreibt.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source>Retrieves an array of the custom attributes applied to a member of a type.</source>
          <target state="translated">Ruft ein Array der benutzerdefinierten Attribute ab, die auf den Member eines Typs angewendet werden.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source>A parameter specifies the member.</source>
          <target state="translated">Ein Parameter gibt den Member an.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that contains the custom attributes applied to <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, or an empty array if no such custom attributes exist.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>-Array mit den benutzerdefinierten Attributen, die für <ph id="ph2">&lt;paramref name="element" /&gt;</ph> übernommen werden, oder ein leeres Array, wenn keine benutzerdefinierten Attribute vorhanden sind.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source>The return value contains the custom attributes for ancestors of <ph id="ph1">`element`</ph>.</source>
          <target state="translated">Der Rückgabewert enthält die benutzerdefinierten Attribute für frühere Versionen von <ph id="ph1">`element`</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source>Starting with the .NET Framework version 2.0, this method returns security attributes on methods, constructors, and types if the attributes are stored in the new metadata format.</source>
          <target state="translated">Beginnend mit .NET Framework, Version 2.0, gibt diese Methode auf Typen, Methoden und Konstruktoren Sicherheitsattribute zurück, wenn die Attribute in das neue Metadatenformat gespeichert werden.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source>Assemblies compiled with version 2.0 or later use the new format.</source>
          <target state="translated">Mit Version 2.0 oder höher kompilierte Assemblys verwenden Sie das neue Format.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source>Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</source>
          <target state="translated">Dynamische Assemblys und Assemblys, die mit früheren Versionen von .NET Framework kompiliert verwenden die alte XML-Format.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source>See <bpt id="p1">[</bpt>Emitting Declarative Security Attributes<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</source>
          <target state="translated">Finden Sie unter <bpt id="p1">[</bpt>Ausgeben von deklarativen Sicherheitsattribute<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> as a parameter.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht die Verwendung von <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph>unter Berücksichtigung einer <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> als Parameter.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> is not a constructor, method, property, event, type, or field.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> ist kein Konstruktor, keine Methode, keine Eigenschaft, kein Ereignis, kein Typ und kein Feld.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source>A custom attribute type cannot be loaded.</source>
          <target state="translated">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph> class that describes a portable executable file.</source>
          <target state="translated">Ein Objekt, das von der <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph>-Klasse abgeleitet wurde und eine übertragbare ausführbare Datei (Portable Executable, PE) beschreibt.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module)">
          <source>Retrieves an array of the custom attributes applied to a module.</source>
          <target state="translated">Ruft ein Array der benutzerdefinierten Attribute ab, die auf ein Modul angewendet werden.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module)">
          <source>A parameter specifies the module.</source>
          <target state="translated">Ein Parameter gibt das Modul an.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that contains the custom attributes applied to <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, or an empty array if no such custom attributes exist.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>-Array mit den benutzerdefinierten Attributen, die für <ph id="ph2">&lt;paramref name="element" /&gt;</ph> übernommen werden, oder ein leeres Array, wenn keine benutzerdefinierten Attribute vorhanden sind.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.Module&gt;</ph> as a parameter.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht die Verwendung von <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>unter Berücksichtigung einer <ph id="ph2">&lt;xref:System.Reflection.Module&gt;</ph> als Parameter.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterInfo" /&gt;</ph> class that describes a parameter of a member of a class.</source>
          <target state="translated">Ein Objekt, das von der <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterInfo" /&gt;</ph>-Klasse abgeleitet wurde und einen Parameter eines Klassenmembers beschreibt.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)">
          <source>Retrieves an array of the custom attributes applied to a method parameter.</source>
          <target state="translated">Ruft ein Array der benutzerdefinierten Attribute ab, die auf einen Methodenparameter angewendet werden.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)">
          <source>A parameter specifies the method parameter.</source>
          <target state="translated">Ein Parameter gibt den Methodenparameter an.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that contains the custom attributes applied to <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, or an empty array if no such custom attributes exist.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>-Array mit den benutzerdefinierten Attributen, die für <ph id="ph2">&lt;paramref name="element" /&gt;</ph> übernommen werden, oder ein leeres Array, wenn keine benutzerdefinierten Attribute vorhanden sind.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)">
          <source>If <ph id="ph1">`element`</ph> represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.</source>
          <target state="translated">Wenn <ph id="ph1">`element`</ph> stellt einen Parameter in einer Methode dar, der ein abgeleiteter Typ, der Rückgabewert enthält die vererbbaren benutzerdefinierten Attribute, die auf den gleichen Parameter in der überschriebenen Basismethoden angewendet.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> as a parameter.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht die Verwendung von <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>unter Berücksichtigung einer <ph id="ph2">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> als Parameter.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)">
          <source>A custom attribute type cannot be loaded.</source>
          <target state="translated">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> class that describes a reusable collection of modules.</source>
          <target state="translated">Ein von der <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>-Klasse abgeleitetes Objekt, das eine wiederverwendbare Auflistung von Modulen beschreibt.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)">
          <source>This parameter is ignored, and does not affect the operation of this method.</source>
          <target state="translated">Dieser Parameter wird ignoriert und wirkt sich nicht auf die Funktionsweise dieser Methode aus.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)">
          <source>Retrieves an array of the custom attributes applied to an assembly.</source>
          <target state="translated">Ruft ein Array der benutzerdefinierten Attribute ab, die auf eine Assembly angewendet werden.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)">
          <source>Parameters specify the assembly, and an ignored search option.</source>
          <target state="translated">Parameter geben die Assembly und eine ignorierte Suchoption an.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that contains the custom attributes applied to <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, or an empty array if no such custom attributes exist.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>-Array mit den benutzerdefinierten Attributen, die für <ph id="ph2">&lt;paramref name="element" /&gt;</ph> übernommen werden, oder ein leeres Array, wenn keine benutzerdefinierten Attribute vorhanden sind.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)">
          <source>Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format.</source>
          <target state="translated">Beginnend mit .NET Framework, Version 2.0, gibt diese Methode Sicherheitsattribute aus, wenn die Attribute in das neue Metadatenformat gespeichert werden.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)">
          <source>Assemblies compiled with version 2.0 or later use the new format.</source>
          <target state="translated">Mit Version 2.0 oder höher kompilierte Assemblys verwenden Sie das neue Format.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)">
          <source>Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</source>
          <target state="translated">Dynamische Assemblys und Assemblys, die mit früheren Versionen von .NET Framework kompiliert verwenden die alte XML-Format.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)">
          <source>See <bpt id="p1">[</bpt>Emitting Declarative Security Attributes<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</source>
          <target state="translated">Finden Sie unter <bpt id="p1">[</bpt>Ausgeben von deklarativen Sicherheitsattribute<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, taking an <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> as a parameter.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht die Verwendung von <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, wobei ein <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> als Parameter.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> class that describes a reusable collection of modules.</source>
          <target state="translated">Ein von der <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>-Klasse abgeleitetes Objekt, das eine wiederverwendbare Auflistung von Modulen beschreibt.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Der Typ des benutzerdefinierten Attributs oder ein Basistyp, nach dem gesucht werden soll.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)">
          <source>Retrieves an array of the custom attributes applied to an assembly.</source>
          <target state="translated">Ruft ein Array der benutzerdefinierten Attribute ab, die auf eine Assembly angewendet werden.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)">
          <source>Parameters specify the assembly, and the type of the custom attribute to search for.</source>
          <target state="translated">Parameter geben die Assembly und den Typ des zu suchenden benutzerdefinierten Attributs an.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that contains the custom attributes of type <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> applied to <ph id="ph3">&lt;paramref name="element" /&gt;</ph>, or an empty array if no such custom attributes exist.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>-Array mit den benutzerdefinierten Attributen vom Typ <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph>, die für <ph id="ph3">&lt;paramref name="element" /&gt;</ph> übernommen werden, oder ein leeres Array, wenn keine benutzerdefinierten Attribute vorhanden sind.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)">
          <source>Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format.</source>
          <target state="translated">Beginnend mit .NET Framework, Version 2.0, gibt diese Methode Sicherheitsattribute aus, wenn die Attribute in das neue Metadatenformat gespeichert werden.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)">
          <source>Assemblies compiled with version 2.0 or later use the new format.</source>
          <target state="translated">Mit Version 2.0 oder höher kompilierte Assemblys verwenden Sie das neue Format.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)">
          <source>Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</source>
          <target state="translated">Dynamische Assemblys und Assemblys, die mit früheren Versionen von .NET Framework kompiliert verwenden die alte XML-Format.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)">
          <source>See <bpt id="p1">[</bpt>Emitting Declarative Security Attributes<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</source>
          <target state="translated">Finden Sie unter <bpt id="p1">[</bpt>Ausgeben von deklarativen Sicherheitsattribute<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, taking an <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> as a parameter.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht die Verwendung von <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, wobei ein <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> als Parameter.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> ist nicht von <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph> abgeleitet.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> class that describes a constructor, event, field, method, or property member of a class.</source>
          <target state="translated">Ein Objekt, das aus der <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph>-Klasse abgeleitet wurde und einen Konstruktor-, Ereignis-, Feld-, Methoden- oder Eigenschaftenmember einer Klasse beschreibt.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, specifies to also search the ancestors of <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept> for custom attributes.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;see langword="true" /&gt;</ph>, wird angegeben, dass auch die früheren Versionen von <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept> hinsichtlich benutzerdefinierter Attribute durchsucht werden sollen.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)">
          <source>Retrieves an array of the custom attributes applied to a member of a type.</source>
          <target state="translated">Ruft ein Array der benutzerdefinierten Attribute ab, die auf den Member eines Typs angewendet werden.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)">
          <source>Parameters specify the member, the type of the custom attribute to search for, and whether to search ancestors of the member.</source>
          <target state="translated">Parameter geben den Member und den Typ des zu suchenden benutzerdefinierten Attributs an und außerdem, ob auch frühere Versionen des Members gesucht werden sollen.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that contains the custom attributes applied to <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, or an empty array if no such custom attributes exist.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>-Array mit den benutzerdefinierten Attributen, die für <ph id="ph2">&lt;paramref name="element" /&gt;</ph> übernommen werden, oder ein leeres Array, wenn keine benutzerdefinierten Attribute vorhanden sind.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)">
          <source>The return value contains the custom attributes for ancestors of <ph id="ph1">`element`</ph> if <ph id="ph2">`inherit`</ph> is <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Der Rückgabewert enthält die benutzerdefinierten Attribute für frühere Versionen von <ph id="ph1">`element`</ph> Wenn <ph id="ph2">`inherit`</ph> ist <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)">
          <source>Starting with the .NET Framework version 2.0, this method returns security attributes on methods, constructors, and types if the attributes are stored in the new metadata format.</source>
          <target state="translated">Beginnend mit .NET Framework, Version 2.0, gibt diese Methode auf Typen, Methoden und Konstruktoren Sicherheitsattribute zurück, wenn die Attribute in das neue Metadatenformat gespeichert werden.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)">
          <source>Assemblies compiled with version 2.0 or later use the new format.</source>
          <target state="translated">Mit Version 2.0 oder höher kompilierte Assemblys verwenden Sie das neue Format.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)">
          <source>Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</source>
          <target state="translated">Dynamische Assemblys und Assemblys, die mit früheren Versionen von .NET Framework kompiliert verwenden die alte XML-Format.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)">
          <source>See <bpt id="p1">[</bpt>Emitting Declarative Security Attributes<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</source>
          <target state="translated">Finden Sie unter <bpt id="p1">[</bpt>Ausgeben von deklarativen Sicherheitsattribute<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> as a parameter.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht die Verwendung von <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>unter Berücksichtigung einer <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> als Parameter.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> is not a constructor, method, property, event, type, or field.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> ist kein Konstruktor, keine Methode, keine Eigenschaft, kein Ereignis, kein Typ und kein Feld.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)">
          <source>A custom attribute type cannot be loaded.</source>
          <target state="translated">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> class that describes a constructor, event, field, method, or property member of a class.</source>
          <target state="translated">Ein Objekt, das aus der <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph>-Klasse abgeleitet wurde und einen Konstruktor-, Ereignis-, Feld-, Methoden- oder Eigenschaftenmember einer Klasse beschreibt.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Der Typ des benutzerdefinierten Attributs oder ein Basistyp, nach dem gesucht werden soll.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
          <source>Retrieves an array of the custom attributes applied to a member of a type.</source>
          <target state="translated">Ruft ein Array der benutzerdefinierten Attribute ab, die auf den Member eines Typs angewendet werden.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
          <source>Parameters specify the member, and the type of the custom attribute to search for.</source>
          <target state="translated">Parameter geben den Member und den Typ des zu suchenden benutzerdefinierten Attributs an.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that contains the custom attributes of type <ph id="ph2">&lt;paramref name="type" /&gt;</ph> applied to <ph id="ph3">&lt;paramref name="element" /&gt;</ph>, or an empty array if no such custom attributes exist.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>-Array mit den benutzerdefinierten Attributen vom Typ <ph id="ph2">&lt;paramref name="type" /&gt;</ph>, die für <ph id="ph3">&lt;paramref name="element" /&gt;</ph> übernommen werden, oder ein leeres Array, wenn keine benutzerdefinierten Attribute vorhanden sind.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
          <source>The return value contains the custom attributes for ancestors of <ph id="ph1">`element`</ph>.</source>
          <target state="translated">Der Rückgabewert enthält die benutzerdefinierten Attribute für frühere Versionen von <ph id="ph1">`element`</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
          <source>Starting with the .NET Framework version 2.0, this method returns security attributes on methods, constructors, and types if the attributes are stored in the new metadata format.</source>
          <target state="translated">Beginnend mit .NET Framework, Version 2.0, gibt diese Methode auf Typen, Methoden und Konstruktoren Sicherheitsattribute zurück, wenn die Attribute in das neue Metadatenformat gespeichert werden.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
          <source>Assemblies compiled with version 2.0 or later use the new format.</source>
          <target state="translated">Mit Version 2.0 oder höher kompilierte Assemblys verwenden Sie das neue Format.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
          <source>Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</source>
          <target state="translated">Dynamische Assemblys und Assemblys, die mit früheren Versionen von .NET Framework kompiliert verwenden die alte XML-Format.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
          <source>See <bpt id="p1">[</bpt>Emitting Declarative Security Attributes<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</source>
          <target state="translated">Finden Sie unter <bpt id="p1">[</bpt>Ausgeben von deklarativen Sicherheitsattribute<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> as a parameter.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht die Verwendung von <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph>unter Berücksichtigung einer <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> als Parameter.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="type" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="type" /&gt;</ph> ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> ist nicht von <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph> abgeleitet.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> is not a constructor, method, property, event, type, or field.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> ist kein Konstruktor, keine Methode, keine Eigenschaft, kein Ereignis, kein Typ und kein Feld.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
          <source>A custom attribute type cannot be loaded.</source>
          <target state="translated">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph> class that describes a portable executable file.</source>
          <target state="translated">Ein Objekt, das von der <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph>-Klasse abgeleitet wurde und eine übertragbare ausführbare Datei (Portable Executable, PE) beschreibt.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)">
          <source>This parameter is ignored, and does not affect the operation of this method.</source>
          <target state="translated">Dieser Parameter wird ignoriert und wirkt sich nicht auf die Funktionsweise dieser Methode aus.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)">
          <source>Retrieves an array of the custom attributes applied to a module.</source>
          <target state="translated">Ruft ein Array der benutzerdefinierten Attribute ab, die auf ein Modul angewendet werden.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)">
          <source>Parameters specify the module, and an ignored search option.</source>
          <target state="translated">Parameter geben das Modul und eine ignorierte Suchoption an.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that contains the custom attributes applied to <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, or an empty array if no such custom attributes exist.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>-Array mit den benutzerdefinierten Attributen, die für <ph id="ph2">&lt;paramref name="element" /&gt;</ph> übernommen werden, oder ein leeres Array, wenn keine benutzerdefinierten Attribute vorhanden sind.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)">
          <source>The return value contains the custom attributes for ancestors of <ph id="ph1">`element`</ph> if <ph id="ph2">`inherit`</ph> is <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Der Rückgabewert enthält die benutzerdefinierten Attribute für frühere Versionen von <ph id="ph1">`element`</ph> Wenn <ph id="ph2">`inherit`</ph> ist <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.Module&gt;</ph> as a parameter.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht die Verwendung von <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>unter Berücksichtigung einer <ph id="ph2">&lt;xref:System.Reflection.Module&gt;</ph> als Parameter.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph> class that describes a portable executable file.</source>
          <target state="translated">Ein Objekt, das von der <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph>-Klasse abgeleitet wurde und eine übertragbare ausführbare Datei (Portable Executable, PE) beschreibt.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Der Typ des benutzerdefinierten Attributs oder ein Basistyp, nach dem gesucht werden soll.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)">
          <source>Retrieves an array of the custom attributes applied to a module.</source>
          <target state="translated">Ruft ein Array der benutzerdefinierten Attribute ab, die auf ein Modul angewendet werden.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)">
          <source>Parameters specify the module, and the type of the custom attribute to search for.</source>
          <target state="translated">Parameter geben das Modul und den Typ des zu suchenden benutzerdefinierten Attributs an.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that contains the custom attributes of type <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> applied to <ph id="ph3">&lt;paramref name="element" /&gt;</ph>, or an empty array if no such custom attributes exist.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>-Array mit den benutzerdefinierten Attributen vom Typ <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph>, die für <ph id="ph3">&lt;paramref name="element" /&gt;</ph> übernommen werden, oder ein leeres Array, wenn keine benutzerdefinierten Attribute vorhanden sind.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.Module&gt;</ph> as a parameter.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht die Verwendung von <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>unter Berücksichtigung einer <ph id="ph2">&lt;xref:System.Reflection.Module&gt;</ph> als Parameter.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> ist nicht von <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph> abgeleitet.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterInfo" /&gt;</ph> class that describes a parameter of a member of a class.</source>
          <target state="translated">Ein Objekt, das von der <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterInfo" /&gt;</ph>-Klasse abgeleitet wurde und einen Parameter eines Klassenmembers beschreibt.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, specifies to also search the ancestors of <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept> for custom attributes.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;see langword="true" /&gt;</ph>, wird angegeben, dass auch die früheren Versionen von <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept> hinsichtlich benutzerdefinierter Attribute durchsucht werden sollen.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)">
          <source>Retrieves an array of the custom attributes applied to a method parameter.</source>
          <target state="translated">Ruft ein Array der benutzerdefinierten Attribute ab, die auf einen Methodenparameter angewendet werden.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)">
          <source>Parameters specify the method parameter, and whether to search ancestors of the method parameter.</source>
          <target state="translated">Parameter geben den Methodenparameter an, und außerdem, ob frühere Versionen des Methodenparameters gesucht werden sollen.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that contains the custom attributes applied to <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, or an empty array if no such custom attributes exist.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>-Array mit den benutzerdefinierten Attributen, die für <ph id="ph2">&lt;paramref name="element" /&gt;</ph> übernommen werden, oder ein leeres Array, wenn keine benutzerdefinierten Attribute vorhanden sind.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)">
          <source>If <ph id="ph1">`element`</ph> represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.</source>
          <target state="translated">Wenn <ph id="ph1">`element`</ph> stellt einen Parameter in einer Methode dar, der ein abgeleiteter Typ, der Rückgabewert enthält die vererbbaren benutzerdefinierten Attribute, die auf den gleichen Parameter in der überschriebenen Basismethoden angewendet.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> as a parameter.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht die Verwendung von <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>unter Berücksichtigung einer <ph id="ph2">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> als Parameter.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Reflection.ParameterInfo.Member" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="element" /&gt;</ph> is <ph id="ph3">&lt;see langword="null." /&gt;</ph><ph id="ph4">&lt;see langword="" /&gt;</ph></source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="P:System.Reflection.ParameterInfo.Member" /&gt;</ph>-Eigenschaft von <ph id="ph2">&lt;paramref name="element" /&gt;</ph> ist <ph id="ph3">&lt;see langword="null." /&gt;</ph><ph id="ph4">&lt;see langword="" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)">
          <source>A custom attribute type cannot be loaded.</source>
          <target state="translated">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterInfo" /&gt;</ph> class that describes a parameter of a member of a class.</source>
          <target state="translated">Ein Objekt, das von der <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterInfo" /&gt;</ph>-Klasse abgeleitet wurde und einen Parameter eines Klassenmembers beschreibt.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Der Typ des benutzerdefinierten Attributs oder ein Basistyp, nach dem gesucht werden soll.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)">
          <source>Retrieves an array of the custom attributes applied to a method parameter.</source>
          <target state="translated">Ruft ein Array der benutzerdefinierten Attribute ab, die auf einen Methodenparameter angewendet werden.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)">
          <source>Parameters specify the method parameter, and the type of the custom attribute to search for.</source>
          <target state="translated">Parameter geben den Methodenparameter und den Typ des zu suchenden benutzerdefinierten Attributs an.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that contains the custom attributes of type <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> applied to <ph id="ph3">&lt;paramref name="element" /&gt;</ph>, or an empty array if no such custom attributes exist.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>-Array mit den benutzerdefinierten Attributen vom Typ <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph>, die für <ph id="ph3">&lt;paramref name="element" /&gt;</ph> übernommen werden, oder ein leeres Array, wenn keine benutzerdefinierten Attribute vorhanden sind.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)">
          <source>If <ph id="ph1">`element`</ph> represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.</source>
          <target state="translated">Wenn <ph id="ph1">`element`</ph> stellt einen Parameter in einer Methode dar, der ein abgeleiteter Typ, der Rückgabewert enthält die vererbbaren benutzerdefinierten Attribute, die auf den gleichen Parameter in der überschriebenen Basismethoden angewendet.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> as a parameter.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht die Verwendung von <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>unter Berücksichtigung einer <ph id="ph2">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> als Parameter.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> ist nicht von <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph> abgeleitet.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)">
          <source>A custom attribute type cannot be loaded.</source>
          <target state="translated">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> class that describes a reusable collection of modules.</source>
          <target state="translated">Ein von der <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>-Klasse abgeleitetes Objekt, das eine wiederverwendbare Auflistung von Modulen beschreibt.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Der Typ des benutzerdefinierten Attributs oder ein Basistyp, nach dem gesucht werden soll.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>This parameter is ignored, and does not affect the operation of this method.</source>
          <target state="translated">Dieser Parameter wird ignoriert und wirkt sich nicht auf die Funktionsweise dieser Methode aus.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>Retrieves an array of the custom attributes applied to an assembly.</source>
          <target state="translated">Ruft ein Array der benutzerdefinierten Attribute ab, die auf eine Assembly angewendet werden.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>Parameters specify the assembly, the type of the custom attribute to search for, and an ignored search option.</source>
          <target state="translated">Parameter geben die Assembly und den Typ des zu suchenden benutzerdefinierten Attributs und eine ignorierte Suchoption an.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that contains the custom attributes of type <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> applied to <ph id="ph3">&lt;paramref name="element" /&gt;</ph>, or an empty array if no such custom attributes exist.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>-Array mit den benutzerdefinierten Attributen vom Typ <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph>, die für <ph id="ph3">&lt;paramref name="element" /&gt;</ph> übernommen werden, oder ein leeres Array, wenn keine benutzerdefinierten Attribute vorhanden sind.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format.</source>
          <target state="translated">Beginnend mit .NET Framework, Version 2.0, gibt diese Methode Sicherheitsattribute aus, wenn die Attribute in das neue Metadatenformat gespeichert werden.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>Assemblies compiled with version 2.0 or later use the new format.</source>
          <target state="translated">Mit Version 2.0 oder höher kompilierte Assemblys verwenden Sie das neue Format.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</source>
          <target state="translated">Dynamische Assemblys und Assemblys, die mit früheren Versionen von .NET Framework kompiliert verwenden die alte XML-Format.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>See <bpt id="p1">[</bpt>Emitting Declarative Security Attributes<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</source>
          <target state="translated">Finden Sie unter <bpt id="p1">[</bpt>Ausgeben von deklarativen Sicherheitsattribute<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, taking an <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> as a parameter.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht die Verwendung von <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, wobei ein <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> als Parameter.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> ist nicht von <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph> abgeleitet.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> class that describes a constructor, event, field, method, or property member of a class.</source>
          <target state="translated">Ein Objekt, das aus der <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph>-Klasse abgeleitet wurde und einen Konstruktor-, Ereignis-, Feld-, Methoden- oder Eigenschaftenmember einer Klasse beschreibt.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Der Typ des benutzerdefinierten Attributs oder ein Basistyp, nach dem gesucht werden soll.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, specifies to also search the ancestors of <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept> for custom attributes.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;see langword="true" /&gt;</ph>, wird angegeben, dass auch die früheren Versionen von <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept> hinsichtlich benutzerdefinierter Attribute durchsucht werden sollen.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>Retrieves an array of the custom attributes applied to a member of a type.</source>
          <target state="translated">Ruft ein Array der benutzerdefinierten Attribute ab, die auf den Member eines Typs angewendet werden.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>Parameters specify the member, the type of the custom attribute to search for, and whether to search ancestors of the member.</source>
          <target state="translated">Parameter geben den Member und den Typ des zu suchenden benutzerdefinierten Attributs an und außerdem, ob auch frühere Versionen des Members gesucht werden sollen.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that contains the custom attributes of type <ph id="ph2">&lt;paramref name="type" /&gt;</ph> applied to <ph id="ph3">&lt;paramref name="element" /&gt;</ph>, or an empty array if no such custom attributes exist.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>-Array mit den benutzerdefinierten Attributen vom Typ <ph id="ph2">&lt;paramref name="type" /&gt;</ph>, die für <ph id="ph3">&lt;paramref name="element" /&gt;</ph> übernommen werden, oder ein leeres Array, wenn keine benutzerdefinierten Attribute vorhanden sind.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>The return value contains the custom attributes for ancestors of <ph id="ph1">`element`</ph> if <ph id="ph2">`inherit`</ph> is <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Der Rückgabewert enthält die benutzerdefinierten Attribute für frühere Versionen von <ph id="ph1">`element`</ph> Wenn <ph id="ph2">`inherit`</ph> ist <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>Starting with the .NET Framework version 2.0, this method returns security attributes on methods, constructors, and types if the attributes are stored in the new metadata format.</source>
          <target state="translated">Beginnend mit .NET Framework, Version 2.0, gibt diese Methode auf Typen, Methoden und Konstruktoren Sicherheitsattribute zurück, wenn die Attribute in das neue Metadatenformat gespeichert werden.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>Assemblies compiled with version 2.0 or later use the new format.</source>
          <target state="translated">Mit Version 2.0 oder höher kompilierte Assemblys verwenden Sie das neue Format.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</source>
          <target state="translated">Dynamische Assemblys und Assemblys, die mit früheren Versionen von .NET Framework kompiliert verwenden die alte XML-Format.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>See <bpt id="p1">[</bpt>Emitting Declarative Security Attributes<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</source>
          <target state="translated">Finden Sie unter <bpt id="p1">[</bpt>Ausgeben von deklarativen Sicherheitsattribute<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> as a parameter.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht die Verwendung von <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>unter Berücksichtigung einer <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> als Parameter.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="type" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="type" /&gt;</ph> ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> ist nicht von <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph> abgeleitet.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> is not a constructor, method, property, event, type, or field.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> ist kein Konstruktor, keine Methode, keine Eigenschaft, kein Ereignis, kein Typ und kein Feld.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>A custom attribute type cannot be loaded.</source>
          <target state="translated">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph> class that describes a portable executable file.</source>
          <target state="translated">Ein Objekt, das von der <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph>-Klasse abgeleitet wurde und eine übertragbare ausführbare Datei (Portable Executable, PE) beschreibt.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Der Typ des benutzerdefinierten Attributs oder ein Basistyp, nach dem gesucht werden soll.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)">
          <source>This parameter is ignored, and does not affect the operation of this method.</source>
          <target state="translated">Dieser Parameter wird ignoriert und wirkt sich nicht auf die Funktionsweise dieser Methode aus.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)">
          <source>Retrieves an array of the custom attributes applied to a module.</source>
          <target state="translated">Ruft ein Array der benutzerdefinierten Attribute ab, die auf ein Modul angewendet werden.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)">
          <source>Parameters specify the module, the type of the custom attribute to search for, and an ignored search option.</source>
          <target state="translated">Parameter geben das Modul und den Typ des zu suchenden benutzerdefinierten Attributs und eine ignorierte Suchoption an.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that contains the custom attributes of type <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> applied to <ph id="ph3">&lt;paramref name="element" /&gt;</ph>, or an empty array if no such custom attributes exist.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>-Array mit den benutzerdefinierten Attributen vom Typ <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph>, die für <ph id="ph3">&lt;paramref name="element" /&gt;</ph> übernommen werden, oder ein leeres Array, wenn keine benutzerdefinierten Attribute vorhanden sind.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)">
          <source>The return value contains the custom attributes for ancestors of <ph id="ph1">`element`</ph> if <ph id="ph2">`inherit`</ph> is <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Der Rückgabewert enthält die benutzerdefinierten Attribute für frühere Versionen von <ph id="ph1">`element`</ph> Wenn <ph id="ph2">`inherit`</ph> ist <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.Module&gt;</ph> as a parameter.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht die Verwendung von <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>unter Berücksichtigung einer <ph id="ph2">&lt;xref:System.Reflection.Module&gt;</ph> als Parameter.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> ist nicht von <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph> abgeleitet.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterInfo" /&gt;</ph> class that describes a parameter of a member of a class.</source>
          <target state="translated">Ein Objekt, das von der <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterInfo" /&gt;</ph>-Klasse abgeleitet wurde und einen Parameter eines Klassenmembers beschreibt.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Der Typ des benutzerdefinierten Attributs oder ein Basistyp, nach dem gesucht werden soll.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, specifies to also search the ancestors of <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept> for custom attributes.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;see langword="true" /&gt;</ph>, wird angegeben, dass auch die früheren Versionen von <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept> hinsichtlich benutzerdefinierter Attribute durchsucht werden sollen.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>Retrieves an array of the custom attributes applied to a method parameter.</source>
          <target state="translated">Ruft ein Array der benutzerdefinierten Attribute ab, die auf einen Methodenparameter angewendet werden.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>Parameters specify the method parameter, the type of the custom attribute to search for, and whether to search ancestors of the method parameter.</source>
          <target state="translated">Parameter geben den Methodenparameter und den Typ des zu suchenden benutzerdefinierten Attributs an und außerdem, ob auch frühere Versionen des Methodenparameters gesucht werden sollen.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that contains the custom attributes of type <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> applied to <ph id="ph3">&lt;paramref name="element" /&gt;</ph>, or an empty array if no such custom attributes exist.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>-Array mit den benutzerdefinierten Attributen vom Typ <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph>, die für <ph id="ph3">&lt;paramref name="element" /&gt;</ph> übernommen werden, oder ein leeres Array, wenn keine benutzerdefinierten Attribute vorhanden sind.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>If <ph id="ph1">`element`</ph> represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.</source>
          <target state="translated">Wenn <ph id="ph1">`element`</ph> stellt einen Parameter in einer Methode dar, der ein abgeleiteter Typ, der Rückgabewert enthält die vererbbaren benutzerdefinierten Attribute, die auf den gleichen Parameter in der überschriebenen Basismethoden angewendet.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> as a parameter.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht die Verwendung von <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>unter Berücksichtigung einer <ph id="ph2">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> als Parameter.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> ist nicht von <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph> abgeleitet.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>A custom attribute type cannot be loaded.</source>
          <target state="translated">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetHashCode">
          <source>Returns the hash code for this instance.</source>
          <target state="translated">Gibt den Hashcode für diese Instanz zurück.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetHashCode">
          <source>The following code example illustrates the use of <ph id="ph1">&lt;xref:System.Attribute.GetHashCode%2A&gt;</ph> in the context of <ph id="ph2">&lt;xref:System.Attribute&gt;</ph>.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht die Verwendung von <ph id="ph1">&lt;xref:System.Attribute.GetHashCode%2A&gt;</ph> im Kontext des <ph id="ph2">&lt;xref:System.Attribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefaultAttribute">
          <source>When overridden in a derived class, indicates whether the value of this instance is the default value for the derived class.</source>
          <target state="translated">Gibt beim Überschreiben in einer abgeleiteten Klasse an, ob der Wert der Instanz der Standardwert für die abgeleitete Klasse ist.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefaultAttribute">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this instance is the default attribute for the class; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn diese Instanz das Standardattribut für die Klasse ist, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefaultAttribute">
          <source>The default implementation of this class returns <ph id="ph1">`false`</ph>, and must be implemented in the derived class to be useful to that class.</source>
          <target state="translated">Gibt die standardmäßige Implementierung dieser Klasse <ph id="ph1">`false`</ph>, und in der abgeleiteten Klasse sind aussagekräftig sind für diese Klasse implementiert werden muss.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefaultAttribute">
          <source>The implementation of this method in a derived class compares the value of this instance to a standard default value, then returns a Boolean value that indicates whether the value of this instance is equal to the standard value.</source>
          <target state="translated">Die Implementierung dieser Methode in einer abgeleiteten Klasse vergleicht der Wert dieser Instanz mit einem standard-Standardwert, dann gibt einen booleschen Wert, der angibt, ob der Wert dieser Instanz des Standardwerts entspricht.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefaultAttribute">
          <source>The standard value is typically coded as a constant in the implementation, or stored programmatically in a field used by the implementation.</source>
          <target state="translated">Des Standardwerts ist in der Regel als eine Konstante in der Implementierung oder programmgesteuert in einem Feld, das von der Implementierung verwendet gespeichert.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefaultAttribute">
          <source>The following code example illustrates the use of <ph id="ph1">&lt;xref:System.Attribute.IsDefaultAttribute%2A&gt;</ph>.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht die Verwendung von <ph id="ph1">&lt;xref:System.Attribute.IsDefaultAttribute%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="T:System.Attribute">
          <source>Determines whether any custom attributes of a specified type are applied to an assembly, module, type member, or method parameter.</source>
          <target state="translated">Bestimmt, ob benutzerdefinierte Attribute eines angegebenen Typs auf eine Assembly, ein Modul, einen Typmember oder einen Methodenparameter angewendet werden.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> class that describes a reusable collection of modules.</source>
          <target state="translated">Ein von der <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>-Klasse abgeleitetes Objekt, das eine wiederverwendbare Auflistung von Modulen beschreibt.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Der Typ des benutzerdefinierten Attributs oder ein Basistyp, nach dem gesucht werden soll.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)">
          <source>Determines whether any custom attributes are applied to an assembly.</source>
          <target state="translated">Bestimmt, ob benutzerdefinierte Attribute auf eine Assembly angewendet werden.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)">
          <source>Parameters specify the assembly, and the type of the custom attribute to search for.</source>
          <target state="translated">Parameter geben die Assembly und den Typ des zu suchenden benutzerdefinierten Attributs an.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a custom attribute of type <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is applied to <ph id="ph3">&lt;paramref name="element" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn ein benutzerdefiniertes Attribut des Typs <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> auf <ph id="ph3">&lt;paramref name="element" /&gt;</ph> angewendet wird; andernfalls <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)">
          <source>Starting with the .NET Framework version 2.0, this method returns <ph id="ph1">`true`</ph> if the assembly has security attributes stored in the new metadata format.</source>
          <target state="translated">Beginnend mit .NET Framework, Version 2.0, gibt diese Methode zurück <ph id="ph1">`true`</ph> verfügt die Assembly Sicherheitsattribute, die in den neuen Metadatenformat gespeichert.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)">
          <source>Assemblies compiled with version 2.0 or later use the new format.</source>
          <target state="translated">Mit Version 2.0 oder höher kompilierte Assemblys verwenden Sie das neue Format.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)">
          <source>Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</source>
          <target state="translated">Dynamische Assemblys und Assemblys, die mit früheren Versionen von .NET Framework kompiliert verwenden die alte XML-Format.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)">
          <source>See <bpt id="p1">[</bpt>Emitting Declarative Security Attributes<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</source>
          <target state="translated">Finden Sie unter <bpt id="p1">[</bpt>Ausgeben von deklarativen Sicherheitsattribute<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)">
          <source>The following code example illustrates the use of <ph id="ph1">&lt;xref:System.Attribute.IsDefined%2A&gt;</ph>, taking an <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> as a parameter.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht die Verwendung von <ph id="ph1">&lt;xref:System.Attribute.IsDefined%2A&gt;</ph>, wobei ein <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> als Parameter.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> ist nicht von <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph> abgeleitet.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> class that describes a constructor, event, field, method, type, or property member of a class.</source>
          <target state="translated">Ein Objekt, das aus der <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph>-Klasse abgeleitet wurde und einen Konstruktor-, Ereignis-, Feld-, Methoden-, Typ- oder Eigenschaftenmember einer Klasse beschreibt.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Der Typ des benutzerdefinierten Attributs oder ein Basistyp, nach dem gesucht werden soll.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)">
          <source>Determines whether any custom attributes are applied to a member of a type.</source>
          <target state="translated">Bestimmt, ob benutzerdefinierte Attribute auf einen Member eines Typs angewendet werden.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)">
          <source>Parameters specify the member, and the type of the custom attribute to search for.</source>
          <target state="translated">Parameter geben den Member und den Typ des zu suchenden benutzerdefinierten Attributs an.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a custom attribute of type <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is applied to <ph id="ph3">&lt;paramref name="element" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn ein benutzerdefiniertes Attribut des Typs <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> auf <ph id="ph3">&lt;paramref name="element" /&gt;</ph> angewendet wird; andernfalls <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)">
          <source>The ancestors of <ph id="ph1">`element`</ph> are searched for custom attributes.</source>
          <target state="translated">Die Vorgänger des <ph id="ph1">`element`</ph> für den benutzerdefinierten Attributen durchsucht werden.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)">
          <source>Starting with the .NET Framework version 2.0, this method returns <ph id="ph1">`true`</ph> if a type, method, or constructor has security attributes stored in the new metadata format.</source>
          <target state="translated">Beginnend mit .NET Framework, Version 2.0, gibt diese Methode zurück <ph id="ph1">`true`</ph> verfügt ein Typ, eine Methode oder ein Konstruktor Sicherheitsattribute, die in den neuen Metadatenformat gespeichert.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)">
          <source>Assemblies compiled with version 2.0 or later use the new format.</source>
          <target state="translated">Mit Version 2.0 oder höher kompilierte Assemblys verwenden Sie das neue Format.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)">
          <source>Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</source>
          <target state="translated">Dynamische Assemblys und Assemblys, die mit früheren Versionen von .NET Framework kompiliert verwenden die alte XML-Format.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)">
          <source>See <bpt id="p1">[</bpt>Emitting Declarative Security Attributes<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</source>
          <target state="translated">Finden Sie unter <bpt id="p1">[</bpt>Ausgeben von deklarativen Sicherheitsattribute<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)">
          <source>The following code example illustrates the use of <ph id="ph1">&lt;xref:System.Attribute.IsDefined%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> as a parameter.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht die Verwendung von <ph id="ph1">&lt;xref:System.Attribute.IsDefined%2A&gt;</ph>unter Berücksichtigung einer <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> als Parameter.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> ist nicht von <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph> abgeleitet.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> is not a constructor, method, property, event, type, or field.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> ist kein Konstruktor, keine Methode, keine Eigenschaft, kein Ereignis, kein Typ und kein Feld.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph> class that describes a portable executable file.</source>
          <target state="translated">Ein Objekt, das von der <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph>-Klasse abgeleitet wurde und eine übertragbare ausführbare Datei (Portable Executable, PE) beschreibt.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Der Typ des benutzerdefinierten Attributs oder ein Basistyp, nach dem gesucht werden soll.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type)">
          <source>Determines whether any custom attributes of a specified type are applied to a module.</source>
          <target state="translated">Ermittelt, ob benutzerdefinierte Attribute eines bestimmten Typs auf ein Modul angewendet werden.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type)">
          <source>Parameters specify the module, and the type of the custom attribute to search for.</source>
          <target state="translated">Parameter geben das Modul und den Typ des zu suchenden benutzerdefinierten Attributs an.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a custom attribute of type <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is applied to <ph id="ph3">&lt;paramref name="element" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn ein benutzerdefiniertes Attribut des Typs <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> auf <ph id="ph3">&lt;paramref name="element" /&gt;</ph> angewendet wird; andernfalls <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type)">
          <source>The ancestors of <ph id="ph1">`element`</ph> are not searched for custom attributes.</source>
          <target state="translated">Die Vorgänger des <ph id="ph1">`element`</ph> nicht für den benutzerdefinierten Attributen durchsucht werden.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type)">
          <source>The following code example illustrates the use of <ph id="ph1">&lt;xref:System.Attribute.IsDefined%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.Module&gt;</ph> as a parameter.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht die Verwendung von <ph id="ph1">&lt;xref:System.Attribute.IsDefined%2A&gt;</ph>unter Berücksichtigung einer <ph id="ph2">&lt;xref:System.Reflection.Module&gt;</ph> als Parameter.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> ist nicht von <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph> abgeleitet.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterInfo" /&gt;</ph> class that describes a parameter of a member of a class.</source>
          <target state="translated">Ein Objekt, das von der <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterInfo" /&gt;</ph>-Klasse abgeleitet wurde und einen Parameter eines Klassenmembers beschreibt.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Der Typ des benutzerdefinierten Attributs oder ein Basistyp, nach dem gesucht werden soll.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)">
          <source>Determines whether any custom attributes are applied to a method parameter.</source>
          <target state="translated">Bestimmt, ob benutzerdefinierte Attribute auf einen Methodenparameter angewendet werden.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)">
          <source>Parameters specify the method parameter, and the type of the custom attribute to search for.</source>
          <target state="translated">Parameter geben den Methodenparameter und den Typ des zu suchenden benutzerdefinierten Attributs an.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a custom attribute of type <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is applied to <ph id="ph3">&lt;paramref name="element" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn ein benutzerdefiniertes Attribut des Typs <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> auf <ph id="ph3">&lt;paramref name="element" /&gt;</ph> angewendet wird; andernfalls <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)">
          <source>The ancestors of <ph id="ph1">`element`</ph> are searched for custom attributes.</source>
          <target state="translated">Die Vorgänger des <ph id="ph1">`element`</ph> für den benutzerdefinierten Attributen durchsucht werden.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)">
          <source>The following code example illustrates the use of <ph id="ph1">&lt;xref:System.Attribute.IsDefined%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> as a parameter.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht die Verwendung von <ph id="ph1">&lt;xref:System.Attribute.IsDefined%2A&gt;</ph>unter Berücksichtigung einer <ph id="ph2">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> als Parameter.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> ist nicht von <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph> abgeleitet.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> class that describes a reusable collection of modules.</source>
          <target state="translated">Ein von der <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>-Klasse abgeleitetes Objekt, das eine wiederverwendbare Auflistung von Modulen beschreibt.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Der Typ des benutzerdefinierten Attributs oder ein Basistyp, nach dem gesucht werden soll.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>This parameter is ignored, and does not affect the operation of this method.</source>
          <target state="translated">Dieser Parameter wird ignoriert und wirkt sich nicht auf die Funktionsweise dieser Methode aus.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>Determines whether any custom attributes are applied to an assembly.</source>
          <target state="translated">Bestimmt, ob benutzerdefinierte Attribute auf eine Assembly angewendet werden.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>Parameters specify the assembly, the type of the custom attribute to search for, and an ignored search option.</source>
          <target state="translated">Parameter geben die Assembly und den Typ des zu suchenden benutzerdefinierten Attributs und eine ignorierte Suchoption an.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a custom attribute of type <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is applied to <ph id="ph3">&lt;paramref name="element" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn ein benutzerdefiniertes Attribut des Typs <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> auf <ph id="ph3">&lt;paramref name="element" /&gt;</ph> angewendet wird; andernfalls <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>Starting with the .NET Framework version 2.0, this method returns <ph id="ph1">`true`</ph> if the assembly has security attributes stored in the new metadata format.</source>
          <target state="translated">Beginnend mit .NET Framework, Version 2.0, gibt diese Methode zurück <ph id="ph1">`true`</ph> verfügt die Assembly Sicherheitsattribute, die in den neuen Metadatenformat gespeichert.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>Assemblies compiled with version 2.0 or later use the new format.</source>
          <target state="translated">Mit Version 2.0 oder höher kompilierte Assemblys verwenden Sie das neue Format.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</source>
          <target state="translated">Dynamische Assemblys und Assemblys, die mit früheren Versionen von .NET Framework kompiliert verwenden die alte XML-Format.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>See <bpt id="p1">[</bpt>Emitting Declarative Security Attributes<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</source>
          <target state="translated">Finden Sie unter <bpt id="p1">[</bpt>Ausgeben von deklarativen Sicherheitsattribute<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>The following code example illustrates the use of <ph id="ph1">&lt;xref:System.Attribute.IsDefined%2A&gt;</ph>, taking an <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> as a parameter.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht die Verwendung von <ph id="ph1">&lt;xref:System.Attribute.IsDefined%2A&gt;</ph>, wobei ein <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> als Parameter.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> ist nicht von <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph> abgeleitet.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> class that describes a constructor, event, field, method, type, or property member of a class.</source>
          <target state="translated">Ein Objekt, das aus der <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph>-Klasse abgeleitet wurde und einen Konstruktor-, Ereignis-, Feld-, Methoden-, Typ- oder Eigenschaftenmember einer Klasse beschreibt.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Der Typ des benutzerdefinierten Attributs oder ein Basistyp, nach dem gesucht werden soll.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, specifies to also search the ancestors of <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept> for custom attributes.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;see langword="true" /&gt;</ph>, wird angegeben, dass auch die früheren Versionen von <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept> hinsichtlich benutzerdefinierter Attribute durchsucht werden sollen.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>Determines whether any custom attributes are applied to a member of a type.</source>
          <target state="translated">Bestimmt, ob benutzerdefinierte Attribute auf einen Member eines Typs angewendet werden.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>Parameters specify the member, the type of the custom attribute to search for, and whether to search ancestors of the member.</source>
          <target state="translated">Parameter geben den Member und den Typ des zu suchenden benutzerdefinierten Attributs an und außerdem, ob auch frühere Versionen des Members gesucht werden sollen.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a custom attribute of type <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is applied to <ph id="ph3">&lt;paramref name="element" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn ein benutzerdefiniertes Attribut des Typs <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> auf <ph id="ph3">&lt;paramref name="element" /&gt;</ph> angewendet wird; andernfalls <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>Starting with the .NET Framework version 2.0, this method returns <ph id="ph1">`true`</ph> if a type, method, or constructor has security attributes stored in the new metadata format.</source>
          <target state="translated">Beginnend mit .NET Framework, Version 2.0, gibt diese Methode zurück <ph id="ph1">`true`</ph> verfügt ein Typ, eine Methode oder ein Konstruktor Sicherheitsattribute, die in den neuen Metadatenformat gespeichert.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>Assemblies compiled with version 2.0 or later use the new format.</source>
          <target state="translated">Mit Version 2.0 oder höher kompilierte Assemblys verwenden Sie das neue Format.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</source>
          <target state="translated">Dynamische Assemblys und Assemblys, die mit früheren Versionen von .NET Framework kompiliert verwenden die alte XML-Format.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>See <bpt id="p1">[</bpt>Emitting Declarative Security Attributes<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</source>
          <target state="translated">Finden Sie unter <bpt id="p1">[</bpt>Ausgeben von deklarativen Sicherheitsattribute<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>The following code example illustrates the use of <ph id="ph1">&lt;xref:System.Attribute.IsDefined%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> as a parameter.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht die Verwendung von <ph id="ph1">&lt;xref:System.Attribute.IsDefined%2A&gt;</ph>unter Berücksichtigung einer <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> als Parameter.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> ist nicht von <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph> abgeleitet.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> is not a constructor, method, property, event, type, or field.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> ist kein Konstruktor, keine Methode, keine Eigenschaft, kein Ereignis, kein Typ und kein Feld.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph> class that describes a portable executable file.</source>
          <target state="translated">Ein Objekt, das von der <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph>-Klasse abgeleitet wurde und eine übertragbare ausführbare Datei (Portable Executable, PE) beschreibt.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Der Typ des benutzerdefinierten Attributs oder ein Basistyp, nach dem gesucht werden soll.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)">
          <source>This parameter is ignored, and does not affect the operation of this method.</source>
          <target state="translated">Dieser Parameter wird ignoriert und wirkt sich nicht auf die Funktionsweise dieser Methode aus.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)">
          <source>Determines whether any custom attributes are applied to a module.</source>
          <target state="translated">Bestimmt, ob benutzerdefinierte Attribute auf ein Modul angewendet werden.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)">
          <source>Parameters specify the module, the type of the custom attribute to search for, and an ignored search option.</source>
          <target state="translated">Parameter geben das Modul und den Typ des zu suchenden benutzerdefinierten Attributs und eine ignorierte Suchoption an.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a custom attribute of type <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is applied to <ph id="ph3">&lt;paramref name="element" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn ein benutzerdefiniertes Attribut des Typs <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> auf <ph id="ph3">&lt;paramref name="element" /&gt;</ph> angewendet wird; andernfalls <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)">
          <source>This method ignores the <ph id="ph1">`inherit`</ph> parameter and does not search the ancestors of <ph id="ph2">`element`</ph> for custom attributes.</source>
          <target state="translated">Diese Methode ignoriert die <ph id="ph1">`inherit`</ph> Parameter und sucht nicht die Vorgänger des <ph id="ph2">`element`</ph> für benutzerdefinierte Attribute.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)">
          <source>The following code example illustrates the use of <ph id="ph1">&lt;xref:System.Attribute.IsDefined%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.Module&gt;</ph> as a parameter.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht die Verwendung von <ph id="ph1">&lt;xref:System.Attribute.IsDefined%2A&gt;</ph>unter Berücksichtigung einer <ph id="ph2">&lt;xref:System.Reflection.Module&gt;</ph> als Parameter.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> ist nicht von <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph> abgeleitet.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterInfo" /&gt;</ph> class that describes a parameter of a member of a class.</source>
          <target state="translated">Ein Objekt, das von der <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterInfo" /&gt;</ph>-Klasse abgeleitet wurde und einen Parameter eines Klassenmembers beschreibt.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Der Typ des benutzerdefinierten Attributs oder ein Basistyp, nach dem gesucht werden soll.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, specifies to also search the ancestors of <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept> for custom attributes.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;see langword="true" /&gt;</ph>, wird angegeben, dass auch die früheren Versionen von <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept> hinsichtlich benutzerdefinierter Attribute durchsucht werden sollen.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>Determines whether any custom attributes are applied to a method parameter.</source>
          <target state="translated">Bestimmt, ob benutzerdefinierte Attribute auf einen Methodenparameter angewendet werden.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>Parameters specify the method parameter, the type of the custom attribute to search for, and whether to search ancestors of the method parameter.</source>
          <target state="translated">Parameter geben den Methodenparameter und den Typ des zu suchenden benutzerdefinierten Attributs an und außerdem, ob auch frühere Versionen des Methodenparameters gesucht werden sollen.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a custom attribute of type <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is applied to <ph id="ph3">&lt;paramref name="element" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn ein benutzerdefiniertes Attribut des Typs <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> auf <ph id="ph3">&lt;paramref name="element" /&gt;</ph> angewendet wird; andernfalls <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>The following code example illustrates the use of <ph id="ph1">&lt;xref:System.Attribute.IsDefined%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> as a parameter.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht die Verwendung von <ph id="ph1">&lt;xref:System.Attribute.IsDefined%2A&gt;</ph>unter Berücksichtigung einer <ph id="ph2">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> als Parameter.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> ist nicht von <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph> abgeleitet.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> is not a method, constructor, or type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> ist keine Methode, kein Konstruktor oder kein Typ.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Attribute.Match(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to compare with this instance of <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, das mit dieser Instanz von <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph> verglichen werden soll.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Attribute.Match(System.Object)">
          <source>When overridden in a derived class, returns a value that indicates whether this instance equals a specified object.</source>
          <target state="translated">Beim Überschreiben in einer abgeleiteten Klasse wird ein Wert zurückgegeben, der angibt, ob diese Instanz einem bestimmten Objekt entspricht.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Attribute.Match(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this instance equals <ph id="ph2">&lt;paramref name="obj" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn diese Instanz <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> gleicht; andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Match(System.Object)">
          <source>This method determines if one <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> equals another.</source>
          <target state="translated">Diese Methode bestimmt, ob eine <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> gleich einem anderen.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Match(System.Object)">
          <source>Its default implementation is the same as <ph id="ph1">&lt;xref:System.Attribute.Equals%2A&gt;</ph>, which determines whether two attributes are of the same type and have the same field values.</source>
          <target state="translated">Die standardmäßige Implementierung entspricht dem <ph id="ph1">&lt;xref:System.Attribute.Equals%2A&gt;</ph>, der bestimmt, ob zwei Attribute den gleichen Typ aufweisen und die gleichen Feldwerte haben.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Match(System.Object)">
          <source>In general, the <ph id="ph1">&lt;xref:System.Attribute.Equals%2A&gt;</ph> method is intended to perform a standard test for reference or value equality.</source>
          <target state="translated">Im Allgemeinen die <ph id="ph1">&lt;xref:System.Attribute.Equals%2A&gt;</ph> Methode soll einen standard-Test für Verweis- oder Werttyp auf Gleichheit durchzuführen.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Match(System.Object)">
          <source>You can override the <ph id="ph1">&lt;xref:System.Attribute.Match%2A&gt;</ph> method when you want to perform a custom comparison for equality that is based on some criteria other than that two attribute instances are of the same type and have identifical values.</source>
          <target state="translated">Sie können außer Kraft setzen die <ph id="ph1">&lt;xref:System.Attribute.Match%2A&gt;</ph> Methode, wenn Sie möchten einen benutzerdefinierten Vergleich auf Gleichheit durchführen, die basiert auf bestimmte Kriterien außer, dass zwei Instanzen Attributgruppen vom selben Typ sind und Identifical Werte aufweisen.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Match(System.Object)">
          <source>For example, you can override the <ph id="ph1">&lt;xref:System.Attribute.Match%2A&gt;</ph> method to compare attributes in the following scenarios:</source>
          <target state="translated">Sie können z. B. überschreiben die <ph id="ph1">&lt;xref:System.Attribute.Match%2A&gt;</ph> Methode, um die Attribute in den folgenden Szenarien zu vergleichen:</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Match(System.Object)">
          <source>An attribute includes a bit field, and you consider two attribute instances equal if a particular bit is set.</source>
          <target state="translated">Ein Attribut enthält ein Bitfeld, und Sie berücksichtigen, dass zwei Attributinstanzen gleich, wenn ein bestimmtes Bit festgelegt ist.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Match(System.Object)">
          <source>For example, a <ph id="ph1">`NumericDisplay`</ph> attribute might include a bit field that indicates what numeric formats (such as binary, octal, decimal, and hexadecimal) a client supports.</source>
          <target state="translated">Angenommen, ein <ph id="ph1">`NumericDisplay`</ph> Attribut gehören ein Bitfeld, der angibt, welche numerische Formate (z. B. binäre, oktale, Dezimal und hexadezimal) ein Client unterstützt.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Match(System.Object)">
          <source>The overridden <ph id="ph1">&lt;xref:System.Attribute.Match%2A&gt;</ph> method might consider two instances equal if they support the same numeric format.</source>
          <target state="translated">Die überschriebene <ph id="ph1">&lt;xref:System.Attribute.Match%2A&gt;</ph> Methode ggf. die beiden Instanzen gleich, wenn sie das gleiche numerische Format unterstützen.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Match(System.Object)">
          <source>An attribute includes multiple fields that contain the same kind of information, or it contains an array in which values can be in any order.</source>
          <target state="translated">Ein Attribut enthält mehrere Felder, die die gleiche Art von Informationen enthalten, oder sie enthält ein Array, in der Werte in beliebiger Reihenfolge enthalten sein können.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Match(System.Object)">
          <source>For example, an <ph id="ph1">`Author`</ph> attribute might include multiple fields for author names.</source>
          <target state="translated">Angenommen, ein <ph id="ph1">`Author`</ph> Attribut möglicherweise mehrere Felder für Autorennamen enthalten.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Match(System.Object)">
          <source>The overridden <ph id="ph1">&lt;xref:System.Attribute.Match%2A&gt;</ph> method might consider two instances equal if they have the same authors regardless of whether each field is equal to the corresponding field.</source>
          <target state="translated">Die überschriebene <ph id="ph1">&lt;xref:System.Attribute.Match%2A&gt;</ph> Methode ggf. die beiden Instanzen gleich, wenn sie die gleichen Autoren unabhängig davon haben, ob jedes Feld das entsprechende Feld entspricht.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Match(System.Object)">
          <source>Example</source>
          <target state="translated">Beispiel</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Match(System.Object)">
          <source>The following example illustrates the use of <ph id="ph1">&lt;xref:System.Attribute.Match%2A&gt;</ph> to create a custom comparison method for attribute values.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die Verwendung von <ph id="ph1">&lt;xref:System.Attribute.Match%2A&gt;</ph> zum Erstellen einer benutzerdefinierten Vergleichsmethode für Attributwerte.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Match(System.Object)">
          <source>If defines an <ph id="ph1">`AuthorsAttribute`</ph> that internally contains a <ph id="ph2">`List&lt;String&gt;`</ph> that stores authors' names.</source>
          <target state="translated">Wenn definiert ein <ph id="ph1">`AuthorsAttribute`</ph> enthält, die intern eine <ph id="ph2">`List&lt;String&gt;`</ph> , Autoren Namen speichert.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Match(System.Object)">
          <source>Because the names can occur in any order in the list, it overrides the <ph id="ph1">&lt;xref:System.Attribute.Match%2A&gt;</ph> method to compare author names regardless of their position in the list.</source>
          <target state="translated">Da die Namen in der Liste in beliebiger Reihenfolge auftreten können, überschreibt die <ph id="ph1">&lt;xref:System.Attribute.Match%2A&gt;</ph> Methode, um die Autorennamen unabhängig von ihrer Position in der Liste verglichen werden soll.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Match(System.Object)">
          <source>Note the <ph id="ph1">&lt;xref:System.Attribute.Equals%2A&gt;</ph> method, which performs a test for value equality, returns different results from the <ph id="ph2">&lt;xref:System.Attribute.Match%2A&gt;</ph> method.</source>
          <target state="translated">Beachten Sie die <ph id="ph1">&lt;xref:System.Attribute.Equals%2A&gt;</ph> -Methode, die einen Test Wertgleichheit ausführt, gibt andere Ergebnisse aus der <ph id="ph2">&lt;xref:System.Attribute.Match%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>Reserved for future use.</source>
          <target state="translated">Für zukünftige Verwendung reserviert.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>Must be IID_NULL.</source>
          <target state="translated">Muss IID_NULL sein.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>Passed-in array of names to be mapped.</source>
          <target state="translated">Das übergebene Array von zuzuordnenden Namen.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>Count of the names to be mapped.</source>
          <target state="translated">Die Anzahl der zuzuordnenden Namen.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>The locale context in which to interpret the names.</source>
          <target state="translated">Der Gebietsschemakontext, in dem die Namen interpretiert werden sollen.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>Caller-allocated array that receives the IDs corresponding to the names.</source>
          <target state="translated">Das vom Aufrufer zugeordnete Array, das die IDs entsprechend den Namen empfängt.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>Maps a set of names to a corresponding set of dispatch identifiers.</source>
          <target state="translated">Ordnet eine Reihe von Namen einer entsprechenden Reihe von Dispatchbezeichnern zu.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>For more information about <ph id="ph1">`IDispatch::GetIDsOfNames`</ph>, see the MSDN Library.</source>
          <target state="translated">Weitere Informationen zu <ph id="ph1">`IDispatch::GetIDsOfNames`</ph>, finden Sie in der MSDN Library.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>Late-bound access using the COM <bpt id="p1">&lt;c&gt;</bpt>IDispatch<ept id="p1">&lt;/c&gt;</ept> interface is not supported.</source>
          <target state="translated">Spät gebundener Zugriff mithilfe der <bpt id="p1">&lt;c&gt;</bpt>IDispatch<ept id="p1">&lt;/c&gt;</ept>-Schnittstelle in COM wird nicht unterstützt.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <source>The type information to return.</source>
          <target state="translated">Die zurückzugebenden Typinformationen.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <source>The locale identifier for the type information.</source>
          <target state="translated">Der Gebietsschemabezeichner für die Typinformationen.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <source>Receives a pointer to the requested type information object.</source>
          <target state="translated">Empfängt einen Zeiger auf das angeforderte Objekt mit den Typinformationen.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <source>Retrieves the type information for an object, which can be used to get the type information for an interface.</source>
          <target state="translated">Ruft die Typinformationen für ein Objekt ab, mit deren Hilfe die Typinformationen für eine Schnittstelle abgerufen werden können.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <source>For more information about <ph id="ph1">`IDispatch::GetTypeInfo`</ph>, see the MSDN Library.</source>
          <target state="translated">Weitere Informationen zu <ph id="ph1">`IDispatch::GetTypeInfo`</ph>, finden Sie in der MSDN Library.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <source>Late-bound access using the COM <bpt id="p1">&lt;c&gt;</bpt>IDispatch<ept id="p1">&lt;/c&gt;</ept> interface is not supported.</source>
          <target state="translated">Spät gebundener Zugriff mithilfe der <bpt id="p1">&lt;c&gt;</bpt>IDispatch<ept id="p1">&lt;/c&gt;</ept>-Schnittstelle in COM wird nicht unterstützt.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
          <source>Points to a location that receives the number of type information interfaces provided by the object.</source>
          <target state="translated">Zeigt auf einen Speicherort, der die Anzahl der Schnittstellen mit Typinformationen empfängt, die vom Objekt bereitgestellt werden.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
          <source>Retrieves the number of type information interfaces that an object provides (either 0 or 1).</source>
          <target state="translated">Ruft die Anzahl der Schnittstellen mit Typinformationen ab, die von einem Objekt bereitgestellt werden (0 oder 1).</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
          <source>For more information about <ph id="ph1">`IDispatch::GetTypeInfoCount`</ph>, see the MSDN Library.</source>
          <target state="translated">Weitere Informationen zu <ph id="ph1">`IDispatch::GetTypeInfoCount`</ph>, finden Sie in der MSDN Library.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
          <source>Late-bound access using the COM <bpt id="p1">&lt;c&gt;</bpt>IDispatch<ept id="p1">&lt;/c&gt;</ept> interface is not supported.</source>
          <target state="translated">Spät gebundener Zugriff mithilfe der <bpt id="p1">&lt;c&gt;</bpt>IDispatch<ept id="p1">&lt;/c&gt;</ept>-Schnittstelle in COM wird nicht unterstützt.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>Identifies the member.</source>
          <target state="translated">Bezeichnet den Member.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>Reserved for future use.</source>
          <target state="translated">Für zukünftige Verwendung reserviert.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>Must be IID_NULL.</source>
          <target state="translated">Muss IID_NULL sein.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>The locale context in which to interpret arguments.</source>
          <target state="translated">Der Gebietsschemakontext, in dem Argumente interpretiert werden sollen.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>Flags describing the context of the call.</source>
          <target state="translated">Flags, die den Kontext des Aufrufs beschreiben.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</source>
          <target state="translated">Ein Zeiger auf eine Struktur, die ein Array von Argumenten und ein Array von Argument-DISPIDs für benannte Argumente sowie Zähler für die Anzahl der Elemente in jedem Array enthält.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>Pointer to the location where the result is to be stored.</source>
          <target state="translated">Ein Verweis auf den Speicherort, an dem das Ergebnis gespeichert werden soll.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>Pointer to a structure that contains exception information.</source>
          <target state="translated">Ein Zeiger auf eine Struktur mit Ausnahmeinformationen.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>The index of the first argument that has an error.</source>
          <target state="translated">Der Index des ersten Arguments mit einem Fehler.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>Provides access to properties and methods exposed by an object.</source>
          <target state="translated">Stellt den Zugriff auf von einem Objekt verfügbar gemachte Eigenschaften und Methoden bereit.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>For more information about <ph id="ph1">`IDispatch::Invoke`</ph>, see the MSDN Library.</source>
          <target state="translated">Weitere Informationen zu <ph id="ph1">`IDispatch::Invoke`</ph>, finden Sie in der MSDN Library.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>Late-bound access using the COM <bpt id="p1">&lt;c&gt;</bpt>IDispatch<ept id="p1">&lt;/c&gt;</ept> interface is not supported.</source>
          <target state="translated">Spät gebundener Zugriff mithilfe der <bpt id="p1">&lt;c&gt;</bpt>IDispatch<ept id="p1">&lt;/c&gt;</ept>-Schnittstelle in COM wird nicht unterstützt.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="P:System.Attribute.TypeId">
          <source>When implemented in a derived class, gets a unique identifier for this <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated">Ruft bei Implementierung in einer abgeleiteten Klasse einen eindeutigen Bezeichner für dieses <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> ab.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Attribute.TypeId">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that is a unique identifier for the attribute.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, das ein eindeutiger Bezeichner für dieses Attribut ist.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Attribute.TypeId">
          <source>As implemented, this identifier is merely the <ph id="ph1">&lt;xref:System.Type&gt;</ph> of the attribute.</source>
          <target state="translated">Bei Implementierung ist dieser Bezeichner lediglich die <ph id="ph1">&lt;xref:System.Type&gt;</ph> des Attributs.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Attribute.TypeId">
          <source>However, it is intended that the unique identifier be used to identify two attributes of the same type.</source>
          <target state="translated">Es ist jedoch vorgesehen, dass der eindeutige Bezeichner verwendet werden, um zwei Attribute vom gleichen Typ zu identifizieren.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Attribute.TypeId">
          <source>The following code example implements the <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> property in a custom parameter <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> class and shows its use.</source>
          <target state="translated">Das folgende Codebeispiel implementiert die <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> Eigenschaft eines benutzerdefinierten Parameters <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> Klasse und ihre Verwendung veranschaulicht.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>