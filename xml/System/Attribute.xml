<Type Name="Attribute" FullName="System.Attribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d670972821ff30f1662b041c4e0831dff268a546" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37729381" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Attribute : System.Runtime.InteropServices._Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Attribute extends System.Object implements class System.Runtime.InteropServices._Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Attribute" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Attribute&#xA;Implements _Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class Attribute abstract : System::Runtime::InteropServices::_Attribute" />
  <TypeSignature Language="F#" Value="type Attribute = class&#xA;    interface _Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._Attribute</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.All, AllowMultiple=false, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._Attribute))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="52cb3-101">Stellt die Basisklasse für benutzerdefinierte Attribute dar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="52cb3-101">Represents the base class for custom attributes.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52cb3-102">Die <xref:System.Attribute> Klasse ordnet Systeminformationen vordefinierte oder benutzerdefinierte Informationen eine benutzerdefinierte ein Target-Element.</span><span class="sxs-lookup"><span data-stu-id="52cb3-102">The <xref:System.Attribute> class associates predefined system information or user-defined custom information with a target element.</span></span> <span data-ttu-id="52cb3-103">Ein Zielelement kann es sich um eine Assembly, Klasse, Konstruktor, Delegat, Enumeration, Ereignis, Feld, -Schnittstelle, -Methode, portierbare ausführbare Datei Modul, Parameter, -Eigenschaft, Rückgabewert, Struktur oder ein anderes Attribut sein.</span><span class="sxs-lookup"><span data-stu-id="52cb3-103">A target element can be an assembly, class, constructor, delegate, enum, event, field, interface, method, portable executable file module, parameter, property, return value, struct, or another attribute.</span></span>  
  
 <span data-ttu-id="52cb3-104">Angaben, die durch ein Attribut ist auch bekannt als Metadaten.</span><span class="sxs-lookup"><span data-stu-id="52cb3-104">Information provided by an attribute is also known as metadata.</span></span> <span data-ttu-id="52cb3-105">Metadaten zur Laufzeit untersucht werden kann, von der Anwendung zu steuern, wie Ihre Anwendung Daten verarbeitet, oder vor der Laufzeit von externen Tools, um zu steuern wie die Anwendung selbst verarbeitet oder verwaltet werden.</span><span class="sxs-lookup"><span data-stu-id="52cb3-105">Metadata can be examined at run time by your application to control how your program processes data, or before run time by external tools to control how your application itself is processed or maintained.</span></span> <span data-ttu-id="52cb3-106">Z. B. .NET Framework verfügt über vordefinierte verwendet, um das Laufzeitverhalten zu steuern und einige Programmiersprachen Attributtypen zur Darstellung von Sprachfunktionen, die durch das allgemeine Typsystem in .NET Framework nicht direkt unterstützt.</span><span class="sxs-lookup"><span data-stu-id="52cb3-106">For example, the .NET Framework predefines and uses attribute types to control run-time behavior, and some programming languages use attribute types to represent language features not directly supported by the .NET Framework common type system.</span></span>  
  
 <span data-ttu-id="52cb3-107">Alle Attributtypen abgeleitet direkt oder indirekt die <xref:System.Attribute> Klasse.</span><span class="sxs-lookup"><span data-stu-id="52cb3-107">All attribute types derive directly or indirectly from the <xref:System.Attribute> class.</span></span> <span data-ttu-id="52cb3-108">Attribute können auf ein Target-Element angewendet werden. mehrere Attribute können auf den gleichen Target-Element angewendet werden. und Attribute von einem Element, das ein Target-Element abgeleitet geerbt werden können.</span><span class="sxs-lookup"><span data-stu-id="52cb3-108">Attributes can be applied to any target element; multiple attributes can be applied to the same target element; and attributes can be inherited by an element derived from a target element.</span></span> <span data-ttu-id="52cb3-109">Verwenden der <xref:System.AttributeTargets> Klasse, um das Zielelement anzugeben, der das Attribut angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="52cb3-109">Use the <xref:System.AttributeTargets> class to specify the target element to which the attribute is applied.</span></span>  
  
 <span data-ttu-id="52cb3-110">Die <xref:System.Attribute> Klasse stellt praktische Methoden zum Abrufen und benutzerdefinierte Attribute zu testen.</span><span class="sxs-lookup"><span data-stu-id="52cb3-110">The <xref:System.Attribute> class provides convenient methods to retrieve and test custom attributes.</span></span> <span data-ttu-id="52cb3-111">Weitere Informationen zum Verwenden von Attributen finden Sie unter [Anwenden von Attributen](~/docs/standard/attributes/applying-attributes.md) und [Attribute](~/docs/standard/attributes/index.md).</span><span class="sxs-lookup"><span data-stu-id="52cb3-111">For more information about using attributes, see [Applying Attributes](~/docs/standard/attributes/applying-attributes.md) and [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52cb3-112">Das folgende Codebeispiel veranschaulicht die Verwendung von <xref:System.Attribute>.</span><span class="sxs-lookup"><span data-stu-id="52cb3-112">The following code example demonstrates the usage of <xref:System.Attribute>.</span></span>  
  
 [!code-cpp[AnimalAttributes#1](~/samples/snippets/cpp/VS_Snippets_CLR/AnimalAttributes/CPP/customattribute.cpp#1)]
 [!code-csharp[AnimalAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR/AnimalAttributes/CS/customattribute.cs#1)]
 [!code-vb[AnimalAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AnimalAttributes/VB/customattribute.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="52cb3-113">Dieser Typ ist threadsicher.</span>
      <span class="sxs-lookup">
        <span data-stu-id="52cb3-113">This type is thread safe.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Attribute ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Attribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="52cb3-114">Initialisiert eine neue Instanz der <see cref="T:System.Attribute" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-114">Initializes a new instance of the <see cref="T:System.Attribute" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52cb3-115">Dieser Konstruktor wird nur durch abgeleitete Klassen aufgerufen <xref:System.Attribute>.</span><span class="sxs-lookup"><span data-stu-id="52cb3-115">This constructor is only called by classes that derive from <xref:System.Attribute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52cb3-116">Das folgende Codebeispiel zeigt die Definition eines benutzerdefinierten Parameters <xref:System.Attribute> Klasse und ihres Konstruktors.</span><span class="sxs-lookup"><span data-stu-id="52cb3-116">The following code example shows the definition of a custom parameter <xref:System.Attribute> class with its constructor.</span></span>  
  
 [!code-cpp[System.Attribute.GetCustomAttribute#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/CPP/getcustattrparam.cpp#2)]
 [!code-csharp[System.Attribute.GetCustomAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/CS/getcustattrparam.cs#2)]
 [!code-vb[System.Attribute.GetCustomAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/VB/getcustattrparam.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="attribute.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="52cb3-117">Ein <see cref="T:System.Object" />, das mit dieser Instanz oder <see langword="null" /> verglichen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-117">An <see cref="T:System.Object" /> to compare with this instance or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52cb3-118">Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen Objekt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-118">Returns a value that indicates whether this instance is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52cb3-119">Wenn <paramref name="obj" /> und diese Instanz vom selben Typ sind und über identische Feldwerte verfügen: <see langword="true" />, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-119">
              <see langword="true" /> if <paramref name="obj" /> and this instance are of the same type and have identical field values; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="52cb3-120">Die <xref:System.Attribute.Equals%2A> Methode-Reflektion zum Abrufen von Feldinformationen für die aktuelle Instanz und die `obj` Argument.</span><span class="sxs-lookup"><span data-stu-id="52cb3-120">The <xref:System.Attribute.Equals%2A> method uses reflection to retrieve field information for the current instance and the `obj` argument.</span></span> <span data-ttu-id="52cb3-121">Es vergleicht dann die Feldwerte.</span><span class="sxs-lookup"><span data-stu-id="52cb3-121">It then compares field values.</span></span> 

<span data-ttu-id="52cb3-122">Wenn von abgeleiteten Implementierung Ihrer eigenen Klasse <xref:System.Attribute>, können Sie überschreiben die <xref:System.Attribute.Equals%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="52cb3-122">When implementing your own class derived from <xref:System.Attribute>, you can override the <xref:System.Attribute.Equals%2A> method.</span></span> <span data-ttu-id="52cb3-123">Da sie die Reflektion verwendet, empfehlen wir, dass Sie dies tun.</span><span class="sxs-lookup"><span data-stu-id="52cb3-123">Because it uses reflection, we recommend that you do so.</span></span> <span data-ttu-id="52cb3-124">Die Außerkraftsetzung sollten jedoch einen standard-Test ausführen, für auf Verweisgleichheit (die beiden Argumente stellen die gleiche Objektinstanz dar) oder der auf Wertgleichheit (die beiden Argumente vom gleichen Typ sind und über identische Feldwerte verfügen).</span><span class="sxs-lookup"><span data-stu-id="52cb3-124">However, your override should perform a standard test for reference equality (the two arguments represent the same object instance) or value equality (the two arguments are of the same type and have identical field values).</span></span> <span data-ttu-id="52cb3-125">Wenn Sie führen einen benutzerdefinierten Vergleich aus, um zu bestimmen, ob die beiden Attribute-Objekte gleich sind, können Sie überschreiben möchten die <xref:System.Attribute.Match%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="52cb3-125">If you want to perform a custom comparison to determine whether two attributes objects are equal, you can override the <xref:System.Attribute.Match%2A> method.</span></span>   

## Examples  
 <span data-ttu-id="52cb3-126">Das folgende Beispiel definiert zwei benutzerdefinierte Parameter <xref:System.Attribute> -Klassen, und klicken Sie dann einige Objekte in jeder Klasse erstellt und verwendet die <xref:System.Attribute.Equals%2A> Methode, um sie zu vergleichen.</span><span class="sxs-lookup"><span data-stu-id="52cb3-126">The following example defines two custom parameter <xref:System.Attribute> classes, then creates several objects of each class and uses the <xref:System.Attribute.Equals%2A> method to compare them.</span></span>  
  
 [!code-cpp[System.Attribute.Equals](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Attribute.Equals/CPP/equals.cpp)]
 [!code-csharp[System.Attribute.Equals](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Attribute.Equals/CS/equals.cs)]
 [!code-vb[System.Attribute.Equals](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Attribute.Equals/VB/equals.vb)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttribute">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="52cb3-127">Ruft ein benutzerdefiniertes Attribut eines angegebenen Typs ab, das auf eine Assembly, ein Modul, einen Typmember oder einen Methodenparameter angewendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-127">Retrieves a custom attribute of a specified type applied to an assembly, module, type member, or method parameter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.Assembly element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.Assembly element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttribute (element As Assembly, attributeType As Type) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::Assembly ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.Assembly * Type -&gt; Attribute" Usage="System.Attribute.GetCustomAttribute (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="52cb3-128">Ein von der <see cref="T:System.Reflection.Assembly" />-Klasse abgeleitetes Objekt, das eine wiederverwendbare Auflistung von Modulen beschreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-128">An object derived from the <see cref="T:System.Reflection.Assembly" /> class that describes a reusable collection of modules.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="52cb3-129">Der Typ des benutzerdefinierten Attributs oder ein Basistyp, nach dem gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-129">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52cb3-130">Ruft ein benutzerdefiniertes Attribut ab, das auf eine angegebene Assembly angewendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-130">Retrieves a custom attribute applied to a specified assembly.</span>
          </span>
          <span data-ttu-id="52cb3-131">Parameter geben die Assembly und den Typ des zu suchenden benutzerdefinierten Attributs an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-131">Parameters specify the assembly and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52cb3-132">Ein Verweis auf das einzige benutzerdefinierte Attribut vom Typ <paramref name="attributeType" />, das für <paramref name="element" /> übernommen wird, oder <see langword="null" />, wenn kein solches Attribut vorhanden ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-132">A reference to the single custom attribute of type <paramref name="attributeType" /> that is applied to <paramref name="element" />, or <see langword="null" /> if there is no such attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52cb3-133">Verwenden der <xref:System.Attribute.GetCustomAttributes%2A> Methode, wenn Sie erwarten, dass mehrere Werte zurückgegeben werden, oder <xref:System.Reflection.AmbiguousMatchException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="52cb3-133">Use the <xref:System.Attribute.GetCustomAttributes%2A> method if you expect more than one value to be returned, or <xref:System.Reflection.AmbiguousMatchException> will be thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="52cb3-134">Ab .NET Framework, Version 2.0, gibt diese Methode Sicherheitsattribute aus, wenn die Attribute in der neuen Metadatenformat gespeichert werden.</span><span class="sxs-lookup"><span data-stu-id="52cb3-134">Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="52cb3-135">Mit Version 2.0 oder höher kompilierte Assemblys werden das neue Format verwenden.</span><span class="sxs-lookup"><span data-stu-id="52cb3-135">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="52cb3-136">Verwenden dynamische Assemblys und Assemblys, die mit früheren Versionen von .NET Framework kompiliert die alte XML-Format.</span><span class="sxs-lookup"><span data-stu-id="52cb3-136">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="52cb3-137">Finden Sie unter [Ausgeben von deklarativen Sicherheitsattributen](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span><span class="sxs-lookup"><span data-stu-id="52cb3-137">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52cb3-138">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Attribute.GetCustomAttribute%2A> Methode übernehmen eine <xref:System.Reflection.Assembly> als Parameter.</span><span class="sxs-lookup"><span data-stu-id="52cb3-138">The following code example illustrates the use of the <xref:System.Attribute.GetCustomAttribute%2A> method taking an <xref:System.Reflection.Assembly> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#1](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#1)]
 [!code-csharp[IsDefined#1](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id1.cs#1)]
 [!code-vb[IsDefined#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="52cb3-139">
            <paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-139">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="52cb3-140">
            <paramref name="attributeType" /> ist nicht von <see cref="T:System.Attribute" /> abgeleitet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-140">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="52cb3-141">Es wurden mehrere der erforderlichen Attribute gefunden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-141">More than one of the requested attributes was found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.MemberInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.MemberInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttribute (element As MemberInfo, attributeType As Type) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::MemberInfo ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.MemberInfo * Type -&gt; Attribute" Usage="System.Attribute.GetCustomAttribute (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="52cb3-142">Ein Objekt, das aus der <see cref="T:System.Reflection.MemberInfo" />-Klasse abgeleitet wurde und einen Konstruktor-, Ereignis-, Feld-, Methoden- oder Eigenschaftenmember einer Klasse beschreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-142">An object derived from the <see cref="T:System.Reflection.MemberInfo" /> class that describes a constructor, event, field, method, or property member of a class.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="52cb3-143">Der Typ des benutzerdefinierten Attributs oder ein Basistyp, nach dem gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-143">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52cb3-144">Ruft ein benutzerdefiniertes Attribut ab, das auf den Member eines Typs angewendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-144">Retrieves a custom attribute applied to a member of a type.</span>
          </span>
          <span data-ttu-id="52cb3-145">Parameter geben den Member und den Typ des zu suchenden benutzerdefinierten Attributs an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-145">Parameters specify the member, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52cb3-146">Ein Verweis auf das einzige benutzerdefinierte Attribut vom Typ <paramref name="attributeType" />, das für <paramref name="element" /> übernommen wird, oder <see langword="null" />, wenn kein solches Attribut vorhanden ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-146">A reference to the single custom attribute of type <paramref name="attributeType" /> that is applied to <paramref name="element" />, or <see langword="null" /> if there is no such attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52cb3-147">Eine Übereinstimmung wird bestimmt, auf die gleiche Weise, die in den Rückgabewert Abschnitt beschriebene <xref:System.Type.IsAssignableFrom%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="52cb3-147">A match is determined in the same way described in the Return Value section of <xref:System.Type.IsAssignableFrom%2A?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="52cb3-148">Ab .NET Framework, Version 2.0, gibt diese Methode auf Typen, Methoden und Konstruktoren Sicherheitsattribute zurück, wenn die Attribute in der neuen Metadatenformat gespeichert werden.</span><span class="sxs-lookup"><span data-stu-id="52cb3-148">Starting with the .NET Framework version 2.0, this method returns security attributes on types, methods, and constructors if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="52cb3-149">Mit Version 2.0 oder höher kompilierte Assemblys werden das neue Format verwenden.</span><span class="sxs-lookup"><span data-stu-id="52cb3-149">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="52cb3-150">Verwenden dynamische Assemblys und Assemblys, die mit früheren Versionen von .NET Framework kompiliert die alte XML-Format.</span><span class="sxs-lookup"><span data-stu-id="52cb3-150">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="52cb3-151">Finden Sie unter [Ausgeben von deklarativen Sicherheitsattributen](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span><span class="sxs-lookup"><span data-stu-id="52cb3-151">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52cb3-152">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Attribute.GetCustomAttribute%2A> Methode übernehmen eine <xref:System.Reflection.MemberInfo> als Parameter.</span><span class="sxs-lookup"><span data-stu-id="52cb3-152">The following code example illustrates the use of the <xref:System.Attribute.GetCustomAttribute%2A> method taking a <xref:System.Reflection.MemberInfo> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#4](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#4)]
 [!code-csharp[IsDefined#4](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id4.cs#4)]
 [!code-vb[IsDefined#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="52cb3-153">
            <paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-153">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="52cb3-154">
            <paramref name="attributeType" /> ist nicht von <see cref="T:System.Attribute" /> abgeleitet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-154">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="52cb3-155">
            <paramref name="element" /> ist kein Konstruktor, keine Methode, keine Eigenschaft, kein Ereignis, kein Typ und kein Feld.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-155">
              <paramref name="element" /> is not a constructor, method, property, event, type, or field.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="52cb3-156">Es wurden mehrere der erforderlichen Attribute gefunden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-156">More than one of the requested attributes was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="52cb3-157">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-157">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.Module element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.Module element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttribute (element As Module, attributeType As Type) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::Module ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.Module * Type -&gt; Attribute" Usage="System.Attribute.GetCustomAttribute (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="52cb3-158">Ein Objekt, das von der <see cref="T:System.Reflection.Module" />-Klasse abgeleitet wurde und eine übertragbare ausführbare Datei (Portable Executable, PE) beschreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-158">An object derived from the <see cref="T:System.Reflection.Module" /> class that describes a portable executable file.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="52cb3-159">Der Typ des benutzerdefinierten Attributs oder ein Basistyp, nach dem gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-159">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52cb3-160">Ruft ein benutzerdefiniertes Attribut ab, das auf ein Modul angewendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-160">Retrieves a custom attribute applied to a module.</span>
          </span>
          <span data-ttu-id="52cb3-161">Parameter geben das Modul und den Typ des zu suchenden benutzerdefinierten Attributs an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-161">Parameters specify the module, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52cb3-162">Ein Verweis auf das einzige benutzerdefinierte Attribut vom Typ <paramref name="attributeType" />, das für <paramref name="element" /> übernommen wird, oder <see langword="null" />, wenn kein solches Attribut vorhanden ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-162">A reference to the single custom attribute of type <paramref name="attributeType" /> that is applied to <paramref name="element" />, or <see langword="null" /> if there is no such attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="52cb3-163">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Attribute.GetCustomAttribute%2A> Methode übernehmen eine <xref:System.Reflection.Module> als Parameter.</span><span class="sxs-lookup"><span data-stu-id="52cb3-163">The following code example illustrates the use of the <xref:System.Attribute.GetCustomAttribute%2A> method taking a <xref:System.Reflection.Module> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#2](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#2)]
 [!code-csharp[IsDefined#2](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id2.cs#2)]
 [!code-vb[IsDefined#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="52cb3-164">
            <paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-164">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="52cb3-165">
            <paramref name="attributeType" /> ist nicht von <see cref="T:System.Attribute" /> abgeleitet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-165">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="52cb3-166">Es wurden mehrere der erforderlichen Attribute gefunden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-166">More than one of the requested attributes was found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.ParameterInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.ParameterInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttribute (element As ParameterInfo, attributeType As Type) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::ParameterInfo ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.ParameterInfo * Type -&gt; Attribute" Usage="System.Attribute.GetCustomAttribute (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="52cb3-167">Ein Objekt, das von der <see cref="T:System.Reflection.ParameterInfo" />-Klasse abgeleitet wurde und einen Parameter eines Klassenmembers beschreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-167">An object derived from the <see cref="T:System.Reflection.ParameterInfo" /> class that describes a parameter of a member of a class.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="52cb3-168">Der Typ des benutzerdefinierten Attributs oder ein Basistyp, nach dem gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-168">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52cb3-169">Ruft ein benutzerdefiniertes Attribut ab, das auf einen Methodenparameter angewendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-169">Retrieves a custom attribute applied to a method parameter.</span>
          </span>
          <span data-ttu-id="52cb3-170">Parameter geben den Methodenparameter und den Typ des zu suchenden benutzerdefinierten Attributs an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-170">Parameters specify the method parameter, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52cb3-171">Ein Verweis auf das einzige benutzerdefinierte Attribut vom Typ <paramref name="attributeType" />, das für <paramref name="element" /> übernommen wird, oder <see langword="null" />, wenn kein solches Attribut vorhanden ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-171">A reference to the single custom attribute of type <paramref name="attributeType" /> that is applied to <paramref name="element" />, or <see langword="null" /> if there is no such attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52cb3-172">Wenn `element` stellt einen Parameter in einer Methode eines abgeleiteten Typs, der Rückgabewert enthält die vererbbaren benutzerdefinierten Attribute, die auf den gleichen Parameter in der überschriebenen Basismethoden angewendet.</span><span class="sxs-lookup"><span data-stu-id="52cb3-172">If `element` represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52cb3-173">Das folgende Codebeispiel definiert einen benutzerdefinierten Parameter <xref:System.Attribute> Klasse und das benutzerdefinierte Attribut auf eine Methode in einer abgeleiteten Klasse und die Basis der abgeleiteten Klasse angewendet.</span><span class="sxs-lookup"><span data-stu-id="52cb3-173">The following code example defines a custom parameter <xref:System.Attribute> class and applies the custom attribute to a method in a derived class and the base of the derived class.</span></span> <span data-ttu-id="52cb3-174">Das Beispiel zeigt die Verwendung der <xref:System.Attribute.GetCustomAttribute%2A> Methode, um die Attribute zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="52cb3-174">The example shows the use of the <xref:System.Attribute.GetCustomAttribute%2A> method to return the attributes.</span></span>  
  
 [!code-cpp[System.Attribute.GetCustomAttribute#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/CPP/getcustattrparam.cpp#1)]
 [!code-csharp[System.Attribute.GetCustomAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/CS/getcustattrparam.cs#1)]
 [!code-vb[System.Attribute.GetCustomAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/VB/getcustattrparam.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="52cb3-175">
            <paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-175">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="52cb3-176">
            <paramref name="attributeType" /> ist nicht von <see cref="T:System.Attribute" /> abgeleitet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-176">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="52cb3-177">Es wurden mehrere der erforderlichen Attribute gefunden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-177">More than one of the requested attributes was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="52cb3-178">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-178">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.Assembly element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.Assembly element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttribute (element As Assembly, attributeType As Type, inherit As Boolean) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::Assembly ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.Assembly * Type * bool -&gt; Attribute" Usage="System.Attribute.GetCustomAttribute (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="52cb3-179">Ein von der <see cref="T:System.Reflection.Assembly" />-Klasse abgeleitetes Objekt, das eine wiederverwendbare Auflistung von Modulen beschreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-179">An object derived from the <see cref="T:System.Reflection.Assembly" /> class that describes a reusable collection of modules.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="52cb3-180">Der Typ des benutzerdefinierten Attributs oder ein Basistyp, nach dem gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-180">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="52cb3-181">Dieser Parameter wird ignoriert und wirkt sich nicht auf die Funktionsweise dieser Methode aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-181">This parameter is ignored, and does not affect the operation of this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52cb3-182">Ruft ein benutzerdefiniertes Attribut ab, das auf eine Assembly angewendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-182">Retrieves a custom attribute applied to an assembly.</span>
          </span>
          <span data-ttu-id="52cb3-183">Parameter geben die Assembly und den Typ des zu suchenden benutzerdefinierten Attributs und eine ignorierte Suchoption an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-183">Parameters specify the assembly, the type of the custom attribute to search for, and an ignored search option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52cb3-184">Ein Verweis auf das einzige benutzerdefinierte Attribut vom Typ <paramref name="attributeType" />, das für <paramref name="element" /> übernommen wird, oder <see langword="null" />, wenn kein solches Attribut vorhanden ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-184">A reference to the single custom attribute of type <paramref name="attributeType" /> that is applied to <paramref name="element" />, or <see langword="null" /> if there is no such attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="52cb3-185">Ab .NET Framework, Version 2.0, gibt diese Methode Sicherheitsattribute aus, wenn die Attribute in der neuen Metadatenformat gespeichert werden.</span><span class="sxs-lookup"><span data-stu-id="52cb3-185">Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="52cb3-186">Mit Version 2.0 oder höher kompilierte Assemblys werden das neue Format verwenden.</span><span class="sxs-lookup"><span data-stu-id="52cb3-186">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="52cb3-187">Verwenden dynamische Assemblys und Assemblys, die mit früheren Versionen von .NET Framework kompiliert die alte XML-Format.</span><span class="sxs-lookup"><span data-stu-id="52cb3-187">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="52cb3-188">Finden Sie unter [Ausgeben von deklarativen Sicherheitsattributen](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span><span class="sxs-lookup"><span data-stu-id="52cb3-188">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52cb3-189">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Attribute.GetCustomAttribute%2A> Methode übernehmen eine <xref:System.Reflection.Assembly> als Parameter.</span><span class="sxs-lookup"><span data-stu-id="52cb3-189">The following code example illustrates the use of the <xref:System.Attribute.GetCustomAttribute%2A> method taking an <xref:System.Reflection.Assembly> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#1](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#1)]
 [!code-csharp[IsDefined#1](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id1.cs#1)]
 [!code-vb[IsDefined#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="52cb3-190">
            <paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-190">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="52cb3-191">
            <paramref name="attributeType" /> ist nicht von <see cref="T:System.Attribute" /> abgeleitet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-191">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="52cb3-192">Es wurden mehrere der erforderlichen Attribute gefunden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-192">More than one of the requested attributes was found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.MemberInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.MemberInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttribute (element As MemberInfo, attributeType As Type, inherit As Boolean) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::MemberInfo ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.MemberInfo * Type * bool -&gt; Attribute" Usage="System.Attribute.GetCustomAttribute (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="52cb3-193">Ein Objekt, das aus der <see cref="T:System.Reflection.MemberInfo" />-Klasse abgeleitet wurde und einen Konstruktor-, Ereignis-, Feld-, Methoden- oder Eigenschaftenmember einer Klasse beschreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-193">An object derived from the <see cref="T:System.Reflection.MemberInfo" /> class that describes a constructor, event, field, method, or property member of a class.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="52cb3-194">Der Typ des benutzerdefinierten Attributs oder ein Basistyp, nach dem gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-194">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="52cb3-195">Wenn <see langword="true" />, wird angegeben, dass auch die früheren Versionen von <c>element</c> hinsichtlich benutzerdefinierter Attribute durchsucht werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-195">If <see langword="true" />, specifies to also search the ancestors of <c>element</c> for custom attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52cb3-196">Ruft ein benutzerdefiniertes Attribut ab, das auf den Member eines Typs angewendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-196">Retrieves a custom attribute applied to a member of a type.</span>
          </span>
          <span data-ttu-id="52cb3-197">Parameter geben den Member und den Typ des zu suchenden benutzerdefinierten Attributs an und außerdem, ob auch frühere Versionen des Members gesucht werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-197">Parameters specify the member, the type of the custom attribute to search for, and whether to search ancestors of the member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52cb3-198">Ein Verweis auf das einzige benutzerdefinierte Attribut vom Typ <paramref name="attributeType" />, das für <paramref name="element" /> übernommen wird, oder <see langword="null" />, wenn kein solches Attribut vorhanden ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-198">A reference to the single custom attribute of type <paramref name="attributeType" /> that is applied to <paramref name="element" />, or <see langword="null" /> if there is no such attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="52cb3-199">Ab .NET Framework, Version 2.0, gibt diese Methode auf Typen, Methoden und Konstruktoren Sicherheitsattribute zurück, wenn die Attribute in der neuen Metadatenformat gespeichert werden.</span><span class="sxs-lookup"><span data-stu-id="52cb3-199">Starting with the .NET Framework version 2.0, this method returns security attributes on types, methods, and constructors if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="52cb3-200">Mit Version 2.0 oder höher kompilierte Assemblys werden das neue Format verwenden.</span><span class="sxs-lookup"><span data-stu-id="52cb3-200">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="52cb3-201">Verwenden dynamische Assemblys und Assemblys, die mit früheren Versionen von .NET Framework kompiliert die alte XML-Format.</span><span class="sxs-lookup"><span data-stu-id="52cb3-201">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="52cb3-202">Finden Sie unter [Ausgeben von deklarativen Sicherheitsattributen](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span><span class="sxs-lookup"><span data-stu-id="52cb3-202">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52cb3-203">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Attribute.GetCustomAttribute%2A> Methode übernehmen eine <xref:System.Reflection.MemberInfo> als Parameter.</span><span class="sxs-lookup"><span data-stu-id="52cb3-203">The following code example illustrates the use of the <xref:System.Attribute.GetCustomAttribute%2A> method taking a <xref:System.Reflection.MemberInfo> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#4](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#4)]
 [!code-csharp[IsDefined#4](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id4.cs#4)]
 [!code-vb[IsDefined#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="52cb3-204">
            <paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-204">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="52cb3-205">
            <paramref name="attributeType" /> ist nicht von <see cref="T:System.Attribute" /> abgeleitet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-205">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="52cb3-206">
            <paramref name="element" /> ist kein Konstruktor, keine Methode, keine Eigenschaft, kein Ereignis, kein Typ und kein Feld.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-206">
              <paramref name="element" /> is not a constructor, method, property, event, type, or field.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="52cb3-207">Es wurden mehrere der erforderlichen Attribute gefunden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-207">More than one of the requested attributes was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="52cb3-208">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-208">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.Module element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.Module element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttribute (element As Module, attributeType As Type, inherit As Boolean) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::Module ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.Module * Type * bool -&gt; Attribute" Usage="System.Attribute.GetCustomAttribute (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="52cb3-209">Ein Objekt, das von der <see cref="T:System.Reflection.Module" />-Klasse abgeleitet wurde und eine übertragbare ausführbare Datei (Portable Executable, PE) beschreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-209">An object derived from the <see cref="T:System.Reflection.Module" /> class that describes a portable executable file.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="52cb3-210">Der Typ des benutzerdefinierten Attributs oder ein Basistyp, nach dem gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-210">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="52cb3-211">Dieser Parameter wird ignoriert und wirkt sich nicht auf die Funktionsweise dieser Methode aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-211">This parameter is ignored, and does not affect the operation of this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52cb3-212">Ruft ein benutzerdefiniertes Attribut ab, das auf ein Modul angewendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-212">Retrieves a custom attribute applied to a module.</span>
          </span>
          <span data-ttu-id="52cb3-213">Parameter geben das Modul und den Typ des zu suchenden benutzerdefinierten Attributs und eine ignorierte Suchoption an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-213">Parameters specify the module, the type of the custom attribute to search for, and an ignored search option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52cb3-214">Ein Verweis auf das einzige benutzerdefinierte Attribut vom Typ <paramref name="attributeType" />, das für <paramref name="element" /> übernommen wird, oder <see langword="null" />, wenn kein solches Attribut vorhanden ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-214">A reference to the single custom attribute of type <paramref name="attributeType" /> that is applied to <paramref name="element" />, or <see langword="null" /> if there is no such attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="52cb3-215">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Attribute.GetCustomAttribute%2A> Methode übernehmen eine <xref:System.Reflection.Module> als Parameter.</span><span class="sxs-lookup"><span data-stu-id="52cb3-215">The following code example illustrates the use of the <xref:System.Attribute.GetCustomAttribute%2A> method taking a <xref:System.Reflection.Module> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#2](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#2)]
 [!code-csharp[IsDefined#2](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id2.cs#2)]
 [!code-vb[IsDefined#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="52cb3-216">
            <paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-216">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="52cb3-217">
            <paramref name="attributeType" /> ist nicht von <see cref="T:System.Attribute" /> abgeleitet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-217">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="52cb3-218">Es wurden mehrere der erforderlichen Attribute gefunden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-218">More than one of the requested attributes was found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.ParameterInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.ParameterInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttribute (element As ParameterInfo, attributeType As Type, inherit As Boolean) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::ParameterInfo ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.ParameterInfo * Type * bool -&gt; Attribute" Usage="System.Attribute.GetCustomAttribute (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="52cb3-219">Ein Objekt, das von der <see cref="T:System.Reflection.ParameterInfo" />-Klasse abgeleitet wurde und einen Parameter eines Klassenmembers beschreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-219">An object derived from the <see cref="T:System.Reflection.ParameterInfo" /> class that describes a parameter of a member of a class.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="52cb3-220">Der Typ des benutzerdefinierten Attributs oder ein Basistyp, nach dem gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-220">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="52cb3-221">Wenn <see langword="true" />, wird angegeben, dass auch die früheren Versionen von <c>element</c> hinsichtlich benutzerdefinierter Attribute durchsucht werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-221">If <see langword="true" />, specifies to also search the ancestors of <c>element</c> for custom attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52cb3-222">Ruft ein benutzerdefiniertes Attribut ab, das auf einen Methodenparameter angewendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-222">Retrieves a custom attribute applied to a method parameter.</span>
          </span>
          <span data-ttu-id="52cb3-223">Parameter geben den Methodenparameter und den Typ des zu suchenden benutzerdefinierten Attributs an und außerdem, ob auch frühere Versionen des Methodenparameters gesucht werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-223">Parameters specify the method parameter, the type of the custom attribute to search for, and whether to search ancestors of the method parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52cb3-224">Ein Verweis auf das einzige benutzerdefinierte Attribut vom Typ <paramref name="attributeType" />, das für <paramref name="element" /> übernommen wird, oder <see langword="null" />, wenn kein solches Attribut vorhanden ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-224">A reference to the single custom attribute of type <paramref name="attributeType" /> that is applied to <paramref name="element" />, or <see langword="null" /> if there is no such attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52cb3-225">Wenn `element` stellt einen Parameter in einer Methode eines abgeleiteten Typs, der Rückgabewert enthält die vererbbaren benutzerdefinierten Attribute, die auf den gleichen Parameter in der überschriebenen Basismethoden angewendet.</span><span class="sxs-lookup"><span data-stu-id="52cb3-225">If `element` represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52cb3-226">Das folgende Codebeispiel definiert einen benutzerdefinierten Parameter <xref:System.Attribute> Klasse und das benutzerdefinierte Attribut auf eine Methode in einer abgeleiteten Klasse und die Basis der abgeleiteten Klasse angewendet.</span><span class="sxs-lookup"><span data-stu-id="52cb3-226">The following code example defines a custom parameter <xref:System.Attribute> class and applies the custom attribute to a method in a derived class and the base of the derived class.</span></span> <span data-ttu-id="52cb3-227">Das Beispiel zeigt die Verwendung der <xref:System.Attribute.GetCustomAttribute%2A> Methode, um die Attribute zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="52cb3-227">The example shows the use of the <xref:System.Attribute.GetCustomAttribute%2A> method to return the attributes.</span></span>  
  
 [!code-cpp[System.Attribute.GetCustomAttribute#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/CPP/getcustattrprminh.cpp#3)]
 [!code-csharp[System.Attribute.GetCustomAttribute#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/CS/getcustattrprminh.cs#3)]
 [!code-vb[System.Attribute.GetCustomAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/VB/getcustattrprminh.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="52cb3-228">
            <paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-228">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="52cb3-229">
            <paramref name="attributeType" /> ist nicht von <see cref="T:System.Attribute" /> abgeleitet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-229">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="52cb3-230">Es wurden mehrere der erforderlichen Attribute gefunden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-230">More than one of the requested attributes was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="52cb3-231">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-231">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="52cb3-232">Ruft ein Array der benutzerdefinierten Attribute ab, die auf eine Assembly, ein Modul, einen Typmember oder einen Methodenparameter angewendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-232">Retrieves an array of the custom attributes applied to an assembly, module, type member, or method parameter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Assembly element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Assembly element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As Assembly) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Assembly ^ element);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Assembly -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="52cb3-233">Ein von der <see cref="T:System.Reflection.Assembly" />-Klasse abgeleitetes Objekt, das eine wiederverwendbare Auflistung von Modulen beschreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-233">An object derived from the <see cref="T:System.Reflection.Assembly" /> class that describes a reusable collection of modules.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52cb3-234">Ruft ein Array der benutzerdefinierten Attribute ab, die auf eine Assembly angewendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-234">Retrieves an array of the custom attributes applied to an assembly.</span>
          </span>
          <span data-ttu-id="52cb3-235">Ein Parameter gibt die Assembly an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-235">A parameter specifies the assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52cb3-236">Ein <see cref="T:System.Attribute" />-Array mit den benutzerdefinierten Attributen, die für <paramref name="element" /> übernommen werden, oder ein leeres Array, wenn keine benutzerdefinierten Attribute vorhanden sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-236">An <see cref="T:System.Attribute" /> array that contains the custom attributes applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="52cb3-237">Ab .NET Framework, Version 2.0, gibt diese Methode Sicherheitsattribute aus, wenn die Attribute in der neuen Metadatenformat gespeichert werden.</span><span class="sxs-lookup"><span data-stu-id="52cb3-237">Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="52cb3-238">Mit Version 2.0 oder höher kompilierte Assemblys werden das neue Format verwenden.</span><span class="sxs-lookup"><span data-stu-id="52cb3-238">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="52cb3-239">Verwenden dynamische Assemblys und Assemblys, die mit früheren Versionen von .NET Framework kompiliert die alte XML-Format.</span><span class="sxs-lookup"><span data-stu-id="52cb3-239">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="52cb3-240">Finden Sie unter [Ausgeben von deklarativen Sicherheitsattributen](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span><span class="sxs-lookup"><span data-stu-id="52cb3-240">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52cb3-241">Das folgende Beispiel ruft die benutzerdefinierten Attribute, die in der aktuellen Assembly gefunden.</span><span class="sxs-lookup"><span data-stu-id="52cb3-241">The following example retrieves the custom attributes found in the current assembly.</span></span>  
  
 [!code-cpp[GetCustomAttributes#1](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/ca1.cpp#1)]
 [!code-csharp[GetCustomAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca1.cs#1)]
 [!code-vb[GetCustomAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="52cb3-242">
            <paramref name="element" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-242">
              <paramref name="element" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.MemberInfo element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.MemberInfo element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As MemberInfo) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ element);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.MemberInfo -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="52cb3-243">Ein Objekt, das aus der <see cref="T:System.Reflection.MemberInfo" />-Klasse abgeleitet wurde und einen Konstruktor-, Ereignis-, Feld-, Methoden- oder Eigenschaftenmember einer Klasse beschreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-243">An object derived from the <see cref="T:System.Reflection.MemberInfo" /> class that describes a constructor, event, field, method, or property member of a class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52cb3-244">Ruft ein Array der benutzerdefinierten Attribute ab, die auf den Member eines Typs angewendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-244">Retrieves an array of the custom attributes applied to a member of a type.</span>
          </span>
          <span data-ttu-id="52cb3-245">Ein Parameter gibt den Member an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-245">A parameter specifies the member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52cb3-246">Ein <see cref="T:System.Attribute" />-Array mit den benutzerdefinierten Attributen, die für <paramref name="element" /> übernommen werden, oder ein leeres Array, wenn keine benutzerdefinierten Attribute vorhanden sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-246">An <see cref="T:System.Attribute" /> array that contains the custom attributes applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52cb3-247">Der Rückgabewert enthält die benutzerdefinierten Attribute für frühere Versionen von `element`.</span><span class="sxs-lookup"><span data-stu-id="52cb3-247">The return value contains the custom attributes for ancestors of `element`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="52cb3-248">Ab .NET Framework, Version 2.0, gibt diese Methode für Methoden, Konstruktoren und Typen von Sicherheitsattributen zurück, wenn die Attribute in der neuen Metadatenformat gespeichert werden.</span><span class="sxs-lookup"><span data-stu-id="52cb3-248">Starting with the .NET Framework version 2.0, this method returns security attributes on methods, constructors, and types if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="52cb3-249">Mit Version 2.0 oder höher kompilierte Assemblys werden das neue Format verwenden.</span><span class="sxs-lookup"><span data-stu-id="52cb3-249">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="52cb3-250">Verwenden dynamische Assemblys und Assemblys, die mit früheren Versionen von .NET Framework kompiliert die alte XML-Format.</span><span class="sxs-lookup"><span data-stu-id="52cb3-250">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="52cb3-251">Finden Sie unter [Ausgeben von deklarativen Sicherheitsattributen](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span><span class="sxs-lookup"><span data-stu-id="52cb3-251">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52cb3-252">Das folgende Codebeispiel veranschaulicht die Verwendung von <xref:System.Attribute.GetCustomAttribute%2A>, wobei eine <xref:System.Reflection.MemberInfo> als Parameter.</span><span class="sxs-lookup"><span data-stu-id="52cb3-252">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttribute%2A>, taking a <xref:System.Reflection.MemberInfo> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#4](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#4)]
 [!code-csharp[GetCustomAttributes#4](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca4.cs#4)]
 [!code-vb[GetCustomAttributes#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="52cb3-253">
            <paramref name="element" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-253">
              <paramref name="element" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="52cb3-254">
            <paramref name="element" /> ist kein Konstruktor, keine Methode, keine Eigenschaft, kein Ereignis, kein Typ und kein Feld.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-254">
              <paramref name="element" /> is not a constructor, method, property, event, type, or field.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="52cb3-255">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-255">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Module element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Module element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Module)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As Module) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Module ^ element);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Module -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="52cb3-256">Ein Objekt, das von der <see cref="T:System.Reflection.Module" />-Klasse abgeleitet wurde und eine übertragbare ausführbare Datei (Portable Executable, PE) beschreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-256">An object derived from the <see cref="T:System.Reflection.Module" /> class that describes a portable executable file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52cb3-257">Ruft ein Array der benutzerdefinierten Attribute ab, die auf ein Modul angewendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-257">Retrieves an array of the custom attributes applied to a module.</span>
          </span>
          <span data-ttu-id="52cb3-258">Ein Parameter gibt das Modul an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-258">A parameter specifies the module.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52cb3-259">Ein <see cref="T:System.Attribute" />-Array mit den benutzerdefinierten Attributen, die für <paramref name="element" /> übernommen werden, oder ein leeres Array, wenn keine benutzerdefinierten Attribute vorhanden sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-259">An <see cref="T:System.Attribute" /> array that contains the custom attributes applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="52cb3-260">Das folgende Codebeispiel veranschaulicht die Verwendung von <xref:System.Attribute.GetCustomAttributes%2A>, wobei eine <xref:System.Reflection.Module> als Parameter.</span><span class="sxs-lookup"><span data-stu-id="52cb3-260">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.Module> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#2](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#2)]
 [!code-csharp[GetCustomAttributes#2](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca2.cs#2)]
 [!code-vb[GetCustomAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="52cb3-261">
            <paramref name="element" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-261">
              <paramref name="element" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.ParameterInfo element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.ParameterInfo element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As ParameterInfo) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ element);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.ParameterInfo -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="52cb3-262">Ein Objekt, das von der <see cref="T:System.Reflection.ParameterInfo" />-Klasse abgeleitet wurde und einen Parameter eines Klassenmembers beschreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-262">An object derived from the <see cref="T:System.Reflection.ParameterInfo" /> class that describes a parameter of a member of a class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52cb3-263">Ruft ein Array der benutzerdefinierten Attribute ab, die auf einen Methodenparameter angewendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-263">Retrieves an array of the custom attributes applied to a method parameter.</span>
          </span>
          <span data-ttu-id="52cb3-264">Ein Parameter gibt den Methodenparameter an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-264">A parameter specifies the method parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52cb3-265">Ein <see cref="T:System.Attribute" />-Array mit den benutzerdefinierten Attributen, die für <paramref name="element" /> übernommen werden, oder ein leeres Array, wenn keine benutzerdefinierten Attribute vorhanden sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-265">An <see cref="T:System.Attribute" /> array that contains the custom attributes applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52cb3-266">Wenn `element` stellt einen Parameter in einer Methode eines abgeleiteten Typs, der Rückgabewert enthält die vererbbaren benutzerdefinierten Attribute, die auf den gleichen Parameter in der überschriebenen Basismethoden angewendet.</span><span class="sxs-lookup"><span data-stu-id="52cb3-266">If `element` represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52cb3-267">Das folgende Codebeispiel veranschaulicht die Verwendung von <xref:System.Attribute.GetCustomAttributes%2A>, wobei eine <xref:System.Reflection.ParameterInfo> als Parameter.</span><span class="sxs-lookup"><span data-stu-id="52cb3-267">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.ParameterInfo> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#5](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#5)]
 [!code-csharp[GetCustomAttributes#5](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca5.cs#5)]
 [!code-vb[GetCustomAttributes#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="52cb3-268">
            <paramref name="element" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-268">
              <paramref name="element" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="52cb3-269">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-269">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Assembly element, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Assembly element, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As Assembly, inherit As Boolean) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Assembly ^ element, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Assembly * bool -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="52cb3-270">Ein von der <see cref="T:System.Reflection.Assembly" />-Klasse abgeleitetes Objekt, das eine wiederverwendbare Auflistung von Modulen beschreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-270">An object derived from the <see cref="T:System.Reflection.Assembly" /> class that describes a reusable collection of modules.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="52cb3-271">Dieser Parameter wird ignoriert und wirkt sich nicht auf die Funktionsweise dieser Methode aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-271">This parameter is ignored, and does not affect the operation of this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52cb3-272">Ruft ein Array der benutzerdefinierten Attribute ab, die auf eine Assembly angewendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-272">Retrieves an array of the custom attributes applied to an assembly.</span>
          </span>
          <span data-ttu-id="52cb3-273">Parameter geben die Assembly und eine ignorierte Suchoption an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-273">Parameters specify the assembly, and an ignored search option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52cb3-274">Ein <see cref="T:System.Attribute" />-Array mit den benutzerdefinierten Attributen, die für <paramref name="element" /> übernommen werden, oder ein leeres Array, wenn keine benutzerdefinierten Attribute vorhanden sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-274">An <see cref="T:System.Attribute" /> array that contains the custom attributes applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="52cb3-275">Ab .NET Framework, Version 2.0, gibt diese Methode Sicherheitsattribute aus, wenn die Attribute in der neuen Metadatenformat gespeichert werden.</span><span class="sxs-lookup"><span data-stu-id="52cb3-275">Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="52cb3-276">Mit Version 2.0 oder höher kompilierte Assemblys werden das neue Format verwenden.</span><span class="sxs-lookup"><span data-stu-id="52cb3-276">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="52cb3-277">Verwenden dynamische Assemblys und Assemblys, die mit früheren Versionen von .NET Framework kompiliert die alte XML-Format.</span><span class="sxs-lookup"><span data-stu-id="52cb3-277">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="52cb3-278">Finden Sie unter [Ausgeben von deklarativen Sicherheitsattributen](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span><span class="sxs-lookup"><span data-stu-id="52cb3-278">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52cb3-279">Das folgende Codebeispiel veranschaulicht die Verwendung von <xref:System.Attribute.GetCustomAttributes%2A>, wobei ein <xref:System.Reflection.Assembly> als Parameter.</span><span class="sxs-lookup"><span data-stu-id="52cb3-279">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking an <xref:System.Reflection.Assembly> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#1](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/ca1.cpp#1)]
 [!code-csharp[GetCustomAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca1.cs#1)]
 [!code-vb[GetCustomAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="52cb3-280">
            <paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-280">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Assembly element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Assembly element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As Assembly, attributeType As Type) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Assembly ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Assembly * Type -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="52cb3-281">Ein von der <see cref="T:System.Reflection.Assembly" />-Klasse abgeleitetes Objekt, das eine wiederverwendbare Auflistung von Modulen beschreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-281">An object derived from the <see cref="T:System.Reflection.Assembly" /> class that describes a reusable collection of modules.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="52cb3-282">Der Typ des benutzerdefinierten Attributs oder ein Basistyp, nach dem gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-282">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52cb3-283">Ruft ein Array der benutzerdefinierten Attribute ab, die auf eine Assembly angewendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-283">Retrieves an array of the custom attributes applied to an assembly.</span>
          </span>
          <span data-ttu-id="52cb3-284">Parameter geben die Assembly und den Typ des zu suchenden benutzerdefinierten Attributs an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-284">Parameters specify the assembly, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52cb3-285">Ein <see cref="T:System.Attribute" />-Array mit den benutzerdefinierten Attributen vom Typ <paramref name="attributeType" />, die für <paramref name="element" /> übernommen werden, oder ein leeres Array, wenn keine benutzerdefinierten Attribute vorhanden sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-285">An <see cref="T:System.Attribute" /> array that contains the custom attributes of type <paramref name="attributeType" /> applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="52cb3-286">Ab .NET Framework, Version 2.0, gibt diese Methode Sicherheitsattribute aus, wenn die Attribute in der neuen Metadatenformat gespeichert werden.</span><span class="sxs-lookup"><span data-stu-id="52cb3-286">Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="52cb3-287">Mit Version 2.0 oder höher kompilierte Assemblys werden das neue Format verwenden.</span><span class="sxs-lookup"><span data-stu-id="52cb3-287">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="52cb3-288">Verwenden dynamische Assemblys und Assemblys, die mit früheren Versionen von .NET Framework kompiliert die alte XML-Format.</span><span class="sxs-lookup"><span data-stu-id="52cb3-288">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="52cb3-289">Finden Sie unter [Ausgeben von deklarativen Sicherheitsattributen](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span><span class="sxs-lookup"><span data-stu-id="52cb3-289">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52cb3-290">Das folgende Codebeispiel veranschaulicht die Verwendung von <xref:System.Attribute.GetCustomAttributes%2A>, wobei ein <xref:System.Reflection.Assembly> als Parameter.</span><span class="sxs-lookup"><span data-stu-id="52cb3-290">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking an <xref:System.Reflection.Assembly> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#1](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/ca1.cpp#1)]
 [!code-csharp[GetCustomAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca1.cs#1)]
 [!code-vb[GetCustomAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="52cb3-291">
            <paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-291">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="52cb3-292">
            <paramref name="attributeType" /> ist nicht von <see cref="T:System.Attribute" /> abgeleitet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-292">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.MemberInfo element, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.MemberInfo element, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As MemberInfo, inherit As Boolean) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ element, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.MemberInfo * bool -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="52cb3-293">Ein Objekt, das aus der <see cref="T:System.Reflection.MemberInfo" />-Klasse abgeleitet wurde und einen Konstruktor-, Ereignis-, Feld-, Methoden- oder Eigenschaftenmember einer Klasse beschreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-293">An object derived from the <see cref="T:System.Reflection.MemberInfo" /> class that describes a constructor, event, field, method, or property member of a class.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="52cb3-294">Wenn <see langword="true" />, wird angegeben, dass auch die früheren Versionen von <c>element</c> hinsichtlich benutzerdefinierter Attribute durchsucht werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-294">If <see langword="true" />, specifies to also search the ancestors of <c>element</c> for custom attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52cb3-295">Ruft ein Array der benutzerdefinierten Attribute ab, die auf den Member eines Typs angewendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-295">Retrieves an array of the custom attributes applied to a member of a type.</span>
          </span>
          <span data-ttu-id="52cb3-296">Parameter geben den Member und den Typ des zu suchenden benutzerdefinierten Attributs an und außerdem, ob auch frühere Versionen des Members gesucht werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-296">Parameters specify the member, the type of the custom attribute to search for, and whether to search ancestors of the member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52cb3-297">Ein <see cref="T:System.Attribute" />-Array mit den benutzerdefinierten Attributen, die für <paramref name="element" /> übernommen werden, oder ein leeres Array, wenn keine benutzerdefinierten Attribute vorhanden sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-297">An <see cref="T:System.Attribute" /> array that contains the custom attributes applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52cb3-298">Der Rückgabewert enthält die benutzerdefinierten Attribute für frühere Versionen von `element` Wenn `inherit` ist `true`.</span><span class="sxs-lookup"><span data-stu-id="52cb3-298">The return value contains the custom attributes for ancestors of `element` if `inherit` is `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="52cb3-299">Ab .NET Framework, Version 2.0, gibt diese Methode für Methoden, Konstruktoren und Typen von Sicherheitsattributen zurück, wenn die Attribute in der neuen Metadatenformat gespeichert werden.</span><span class="sxs-lookup"><span data-stu-id="52cb3-299">Starting with the .NET Framework version 2.0, this method returns security attributes on methods, constructors, and types if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="52cb3-300">Mit Version 2.0 oder höher kompilierte Assemblys werden das neue Format verwenden.</span><span class="sxs-lookup"><span data-stu-id="52cb3-300">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="52cb3-301">Verwenden dynamische Assemblys und Assemblys, die mit früheren Versionen von .NET Framework kompiliert die alte XML-Format.</span><span class="sxs-lookup"><span data-stu-id="52cb3-301">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="52cb3-302">Finden Sie unter [Ausgeben von deklarativen Sicherheitsattributen](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span><span class="sxs-lookup"><span data-stu-id="52cb3-302">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52cb3-303">Das folgende Codebeispiel veranschaulicht die Verwendung von <xref:System.Attribute.GetCustomAttributes%2A>, wobei eine <xref:System.Reflection.MemberInfo> als Parameter.</span><span class="sxs-lookup"><span data-stu-id="52cb3-303">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.MemberInfo> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#4](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#4)]
 [!code-csharp[GetCustomAttributes#4](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca4.cs#4)]
 [!code-vb[GetCustomAttributes#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="52cb3-304">
            <paramref name="element" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-304">
              <paramref name="element" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="52cb3-305">
            <paramref name="element" /> ist kein Konstruktor, keine Methode, keine Eigenschaft, kein Ereignis, kein Typ und kein Feld.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-305">
              <paramref name="element" /> is not a constructor, method, property, event, type, or field.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="52cb3-306">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-306">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.MemberInfo element, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.MemberInfo element, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ element, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.MemberInfo * Type -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="52cb3-307">Ein Objekt, das aus der <see cref="T:System.Reflection.MemberInfo" />-Klasse abgeleitet wurde und einen Konstruktor-, Ereignis-, Feld-, Methoden- oder Eigenschaftenmember einer Klasse beschreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-307">An object derived from the <see cref="T:System.Reflection.MemberInfo" /> class that describes a constructor, event, field, method, or property member of a class.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="52cb3-308">Der Typ des benutzerdefinierten Attributs oder ein Basistyp, nach dem gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-308">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52cb3-309">Ruft ein Array der benutzerdefinierten Attribute ab, die auf den Member eines Typs angewendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-309">Retrieves an array of the custom attributes applied to a member of a type.</span>
          </span>
          <span data-ttu-id="52cb3-310">Parameter geben den Member und den Typ des zu suchenden benutzerdefinierten Attributs an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-310">Parameters specify the member, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52cb3-311">Ein <see cref="T:System.Attribute" />-Array mit den benutzerdefinierten Attributen vom Typ <paramref name="type" />, die für <paramref name="element" /> übernommen werden, oder ein leeres Array, wenn keine benutzerdefinierten Attribute vorhanden sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-311">An <see cref="T:System.Attribute" /> array that contains the custom attributes of type <paramref name="type" /> applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52cb3-312">Der Rückgabewert enthält die benutzerdefinierten Attribute für frühere Versionen von `element`.</span><span class="sxs-lookup"><span data-stu-id="52cb3-312">The return value contains the custom attributes for ancestors of `element`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="52cb3-313">Ab .NET Framework, Version 2.0, gibt diese Methode für Methoden, Konstruktoren und Typen von Sicherheitsattributen zurück, wenn die Attribute in der neuen Metadatenformat gespeichert werden.</span><span class="sxs-lookup"><span data-stu-id="52cb3-313">Starting with the .NET Framework version 2.0, this method returns security attributes on methods, constructors, and types if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="52cb3-314">Mit Version 2.0 oder höher kompilierte Assemblys werden das neue Format verwenden.</span><span class="sxs-lookup"><span data-stu-id="52cb3-314">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="52cb3-315">Verwenden dynamische Assemblys und Assemblys, die mit früheren Versionen von .NET Framework kompiliert die alte XML-Format.</span><span class="sxs-lookup"><span data-stu-id="52cb3-315">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="52cb3-316">Finden Sie unter [Ausgeben von deklarativen Sicherheitsattributen](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span><span class="sxs-lookup"><span data-stu-id="52cb3-316">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52cb3-317">Das folgende Codebeispiel veranschaulicht die Verwendung von <xref:System.Attribute.GetCustomAttribute%2A>, wobei eine <xref:System.Reflection.MemberInfo> als Parameter.</span><span class="sxs-lookup"><span data-stu-id="52cb3-317">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttribute%2A>, taking a <xref:System.Reflection.MemberInfo> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#4](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#4)]
 [!code-csharp[GetCustomAttributes#4](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca4.cs#4)]
 [!code-vb[GetCustomAttributes#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="52cb3-318">
            <paramref name="element" /> oder <paramref name="type" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-318">
              <paramref name="element" /> or <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="52cb3-319">
            <paramref name="type" /> ist nicht von <see cref="T:System.Attribute" /> abgeleitet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-319">
              <paramref name="type" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="52cb3-320">
            <paramref name="element" /> ist kein Konstruktor, keine Methode, keine Eigenschaft, kein Ereignis, kein Typ und kein Feld.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-320">
              <paramref name="element" /> is not a constructor, method, property, event, type, or field.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="52cb3-321">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-321">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Module element, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Module element, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As Module, inherit As Boolean) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Module ^ element, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Module * bool -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="52cb3-322">Ein Objekt, das von der <see cref="T:System.Reflection.Module" />-Klasse abgeleitet wurde und eine übertragbare ausführbare Datei (Portable Executable, PE) beschreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-322">An object derived from the <see cref="T:System.Reflection.Module" /> class that describes a portable executable file.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="52cb3-323">Dieser Parameter wird ignoriert und wirkt sich nicht auf die Funktionsweise dieser Methode aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-323">This parameter is ignored, and does not affect the operation of this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52cb3-324">Ruft ein Array der benutzerdefinierten Attribute ab, die auf ein Modul angewendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-324">Retrieves an array of the custom attributes applied to a module.</span>
          </span>
          <span data-ttu-id="52cb3-325">Parameter geben das Modul und eine ignorierte Suchoption an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-325">Parameters specify the module, and an ignored search option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52cb3-326">Ein <see cref="T:System.Attribute" />-Array mit den benutzerdefinierten Attributen, die für <paramref name="element" /> übernommen werden, oder ein leeres Array, wenn keine benutzerdefinierten Attribute vorhanden sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-326">An <see cref="T:System.Attribute" /> array that contains the custom attributes applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52cb3-327">Der Rückgabewert enthält die benutzerdefinierten Attribute für frühere Versionen von `element` Wenn `inherit` ist `true`.</span><span class="sxs-lookup"><span data-stu-id="52cb3-327">The return value contains the custom attributes for ancestors of `element` if `inherit` is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52cb3-328">Das folgende Codebeispiel veranschaulicht die Verwendung von <xref:System.Attribute.GetCustomAttributes%2A>, wobei eine <xref:System.Reflection.Module> als Parameter.</span><span class="sxs-lookup"><span data-stu-id="52cb3-328">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.Module> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#2](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#2)]
 [!code-csharp[GetCustomAttributes#2](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca2.cs#2)]
 [!code-vb[GetCustomAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="52cb3-329">
            <paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-329">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Module element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Module element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As Module, attributeType As Type) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Module ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Module * Type -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="52cb3-330">Ein Objekt, das von der <see cref="T:System.Reflection.Module" />-Klasse abgeleitet wurde und eine übertragbare ausführbare Datei (Portable Executable, PE) beschreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-330">An object derived from the <see cref="T:System.Reflection.Module" /> class that describes a portable executable file.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="52cb3-331">Der Typ des benutzerdefinierten Attributs oder ein Basistyp, nach dem gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-331">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52cb3-332">Ruft ein Array der benutzerdefinierten Attribute ab, die auf ein Modul angewendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-332">Retrieves an array of the custom attributes applied to a module.</span>
          </span>
          <span data-ttu-id="52cb3-333">Parameter geben das Modul und den Typ des zu suchenden benutzerdefinierten Attributs an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-333">Parameters specify the module, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52cb3-334">Ein <see cref="T:System.Attribute" />-Array mit den benutzerdefinierten Attributen vom Typ <paramref name="attributeType" />, die für <paramref name="element" /> übernommen werden, oder ein leeres Array, wenn keine benutzerdefinierten Attribute vorhanden sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-334">An <see cref="T:System.Attribute" /> array that contains the custom attributes of type <paramref name="attributeType" /> applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="52cb3-335">Das folgende Codebeispiel veranschaulicht die Verwendung von <xref:System.Attribute.GetCustomAttributes%2A>, wobei eine <xref:System.Reflection.Module> als Parameter.</span><span class="sxs-lookup"><span data-stu-id="52cb3-335">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.Module> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#2](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#2)]
 [!code-csharp[GetCustomAttributes#2](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca2.cs#2)]
 [!code-vb[GetCustomAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="52cb3-336">
            <paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-336">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="52cb3-337">
            <paramref name="attributeType" /> ist nicht von <see cref="T:System.Attribute" /> abgeleitet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-337">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.ParameterInfo element, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.ParameterInfo element, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As ParameterInfo, inherit As Boolean) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ element, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.ParameterInfo * bool -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="52cb3-338">Ein Objekt, das von der <see cref="T:System.Reflection.ParameterInfo" />-Klasse abgeleitet wurde und einen Parameter eines Klassenmembers beschreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-338">An object derived from the <see cref="T:System.Reflection.ParameterInfo" /> class that describes a parameter of a member of a class.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="52cb3-339">Wenn <see langword="true" />, wird angegeben, dass auch die früheren Versionen von <c>element</c> hinsichtlich benutzerdefinierter Attribute durchsucht werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-339">If <see langword="true" />, specifies to also search the ancestors of <c>element</c> for custom attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52cb3-340">Ruft ein Array der benutzerdefinierten Attribute ab, die auf einen Methodenparameter angewendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-340">Retrieves an array of the custom attributes applied to a method parameter.</span>
          </span>
          <span data-ttu-id="52cb3-341">Parameter geben den Methodenparameter an, und außerdem, ob frühere Versionen des Methodenparameters gesucht werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-341">Parameters specify the method parameter, and whether to search ancestors of the method parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52cb3-342">Ein <see cref="T:System.Attribute" />-Array mit den benutzerdefinierten Attributen, die für <paramref name="element" /> übernommen werden, oder ein leeres Array, wenn keine benutzerdefinierten Attribute vorhanden sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-342">An <see cref="T:System.Attribute" /> array that contains the custom attributes applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52cb3-343">Wenn `element` stellt einen Parameter in einer Methode eines abgeleiteten Typs, der Rückgabewert enthält die vererbbaren benutzerdefinierten Attribute, die auf den gleichen Parameter in der überschriebenen Basismethoden angewendet.</span><span class="sxs-lookup"><span data-stu-id="52cb3-343">If `element` represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52cb3-344">Das folgende Codebeispiel veranschaulicht die Verwendung von <xref:System.Attribute.GetCustomAttributes%2A>, wobei eine <xref:System.Reflection.ParameterInfo> als Parameter.</span><span class="sxs-lookup"><span data-stu-id="52cb3-344">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.ParameterInfo> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#5](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#5)]
 [!code-csharp[GetCustomAttributes#5](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca5.cs#5)]
 [!code-vb[GetCustomAttributes#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="52cb3-345">Die <see cref="P:System.Reflection.ParameterInfo.Member" />-Eigenschaft von <paramref name="element" /> ist <see langword="null." /><see langword="" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-345">The <see cref="P:System.Reflection.ParameterInfo.Member" /> property of <paramref name="element" /> is <see langword="null." /><see langword="" /></span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="52cb3-346">
            <paramref name="element" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-346">
              <paramref name="element" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="52cb3-347">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-347">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.ParameterInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.ParameterInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As ParameterInfo, attributeType As Type) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.ParameterInfo * Type -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="52cb3-348">Ein Objekt, das von der <see cref="T:System.Reflection.ParameterInfo" />-Klasse abgeleitet wurde und einen Parameter eines Klassenmembers beschreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-348">An object derived from the <see cref="T:System.Reflection.ParameterInfo" /> class that describes a parameter of a member of a class.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="52cb3-349">Der Typ des benutzerdefinierten Attributs oder ein Basistyp, nach dem gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-349">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52cb3-350">Ruft ein Array der benutzerdefinierten Attribute ab, die auf einen Methodenparameter angewendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-350">Retrieves an array of the custom attributes applied to a method parameter.</span>
          </span>
          <span data-ttu-id="52cb3-351">Parameter geben den Methodenparameter und den Typ des zu suchenden benutzerdefinierten Attributs an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-351">Parameters specify the method parameter, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52cb3-352">Ein <see cref="T:System.Attribute" />-Array mit den benutzerdefinierten Attributen vom Typ <paramref name="attributeType" />, die für <paramref name="element" /> übernommen werden, oder ein leeres Array, wenn keine benutzerdefinierten Attribute vorhanden sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-352">An <see cref="T:System.Attribute" /> array that contains the custom attributes of type <paramref name="attributeType" /> applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52cb3-353">Wenn `element` stellt einen Parameter in einer Methode eines abgeleiteten Typs, der Rückgabewert enthält die vererbbaren benutzerdefinierten Attribute, die auf den gleichen Parameter in der überschriebenen Basismethoden angewendet.</span><span class="sxs-lookup"><span data-stu-id="52cb3-353">If `element` represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52cb3-354">Das folgende Codebeispiel veranschaulicht die Verwendung von <xref:System.Attribute.GetCustomAttributes%2A>, wobei eine <xref:System.Reflection.ParameterInfo> als Parameter.</span><span class="sxs-lookup"><span data-stu-id="52cb3-354">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.ParameterInfo> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#5](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#5)]
 [!code-csharp[GetCustomAttributes#5](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca5.cs#5)]
 [!code-vb[GetCustomAttributes#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="52cb3-355">
            <paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-355">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="52cb3-356">
            <paramref name="attributeType" /> ist nicht von <see cref="T:System.Attribute" /> abgeleitet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-356">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="52cb3-357">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-357">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Assembly element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Assembly element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As Assembly, attributeType As Type, inherit As Boolean) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Assembly ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Assembly * Type * bool -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="52cb3-358">Ein von der <see cref="T:System.Reflection.Assembly" />-Klasse abgeleitetes Objekt, das eine wiederverwendbare Auflistung von Modulen beschreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-358">An object derived from the <see cref="T:System.Reflection.Assembly" /> class that describes a reusable collection of modules.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="52cb3-359">Der Typ des benutzerdefinierten Attributs oder ein Basistyp, nach dem gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-359">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="52cb3-360">Dieser Parameter wird ignoriert und wirkt sich nicht auf die Funktionsweise dieser Methode aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-360">This parameter is ignored, and does not affect the operation of this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52cb3-361">Ruft ein Array der benutzerdefinierten Attribute ab, die auf eine Assembly angewendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-361">Retrieves an array of the custom attributes applied to an assembly.</span>
          </span>
          <span data-ttu-id="52cb3-362">Parameter geben die Assembly und den Typ des zu suchenden benutzerdefinierten Attributs und eine ignorierte Suchoption an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-362">Parameters specify the assembly, the type of the custom attribute to search for, and an ignored search option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52cb3-363">Ein <see cref="T:System.Attribute" />-Array mit den benutzerdefinierten Attributen vom Typ <paramref name="attributeType" />, die für <paramref name="element" /> übernommen werden, oder ein leeres Array, wenn keine benutzerdefinierten Attribute vorhanden sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-363">An <see cref="T:System.Attribute" /> array that contains the custom attributes of type <paramref name="attributeType" /> applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="52cb3-364">Ab .NET Framework, Version 2.0, gibt diese Methode Sicherheitsattribute aus, wenn die Attribute in der neuen Metadatenformat gespeichert werden.</span><span class="sxs-lookup"><span data-stu-id="52cb3-364">Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="52cb3-365">Mit Version 2.0 oder höher kompilierte Assemblys werden das neue Format verwenden.</span><span class="sxs-lookup"><span data-stu-id="52cb3-365">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="52cb3-366">Verwenden dynamische Assemblys und Assemblys, die mit früheren Versionen von .NET Framework kompiliert die alte XML-Format.</span><span class="sxs-lookup"><span data-stu-id="52cb3-366">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="52cb3-367">Finden Sie unter [Ausgeben von deklarativen Sicherheitsattributen](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span><span class="sxs-lookup"><span data-stu-id="52cb3-367">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52cb3-368">Das folgende Codebeispiel veranschaulicht die Verwendung von <xref:System.Attribute.GetCustomAttributes%2A>, wobei ein <xref:System.Reflection.Assembly> als Parameter.</span><span class="sxs-lookup"><span data-stu-id="52cb3-368">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking an <xref:System.Reflection.Assembly> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#1](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/ca1.cpp#1)]
 [!code-csharp[GetCustomAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca1.cs#1)]
 [!code-vb[GetCustomAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="52cb3-369">
            <paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-369">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="52cb3-370">
            <paramref name="attributeType" /> ist nicht von <see cref="T:System.Attribute" /> abgeleitet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-370">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.MemberInfo element, Type type, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.MemberInfo element, class System.Type type, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ element, Type ^ type, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.MemberInfo * Type * bool -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, type, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="52cb3-371">Ein Objekt, das aus der <see cref="T:System.Reflection.MemberInfo" />-Klasse abgeleitet wurde und einen Konstruktor-, Ereignis-, Feld-, Methoden- oder Eigenschaftenmember einer Klasse beschreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-371">An object derived from the <see cref="T:System.Reflection.MemberInfo" /> class that describes a constructor, event, field, method, or property member of a class.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="52cb3-372">Der Typ des benutzerdefinierten Attributs oder ein Basistyp, nach dem gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-372">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="52cb3-373">Wenn <see langword="true" />, wird angegeben, dass auch die früheren Versionen von <c>element</c> hinsichtlich benutzerdefinierter Attribute durchsucht werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-373">If <see langword="true" />, specifies to also search the ancestors of <c>element</c> for custom attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52cb3-374">Ruft ein Array der benutzerdefinierten Attribute ab, die auf den Member eines Typs angewendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-374">Retrieves an array of the custom attributes applied to a member of a type.</span>
          </span>
          <span data-ttu-id="52cb3-375">Parameter geben den Member und den Typ des zu suchenden benutzerdefinierten Attributs an und außerdem, ob auch frühere Versionen des Members gesucht werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-375">Parameters specify the member, the type of the custom attribute to search for, and whether to search ancestors of the member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52cb3-376">Ein <see cref="T:System.Attribute" />-Array mit den benutzerdefinierten Attributen vom Typ <paramref name="type" />, die für <paramref name="element" /> übernommen werden, oder ein leeres Array, wenn keine benutzerdefinierten Attribute vorhanden sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-376">An <see cref="T:System.Attribute" /> array that contains the custom attributes of type <paramref name="type" /> applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52cb3-377">Der Rückgabewert enthält die benutzerdefinierten Attribute für frühere Versionen von `element` Wenn `inherit` ist `true`.</span><span class="sxs-lookup"><span data-stu-id="52cb3-377">The return value contains the custom attributes for ancestors of `element` if `inherit` is `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="52cb3-378">Ab .NET Framework, Version 2.0, gibt diese Methode für Methoden, Konstruktoren und Typen von Sicherheitsattributen zurück, wenn die Attribute in der neuen Metadatenformat gespeichert werden.</span><span class="sxs-lookup"><span data-stu-id="52cb3-378">Starting with the .NET Framework version 2.0, this method returns security attributes on methods, constructors, and types if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="52cb3-379">Mit Version 2.0 oder höher kompilierte Assemblys werden das neue Format verwenden.</span><span class="sxs-lookup"><span data-stu-id="52cb3-379">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="52cb3-380">Verwenden dynamische Assemblys und Assemblys, die mit früheren Versionen von .NET Framework kompiliert die alte XML-Format.</span><span class="sxs-lookup"><span data-stu-id="52cb3-380">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="52cb3-381">Finden Sie unter [Ausgeben von deklarativen Sicherheitsattributen](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span><span class="sxs-lookup"><span data-stu-id="52cb3-381">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52cb3-382">Das folgende Codebeispiel veranschaulicht die Verwendung von <xref:System.Attribute.GetCustomAttributes%2A>, wobei eine <xref:System.Reflection.MemberInfo> als Parameter.</span><span class="sxs-lookup"><span data-stu-id="52cb3-382">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.MemberInfo> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#4](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#4)]
 [!code-csharp[GetCustomAttributes#4](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca4.cs#4)]
 [!code-vb[GetCustomAttributes#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="52cb3-383">
            <paramref name="element" /> oder <paramref name="type" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-383">
              <paramref name="element" /> or <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="52cb3-384">
            <paramref name="type" /> ist nicht von <see cref="T:System.Attribute" /> abgeleitet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-384">
              <paramref name="type" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="52cb3-385">
            <paramref name="element" /> ist kein Konstruktor, keine Methode, keine Eigenschaft, kein Ereignis, kein Typ und kein Feld.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-385">
              <paramref name="element" /> is not a constructor, method, property, event, type, or field.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="52cb3-386">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-386">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Module element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Module element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As Module, attributeType As Type, inherit As Boolean) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Module ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Module * Type * bool -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="52cb3-387">Ein Objekt, das von der <see cref="T:System.Reflection.Module" />-Klasse abgeleitet wurde und eine übertragbare ausführbare Datei (Portable Executable, PE) beschreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-387">An object derived from the <see cref="T:System.Reflection.Module" /> class that describes a portable executable file.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="52cb3-388">Der Typ des benutzerdefinierten Attributs oder ein Basistyp, nach dem gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-388">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="52cb3-389">Dieser Parameter wird ignoriert und wirkt sich nicht auf die Funktionsweise dieser Methode aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-389">This parameter is ignored, and does not affect the operation of this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52cb3-390">Ruft ein Array der benutzerdefinierten Attribute ab, die auf ein Modul angewendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-390">Retrieves an array of the custom attributes applied to a module.</span>
          </span>
          <span data-ttu-id="52cb3-391">Parameter geben das Modul und den Typ des zu suchenden benutzerdefinierten Attributs und eine ignorierte Suchoption an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-391">Parameters specify the module, the type of the custom attribute to search for, and an ignored search option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52cb3-392">Ein <see cref="T:System.Attribute" />-Array mit den benutzerdefinierten Attributen vom Typ <paramref name="attributeType" />, die für <paramref name="element" /> übernommen werden, oder ein leeres Array, wenn keine benutzerdefinierten Attribute vorhanden sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-392">An <see cref="T:System.Attribute" /> array that contains the custom attributes of type <paramref name="attributeType" /> applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52cb3-393">Der Rückgabewert enthält die benutzerdefinierten Attribute für frühere Versionen von `element` Wenn `inherit` ist `true`.</span><span class="sxs-lookup"><span data-stu-id="52cb3-393">The return value contains the custom attributes for ancestors of `element` if `inherit` is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52cb3-394">Das folgende Codebeispiel veranschaulicht die Verwendung von <xref:System.Attribute.GetCustomAttributes%2A>, wobei eine <xref:System.Reflection.Module> als Parameter.</span><span class="sxs-lookup"><span data-stu-id="52cb3-394">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.Module> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#2](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#2)]
 [!code-csharp[GetCustomAttributes#2](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca2.cs#2)]
 [!code-vb[GetCustomAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="52cb3-395">
            <paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-395">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="52cb3-396">
            <paramref name="attributeType" /> ist nicht von <see cref="T:System.Attribute" /> abgeleitet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-396">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.ParameterInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.ParameterInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As ParameterInfo, attributeType As Type, inherit As Boolean) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.ParameterInfo * Type * bool -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="52cb3-397">Ein Objekt, das von der <see cref="T:System.Reflection.ParameterInfo" />-Klasse abgeleitet wurde und einen Parameter eines Klassenmembers beschreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-397">An object derived from the <see cref="T:System.Reflection.ParameterInfo" /> class that describes a parameter of a member of a class.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="52cb3-398">Der Typ des benutzerdefinierten Attributs oder ein Basistyp, nach dem gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-398">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="52cb3-399">Wenn <see langword="true" />, wird angegeben, dass auch die früheren Versionen von <c>element</c> hinsichtlich benutzerdefinierter Attribute durchsucht werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-399">If <see langword="true" />, specifies to also search the ancestors of <c>element</c> for custom attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52cb3-400">Ruft ein Array der benutzerdefinierten Attribute ab, die auf einen Methodenparameter angewendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-400">Retrieves an array of the custom attributes applied to a method parameter.</span>
          </span>
          <span data-ttu-id="52cb3-401">Parameter geben den Methodenparameter und den Typ des zu suchenden benutzerdefinierten Attributs an und außerdem, ob auch frühere Versionen des Methodenparameters gesucht werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-401">Parameters specify the method parameter, the type of the custom attribute to search for, and whether to search ancestors of the method parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52cb3-402">Ein <see cref="T:System.Attribute" />-Array mit den benutzerdefinierten Attributen vom Typ <paramref name="attributeType" />, die für <paramref name="element" /> übernommen werden, oder ein leeres Array, wenn keine benutzerdefinierten Attribute vorhanden sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-402">An <see cref="T:System.Attribute" /> array that contains the custom attributes of type <paramref name="attributeType" /> applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52cb3-403">Wenn `element` stellt einen Parameter in einer Methode eines abgeleiteten Typs, der Rückgabewert enthält die vererbbaren benutzerdefinierten Attribute, die auf den gleichen Parameter in der überschriebenen Basismethoden angewendet.</span><span class="sxs-lookup"><span data-stu-id="52cb3-403">If `element` represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52cb3-404">Das folgende Codebeispiel veranschaulicht die Verwendung von <xref:System.Attribute.GetCustomAttributes%2A>, wobei eine <xref:System.Reflection.ParameterInfo> als Parameter.</span><span class="sxs-lookup"><span data-stu-id="52cb3-404">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.ParameterInfo> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#5](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#5)]
 [!code-csharp[GetCustomAttributes#5](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca5.cs#5)]
 [!code-vb[GetCustomAttributes#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="52cb3-405">
            <paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-405">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="52cb3-406">
            <paramref name="attributeType" /> ist nicht von <see cref="T:System.Attribute" /> abgeleitet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-406">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="52cb3-407">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-407">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="attribute.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="52cb3-408">Gibt den Hashcode für diese Instanz zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-408">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52cb3-409">Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-409">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="52cb3-410">Das folgende Codebeispiel veranschaulicht die Verwendung von <xref:System.Attribute.GetHashCode%2A> im Kontext des <xref:System.Attribute>.</span><span class="sxs-lookup"><span data-stu-id="52cb3-410">The following code example illustrates the use of <xref:System.Attribute.GetHashCode%2A> in the context of <xref:System.Attribute>.</span></span>  
  
 [!code-csharp[GetHashCode#1](~/samples/snippets/csharp/VS_Snippets_CLR/GetHashCode/CS/hashcode.cs#1)]
 [!code-vb[GetHashCode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetHashCode/VB/hashcode.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefaultAttribute">
      <MemberSignature Language="C#" Value="public virtual bool IsDefaultAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDefaultAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefaultAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsDefaultAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsDefaultAttribute();" />
      <MemberSignature Language="F#" Value="abstract member IsDefaultAttribute : unit -&gt; bool&#xA;override this.IsDefaultAttribute : unit -&gt; bool" Usage="attribute.IsDefaultAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="52cb3-411">Gibt beim Überschreiben in einer abgeleiteten Klasse an, ob der Wert der Instanz der Standardwert für die abgeleitete Klasse ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-411">When overridden in a derived class, indicates whether the value of this instance is the default value for the derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52cb3-412">
            <see langword="true" />, wenn diese Instanz das Standardattribut für die Klasse ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-412">
              <see langword="true" /> if this instance is the default attribute for the class; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52cb3-413">Gibt die standardmäßige Implementierung dieser Klasse `false`, und klicken Sie in der abgeleiteten Klasse, die nützlich sein, um diese Klasse implementiert werden müssen.</span><span class="sxs-lookup"><span data-stu-id="52cb3-413">The default implementation of this class returns `false`, and must be implemented in the derived class to be useful to that class.</span></span>  
  
 <span data-ttu-id="52cb3-414">Die Implementierung dieser Methode in einer abgeleiteten Klasse vergleicht der Wert dieser Instanz mit standard-Standardwert zugewiesen wurde, klicken Sie dann einen booleschen Wert zurückgibt, der angibt, ob der Wert dieser Instanz des Standardwerts entspricht.</span><span class="sxs-lookup"><span data-stu-id="52cb3-414">The implementation of this method in a derived class compares the value of this instance to a standard default value, then returns a Boolean value that indicates whether the value of this instance is equal to the standard value.</span></span> <span data-ttu-id="52cb3-415">Der Standardwert ist in der Regel als Konstante in der Implementierung der programmierten, oder programmgesteuert in einem Feld, das von der Implementierung verwendete gespeichert.</span><span class="sxs-lookup"><span data-stu-id="52cb3-415">The standard value is typically coded as a constant in the implementation, or stored programmatically in a field used by the implementation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52cb3-416">Das folgende Codebeispiel veranschaulicht die Verwendung von <xref:System.Attribute.IsDefaultAttribute%2A>.</span><span class="sxs-lookup"><span data-stu-id="52cb3-416">The following code example illustrates the use of <xref:System.Attribute.IsDefaultAttribute%2A>.</span></span>  
  
 [!code-cpp[IsDefaultAttribute#1](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefaultAttribute/CPP/defattr.cpp#1)]
 [!code-csharp[IsDefaultAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefaultAttribute/CS/defattr.cs#1)]
 [!code-vb[IsDefaultAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefaultAttribute/VB/defattr.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsDefined">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="52cb3-417">Bestimmt, ob benutzerdefinierte Attribute eines angegebenen Typs auf eine Assembly, ein Modul, einen Typmember oder einen Methodenparameter angewendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-417">Determines whether any custom attributes of a specified type are applied to an assembly, module, type member, or method parameter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.Assembly element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.Assembly element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (element As Assembly, attributeType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(System::Reflection::Assembly ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member IsDefined : System.Reflection.Assembly * Type -&gt; bool" Usage="System.Attribute.IsDefined (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="52cb3-418">Ein von der <see cref="T:System.Reflection.Assembly" />-Klasse abgeleitetes Objekt, das eine wiederverwendbare Auflistung von Modulen beschreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-418">An object derived from the <see cref="T:System.Reflection.Assembly" /> class that describes a reusable collection of modules.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="52cb3-419">Der Typ des benutzerdefinierten Attributs oder ein Basistyp, nach dem gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-419">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52cb3-420">Bestimmt, ob benutzerdefinierte Attribute auf eine Assembly angewendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-420">Determines whether any custom attributes are applied to an assembly.</span>
          </span>
          <span data-ttu-id="52cb3-421">Parameter geben die Assembly und den Typ des zu suchenden benutzerdefinierten Attributs an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-421">Parameters specify the assembly, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52cb3-422">
            <see langword="true" />, wenn ein benutzerdefiniertes Attribut des Typs <paramref name="attributeType" /> auf <paramref name="element" /> angewendet wird; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-422">
              <see langword="true" /> if a custom attribute of type <paramref name="attributeType" /> is applied to <paramref name="element" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="52cb3-423">Ab .NET Framework, Version 2.0 wird diese Methode gibt `true` verfügt die Assembly Sicherheitsattribute, die in die neuen Metadatenformat gespeichert.</span><span class="sxs-lookup"><span data-stu-id="52cb3-423">Starting with the .NET Framework version 2.0, this method returns `true` if the assembly has security attributes stored in the new metadata format.</span></span> <span data-ttu-id="52cb3-424">Mit Version 2.0 oder höher kompilierte Assemblys werden das neue Format verwenden.</span><span class="sxs-lookup"><span data-stu-id="52cb3-424">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="52cb3-425">Verwenden dynamische Assemblys und Assemblys, die mit früheren Versionen von .NET Framework kompiliert die alte XML-Format.</span><span class="sxs-lookup"><span data-stu-id="52cb3-425">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="52cb3-426">Finden Sie unter [Ausgeben von deklarativen Sicherheitsattributen](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span><span class="sxs-lookup"><span data-stu-id="52cb3-426">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52cb3-427">Das folgende Codebeispiel veranschaulicht die Verwendung von <xref:System.Attribute.IsDefined%2A>, wobei ein <xref:System.Reflection.Assembly> als Parameter.</span><span class="sxs-lookup"><span data-stu-id="52cb3-427">The following code example illustrates the use of <xref:System.Attribute.IsDefined%2A>, taking an <xref:System.Reflection.Assembly> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#1](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#1)]
 [!code-csharp[IsDefined#1](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id1.cs#1)]
 [!code-vb[IsDefined#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="52cb3-428">
            <paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-428">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="52cb3-429">
            <paramref name="attributeType" /> ist nicht von <see cref="T:System.Attribute" /> abgeleitet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-429">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.MemberInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.MemberInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (element As MemberInfo, attributeType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(System::Reflection::MemberInfo ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member IsDefined : System.Reflection.MemberInfo * Type -&gt; bool" Usage="System.Attribute.IsDefined (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="52cb3-430">Ein Objekt, das aus der <see cref="T:System.Reflection.MemberInfo" />-Klasse abgeleitet wurde und einen Konstruktor-, Ereignis-, Feld-, Methoden-, Typ- oder Eigenschaftenmember einer Klasse beschreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-430">An object derived from the <see cref="T:System.Reflection.MemberInfo" /> class that describes a constructor, event, field, method, type, or property member of a class.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="52cb3-431">Der Typ des benutzerdefinierten Attributs oder ein Basistyp, nach dem gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-431">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52cb3-432">Bestimmt, ob benutzerdefinierte Attribute auf einen Member eines Typs angewendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-432">Determines whether any custom attributes are applied to a member of a type.</span>
          </span>
          <span data-ttu-id="52cb3-433">Parameter geben den Member und den Typ des zu suchenden benutzerdefinierten Attributs an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-433">Parameters specify the member, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52cb3-434">
            <see langword="true" />, wenn ein benutzerdefiniertes Attribut des Typs <paramref name="attributeType" /> auf <paramref name="element" /> angewendet wird; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-434">
              <see langword="true" /> if a custom attribute of type <paramref name="attributeType" /> is applied to <paramref name="element" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52cb3-435">Die übergeordneten Elemente der `element` hinsichtlich benutzerdefinierter Attribute durchsucht werden.</span><span class="sxs-lookup"><span data-stu-id="52cb3-435">The ancestors of `element` are searched for custom attributes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="52cb3-436">Ab .NET Framework, Version 2.0 wird diese Methode gibt `true` verfügt ein Typ, Methode oder Konstruktor Sicherheitsattribute, die in die neuen Metadatenformat gespeichert.</span><span class="sxs-lookup"><span data-stu-id="52cb3-436">Starting with the .NET Framework version 2.0, this method returns `true` if a type, method, or constructor has security attributes stored in the new metadata format.</span></span> <span data-ttu-id="52cb3-437">Mit Version 2.0 oder höher kompilierte Assemblys werden das neue Format verwenden.</span><span class="sxs-lookup"><span data-stu-id="52cb3-437">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="52cb3-438">Verwenden dynamische Assemblys und Assemblys, die mit früheren Versionen von .NET Framework kompiliert die alte XML-Format.</span><span class="sxs-lookup"><span data-stu-id="52cb3-438">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="52cb3-439">Finden Sie unter [Ausgeben von deklarativen Sicherheitsattributen](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span><span class="sxs-lookup"><span data-stu-id="52cb3-439">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52cb3-440">Das folgende Codebeispiel veranschaulicht die Verwendung von <xref:System.Attribute.IsDefined%2A>, wobei eine <xref:System.Reflection.MemberInfo> als Parameter.</span><span class="sxs-lookup"><span data-stu-id="52cb3-440">The following code example illustrates the use of <xref:System.Attribute.IsDefined%2A>, taking a <xref:System.Reflection.MemberInfo> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#4](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#4)]
 [!code-csharp[IsDefined#4](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id4.cs#4)]
 [!code-vb[IsDefined#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="52cb3-441">
            <paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-441">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="52cb3-442">
            <paramref name="attributeType" /> ist nicht von <see cref="T:System.Attribute" /> abgeleitet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-442">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="52cb3-443">
            <paramref name="element" /> ist kein Konstruktor, keine Methode, keine Eigenschaft, kein Ereignis, kein Typ und kein Feld.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-443">
              <paramref name="element" /> is not a constructor, method, property, event, type, or field.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.Module element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.Module element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (element As Module, attributeType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(System::Reflection::Module ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member IsDefined : System.Reflection.Module * Type -&gt; bool" Usage="System.Attribute.IsDefined (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="52cb3-444">Ein Objekt, das von der <see cref="T:System.Reflection.Module" />-Klasse abgeleitet wurde und eine übertragbare ausführbare Datei (Portable Executable, PE) beschreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-444">An object derived from the <see cref="T:System.Reflection.Module" /> class that describes a portable executable file.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="52cb3-445">Der Typ des benutzerdefinierten Attributs oder ein Basistyp, nach dem gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-445">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52cb3-446">Ermittelt, ob benutzerdefinierte Attribute eines bestimmten Typs auf ein Modul angewendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-446">Determines whether any custom attributes of a specified type are applied to a module.</span>
          </span>
          <span data-ttu-id="52cb3-447">Parameter geben das Modul und den Typ des zu suchenden benutzerdefinierten Attributs an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-447">Parameters specify the module, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52cb3-448">
            <see langword="true" />, wenn ein benutzerdefiniertes Attribut des Typs <paramref name="attributeType" /> auf <paramref name="element" /> angewendet wird; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-448">
              <see langword="true" /> if a custom attribute of type <paramref name="attributeType" /> is applied to <paramref name="element" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52cb3-449">Die übergeordneten Elemente der `element` nicht hinsichtlich benutzerdefinierter Attribute durchsucht werden.</span><span class="sxs-lookup"><span data-stu-id="52cb3-449">The ancestors of `element` are not searched for custom attributes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52cb3-450">Das folgende Codebeispiel veranschaulicht die Verwendung von <xref:System.Attribute.IsDefined%2A>, wobei eine <xref:System.Reflection.Module> als Parameter.</span><span class="sxs-lookup"><span data-stu-id="52cb3-450">The following code example illustrates the use of <xref:System.Attribute.IsDefined%2A>, taking a <xref:System.Reflection.Module> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#2](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#2)]
 [!code-csharp[IsDefined#2](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id2.cs#2)]
 [!code-vb[IsDefined#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="52cb3-451">
            <paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-451">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="52cb3-452">
            <paramref name="attributeType" /> ist nicht von <see cref="T:System.Attribute" /> abgeleitet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-452">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.ParameterInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.ParameterInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (element As ParameterInfo, attributeType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(System::Reflection::ParameterInfo ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member IsDefined : System.Reflection.ParameterInfo * Type -&gt; bool" Usage="System.Attribute.IsDefined (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="52cb3-453">Ein Objekt, das von der <see cref="T:System.Reflection.ParameterInfo" />-Klasse abgeleitet wurde und einen Parameter eines Klassenmembers beschreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-453">An object derived from the <see cref="T:System.Reflection.ParameterInfo" /> class that describes a parameter of a member of a class.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="52cb3-454">Der Typ des benutzerdefinierten Attributs oder ein Basistyp, nach dem gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-454">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52cb3-455">Bestimmt, ob benutzerdefinierte Attribute auf einen Methodenparameter angewendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-455">Determines whether any custom attributes are applied to a method parameter.</span>
          </span>
          <span data-ttu-id="52cb3-456">Parameter geben den Methodenparameter und den Typ des zu suchenden benutzerdefinierten Attributs an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-456">Parameters specify the method parameter, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52cb3-457">
            <see langword="true" />, wenn ein benutzerdefiniertes Attribut des Typs <paramref name="attributeType" /> auf <paramref name="element" /> angewendet wird; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-457">
              <see langword="true" /> if a custom attribute of type <paramref name="attributeType" /> is applied to <paramref name="element" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52cb3-458">Die übergeordneten Elemente der `element` hinsichtlich benutzerdefinierter Attribute durchsucht werden.</span><span class="sxs-lookup"><span data-stu-id="52cb3-458">The ancestors of `element` are searched for custom attributes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52cb3-459">Das folgende Codebeispiel veranschaulicht die Verwendung von <xref:System.Attribute.IsDefined%2A>, wobei eine <xref:System.Reflection.ParameterInfo> als Parameter.</span><span class="sxs-lookup"><span data-stu-id="52cb3-459">The following code example illustrates the use of <xref:System.Attribute.IsDefined%2A>, taking a <xref:System.Reflection.ParameterInfo> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#5](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#5)]
 [!code-csharp[IsDefined#5](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id5.cs#5)]
 [!code-vb[IsDefined#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="52cb3-460">
            <paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-460">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="52cb3-461">
            <paramref name="attributeType" /> ist nicht von <see cref="T:System.Attribute" /> abgeleitet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-461">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.Assembly element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.Assembly element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (element As Assembly, attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(System::Reflection::Assembly ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member IsDefined : System.Reflection.Assembly * Type * bool -&gt; bool" Usage="System.Attribute.IsDefined (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="52cb3-462">Ein von der <see cref="T:System.Reflection.Assembly" />-Klasse abgeleitetes Objekt, das eine wiederverwendbare Auflistung von Modulen beschreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-462">An object derived from the <see cref="T:System.Reflection.Assembly" /> class that describes a reusable collection of modules.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="52cb3-463">Der Typ des benutzerdefinierten Attributs oder ein Basistyp, nach dem gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-463">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="52cb3-464">Dieser Parameter wird ignoriert und wirkt sich nicht auf die Funktionsweise dieser Methode aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-464">This parameter is ignored, and does not affect the operation of this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52cb3-465">Bestimmt, ob benutzerdefinierte Attribute auf eine Assembly angewendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-465">Determines whether any custom attributes are applied to an assembly.</span>
          </span>
          <span data-ttu-id="52cb3-466">Parameter geben die Assembly und den Typ des zu suchenden benutzerdefinierten Attributs und eine ignorierte Suchoption an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-466">Parameters specify the assembly, the type of the custom attribute to search for, and an ignored search option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52cb3-467">
            <see langword="true" />, wenn ein benutzerdefiniertes Attribut des Typs <paramref name="attributeType" /> auf <paramref name="element" /> angewendet wird; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-467">
              <see langword="true" /> if a custom attribute of type <paramref name="attributeType" /> is applied to <paramref name="element" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="52cb3-468">Ab .NET Framework, Version 2.0 wird diese Methode gibt `true` verfügt die Assembly Sicherheitsattribute, die in die neuen Metadatenformat gespeichert.</span><span class="sxs-lookup"><span data-stu-id="52cb3-468">Starting with the .NET Framework version 2.0, this method returns `true` if the assembly has security attributes stored in the new metadata format.</span></span> <span data-ttu-id="52cb3-469">Mit Version 2.0 oder höher kompilierte Assemblys werden das neue Format verwenden.</span><span class="sxs-lookup"><span data-stu-id="52cb3-469">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="52cb3-470">Verwenden dynamische Assemblys und Assemblys, die mit früheren Versionen von .NET Framework kompiliert die alte XML-Format.</span><span class="sxs-lookup"><span data-stu-id="52cb3-470">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="52cb3-471">Finden Sie unter [Ausgeben von deklarativen Sicherheitsattributen](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span><span class="sxs-lookup"><span data-stu-id="52cb3-471">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52cb3-472">Das folgende Codebeispiel veranschaulicht die Verwendung von <xref:System.Attribute.IsDefined%2A>, wobei ein <xref:System.Reflection.Assembly> als Parameter.</span><span class="sxs-lookup"><span data-stu-id="52cb3-472">The following code example illustrates the use of <xref:System.Attribute.IsDefined%2A>, taking an <xref:System.Reflection.Assembly> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#1](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#1)]
 [!code-csharp[IsDefined#1](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id1.cs#1)]
 [!code-vb[IsDefined#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="52cb3-473">
            <paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-473">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="52cb3-474">
            <paramref name="attributeType" /> ist nicht von <see cref="T:System.Attribute" /> abgeleitet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-474">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.MemberInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.MemberInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (element As MemberInfo, attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(System::Reflection::MemberInfo ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member IsDefined : System.Reflection.MemberInfo * Type * bool -&gt; bool" Usage="System.Attribute.IsDefined (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="52cb3-475">Ein Objekt, das aus der <see cref="T:System.Reflection.MemberInfo" />-Klasse abgeleitet wurde und einen Konstruktor-, Ereignis-, Feld-, Methoden-, Typ- oder Eigenschaftenmember einer Klasse beschreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-475">An object derived from the <see cref="T:System.Reflection.MemberInfo" /> class that describes a constructor, event, field, method, type, or property member of a class.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="52cb3-476">Der Typ des benutzerdefinierten Attributs oder ein Basistyp, nach dem gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-476">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="52cb3-477">Wenn <see langword="true" />, wird angegeben, dass auch die früheren Versionen von <c>element</c> hinsichtlich benutzerdefinierter Attribute durchsucht werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-477">If <see langword="true" />, specifies to also search the ancestors of <c>element</c> for custom attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52cb3-478">Bestimmt, ob benutzerdefinierte Attribute auf einen Member eines Typs angewendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-478">Determines whether any custom attributes are applied to a member of a type.</span>
          </span>
          <span data-ttu-id="52cb3-479">Parameter geben den Member und den Typ des zu suchenden benutzerdefinierten Attributs an und außerdem, ob auch frühere Versionen des Members gesucht werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-479">Parameters specify the member, the type of the custom attribute to search for, and whether to search ancestors of the member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52cb3-480">
            <see langword="true" />, wenn ein benutzerdefiniertes Attribut des Typs <paramref name="attributeType" /> auf <paramref name="element" /> angewendet wird; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-480">
              <see langword="true" /> if a custom attribute of type <paramref name="attributeType" /> is applied to <paramref name="element" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="52cb3-481">Ab .NET Framework, Version 2.0 wird diese Methode gibt `true` verfügt ein Typ, Methode oder Konstruktor Sicherheitsattribute, die in die neuen Metadatenformat gespeichert.</span><span class="sxs-lookup"><span data-stu-id="52cb3-481">Starting with the .NET Framework version 2.0, this method returns `true` if a type, method, or constructor has security attributes stored in the new metadata format.</span></span> <span data-ttu-id="52cb3-482">Mit Version 2.0 oder höher kompilierte Assemblys werden das neue Format verwenden.</span><span class="sxs-lookup"><span data-stu-id="52cb3-482">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="52cb3-483">Verwenden dynamische Assemblys und Assemblys, die mit früheren Versionen von .NET Framework kompiliert die alte XML-Format.</span><span class="sxs-lookup"><span data-stu-id="52cb3-483">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="52cb3-484">Finden Sie unter [Ausgeben von deklarativen Sicherheitsattributen](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span><span class="sxs-lookup"><span data-stu-id="52cb3-484">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52cb3-485">Das folgende Codebeispiel veranschaulicht die Verwendung von <xref:System.Attribute.IsDefined%2A>, wobei eine <xref:System.Reflection.MemberInfo> als Parameter.</span><span class="sxs-lookup"><span data-stu-id="52cb3-485">The following code example illustrates the use of <xref:System.Attribute.IsDefined%2A>, taking a <xref:System.Reflection.MemberInfo> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#4](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#4)]
 [!code-csharp[IsDefined#4](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id4.cs#4)]
 [!code-vb[IsDefined#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="52cb3-486">
            <paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-486">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="52cb3-487">
            <paramref name="attributeType" /> ist nicht von <see cref="T:System.Attribute" /> abgeleitet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-487">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="52cb3-488">
            <paramref name="element" /> ist kein Konstruktor, keine Methode, keine Eigenschaft, kein Ereignis, kein Typ und kein Feld.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-488">
              <paramref name="element" /> is not a constructor, method, property, event, type, or field.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.Module element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.Module element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (element As Module, attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(System::Reflection::Module ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member IsDefined : System.Reflection.Module * Type * bool -&gt; bool" Usage="System.Attribute.IsDefined (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="52cb3-489">Ein Objekt, das von der <see cref="T:System.Reflection.Module" />-Klasse abgeleitet wurde und eine übertragbare ausführbare Datei (Portable Executable, PE) beschreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-489">An object derived from the <see cref="T:System.Reflection.Module" /> class that describes a portable executable file.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="52cb3-490">Der Typ des benutzerdefinierten Attributs oder ein Basistyp, nach dem gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-490">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="52cb3-491">Dieser Parameter wird ignoriert und wirkt sich nicht auf die Funktionsweise dieser Methode aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-491">This parameter is ignored, and does not affect the operation of this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52cb3-492">Bestimmt, ob benutzerdefinierte Attribute auf ein Modul angewendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-492">Determines whether any custom attributes are applied to a module.</span>
          </span>
          <span data-ttu-id="52cb3-493">Parameter geben das Modul und den Typ des zu suchenden benutzerdefinierten Attributs und eine ignorierte Suchoption an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-493">Parameters specify the module, the type of the custom attribute to search for, and an ignored search option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52cb3-494">
            <see langword="true" />, wenn ein benutzerdefiniertes Attribut des Typs <paramref name="attributeType" /> auf <paramref name="element" /> angewendet wird; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-494">
              <see langword="true" /> if a custom attribute of type <paramref name="attributeType" /> is applied to <paramref name="element" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52cb3-495">Diese Methode ignoriert die `inherit` Parameter und sucht nicht die übergeordneten Elementen `element` für benutzerdefinierte Attribute.</span><span class="sxs-lookup"><span data-stu-id="52cb3-495">This method ignores the `inherit` parameter and does not search the ancestors of `element` for custom attributes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52cb3-496">Das folgende Codebeispiel veranschaulicht die Verwendung von <xref:System.Attribute.IsDefined%2A>, wobei eine <xref:System.Reflection.Module> als Parameter.</span><span class="sxs-lookup"><span data-stu-id="52cb3-496">The following code example illustrates the use of <xref:System.Attribute.IsDefined%2A>, taking a <xref:System.Reflection.Module> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#2](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#2)]
 [!code-csharp[IsDefined#2](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id2.cs#2)]
 [!code-vb[IsDefined#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="52cb3-497">
            <paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-497">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="52cb3-498">
            <paramref name="attributeType" /> ist nicht von <see cref="T:System.Attribute" /> abgeleitet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-498">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.ParameterInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.ParameterInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (element As ParameterInfo, attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(System::Reflection::ParameterInfo ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member IsDefined : System.Reflection.ParameterInfo * Type * bool -&gt; bool" Usage="System.Attribute.IsDefined (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="52cb3-499">Ein Objekt, das von der <see cref="T:System.Reflection.ParameterInfo" />-Klasse abgeleitet wurde und einen Parameter eines Klassenmembers beschreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-499">An object derived from the <see cref="T:System.Reflection.ParameterInfo" /> class that describes a parameter of a member of a class.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="52cb3-500">Der Typ des benutzerdefinierten Attributs oder ein Basistyp, nach dem gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-500">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="52cb3-501">Wenn <see langword="true" />, wird angegeben, dass auch die früheren Versionen von <c>element</c> hinsichtlich benutzerdefinierter Attribute durchsucht werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-501">If <see langword="true" />, specifies to also search the ancestors of <c>element</c> for custom attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52cb3-502">Bestimmt, ob benutzerdefinierte Attribute auf einen Methodenparameter angewendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-502">Determines whether any custom attributes are applied to a method parameter.</span>
          </span>
          <span data-ttu-id="52cb3-503">Parameter geben den Methodenparameter und den Typ des zu suchenden benutzerdefinierten Attributs an und außerdem, ob auch frühere Versionen des Methodenparameters gesucht werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-503">Parameters specify the method parameter, the type of the custom attribute to search for, and whether to search ancestors of the method parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52cb3-504">
            <see langword="true" />, wenn ein benutzerdefiniertes Attribut des Typs <paramref name="attributeType" /> auf <paramref name="element" /> angewendet wird; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-504">
              <see langword="true" /> if a custom attribute of type <paramref name="attributeType" /> is applied to <paramref name="element" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="52cb3-505">Das folgende Codebeispiel veranschaulicht die Verwendung von <xref:System.Attribute.IsDefined%2A>, wobei eine <xref:System.Reflection.ParameterInfo> als Parameter.</span><span class="sxs-lookup"><span data-stu-id="52cb3-505">The following code example illustrates the use of <xref:System.Attribute.IsDefined%2A>, taking a <xref:System.Reflection.ParameterInfo> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#5](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#5)]
 [!code-csharp[IsDefined#5](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id5.cs#5)]
 [!code-vb[IsDefined#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="52cb3-506">
            <paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-506">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="52cb3-507">
            <paramref name="attributeType" /> ist nicht von <see cref="T:System.Attribute" /> abgeleitet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-507">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ExecutionEngineException">
          <span data-ttu-id="52cb3-508">
            <paramref name="element" /> ist keine Methode, kein Konstruktor oder kein Typ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-508">
              <paramref name="element" /> is not a method, constructor, or type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public virtual bool Match (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Match(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.Match(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Match (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Match(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member Match : obj -&gt; bool&#xA;override this.Match : obj -&gt; bool" Usage="attribute.Match obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="52cb3-509">Ein <see cref="T:System.Object" />, das mit dieser Instanz von <see cref="T:System.Attribute" /> verglichen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-509">An <see cref="T:System.Object" /> to compare with this instance of <see cref="T:System.Attribute" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52cb3-510">Beim Überschreiben in einer abgeleiteten Klasse wird ein Wert zurückgegeben, der angibt, ob diese Instanz einem bestimmten Objekt entspricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-510">When overridden in a derived class, returns a value that indicates whether this instance equals a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52cb3-511">
            <see langword="true" />, wenn diese Instanz <paramref name="obj" /> gleicht; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-511">
              <see langword="true" /> if this instance equals <paramref name="obj" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52cb3-512">Diese Methode bestimmt, ob eine <xref:System.Attribute> gleich einem anderen.</span><span class="sxs-lookup"><span data-stu-id="52cb3-512">This method determines if one <xref:System.Attribute> equals another.</span></span> <span data-ttu-id="52cb3-513">Die Standardimplementierung ist identisch mit <xref:System.Attribute.Equals%2A>, der bestimmt, ob die beiden Attribute vom gleichen Typ sind und die Feldwerten haben.</span><span class="sxs-lookup"><span data-stu-id="52cb3-513">Its default implementation is the same as <xref:System.Attribute.Equals%2A>, which determines whether two attributes are of the same type and have the same field values.</span></span>

 <span data-ttu-id="52cb3-514">Im Allgemeinen die <xref:System.Attribute.Equals%2A> Methode soll einen standard-Test für Verweis- oder Werttyp auf Gleichheit durchzuführen.</span><span class="sxs-lookup"><span data-stu-id="52cb3-514">In general, the <xref:System.Attribute.Equals%2A> method is intended to perform a standard test for reference or value equality.</span></span> <span data-ttu-id="52cb3-515">Sie können außer Kraft setzen der <xref:System.Attribute.Match%2A> Methode, wenn Sie einen benutzerdefinierten Vergleich Gleichheit durchzuführen, die basiert auf den Kriterien nicht, dass zwei Instanzen Attribut möchten den gleichen Typ aufweisen und Identifical-Werte aufweisen.</span><span class="sxs-lookup"><span data-stu-id="52cb3-515">You can override the <xref:System.Attribute.Match%2A> method when you want to perform a custom comparison for equality that is based on some criteria other than that two attribute instances are of the same type and have identifical values.</span></span> <span data-ttu-id="52cb3-516">Sie können z. B. überschreiben die <xref:System.Attribute.Match%2A> Methode, um Attribute in den folgenden Szenarien zu vergleichen:</span><span class="sxs-lookup"><span data-stu-id="52cb3-516">For example, you can override the <xref:System.Attribute.Match%2A> method to compare attributes in the following scenarios:</span></span>

 - <span data-ttu-id="52cb3-517">Ein Attribut enthält ein Bitfeld, und Sie in Betracht ziehen, dass zwei Attributinstanzen entsprechen, wenn ein bestimmtes Bit festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="52cb3-517">An attribute includes a bit field, and you consider two attribute instances equal if a particular bit is set.</span></span> <span data-ttu-id="52cb3-518">Z. B. eine `NumericDisplay` Attribut sind zum Beispiel ein Bitfeld, der angibt, welche numerische Formate (z. B. binäre, oktale, Dezimalstellen und hexadezimal) ein Client unterstützt.</span><span class="sxs-lookup"><span data-stu-id="52cb3-518">For example, a `NumericDisplay` attribute might include a bit field that indicates what numeric formats (such as binary, octal, decimal, and hexadecimal) a client supports.</span></span> <span data-ttu-id="52cb3-519">Die überschriebene <xref:System.Attribute.Match%2A> Methode erwägen, zwei Instanzen gleich, wenn sie das gleiche numerische Format unterstützen.</span><span class="sxs-lookup"><span data-stu-id="52cb3-519">The overridden <xref:System.Attribute.Match%2A> method might consider two instances equal if they support the same numeric format.</span></span>

 - <span data-ttu-id="52cb3-520">Ein Attribut enthält mehrere Felder, die die gleiche Art von Informationen enthalten, oder er enthält ein Array, in der Werte in beliebiger Reihenfolge enthalten sein können.</span><span class="sxs-lookup"><span data-stu-id="52cb3-520">An attribute includes multiple fields that contain the same kind of information, or it contains an array in which values can be in any order.</span></span> <span data-ttu-id="52cb3-521">Z. B. eine `Author` Attribut kann mehrere Felder für den Autorennamen enthalten.</span><span class="sxs-lookup"><span data-stu-id="52cb3-521">For example, an `Author` attribute might include multiple fields for author names.</span></span> <span data-ttu-id="52cb3-522">Die überschriebene <xref:System.Attribute.Match%2A> Methode erwägen, zwei Instanzen gleich, wenn sie die gleichen Autoren unabhängig davon, ob jedes Feld gleich dem entsprechenden Feld aufweisen.</span><span class="sxs-lookup"><span data-stu-id="52cb3-522">The overridden <xref:System.Attribute.Match%2A> method might consider two instances equal if they have the same authors regardless of whether each field is equal to the corresponding field.</span></span>    
 
 
## <a name="example"></a><span data-ttu-id="52cb3-523">Beispiel</span><span class="sxs-lookup"><span data-stu-id="52cb3-523">Example</span></span>  
 <span data-ttu-id="52cb3-524">Das folgende Beispiel veranschaulicht die Verwendung von <xref:System.Attribute.Match%2A> zum Erstellen einer benutzerdefinierten Vergleichsmethode für Attributwerte.</span><span class="sxs-lookup"><span data-stu-id="52cb3-524">The following example illustrates the use of <xref:System.Attribute.Match%2A> to create a custom comparison method for attribute values.</span></span> <span data-ttu-id="52cb3-525">Wenn definiert eine `AuthorsAttribute` enthält, die intern eine `List<String>` Namen Autoren speichert.</span><span class="sxs-lookup"><span data-stu-id="52cb3-525">If defines an `AuthorsAttribute` that internally contains a `List<String>` that stores authors' names.</span></span> <span data-ttu-id="52cb3-526">Da die Namen in beliebiger Reihenfolge in der Liste auftreten können, überschreibt es die <xref:System.Attribute.Match%2A> Methode, um die Autorennamen unabhängig von ihrer Position in der Liste verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="52cb3-526">Because the names can occur in any order in the list, it overrides the <xref:System.Attribute.Match%2A> method to compare author names regardless of their position in the list.</span></span> <span data-ttu-id="52cb3-527">Beachten Sie die <xref:System.Attribute.Equals%2A> Methode, die Wertgleichheit einen Test ausführt, gibt andere Ergebnisse zurück, die <xref:System.Attribute.Match%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="52cb3-527">Note the <xref:System.Attribute.Equals%2A> method, which performs a test for value equality, returns different results from the <xref:System.Attribute.Match%2A> method.</span></span>   
  
 [!code-csharp[Match#1](~/samples/snippets/csharp/VS_Snippets_CLR/Match/CS/match.cs)]
 [!code-vb[Match#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Match/VB/match.vb)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Attribute.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _Attribute.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Attribute.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _Attribute.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Attribute.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_Attribute::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid">
          <span data-ttu-id="52cb3-528">Für zukünftige Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-528">Reserved for future use.</span>
          </span>
          <span data-ttu-id="52cb3-529">Muss IID_NULL sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-529">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="rgszNames">
          <span data-ttu-id="52cb3-530">Das übergebene Array von zuzuordnenden Namen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-530">Passed-in array of names to be mapped.</span>
          </span>
        </param>
        <param name="cNames">
          <span data-ttu-id="52cb3-531">Die Anzahl der zuzuordnenden Namen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-531">Count of the names to be mapped.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="52cb3-532">Der Gebietsschemakontext, in dem die Namen interpretiert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-532">The locale context in which to interpret the names.</span>
          </span>
        </param>
        <param name="rgDispId">
          <span data-ttu-id="52cb3-533">Das vom Aufrufer zugeordnete Array, das die IDs entsprechend den Namen empfängt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-533">Caller-allocated array that receives the IDs corresponding to the names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52cb3-534">Ordnet eine Reihe von Namen einer entsprechenden Reihe von Dispatchbezeichnern zu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-534">Maps a set of names to a corresponding set of dispatch identifiers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52cb3-535">Diese Methode ist für den Zugriff auf verwaltete Klassen von nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="52cb3-535">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="52cb3-536">Weitere Informationen zu `IDispatch::GetIDsOfNames`, finden Sie unter der MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="52cb3-536">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="52cb3-537">Spät gebundener Zugriff mithilfe der <c>IDispatch</c>-Schnittstelle in COM wird nicht unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-537">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Attribute.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _Attribute.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Attribute.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _Attribute.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Attribute.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_Attribute::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo">
          <span data-ttu-id="52cb3-538">Die zurückzugebenden Typinformationen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-538">The type information to return.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="52cb3-539">Der Gebietsschemabezeichner für die Typinformationen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-539">The locale identifier for the type information.</span>
          </span>
        </param>
        <param name="ppTInfo">
          <span data-ttu-id="52cb3-540">Empfängt einen Zeiger auf das angeforderte Objekt mit den Typinformationen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-540">Receives a pointer to the requested type information object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52cb3-541">Ruft die Typinformationen für ein Objekt ab, mit deren Hilfe die Typinformationen für eine Schnittstelle abgerufen werden können.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-541">Retrieves the type information for an object, which can be used to get the type information for an interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52cb3-542">Diese Methode ist für den Zugriff auf verwaltete Klassen von nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="52cb3-542">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="52cb3-543">Weitere Informationen zu `IDispatch::GetTypeInfo`, finden Sie unter der MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="52cb3-543">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="52cb3-544">Spät gebundener Zugriff mithilfe der <c>IDispatch</c>-Schnittstelle in COM wird nicht unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-544">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Attribute.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _Attribute.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Attribute.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _Attribute.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Attribute.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_Attribute::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo">
          <span data-ttu-id="52cb3-545">Zeigt auf einen Speicherort, der die Anzahl der Schnittstellen mit Typinformationen empfängt, die vom Objekt bereitgestellt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-545">Points to a location that receives the number of type information interfaces provided by the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52cb3-546">Ruft die Anzahl der Schnittstellen mit Typinformationen ab, die von einem Objekt bereitgestellt werden (0 oder 1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-546">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52cb3-547">Diese Methode ist für den Zugriff auf verwaltete Klassen von nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="52cb3-547">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="52cb3-548">Weitere Informationen zu `IDispatch::GetTypeInfoCount`, finden Sie unter der MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="52cb3-548">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="52cb3-549">Spät gebundener Zugriff mithilfe der <c>IDispatch</c>-Schnittstelle in COM wird nicht unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-549">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Attribute.Invoke">
      <MemberSignature Language="C#" Value="void _Attribute.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Attribute.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _Attribute.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Attribute.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_Attribute::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Attribute.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember">
          <span data-ttu-id="52cb3-550">Bezeichnet den Member.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-550">Identifies the member.</span>
          </span>
        </param>
        <param name="riid">
          <span data-ttu-id="52cb3-551">Für zukünftige Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-551">Reserved for future use.</span>
          </span>
          <span data-ttu-id="52cb3-552">Muss IID_NULL sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-552">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="52cb3-553">Der Gebietsschemakontext, in dem Argumente interpretiert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-553">The locale context in which to interpret arguments.</span>
          </span>
        </param>
        <param name="wFlags">
          <span data-ttu-id="52cb3-554">Flags, die den Kontext des Aufrufs beschreiben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-554">Flags describing the context of the call.</span>
          </span>
        </param>
        <param name="pDispParams">
          <span data-ttu-id="52cb3-555">Ein Zeiger auf eine Struktur, die ein Array von Argumenten und ein Array von Argument-DISPIDs für benannte Argumente sowie Zähler für die Anzahl der Elemente in jedem Array enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-555">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span>
          </span>
        </param>
        <param name="pVarResult">
          <span data-ttu-id="52cb3-556">Ein Verweis auf den Speicherort, an dem das Ergebnis gespeichert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-556">Pointer to the location where the result is to be stored.</span>
          </span>
        </param>
        <param name="pExcepInfo">
          <span data-ttu-id="52cb3-557">Ein Zeiger auf eine Struktur mit Ausnahmeinformationen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-557">Pointer to a structure that contains exception information.</span>
          </span>
        </param>
        <param name="puArgErr">
          <span data-ttu-id="52cb3-558">Der Index des ersten Arguments mit einem Fehler.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-558">The index of the first argument that has an error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52cb3-559">Stellt den Zugriff auf von einem Objekt verfügbar gemachte Eigenschaften und Methoden bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-559">Provides access to properties and methods exposed by an object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52cb3-560">Diese Methode ist für den Zugriff auf verwaltete Klassen von nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="52cb3-560">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="52cb3-561">Weitere Informationen zu `IDispatch::Invoke`, finden Sie unter der MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="52cb3-561">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="52cb3-562">Spät gebundener Zugriff mithilfe der <c>IDispatch</c>-Schnittstelle in COM wird nicht unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-562">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TypeId">
      <MemberSignature Language="C#" Value="public virtual object TypeId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TypeId" />
      <MemberSignature Language="DocId" Value="P:System.Attribute.TypeId" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TypeId As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ TypeId { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeId : obj" Usage="System.Attribute.TypeId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52cb3-563">Ruft bei Implementierung in einer abgeleiteten Klasse einen eindeutigen Bezeichner für dieses <see cref="T:System.Attribute" /> ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-563">When implemented in a derived class, gets a unique identifier for this <see cref="T:System.Attribute" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52cb3-564">Ein <see cref="T:System.Object" />, das ein eindeutiger Bezeichner für dieses Attribut ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52cb3-564">An <see cref="T:System.Object" /> that is a unique identifier for the attribute.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52cb3-565">Gemäß der Implementierung ist dieser Bezeichner lediglich die <xref:System.Type> des Attributs.</span><span class="sxs-lookup"><span data-stu-id="52cb3-565">As implemented, this identifier is merely the <xref:System.Type> of the attribute.</span></span> <span data-ttu-id="52cb3-566">Es ist jedoch vorgesehen, dass der eindeutige Bezeichner verwendet werden, um zwei Attribute des gleichen Typs zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="52cb3-566">However, it is intended that the unique identifier be used to identify two attributes of the same type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52cb3-567">Das folgende Codebeispiel implementiert die <xref:System.Attribute.TypeId%2A> Eigenschaft eines benutzerdefinierten Parameters <xref:System.Attribute> Klasse und ihre Verwendung veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="52cb3-567">The following code example implements the <xref:System.Attribute.TypeId%2A> property in a custom parameter <xref:System.Attribute> class and shows its use.</span></span>  
  
 [!code-cpp[System.Attribute.TypeId#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Attribute.TypeId/CPP/typeid.cpp#1)]
 [!code-csharp[System.Attribute.TypeId#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Attribute.TypeId/CS/typeid.cs#1)]
 [!code-vb[System.Attribute.TypeId#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Attribute.TypeId/VB/typeid.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>