<Type Name="ResolveEventArgs" FullName="System.ResolveEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f5d7522ecb3eae85df2542f62094801fbd50b049" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48724677" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ResolveEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ResolveEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.ResolveEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ResolveEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResolveEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ResolveEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="7a98a-101">Stellt Daten für Auflösungsereignisse von Ladeprogrammen bereit, z. B. die Ereignisse <see cref="E:System.AppDomain.TypeResolve" />, <see cref="E:System.AppDomain.ResourceResolve" />, <see cref="E:System.AppDomain.ReflectionOnlyAssemblyResolve" />, und <see cref="E:System.AppDomain.AssemblyResolve" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7a98a-101">Provides data for loader resolution events, such as the <see cref="E:System.AppDomain.TypeResolve" />, <see cref="E:System.AppDomain.ResourceResolve" />, <see cref="E:System.AppDomain.ReflectionOnlyAssemblyResolve" />, and <see cref="E:System.AppDomain.AssemblyResolve" /> events.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a98a-102">Wenn das Ladeprogramm einen Assemblyverweis kann nicht aufgelöst werden und ein Handler wurde, sofern für das Ereignis für den entsprechenden Ladeprogramm-Lösung, die das Ereignis ausgelöst wird und die <xref:System.ResolveEventArgs> enthält Informationen über das Element, das behoben werden.</span><span class="sxs-lookup"><span data-stu-id="7a98a-102">When the loader cannot resolve an assembly reference and a handler has been provided for the appropriate loader resolution event, the event is raised and the <xref:System.ResolveEventArgs> contains information about the item to be resolved.</span></span>  
  
-   <span data-ttu-id="7a98a-103">Die <xref:System.ResolveEventArgs.Name%2A> Eigenschaft enthält den Namen des Elements, das behoben werden.</span><span class="sxs-lookup"><span data-stu-id="7a98a-103">The <xref:System.ResolveEventArgs.Name%2A> property contains the name of the item to be resolved.</span></span>  
  
-   <span data-ttu-id="7a98a-104">Beginnend mit der [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.ResolveEventArgs.RequestingAssembly%2A> Eigenschaft enthält die Assembly, die eine Assembly angefordert, der den Namen des Elements bereitstellen kann.</span><span class="sxs-lookup"><span data-stu-id="7a98a-104">Beginning with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ResolveEventArgs.RequestingAssembly%2A> property contains the assembly that requested an assembly that can provide the named item.</span></span> <span data-ttu-id="7a98a-105">Weitere Informationen finden Sie in den Ausführungen zur <xref:System.ResolveEventArgs.RequestingAssembly%2A>-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="7a98a-105">For more information, see the <xref:System.ResolveEventArgs.RequestingAssembly%2A> property.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="E:System.AppDomain.TypeResolve" />
    <altmember cref="E:System.AppDomain.ResourceResolve" />
    <altmember cref="E:System.AppDomain.ReflectionOnlyAssemblyResolve" />
    <altmember cref="E:System.AppDomain.AssemblyResolve" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7a98a-106">Initialisiert eine neue Instanz der <see cref="T:System.ResolveEventArgs" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a98a-106">Initializes a new instance of the <see cref="T:System.ResolveEventArgs" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResolveEventArgs (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ResolveEventArgs.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResolveEventArgs(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new ResolveEventArgs : string -&gt; ResolveEventArgs" Usage="new System.ResolveEventArgs name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="7a98a-107">Der Name eines aufzulösenden Elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a98a-107">The name of an item to resolve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a98a-108">Initialisiert eine neue Instanz der <see cref="T:System.ResolveEventArgs" />-Klasse, die den Namen des aufzulösenden Elements angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a98a-108">Initializes a new instance of the <see cref="T:System.ResolveEventArgs" /> class, specifying the name of the item to resolve.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a98a-109">Dieser Konstruktor wird in der Regel nur von der common Language Runtime aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="7a98a-109">This constructor is typically called only by the common language runtime.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResolveEventArgs (string name, System.Reflection.Assembly requestingAssembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Reflection.Assembly requestingAssembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ResolveEventArgs.#ctor(System.String,System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, requestingAssembly As Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResolveEventArgs(System::String ^ name, System::Reflection::Assembly ^ requestingAssembly);" />
      <MemberSignature Language="F#" Value="new ResolveEventArgs : string * System.Reflection.Assembly -&gt; ResolveEventArgs" Usage="new System.ResolveEventArgs (name, requestingAssembly)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="requestingAssembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="7a98a-110">Der Name eines aufzulösenden Elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a98a-110">The name of an item to resolve.</span>
          </span>
        </param>
        <param name="requestingAssembly">
          <span data-ttu-id="7a98a-111">Die Assembly, deren Abhängigkeit aufgelöst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a98a-111">The assembly whose dependency is being resolved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a98a-112">Initialisiert eine neue Instanz der <see cref="T:System.ResolveEventArgs" />-Klasse, die den Namen des aufzulösenden Elements und der Assembly, deren Abhängigkeit aufgelöst wird, angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a98a-112">Initializes a new instance of the <see cref="T:System.ResolveEventArgs" /> class, specifying the name of the item to resolve and the assembly whose dependency is being resolved.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.ResolveEventArgs.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.ResolveEventArgs.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7a98a-113">Ruft den Namen des aufzulösenden Elements ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a98a-113">Gets the name of the item to resolve.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7a98a-114">Der Name des aufzulösenden Elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a98a-114">The name of the item to resolve.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a98a-115">Für die <xref:System.AppDomain.AssemblyResolve> Ereignis <xref:System.ResolveEventArgs.Name%2A> ist der Name der Assembly, bevor die Richtlinie angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="7a98a-115">For the <xref:System.AppDomain.AssemblyResolve> event, <xref:System.ResolveEventArgs.Name%2A> is the assembly name before policy is applied.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestingAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly RequestingAssembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly RequestingAssembly" />
      <MemberSignature Language="DocId" Value="P:System.ResolveEventArgs.RequestingAssembly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequestingAssembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Assembly ^ RequestingAssembly { System::Reflection::Assembly ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RequestingAssembly : System.Reflection.Assembly" Usage="System.ResolveEventArgs.RequestingAssembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7a98a-116">Ruft die Assembly ab, deren Abhängigkeit aufgelöst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a98a-116">Gets the assembly whose dependency is being resolved.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7a98a-117">Die Assembly, die das von der <see cref="P:System.ResolveEventArgs.Name" />-Eigenschaft angegebene Element angefordert hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a98a-117">The assembly that requested the item specified by the <see cref="P:System.ResolveEventArgs.Name" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a98a-118">Die Assembly, die von dieser Eigenschaft zurückgegeben wird, wird eine Assembly, die anhand des Elements nicht lösen kann die <xref:System.ResolveEventArgs.Name%2A> -Eigenschaft, da das Element nicht, in der Assembly vorhanden war, in eine ihrer Abhängigkeiten geladen oder in alle Abhängigkeiten das Ladeprogramm gefunden. durch Überprüfung.</span><span class="sxs-lookup"><span data-stu-id="7a98a-118">The assembly that is returned by this property is an assembly that was unable to resolve the item specified by the <xref:System.ResolveEventArgs.Name%2A> property, because the item did not exist in that assembly, in any of its loaded dependencies, or in any dependencies the loader could find through probing.</span></span>  
  
 <span data-ttu-id="7a98a-119">Nehmen wir beispielsweise an der aktuellen Assembly verwendet die <xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=nameWithType> Methode zum Laden von Assembly ein aus einem Verzeichnis außerhalb des Suchpfads, befindet, um die CA-Klasse verwenden.</span><span class="sxs-lookup"><span data-stu-id="7a98a-119">For example, suppose the current assembly uses the <xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=nameWithType> method to load assembly A from a directory outside the probing path, in order to use class CA.</span></span> <span data-ttu-id="7a98a-120">Nehmen wir an weiteren Klasse Zertifizierungsstelle Klasse CB verwendet wird, befindet sich in der Assembly B, und dass die Assembly A einen Kompilierzeit-Verweis auf Assembly B verfügt auch außerhalb des Suchpfads befindet.</span><span class="sxs-lookup"><span data-stu-id="7a98a-120">Suppose further that class CA uses class CB, in assembly B, and that assembly A has a compile-time reference to assembly B, also located outside the probing path.</span></span> <span data-ttu-id="7a98a-121">Wenn die aktuelle Assembly versucht, die Zertifizierungsstelle zu instanziieren, versucht das Ladeprogramm den Verweis auf Assembly b zu beheben. Aber da mithilfe von Assembly A geladen wurde die <xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=nameWithType> -Methode, das Ladeprogramm die Abhängigkeit kann nicht aufgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="7a98a-121">When the current assembly attempts to instantiate CA, the loader attempts to resolve the reference to assembly B. However, because assembly A was loaded by using the <xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=nameWithType> method, the loader cannot resolve the dependency.</span></span> <span data-ttu-id="7a98a-122">Wenn es ein Handler für die <xref:System.AppDomain.AssemblyResolve?displayProperty=nameWithType> Ereignis, das Ereignis wird ausgelöst, und die <xref:System.ResolveEventArgs.RequestingAssembly%2A> -Eigenschaft des resultierenden <xref:System.ResolveEventArgs> Objekt enthält die Assembly ein, da die Assembly A die Assembly ist, der eine Abhängigkeit fehlt.</span><span class="sxs-lookup"><span data-stu-id="7a98a-122">If there is a handler for the <xref:System.AppDomain.AssemblyResolve?displayProperty=nameWithType> event, the event is raised, and the <xref:System.ResolveEventArgs.RequestingAssembly%2A> property of the resulting <xref:System.ResolveEventArgs> object contains assembly A, because assembly A is the assembly that is missing a dependency.</span></span>  
  
 <span data-ttu-id="7a98a-123">Die Semantik der <xref:System.ResolveEventArgs.RequestingAssembly%2A> -Eigenschaft variieren, je nachdem, wie die angeforderte Assembly geladen wurde:</span><span class="sxs-lookup"><span data-stu-id="7a98a-123">The semantics of the <xref:System.ResolveEventArgs.RequestingAssembly%2A> property vary, depending on how the requesting assembly was loaded:</span></span>  
  
-   <span data-ttu-id="7a98a-124">Load-Kontext: der Wert der Eigenschaft möglicherweise `null`.</span><span class="sxs-lookup"><span data-stu-id="7a98a-124">Load context: The value of the property might be `null`.</span></span> <span data-ttu-id="7a98a-125">Der Load-Kontext Ladereihenfolge unabhängig ist, und die Identität der anfordernden Assembly ist nicht unbedingt sinnvoll.</span><span class="sxs-lookup"><span data-stu-id="7a98a-125">The load context is load-order independent, and the identity of the requesting assembly is not necessarily meaningful.</span></span> <span data-ttu-id="7a98a-126">Ein Beispiel für nicht-Null tritt auf, wenn die <xref:System.Type.GetType%2A?displayProperty=nameWithType> Methode wird aufgerufen, und der angegebene Typ nicht die angeforderte Assembly oder eine seiner Abhängigkeiten bekannt ist.</span><span class="sxs-lookup"><span data-stu-id="7a98a-126">A non-null example occurs when the <xref:System.Type.GetType%2A?displayProperty=nameWithType> method is called and the specified type is not known to the requesting assembly or any of its dependencies.</span></span>  
  
-   <span data-ttu-id="7a98a-127">LoadFrom-Kontext: die Eigenschaft kann als ein Test-Hinweis verwendet werden, aber der Ereignishandler nicht mehr als eine Anforderung für einen Namen für die angegebene Assembly abgerufen werden sollte.</span><span class="sxs-lookup"><span data-stu-id="7a98a-127">Load-from context: The property can be used as a probing hint, but the event handler should not get more than one request for a given assembly name.</span></span>  
  
-   <span data-ttu-id="7a98a-128">Kein Kontext (, also die angeforderte Assembly geladen wurde, mithilfe der <xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=nameWithType> -Methode, oder als Byte-Stream oder im gemischten Modus): der Handler können die <xref:System.ResolveEventArgs.RequestingAssembly%2A> -Eigenschaft beim Laden von verschiedenen Implementierungen der gleichen Assembly basierend auf der Identität des der fordert die Assembly an.</span><span class="sxs-lookup"><span data-stu-id="7a98a-128">No context (that is, the requesting assembly was loaded by using the <xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=nameWithType> method, or as a byte stream, or in mixed mode): The handler can use the <xref:System.ResolveEventArgs.RequestingAssembly%2A> property to load different implementations of the same assembly based on the identity of the requesting assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.AppDomain.TypeResolve" />
        <altmember cref="E:System.AppDomain.ResourceResolve" />
        <altmember cref="E:System.AppDomain.ReflectionOnlyAssemblyResolve" />
        <altmember cref="E:System.AppDomain.AssemblyResolve" />
      </Docs>
    </Member>
  </Members>
</Type>