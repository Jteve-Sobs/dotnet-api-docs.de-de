<Type Name="ParamArrayAttribute" FullName="System.ParamArrayAttribute">
  <TypeSignature Language="C#" Value="public sealed class ParamArrayAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ParamArrayAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ParamArrayAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ParamArrayAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ParamArrayAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Parameter, AllowMultiple=false, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1e9b7-101">Gibt an, dass eine Methode mit einer variablen Anzahl von Argumenten aufgerufen werden kann.</span><span class="sxs-lookup"><span data-stu-id="1e9b7-101">Indicates that a method will allow a variable number of arguments in its invocation.</span></span> <span data-ttu-id="1e9b7-102">Diese Klasse kann nicht vererbt werden.</span><span class="sxs-lookup"><span data-stu-id="1e9b7-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e9b7-103">Die <xref:System.ParamArrayAttribute> gibt an, dass ein Methodenparameter ein Parameterarray ist.</span><span class="sxs-lookup"><span data-stu-id="1e9b7-103">The <xref:System.ParamArrayAttribute> indicates that a method parameter is a parameter array.</span></span> <span data-ttu-id="1e9b7-104">Ein Parameterarray ermöglicht die Angabe einer unbekannten Anzahl von Argumenten.</span><span class="sxs-lookup"><span data-stu-id="1e9b7-104">A parameter array allows the specification of an unknown number of arguments.</span></span> <span data-ttu-id="1e9b7-105">Ein Parameterarray muss der letzte Parameter in einer formellen Parameterliste sein, und es muss ein eindimensionales Array sein.</span><span class="sxs-lookup"><span data-stu-id="1e9b7-105">A parameter array must be the last parameter in a formal parameter list, and it must be a single-dimension array.</span></span> <span data-ttu-id="1e9b7-106">Wenn die Methode aufgerufen wird, ermöglicht ein Parameterarray Argumente an eine Methode in eine von zwei Arten angegeben werden:</span><span class="sxs-lookup"><span data-stu-id="1e9b7-106">When the method is called, a parameter array permits arguments to a method to be specified in either of two ways:</span></span>  
  
-   <span data-ttu-id="1e9b7-107">Als ein einziger Ausdruck eines Typs, der implizit in den Parametertyp für das Array ist.</span><span class="sxs-lookup"><span data-stu-id="1e9b7-107">As a single expression of a type that is implicitly convertible to the parameter array type.</span></span> <span data-ttu-id="1e9b7-108">Das Parameterarray fungiert als ein Value-Parameter.</span><span class="sxs-lookup"><span data-stu-id="1e9b7-108">The parameter array functions as a value parameter.</span></span>  
  
-   <span data-ttu-id="1e9b7-109">Als 0 (null) oder mehrere Argumente, wobei jedes Argument ein Ausdruck eines Datentyps ist, die in den Typ des Arrayelements Parameter Parameterarrayelements konvertierbar ist.</span><span class="sxs-lookup"><span data-stu-id="1e9b7-109">As zero or more arguments, where each argument is an expression of a type that is implictly convertible to the type of the parameter array element.</span></span>  
  
 <span data-ttu-id="1e9b7-110">Im Beispiel im nächsten Abschnitt werden beide Aufrufkonventionen veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="1e9b7-110">The example in the next section illustrates both calling conventions.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e9b7-111">In der Regel die <xref:System.ParamArrayAttribute> nicht direkt im Code verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="1e9b7-111">Typically, the <xref:System.ParamArrayAttribute> is not used directly in code.</span></span> <span data-ttu-id="1e9b7-112">Stattdessen Schlüsselwörter, wie z. B. `ParamArray` in Visual Basic und `params` in c#, dienen als Wrapper für die <xref:System.ParamArrayAttribute> Klasse.</span><span class="sxs-lookup"><span data-stu-id="1e9b7-112">Instead, individual language keywords, such as `ParamArray` in Visual Basic and `params` in C#, are used as wrappers for the <xref:System.ParamArrayAttribute> class.</span></span> <span data-ttu-id="1e9b7-113">Einige Sprachen wie c#, möglicherweise sogar erfordern die Verwendung des Schlüsselworts und verhindern die Verwendung von <xref:System.ParamArrayAttribute>.</span><span class="sxs-lookup"><span data-stu-id="1e9b7-113">Some languages, such as C#, may even require the use of the language keyword and prohibit the use of <xref:System.ParamArrayAttribute>.</span></span>  
  
 <span data-ttu-id="1e9b7-114">Während der Auflösung von funktionsüberladungen, wenn Compiler, Parameterarrays unterstützen, eine methodenüberladung auftreten, die nicht vorhanden, aber verfügt über einen weniger Parameter als eine Überladung, die ein Parameterarray enthält sie ersetzt die Methode durch die Überladung, die enthält die Parameterarray.</span><span class="sxs-lookup"><span data-stu-id="1e9b7-114">During overload resolution, when compilers that support parameter arrays encounter a method overload that does not exist but has one fewer parameter than an overload that includes a parameter array, they will replace the method with the overload that includes the parameter array.</span></span> <span data-ttu-id="1e9b7-115">Z. B. einen Aufruf der `String.Split()` Instanzmethode (nicht vorhandenen der <xref:System.String> Klasse) aufgelöst wird, wie ein Aufruf der <xref:System.String.Split%28System.Char%5B%5D%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="1e9b7-115">For example, a call to the `String.Split()` instance method (which does not exist in the <xref:System.String> class) is resolved as a call to the <xref:System.String.Split%28System.Char%5B%5D%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="1e9b7-116">Der Compiler wird ein leeres Array des erforderlichen Typs auch an die Methode übergeben.</span><span class="sxs-lookup"><span data-stu-id="1e9b7-116">The compiler will also pass an empty array of the required type to the method.</span></span> <span data-ttu-id="1e9b7-117">Dies bedeutet, dass die Methode immer darauf vorbereitet sein muss, ein Array, dessen Länge 0 (null) ist, bei der Verarbeitung der Elemente im Parameterarray, zu behandeln.</span><span class="sxs-lookup"><span data-stu-id="1e9b7-117">This means that the method must always be prepared to handle an array whose length is zero when it processes the elements in the parameter array.</span></span> <span data-ttu-id="1e9b7-118">Dies wird im Beispiel veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="1e9b7-118">The example provides an illustration.</span></span>  
  
 <span data-ttu-id="1e9b7-119">Weitere Informationen zum Verwenden von Attributen finden Sie unter [Attribute](~/docs/standard/attributes/index.md).</span><span class="sxs-lookup"><span data-stu-id="1e9b7-119">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e9b7-120">Das folgende Beispiel definiert eine `Temperature` -Klasse, enthält eine `Display` -Methode, die vorgesehen ist, um eine oder mehrere formatierte Temperaturwerte anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="1e9b7-120">The following example defines a `Temperature` class that includes a `Display` method, which is intended to display one or more formatted temperature values.</span></span> <span data-ttu-id="1e9b7-121">Die Methode verfügt über einen einzelnen Parameter `formats`, die als ein Parameterarray definiert ist.</span><span class="sxs-lookup"><span data-stu-id="1e9b7-121">The method has a single parameter, `formats`, which is defined as a parameter array.</span></span>  
  
 [!code-csharp[System.ParamArrayAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ParamArrayAttribute/cs/Example.cs#1)]
 [!code-vb[System.ParamArrayAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ParamArrayAttribute/vb/Example.vb#1)]  
  
 <span data-ttu-id="1e9b7-122">Das folgende Beispiel veranschaulicht die drei verschiedenen Aufrufe an die `Temperature.Display` Methode.</span><span class="sxs-lookup"><span data-stu-id="1e9b7-122">The following example illustrates three different calls to the `Temperature.Display` method.</span></span> <span data-ttu-id="1e9b7-123">In der ersten wird die Methode ein Array von Formatzeichenfolgen übergeben.</span><span class="sxs-lookup"><span data-stu-id="1e9b7-123">In the first, the method is passed an array of format strings.</span></span> <span data-ttu-id="1e9b7-124">Im zweiten Fall wird die Methode vier einzelne Formatzeichenfolgen als Argumente übergeben.</span><span class="sxs-lookup"><span data-stu-id="1e9b7-124">In the second, the method is passed four individual format strings as arguments.</span></span> <span data-ttu-id="1e9b7-125">Im dritten wird die-Methode ohne Argumente aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="1e9b7-125">In the third, the method is called with no arguments.</span></span> <span data-ttu-id="1e9b7-126">Wie die Ausgabe des Beispiels veranschaulicht wird, übersetzen die Visual Basic- und C#-Compiler dies in einen Aufruf an die `Display` Methode ein leeres Zeichenfolgenarray.</span><span class="sxs-lookup"><span data-stu-id="1e9b7-126">As the output from the example illustrates, the Visual Basic and C# compilers translate this into a call to the `Display` method with an empty string array.</span></span>  
  
 [!code-csharp[System.ParamArrayAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ParamArrayAttribute/cs/Example.cs#2)]
 [!code-vb[System.ParamArrayAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ParamArrayAttribute/vb/Example.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Attribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParamArrayAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ParamArrayAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParamArrayAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1e9b7-127">Initialisiert eine neue Instanz der <see cref="T:System.ParamArrayAttribute" />-Klasse mit Standardeigenschaften.</span><span class="sxs-lookup"><span data-stu-id="1e9b7-127">Initializes a new instance of the <see cref="T:System.ParamArrayAttribute" /> class with default properties.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>