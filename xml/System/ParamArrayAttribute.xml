<Type Name="ParamArrayAttribute" FullName="System.ParamArrayAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a75cddcc675d9eae5033f33b15208561e4ec606d" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83965954" /></Metadata><TypeSignature Language="C#" Value="public sealed class ParamArrayAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ParamArrayAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ParamArrayAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ParamArrayAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ParamArrayAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ParamArrayAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Parameter, AllowMultiple=false, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1cb57-101">Gibt an, dass eine Methode mit einer variablen Anzahl von Argumenten aufgerufen werden kann.</span><span class="sxs-lookup"><span data-stu-id="1cb57-101">Indicates that a method will allow a variable number of arguments in its invocation.</span></span> <span data-ttu-id="1cb57-102">Diese Klasse kann nicht vererbt werden.</span><span class="sxs-lookup"><span data-stu-id="1cb57-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1cb57-103">Der <xref:System.ParamArrayAttribute> gibt an, dass ein Methoden Parameter ein Parameter Array ist.</span><span class="sxs-lookup"><span data-stu-id="1cb57-103">The <xref:System.ParamArrayAttribute> indicates that a method parameter is a parameter array.</span></span> <span data-ttu-id="1cb57-104">Ein Parameter Array ermöglicht die Angabe einer unbekannten Anzahl von Argumenten.</span><span class="sxs-lookup"><span data-stu-id="1cb57-104">A parameter array allows the specification of an unknown number of arguments.</span></span> <span data-ttu-id="1cb57-105">Ein Parameter Array muss der letzte Parameter in einer formalen Parameterliste sein, und es muss ein eindimensionales Array sein.</span><span class="sxs-lookup"><span data-stu-id="1cb57-105">A parameter array must be the last parameter in a formal parameter list, and it must be a single-dimension array.</span></span> <span data-ttu-id="1cb57-106">Wenn die-Methode aufgerufen wird, ermöglicht ein Parameter Array das Angeben von Argumenten für eine Methode auf zwei Arten:</span><span class="sxs-lookup"><span data-stu-id="1cb57-106">When the method is called, a parameter array permits arguments to a method to be specified in either of two ways:</span></span>  
  
-   <span data-ttu-id="1cb57-107">Als einzelner Ausdruck eines Typs, der implizit in den Typ des Parameter Arrays konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="1cb57-107">As a single expression of a type that is implicitly convertible to the parameter array type.</span></span> <span data-ttu-id="1cb57-108">Das Parameter Array fungiert als value-Parameter.</span><span class="sxs-lookup"><span data-stu-id="1cb57-108">The parameter array functions as a value parameter.</span></span>  
  
-   <span data-ttu-id="1cb57-109">Als 0 (null) oder mehrere Argumente, wobei jedes Argument ein Ausdruck eines Typs ist, der implizit in den Typ des Parameter Array Elements konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="1cb57-109">As zero or more arguments, where each argument is an expression of a type that is implicitly convertible to the type of the parameter array element.</span></span>  
  
 <span data-ttu-id="1cb57-110">Das Beispiel im nächsten Abschnitt veranschaulicht beide Aufruf Konventionen.</span><span class="sxs-lookup"><span data-stu-id="1cb57-110">The example in the next section illustrates both calling conventions.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1cb57-111">In der Regel wird der <xref:System.ParamArrayAttribute> nicht direkt im Code verwendet.</span><span class="sxs-lookup"><span data-stu-id="1cb57-111">Typically, the <xref:System.ParamArrayAttribute> is not used directly in code.</span></span> <span data-ttu-id="1cb57-112">Stattdessen werden einzelne sprach Schlüsselwörter, wie z. b. `ParamArray` C#in Visual Basic und `params`, als Wrapper für die <xref:System.ParamArrayAttribute>-Klasse verwendet.</span><span class="sxs-lookup"><span data-stu-id="1cb57-112">Instead, individual language keywords, such as `ParamArray` in Visual Basic and `params` in C#, are used as wrappers for the <xref:System.ParamArrayAttribute> class.</span></span> <span data-ttu-id="1cb57-113">Für einige Sprachen, z C#. b., ist möglicherweise sogar die Verwendung des Schlüssel Worts Language erforderlich, und die Verwendung von <xref:System.ParamArrayAttribute>wird untersagt.</span><span class="sxs-lookup"><span data-stu-id="1cb57-113">Some languages, such as C#, may even require the use of the language keyword and prohibit the use of <xref:System.ParamArrayAttribute>.</span></span>  
  
 <span data-ttu-id="1cb57-114">Wenn bei der Überladungs Auflösung Compiler, die Parameter Arrays unterstützen, eine nicht vorhandene Methoden Überladung finden, aber einen weniger Parameter als eine Überladung haben, die ein Parameter Array enthält, ersetzen Sie die-Methode durch die-Überladung, die das Parameter Array enthält.</span><span class="sxs-lookup"><span data-stu-id="1cb57-114">During overload resolution, when compilers that support parameter arrays encounter a method overload that does not exist but has one fewer parameter than an overload that includes a parameter array, they will replace the method with the overload that includes the parameter array.</span></span> <span data-ttu-id="1cb57-115">Beispielsweise wird ein aufzurufende `String.Split()` Instanzmethode (die nicht in der <xref:System.String>-Klasse vorhanden ist) als ein Aufrufder <xref:System.String.Split%28System.Char%5B%5D%29?displayProperty=nameWithType>-Methode aufgelöst.</span><span class="sxs-lookup"><span data-stu-id="1cb57-115">For example, a call to the `String.Split()` instance method (which does not exist in the <xref:System.String> class) is resolved as a call to the <xref:System.String.Split%28System.Char%5B%5D%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="1cb57-116">Der Compiler übergibt auch ein leeres Array des erforderlichen Typs an die-Methode.</span><span class="sxs-lookup"><span data-stu-id="1cb57-116">The compiler will also pass an empty array of the required type to the method.</span></span> <span data-ttu-id="1cb57-117">Dies bedeutet, dass die Methode immer darauf vorbereitet sein muss, ein Array zu verarbeiten, dessen Länge 0 (null) ist, wenn die Elemente im Parameter Array verarbeitet werden.</span><span class="sxs-lookup"><span data-stu-id="1cb57-117">This means that the method must always be prepared to handle an array whose length is zero when it processes the elements in the parameter array.</span></span> <span data-ttu-id="1cb57-118">Dies wird im Beispiel veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="1cb57-118">The example provides an illustration.</span></span>  
  
 <span data-ttu-id="1cb57-119">Weitere Informationen zum Verwenden von Attributen finden Sie unter [Attribute](/dotnet/standard/attributes/).</span><span class="sxs-lookup"><span data-stu-id="1cb57-119">For more information about using attributes, see [Attributes](/dotnet/standard/attributes/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1cb57-120">Im folgenden Beispiel wird eine `Temperature` Klasse definiert, die eine `Display`-Methode enthält, die einen oder mehrere formatierte Temperaturwerte anzeigen soll.</span><span class="sxs-lookup"><span data-stu-id="1cb57-120">The following example defines a `Temperature` class that includes a `Display` method, which is intended to display one or more formatted temperature values.</span></span> <span data-ttu-id="1cb57-121">Die-Methode verfügt über einen einzelnen Parameter, `formats`, der als Parameter Array definiert ist.</span><span class="sxs-lookup"><span data-stu-id="1cb57-121">The method has a single parameter, `formats`, which is defined as a parameter array.</span></span>  
  
 [!code-csharp[System.ParamArrayAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ParamArrayAttribute/cs/Example.cs#1)]
 [!code-vb[System.ParamArrayAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ParamArrayAttribute/vb/Example.vb#1)]  
  
 <span data-ttu-id="1cb57-122">Im folgenden Beispiel werden drei verschiedene Aufrufe der `Temperature.Display`-Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="1cb57-122">The following example illustrates three different calls to the `Temperature.Display` method.</span></span> <span data-ttu-id="1cb57-123">Im ersten wird der-Methode ein Array von Format Zeichenfolgen übermittelt.</span><span class="sxs-lookup"><span data-stu-id="1cb57-123">In the first, the method is passed an array of format strings.</span></span> <span data-ttu-id="1cb57-124">In der zweiten wird der Methode vier einzelne Format Zeichenfolgen als Argumente übermittelt.</span><span class="sxs-lookup"><span data-stu-id="1cb57-124">In the second, the method is passed four individual format strings as arguments.</span></span> <span data-ttu-id="1cb57-125">Im dritten wird die-Methode ohne Argumente aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="1cb57-125">In the third, the method is called with no arguments.</span></span> <span data-ttu-id="1cb57-126">Wie die Ausgabe des Beispiels veranschaulicht, übersetzen die Visual Basic C# und Compiler dies in einen aufzurufenden `Display` Methode mit einem leeren Zeichen folgen Array.</span><span class="sxs-lookup"><span data-stu-id="1cb57-126">As the output from the example illustrates, the Visual Basic and C# compilers translate this into a call to the `Display` method with an empty string array.</span></span>  
  
 [!code-csharp[System.ParamArrayAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ParamArrayAttribute/cs/Example.cs#2)]
 [!code-vb[System.ParamArrayAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ParamArrayAttribute/vb/Example.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Attribute" />
    <related type="Article" href="/dotnet/standard/attributes/"><span data-ttu-id="1cb57-127">Erweitern von Metadaten mithilfe von Attributen</span><span class="sxs-lookup"><span data-stu-id="1cb57-127">Extending Metadata Using Attributes</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParamArrayAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ParamArrayAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParamArrayAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1cb57-128">Initialisiert eine neue Instanz der <see cref="T:System.ParamArrayAttribute" />-Klasse mit Standardeigenschaften.</span><span class="sxs-lookup"><span data-stu-id="1cb57-128">Initializes a new instance of the <see cref="T:System.ParamArrayAttribute" /> class with default properties.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
