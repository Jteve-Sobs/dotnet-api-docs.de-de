<Type Name="ReadOnlySpan&lt;T&gt;+Enumerator" FullName="System.ReadOnlySpan&lt;T&gt;+Enumerator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="21d3a84923de729b6e13f9da922c7da81ff2c0c2" /><Meta Name="ms.sourcegitcommit" Value="1654a92bac785a221098172d9cacd405ceaac9b7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/01/2018" /><Meta Name="ms.locfileid" Value="52736280" /></Metadata><TypeSignature Language="C#" Value="public struct ReadOnlySpan&lt;T&gt;.Enumerator" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi sealed beforefieldinit ReadOnlySpan`1/Enumerator&lt;T&gt; extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.ReadOnlySpan`1.Enumerator" />
  <TypeSignature Language="VB.NET" Value="Public Structure ReadOnlySpan(Of T).Enumerator" />
  <TypeSignature Language="C++ CLI" Value="public: value class ReadOnlySpan&lt;T&gt;::Enumerator" />
  <TypeSignature Language="F#" Value="type ReadOnlySpan&lt;'T&gt;.Enumerator = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.1;netcore-2.2">
      <AttributeName>System.Runtime.CompilerServices.IsByRefLike</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="3332b-101">Stellt einen Enumerator für diese Elemente eines <see cref="T:System.ReadOnlySpan`1" />-Elements bereit.</span><span class="sxs-lookup"><span data-stu-id="3332b-101">Provides an enumerator for the elements of a <see cref="T:System.ReadOnlySpan`1" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[<span data-ttu-id="3332b-102">Die C#- [Foreach](~/docs/csharp/language-reference/keywords/foreach-in.md) der C#-Sprache und die [für jede... Nächste](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md) Konstrukt in Visual Basic Blendet die Komplexität der Enumeratoren.</span><span class="sxs-lookup"><span data-stu-id="3332b-102">The C# [foreach](~/docs/csharp/language-reference/keywords/foreach-in.md) of the C# language and the [For Each...Next](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md) construct in Visual Basic hides the complexity of enumerators.</span></span> <span data-ttu-id="3332b-103">Anstatt ein direktes Bearbeiten des Enumerators, mit `foreach` oder `For Each...Next` wird empfohlen.</span><span class="sxs-lookup"><span data-stu-id="3332b-103">Instead of directly manipulating the enumerator, using `foreach` or `For Each...Next` is recommended.</span></span> 

<span data-ttu-id="3332b-104">Zunächst wird der Enumerator vor das erste Element in der <xref:System.ReadOnlySpan`1>.</span><span class="sxs-lookup"><span data-stu-id="3332b-104">Initially, the enumerator is positioned before the first element in the <xref:System.ReadOnlySpan`1>.</span></span> <span data-ttu-id="3332b-105">An dieser Position ist <xref:System.ReadOnlySpan`1.Enumerator.Current> nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="3332b-105">At this position, <xref:System.ReadOnlySpan`1.Enumerator.Current> is undefined.</span></span> <span data-ttu-id="3332b-106">Rufen Sie <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> auf den Enumerator auf das erste Element in der <xref:System.ReadOnlySpan`1> vor dem Lesen des Werts von <xref:System.ReadOnlySpan`1.Enumerator.Current>.</span><span class="sxs-lookup"><span data-stu-id="3332b-106">You must call <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> to advance the enumerator to the first item in the <xref:System.ReadOnlySpan`1> before reading the value of <xref:System.ReadOnlySpan`1.Enumerator.Current>.</span></span>

<span data-ttu-id="3332b-107"><xref:System.ReadOnlySpan`1.Enumerator.Current> Gibt den gleichen Wert bis <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="3332b-107"><xref:System.ReadOnlySpan`1.Enumerator.Current> returns the same value until <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="3332b-108"><xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> Legt <xref:System.ReadOnlySpan`1.Enumerator.Current> zum nächsten Element in der <xref:System.ReadOnlySpan`1>.</span><span class="sxs-lookup"><span data-stu-id="3332b-108"><xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> sets <xref:System.ReadOnlySpan`1.Enumerator.Current> to the next item in the <xref:System.ReadOnlySpan`1>.</span></span>

<span data-ttu-id="3332b-109">Wenn <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> übergibt am Ende der <xref:System.ReadOnlySpan`1>, <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> gibt `false`.</span><span class="sxs-lookup"><span data-stu-id="3332b-109">If <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> passes the end of the <xref:System.ReadOnlySpan`1>, <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="3332b-110">Wenn der Enumerator ist auf diesem Status, schlagen nachfolgende Aufrufe <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> auch zurückgeben `false` und <xref:System.ReadOnlySpan`1.Enumerator.Current> ist nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="3332b-110">When the enumerator is at this state, subsequent calls to <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> also return `false` and <xref:System.ReadOnlySpan`1.Enumerator.Current> is undefined.</span></span> <span data-ttu-id="3332b-111">Sie können nicht festgelegt werden <xref:System.ReadOnlySpan`1.Enumerator.Current> auf das erste Element in der <xref:System.ReadOnlySpan`1> erneut; Sie müssen eine neue Enumeratorinstanz stattdessen erstellen.</span><span class="sxs-lookup"><span data-stu-id="3332b-111">You cannot set <xref:System.ReadOnlySpan`1.Enumerator.Current> to the first item in the <xref:System.ReadOnlySpan`1> again; you must create a new enumerator instance instead.</span></span> 

<span data-ttu-id="3332b-112">Obwohl die <xref:System.ReadOnlySpan`1> zugeordnet ist, auf dem Stapel, die zugrunde liegenden Daten auf dem die <xref:System.ReadOnlySpan`1> verweist, möglicherweise nicht.</span><span class="sxs-lookup"><span data-stu-id="3332b-112">Though the <xref:System.ReadOnlySpan`1> is allocated on the stack, the underlying data on which the <xref:System.ReadOnlySpan`1> points to, may not be.</span></span> <span data-ttu-id="3332b-113">Aus diesem Grund die Enumeration eine <xref:System.ReadOnlySpan`1> ist systemintern keine threadsichere Prozedur.</span><span class="sxs-lookup"><span data-stu-id="3332b-113">Therefore, enumerating through a <xref:System.ReadOnlySpan`1> is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="3332b-114">Um während der Enumeration Threadsicherheit zu gewährleisten, müssen Sie eine eigene Synchronisierung implementieren.</span><span class="sxs-lookup"><span data-stu-id="3332b-114">To guarantee thread safety during enumeration, you must implement your own synchronization.</span></span>

<span data-ttu-id="3332b-115">Im Gegensatz zu einigen anderen Enumerator-Strukturen in .NET die <xref:System.ReadOnlySpan`1.Enumerator>:</span><span class="sxs-lookup"><span data-stu-id="3332b-115">Unlike some other enumerator structures in .NET, the <xref:System.ReadOnlySpan`1.Enumerator>:</span></span>

- <span data-ttu-id="3332b-116">Implementiert nicht die <xref:System.Collections.IEnumerator> oder <xref:System.Collections.Generic.IEnumerator`1> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="3332b-116">Does not implement the <xref:System.Collections.IEnumerator> or <xref:System.Collections.Generic.IEnumerator`1> interface.</span></span> <span data-ttu-id="3332b-117">Grund hierfür ist, <xref:System.ReadOnlySpan`1.Enumerator> ist eine [Referenzstruktur](~/docs/csharp/language-reference/keywords/ref.md#ref-struct-types) und können nicht geschachtelt werden.</span><span class="sxs-lookup"><span data-stu-id="3332b-117">This is because <xref:System.ReadOnlySpan`1.Enumerator> is a [ref struct](~/docs/csharp/language-reference/keywords/ref.md#ref-struct-types) and cannot be boxed.</span></span>

- <span data-ttu-id="3332b-118">Enthält keine `Reset` -Methode, die den Enumerator auf seine anfängliche Position vor dem ersten Element in der Spanne festlegen kann.</span><span class="sxs-lookup"><span data-stu-id="3332b-118">Does not include a `Reset` method, which can set the enumerator to its initial position before the first element in the span.</span></span> <span data-ttu-id="3332b-119">(Die <xref:System.Collections.IEnumerator.Reset?displayProperty=nameWithType> Methode muss als Teil der Schnittstelle implementiert werden, aber die meisten Implementierungen eine Ausnahme auslösen, oder es keine Implementierung bereitstellen.)</span><span class="sxs-lookup"><span data-stu-id="3332b-119">(The <xref:System.Collections.IEnumerator.Reset?displayProperty=nameWithType> method must be implemented as part of the interface, but most implementors either throw an exception or provide no implementation.)</span></span>]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public T&amp; Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance T&amp; modreq(System.Runtime.InteropServices.InAttribute) Current" />
      <MemberSignature Language="DocId" Value="P:System.ReadOnlySpan`1.Enumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As T&amp;" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T&amp; ^ Current { T&amp; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : T&amp;" Usage="System.ReadOnlySpan&lt;'T&gt;.Enumerator.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.2">
          <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T&amp;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3332b-120">Ruft einen Verweis auf das Element an der aktuellen Position des Enumerators ab.</span><span class="sxs-lookup"><span data-stu-id="3332b-120">Gets a reference to the item at the current position of the enumerator.</span></span></summary>
        <value><span data-ttu-id="3332b-121">Das Element in der <see cref="T:System.ReadOnlySpan`1" /> an der aktuellen Position des Enumerators.</span><span class="sxs-lookup"><span data-stu-id="3332b-121">The element in the <see cref="T:System.ReadOnlySpan`1" /> at the current position of the enumerator.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="3332b-122">`Current` ist nicht unter eine der folgenden Bedingungen definiert werden:</span><span class="sxs-lookup"><span data-stu-id="3332b-122">`Current` is undefined under either of the following conditions:</span></span> 

- <span data-ttu-id="3332b-123">Unmittelbar nach der Enumerator erstellt wird, wird der Enumerator vor dem ersten Element in der Spanne.</span><span class="sxs-lookup"><span data-stu-id="3332b-123">Immediately after the enumerator is created, the enumerator is positioned before the first element in the span.</span></span> <span data-ttu-id="3332b-124"><xref:System.ReadOnlySpan`1.Enumerator.MoveNext*> muss aufgerufen werden, um den Enumerator auf das erste Element der Spanne vor dem Lesen des Werts von `Current`.</span><span class="sxs-lookup"><span data-stu-id="3332b-124"><xref:System.ReadOnlySpan`1.Enumerator.MoveNext*> must be called to advance the enumerator to the first element of the span before reading the value of `Current`.</span></span>

- <span data-ttu-id="3332b-125">Der letzte Aufruf von <xref:System.ReadOnlySpan`1.Enumerator.MoveNext*> zurückgegebenen `false`, womit das Ende der Spanne.</span><span class="sxs-lookup"><span data-stu-id="3332b-125">The last call to <xref:System.ReadOnlySpan`1.Enumerator.MoveNext*> returned `false`, which indicates the end of the span.</span></span> 

<span data-ttu-id="3332b-126">`Current` Gibt den gleichen Wert bis <xref:System.ReadOnlySpan`1.Enumerator.MoveNext*> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="3332b-126">`Current` returns the same value until <xref:System.ReadOnlySpan`1.Enumerator.MoveNext*> is called.</span></span> <span data-ttu-id="3332b-127"><xref:System.ReadOnlySpan`1.Enumerator.MoveNext*> Legt `Current` zum nächsten Element in der Spanne.</span><span class="sxs-lookup"><span data-stu-id="3332b-127"><xref:System.ReadOnlySpan`1.Enumerator.MoveNext*> sets `Current` to the next item in the span.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ReadOnlySpan`1.Enumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveNext();" />
      <MemberSignature Language="F#" Value="member this.MoveNext : unit -&gt; bool" Usage="enumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3332b-128">Legt den Enumerator auf das nächste Element von <see cref="System.ReadOnlySpan`1" /> fest.</span><span class="sxs-lookup"><span data-stu-id="3332b-128">Advances the enumerator to the next item of the <see cref="System.ReadOnlySpan`1" />.</span></span></summary>
        <returns><span data-ttu-id="3332b-129">`true`, wenn der Enumerator erfolgreich auf das nächste Element festgelegt wurde; `false`, wenn das Ende des Span-Elements überschritten wurde.</span><span class="sxs-lookup"><span data-stu-id="3332b-129">`true` if the enumerator successfully advanced to the next item; `false` if the end of the span has been passed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="3332b-130">Nachdem ein Enumerator erstellt wurde, es befindet sich vor dem ersten Element in der Spanne und der erste Aufruf `MoveNext` setzt den Enumerator auf das erste Element in der Spanne.</span><span class="sxs-lookup"><span data-stu-id="3332b-130">After an enumerator is created, it is positioned before the first element in the span, and the first call to `MoveNext` advances the enumerator to the first item in the span.</span></span> 

<span data-ttu-id="3332b-131">Wenn `MoveNext` übergibt das Ende der Spanne `MoveNext` gibt `false`.</span><span class="sxs-lookup"><span data-stu-id="3332b-131">If `MoveNext` passes the end of the span, `MoveNext` returns `false`.</span></span> <span data-ttu-id="3332b-132">Wenn der Enumerator ist auf diesem Status, schlagen nachfolgende Aufrufe `MoveNext` auch zurückgeben `false`.</span><span class="sxs-lookup"><span data-stu-id="3332b-132">When the enumerator is at this state, subsequent calls to `MoveNext` also return `false`.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>