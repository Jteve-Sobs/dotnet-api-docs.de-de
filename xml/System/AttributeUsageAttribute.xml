<Type Name="AttributeUsageAttribute" FullName="System.AttributeUsageAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b05788067f289608ee4bc23cdadd9da0b4fd89c3" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69421509" /></Metadata><TypeSignature Language="C#" Value="public sealed class AttributeUsageAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit AttributeUsageAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.AttributeUsageAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AttributeUsageAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class AttributeUsageAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type AttributeUsageAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c42ae-101">Gibt die Verwendung einer weiteren Attributklasse an.</span><span class="sxs-lookup"><span data-stu-id="c42ae-101">Specifies the usage of another attribute class.</span></span> <span data-ttu-id="c42ae-102">Diese Klasse kann nicht vererbt werden.</span><span class="sxs-lookup"><span data-stu-id="c42ae-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c42ae-103">Wenn Sie eine eigene Attribut Klasse definieren, können Sie die Art und Weise steuern, in der Sie verwendet wird, <xref:System.AttributeUsageAttribute> indem Sie eine in der Attribut Klasse platzieren.</span><span class="sxs-lookup"><span data-stu-id="c42ae-103">When you are defining your own attribute class, you can control the manner in which it is used by placing an <xref:System.AttributeUsageAttribute> on your attribute class.</span></span> <span data-ttu-id="c42ae-104">Die dargestellte Attribut Klasse muss direkt <xref:System.Attribute>oder indirekt von abgeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="c42ae-104">The indicated attribute class must derive from <xref:System.Attribute>, either directly or indirectly.</span></span>  
  
 <span data-ttu-id="c42ae-105">Attribut Klassen verfügen über positionelle Parameter und benannte Parameter.</span><span class="sxs-lookup"><span data-stu-id="c42ae-105">Attribute classes have positional and named parameters.</span></span> <span data-ttu-id="c42ae-106">Jeder öffentliche Konstruktor für eine Attribut Klasse definiert eine gültige Sequenz von positionellen Parametern für diese Klasse.</span><span class="sxs-lookup"><span data-stu-id="c42ae-106">Each public constructor for an attribute class defines a valid sequence of positional parameters for that class.</span></span> <span data-ttu-id="c42ae-107">Benannte Parameter werden durch die nicht statischen, öffentlichen und Lese-/Schreibfelder oder Eigenschaften der Attribut Klasse definiert.</span><span class="sxs-lookup"><span data-stu-id="c42ae-107">Named parameters are defined by the non-static, public, and read-write fields or properties of the attribute class.</span></span>  
  
 <span data-ttu-id="c42ae-108">Die drei Eigenschaften von <xref:System.AttributeUsageAttribute> werden festgelegt, indem die folgenden Parameter definiert werden:</span><span class="sxs-lookup"><span data-stu-id="c42ae-108">The three properties of <xref:System.AttributeUsageAttribute> are set by defining the following parameters:</span></span>  
  
-   <xref:System.AttributeUsageAttribute.ValidOn%2A>  
  
 <span data-ttu-id="c42ae-109">Dieser Positions Parameter gibt die Programmelemente an, auf denen das angezeigt Attribut platziert werden kann.</span><span class="sxs-lookup"><span data-stu-id="c42ae-109">This positional parameter specifies the program elements that the indicated attribute can be placed on.</span></span> <span data-ttu-id="c42ae-110">Der Satz aller möglichen Elemente, für die Sie ein Attribut platzieren können, ist in der <xref:System.AttributeTargets> -Enumeration aufgeführt.</span><span class="sxs-lookup"><span data-stu-id="c42ae-110">The set of all possible elements that you can place an attribute on is listed in the <xref:System.AttributeTargets> enumeration.</span></span> <span data-ttu-id="c42ae-111">Sie können mehrere <xref:System.AttributeTargets> Werte mit einer bitweisen OR-Operation kombinieren, um die gewünschte Kombination gültiger Programmelemente zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="c42ae-111">You can combine several <xref:System.AttributeTargets> values using a bitwise OR operation to get the desired combination of valid program elements.</span></span>  
  
-   <xref:System.AttributeUsageAttribute.AllowMultiple%2A>  
  
 <span data-ttu-id="c42ae-112">Dieser benannte Parameter gibt an, ob das angegebene Attribut für ein bestimmtes Programmelement mehrmals angegeben werden kann.</span><span class="sxs-lookup"><span data-stu-id="c42ae-112">This named parameter specifies whether the indicated attribute can be specified more than once for a given program element.</span></span>  
  
-   <xref:System.AttributeUsageAttribute.Inherited%2A>  
  
 <span data-ttu-id="c42ae-113">Dieser benannte Parameter gibt an, ob das Attribut von abgeleiteten Klassen und über schreibenden Membern geerbt werden kann.</span><span class="sxs-lookup"><span data-stu-id="c42ae-113">This named parameter specifies whether the indicated attribute can be inherited by derived classes and overriding members.</span></span>  
  
 <span data-ttu-id="c42ae-114">Weitere Informationen zum Verwenden von Attributen finden <xref:System.Attribute> Sie unter und [Attribute](~/docs/standard/attributes/index.md).</span><span class="sxs-lookup"><span data-stu-id="c42ae-114">For more information about using attributes, see <xref:System.Attribute> and [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.AttributeTargets" />
    <related type="Article" href="~/docs/standard/attributes/index.md"><span data-ttu-id="c42ae-115">Erweitern von Metadaten mithilfe von Attributen</span><span class="sxs-lookup"><span data-stu-id="c42ae-115">Extending Metadata Using Attributes</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AttributeUsageAttribute (AttributeTargets validOn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.AttributeTargets validOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AttributeUsageAttribute.#ctor(System.AttributeTargets)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (validOn As AttributeTargets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AttributeUsageAttribute(AttributeTargets validOn);" />
      <MemberSignature Language="F#" Value="new AttributeUsageAttribute : AttributeTargets -&gt; AttributeUsageAttribute" Usage="new System.AttributeUsageAttribute validOn" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="validOn" Type="System.AttributeTargets" />
      </Parameters>
      <Docs>
        <param name="validOn"><span data-ttu-id="c42ae-116">Eine mit der bitweisen OR-Operation verbundene Gruppe von Werten, die angeben, welche Programmelemente gültig sind.</span><span class="sxs-lookup"><span data-stu-id="c42ae-116">The set of values combined using a bitwise OR operation to indicate which program elements are valid.</span></span></param>
        <summary><span data-ttu-id="c42ae-117">Initialisiert einen neue Instanz der <see cref="T:System.AttributeUsageAttribute" />-Klasse mit der angegebenen Liste von <see cref="T:System.AttributeTargets" />, dem <see cref="P:System.AttributeUsageAttribute.AllowMultiple" />-Wert und dem <see cref="P:System.AttributeUsageAttribute.Inherited" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="c42ae-117">Initializes a new instance of the <see cref="T:System.AttributeUsageAttribute" /> class with the specified list of <see cref="T:System.AttributeTargets" />, the <see cref="P:System.AttributeUsageAttribute.AllowMultiple" /> value, and the <see cref="P:System.AttributeUsageAttribute.Inherited" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c42ae-118">Sie können mehrere <xref:System.AttributeTargets> Werte mit einer bitweisen OR-Operation kombinieren, um die gewünschte Kombination gültiger Programmelemente zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="c42ae-118">You can combine several <xref:System.AttributeTargets> values using a bitwise OR operation to get the desired combination of valid program elements.</span></span>  
  
 <span data-ttu-id="c42ae-119">Standardeigenschaftswerte finden Sie in <xref:System.AttributeUsageAttribute.ValidOn%2A>den <xref:System.AttributeUsageAttribute.AllowMultiple%2A>Eigenschaften, <xref:System.AttributeUsageAttribute.Inherited%2A> und.</span><span class="sxs-lookup"><span data-stu-id="c42ae-119">For default property values, see the <xref:System.AttributeUsageAttribute.ValidOn%2A>, <xref:System.AttributeUsageAttribute.AllowMultiple%2A>, and <xref:System.AttributeUsageAttribute.Inherited%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c42ae-120">Die Definition des Attributs "DISPID" veranschaulicht die Verwendung einer bitweisen OR-Operation zum Kombi <xref:System.AttributeTargets> Nieren mehrerer Werte.</span><span class="sxs-lookup"><span data-stu-id="c42ae-120">The definition of the DispId attribute illustrates the use of a bitwise OR operation to combine several <xref:System.AttributeTargets> values.</span></span>  
  
 [!code-cpp[Classic AttributeUsageAttribute.AttributeUsageAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic AttributeUsageAttribute.AttributeUsageAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeUsageAttribute.AttributeUsageAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic AttributeUsageAttribute.AttributeUsageAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeUsageAttribute.AttributeUsageAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic AttributeUsageAttribute.AttributeUsageAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.AttributeTargets" />
      </Docs>
    </Member>
    <Member MemberName="AllowMultiple">
      <MemberSignature Language="C#" Value="public bool AllowMultiple { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowMultiple" />
      <MemberSignature Language="DocId" Value="P:System.AttributeUsageAttribute.AllowMultiple" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowMultiple As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowMultiple { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowMultiple : bool with get, set" Usage="System.AttributeUsageAttribute.AllowMultiple" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c42ae-121">Ruft einen booleschen Wert ab, der angibt, ob für ein einzelnes Programmelement mehr als eine Instanz des betreffenden Attributs angegeben werden kann, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="c42ae-121">Gets or sets a Boolean value indicating whether more than one instance of the indicated attribute can be specified for a single program element.</span></span></summary>
        <value><span data-ttu-id="c42ae-122"><see langword="true" />, wenn die Angabe mehr als einer Instanz möglich ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c42ae-122"><see langword="true" /> if more than one instance is allowed to be specified; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c42ae-123">Die Standardeinstellung ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c42ae-123">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c42ae-124">Ein Attribut, das mehr als einmal für ein Programmelement angegeben werden kann, wird als Mehrzweck-Attribut bezeichnet.</span><span class="sxs-lookup"><span data-stu-id="c42ae-124">An attribute that can be specified more than once for a program element is called a multi-use attribute.</span></span> <span data-ttu-id="c42ae-125">Ein Attribut, das nur einmal angegeben werden kann, wird als Single-use-Attribut bezeichnet.</span><span class="sxs-lookup"><span data-stu-id="c42ae-125">An attribute that can be specified only once is called a single-use attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="Inherited">
      <MemberSignature Language="C#" Value="public bool Inherited { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Inherited" />
      <MemberSignature Language="DocId" Value="P:System.AttributeUsageAttribute.Inherited" />
      <MemberSignature Language="VB.NET" Value="Public Property Inherited As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Inherited { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Inherited : bool with get, set" Usage="System.AttributeUsageAttribute.Inherited" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c42ae-126">Ruft einen <see cref="T:System.Boolean" />-Wert ab, der bestimmt, ob das angegebene Attribut von abgeleiteten Klassen und überschreibenden Membern geerbt wird, oder legt diesen Wert fest.</span><span class="sxs-lookup"><span data-stu-id="c42ae-126">Gets or sets a <see cref="T:System.Boolean" /> value that determines whether the indicated attribute is inherited by derived classes and overriding members.</span></span></summary>
        <value><span data-ttu-id="c42ae-127"><see langword="true" />, wenn das Attribut von abgeleiteten Klassen und überschreibenden Membern geerbt werden kann, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c42ae-127"><see langword="true" /> if the attribute can be inherited by derived classes and overriding members; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c42ae-128">Die Standardeinstellung ist <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="c42ae-128">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c42ae-129">Die <xref:System.AttributeUsageAttribute.Inherited%2A> -Eigenschaft bestimmt Folgendes:</span><span class="sxs-lookup"><span data-stu-id="c42ae-129">The <xref:System.AttributeUsageAttribute.Inherited%2A> property determines:</span></span>  
  
-   <span data-ttu-id="c42ae-130">Gibt an, ob Klassen, die von einer Basisklasse mit dem- <xref:System.AttributeUsageAttribute> Attribut, auf das das-Attribut angewendet wird, abgeleitet werden</span><span class="sxs-lookup"><span data-stu-id="c42ae-130">Whether classes derived from a base class tagged with the attribute to which the <xref:System.AttributeUsageAttribute> attribute is applied inherit that attribute.</span></span>  
  
-   <span data-ttu-id="c42ae-131">Ob Methoden abgeleiteter Klassen, die eine Basisklassen Methode überschreiben, die mit dem <xref:System.AttributeUsageAttribute> -Attribut gekennzeichnet ist, auf das das-Attribut angewendet wird, dieses Attribut erben</span><span class="sxs-lookup"><span data-stu-id="c42ae-131">Whether methods of derived classes that override a base class method tagged with the attribute to which the <xref:System.AttributeUsageAttribute> attribute is applied inherit that attribute.</span></span>  <span data-ttu-id="c42ae-132">(Wenn eine Klasse einen Basisklassenmember erbt, erbt sie auch alle Attribute, die auf diesen Member angewendet werden.)</span><span class="sxs-lookup"><span data-stu-id="c42ae-132">(If a class inherits a base class member, it also inherits any attributes applied to that member.)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c42ae-133">Das folgende Beispiel veranschaulicht den Unterschied zwischen einem Attribut, mit <xref:System.AttributeUsageAttribute> dem ein Attribut <xref:System.AttributeUsageAttribute.Inherited%2A> mit einem- `true` Eigenschafts Wert von angewendet wird <xref:System.AttributeUsageAttribute> , und einem <xref:System.AttributeUsageAttribute.Inherited%2A> Attribut mit einem-Eigenschafts Wert von. `false` wird angewendet.</span><span class="sxs-lookup"><span data-stu-id="c42ae-133">The following example illustrates the difference between an attribute to which an <xref:System.AttributeUsageAttribute> attribute with an <xref:System.AttributeUsageAttribute.Inherited%2A> property value of `true` is applied and one to which  <xref:System.AttributeUsageAttribute> attribute with an <xref:System.AttributeUsageAttribute.Inherited%2A> property value of `false` is applied .</span></span> <span data-ttu-id="c42ae-134">Im Beispiel werden zwei Attribute definiert `InheritedAttribute` : `NotInheritedAttribute`und.</span><span class="sxs-lookup"><span data-stu-id="c42ae-134">The example defines two attributes, `InheritedAttribute` and `NotInheritedAttribute`.</span></span> <span data-ttu-id="c42ae-135">Beide Attribute können auf Klassen und Methoden angewendet werden.</span><span class="sxs-lookup"><span data-stu-id="c42ae-135">Both attributes can apply to classes and methods.</span></span> <span data-ttu-id="c42ae-136">Da die <xref:System.AttributeUsageAttribute.Inherited%2A> -Eigenschaft <xref:System.AttributeUsageAttribute> des Attributs auf `InheritedAttribute` fest `true`gelegt ist, wird Sie von abgeleiteten Klassen und den Membern abgeleiteter Klassen geerbt, die die Basisklassen Methode überschreiben.</span><span class="sxs-lookup"><span data-stu-id="c42ae-136">Because the <xref:System.AttributeUsageAttribute.Inherited%2A> property of the <xref:System.AttributeUsageAttribute> attribute applied to `InheritedAttribute` is `true`, it is inherited by derived classes and the members of derived classes that override the base class method.</span></span>  <span data-ttu-id="c42ae-137">Da die <xref:System.AttributeUsageAttribute.Inherited%2A> -Eigenschaft <xref:System.AttributeUsageAttribute> des Attributs `NotInheritedAttribute` auf festgelegt ist `false`, wird Sie hingegen nicht von abgeleiteten Klassen und den Membern abgeleiteter Klassen geerbt, die die Basisklassen Methode überschreiben.</span><span class="sxs-lookup"><span data-stu-id="c42ae-137">On the other hand, because the <xref:System.AttributeUsageAttribute.Inherited%2A> property of the <xref:System.AttributeUsageAttribute> attribute applied to `NotInheritedAttribute` is `false`, it is not inherited by derived classes and the members of derived classes that override the base class method.</span></span>  
  
 [!code-csharp[System.AttributeUsageAttribute.Inherited#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.AttributeUsageAttribute.Inherited/cs/Inherited1.cs#1)]
 [!code-vb[System.AttributeUsageAttribute.Inherited#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.AttributeUsageAttribute.Inherited/vb/Inherited1.vb#1)]  
  
 <span data-ttu-id="c42ae-138">Im Beispiel werden dann zwei Basisklassen definiert.</span><span class="sxs-lookup"><span data-stu-id="c42ae-138">The example then defines two  base classes.</span></span> <span data-ttu-id="c42ae-139">Der erste, `BaseA`, verfügt über eine einzige Methode `MethodA`,.</span><span class="sxs-lookup"><span data-stu-id="c42ae-139">The first, `BaseA`, has a single method, `MethodA`.</span></span>  <span data-ttu-id="c42ae-140">Der zweite, `BaseB`, verfügt über eine einzige Methode `MethodB`,.</span><span class="sxs-lookup"><span data-stu-id="c42ae-140">The second, `BaseB`, has a single method, `MethodB`.</span></span> <span data-ttu-id="c42ae-141">`BaseA`und `MethodA` werden mit dem `InheritedAttribute` -Attribut markiert, `BaseB` und `MethodB` und werden mit dem `NotInheritedAttribute` -Attribut gekennzeichnet.</span><span class="sxs-lookup"><span data-stu-id="c42ae-141">`BaseA` and `MethodA` are tagged with the `InheritedAttribute` attribute, and `BaseB` and `MethodB` are tagged with the `NotInheritedAttribute` attribute.</span></span> <span data-ttu-id="c42ae-142">`DerivedA`erbt von `BaseA` und überschreibt die `MethodA` -Methode.</span><span class="sxs-lookup"><span data-stu-id="c42ae-142">`DerivedA` inherits from `BaseA` and overrides its `MethodA` method.</span></span> <span data-ttu-id="c42ae-143">`DerivedB`erbt von `BaseB` und überschreibt die `MethodB` -Methode.</span><span class="sxs-lookup"><span data-stu-id="c42ae-143">`DerivedB` inherits from `BaseB` and overrides its `MethodB` method.</span></span>  
  
 [!code-csharp[System.AttributeUsageAttribute.Inherited#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.AttributeUsageAttribute.Inherited/cs/Inherited1.cs#2)]
 [!code-vb[System.AttributeUsageAttribute.Inherited#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.AttributeUsageAttribute.Inherited/vb/Inherited1.vb#2)]  
  
 <span data-ttu-id="c42ae-144">Wie die Ausgabe des Beispiels zeigt, `DerivedA` und `DerivedA.MethodA` erben das `InheritedAttribute` -Attribut, aber `DerivedB` und `DerivedB.MethodB` erben das `NotInheritedAttribute` -Attribut nicht.</span><span class="sxs-lookup"><span data-stu-id="c42ae-144">As the output from the example shows, `DerivedA` and `DerivedA.MethodA` inherit the `InheritedAttribute` attribute, but `DerivedB` and `DerivedB.MethodB` do not inherit the `NotInheritedAttribute` attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="ValidOn">
      <MemberSignature Language="C#" Value="public AttributeTargets ValidOn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.AttributeTargets ValidOn" />
      <MemberSignature Language="DocId" Value="P:System.AttributeUsageAttribute.ValidOn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidOn As AttributeTargets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property AttributeTargets ValidOn { AttributeTargets get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidOn : AttributeTargets" Usage="System.AttributeUsageAttribute.ValidOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AttributeTargets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c42ae-145">Ruft eine Wertemenge ab, die angibt, auf welche Programmelemente das betreffende Attribut angewendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="c42ae-145">Gets a set of values identifying which program elements that the indicated attribute can be applied to.</span></span></summary>
        <value><span data-ttu-id="c42ae-146">Ein oder mehrere <see cref="T:System.AttributeTargets" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="c42ae-146">One or several <see cref="T:System.AttributeTargets" /> values.</span></span> <span data-ttu-id="c42ae-147">Die Standardeinstellung ist <see langword="All" />.</span><span class="sxs-lookup"><span data-stu-id="c42ae-147">The default is <see langword="All" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.AttributeTargets" />
      </Docs>
    </Member>
  </Members>
</Type>
