<Type Name="AttributeUsageAttribute" FullName="System.AttributeUsageAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a4ed6353b215720faa3f58fc23d8d612a7b55d5e" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83968027" /></Metadata><TypeSignature Language="C#" Value="public sealed class AttributeUsageAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AttributeUsageAttribute extends System.Attribute" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.AttributeUsageAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AttributeUsageAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class AttributeUsageAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type AttributeUsageAttribute = class&#xA;    inherit Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit AttributeUsageAttribute extends System.Attribute" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Gibt die Verwendung einer weiteren Attributklasse an. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie eine eigene Attribut Klasse definieren, können Sie die Art und Weise steuern, in der Sie verwendet wird, indem Sie eine <xref:System.AttributeUsageAttribute> in der Attribut Klasse platzieren. Die dargestellte Attribut Klasse muss entweder direkt oder indirekt von <xref:System.Attribute>abgeleitet werden.  
  
 Attribut Klassen verfügen über positionelle Parameter und benannte Parameter. Jeder öffentliche Konstruktor für eine Attribut Klasse definiert eine gültige Sequenz von positionellen Parametern für diese Klasse. Benannte Parameter werden durch die nicht statischen, öffentlichen und Lese-/Schreibfelder oder Eigenschaften der Attribut Klasse definiert.  
  
 Die drei Eigenschaften <xref:System.AttributeUsageAttribute> werden durch Definieren der folgenden Parameter festgelegt:  
  
-   <xref:System.AttributeUsageAttribute.ValidOn%2A>  
  
 Dieser Positions Parameter gibt die Programmelemente an, auf denen das angezeigt Attribut platziert werden kann. Der Satz aller möglichen Elemente, für die Sie ein Attribut platzieren können, ist in der <xref:System.AttributeTargets>-Enumeration aufgeführt. Sie können mehrere <xref:System.AttributeTargets> Werte kombinieren, indem Sie eine bitweise OR-Operation verwenden, um die gewünschte Kombination gültiger Programmelemente zu erhalten.  
  
-   <xref:System.AttributeUsageAttribute.AllowMultiple%2A>  
  
 Dieser benannte Parameter gibt an, ob das angegebene Attribut für ein bestimmtes Programmelement mehrmals angegeben werden kann.  
  
-   <xref:System.AttributeUsageAttribute.Inherited%2A>  
  
 Dieser benannte Parameter gibt an, ob das Attribut von abgeleiteten Klassen und über schreibenden Membern geerbt werden kann.  
  
 Weitere Informationen zum Verwenden von Attributen finden Sie unter <xref:System.Attribute> und [Attribute](/dotnet/standard/attributes/).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.AttributeTargets" />
    <related type="Article" href="/dotnet/standard/attributes/">Erweitern von Metadaten mithilfe von Attributen</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AttributeUsageAttribute (AttributeTargets validOn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.AttributeTargets validOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AttributeUsageAttribute.#ctor(System.AttributeTargets)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (validOn As AttributeTargets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AttributeUsageAttribute(AttributeTargets validOn);" />
      <MemberSignature Language="F#" Value="new AttributeUsageAttribute : AttributeTargets -&gt; AttributeUsageAttribute" Usage="new System.AttributeUsageAttribute validOn" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="validOn" Type="System.AttributeTargets" />
      </Parameters>
      <Docs>
        <param name="validOn">Eine mit der bitweisen OR-Operation verbundene Gruppe von Werten, die angeben, welche Programmelemente gültig sind.</param>
        <summary>Initialisiert einen neue Instanz der <see cref="T:System.AttributeUsageAttribute" />-Klasse mit der angegebenen Liste von <see cref="T:System.AttributeTargets" />, dem <see cref="P:System.AttributeUsageAttribute.AllowMultiple" />-Wert und dem <see cref="P:System.AttributeUsageAttribute.Inherited" />-Wert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können mehrere <xref:System.AttributeTargets> Werte kombinieren, indem Sie eine bitweise OR-Operation verwenden, um die gewünschte Kombination gültiger Programmelemente zu erhalten.  
  
 Standardeigenschaftswerte finden Sie unter den Eigenschaften <xref:System.AttributeUsageAttribute.ValidOn%2A>, <xref:System.AttributeUsageAttribute.AllowMultiple%2A>und <xref:System.AttributeUsageAttribute.Inherited%2A>.  
  
   
  
## Examples  
 Die Definition des Attributs "DISPID" veranschaulicht die Verwendung einer bitweisen OR-Operation, um mehrere <xref:System.AttributeTargets> Werte zu kombinieren.  
  
 [!code-cpp[Classic AttributeUsageAttribute.AttributeUsageAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic AttributeUsageAttribute.AttributeUsageAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeUsageAttribute.AttributeUsageAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic AttributeUsageAttribute.AttributeUsageAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeUsageAttribute.AttributeUsageAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic AttributeUsageAttribute.AttributeUsageAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.AttributeTargets" />
      </Docs>
    </Member>
    <Member MemberName="AllowMultiple">
      <MemberSignature Language="C#" Value="public bool AllowMultiple { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowMultiple" />
      <MemberSignature Language="DocId" Value="P:System.AttributeUsageAttribute.AllowMultiple" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowMultiple As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowMultiple { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowMultiple : bool with get, set" Usage="System.AttributeUsageAttribute.AllowMultiple" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen booleschen Wert ab, der angibt, ob mehre Instanzen des angegebenen Attributs für ein einzelnes Programmelement angegeben werden können, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn die Angabe mehr als einer Instanz möglich ist, andernfalls <see langword="false" />. Der Standardwert lautet <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Attribut, das mehr als einmal für ein Programmelement angegeben werden kann, wird als Mehrzweck-Attribut bezeichnet. Ein Attribut, das nur einmal angegeben werden kann, wird als Single-use-Attribut bezeichnet.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="Inherited">
      <MemberSignature Language="C#" Value="public bool Inherited { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Inherited" />
      <MemberSignature Language="DocId" Value="P:System.AttributeUsageAttribute.Inherited" />
      <MemberSignature Language="VB.NET" Value="Public Property Inherited As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Inherited { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Inherited : bool with get, set" Usage="System.AttributeUsageAttribute.Inherited" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen <see cref="T:System.Boolean" />-Wert ab, der bestimmt, ob das angegebene Attribut von abgeleiteten Klassen und überschreibenden Membern geerbt wird, oder legt diesen Wert fest.</summary>
        <value><see langword="true" />, wenn das Attribut von abgeleiteten Klassen und überschreibenden Membern geerbt werden kann, andernfalls <see langword="false" />. Der Standardwert lautet <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.AttributeUsageAttribute.Inherited%2A>-Eigenschaft bestimmt Folgendes:  
  
-   Gibt an, ob Klassen, die von einer Basisklasse abgeleitet werden, die mit dem-Attribut, auf das das <xref:System.AttributeUsageAttribute>-Attribut angewendet wird, das  
  
-   Ob Methoden abgeleiteter Klassen, die eine Basisklassen Methode überschreiben, die mit dem-Attribut gekennzeichnet ist, auf das das <xref:System.AttributeUsageAttribute>-Attribut angewendet wird, dieses Attribut erben  (Wenn eine Klasse einen Basisklassenmember erbt, erbt sie auch alle Attribute, die auf diesen Member angewendet werden.)  
  
   
  
## Examples  
 Das folgende Beispiel veranschaulicht den Unterschied zwischen einem Attribut, mit dem ein <xref:System.AttributeUsageAttribute> Attribut mit einem <xref:System.AttributeUsageAttribute.Inherited%2A>-Eigenschafts Wert `true` angewendet wird, und einer, auf die <xref:System.AttributeUsageAttribute> Attribut mit einem <xref:System.AttributeUsageAttribute.Inherited%2A>-Eigenschafts Wert `false` angewendet wird. Im Beispiel werden zwei Attribute definiert, `InheritedAttribute` und `NotInheritedAttribute`. Beide Attribute können auf Klassen und Methoden angewendet werden. Da die <xref:System.AttributeUsageAttribute.Inherited%2A>-Eigenschaft des auf `InheritedAttribute` angewendeten <xref:System.AttributeUsageAttribute> Attributs `true`ist, wird Sie von abgeleiteten Klassen und den Membern abgeleiteter Klassen geerbt, die die Basisklassen Methode überschreiben.  Da die <xref:System.AttributeUsageAttribute.Inherited%2A>-Eigenschaft des auf `NotInheritedAttribute` angewendeten <xref:System.AttributeUsageAttribute> Attributs `false`ist, wird Sie jedoch nicht von abgeleiteten Klassen und den Membern abgeleiteter Klassen geerbt, die die Basisklassen Methode überschreiben.  
  
 [!code-csharp[System.AttributeUsageAttribute.Inherited#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.AttributeUsageAttribute.Inherited/cs/Inherited1.cs#1)]
 [!code-vb[System.AttributeUsageAttribute.Inherited#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.AttributeUsageAttribute.Inherited/vb/Inherited1.vb#1)]  
  
 Im Beispiel werden dann zwei Basisklassen definiert. Der erste, `BaseA`, verfügt über eine einzige Methode, `MethodA`.  Der zweite `BaseB`verfügt über eine einzige Methode, `MethodB`. `BaseA` und `MethodA` werden mit dem `InheritedAttribute`-Attribut markiert, und `BaseB` und `MethodB` werden mit dem `NotInheritedAttribute`-Attribut markiert. `DerivedA` erbt von `BaseA` und überschreibt dessen `MethodA`-Methode. `DerivedB` erbt von `BaseB` und überschreibt dessen `MethodB`-Methode.  
  
 [!code-csharp[System.AttributeUsageAttribute.Inherited#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.AttributeUsageAttribute.Inherited/cs/Inherited1.cs#2)]
 [!code-vb[System.AttributeUsageAttribute.Inherited#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.AttributeUsageAttribute.Inherited/vb/Inherited1.vb#2)]  
  
 Wie die Ausgabe des Beispiels zeigt, `DerivedA` und `DerivedA.MethodA` das `InheritedAttribute`-Attribut erben, aber `DerivedB` und `DerivedB.MethodB` erben das `NotInheritedAttribute`-Attribut nicht.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="ValidOn">
      <MemberSignature Language="C#" Value="public AttributeTargets ValidOn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.AttributeTargets ValidOn" />
      <MemberSignature Language="DocId" Value="P:System.AttributeUsageAttribute.ValidOn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidOn As AttributeTargets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property AttributeTargets ValidOn { AttributeTargets get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidOn : AttributeTargets" Usage="System.AttributeUsageAttribute.ValidOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AttributeTargets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Wertemenge ab, die angibt, auf welche Programmelemente das betreffende Attribut angewendet werden kann.</summary>
        <value>Ein oder mehrere <see cref="T:System.AttributeTargets" />-Werte. Der Standardwert lautet <see langword="All" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.AttributeTargets" />
      </Docs>
    </Member>
  </Members>
</Type>
