<Type Name="AppDomainManager" FullName="System.AppDomainManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="42122049eeed0f6c1a39fa6ec6a2b24af684ada3" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48712652" /></Metadata><TypeSignature Language="C#" Value="public class AppDomainManager : MarshalByRefObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AppDomainManager extends System.MarshalByRefObject" />
  <TypeSignature Language="DocId" Value="T:System.AppDomainManager" />
  <TypeSignature Language="VB.NET" Value="Public Class AppDomainManager&#xA;Inherits MarshalByRefObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class AppDomainManager : MarshalByRefObject" />
  <TypeSignature Language="F#" Value="type AppDomainManager = class&#xA;    inherit MarshalByRefObject" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt eine verwaltete Entsprechung eines nicht verwalteten Hosts dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Verwenden Sie keine <xref:System.AppDomainManager> zum Konfigurieren einer Anwendungsdomäne in ASP.NET. In ASP.NET muss die Konfiguration vom Host behandelt werden.  
  
 Implementieren der <xref:System.AppDomainManager> Klasse ermöglicht eine hostanwendung zur Teilnahme an der Erstellung neuer Anwendungsdomänen. Ersetzen Sie die Standardeinstellung <xref:System.AppDomainManager>, identifizieren Sie die Assembly und Typ der Ersetzung <xref:System.AppDomainManager> in der Umgebungsvariablen APPDOMAIN_MANAGER_ASM und APPDOMAIN_MANAGER_TYPE ein, oder Verwenden der [ \<AppDomainManagerAssembly >](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagerassembly-element.md) und [ \<AppDomainManagerType >](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagertype-element.md) Elemente in der Konfigurationsdatei. Die Assembly vollständig vertrauenswürdig sein und enthalten sein, in dem globalen Assemblycache oder das Verzeichnis der Anwendung ab. Die Namen von Typ und die Assembly müssen in den Umgebungsvariablen voll qualifiziert werden. Zum Beispiel:  
  
 `set APPDOMAIN_MANAGER_TYPE=MyNamespace.TestAppDomainManager`  
  
 `set APPDOMAIN_MANAGER_ASM=customappDomainmanager, Version=1.0.0.0, Culture=neutral, PublicKeyToken=f1368f7b12a08d72`  
  
> [!IMPORTANT]
>  Wenn die Assembly, die die Unterklasse von enthält <xref:System.AppDomainManager> Assemblys, die mit der bedingten markiert sind, hängt <xref:System.Security.AllowPartiallyTrustedCallersAttribute> -Attribut (APTCA), müssen Sie die Assemblys einschließen, in der Liste, die Sie zum Übergeben der <xref:System.AppDomainSetup.PartialTrustVisibleAssemblies%2A> Eigenschaft der <xref:System.AppDomainSetup>Sie verwenden, um die Anwendungsdomänen zu erstellen. Andernfalls werden die Assemblys, die mit dem bedingten APTCA-Attribut markiert sind deaktiviert.  
  
 Die <xref:System.AppDomainManager> ist die verwaltete Entsprechung des nicht verwalteten Hosts. Ein <xref:System.AppDomainManager> Objekt bei der Erstellung neuer Anwendungsdomänen in einem Prozess beteiligt ist, und können anpassen, die neue <xref:System.AppDomain> vor anderen verwalteter Code ausgeführt wird. Die <xref:System.AppDomainManager> auch Host-Managern, die Teilnahme an andere Aspekte der Ausführung der common Language Runtime bereitgestellt werden können. Z. B. eine <xref:System.AppDomainManager> Erkennen einer <xref:System.Security.HostSecurityManager> Objekt, das in der Anwendungsdomäne der Sicherheitsfragen die richtigen Entscheidungen teilnimmt.  
  
> [!NOTE]
>  Nur Assemblys gewährt `FullTrust`, z. B. Assemblys im globalen Assemblycache oder als identifiziert `fullTrustAssemblies` in die <xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType> Methode geladen werden kann, der <xref:System.AppDomainManager.%23ctor%2A> Konstruktor und die <xref:System.AppDomainManager.InitializeNewDomain%2A> Methode.  
  
> [!NOTE]
>  Diese Klasse enthält einen Linkaufruf und einer vererbungsanforderung auf Klassenebene. Ein <xref:System.Security.SecurityException> wird ausgelöst, wenn Sie entweder den unmittelbaren Aufrufer oder die abgeleitete Klasse Infrastruktur Berechtigung nicht besitzt. Weitere Informationen zu sicherheitsanforderungen, finden Sie unter [Verknüpfungsaufrufe](~/docs/framework/misc/link-demands.md) und [Vererbungsanforderungen](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/x4yx82e6(v=vs.100)).  
  
   
  
## Examples  
 Das folgende Beispiel zeigt eine sehr einfache Implementierung der <xref:System.AppDomainManager>.  
  
 [!code-csharp[System.AppDomainManager#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.AppDomainManager/CS/customAppDomainManager.cs#1)]
 [!code-vb[System.AppDomainManager#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.AppDomainManager/VB/customAppDomainManager.vb#1)]  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die ordnungsgemäßen Berechtigungen. Siehe den Abschnitt „Anforderungen“.</exception>
    <permission cref="T:System.Security.SecurityCriticalAttribute">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer. Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</permission>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">für abgeleitete Klassen, die ausführbaren Code in der common Language Runtime hosten Infrastruktur eingebunden werden. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AppDomainManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AppDomainManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.AppDomainManager" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Nur Assemblys gewährt `FullTrust`, z. B. Assemblys im globalen Assemblycache oder als identifiziert `fullTrustAssemblies` in die <xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType> Methode geladen werden kann, der <xref:System.AppDomainManager.%23ctor%2A> Konstruktor und die <xref:System.AppDomainManager.InitializeNewDomain%2A> Methode.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer. Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</permission>
      </Docs>
    </Member>
    <Member MemberName="ApplicationActivator">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Hosting.ApplicationActivator ApplicationActivator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Hosting.ApplicationActivator ApplicationActivator" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.ApplicationActivator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ApplicationActivator As ApplicationActivator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Runtime::Hosting::ApplicationActivator ^ ApplicationActivator { System::Runtime::Hosting::ApplicationActivator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationActivator : System.Runtime.Hosting.ApplicationActivator" Usage="System.AppDomainManager.ApplicationActivator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Hosting.ApplicationActivator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Anwendungsaktivierer ab, der die Aktivierung von Add-Ins und manifestbasierten Anwendungen für die Domäne handhabt.</summary>
        <value>Der Anwendungsaktivierer.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Es gibt eine einzelne angegebene Instanz der <xref:System.Runtime.Hosting.ApplicationActivator> Klasse in den einzelnen <xref:System.AppDomain> , die für alle Add-Ins und manifestbasierten Anwendungen weitergeleitet werden. Die <xref:System.AppDomainManager> für die aktuelle <xref:System.AppDomain> bieten eine eigene benutzerdefinierte <xref:System.Runtime.Hosting.ApplicationActivator>, oder eine Instanz der standardmäßigen <xref:System.Runtime.Hosting.ApplicationActivator> erstellt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSecuritySettings">
      <MemberSignature Language="C#" Value="public virtual bool CheckSecuritySettings (System.Security.SecurityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CheckSecuritySettings(class System.Security.SecurityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.CheckSecuritySettings(System.Security.SecurityState)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckSecuritySettings (state As SecurityState) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CheckSecuritySettings(System::Security::SecurityState ^ state);" />
      <MemberSignature Language="F#" Value="abstract member CheckSecuritySettings : System.Security.SecurityState -&gt; bool&#xA;override this.CheckSecuritySettings : System.Security.SecurityState -&gt; bool" Usage="appDomainManager.CheckSecuritySettings state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Security.SecurityState" />
      </Parameters>
      <Docs>
        <param name="state">Eine Unterklasse von <see cref="T:System.Security.SecurityState" />, die den Vorgang identifiziert, dessen Sicherheitsstatus angefordert wird.</param>
        <summary>Gibt an, ob der angegebene Vorgang in der Anwendungsdomäne zulässig ist.</summary>
        <returns><see langword="true" />, wenn der Host das Ausführen des von <paramref name="state" /> angegebenen Vorgangs in der Anwendungsdomäne zulässt, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Standardimplementierung dieser Methode gibt `false`.  
  
 Diese Methode wird aufgerufen, wenn die <xref:System.IO.IsolatedStorage.IsolatedStorageFile.IncreaseQuotaTo%2A?displayProperty=nameWithType> Methode aufgerufen wurde, um das Kontingent für die isolierten Speicher zu erhöhen. Kann eine Anwendung, die common Language Runtime (CLR) hostet, außer Kraft setzen der <xref:System.AppDomainManager.CheckSecuritySettings%2A> Methode zum Durchführen von richtlinienentscheidungen basierend auf einer <xref:System.IO.IsolatedStorage.IsolatedStorageSecurityState> Objekt (erbt <xref:System.Security.SecurityState>), und klicken Sie dann zulassen oder verhindern Sie die Erhöhung der können. Ein Host kann z. B. dem Benutzer genehmigen oder Ablehnen der Anforderung das Kontingent erhöht aufgefordert. Implementierung des Hosts <xref:System.AppDomainManager.CheckSecuritySettings%2A> sollte die Wahrscheinlichkeit von Denial-of-Service-Angriffen berücksichtigt. Beispielsweise sollten sie den Benutzer auffordern, nur dann, wenn die Methode aus einem vom Benutzer initiierte-Ereignis aufgerufen wird, wie z. B. eine Schaltfläche klicken.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDomain">
      <MemberSignature Language="C#" Value="public virtual AppDomain CreateDomain (string friendlyName, System.Security.Policy.Evidence securityInfo, AppDomainSetup appDomainInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AppDomain CreateDomain(string friendlyName, class System.Security.Policy.Evidence securityInfo, class System.AppDomainSetup appDomainInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.CreateDomain(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateDomain (friendlyName As String, securityInfo As Evidence, appDomainInfo As AppDomainSetup) As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual AppDomain ^ CreateDomain(System::String ^ friendlyName, System::Security::Policy::Evidence ^ securityInfo, AppDomainSetup ^ appDomainInfo);" />
      <MemberSignature Language="F#" Value="abstract member CreateDomain : string * System.Security.Policy.Evidence * AppDomainSetup -&gt; AppDomain&#xA;override this.CreateDomain : string * System.Security.Policy.Evidence * AppDomainSetup -&gt; AppDomain" Usage="appDomainManager.CreateDomain (friendlyName, securityInfo, appDomainInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="friendlyName" Type="System.String" />
        <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" />
        <Parameter Name="appDomainInfo" Type="System.AppDomainSetup" />
      </Parameters>
      <Docs>
        <param name="friendlyName">Der angezeigte Name der Domäne.</param>
        <param name="securityInfo">Ein Objekt, das den durch die Sicherheitsrichtlinien zugeordneten Beweis zum Festlegen eines Berechtigungssatzes auf oberster Stapelebene enthält.</param>
        <param name="appDomainInfo">Ein Objekt, das Initialisierungsinformationen für die Anwendungsdomäne enthält.</param>
        <summary>Gibt eine neue oder vorhandene Anwendungsdomäne zurück.</summary>
        <returns>Eine neue oder vorhandene Anwendungsdomäne.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der angezeigte Name, anhand der `friendlyName` -Parameter kann auf Benutzeroberflächen zur Kennzeichnung der Domäne angezeigt werden. Weitere Informationen finden Sie in den Ausführungen zur <xref:System.AppDomain.FriendlyName%2A>-Eigenschaft.  
  
 Der Standardwert <xref:System.AppDomainManager.CreateDomain%2A> Methode ruft die geschützte <xref:System.AppDomainManager.CreateDomainHelper%2A> Methode zum Erstellen der <xref:System.AppDomain>. Überschreibungen von dieser Methode müssen nicht aufrufen, die <xref:System.AppDomainManager.CreateDomainHelper%2A> Methode, jedoch kann eine vorhandene Domäne zurückgibt.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Beim Erben von der <see cref="T:System.AppDomainManager" /> Klasse, und überschreiben die <see cref="M:System.AppDomainManager.CreateDomain(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)" /> -Methode durchführen können Aktivitäten für die Initialisierung von benutzerdefinierten Anwendung Domäne vor dem Aufruf der <see cref="M:System.AppDomainManager.CreateDomainHelper(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)" /> -Methode und nicht durch Aufrufen der Hilfsmethode überhaupt.  Sie könnten z. B. ändern, die Beweise, die als übergeben <paramref name="securityInfo" />, aktualisieren Sie die Felder des zugeordneten <see cref="T:System.AppDomainSetup" />, oder wiederverwenden eine vorhandene Domäne.</para></block>
      </Docs>
    </Member>
    <Member MemberName="CreateDomainHelper">
      <MemberSignature Language="C#" Value="protected static AppDomain CreateDomainHelper (string friendlyName, System.Security.Policy.Evidence securityInfo, AppDomainSetup appDomainInfo);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.AppDomain CreateDomainHelper(string friendlyName, class System.Security.Policy.Evidence securityInfo, class System.AppDomainSetup appDomainInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.CreateDomainHelper(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function CreateDomainHelper (friendlyName As String, securityInfo As Evidence, appDomainInfo As AppDomainSetup) As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static AppDomain ^ CreateDomainHelper(System::String ^ friendlyName, System::Security::Policy::Evidence ^ securityInfo, AppDomainSetup ^ appDomainInfo);" />
      <MemberSignature Language="F#" Value="static member CreateDomainHelper : string * System.Security.Policy.Evidence * AppDomainSetup -&gt; AppDomain" Usage="System.AppDomainManager.CreateDomainHelper (friendlyName, securityInfo, appDomainInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="friendlyName" Type="System.String" />
        <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" />
        <Parameter Name="appDomainInfo" Type="System.AppDomainSetup" />
      </Parameters>
      <Docs>
        <param name="friendlyName">Der angezeigte Name der Domäne.</param>
        <param name="securityInfo">Ein Objekt, das den durch die Sicherheitsrichtlinien zugeordneten Beweis zum Festlegen eines Berechtigungssatzes auf oberster Stapelebene enthält.</param>
        <param name="appDomainInfo">Ein Objekt, das Initialisierungsinformationen für die Anwendungsdomäne enthält.</param>
        <summary>Stellt eine Hilfsmethode zum Erstellen einer Anwendungsdomäne bereit.</summary>
        <returns>Eine neu erstellte Anwendungsdomäne.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese geschützte Hilfsmethode behandelt die Erstellung einer neuen Anwendungsdomäne.  
  
 Diesen Anzeigenamen, die gemäß der `friendlyName` -Parameter kann auf Benutzeroberflächen zur Kennzeichnung der Domäne angezeigt werden. Weitere Informationen finden Sie in den Ausführungen zur <xref:System.AppDomain.FriendlyName%2A>-Eigenschaft.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="friendlyName" /> ist <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">zum Steuern von Beweisen. Sicherheitsaktion: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></permission>
      </Docs>
    </Member>
    <Member MemberName="EntryAssembly">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Assembly EntryAssembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly EntryAssembly" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.EntryAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EntryAssembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Assembly ^ EntryAssembly { System::Reflection::Assembly ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EntryAssembly : System.Reflection.Assembly" Usage="System.AppDomainManager.EntryAssembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Eintragsassembly für eine Anwendung ab.</summary>
        <value>Die Eintragsassembly für die Anwendung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Anwendung eine manifestaktivierte Anwendung ist, wird die Eintragsassembly aus dem Anwendungsmanifest bestimmt. Wenn die Anwendung nicht manifest aktiviert ist, ist die Eintragsassembly der in der Standardanwendungsdomäne ausführbaren Prozess. In anderen Anwendungsdomänen ist die Eintragsassembly ist die erste ausführbare Datei, die durch Ausführung der <xref:System.AppDomain.ExecuteAssembly%2A?displayProperty=nameWithType> Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostExecutionContextManager">
      <MemberSignature Language="C#" Value="public virtual System.Threading.HostExecutionContextManager HostExecutionContextManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.HostExecutionContextManager HostExecutionContextManager" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.HostExecutionContextManager" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HostExecutionContextManager As HostExecutionContextManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Threading::HostExecutionContextManager ^ HostExecutionContextManager { System::Threading::HostExecutionContextManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HostExecutionContextManager : System.Threading.HostExecutionContextManager" Usage="System.AppDomainManager.HostExecutionContextManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.HostExecutionContextManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Hostausführungskontext-Manager ab, der den Fluss vom Ausführungskontext verwaltet.</summary>
        <value>Der Hostausführungskontext-Manager.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft kann ein Host Geben Sie einen <xref:System.Threading.HostExecutionContextManager> , die den Fluss des Ausführungskontexts über asynchrone Aufrufe teilnehmen kann.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostSecurityManager">
      <MemberSignature Language="C#" Value="public virtual System.Security.HostSecurityManager HostSecurityManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.HostSecurityManager HostSecurityManager" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.HostSecurityManager" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HostSecurityManager As HostSecurityManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::HostSecurityManager ^ HostSecurityManager { System::Security::HostSecurityManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HostSecurityManager : System.Security.HostSecurityManager" Usage="System.AppDomainManager.HostSecurityManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.HostSecurityManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Hostsicherheits-Manager ab, der an Sicherheitsentscheidungen für die Anwendungsdomäne teilnimmt.</summary>
        <value>Der Hostsicherheits-Manager.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft kann ein Host Geben Sie einen <xref:System.Security.HostSecurityManager> zur Teilnahme an der Sicherheitsfragen die richtigen Entscheidungen für die Anwendungsdomäne.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt eine Überschreibung von der <xref:System.AppDomainManager.HostSecurityManager%2A> -Eigenschaft für eine benutzerdefinierte Anwendungsdomänen-Manager. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.AppDomainManager> Klasse.  
  
 [!code-csharp[System.AppDomainManager#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.AppDomainManager/CS/customAppDomainManager.cs#3)]
 [!code-vb[System.AppDomainManager#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.AppDomainManager/VB/customAppDomainManager.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializationFlags">
      <MemberSignature Language="C#" Value="public AppDomainManagerInitializationOptions InitializationFlags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.AppDomainManagerInitializationOptions InitializationFlags" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.InitializationFlags" />
      <MemberSignature Language="VB.NET" Value="Public Property InitializationFlags As AppDomainManagerInitializationOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property AppDomainManagerInitializationOptions InitializationFlags { AppDomainManagerInitializationOptions get(); void set(AppDomainManagerInitializationOptions value); };" />
      <MemberSignature Language="F#" Value="member this.InitializationFlags : AppDomainManagerInitializationOptions with get, set" Usage="System.AppDomainManager.InitializationFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomainManagerInitializationOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Initialisierungsflags für benutzerdefinierte Anwendungsdomänen-Manager ab.</summary>
        <value>Eine bitweise Kombination der Enumerationswerte, die die auszuführende Initialisierungsaktion beschreiben. Der Standardwert ist <see cref="F:System.AppDomainManagerInitializationOptions.None" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeNewDomain">
      <MemberSignature Language="C#" Value="public virtual void InitializeNewDomain (AppDomainSetup appDomainInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeNewDomain(class System.AppDomainSetup appDomainInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.InitializeNewDomain(System.AppDomainSetup)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InitializeNewDomain (appDomainInfo As AppDomainSetup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitializeNewDomain(AppDomainSetup ^ appDomainInfo);" />
      <MemberSignature Language="F#" Value="abstract member InitializeNewDomain : AppDomainSetup -&gt; unit&#xA;override this.InitializeNewDomain : AppDomainSetup -&gt; unit" Usage="appDomainManager.InitializeNewDomain appDomainInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appDomainInfo" Type="System.AppDomainSetup" />
      </Parameters>
      <Docs>
        <param name="appDomainInfo">Ein Objekt, das Initialisierungsinformationen für die Anwendungsdomäne enthält.</param>
        <summary>Initialisiert die neue Anwendungsdomäne.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Verwenden Sie diese Methode nicht zum Initialisieren einer Anwendungsdomäne in ASP.NET. In ASP.NET muss die Konfiguration vom Host behandelt werden. Wenn Sie diese Methode, zum Initialisieren der Anwendungsdomäne verwenden, der Host auslöst <xref:System.InvalidOperationException> beim Versuch, die die Anwendungsdomäne initialisiert werden. Die Ausnahmemeldung gibt an, dass die Initialisierung bereits aufgetreten ist.  
  
 Diese Methode wird unmittelbar nach dem Konstruktor aufgerufen. Der Standardwert <xref:System.AppDomainManager.InitializeNewDomain%2A> Implementierung hat keine Auswirkungen.  Eine benutzerdefinierte Implementierung kann interne Klassen und Delegaten einrichten, richten Sie eine Schnittstelle mit der nicht verwaltete Hostschnittstelle oder definieren Sie Ereignishandler für das neue <xref:System.AppDomain>.  
  
 Für Add-in-Aktivierungen, eine benutzerdefinierte Implementierung kann identifizieren Sie ferner die aktuelle <xref:System.AppDomain> als der Zielanwendungsdomäne.  
  
 Beginnend mit der [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], können Sie diese Methode für das Sandboxing die Standardanwendungsdomäne beim Start der Anwendung oder zum Ändern der Sandbox eine neue Anwendungsdomäne. Passen Sie zu diesem Zweck die <xref:System.Security.Policy.ApplicationTrust.DefaultGrantSet%2A> und <xref:System.Security.Policy.ApplicationTrust.FullTrustAssemblies%2A> Eigenschaften für die <xref:System.Security.Policy.ApplicationTrust> -Objekt, das zugewiesen ist die <xref:System.AppDomainSetup.ApplicationTrust%2A?displayProperty=nameWithType> Eigenschaft `appDomainInfo`, bevor Sie die Anwendungsdomäne initialisiert.  
  
> [!NOTE]
>  Nur Assemblys gewährt `FullTrust`, z. B. Assemblys im globalen Assemblycache oder als identifiziert `fullTrustAssemblies` in die <xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType> Methode geladen werden kann, der <xref:System.AppDomainManager.%23ctor%2A> Konstruktor und die <xref:System.AppDomainManager.InitializeNewDomain%2A> Methode.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt eine Überschreibung von der <xref:System.AppDomainManager.InitializeNewDomain%2A> -Methode für eine benutzerdefinierte Anwendungsdomänen-Manager. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.AppDomainManager> Klasse.  
  
 [!code-csharp[System.AppDomainManager#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.AppDomainManager/CS/customAppDomainManager.cs#2)]
 [!code-vb[System.AppDomainManager#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.AppDomainManager/VB/customAppDomainManager.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>