<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Console.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b891ec5d-4b60-42d7-ac21-95eab9e3ef82b006f3d9b207ce1cfdf984f93be8c753b8e073cc.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b006f3d9b207ce1cfdf984f93be8c753b8e073cc</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">058bfa0b75b777d3171411d35da8f11617fc06b0</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/04/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Console">
          <source>Represents the standard input, output, and error streams for console applications.</source>
          <target state="translated">Stellt die Standardstreams für Eingabe, Ausgabe und Fehler bei Konsolenanwendungen dar.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Console">
          <source>This class cannot be inherited.</source>
          <target state="translated">Diese Klasse kann nicht vererbt werden.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The console is an operating system window where users interact with the operating system or with a text-based console application by entering text input through the computer keyboard, and by reading text output from the computer terminal.</source>
          <target state="translated">Die Konsole ist ein Betriebssystem-Fenster, in dem Benutzer mit dem Betriebssystem oder mit einer textbasierten Konsolenanwendung durch Eingabe von Texteingabe über die Tastatur des Computers sowie durch Lesen der Ausgabe von Text aus der Terminaldienste Computer interagieren.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>For example, in the Windows operating system, the console is called the Command Prompt window and accepts MS-DOS commands.</source>
          <target state="translated">Beispielsweise wird im Windows-Betriebssystem ein die Konsole im Eingabeaufforderungsfenster wird aufgerufen, und MS-DOS-Befehle akzeptiert.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The <ph id="ph1">&lt;xref:System.Console&gt;</ph> class provides basic support for applications that read characters from, and write characters to, the console.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Console&gt;</ph> Klasse bietet grundlegende unterstützt für Anwendungen, die Zeichen aus dem Lesen und Schreiben von Zeichen in der Konsole.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>For information about developing with the <ph id="ph1">&lt;xref:System.Console&gt;</ph> class, see the following sections:</source>
          <target state="translated">Informationen zum Entwickeln von mit der <ph id="ph1">&lt;xref:System.Console&gt;</ph> Klasse, finden Sie unter den folgenden Abschnitten:</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source><bpt id="p1">[</bpt>Console I/O Streams<ept id="p1">](#Streams)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Konsole e/a-Streams<ept id="p1">](#Streams)</ept></target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source><bpt id="p1">[</bpt>Screen Buffer and Console Window<ept id="p1">](#Buffer)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Bildschirmpuffer und Konsolenfenster<ept id="p1">](#Buffer)</ept></target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source><bpt id="p1">[</bpt>Unicode Support for the Console<ept id="p1">](#Unicode)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Unicode-Unterstützung für die Konsole<ept id="p1">](#Unicode)</ept></target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source><bpt id="p1">[</bpt>Common Operations<ept id="p1">](#Operations)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Allgemeine Vorgänge<ept id="p1">](#Operations)</ept></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source><bpt id="p1">[</bpt>.NET Core Notes<ept id="p1">](#Core)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>.NET Core-Hinweise<ept id="p1">](#Core)</ept></target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Console I/O Streams</source>
          <target state="translated">Konsole e/a-Streams</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>When a console application starts, the operating system automatically associates three I/O streams with the console: standard input stream, standard output stream, and standard error output stream.</source>
          <target state="translated">Wenn eine Konsolenanwendung gestartet wird, ordnet das Betriebssystem die drei e/a-Streams mit der Konsole: Standard Eingabe Datenstrom, den Standardausgabestream und Standard-Fehlerausgabestream.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Your application can read user input from the standard input stream; write normal data to the standard output stream; and write error data to the standard error output stream.</source>
          <target state="translated">Die Anwendung kann Benutzereingaben aus dem Standardeingabestream gelesen; Schreiben Sie normale Daten in den Standardausgabestream. und Fehlerdaten in den Standard-Fehlerausgabestream geschrieben.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>These streams are presented to your application as the values of the <ph id="ph1">&lt;xref:System.Console.In%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Console.Out%2A?displayProperty=nameWithType&gt;</ph>, and <ph id="ph3">&lt;xref:System.Console.Error%2A?displayProperty=nameWithType&gt;</ph> properties.</source>
          <target state="translated">Diese Streams werden angezeigt, als die Werte der an die Anwendung die <ph id="ph1">&lt;xref:System.Console.In%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Console.Out%2A?displayProperty=nameWithType&gt;</ph>, und <ph id="ph3">&lt;xref:System.Console.Error%2A?displayProperty=nameWithType&gt;</ph> Eigenschaften.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>By default, the value of the <ph id="ph1">&lt;xref:System.Console.In%2A&gt;</ph> property is a <ph id="ph2">&lt;xref:System.IO.TextReader?displayProperty=nameWithType&gt;</ph> object that represents the keyboard, and the values of the <ph id="ph3">&lt;xref:System.Console.Out%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Console.Error%2A&gt;</ph> properties are <ph id="ph5">&lt;xref:System.IO.TextWriter?displayProperty=nameWithType&gt;</ph> objects that represent a console window.</source>
          <target state="translated">Wird standardmäßig der Wert von der <ph id="ph1">&lt;xref:System.Console.In%2A&gt;</ph> Eigenschaft ist ein <ph id="ph2">&lt;xref:System.IO.TextReader?displayProperty=nameWithType&gt;</ph> Objekt, das die Tastatur und die Werte der darstellt der <ph id="ph3">&lt;xref:System.Console.Out%2A&gt;</ph> und <ph id="ph4">&lt;xref:System.Console.Error%2A&gt;</ph> Eigenschaften sind <ph id="ph5">&lt;xref:System.IO.TextWriter?displayProperty=nameWithType&gt;</ph> Objekte, die eine Konsolenfenster darstellen.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>However, you can set these properties to streams that do not represent the console window or keyboard; for example, you can set these properties to streams that represent files.</source>
          <target state="translated">Allerdings können Sie diese Eigenschaften in Streams festlegen, die nicht das Konsolenfenster angezeigt oder die Tastatur darstellen; Beispielsweise können Sie diese Eigenschaften in Streams festlegen, die Dateien darstellen.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>To redirect the standard input, standard output, or standard error stream, call the <ph id="ph1">&lt;xref:System.Console.SetIn%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Console.SetOut%2A?displayProperty=nameWithType&gt;</ph>, or <ph id="ph3">&lt;xref:System.Console.SetError%2A?displayProperty=nameWithType&gt;</ph> method, respectively.</source>
          <target state="translated">Rufen Sie die Standardeingabe, Standardausgabe oder Standardfehlerstream umgeleitet, die <ph id="ph1">&lt;xref:System.Console.SetIn%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Console.SetOut%2A?displayProperty=nameWithType&gt;</ph>, oder <ph id="ph3">&lt;xref:System.Console.SetError%2A?displayProperty=nameWithType&gt;</ph> Methode bzw.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>I/O operations that use these streams are synchronized, which means that multiple threads can read from, or write to, the streams.</source>
          <target state="translated">E/a-Vorgänge, die diese Streams werden synchronisiert, was bedeutet, dass mehrere Threads können Lese- und Schreibvorgänge in die Datenströme.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>This means that methods that are ordinarily asynchronous, such as <ph id="ph1">&lt;xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType&gt;</ph>, execute synchronously if the object represents a console stream.</source>
          <target state="translated">Dies bedeutet, dass Methoden, die in der Regel asynchron, z. B. sind <ph id="ph1">&lt;xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType&gt;</ph>, synchron ausgeführt werden, wenn das Objekt einen Konsole Stream darstellt.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Do not use the <ph id="ph1">&lt;xref:System.Console&gt;</ph> class to display output in unattended applications, such as server applications.</source>
          <target state="translated">Verwenden Sie nicht die <ph id="ph1">&lt;xref:System.Console&gt;</ph> zum Anzeigen der Ausgabe im unbeaufsichtigten Anwendungen, z. B. Server-Anwendungen.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Calls to methods such as <ph id="ph1">&lt;xref:System.Console.Write%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> have no effect in GUI applications.</source>
          <target state="translated">Aufrufe von Methoden wie z. B. <ph id="ph1">&lt;xref:System.Console.Write%2A?displayProperty=nameWithType&gt;</ph> und <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> wirken sich nicht in der GUI-Anwendungen.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source><ph id="ph1">&lt;xref:System.Console&gt;</ph> class members that work normally when the underlying stream is directed to a console might throw an exception if the stream is redirected, for example, to a file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Console&gt;</ph> Klassenmember, die normalerweise funktionieren, wenn der zugrunde liegende Stream einer-Konsole weitergeleitet wird möglicherweise eine Ausnahme ausgelöst, wenn der Stream, z. B. in einer Datei umgeleitet wird.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Program your application to catch <ph id="ph1">&lt;xref:System.IO.IOException?displayProperty=nameWithType&gt;</ph> exceptions if you redirect a standard stream.</source>
          <target state="translated">Programmieren Sie Ihre Anwendung zum Abfangen von <ph id="ph1">&lt;xref:System.IO.IOException?displayProperty=nameWithType&gt;</ph> Ausnahmen, wenn Sie einen Standardstream umleiten.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Console.IsOutputRedirected%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Console.IsInputRedirected%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Console.IsErrorRedirected%2A&gt;</ph> properties to determine whether a standard stream is redirected before performing an operation that throws an <ph id="ph4">&lt;xref:System.IO.IOException?displayProperty=nameWithType&gt;</ph> exception.</source>
          <target state="translated">Sie können auch die <ph id="ph1">&lt;xref:System.Console.IsOutputRedirected%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Console.IsInputRedirected%2A&gt;</ph>, und <ph id="ph3">&lt;xref:System.Console.IsErrorRedirected%2A&gt;</ph> Eigenschaften zu bestimmen, ob ein standard-Datenstrom umgeleitet wird, vor dem Ausführen eines Vorgangs, der auslöst ein <ph id="ph4">&lt;xref:System.IO.IOException?displayProperty=nameWithType&gt;</ph> Ausnahme.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>It is sometimes useful to explicitly call the members of the stream objects represented by the <ph id="ph1">&lt;xref:System.Console.In%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Console.Out%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Console.Error%2A&gt;</ph> properties.</source>
          <target state="translated">Es ist manchmal hilfreich, die Mitglieder der Streamobjekte dargestellte explizit aufrufen der <ph id="ph1">&lt;xref:System.Console.In%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Console.Out%2A&gt;</ph>, und <ph id="ph3">&lt;xref:System.Console.Error%2A&gt;</ph> Eigenschaften.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>For example, by default, the <ph id="ph1">&lt;xref:System.Console.ReadLine%2A?displayProperty=nameWithType&gt;</ph> method reads input from the standard input stream.</source>
          <target state="translated">Beispielsweise wird standardmäßig die <ph id="ph1">&lt;xref:System.Console.ReadLine%2A?displayProperty=nameWithType&gt;</ph> Methode liest die Eingabe aus dem Standardeingabestream.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Similarly, the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> method writes data to the standard output stream, and the data is followed by the default line termination string, which is  a carriage return and line feed ("\r\n").</source>
          <target state="translated">Auf ähnliche Weise die <ph id="ph1">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> -Methode schreibt Daten in den Standardausgabestream und die Daten werden gefolgt von der Standardeinstellung Zeile Beendigung Zeichenfolge, also einen Wagenrücklauf und Zeilenvorschub ("\r\n").</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>However, the <ph id="ph1">&lt;xref:System.Console&gt;</ph> class does not provide a corresponding method to write data to the standard error output stream, or a property to change the line termination string for data written to that stream.</source>
          <target state="translated">Allerdings die <ph id="ph1">&lt;xref:System.Console&gt;</ph> Klasse keine entsprechende Methode zum Schreiben von Daten in den Standard-Fehlerausgabestream oder eine Eigenschaft so ändern Sie die Zeichenfolge für den Zeilenabschluss für in diesen Datenstrom geschriebene Daten bereit.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>You can solve this problem by setting the <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Console.Out%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Console.Error%2A&gt;</ph> property to another line termination string.</source>
          <target state="translated">Sie können dieses Problem beheben, indem Sie festlegen der <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft von der <ph id="ph2">&lt;xref:System.Console.Out%2A&gt;</ph> oder <ph id="ph3">&lt;xref:System.Console.Error%2A&gt;</ph> Eigenschaft zu einer anderen Zeile Endzeichenfolge.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>For example, the following C# statement sets the line termination string for the standard error output stream to two carriage return and line feed sequences:</source>
          <target state="translated">Beispielsweise legt der folgende C#-Anweisung die Zeichenfolge für den Standard-Fehlerausgabestream beenden zwei Carriage return, Wagenrücklauf und Zeilenvorschub Sequenzen:</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>You can then explicitly call the <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> method of the error output stream object, as in the following C# statement:</source>
          <target state="translated">Sie können dann explizit aufrufen der <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> -Methode des Stream-Objekts wie in der folgende C#-Anweisung:</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Screen Buffer and Console Window</source>
          <target state="translated">Bildschirmpuffer und Konsolenfenster</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Two closely related features of the console are the screen buffer and the console window.</source>
          <target state="translated">Zwei eng verwandte Funktionen der Verwaltungskonsole sind Bildschirmpuffer und das Konsolenfenster.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Text is actually read from or written to streams owned by the console, but appear to be read from or written to an area owned by the console called the screen buffer.</source>
          <target state="translated">Text tatsächlich aus gelesen bzw. in Datenströme, die im Besitz der Konsole geschrieben, aber angezeigt werden, zu lesen oder zu einem Bereich, der im Besitz der Konsole namens Bildschirmpuffer geschrieben werden.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The screen buffer is an attribute of the console, and is organized as a rectangular grid of rows and columns where each grid intersection, or character cell, can contain a character.</source>
          <target state="translated">Bildschirmpuffer ist ein Attribut der Konsole und ist unterteilt als ein rechteckigen Raster mit Zeilen und Spalten, in dem jede Schnittmenge Raster oder Zeichenzelle, ein Zeichen enthalten.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Each character has its own foreground color, and each character cell has its own background color.</source>
          <target state="translated">Jedes Zeichen hat eine eigene Vordergrundfarbe, und jede Zeichenzelle verfügt über eine eigene Hintergrundfarbe.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The screen buffer is viewed through a rectangular region called the console window.</source>
          <target state="translated">Bildschirmpuffer wird über einen rechteckigen Bereich wird aufgerufen, das Konsolenfenster angezeigt.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The console window is another attribute of the console; it is not the console itself, which is an operating system window.</source>
          <target state="translated">Das Konsolenfenster ist ein weiteres Attribut der Konsole. Es ist nicht die Konsole selbst, die ein Betriebssystem-Fenster wird.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The console window is arranged in rows and columns, is less than or equal to the size of the screen buffer, and can be moved to view different areas of the underlying screen buffer.</source>
          <target state="translated">Das Konsolenfenster ist in Zeilen und Spalten angeordnet sind, ist kleiner als oder gleich der Größe des Bildschirmpuffers und kann auf verschiedene Bereiche des zugrunde liegenden Bildschirmpuffers anzeigen verschoben werden.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>If the screen buffer is larger than the console window, the console automatically displays scroll bars so the console window can be repositioned over the screen buffer area.</source>
          <target state="translated">Wenn Bildschirmpuffer größer als das Konsolenfenster ist, zeigt die Konsole automatisch Bildlaufleisten, damit das Konsolenfenster über Bildschirmpufferbereichs neu positioniert werden kann.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>A cursor indicates the screen buffer position where text is currently read or written.</source>
          <target state="translated">Ein Cursor zeigt die Bildschirmpufferposition, in denen Text zurzeit gelesen oder geschrieben werden.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The cursor can be hidden or made visible, and its height can be changed.</source>
          <target state="translated">Der Cursor kann ausgeblendet oder sichtbar gemacht werden, und seine Höhe kann geändert werden.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>If the cursor is visible, the console window position is moved automatically so the cursor is always in view.</source>
          <target state="translated">Wenn der Cursor sichtbar ist, wird die Position des Konsolenfensters automatisch verschoben, damit der Cursor immer in der Ansicht befindet.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The origin for character cell coordinates in the screen buffer is the upper left corner, and the positions of the cursor and the console window are measured relative to that origin.</source>
          <target state="translated">Der Ursprung für Zeichenzellenkoordinaten im Bildschirmpuffer ist die linke obere Ecke, und die Positionen des Cursors und im Konsolenfenster werden relativ zum Ursprung gemessen.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Use zero-based indexes to specify positions; that is, specify the topmost row as row 0, and the leftmost column as column 0.</source>
          <target state="translated">Verwenden Sie nullbasierten Indizes Positionen an. Geben Sie also die oberste Zeile als Zeile 0, und die am weitesten links stehende Spalte als Spalte 0.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The maximum value for the row and column indexes is <ph id="ph1">&lt;xref:System.Int16.MaxValue?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Der maximale Wert für die Zeilen- und Spaltenindizes ist <ph id="ph1">&lt;xref:System.Int16.MaxValue?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Unicode Support for the Console</source>
          <target state="translated">Unicode-Unterstützung für die Konsole</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>In general, the console reads input and writes output by using the current console code page, which the system locale defines by default.</source>
          <target state="translated">Im Allgemeinen wird die Konsole liest die Eingabe und Ausgabe mit der aktuellen Konsole-Codepage, die standardmäßig das Gebietsschema des Systems definiert schreibt.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>A code page can handle only a subset of available Unicode characters, so if you try to display characters that are not mapped by a particular code page, the console won't be able to display all characters or represent them accurately.</source>
          <target state="translated">Eine Codepage kann nur eine Teilmenge der verfügbaren Unicode-Zeichen behandelt, damit, wenn Sie versuchen, Anzeige von Zeichen, die nicht durch eine bestimmte Codepage der Konsole zugeordnet sind nicht alle Zeichen angezeigt werden, oder sie genau darstellen können.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The following example illustrates this problem.</source>
          <target state="translated">Dieses Problem wird anhand des folgenden Beispiels veranschaulicht.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>It tries to display the characters of the Cyrillic alphabet from U+0410 to U+044F to the console.</source>
          <target state="translated">Sie versucht, die die Kyrillisch von U + 0410, U + 044F-Zeichen in der Konsole anzeigen.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>If you run the example on a system that uses console code page 437, each character is replaced by a question mark (?), because Cyrillic characters do not map to the characters in code page 437.</source>
          <target state="translated">Wenn Sie das Beispiel auf einem System ausführen, auf der Konsole Codepage 437 verwendet, wird jedes Zeichen durch ein Fragezeichen (?), ersetzt, da die Zeichen in der Codepage 437 nicht kyrillische Zeichen zugeordnet werden können.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>In addition to supporting code pages, the <ph id="ph1">&lt;xref:System.Console&gt;</ph> class supports UTF-8 encoding with the <ph id="ph2">&lt;xref:System.Text.UTF8Encoding&gt;</ph> class.</source>
          <target state="translated">Zusätzlich zur Unterstützung von Codepages, die <ph id="ph1">&lt;xref:System.Console&gt;</ph> Klasse unterstützt UTF-8-Codierung mit der <ph id="ph2">&lt;xref:System.Text.UTF8Encoding&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Beginning with the .NET Framework 4.5, the <ph id="ph1">&lt;xref:System.Console&gt;</ph> class also supports UTF-16 encoding with the <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph> class.</source>
          <target state="translated">Ab .NET Framework 4.5, den <ph id="ph1">&lt;xref:System.Console&gt;</ph> -Klasse unterstützt auch die UTF-16-Codierung mit der <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>To display Unicode characters to the console.</source>
          <target state="translated">Unicode-Zeichen in der Konsole angezeigt.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>you set the <ph id="ph1">&lt;xref:System.Console.OutputEncoding%2A&gt;</ph> property to either <ph id="ph2">&lt;xref:System.Text.UTF8Encoding&gt;</ph> or  <ph id="ph3">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>.</source>
          <target state="translated">Sie legen die <ph id="ph1">&lt;xref:System.Console.OutputEncoding%2A&gt;</ph> -Eigenschaft entweder <ph id="ph2">&lt;xref:System.Text.UTF8Encoding&gt;</ph> oder <ph id="ph3">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Support for Unicode characters requires the encoder to recognize a particular Unicode character, and also requires a font that has the glyphs needed to render that character.</source>
          <target state="translated">Unterstützung für Unicode-Zeichen erfordert den Encoder auf ein bestimmtes Unicode-Zeichen zu erkennen und erfordert außerdem eine Schriftart, die die Symbole, die zum Rendern dieses Zeichens erforderlich ist.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>To successfully display Unicode characters to the console, the console font must be set to a non-raster or TrueType font such as Consolas or Lucida Console.</source>
          <target state="translated">Um erfolgreich Unicode-Zeichen in der Konsole angezeigt wird, muss die Schriftart der Konsole auf einem nicht Raster- oder TrueType-Schriftart, z. B. Consolas oder Lucida Console festgelegt werden.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The following example shows how you can programmatically change the font from a raster font to Lucida Console.</source>
          <target state="translated">Das folgende Beispiel zeigt, wie Sie programmgesteuert die Schriftart aus einem Raster-Schriftart Lucida Console auswählen können.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>However, TrueType fonts can display only a subset of glyphs.</source>
          <target state="translated">TrueType-Schriftarten können jedoch nur eine Teilmenge der Symbole angezeigt.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>For example, the Lucida Console font displays only 643 of the approximately 64,000 available characters from U+0021 to U+FB02.</source>
          <target state="translated">So zeigt z. B. die Schriftart Lucida Console nur 643 von den ungefähr 64.000 verfügbaren Zeichen von U + 0021 bis U + FB02.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>To see which characters a particular font supports, open the <bpt id="p1">**</bpt>Fonts<ept id="p1">**</ept> applet in Control Panel, choose the <bpt id="p2">**</bpt>Find a character<ept id="p2">**</ept> option, and choose the font whose character set you'd like to examine in the <bpt id="p3">**</bpt>Font<ept id="p3">**</ept> list of the <bpt id="p4">**</bpt>Character Map<ept id="p4">**</ept> window.</source>
          <target state="translated">Um anzuzeigen, die eine besondere Schriftart Zeichen unterstützt, öffnen Sie die <bpt id="p1">**</bpt>Schriftarten<ept id="p1">**</ept> in der Systemsteuerung, wählen Sie die <bpt id="p2">**</bpt>finden Sie ein Zeichen<ept id="p2">**</ept> aus, und wählen Sie die Schriftart, deren Character, Sie Set, möchten in der untersuchen<bpt id="p3">**</bpt> Schriftart<ept id="p3">**</ept> Liste mit den <bpt id="p4">**</bpt>Zeichentabelle<ept id="p4">**</ept> Fenster.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Windows uses font linking to display glyphs that are not available in a particular font.</source>
          <target state="translated">Windows verwendet die Verknüpfung von Schriftarten, um Symbole anzuzeigen, die in einer bestimmten Schriftart nicht verfügbar sind.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>For information about font linking to display additional character sets, see <bpt id="p1">[</bpt>Globalization Step-by-Step: Fonts<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=229111)</ept>.</source>
          <target state="translated">Informationen zum Anzeigen von internationale Zeichensätze-schriftartverknüpfung, finden Sie unter <bpt id="p1">[</bpt>Globalisierung Schritt für Schritt: Schriftarten<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=229111)</ept>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Linked fonts are defined in the HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\FontLink\SystemLink subkey of the registry.</source>
          <target state="translated">Verknüpfte Schriftarten sind in den Unterschlüssel HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\FontLink\SystemLink der Registrierung definiert.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Each entry associated with this subkey corresponds to the name of a base font, and its value is a string array that defines the font files and the fonts that are linked to the base font.</source>
          <target state="translated">Jeder Eintrag zugeordneten dieser Unterschlüssel entspricht dem Namen einer Basisklasse Schriftart, und ihr Wert ist ein Zeichenfolgenarray, das die Schriftartdateien definiert und die Schriftarten, die auf der Basis Schriftart verknüpft sind.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Each member of the array defines a linked font and takes the form <bpt id="p1">*</bpt>font-file-name<ept id="p1">*</ept>,<bpt id="p2">*</bpt>font-name<ept id="p2">*</ept>.</source>
          <target state="translated">Jedes Element des Arrays definiert eine verknüpfte Schriftart und nimmt die Form <bpt id="p1">*</bpt>Schriftart Dateiname<ept id="p1">*</ept>,<bpt id="p2">*</bpt>Schriftartname<ept id="p2">*</ept>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The following example illustrates how you can programmatically define a linked font named SimSun found in a font file named simsun.ttc that displays Simplified Han characters.</source>
          <target state="translated">Im folgende Beispiel wird veranschaulicht, wie Sie programmgesteuert definieren können, eine verknüpfte Schriftart, die mit dem Namen SimSun gefunden in eine Schriftartdatei, die mit dem Namen simsun.ttc, die vereinfachte Han Zeichen anzeigt.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Unicode support for the console has the following limitations:</source>
          <target state="translated">Unicode-Unterstützung für die Konsole hat die folgenden Einschränkungen:</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>UTF-32 encoding is not supported.</source>
          <target state="translated">UTF-32-Codierung wird nicht unterstützt.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The only supported Unicode encodings are UTF-8 and UTF-16, which are represented by the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph> classes, respectively.</source>
          <target state="translated">Die einzige unterstützte Unicode-Codierungen sind UTF-8 und UTF-16, die dargestellt werden. durch die <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph> und <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph> -Klassen bzw. Server.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Bidirectional output is not supported.</source>
          <target state="translated">Bidirektionale Ausgabe wird nicht unterstützt.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Display of characters outside the Basic Multilingual Plane (that is, of surrogate pairs) is not supported, even if they are defined in a linked font file.</source>
          <target state="translated">Anzeige von Zeichen außerhalb der grundlegenden mehrsprachigen Ebene (d. h. von Ersatzzeichenpaaren) wird nicht unterstützt, auch wenn sie in einer Schriftartdatei verknüpften definiert sind.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Display of characters in complex scripts is not supported.</source>
          <target state="translated">Anzeige von Zeichen in komplexen Skripts wird nicht unterstützt.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Combining character sequences (that is, characters that consist of a base character and one or more combining characters) are displayed as separate characters.</source>
          <target state="translated">Kombinieren von Zeichensequenzen (d. h. Zeichen, die aus einer Basiszeichen und mindestens ein Kombinationszeichen bestehen) werden als separate Zeichen angezeigt.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>To work around this limitation, you can normalize the string to be displayed by calling the <ph id="ph1">&lt;xref:System.String.Normalize%2A?displayProperty=nameWithType&gt;</ph> method before sending output to the console.</source>
          <target state="translated">Um diese Einschränkung zu umgehen, können Sie die anzuzeigende Zeichenfolge, durch den Aufruf Normalisieren der <ph id="ph1">&lt;xref:System.String.Normalize%2A?displayProperty=nameWithType&gt;</ph> Methode vor der Ausgabe an die Konsole gesendet.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>In the following example, a string that contains the combining character sequence U+0061 U+0308 is displayed to the console as two characters before the output string is normalized, and as a single character after the <ph id="ph1">&lt;xref:System.String.Normalize%2A?displayProperty=nameWithType&gt;</ph> method is called.</source>
          <target state="translated">Im folgenden Beispiel Sequenz eine Zeichenfolge, enthält das Kombinieren von-Zeichen, U + 0061 ist U + 0308 in der Konsole angezeigt wird, als zwei Zeichen, bevor die Ausgabezeichenfolge normalisiert wird, und als einzelnes Zeichen nach der <ph id="ph1">&lt;xref:System.String.Normalize%2A?displayProperty=nameWithType&gt;</ph> -Methode aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Note that normalization is a viable solution only if the Unicode standard for the character includes a pre-composed form that corresponds to a particular combining character sequence.</source>
          <target state="translated">Beachten Sie, dass Normalisierung einer sinnvollen Lösung ist nur dann, wenn der Unicode-standard für das Zeichen ein vorab zusammengesetzter Formular enthält, die einem bestimmten Combining entspricht, Sequenz Zeichen.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>If a font provides a glyph for a code point in the private use area, that glyph will be displayed.</source>
          <target state="translated">Wenn eine Schriftart ein Symbol für einen Codepunkt im Bereich "other" bereitstellt, wird dieses Symbol angezeigt.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>However, because characters in the private use area are application-specific, this may not be the expected glyph.</source>
          <target state="translated">Da Zeichen im Bereich "other" anwendungsspezifische sind, kann dies jedoch nicht das erwartete Symbol sein.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The following example displays a range of Unicode characters to the console.</source>
          <target state="translated">Das folgende Beispiel zeigt einen Bereich von Unicode-Zeichen in der Konsole an.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The example accepts three command-line parameters: the start of the range to display, the end of the range to display, and whether to use the current console encoding (<ph id="ph1">`false`</ph>) or UTF-16 encoding (<ph id="ph2">`true`</ph>).</source>
          <target state="translated">Im Beispiel drei Befehlszeilen-Parameter akzeptiert: der Anfang des Bereichs angezeigt, das Ende des Bereichs angezeigt und, ob die aktuelle Konsole Codierung verwendet (<ph id="ph1">`false`</ph>) oder UTF-16-Codierung (<ph id="ph2">`true`</ph>).</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>It assumes that the console is using a TrueType font.</source>
          <target state="translated">Es wird davon ausgegangen, dass mithilfe der Konsole eine TrueType-Schriftart.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Common Operations</source>
          <target state="translated">Allgemeine Vorgänge</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The <ph id="ph1">&lt;xref:System.Console&gt;</ph> class contains the following methods for reading console input and writing console output:</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Console&gt;</ph> Klasse enthält die folgenden Methoden für die Konsoleneingabe zu lesen und Schreiben der Ausgabe in der Konsole:</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> method read an individual character.</source>
          <target state="translated">Die Überladungen der <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> Methode lesen ein einzelnes Zeichen.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The <ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> method reads an entire line of input.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> Methode liest eine ganze Zeile der Eingabe.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The <ph id="ph1">&lt;xref:System.Console.Write%2A&gt;</ph> method overloads convert an instance of a value type, an array of characters, or a set of objects to a formatted or unformatted string, and then write that string to the console.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Console.Write%2A&gt;</ph> Überladungen der Methode eine Instanz von einem Werttyp, ein Array von Zeichen oder einen Satz von Objekten in eine formatierte oder unformatierte Zeichenfolge konvertieren, und klicken Sie dann diese Zeichenfolge in die Konsole schreiben.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>A parallel set of <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method overloads output the same string as the <ph id="ph2">&lt;xref:System.Console.Write%2A&gt;</ph> overloads but also add a line termination string.</source>
          <target state="translated">Eine parallele Satz von <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> methodenüberladungen, die gleiche als Zeichenfolge, Ausgabe der <ph id="ph2">&lt;xref:System.Console.Write%2A&gt;</ph> überlädt, aber auch eine Zeichenfolge für den Zeilenabschluss hinzufügen.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The <ph id="ph1">&lt;xref:System.Console&gt;</ph> class also contains methods and properties to perform the following operations:</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Console&gt;</ph> -Klasse enthält auch Methoden und Eigenschaften für die folgenden Vorgänge ausführen:</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Get or set the size of the screen buffer.</source>
          <target state="translated">Abrufen oder Festlegen der Größe des Bildschirmpuffers.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The <ph id="ph1">&lt;xref:System.Console.BufferHeight%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.BufferWidth%2A&gt;</ph> properties let you get or set the buffer height and width, respectively, and the <ph id="ph3">&lt;xref:System.Console.SetBufferSize%2A&gt;</ph> method lets you set the buffer size in a single method call.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Console.BufferHeight%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Console.BufferWidth%2A&gt;</ph> Eigenschaften können Sie abrufen oder Festlegen der Puffer-Höhe und Breite, und die <ph id="ph3">&lt;xref:System.Console.SetBufferSize%2A&gt;</ph> Methode können Sie die Größe des Puffers in einen einzigen Methodenaufruf werden soll.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Get or set the size of the console window.</source>
          <target state="translated">Abrufen oder Festlegen der Größe des Konsolenfensters.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The <ph id="ph1">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> properties let you get or set the window height and width, respectively, and the <ph id="ph3">&lt;xref:System.Console.SetWindowSize%2A&gt;</ph> method lets you set the window size in a single method call.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> Eigenschaften ermöglichen das Abrufen oder legen Sie die Höhe und Breite, und die <ph id="ph3">&lt;xref:System.Console.SetWindowSize%2A&gt;</ph> Methode können Sie die Größe des Fensters in einem einzelnen Methodenaufruf werden soll.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Get or set the size of the cursor.</source>
          <target state="translated">Abrufen oder Festlegen der Größe des Cursors.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The <ph id="ph1">&lt;xref:System.Console.CursorSize%2A&gt;</ph> property specifies the height of the cursor in a character cell.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Console.CursorSize%2A&gt;</ph> Eigenschaft gibt die Höhe des Cursors in einer Zeichenzelle.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Get or set the position of the console window relative to the screen buffer.</source>
          <target state="translated">Abrufen oder Festlegen der Position des Konsolenfensters relativ zum Bildschirmpuffer.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The <ph id="ph1">&lt;xref:System.Console.WindowTop%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> properties let you get or set the top row and leftmost column of the screen buffer that appears in the console window, and the <ph id="ph3">&lt;xref:System.Console.SetWindowPosition%2A&gt;</ph> method lets you set these values in a single method call.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Console.WindowTop%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> Eigenschaften können Sie die abzurufen oder festzulegen, die oberste Zeile und die am weitesten links stehende Spalte des Bildschirmpuffers, die im Konsolenfenster angezeigt wird und die <ph id="ph3">&lt;xref:System.Console.SetWindowPosition%2A&gt;</ph> Methode können Sie diese Werte in einem einzelnen Methodenaufruf werden soll.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Get or set the position of the cursor by getting or setting the <ph id="ph1">&lt;xref:System.Console.CursorTop%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.CursorLeft%2A&gt;</ph> properties, or set the position of the cursor by calling the <ph id="ph3">&lt;xref:System.Console.SetCursorPosition%2A&gt;</ph> method.</source>
          <target state="translated">Abrufen oder festlegen die Position des Cursors durch Abrufen oder Festlegen der <ph id="ph1">&lt;xref:System.Console.CursorTop%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Console.CursorLeft%2A&gt;</ph> Eigenschaften, oder legen Sie die Position des Cursors durch Aufrufen der <ph id="ph3">&lt;xref:System.Console.SetCursorPosition%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Move or clear data in the screen buffer by calling the <ph id="ph1">&lt;xref:System.Console.MoveBufferArea%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Console.Clear%2A&gt;</ph> method.</source>
          <target state="translated">Verschieben oder Löschen von Daten im Bildschirmpuffer durch Aufrufen der <ph id="ph1">&lt;xref:System.Console.MoveBufferArea%2A&gt;</ph> oder <ph id="ph2">&lt;xref:System.Console.Clear%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Get or set the foreground and background colors by using the <ph id="ph1">&lt;xref:System.Console.ForegroundColor%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.BackgroundColor%2A&gt;</ph> properties, or reset the background and foreground to their default colors by calling the <ph id="ph3">&lt;xref:System.Console.ResetColor%2A&gt;</ph> method.</source>
          <target state="translated">Abrufen oder Festlegen der Farben für Vordergrund und Hintergrund mithilfe der <ph id="ph1">&lt;xref:System.Console.ForegroundColor%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Console.BackgroundColor%2A&gt;</ph> Eigenschaften oder Zurücksetzen die Hintergrund- und Vordergrundfarben, deren Standardfarben durch Aufrufen der <ph id="ph3">&lt;xref:System.Console.ResetColor%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Play the sound of a beep through the console speaker by calling the <ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> method.</source>
          <target state="translated">Wiedergeben von den Sound eines Signaltons auf dem Konsolenlautsprecher durch Aufrufen der <ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source><ph id="ph1">[!INCLUDE[net_core](~/includes/net-core-md.md)]</ph> Notes</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_core](~/includes/net-core-md.md)]</ph> Hinweise</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>In the .NET Framework on the desktop, the <ph id="ph1">&lt;xref:System.Console&gt;</ph> class uses the encoding returned by <ph id="ph2">`GetConsoleCP`</ph> and <ph id="ph3">`GetConsoleOutputCP`</ph>, which typically is a code page encoding.</source>
          <target state="translated">In .NET Framework auf dem Desktop die <ph id="ph1">&lt;xref:System.Console&gt;</ph> Klasse verwendet die Codierung zurückgegebenes <ph id="ph2">`GetConsoleCP`</ph> und <ph id="ph3">`GetConsoleOutputCP`</ph>, die in der Regel wird eine Codepage-Codierung.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>For example code, on systems whose culture is English (United States), code page 437 is the encoding that is used by default.</source>
          <target state="translated">Beispielsweise ist Code, auf Systemen, die mit der Kultur Englisch (Vereinigte Staaten), Codepage 437 ist die Codierung, die standardmäßig verwendet wird.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>However, <ph id="ph1">[!INCLUDE[net_core](~/includes/net-core-md.md)]</ph> may make only a limited subset of these encodings available.</source>
          <target state="translated">Allerdings <ph id="ph1">[!INCLUDE[net_core](~/includes/net-core-md.md)]</ph> kann nur eine beschränkte Teilmenge dieser Codierungen verfügbar machen.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Where this is the case, <ph id="ph1">&lt;xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType&gt;</ph> is used as the default encoding for the console.</source>
          <target state="translated">Wenn dies der Fall ist <ph id="ph1">&lt;xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType&gt;</ph> als die standardcodierung für die Konsole verwendet wird.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>If your app depends on specific code page encodings, you can still make them available by doing the following <bpt id="p1">*</bpt>before<ept id="p1">*</ept> you call any <ph id="ph1">&lt;xref:System.Console&gt;</ph> methods:</source>
          <target state="translated">Wenn Ihre app bestimmte codepagecodierungen abhängig ist, können Sie weiterhin sie verfügbar machen mithilfe der folgenden Schritte <bpt id="p1">*</bpt>vor<ept id="p1">*</ept> rufen Sie eine <ph id="ph1">&lt;xref:System.Console&gt;</ph> Methoden:</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Add a reference to the System.Text.Encoding.CodePages.dll assembly to your project.</source>
          <target state="translated">Fügen Sie einen Verweis auf die Assembly System.Text.Encoding.CodePages.dll zu Ihrem Projekt ein.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Retrieve the <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> object from the <ph id="ph2">&lt;xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Abrufen der <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> -Objekt aus der <ph id="ph2">&lt;xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Pass the <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> object to the <ph id="ph2">&lt;xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType&gt;</ph> method to make the additional encodings supported by the encoding provider available.</source>
          <target state="translated">Übergeben der <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> -Objekt an die <ph id="ph2">&lt;xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType&gt;</ph> Methode zum Erstellen von zusätzlichen Codierungen, die von der Codierung verfügbaren Anbieter unterstützt.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The <ph id="ph1">&lt;xref:System.Console&gt;</ph> class will then automatically use the default system encoding rather than UTF8, provided that you have registered the encoding provider before calling any <ph id="ph2">&lt;xref:System.Console&gt;</ph> output methods.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Console&gt;</ph> Klasse automatisch verwendet dann das System standardcodierung anstatt UTF8, vorausgesetzt, dass Sie die codierungsanbieter registriert haben, bevor er einen <ph id="ph2">&lt;xref:System.Console&gt;</ph> Ausgabemethoden.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The following example demonstrates how to read data from, and write data to, the standard input and output streams.</source>
          <target state="translated">Im folgenden Beispiel wird veranschaulicht, wie Daten aus lesen und Schreiben von Daten in die standardmäßigen Eingabe- und Ausgabestreams.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Note that these streams can be redirected by using the <ph id="ph1">&lt;xref:System.Console.SetIn%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.SetOut%2A&gt;</ph> methods.</source>
          <target state="translated">Beachten Sie, dass diese Streams mit umgeleitet werden, können die <ph id="ph1">&lt;xref:System.Console.SetIn%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Console.SetOut%2A&gt;</ph> Methoden.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>This type is thread safe.</source>
          <target state="translated">Dieser Typ ist threadsicher.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="P:System.Console.BackgroundColor">
          <source>Gets or sets the background color of the console.</source>
          <target state="translated">Ruft die Hintergrundfarbe der Konsole ab oder legt diese fest.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BackgroundColor">
          <source>A value that specifies the background color of the console; that is, the color that appears behind each character.</source>
          <target state="translated">Ein Wert, der die Hintergrundfarbe der Konsole, d. h. die hinter jedem Zeichen angezeigte Farbe angibt.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BackgroundColor">
          <source>The default is black.</source>
          <target state="translated">Die Standardeinstellung ist schwarz.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BackgroundColor">
          <source>A change to the <ph id="ph1">&lt;xref:System.Console.BackgroundColor%2A&gt;</ph> property affects only output that is written to individual character cells after the background color is changed.</source>
          <target state="translated">Eine Änderung an der <ph id="ph1">&lt;xref:System.Console.BackgroundColor%2A&gt;</ph> Eigenschaft wirkt sich auf die Ausgabe nur erfolgt, die nach dem Ändern der Hintergrundfarbe für einzelne Zeichenzellen geschrieben wird.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BackgroundColor">
          <source>To change the background color of the console window as a whole, set the <ph id="ph1">&lt;xref:System.Console.BackgroundColor%2A&gt;</ph> property and call the <ph id="ph2">&lt;xref:System.Console.Clear%2A&gt;</ph> method.</source>
          <target state="translated">Um die Farbe des Hintergrunds des Konsolenfensters als Ganzes zu ändern, legen die <ph id="ph1">&lt;xref:System.Console.BackgroundColor%2A&gt;</ph> -Eigenschaft, und rufen die <ph id="ph2">&lt;xref:System.Console.Clear%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BackgroundColor">
          <source>The following example provides an illustration.</source>
          <target state="translated">Dies wird im folgenden Beispiel veranschaulicht.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BackgroundColor">
          <source>A get operation for a Windows-based application, in which a console does not exist, returns <ph id="ph1">&lt;xref:System.ConsoleColor.Black?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Gibt ein Get-Vorgang für eine Windows-basierte Anwendung, in dem eine Konsole nicht vorhanden ist, <ph id="ph1">&lt;xref:System.ConsoleColor.Black?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BackgroundColor">
          <source>The following example saves the values of the <ph id="ph1">&lt;xref:System.ConsoleColor&gt;</ph> enumeration to an array and stores the current values of the <ph id="ph2">&lt;xref:System.Console.BackgroundColor%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Console.ForegroundColor%2A&gt;</ph> properties to variables.</source>
          <target state="translated">Im folgende Beispiel speichert die Werte der <ph id="ph1">&lt;xref:System.ConsoleColor&gt;</ph> Enumeration in ein Array und speichert die aktuellen Werte von der <ph id="ph2">&lt;xref:System.Console.BackgroundColor%2A&gt;</ph> und <ph id="ph3">&lt;xref:System.Console.ForegroundColor%2A&gt;</ph> Eigenschaften an Variablen.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BackgroundColor">
          <source>It then changes the foreground color to each color in the <ph id="ph1">&lt;xref:System.ConsoleColor&gt;</ph> enumeration except to the color that matches the current background, and it changes the background color to each color in the <ph id="ph2">&lt;xref:System.ConsoleColor&gt;</ph> enumeration except to the color that matches the current foreground.</source>
          <target state="translated">Anschließend wird die Vordergrundfarbe für jede Farbe in der <ph id="ph1">&lt;xref:System.ConsoleColor&gt;</ph> Enumeration, mit der Ausnahme, die Farbe, die mit den aktuellen Hintergrund übereinstimmt, und die Farbe des Hintergrunds auf jede Farbe in ändert der <ph id="ph2">&lt;xref:System.ConsoleColor&gt;</ph> Enumeration, außer auf die Farbe, entspricht die aktuelle Vordergrundfarbe.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BackgroundColor">
          <source>(If the foreground color is the same as the background color, the text isn't visible.) Finally, it calls the <ph id="ph1">&lt;xref:System.Console.ResetColor%2A&gt;</ph> method to restore the original console colors.</source>
          <target state="translated">(Wenn die Vordergrundfarbe für die Farbe des Hintergrunds identisch ist, der Text nicht sichtbar ist.) Zum Schluss ruft es die <ph id="ph1">&lt;xref:System.Console.ResetColor%2A&gt;</ph> Verfahren zum Wiederherstellen der ursprünglichen konsolenfarben.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="P:System.Console.BackgroundColor">
          <source>The color specified in a set operation is not a valid member of <ph id="ph1">&lt;see cref="T:System.ConsoleColor" /&gt;</ph>.</source>
          <target state="translated">Die in einem Set-Vorgang angegebene Farbe ist kein gültiges Member von <ph id="ph1">&lt;see cref="T:System.ConsoleColor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="P:System.Console.BackgroundColor">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">Der Benutzer verfügt nicht über die erforderliche Berechtigung, um diese Aktion auszuführen.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="P:System.Console.BackgroundColor">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BackgroundColor">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BackgroundColor">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="T:System.Console">
          <source>Plays the sound of a beep through the console speaker.</source>
          <target state="translated">Gibt den Sound eines Signaltons auf dem Konsolenlautsprecher wieder.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Console.Beep">
          <source>Plays the sound of a beep through the console speaker.</source>
          <target state="translated">Gibt den Sound eines Signaltons auf dem Konsolenlautsprecher wieder.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Beep">
          <source>By default, the beep plays at a frequency of 800 hertz for a duration of 200 milliseconds.</source>
          <target state="translated">Standardmäßig wird der Signalton für eine Dauer von 200 Millisekunden bei einer Häufigkeit von 800 Hertz wiedergegeben.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Beep">
          <source>The <ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> method is not supported on the 64-bit editions of Windows Vista and Windows XP.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> Methode wird für die 64-Bit-Editionen von Windows Vista und Windows XP nicht unterstützt.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Beep">
          <source><ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> wraps a call to the Windows <bpt id="p1">[</bpt>Beep function<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ms679277.aspx)</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> umschließt einen Aufruf an eine Windows <bpt id="p1">[</bpt>Beep-Funktion<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ms679277.aspx)</ept>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Beep">
          <source>Whether <ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> produces a sound on versions of Windows before Windows 7 depends on the presence of a 8254 programmable interval timer chip.</source>
          <target state="translated">Ob <ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> erzeugt einen Sound in Windows-Versionen vor Windows 7 auf dem Vorhandensein einer 8254 programmable Interval Timer-Chip abhängig ist.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Beep">
          <source>Starting with Windows 7, it depends on the default sound device.</source>
          <target state="translated">Ab Windows 7, abhängt auf dem Standardgerät sound.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Beep">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> method.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die <ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Beep">
          <source>The example accepts a number from 1 through 9 as a command line argument, and plays the beep that number of times.</source>
          <target state="translated">Im Beispiel wird eine Zahl von 1 bis 9 als Befehlszeilenargument akzeptiert und wird der Signalton entsprechend oft wiedergegeben.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Console.Beep">
          <source>This method was executed on a server, such as SQL Server, that does not permit access to a user interface.</source>
          <target state="translated">Diese Methode wurde auf einem Server, z. B. einem SQL-Server ausgeführt, der keinen Zugriff auf eine Benutzeroberfläche gestattet.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Console.Beep(System.Int32,System.Int32)">
          <source>The frequency of the beep, ranging from 37 to 32767 hertz.</source>
          <target state="translated">Die Frequenz des Signaltons zwischen 37 und 32767 Hertz.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Console.Beep(System.Int32,System.Int32)">
          <source>The duration of the beep measured in milliseconds.</source>
          <target state="translated">Die Dauer des Signaltons in Millisekunden.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Console.Beep(System.Int32,System.Int32)">
          <source>Plays the sound of a beep of a specified frequency and duration through the console speaker.</source>
          <target state="translated">Gibt den Sound eines Signaltons mit einer angegebenen Frequenz und Dauer auf dem Konsolenlautsprecher wieder.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Beep(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> wraps a call to the Windows <bpt id="p1">[</bpt>Beep function<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ms679277.aspx)</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> umschließt einen Aufruf an eine Windows <bpt id="p1">[</bpt>Beep-Funktion<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ms679277.aspx)</ept>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Beep(System.Int32,System.Int32)">
          <source>Whether <ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> produces a sound on versions of Windows before Windows 7 depends on the presence of a 8254 programmable interval timer chip.</source>
          <target state="translated">Ob <ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> erzeugt einen Sound in Windows-Versionen vor Windows 7 auf dem Vorhandensein einer 8254 programmable Interval Timer-Chip abhängig ist.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Beep(System.Int32,System.Int32)">
          <source>Starting with Windows 7, it depends on the default sound device.</source>
          <target state="translated">Ab Windows 7, abhängt auf dem Standardgerät sound.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Beep(System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> method is not supported on the 64-bit editions of Windows Vista and Windows XP.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> Methode wird für die 64-Bit-Editionen von Windows Vista und Windows XP nicht unterstützt.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Beep(System.Int32,System.Int32)">
          <source>This example demonstrates the <ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> method by playing the first few notes of a song through the console speaker.</source>
          <target state="translated">Dieses Beispiel zeigt die <ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> Methode durch das erste Paar Notizen eines Songs auf dem Konsolenlautsprecher wiedergeben.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Console.Beep(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="frequency" /&gt;</ph> is less than 37 or more than 32767 hertz.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="frequency" /&gt;</ph> ist kleiner als 37 oder größer als 32767 Hertz.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Console.Beep(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Console.Beep(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="duration" /&gt;</ph> is less than or equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="duration" /&gt;</ph> ist kleiner oder gleich 0 (null).</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Console.Beep(System.Int32,System.Int32)">
          <source>This method was executed on a server, such as SQL Server, that does not permit access to the console.</source>
          <target state="translated">Diese Methode wurde auf einem Server wie SQL Server ausgeführt, der keinen Zugriff auf die Konsole gestattet.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="P:System.Console.BufferHeight">
          <source>Gets or sets the height of the buffer area.</source>
          <target state="translated">Ruft die Höhe des Pufferbereichs ab oder legt diese fest.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BufferHeight">
          <source>The current height, in rows, of the buffer area.</source>
          <target state="translated">Die aktuelle Höhe des Pufferbereichs in Zeilen.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BufferHeight">
          <source>This property defines the number of rows (or lines) stored in the buffer that is accessed by a console mode window.</source>
          <target state="translated">Diese Eigenschaft definiert die Anzahl der Zeilen (oder Zeilen) gespeichert, die im Puffer, der von einem Modus Konsolenfenster zugegriffen wird.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BufferHeight">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> property defines the number of rows that are actually displayed in the console window at any particular time.</source>
          <target state="translated">Im Gegensatz dazu die <ph id="ph1">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> Eigenschaft definiert die Anzahl der Zeilen, die tatsächlich zu einem bestimmten Zeitpunkt im Konsolenfenster angezeigt werden.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BufferHeight">
          <source>If the number of rows actually written to the buffer exceeds the number of rows defined by the <ph id="ph1">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> property, the window can be scrolled vertically so that it displays a contiguous number of rows that are equal to the <ph id="ph2">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> property and are located anywhere in the buffer.</source>
          <target state="translated">Überschreitet die Anzahl der tatsächlich in den Puffer geschriebenen Zeilen die Anzahl der Zeilen, die definiert, indem Sie die <ph id="ph1">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> -Eigenschaft, können werden ein Bildlauf vertikal, sodass er eine zusammenhängende Anzahl von Zeilen angezeigt, die gleich sind die <ph id="ph2">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> befinden sich die Eigenschaft und sind eine beliebige Stelle im Puffer.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BufferHeight">
          <source>If a set operation decreases the value of the <ph id="ph1">&lt;xref:System.Console.BufferHeight%2A&gt;</ph> property, the uppermost lines are removed.</source>
          <target state="translated">Wenn ein Set-Vorgang auf den Wert von verringert die <ph id="ph1">&lt;xref:System.Console.BufferHeight%2A&gt;</ph> -Eigenschaft, die obersten Zeilen entfernt werden.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BufferHeight">
          <source>For example, if the number of lines is reduced from 300 to 250, lines 0 through 49 are removed, and the existing lines 50 through 299 become lines 0 through 249.</source>
          <target state="translated">Z. B. Zeilen ein, wenn die Anzahl der Zeilen von 300 auf 250 reduziert wird und Zeilen 0 bis 49 werden entfernt: 50 bis 299 werden die vorhandenen Zeilen 0 bis 249.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BufferHeight">
          <source>This example demonstrates the <ph id="ph1">&lt;xref:System.Console.BufferHeight%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.BufferWidth%2A&gt;</ph> properties.</source>
          <target state="translated">Dieses Beispiel zeigt die <ph id="ph1">&lt;xref:System.Console.BufferHeight%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Console.BufferWidth%2A&gt;</ph> Eigenschaften.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BufferHeight">
          <source>The example reports the dimensions of an operating system window set to a buffer size of 300 rows and 85 columns.</source>
          <target state="translated">Im Beispiel wird gemeldet, die Dimensionen eines Betriebssystem-Fensters auf 300 Zeilen und Spalten 85 Puffergröße festgelegt wird.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="P:System.Console.BufferHeight">
          <source>The value in a set operation is less than or equal to zero.</source>
          <target state="translated">Der Wert in einem Set-Vorgang ist kleiner als oder gleich 0 (null).</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="P:System.Console.BufferHeight">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="P:System.Console.BufferHeight">
          <source>The value in a set operation is greater than or equal to <ph id="ph1">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</source>
          <target state="translated">Der Wert in einem Set-Vorgang ist größer als oder gleich <ph id="ph1">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="P:System.Console.BufferHeight">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="P:System.Console.BufferHeight">
          <source>The value in a set operation is less than <ph id="ph1">&lt;see cref="P:System.Console.WindowTop" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph>.</source>
          <target state="translated">Der Wert in einem Set-Vorgang ist kleiner als <ph id="ph1">&lt;see cref="P:System.Console.WindowTop" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="P:System.Console.BufferHeight">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">Der Benutzer verfügt nicht über die erforderliche Berechtigung, um diese Aktion auszuführen.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="P:System.Console.BufferHeight">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BufferHeight">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BufferHeight">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="P:System.Console.BufferWidth">
          <source>Gets or sets the width of the buffer area.</source>
          <target state="translated">Ruft die Breite des Pufferbereichs ab oder legt diese fest.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BufferWidth">
          <source>The current width, in columns, of the buffer area.</source>
          <target state="translated">Die aktuelle Breite des Pufferbereichs in Spalten.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BufferWidth">
          <source>If a set operation decreases the value of the <ph id="ph1">&lt;xref:System.Console.BufferWidth%2A&gt;</ph> property, the rightmost columns are removed.</source>
          <target state="translated">Wenn ein Set-Vorgang auf den Wert von verringert die <ph id="ph1">&lt;xref:System.Console.BufferWidth%2A&gt;</ph> -Eigenschaft, die äußersten rechten Spalten werden entfernt.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BufferWidth">
          <source>For example, if the number of columns is reduced from 80 to 60, columns 60 through 79 of each row are removed.</source>
          <target state="translated">Wenn die Anzahl der Spalten von 80 auf 60 reduziert wird, werden beispielsweise Spalten 60 und 79 jeder Zeile entfernt.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BufferWidth">
          <source>This example demonstrates the <ph id="ph1">&lt;xref:System.Console.BufferHeight%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.BufferWidth%2A&gt;</ph> properties.</source>
          <target state="translated">Dieses Beispiel zeigt die <ph id="ph1">&lt;xref:System.Console.BufferHeight%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Console.BufferWidth%2A&gt;</ph> Eigenschaften.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BufferWidth">
          <source>The example reports the dimensions of an operating system window set to a buffer size of 300 rows and 85 columns.</source>
          <target state="translated">Im Beispiel wird gemeldet, die Dimensionen eines Betriebssystem-Fensters auf 300 Zeilen und Spalten 85 Puffergröße festgelegt wird.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="P:System.Console.BufferWidth">
          <source>The value in a set operation is less than or equal to zero.</source>
          <target state="translated">Der Wert in einem Set-Vorgang ist kleiner als oder gleich 0 (null).</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="P:System.Console.BufferWidth">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="P:System.Console.BufferWidth">
          <source>The value in a set operation is greater than or equal to <ph id="ph1">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</source>
          <target state="translated">Der Wert in einem Set-Vorgang ist größer als oder gleich <ph id="ph1">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="P:System.Console.BufferWidth">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="P:System.Console.BufferWidth">
          <source>The value in a set operation is less than <ph id="ph1">&lt;see cref="P:System.Console.WindowLeft" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;see cref="P:System.Console.WindowWidth" /&gt;</ph>.</source>
          <target state="translated">Der Wert in einem Set-Vorgang ist kleiner als <ph id="ph1">&lt;see cref="P:System.Console.WindowLeft" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;see cref="P:System.Console.WindowWidth" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="P:System.Console.BufferWidth">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">Der Benutzer verfügt nicht über die erforderliche Berechtigung, um diese Aktion auszuführen.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="P:System.Console.BufferWidth">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BufferWidth">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BufferWidth">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="E:System.Console.CancelKeyPress">
          <source>Occurs when the <ph id="ph1">&lt;see cref="F:System.ConsoleModifiers.Control" /&gt;</ph> modifier key (Ctrl) and either the <ph id="ph2">&lt;see cref="F:System.ConsoleKey.C" /&gt;</ph> console key (C) or the Break key are pressed simultaneously (Ctrl+C or Ctrl+Break).</source>
          <target state="translated">Tritt ein, wenn die <ph id="ph1">&lt;see cref="F:System.ConsoleModifiers.Control" /&gt;</ph>-Modifizierertaste (STRG) und entweder die <ph id="ph2">&lt;see cref="F:System.ConsoleKey.C" /&gt;</ph>-Konsolentaste (c) oder die UNTBR-TASTE gleichzeitig gedrückt werden (STRG+C oder STRG+UNTBR).</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source>This event is used in conjunction with <ph id="ph1">&lt;xref:System.ConsoleCancelEventHandler?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.ConsoleCancelEventArgs?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Dieses Ereignis dient in Verbindung mit <ph id="ph1">&lt;xref:System.ConsoleCancelEventHandler?displayProperty=nameWithType&gt;</ph> und <ph id="ph2">&lt;xref:System.ConsoleCancelEventArgs?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source>The <ph id="ph1">&lt;xref:System.Console.CancelKeyPress&gt;</ph> event enables a console application to intercept the Ctrl+C signal so the event handler can decide whether to continue executing or terminate.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Console.CancelKeyPress&gt;</ph> -Ereignis können Sie eine Konsolenanwendung, die das STRG + C-Signal abfangen, damit der Ereignishandler können Sie entscheiden, ob fortgesetzt oder beendet.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter <bpt id="p1">[</bpt>behandeln und Auslösen von Ereignissen<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source>When the user presses either Ctrl+C or Ctrl+Break, the <ph id="ph1">&lt;xref:System.Console.CancelKeyPress&gt;</ph> event is fired and the application's <ph id="ph2">&lt;xref:System.ConsoleCancelEventHandler&gt;</ph> event handler is executed.</source>
          <target state="translated">Wenn der Benutzer STRG + C oder STRG + UNTBR, drückt die <ph id="ph1">&lt;xref:System.Console.CancelKeyPress&gt;</ph> Ereignis wird ausgelöst, und die Anwendung <ph id="ph2">&lt;xref:System.ConsoleCancelEventHandler&gt;</ph> -Ereignishandler ausgeführt wird.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source>The event handler is passed a <ph id="ph1">&lt;xref:System.ConsoleCancelEventArgs&gt;</ph> object that has two useful properties:</source>
          <target state="translated">Der Ereignishandler übergeben wird ein <ph id="ph1">&lt;xref:System.ConsoleCancelEventArgs&gt;</ph> Objekt, das zwei nützliche Eigenschaften verfügt:</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source><ph id="ph1">&lt;xref:System.ConsoleCancelEventArgs.SpecialKey%2A&gt;</ph>, which allows you to determine whether the handler was invoked as a result of the user pressing Ctrl+C (the property value is <ph id="ph2">&lt;xref:System.ConsoleSpecialKey.ControlC?displayProperty=nameWithType&gt;</ph>) or Ctrl+Break (the property value is <ph id="ph3">&lt;xref:System.ConsoleSpecialKey.ControlBreak?displayProperty=nameWithType&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ConsoleCancelEventArgs.SpecialKey%2A&gt;</ph>, womit Sie bestimmen, ob der Handler aufgerufen wurde, als Ergebnis der Benutzer durch Drücken von STRG + C (der Eigenschaftswert ist <ph id="ph2">&lt;xref:System.ConsoleSpecialKey.ControlC?displayProperty=nameWithType&gt;</ph>) oder STRG + UNTBR (der Eigenschaftswert ist <ph id="ph3">&lt;xref:System.ConsoleSpecialKey.ControlBreak?displayProperty=nameWithType&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source><ph id="ph1">&lt;xref:System.ConsoleCancelEventArgs.Cancel%2A&gt;</ph>, which allows you to determine how to your application should respond to the user pressing Ctrl+C or Ctrl+Break.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ConsoleCancelEventArgs.Cancel%2A&gt;</ph>, womit Sie bestimmen, wie für Ihre Anwendung sollte auf die Benutzer reagieren drücken STRG + C oder STRG + UNTBR.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source>By default, the <ph id="ph1">&lt;xref:System.ConsoleCancelEventArgs.Cancel%2A&gt;</ph> property is <ph id="ph2">`false`</ph>, which causes program execution to terminate when the event handler exits.</source>
          <target state="translated">Wird standardmäßig die <ph id="ph1">&lt;xref:System.ConsoleCancelEventArgs.Cancel%2A&gt;</ph> Eigenschaft ist <ph id="ph2">`false`</ph>, die Ursachen programmausführung zu beenden, wenn der Ereignishandler beendet wird.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source>Changing its property to <ph id="ph1">`true`</ph> specifies that the application should continue to execute.</source>
          <target state="translated">Ändern die Eigenschaft auf <ph id="ph1">`true`</ph> gibt an, dass die Anwendung weiterhin ausgeführt werden soll.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source>If your application has simple requirements, you can use the <ph id="ph1">&lt;xref:System.Console.TreatControlCAsInput%2A&gt;</ph> property instead of this event.</source>
          <target state="translated">Wenn Ihre Anwendung einfache Anforderungen hat, können Sie mithilfe der <ph id="ph1">&lt;xref:System.Console.TreatControlCAsInput%2A&gt;</ph> Eigenschaft anstelle dieses Ereignis.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source>By setting this property to <ph id="ph1">`false`</ph>, you can ensure that your application always exits if the user presses Ctrl+C.</source>
          <target state="translated">Durch Festlegen dieser Eigenschaft auf <ph id="ph1">`false`</ph>, können Sie sicherstellen, dass Ihre Anwendung immer beendet, wenn der Benutzer STRG + C drückt.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source>By setting it to <ph id="ph1">`true`</ph>, you can ensure that pressing Ctrl+C will not terminate the application.</source>
          <target state="translated">Durch Festlegen auf <ph id="ph1">`true`</ph>, können Sie sicherstellen, dass die Anwendung nicht durch Drücken von STRG + C beendet wird.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source>The event handler for this event is executed on a thread pool thread.</source>
          <target state="translated">Der Ereignishandler für dieses Ereignis wird über einen Threadpoolthread ausgeführt.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source>The following example demonstrates how the <ph id="ph1">&lt;xref:System.Console.CancelKeyPress&gt;</ph> event is used.</source>
          <target state="translated">Im folgende Beispiel wird veranschaulicht, wie die <ph id="ph1">&lt;xref:System.Console.CancelKeyPress&gt;</ph> Ereignis verwendet wird.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source>When you press Ctrl+C, the read operation is interrupted and the <ph id="ph1">`myHandler`</ph> event handler is invoked.</source>
          <target state="translated">Der Lesevorgang wird unterbrochen, wenn Sie STRG + C drücken, und die <ph id="ph1">`myHandler`</ph> -Ereignishandler wird aufgerufen.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source>Upon entry to the event handler, the <ph id="ph1">&lt;xref:System.ConsoleCancelEventArgs.Cancel%2A?displayProperty=nameWithType&gt;</ph> property is <ph id="ph2">`false`</ph>, which means that the current process will terminate when the event handler terminates.</source>
          <target state="translated">Bei der Eingabe an den Ereignishandler der <ph id="ph1">&lt;xref:System.ConsoleCancelEventArgs.Cancel%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft ist <ph id="ph2">`false`</ph>, d. h., die der aktuelle Vorgang beendet wird, wenn der Ereignishandler beendet wird.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source>However, the event handler sets the <ph id="ph1">&lt;xref:System.ConsoleCancelEventArgs.Cancel%2A?displayProperty=nameWithType&gt;</ph> property to <ph id="ph2">`true`</ph>, which means that the process will not terminate and the read operation will resume.</source>
          <target state="translated">Der Ereignishandler wird jedoch die <ph id="ph1">&lt;xref:System.ConsoleCancelEventArgs.Cancel%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft <ph id="ph2">`true`</ph>, welche bedeutet, dass der Prozess nicht beendet, und der Lesevorgang wird fortgesetzt.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="P:System.Console.CapsLock">
          <source>Gets a value indicating whether the CAPS LOCK keyboard toggle is turned on or turned off.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob die FESTSTELLTASTE-Tastaturumschalttaste aktiviert oder deaktiviert ist.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CapsLock">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if CAPS LOCK is turned on; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if CAPS LOCK is turned off.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die FESTSTELLTASTE aktiviert ist, <ph id="ph2">&lt;see langword="false" /&gt;</ph>, wenn die FESTSTELLTASTE deaktiviert ist.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Console.Clear">
          <source>Clears the console buffer and corresponding console window of display information.</source>
          <target state="translated">Löscht die Anzeigeinformationen aus dem Konsolenpuffer und dem entsprechenden Konsolenfenster.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Clear">
          <source>Using the <ph id="ph1">&lt;xref:System.Console.Clear%2A&gt;</ph> method is equivalent invoking the MS-DOS <ph id="ph2">`cls`</ph> command in the command prompt window.</source>
          <target state="translated">Mithilfe der <ph id="ph1">&lt;xref:System.Console.Clear%2A&gt;</ph> Methode entspricht dem Aufrufen der MS-DOS- <ph id="ph2">`cls`</ph> Befehl im Eingabeaufforderungsfenster.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Clear">
          <source>When the <ph id="ph1">&lt;xref:System.Console.Clear%2A&gt;</ph> method is called, the cursor automatically scrolls to the top-left corner of the window and the contents of the screen buffer are set to blanks using the current foreground background colors.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Console.Clear%2A&gt;</ph> Methode wird aufgerufen, der Cursor automatisch auf der linken oberen Ecke des Fensters und den Inhalt des Bildschirmpuffers in der aktuellen Vordergrund-und Hintergrundfarben mit Leerzeichen festgelegt werden.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Clear">
          <source>Attempting to call the <ph id="ph1">&lt;xref:System.Console.Clear%2A&gt;</ph> method when a console application's output is redirected to a file throws a <ph id="ph2">&lt;xref:System.IO.IOException&gt;</ph>.</source>
          <target state="translated">Beim Aufrufen der <ph id="ph1">&lt;xref:System.Console.Clear%2A&gt;</ph> löst der Methode, wenn Sie eine Konsolenanwendung Ausgabe in eine Datei umgeleitet wird eine <ph id="ph2">&lt;xref:System.IO.IOException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Clear">
          <source>To prevent this, always wrap a call to the <ph id="ph1">&lt;xref:System.Console.Clear%2A&gt;</ph> method in a <ph id="ph2">`try`</ph>…<ph id="ph3">`catch`</ph></source>
          <target state="translated">Um dies zu verhindern, umschließen Sie immer einen Aufruf der <ph id="ph1">&lt;xref:System.Console.Clear%2A&gt;</ph> Methode in einer <ph id="ph2">`try`</ph>...<ph id="ph3">`catch`</ph></target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Clear">
          <source>block.</source>
          <target state="translated">Block.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Clear">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Console.Clear%2A&gt;</ph> method to clear the console before it executes a loop, prompts the user to select a foreground and background color and to enter a string to display.</source>
          <target state="translated">Im folgenden Beispiel wird die <ph id="ph1">&lt;xref:System.Console.Clear%2A&gt;</ph> Methode, um die Konsole zu löschen, bevor es eine Schleife führt fordert den Benutzer, um eine Farbe Vordergrund- und Hintergrundfarben auszuwählen und eine anzuzeigende Zeichenfolge eingeben.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Clear">
          <source>If the user chooses not to exit the program, the console's original foreground and background colors are restored and the <ph id="ph1">&lt;xref:System.Console.Clear%2A&gt;</ph> method is called again before re-executing the loop.</source>
          <target state="translated">Die Konsole ursprünglichen Vordergrund- und Hintergrundfarben werden wiederhergestellt, wenn der Benutzer entscheidet sich nicht um das Programm zu beenden, und die <ph id="ph1">&lt;xref:System.Console.Clear%2A&gt;</ph> Methode aufgerufen wird, erneut, bevor die Schleife erneut ausgeführt.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Clear">
          <source>The example relies on a <ph id="ph1">`GetKeyPress`</ph> method to validate the user's selection of a foreground and background color.</source>
          <target state="translated">Das Beispiel basiert auf einer <ph id="ph1">`GetKeyPress`</ph> Methode, um die Auswahl einer Farbe Vordergrund- und Hintergrundfarben des Benutzers zu überprüfen.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Clear">
          <source>This example demonstrates the <ph id="ph1">&lt;xref:System.Console.CursorLeft%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.CursorTop%2A&gt;</ph> properties, and the <ph id="ph3">&lt;xref:System.Console.SetCursorPosition%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Console.Clear%2A&gt;</ph> methods.</source>
          <target state="translated">Dieses Beispiel zeigt die <ph id="ph1">&lt;xref:System.Console.CursorLeft%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Console.CursorTop%2A&gt;</ph> Eigenschaften, und die <ph id="ph3">&lt;xref:System.Console.SetCursorPosition%2A&gt;</ph> und <ph id="ph4">&lt;xref:System.Console.Clear%2A&gt;</ph> Methoden.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Clear">
          <source>The example positions the cursor, which determines where the next write will occur, to draw a 5 character by 5 character rectangle using a combination of "+", "&amp;#124;", and "-" strings.</source>
          <target state="translated">Im Beispiel wird der Cursor, der bestimmt, wo der nächste Schreibvorgang erfolgt ein 5 Zeichen durch eine Kombination von 5 Zeichen-Rechteck gezeichnet werden soll, "+", "&amp;#124;", und "-" Zeichenfolgen.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Clear">
          <source>Note that the rectangle could be drawn with fewer steps using a combination of other strings.</source>
          <target state="translated">Beachten Sie, dass das Rechteck mit weniger Schritte, die mit einer Kombination aus anderen Zeichenfolgen werden konnte.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Console.Clear">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="P:System.Console.CursorLeft">
          <source>Gets or sets the column position of the cursor within the buffer area.</source>
          <target state="translated">Ruft die Spaltenposition des Cursors im Pufferbereich ab oder legt diese fest.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorLeft">
          <source>The current position, in columns, of the cursor.</source>
          <target state="translated">Die aktuelle Position des Cursors in Spalten.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorLeft">
          <source>This example demonstrates the <ph id="ph1">&lt;xref:System.Console.CursorLeft%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.CursorTop%2A&gt;</ph> properties, and the <ph id="ph3">&lt;xref:System.Console.SetCursorPosition%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Console.Clear%2A&gt;</ph> methods.</source>
          <target state="translated">Dieses Beispiel zeigt die <ph id="ph1">&lt;xref:System.Console.CursorLeft%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Console.CursorTop%2A&gt;</ph> Eigenschaften, und die <ph id="ph3">&lt;xref:System.Console.SetCursorPosition%2A&gt;</ph> und <ph id="ph4">&lt;xref:System.Console.Clear%2A&gt;</ph> Methoden.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorLeft">
          <source>The example positions the cursor, which determines where the next write will occur, to draw a 5 character by 5 character rectangle using a combination of "+", "&amp;#124;", and "-" strings.</source>
          <target state="translated">Im Beispiel wird der Cursor, der bestimmt, wo der nächste Schreibvorgang erfolgt ein 5 Zeichen durch eine Kombination von 5 Zeichen-Rechteck gezeichnet werden soll, "+", "&amp;#124;", und "-" Zeichenfolgen.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorLeft">
          <source>Note that the rectangle could be drawn with fewer steps using a combination of other strings.</source>
          <target state="translated">Beachten Sie, dass das Rechteck mit weniger Schritte, die mit einer Kombination aus anderen Zeichenfolgen werden konnte.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="P:System.Console.CursorLeft">
          <source>The value in a set operation is less than zero.</source>
          <target state="translated">Der Wert in einem Set-Vorgang ist kleiner als 0 (null).</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="P:System.Console.CursorLeft">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="P:System.Console.CursorLeft">
          <source>The value in a set operation is greater than or equal to <ph id="ph1">&lt;see cref="P:System.Console.BufferWidth" /&gt;</ph>.</source>
          <target state="translated">Der Wert in einem Set-Vorgang ist größer als oder gleich <ph id="ph1">&lt;see cref="P:System.Console.BufferWidth" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="P:System.Console.CursorLeft">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">Der Benutzer verfügt nicht über die erforderliche Berechtigung, um diese Aktion auszuführen.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="P:System.Console.CursorLeft">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorLeft">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorLeft">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="P:System.Console.CursorSize">
          <source>Gets or sets the height of the cursor within a character cell.</source>
          <target state="translated">Ruft die Höhe des Cursors innerhalb einer Zeichenzelle ab oder legt diese fest.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorSize">
          <source>The size of the cursor expressed as a percentage of the height of a character cell.</source>
          <target state="translated">Die Größe des Cursors in Prozent der Höhe einer Zeichenzelle.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorSize">
          <source>The property value ranges from 1 to 100.</source>
          <target state="translated">Der Eigenschaftswert liegt zwischen 1 und 100.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorSize">
          <source>The cursor appearance varies, ranging from a horizontal line at the bottom of the cell when the property value is 1, to completely filling the cell when the property value is 100.</source>
          <target state="translated">Der Cursor kann unterschiedlich dargestellt werden, von einer horizontalen Linie am unteren Rand der Zelle im Bereich, wenn der Eigenschaftswert 1 ist, um die Zelle vollständig ausfüllen, wenn der Wert der Eigenschaft "100".</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorSize">
          <source>This example demonstrates the <ph id="ph1">&lt;xref:System.Console.CursorSize%2A&gt;</ph> property.</source>
          <target state="translated">Dieses Beispiel zeigt die <ph id="ph1">&lt;xref:System.Console.CursorSize%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorSize">
          <source>The example increases the size of the cursor each time any console key is pressed, then restores the cursor to its original size before terminating.</source>
          <target state="translated">Im Beispiel wird die Größe des Cursors jedes Mal alle Konsolentaste gedrückt wird, und stellt den Cursor auf seine ursprüngliche Größe vor der Beendigung erhöht.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="P:System.Console.CursorSize">
          <source>The value specified in a set operation is less than 1 or greater than 100.</source>
          <target state="translated">Der in einem Set-Vorgang angegebene Wert ist kleiner als 1 oder größer als 100.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="P:System.Console.CursorSize">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">Der Benutzer verfügt nicht über die erforderliche Berechtigung, um diese Aktion auszuführen.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="P:System.Console.CursorSize">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorSize">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorSize">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="P:System.Console.CursorTop">
          <source>Gets or sets the row position of the cursor within the buffer area.</source>
          <target state="translated">Ruft die Zeilenposition des Cursors im Pufferbereich ab oder legt diese fest.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorTop">
          <source>The current position, in rows, of the cursor.</source>
          <target state="translated">Die aktuelle Position des Cursors in Zeilen.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorTop">
          <source>This example demonstrates the <ph id="ph1">&lt;xref:System.Console.CursorLeft%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.CursorTop%2A&gt;</ph> properties, and the <ph id="ph3">&lt;xref:System.Console.SetCursorPosition%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Console.Clear%2A&gt;</ph> methods.</source>
          <target state="translated">Dieses Beispiel zeigt die <ph id="ph1">&lt;xref:System.Console.CursorLeft%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Console.CursorTop%2A&gt;</ph> Eigenschaften, und die <ph id="ph3">&lt;xref:System.Console.SetCursorPosition%2A&gt;</ph> und <ph id="ph4">&lt;xref:System.Console.Clear%2A&gt;</ph> Methoden.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorTop">
          <source>The example positions the cursor, which determines where the next write will occur, to draw a 5 character by 5 character rectangle using a combination of "+", "&amp;#124;", and "-" strings.</source>
          <target state="translated">Im Beispiel wird der Cursor, der bestimmt, wo der nächste Schreibvorgang erfolgt ein 5 Zeichen durch eine Kombination von 5 Zeichen-Rechteck gezeichnet werden soll, "+", "&amp;#124;", und "-" Zeichenfolgen.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorTop">
          <source>Note that the rectangle could be drawn with fewer steps using a combination of other strings.</source>
          <target state="translated">Beachten Sie, dass das Rechteck mit weniger Schritte, die mit einer Kombination aus anderen Zeichenfolgen werden konnte.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="P:System.Console.CursorTop">
          <source>The value in a set operation is less than zero.</source>
          <target state="translated">Der Wert in einem Set-Vorgang ist kleiner als 0 (null).</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="P:System.Console.CursorTop">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="P:System.Console.CursorTop">
          <source>The value in a set operation is greater than or equal to <ph id="ph1">&lt;see cref="P:System.Console.BufferHeight" /&gt;</ph>.</source>
          <target state="translated">Der Wert in einem Set-Vorgang ist größer als oder gleich <ph id="ph1">&lt;see cref="P:System.Console.BufferHeight" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="P:System.Console.CursorTop">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">Der Benutzer verfügt nicht über die erforderliche Berechtigung, um diese Aktion auszuführen.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="P:System.Console.CursorTop">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorTop">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorTop">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="P:System.Console.CursorVisible">
          <source>Gets or sets a value indicating whether the cursor is visible.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob der Cursor sichtbar ist, oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorVisible">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the cursor is visible; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn der Cursor sichtbar ist, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorVisible">
          <source>This example demonstrates the <ph id="ph1">&lt;xref:System.Console.CursorVisible%2A&gt;</ph> property.</source>
          <target state="translated">Dieses Beispiel zeigt die <ph id="ph1">&lt;xref:System.Console.CursorVisible%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorVisible">
          <source>The example makes the cursor visible if the first column of input is a '+' character or invisible if the input is a '-' character.</source>
          <target state="translated">Im Beispiel wird den Cursor sichtbar, wenn die erste Spalte der Eingabe ein "+"-Zeichen ist oder nicht sichtbar, wenn die Eingabe ist ein "-" Zeichen.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="P:System.Console.CursorVisible">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">Der Benutzer verfügt nicht über die erforderliche Berechtigung, um diese Aktion auszuführen.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="P:System.Console.CursorVisible">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorVisible">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorVisible">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="P:System.Console.Error">
          <source>Gets the standard error output stream.</source>
          <target state="translated">Ruft den Standard-Fehlerausgabestream ab.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Error">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> that represents the standard error output stream.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>, der den Standard-Fehlerausgabestream darstellt.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Error">
          <source>This standard error stream is set to the console by default.</source>
          <target state="translated">Diese Standardfehlerstream wird an die Konsole standardmäßig festgelegt.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Error">
          <source>It can be set to another stream with the <ph id="ph1">&lt;xref:System.Console.SetError%2A&gt;</ph> method.</source>
          <target state="translated">Es kann festgelegt werden, in einen anderen Stream mit der <ph id="ph1">&lt;xref:System.Console.SetError%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Error">
          <source>After the standard error stream is redirected, it can be reacquired by calling the <ph id="ph1">&lt;xref:System.Console.OpenStandardError%2A&gt;</ph> method.</source>
          <target state="translated">Nach der Standardfehlerstream umgeleitet wird, kann es durch den Aufruf Synchronisierungsdomäne die <ph id="ph1">&lt;xref:System.Console.OpenStandardError%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Error">
          <source>In console applications whose informational output is often redirected to a file, the standard error stream available through the <ph id="ph1">&lt;xref:System.Console.Error%2A&gt;</ph> property can be used to display information to the console even if output is redirected.</source>
          <target state="translated">Der Standardfehler in konsolenanwendungen, deren Informationsausgabe häufig in eine Datei umgeleitet wird, Streamen über die <ph id="ph1">&lt;xref:System.Console.Error%2A&gt;</ph> Eigenschaft kann verwendet werden, um die Informationen in der Konsole angezeigt, auch wenn die Ausgabe umgeleitet wird.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Error">
          <source>The following example displays product tables for 10 numbers at a time starting with 1.</source>
          <target state="translated">Das folgende Beispiel zeigt Produkttabellen für 10 Zahlen ein, jeweils beginnend mit 1.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Error">
          <source>After every set of 10 numbers, the <ph id="ph1">&lt;xref:System.Console.Error%2A&gt;</ph> property is used to ask the user whether to display the next set.</source>
          <target state="translated">Nach jedem Satz von 10 Zahlen ein die <ph id="ph1">&lt;xref:System.Console.Error%2A&gt;</ph> Eigenschaft wird verwendet, um den Benutzer auffordern, ob den nächsten Satz angezeigt.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Error">
          <source>If the standard output is redirected to a file, the user is still asked whether the routine should generate the next set of products.</source>
          <target state="translated">Wenn die Standardausgabe in eine Datei umgeleitet wird, wird der Benutzer weiterhin gebeten, ob die Routine den nächsten Satz von Produkten generiert werden sollen.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Error">
          <source>The following example is a command line utility named ExpandTabs that replaces tab characters in a text file with four spaces, the value defined by the <ph id="ph1">`tabSize`</ph> variable.</source>
          <target state="translated">Das folgende Beispiel ist ein Befehlszeilenprogramm, mit dem Namen ExpandTabs, das Tabstoppzeichen in einer Textdatei mit vier Leerzeichen, den Wert ersetzt den <ph id="ph1">`tabSize`</ph> Variable.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Error">
          <source>It redirects the standard input and output streams to files, but uses the <ph id="ph1">&lt;xref:System.Console.Error%2A&gt;</ph> property to write the standard error stream to the console.</source>
          <target state="translated">Er leitet die Standardeingabe und Ausgabe per Streaming auf Dateien, verwendet jedoch die <ph id="ph1">&lt;xref:System.Console.Error%2A&gt;</ph> Eigenschaft, um den Standardfehlerstream in die Konsole geschrieben.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Error">
          <source>It can be launched from the command line by supplying the name of the file that contains tab characters and the name of the output file.</source>
          <target state="translated">Es kann über die Befehlszeile durch Angabe der Name der Datei, die Registerkarte "-Zeichen enthält und den Namen der Ausgabedatei gestartet werden.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Error">
          <source>The following example is a simple text file viewer that displays the contents of one or more text files to the console.</source>
          <target state="translated">Im folgende Beispiel wird ein einfacher Text-Datei-Viewer, der den Inhalt von einem oder mehreren Textdateien auf der Konsole ausgibt.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Error">
          <source>If there are no command line arguments, or if any files passed as command line arguments do not exist, the example calls the <ph id="ph1">&lt;xref:System.Console.SetError%2A&gt;</ph> method to redirect error information to a file, calls the <ph id="ph2">&lt;xref:System.Console.OpenStandardError%2A&gt;</ph> method in the process of reacquiring the standard error stream, and indicates that error information was written to a file.</source>
          <target state="translated">Wenn keine Befehlszeilenargumente vorhanden sind oder wenn keine Dateien als Befehlszeilenargumente übergeben nicht vorhanden sind, wird im Beispiel wird die <ph id="ph1">&lt;xref:System.Console.SetError%2A&gt;</ph> Methodenaufrufe Fehlerinformationen in eine Datei umleiten der <ph id="ph2">&lt;xref:System.Console.OpenStandardError%2A&gt;</ph> Methode beim erneuten der Standardfehler Stream und gibt an, dass die Fehlerinformationen in eine Datei geschrieben wurde.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Error">
          <source>Note that the <ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType&gt;</ph> property is set to <ph id="ph2">`true`</ph> before reacquiring the error stream.</source>
          <target state="translated">Beachten Sie, dass die <ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType&gt;</ph> -Eigenschaftensatz auf <ph id="ph2">`true`</ph> vor dem erneuten fehlerdatenstroms der.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Error">
          <source>This ensures that output will be sent to the console immediately rather than buffered.</source>
          <target state="translated">Dadurch wird sichergestellt, dass die Ausgabe wird sofort an die Konsole gesendet und nicht als gepuffert.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="P:System.Console.ForegroundColor">
          <source>Gets or sets the foreground color of the console.</source>
          <target state="translated">Ruft die Vordergrundfarbe der Konsole ab oder legt diese fest.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.ForegroundColor">
          <source>A <ph id="ph1">&lt;see cref="T:System.ConsoleColor" /&gt;</ph> that specifies the foreground color of the console; that is, the color of each character that is displayed.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.ConsoleColor" /&gt;</ph>, die die Vordergrundfarbe der Konsole angibt, d. h. die Farbe, in der alle Zeichen angezeigt werden.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.ForegroundColor">
          <source>The default is gray.</source>
          <target state="translated">Die Standardeinstellung ist grau.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.ForegroundColor">
          <source>A get operation for a Windows-based application, in which a console does not exist, returns <ph id="ph1">&lt;xref:System.ConsoleColor.Gray&gt;</ph>.</source>
          <target state="translated">Gibt ein Get-Vorgang für eine Windows-basierte Anwendung, in dem eine Konsole nicht vorhanden ist, <ph id="ph1">&lt;xref:System.ConsoleColor.Gray&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.ForegroundColor">
          <source>The following example checks whether the console's background color is black and, if it is, it changes the background color to red and the foreground color to black.</source>
          <target state="translated">Im folgenden Beispiel wird überprüft, ob die Hintergrundfarbe der Konsole ist schwarz und, wenn dies der Fall, wird die Farbe des Hintergrunds auf Rot und die Vordergrundfarbe auf Schwarz geändert.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.ForegroundColor">
          <source>The following example saves the values of the <ph id="ph1">&lt;xref:System.ConsoleColor&gt;</ph> enumeration to an array and stores the current values of the <ph id="ph2">&lt;xref:System.Console.BackgroundColor%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Console.ForegroundColor%2A&gt;</ph> properties to variables.</source>
          <target state="translated">Im folgende Beispiel speichert die Werte der <ph id="ph1">&lt;xref:System.ConsoleColor&gt;</ph> Enumeration in ein Array und speichert die aktuellen Werte von der <ph id="ph2">&lt;xref:System.Console.BackgroundColor%2A&gt;</ph> und <ph id="ph3">&lt;xref:System.Console.ForegroundColor%2A&gt;</ph> Eigenschaften an Variablen.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.ForegroundColor">
          <source>It then changes the foreground color to each color in the <ph id="ph1">&lt;xref:System.ConsoleColor&gt;</ph> enumeration except to the color that matches the current background, and it changes the background color to each color in the <ph id="ph2">&lt;xref:System.ConsoleColor&gt;</ph> enumeration except to the color that matches the current foreground.</source>
          <target state="translated">Anschließend wird die Vordergrundfarbe für jede Farbe in der <ph id="ph1">&lt;xref:System.ConsoleColor&gt;</ph> Enumeration, mit der Ausnahme, die Farbe, die mit den aktuellen Hintergrund übereinstimmt, und die Farbe des Hintergrunds auf jede Farbe in ändert der <ph id="ph2">&lt;xref:System.ConsoleColor&gt;</ph> Enumeration, außer auf die Farbe, entspricht die aktuelle Vordergrundfarbe.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.ForegroundColor">
          <source>(If the foreground color is the same as the background color, the text isn't visible.) Finally, it calls the <ph id="ph1">&lt;xref:System.Console.ResetColor%2A&gt;</ph> method to restore the original console colors.</source>
          <target state="translated">(Wenn die Vordergrundfarbe für die Farbe des Hintergrunds identisch ist, der Text nicht sichtbar ist.) Zum Schluss ruft es die <ph id="ph1">&lt;xref:System.Console.ResetColor%2A&gt;</ph> Verfahren zum Wiederherstellen der ursprünglichen konsolenfarben.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="P:System.Console.ForegroundColor">
          <source>The color specified in a set operation is not a valid member of <ph id="ph1">&lt;see cref="T:System.ConsoleColor" /&gt;</ph>.</source>
          <target state="translated">Die in einem Set-Vorgang angegebene Farbe ist kein gültiges Member von <ph id="ph1">&lt;see cref="T:System.ConsoleColor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="P:System.Console.ForegroundColor">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">Der Benutzer verfügt nicht über die erforderliche Berechtigung, um diese Aktion auszuführen.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="P:System.Console.ForegroundColor">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.ForegroundColor">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.ForegroundColor">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="P:System.Console.In">
          <source>Gets the standard input stream.</source>
          <target state="translated">Ruft den Standardeingabestream ab.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.In">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> that represents the standard input stream.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>, der den Standardeingabestream darstellt.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.In">
          <source>This property is set to the standard input stream by default.</source>
          <target state="translated">Diese Eigenschaft ist standardmäßig auf den Standardeingabestream festgelegt.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.In">
          <source>This property can be set to another stream with the <ph id="ph1">&lt;xref:System.Console.SetIn%2A&gt;</ph> method.</source>
          <target state="translated">Diese Eigenschaft kann festgelegt werden, in einen anderen Stream mit der <ph id="ph1">&lt;xref:System.Console.SetIn%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.In">
          <source>Read operations on the standard input stream execute synchronously.</source>
          <target state="translated">Lesevorgänge auf dem Standardeingabestream synchron ausgeführt.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.In">
          <source>That is, they block until the specified read operation has completed.</source>
          <target state="translated">D. h., blockieren sie bis der angegebene Lesevorgang abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.In">
          <source>This is true even if an asynchronous method, such as <ph id="ph1">&lt;xref:System.IO.TextReader.ReadLineAsync%2A&gt;</ph>, is called on the <ph id="ph2">&lt;xref:System.IO.TextReader&gt;</ph> object returned by the <ph id="ph3">&lt;xref:System.Console.In%2A&gt;</ph> property.</source>
          <target state="translated">Dies gilt auch, wenn eine asynchrone Methode, wie z. B. <ph id="ph1">&lt;xref:System.IO.TextReader.ReadLineAsync%2A&gt;</ph>, aufgerufen wird, auf die <ph id="ph2">&lt;xref:System.IO.TextReader&gt;</ph> zurückgegebenes Objekt die <ph id="ph3">&lt;xref:System.Console.In%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.In">
          <source>The following sample illustrates the use of the <ph id="ph1">`In`</ph> property.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die Verwendung der <ph id="ph1">`In`</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="P:System.Console.InputEncoding">
          <source>Gets or sets the encoding the console uses to read input.</source>
          <target state="translated">Ruft die Codierung ab, die die Konsole verwendet, um die Eingabe zu lesen, oder legt diese fest.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.InputEncoding">
          <source>The encoding used to read console input.</source>
          <target state="translated">Die Codierung, die verwendet wird, um die Konsoleneingabe zu lesen.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.InputEncoding">
          <source>The console uses the input encoding to translate keyboard input into a corresponding character.</source>
          <target state="translated">Die Konsole verwendet, die Eingabe, die Codierung, die um Tastatureingaben in eine entsprechende Zeichen zu übersetzen.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.InputEncoding">
          <source>The input encoding incorporates a code page that maps 256 keyboard character codes to individual characters.</source>
          <target state="translated">Eingabecodierung umfasst eine Codepage, die einzelne Zeichen 256 Zeichen bestehenden Codes für Tastatur zuordnet.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.InputEncoding">
          <source>Different code pages include different special characters, typically customized for a language or a group of languages.</source>
          <target state="translated">Zu verschiedenen Codepages gehören verschiedene spezielle Zeichen, die normalerweise für eine Sprache oder eine Gruppe von Sprachen angepasst sind.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.InputEncoding">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, a property get operation may return a cached value instead of the console's current input encoding.</source>
          <target state="translated">Beginnend mit der <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, ein Abrufvorgang Eigenschaft möglicherweise einen zwischengespeicherten Wert anstelle der Konsole aktuellen eingabecodierung zurück.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.InputEncoding">
          <source>This can occur if the value of the <ph id="ph1">&lt;xref:System.Console.InputEncoding%2A&gt;</ph> property is modified by some means other than an assignment to the <ph id="ph2">&lt;xref:System.Console.InputEncoding%2A&gt;</ph> property, such as calling the Windows <ph id="ph3">`SetConsoleCP`</ph> function or using the <ph id="ph4">`chcp`</ph> command from a PowerShell script.</source>
          <target state="translated">Dies kann auftreten, wenn der Wert des der <ph id="ph1">&lt;xref:System.Console.InputEncoding%2A&gt;</ph> Eigenschaft andere Zuweisung zu Weise geändert wird die <ph id="ph2">&lt;xref:System.Console.InputEncoding%2A&gt;</ph> Eigenschaft, z. B. das Aufrufen der Windows <ph id="ph3">`SetConsoleCP`</ph> Funktion oder mithilfe der <ph id="ph4">`chcp`</ph> Befehl von einem Powershellskript.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="P:System.Console.InputEncoding">
          <source>The property value in a set operation is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der Eigenschaftswert in einer Set-Operation ist <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="P:System.Console.InputEncoding">
          <source>An error occurred during the execution of this operation.</source>
          <target state="translated">Während der Ausführung dieses Vorgangs ist ein Fehler aufgetreten.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="P:System.Console.InputEncoding">
          <source>Your application does not have permission to perform this operation.</source>
          <target state="translated">Ihre Anwendung verfügt nicht über die erforderliche Berechtigung zum Ausführen dieses Vorgangs.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.InputEncoding">
          <source>for reading and writing to top-level windows and subwindows.</source>
          <target state="translated">zum Lesen und Schreiben in das Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.InputEncoding">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="P:System.Console.IsErrorRedirected">
          <source>Gets a value that indicates whether the error output stream has been redirected from the standard error stream.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob der Fehlerausgabedatenstrom von dem Standardfehlerstream umgeleitet wurde.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.IsErrorRedirected">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if error output is redirected; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die Fehlerausgabe umgeleitet wird; andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="P:System.Console.IsInputRedirected">
          <source>Gets a value that indicates whether input has been redirected from the standard input stream.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob die Eingabe aus dem Standardeingabestream umgeleitet wurde.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.IsInputRedirected">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if input is redirected; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die Eingabe umgeleitet wird, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="P:System.Console.IsOutputRedirected">
          <source>Gets a value that indicates whether output has been redirected from the standard output stream.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob die Ausgabe aus dem Standardausgabestream umgeleitet wurde.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.IsOutputRedirected">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if output is redirected; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die Ausgabe umgeleitet wird, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="P:System.Console.KeyAvailable">
          <source>Gets a value indicating whether a key press is available in the input stream.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob ein Tastendruck im Eingabestream vorhanden ist.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.KeyAvailable">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a key press is available; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn ein Tastendruck vorhanden ist, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.KeyAvailable">
          <source>The property value is returned immediately; that is, the <ph id="ph1">&lt;xref:System.Console.KeyAvailable%2A&gt;</ph> property does not block input until a key press is available.</source>
          <target state="translated">Der Eigenschaftswert wird sofort zurückgegeben; d. h. die <ph id="ph1">&lt;xref:System.Console.KeyAvailable%2A&gt;</ph> Eigenschaft wird die Eingabe nicht blockiert, bis ein Tastendruck vorhanden ist.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.KeyAvailable">
          <source>Use the <ph id="ph1">&lt;xref:System.Console.KeyAvailable%2A&gt;</ph> property in conjunction with only the <ph id="ph2">&lt;xref:System.Console.ReadKey%2A&gt;</ph> method, not the <ph id="ph3">&lt;xref:System.Console.Read%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Console.ReadLine%2A&gt;</ph> methods.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:System.Console.KeyAvailable%2A&gt;</ph> Eigenschaft nur in Verbindung mit der <ph id="ph2">&lt;xref:System.Console.ReadKey%2A&gt;</ph> -Methode, nicht die <ph id="ph3">&lt;xref:System.Console.Read%2A&gt;</ph> oder <ph id="ph4">&lt;xref:System.Console.ReadLine%2A&gt;</ph> Methoden.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.KeyAvailable">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Console.KeyAvailable%2A&gt;</ph> property to create a loop that runs until a key is pressed.</source>
          <target state="translated">Im folgenden Beispiel wird veranschaulicht, wie die <ph id="ph1">&lt;xref:System.Console.KeyAvailable%2A&gt;</ph> Eigenschaft zum Erstellen einer Schleife, die ausgeführt wird, bis eine Taste gedrückt wird.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="P:System.Console.KeyAvailable">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="P:System.Console.KeyAvailable">
          <source>Standard input is redirected to a file instead of the keyboard.</source>
          <target state="translated">Standardeingabe wird nicht an die Tastatur gesendet, sondern in eine Datei umgeleitet.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="P:System.Console.LargestWindowHeight">
          <source>Gets the largest possible number of console window rows, based on the current font and screen resolution.</source>
          <target state="translated">Ruft die entsprechend der aktuellen Schriftart und Bildschirmauflösung größtmögliche Anzahl von Konsolenfensterzeilen ab.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.LargestWindowHeight">
          <source>The height of the largest possible console window measured in rows.</source>
          <target state="translated">Die Höhe des größtmöglichen Konsolenfensters in Zeilen.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="P:System.Console.LargestWindowWidth">
          <source>Gets the largest possible number of console window columns, based on the current font and screen resolution.</source>
          <target state="translated">Ruft die entsprechend der aktuellen Schriftart und Bildschirmauflösung größtmögliche Anzahl von Konsolenfensterspalten ab.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.LargestWindowWidth">
          <source>The width of the largest possible console window measured in columns.</source>
          <target state="translated">Die Breite des größtmöglichen Konsolenfensters in Spalten.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="T:System.Console">
          <source>Copies a specified source area of the screen buffer to a specified destination area.</source>
          <target state="translated">Kopiert einen angegebenen Quellbereich des Bildschirmpuffers in einen angegebenen Zielbereich.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The leftmost column of the source area.</source>
          <target state="translated">Die am weitesten links stehende Spalte des Quellbereichs.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The topmost row of the source area.</source>
          <target state="translated">Die oberste Zeile des Quellbereichs.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The number of columns in the source area.</source>
          <target state="translated">Die Anzahl der Spalten im Quellbereich.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The number of rows in the source area.</source>
          <target state="translated">Die Anzahl der Zeilen im Quellbereich.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The leftmost column of the destination area.</source>
          <target state="translated">Die am weitesten links stehende Spalte des Zielbereichs.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The topmost row of the destination area.</source>
          <target state="translated">Die oberste Zeile des Zielbereichs.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Copies a specified source area of the screen buffer to a specified destination area.</source>
          <target state="translated">Kopiert einen angegebenen Quellbereich des Bildschirmpuffers in einen angegebenen Zielbereich.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>If the destination and source parameters specify a position located outside the boundaries of the current screen buffer, only the portion of the source area that fits within the destination area is copied.</source>
          <target state="translated">Wenn die Ziel- und Parameter eine Position außerhalb der Grenzen des aktuellen Bildschirmpuffer angeben, wird nur der Teil des Quellbereichs, die in dem Zielbereich passt kopiert.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>That is, the source area is clipped to fit the current screen buffer.</source>
          <target state="translated">D. h. wird Quellbereichs abgeschnitten, damit Sie den aktuellen Bildschirmpuffer passt.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Console.MoveBufferArea%2A&gt;</ph> method copies the source area to the destination area.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Console.MoveBufferArea%2A&gt;</ph> Methode des Quellbereichs in den Zielbereich kopiert.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>If the destination area does not intersect the source area, the source area is filled with blanks using the current foreground and background colors.</source>
          <target state="translated">Wenn sich der Zielbereich Quellbereichs nicht überschneiden, ist der Quellbereich mit Leerzeichen mit der aktuellen Vordergrund- und Hintergrundfarben gefüllt.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Otherwise, the intersected portion of the source area is not filled.</source>
          <target state="translated">Andernfalls ist der Teil der Schnittmenge des Quellbereichs nicht gefüllt.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>One or more of the parameters is less than zero.</source>
          <target state="translated">Mindestens einer der Parameter ist kleiner als 0 (null).</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="sourceLeft" /&gt;</ph> or <ph id="ph2">&lt;paramref name="targetLeft" /&gt;</ph> is greater than or equal to <ph id="ph3">&lt;see cref="P:System.Console.BufferWidth" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceLeft" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="targetLeft" /&gt;</ph> ist größer oder gleich <ph id="ph3">&lt;see cref="P:System.Console.BufferWidth" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="sourceTop" /&gt;</ph> or <ph id="ph2">&lt;paramref name="targetTop" /&gt;</ph> is greater than or equal to <ph id="ph3">&lt;see cref="P:System.Console.BufferHeight" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceTop" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="targetTop" /&gt;</ph> ist größer oder gleich <ph id="ph3">&lt;see cref="P:System.Console.BufferHeight" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="sourceTop" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="sourceHeight" /&gt;</ph> is greater than or equal to <ph id="ph4">&lt;see cref="P:System.Console.BufferHeight" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceTop" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="sourceHeight" /&gt;</ph> ist größer oder gleich <ph id="ph4">&lt;see cref="P:System.Console.BufferHeight" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="sourceLeft" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="sourceWidth" /&gt;</ph> is greater than or equal to <ph id="ph4">&lt;see cref="P:System.Console.BufferWidth" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceLeft" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="sourceWidth" /&gt;</ph> ist größer oder gleich <ph id="ph4">&lt;see cref="P:System.Console.BufferWidth" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">Der Benutzer verfügt nicht über die erforderliche Berechtigung, um diese Aktion auszuführen.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>The leftmost column of the source area.</source>
          <target state="translated">Die am weitesten links stehende Spalte des Quellbereichs.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>The topmost row of the source area.</source>
          <target state="translated">Die oberste Zeile des Quellbereichs.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>The number of columns in the source area.</source>
          <target state="translated">Die Anzahl der Spalten im Quellbereich.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>The number of rows in the source area.</source>
          <target state="translated">Die Anzahl der Zeilen im Quellbereich.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>The leftmost column of the destination area.</source>
          <target state="translated">Die am weitesten links stehende Spalte des Zielbereichs.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>The topmost row of the destination area.</source>
          <target state="translated">Die oberste Zeile des Zielbereichs.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>The character used to fill the source area.</source>
          <target state="translated">Das zum Ausfüllen des Quellbereichs verwendete Zeichen.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>The foreground color used to fill the source area.</source>
          <target state="translated">Die zum Ausfüllen des Quellbereichs verwendete Vordergrundfarbe.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>The background color used to fill the source area.</source>
          <target state="translated">Die zum Ausfüllen des Quellbereichs verwendete Hintergrundfarbe.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>Copies a specified source area of the screen buffer to a specified destination area.</source>
          <target state="translated">Kopiert einen angegebenen Quellbereich des Bildschirmpuffers in einen angegebenen Zielbereich.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>If the destination and source parameters specify a position located beyond the boundaries of the current screen buffer, only the portion of the source area that fits within the destination area is copied.</source>
          <target state="translated">Wenn die Ziel- und Parameter eine Position außerhalb der Grenzen des aktuellen Bildschirmpuffer angeben, wird nur der Teil des Quellbereichs, die in dem Zielbereich passt kopiert.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>That is, the source area is clipped to fit the current screen buffer.</source>
          <target state="translated">D. h. wird Quellbereichs abgeschnitten, damit Sie den aktuellen Bildschirmpuffer passt.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>The <ph id="ph1">&lt;xref:System.Console.MoveBufferArea%2A&gt;</ph> method copies the source area to the destination area.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Console.MoveBufferArea%2A&gt;</ph> Methode des Quellbereichs in den Zielbereich kopiert.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>If the destination area does not intersect the source area, the source area is filled with the character specified by <ph id="ph1">`sourceChar`</ph>, using the colors specified by <ph id="ph2">`sourceForeColor`</ph> and <ph id="ph3">`sourceBackColor`</ph>.</source>
          <target state="translated">Wenn sich der Zielbereich Quellbereichs nicht überschneiden, wird mit dem Zeichen, die gemäß des Quellbereichs gefüllt <ph id="ph1">`sourceChar`</ph>, unter Verwendung der angegebenen von Farben <ph id="ph2">`sourceForeColor`</ph> und <ph id="ph3">`sourceBackColor`</ph>.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>Otherwise, the intersected portion of the source area is not filled.</source>
          <target state="translated">Andernfalls ist der Teil der Schnittmenge des Quellbereichs nicht gefüllt.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>The <ph id="ph1">&lt;xref:System.Console.MoveBufferArea%2A&gt;</ph> method performs no operation if <ph id="ph2">`sourceWidth`</ph> or <ph id="ph3">`sourceHeight`</ph> is zero.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Console.MoveBufferArea%2A&gt;</ph> Methode führt keine Operation, wenn <ph id="ph2">`sourceWidth`</ph> oder <ph id="ph3">`sourceHeight`</ph> 0 (null).</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>One or more of the parameters is less than zero.</source>
          <target state="translated">Mindestens einer der Parameter ist kleiner als 0 (null).</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source><ph id="ph1">&lt;paramref name="sourceLeft" /&gt;</ph> or <ph id="ph2">&lt;paramref name="targetLeft" /&gt;</ph> is greater than or equal to <ph id="ph3">&lt;see cref="P:System.Console.BufferWidth" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceLeft" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="targetLeft" /&gt;</ph> ist größer oder gleich <ph id="ph3">&lt;see cref="P:System.Console.BufferWidth" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source><ph id="ph1">&lt;paramref name="sourceTop" /&gt;</ph> or <ph id="ph2">&lt;paramref name="targetTop" /&gt;</ph> is greater than or equal to <ph id="ph3">&lt;see cref="P:System.Console.BufferHeight" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceTop" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="targetTop" /&gt;</ph> ist größer oder gleich <ph id="ph3">&lt;see cref="P:System.Console.BufferHeight" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source><ph id="ph1">&lt;paramref name="sourceTop" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="sourceHeight" /&gt;</ph> is greater than or equal to <ph id="ph4">&lt;see cref="P:System.Console.BufferHeight" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceTop" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="sourceHeight" /&gt;</ph> ist größer oder gleich <ph id="ph4">&lt;see cref="P:System.Console.BufferHeight" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source><ph id="ph1">&lt;paramref name="sourceLeft" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="sourceWidth" /&gt;</ph> is greater than or equal to <ph id="ph4">&lt;see cref="P:System.Console.BufferWidth" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceLeft" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="sourceWidth" /&gt;</ph> ist größer oder gleich <ph id="ph4">&lt;see cref="P:System.Console.BufferWidth" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>One or both of the color parameters is not a member of the <ph id="ph1">&lt;see cref="T:System.ConsoleColor" /&gt;</ph> enumeration.</source>
          <target state="translated">Einer oder beide Farbparameter sind kein Member der <ph id="ph1">&lt;see cref="T:System.ConsoleColor" /&gt;</ph>-Enumeration.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">Der Benutzer verfügt nicht über die erforderliche Berechtigung, um diese Aktion auszuführen.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="P:System.Console.NumberLock">
          <source>Gets a value indicating whether the NUM LOCK keyboard toggle is turned on or turned off.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob die NUM-Tastaturumschalttaste aktiviert oder deaktiviert ist.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.NumberLock">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if NUM LOCK is turned on; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if NUM LOCK is turned off.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die NUM-TASTE aktiviert ist, <ph id="ph2">&lt;see langword="false" /&gt;</ph>, wenn die NUM-TASTE deaktiviert ist.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="T:System.Console">
          <source>Acquires the standard error stream.</source>
          <target state="translated">Ruft den Standardfehlerstream ab.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardError">
          <source>Acquires the standard error stream.</source>
          <target state="translated">Ruft den Standardfehlerstream ab.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardError">
          <source>The standard error stream.</source>
          <target state="translated">Der Standardfehlerstream.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardError">
          <source>This method can be used to reacquire the standard error stream after it has been changed by the <ph id="ph1">&lt;xref:System.Console.SetError%2A&gt;</ph> method.</source>
          <target state="translated">Diese Methode kann, der Standardfehlerstream nach dem Ändern durch die <ph id="ph1">&lt;xref:System.Console.SetError%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardError">
          <source>The following example is a simple text file viewer that displays the contents of one or more text files to the console.</source>
          <target state="translated">Im folgende Beispiel wird ein einfacher Text-Datei-Viewer, der den Inhalt von einem oder mehreren Textdateien auf der Konsole ausgibt.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardError">
          <source>If there are no command line arguments, or if any files passed as command line arguments do not exist, the example calls the <ph id="ph1">&lt;xref:System.Console.SetError%2A&gt;</ph> method to redirect error information to a file, calls the <ph id="ph2">&lt;xref:System.Console.OpenStandardError%2A&gt;</ph> method in the process of reacquiring the standard error stream, and indicates that error information was written to a file.</source>
          <target state="translated">Wenn keine Befehlszeilenargumente vorhanden sind oder wenn keine Dateien als Befehlszeilenargumente übergeben nicht vorhanden sind, wird im Beispiel wird die <ph id="ph1">&lt;xref:System.Console.SetError%2A&gt;</ph> Methodenaufrufe Fehlerinformationen in eine Datei umleiten der <ph id="ph2">&lt;xref:System.Console.OpenStandardError%2A&gt;</ph> Methode beim erneuten der Standardfehler Stream und gibt an, dass die Fehlerinformationen in eine Datei geschrieben wurde.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardError">
          <source>Note that the <ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType&gt;</ph> property is set to <ph id="ph2">`true`</ph> before reacquiring the error stream.</source>
          <target state="translated">Beachten Sie, dass die <ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType&gt;</ph> -Eigenschaftensatz auf <ph id="ph2">`true`</ph> vor dem erneuten fehlerdatenstroms der.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardError">
          <source>This ensures that output will be sent to the console immediately rather than buffered.</source>
          <target state="translated">Dadurch wird sichergestellt, dass die Ausgabe wird sofort an die Konsole gesendet und nicht als gepuffert.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardError(System.Int32)">
          <source>The internal stream buffer size.</source>
          <target state="translated">Die Größe des internen Streampuffers.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardError(System.Int32)">
          <source>Acquires the standard error stream, which is set to a specified buffer size.</source>
          <target state="translated">Ruft den Standardfehlerstream ab, der auf eine angegebene Puffergröße festgelegt wird.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardError(System.Int32)">
          <source>The standard error stream.</source>
          <target state="translated">Der Standardfehlerstream.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardError(System.Int32)">
          <source>This method can be used to reacquire the standard error stream after it has been changed by the <ph id="ph1">&lt;xref:System.Console.SetError%2A&gt;</ph> method.</source>
          <target state="translated">Diese Methode kann, der Standardfehlerstream nach dem Ändern durch die <ph id="ph1">&lt;xref:System.Console.SetError%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardError(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> is less than or equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> ist kleiner gleich 0 (null).</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="T:System.Console">
          <source>Acquires the standard input stream.</source>
          <target state="translated">Ruft den Standardeingabestream ab.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardInput">
          <source>Acquires the standard input stream.</source>
          <target state="translated">Ruft den Standardeingabestream ab.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardInput">
          <source>The standard input stream.</source>
          <target state="translated">Der Standardeingabestream.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardInput">
          <source>This method can be used to reacquire the standard input stream after it has been changed by the <ph id="ph1">&lt;xref:System.Console.SetIn%2A&gt;</ph> method.</source>
          <target state="translated">Diese Methode kann verwendet werden, auf den Standardeingabestream nach dem Ändern von der <ph id="ph1">&lt;xref:System.Console.SetIn%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardInput">
          <source>The following example illustrates the use of the <ph id="ph1">`OpenStandardInput`</ph> property.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die Verwendung der <ph id="ph1">`OpenStandardInput`</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardInput(System.Int32)">
          <source>The internal stream buffer size.</source>
          <target state="translated">Die Größe des internen Streampuffers.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardInput(System.Int32)">
          <source>Acquires the standard input stream, which is set to a specified buffer size.</source>
          <target state="translated">Ruft den Standardeingabestream ab, der auf eine angegebene Puffergröße festgelegt wird.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardInput(System.Int32)">
          <source>The standard input stream.</source>
          <target state="translated">Der Standardeingabestream.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardInput(System.Int32)">
          <source>This method can be used to reacquire the standard output stream after it has been changed by the <ph id="ph1">&lt;xref:System.Console.SetIn%2A&gt;</ph> method.</source>
          <target state="translated">Diese Methode kann verwendet werden, an den Standardausgabestream zurückzuerhalten, nach dem Ändern von der <ph id="ph1">&lt;xref:System.Console.SetIn%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardInput(System.Int32)">
          <source>The following example illustrates the use of the <ph id="ph1">`OpenStandardInput`</ph> property.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die Verwendung der <ph id="ph1">`OpenStandardInput`</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardInput(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> is less than or equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> ist kleiner gleich 0 (null).</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="T:System.Console">
          <source>Acquires the standard output stream.</source>
          <target state="translated">Ruft den Standardausgabestream ab.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardOutput">
          <source>Acquires the standard output stream.</source>
          <target state="translated">Ruft den Standardausgabestream ab.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardOutput">
          <source>The standard output stream.</source>
          <target state="translated">Der Standardausgabestream.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardOutput">
          <source>This method can be used to reacquire the standard output stream after it has been changed by the <ph id="ph1">&lt;xref:System.Console.SetOut%2A&gt;</ph> method.</source>
          <target state="translated">Diese Methode kann verwendet werden, an den Standardausgabestream zurückzuerhalten, nach dem Ändern von der <ph id="ph1">&lt;xref:System.Console.SetOut%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardOutput">
          <source>The following example illustrates the use of the <ph id="ph1">&lt;xref:System.Console.OpenStandardOutput%2A&gt;</ph> method.</source>
          <target state="translated">Im folgenden Beispiel wird die Verwendung der <ph id="ph1">&lt;xref:System.Console.OpenStandardOutput%2A&gt;</ph>-Methode veranschaulicht.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardOutput">
          <source>It replaces four consecutive space characters in a string with a tab character.</source>
          <target state="translated">Hierdurch werden vier aufeinander folgende Leerzeichen in einer Zeichenfolge durch ein Tabstoppzeichen ersetzt.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardOutput">
          <source>To run it, you must supply two command-line arguments.</source>
          <target state="translated">Um es auszuführen, müssen Sie zwei Befehlszeilenargumente angeben.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardOutput">
          <source>The first is the name of an existing text file to redirect the standard input stream to.</source>
          <target state="translated">Das erste ist der Name einer vorhandenen Textdatei, in die der Standardeingabestream umgeleitet wird.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardOutput">
          <source>The second is the name of a file to redirect the standard output stream to.</source>
          <target state="translated">Das zweite ist der Name einer Datei, in die der Standardausgabestream umgeleitet wird.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardOutput">
          <source>This file need not exist.</source>
          <target state="translated">Diese Datei muss nicht vorhanden sein.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardOutput">
          <source>If it does, its contents will be overwritten.</source>
          <target state="translated">Wenn das der Fall ist, wird der Inhalt überschrieben.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardOutput(System.Int32)">
          <source>The internal stream buffer size.</source>
          <target state="translated">Die Größe des internen Streampuffers.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardOutput(System.Int32)">
          <source>Acquires the standard output stream, which is set to a specified buffer size.</source>
          <target state="translated">Ruft den Standardausgabestream ab, der auf eine angegebene Puffergröße festgelegt wird.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardOutput(System.Int32)">
          <source>The standard output stream.</source>
          <target state="translated">Der Standardausgabestream.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardOutput(System.Int32)">
          <source>This method can be used to reacquire the standard output stream after it has been changed by the <ph id="ph1">&lt;xref:System.Console.SetOut%2A&gt;</ph> method.</source>
          <target state="translated">Diese Methode kann verwendet werden, an den Standardausgabestream zurückzuerhalten, nach dem Ändern von der <ph id="ph1">&lt;xref:System.Console.SetOut%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardOutput(System.Int32)">
          <source>The following example illustrates the use of the <ph id="ph1">&lt;xref:System.Console.OpenStandardOutput%2A&gt;</ph> method.</source>
          <target state="translated">Im folgenden Beispiel wird die Verwendung der <ph id="ph1">&lt;xref:System.Console.OpenStandardOutput%2A&gt;</ph>-Methode veranschaulicht.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardOutput(System.Int32)">
          <source>It replaces four consecutive space characters in a string with a tab character.</source>
          <target state="translated">Hierdurch werden vier aufeinander folgende Leerzeichen in einer Zeichenfolge durch ein Tabstoppzeichen ersetzt.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardOutput(System.Int32)">
          <source>To run it, you must supply two command line arguments.</source>
          <target state="translated">Um es auszuführen, müssen Sie zwei Befehlszeilenargumente angeben.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardOutput(System.Int32)">
          <source>The first is the name of an existing text file to redirect the standard input stream to.</source>
          <target state="translated">Das erste ist der Name einer vorhandenen Textdatei, in die der Standardeingabestream umgeleitet wird.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardOutput(System.Int32)">
          <source>The second is the name of a file to redirect the standard output stream to.</source>
          <target state="translated">Das zweite ist der Name einer Datei, in die der Standardausgabestream umgeleitet wird.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardOutput(System.Int32)">
          <source>This file need not exist.</source>
          <target state="translated">Diese Datei muss nicht vorhanden sein.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardOutput(System.Int32)">
          <source>If it does, its contents will be overwritten.</source>
          <target state="translated">Wenn das der Fall ist, wird der Inhalt überschrieben.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardOutput(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> is less than or equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> ist kleiner gleich 0 (null).</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="P:System.Console.Out">
          <source>Gets the standard output stream.</source>
          <target state="translated">Ruft den Standardausgabestream ab.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Out">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> that represents the standard output stream.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>, der den Standardausgabestream darstellt.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Out">
          <source>This property is set to the standard output stream by default.</source>
          <target state="translated">Diese Eigenschaft wird in den Standardausgabestream standardmäßig festgelegt.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Out">
          <source>This property can be set to another stream with the <ph id="ph1">&lt;xref:System.Console.SetOut%2A&gt;</ph> method.</source>
          <target state="translated">Diese Eigenschaft kann festgelegt werden, in einen anderen Stream mit der <ph id="ph1">&lt;xref:System.Console.SetOut%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Out">
          <source>Note that calls to <ph id="ph1">`Console.Out.WriteLine`</ph> methods are equivalent to calls to the corresponding <ph id="ph2">&lt;xref:System.Console.WriteLine%2A&gt;</ph> methods.</source>
          <target state="translated">Beachten Sie, das Aufrufe an <ph id="ph1">`Console.Out.WriteLine`</ph> Methoden sind gleichwertig in Aufrufe an den entsprechenden <ph id="ph2">&lt;xref:System.Console.WriteLine%2A&gt;</ph> Methoden.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Out">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Console.Out%2A&gt;</ph> property to display an array containing the names of files in the application's current directory to the standard output device.</source>
          <target state="translated">Im folgenden Beispiel wird die <ph id="ph1">&lt;xref:System.Console.Out%2A&gt;</ph> Eigenschaft, um ein Array mit den Namen der Dateien im aktuellen Verzeichnis der Anwendung in das Standardausgabegerät anzuzeigen.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Out">
          <source>It then sets the standard output to a file named Files.txt and lists the array elements to the file.</source>
          <target state="translated">Klicken Sie dann die Standardausgabe auf die Datei Files.txt festgelegt, und listet die Elemente des Arrays in der Datei.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Out">
          <source>Finally, it sets the output to the standard output stream and again displays the array elements to the standard output device.</source>
          <target state="translated">Schließlich legt die Ausgabe in den Standardausgabestream und zeigt erneut die Arrayelemente in das Standardausgabegerät.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="P:System.Console.OutputEncoding">
          <source>Gets or sets the encoding the console uses to write output.</source>
          <target state="translated">Ruft die Codierung ab, die die Konsole verwendet, um die Ausgabe zu schreiben, oder legt diese fest.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.OutputEncoding">
          <source>The encoding used to write console output.</source>
          <target state="translated">Die Codierung, die verwendet wird, um die Konsolenausgabe zu schreiben.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.OutputEncoding">
          <source>The console uses the output encoding to translate characters written by an application into corresponding console display characters.</source>
          <target state="translated">Die Konsole verwendet ausgabecodierung, von einer Anwendung in die entsprechenden Zeichen vor Konsole Anzeige geschriebene Zeichen übersetzt.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.OutputEncoding">
          <source>The default code page that the console uses is determined by the system locale.</source>
          <target state="translated">Die Standardcodepage, die die Konsole verwendet, wird durch das Gebietsschema des Systems bestimmt.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.OutputEncoding">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, a property get operation may return a cached value instead of the console's current output encoding.</source>
          <target state="translated">Beginnend mit der <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, ein Abrufvorgang Eigenschaft möglicherweise einen zwischengespeicherten Wert anstelle der Konsole aktuellen ausgabecodierung zurück.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.OutputEncoding">
          <source>This can occur if the value of the <ph id="ph1">&lt;xref:System.Console.OutputEncoding%2A&gt;</ph> property is modified by some means other than an assignment to the <ph id="ph2">&lt;xref:System.Console.OutputEncoding%2A&gt;</ph> property, such as calling the Windows <ph id="ph3">`SetConsoleOutputCP`</ph> function.</source>
          <target state="translated">Dies kann auftreten, wenn der Wert des der <ph id="ph1">&lt;xref:System.Console.OutputEncoding%2A&gt;</ph> Eigenschaft wird geändert, andere Zuweisung zu Weise die <ph id="ph2">&lt;xref:System.Console.OutputEncoding%2A&gt;</ph> Eigenschaft, z. B. das Aufrufen der Windows <ph id="ph3">`SetConsoleOutputCP`</ph> Funktion.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="P:System.Console.OutputEncoding">
          <source>The property value in a set operation is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der Eigenschaftswert in einer Set-Operation ist <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="P:System.Console.OutputEncoding">
          <source>An error occurred during the execution of this operation.</source>
          <target state="translated">Während der Ausführung dieses Vorgangs ist ein Fehler aufgetreten.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="P:System.Console.OutputEncoding">
          <source>Your application does not have permission to perform this operation.</source>
          <target state="translated">Ihre Anwendung verfügt nicht über die erforderliche Berechtigung zum Ausführen dieses Vorgangs.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.OutputEncoding">
          <source>for reading and writing to top-level windows and subwindows.</source>
          <target state="translated">zum Lesen und Schreiben in das Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.OutputEncoding">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.OutputEncoding">
          <source>Of the Unicode encodings, the <ph id="ph1">&lt;see cref="T:System.Console" /&gt;</ph> class supports UTF-8 encoding with the <ph id="ph2">&lt;see cref="T:System.Text.UTF8Encoding" /&gt;</ph> class and, starting with the <ph id="ph3">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, it supports UTF-16 encoding with the <ph id="ph4">&lt;see cref="T:System.Text.UnicodeEncoding" /&gt;</ph> class.</source>
          <target state="translated">Der Unicode-Codierungen die <ph id="ph1">&lt;see cref="T:System.Console" /&gt;</ph> Klasse unterstützt UTF-8-Codierung mit der <ph id="ph2">&lt;see cref="T:System.Text.UTF8Encoding" /&gt;</ph> Klasse und muss mit der <ph id="ph3">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, unterstützt UTF-16-Codierung mit der <ph id="ph4">&lt;see cref="T:System.Text.UnicodeEncoding" /&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.OutputEncoding">
          <source>UTF-32 encoding with the <ph id="ph1">&lt;see cref="T:System.Text.UTF32Encoding" /&gt;</ph> class is not supported.</source>
          <target state="translated">UTF-32-Codierung mit der <ph id="ph1">&lt;see cref="T:System.Text.UTF32Encoding" /&gt;</ph> Klasse wird nicht unterstützt.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.OutputEncoding">
          <source>Attempting to set the output encoding to UTF-32 throws an <ph id="ph1">&lt;see cref="T:System.IO.IOException" /&gt;</ph>.</source>
          <target state="translated">Beim Festlegen der ausgabecodierung in UTF-32 löst eine <ph id="ph1">&lt;see cref="T:System.IO.IOException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.OutputEncoding">
          <source>Note that successfully displaying Unicode characters to the console requires the following:</source>
          <target state="translated">Beachten Sie, dass erfolgreich Anzeigen von Unicode-Zeichen in die Konsole ist Folgendes erforderlich:</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.OutputEncoding">
          <source>The console must use a TrueType font, such as Lucida Console or Consolas, to display characters.</source>
          <target state="translated">Die Konsole muss eine TrueType-Schriftart an, wie Lucida Console oder Consolas, verwenden, um Zeichen zu anzuzeigen.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.OutputEncoding">
          <source>A font used by the console must define the particular glyph or glyphs to be displayed.</source>
          <target state="translated">Eine Schriftart, die von der Konsole muss die bestimmten Glyphe oder Symbole angezeigt werden definieren.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.OutputEncoding">
          <source>The console can take advantage of font linking to display glyphs from linked fonts if the base font does not contain a definition for that glyph.</source>
          <target state="translated">Die Konsole nutzen schriftartverknüpfung um Symbole aus verknüpften Schriftarten angezeigt, wenn die Basis Schriftart keine Definition für dieses Symbol enthält.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.OutputEncoding">
          <source>For more information about support for Unicode encoding by the console, see the "Unicode Support for the Console" section in the <ph id="ph1">&lt;see cref="T:System.Console" /&gt;</ph> class.</source>
          <target state="translated">Weitere Informationen zur Unterstützung für Unicode-Codierung von der Konsole finden Sie im Abschnitt "Unicode-Unterstützung für die Konsole" in der <ph id="ph1">&lt;see cref="T:System.Console" /&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:System.Console.Read">
          <source>Reads the next character from the standard input stream.</source>
          <target state="translated">Liest das nächste Zeichen aus dem Standardeingabestream.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.Console.Read">
          <source>The next character from the input stream, or negative one (-1) if there are currently no more characters to be read.</source>
          <target state="translated">Das nächste Zeichen aus dem Eingabestream bzw. -1, wenn derzeit keine weiteren Zeichen gelesen werden können.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Read">
          <source>The <ph id="ph1">&lt;xref:System.Console.Read%2A&gt;</ph> method blocks its return while you type input characters; it terminates when you press the <ph id="ph2">&lt;xref:System.ConsoleKey.Enter&gt;</ph> key.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Console.Read%2A&gt;</ph> Methode deren Rückgabe blockiert, während Sie Eingabezeichen eingeben; es beendet, wenn Sie durch Drücken der <ph id="ph2">&lt;xref:System.ConsoleKey.Enter&gt;</ph> Schlüssel.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Read">
          <source>Pressing Enter appends a platform-dependent line termination sequence to your input (for example, Windows appends a carriage return-linefeed sequence).</source>
          <target state="translated">Durch Drücken der EINGABETASTE Fügt eine plattformabhängige Abschlusssequenz an Ihre Eingabe an (z. B. Windows fügt eine Carriage Return-Zeilenvorschub-Sequenz an).</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Read">
          <source>Subsequent calls to the <ph id="ph1">&lt;xref:System.Console.Read%2A&gt;</ph> method retrieve your input one character at a time.</source>
          <target state="translated">Nachfolgende Aufrufe der <ph id="ph1">&lt;xref:System.Console.Read%2A&gt;</ph> Methode abgerufen, der ein Eingabezeichen zu einem Zeitpunkt.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Read">
          <source>After the final character is retrieved, <ph id="ph1">&lt;xref:System.Console.Read%2A&gt;</ph> blocks its return again and the cycle repeats.</source>
          <target state="translated">Nachdem das letzte Zeichen abgerufen wurden, <ph id="ph1">&lt;xref:System.Console.Read%2A&gt;</ph> blockiert, deren Rückgabe erneut und der Zyklus wird wiederholt.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Read">
          <source>The <ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> method, or the <ph id="ph2">&lt;xref:System.Console.KeyAvailable%2A&gt;</ph> property and <ph id="ph3">&lt;xref:System.Console.ReadKey%2A&gt;</ph> method are preferable to using the <ph id="ph4">&lt;xref:System.Console.Read%2A&gt;</ph> method.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> -Methode oder die <ph id="ph2">&lt;xref:System.Console.KeyAvailable%2A&gt;</ph> Eigenschaft und <ph id="ph3">&lt;xref:System.Console.ReadKey%2A&gt;</ph> Methode sind vorzuziehen, mit der <ph id="ph4">&lt;xref:System.Console.Read%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Read">
          <source>Note that the method does not return -1 unless you perform one of the following actions:</source>
          <target state="translated">Beachten Sie, dass die Methode nicht-1 zurückgegeben werden, es sei denn, Sie eine der folgenden Aktionen ausführen:</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Read">
          <source>Simultaneously press the <ph id="ph1">&lt;xref:System.ConsoleModifiers.Control&gt;</ph> modifier key and <ph id="ph2">&lt;xref:System.ConsoleKey.Z&gt;</ph> console key (Ctrl+Z), which signals the end-of-file condition.</source>
          <target state="translated">Drücken Sie gleichzeitig die <ph id="ph1">&lt;xref:System.ConsoleModifiers.Control&gt;</ph> Modifizierertaste und <ph id="ph2">&lt;xref:System.ConsoleKey.Z&gt;</ph> -Konsolentaste (STRG + Z), das die EOF-Bedingung signalisiert.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Read">
          <source>Press an equivalent key that signals the end-of-file condition, such as the F6 function key in Windows.</source>
          <target state="translated">Drücken Sie die einen entsprechenden Schlüssel, der signalisiert die EOF-Bedingung, z. B. mit der Taste F6 in Windows.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Read">
          <source>Redirect the input stream to a source, such as a text file, that has an actual end-of-file character.</source>
          <target state="translated">Umleiten der Eingabestreams an eine Quelle, wie eine Textdatei, mit einem tatsächlichen EOF-Zeichen.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Read">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Console.Read%2A&gt;</ph> method.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die <ph id="ph1">&lt;xref:System.Console.Read%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" uid="M:System.Console.Read">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" uid="T:System.Console">
          <source>Obtains the next character or function key pressed by the user.</source>
          <target state="translated">Ruft die nächste vom Benutzer gedrückte Zeichen- oder Funktionstaste ab.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" uid="M:System.Console.ReadKey">
          <source>Obtains the next character or function key pressed by the user.</source>
          <target state="translated">Ruft die nächste vom Benutzer gedrückte Zeichen- oder Funktionstaste ab.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" uid="M:System.Console.ReadKey">
          <source>The pressed key is displayed in the console window.</source>
          <target state="translated">Die gedrückte Taste wird im Konsolenfenster angezeigt.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" uid="M:System.Console.ReadKey">
          <source>An object that describes the <ph id="ph1">&lt;see cref="T:System.ConsoleKey" /&gt;</ph> constant and Unicode character, if any, that correspond to the pressed console key.</source>
          <target state="translated">Ein Objekt, das die <ph id="ph1">&lt;see cref="T:System.ConsoleKey" /&gt;</ph>-Konstante und ggf. das Unicode-Zeichen beschreibt, die der gedrückten Konsolentaste entsprechen.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" uid="M:System.Console.ReadKey">
          <source>The <ph id="ph1">&lt;see cref="T:System.ConsoleKeyInfo" /&gt;</ph> object also describes, in a bitwise combination of <ph id="ph2">&lt;see cref="T:System.ConsoleModifiers" /&gt;</ph> values, whether one or more Shift, Alt, or Ctrl modifier keys was pressed simultaneously with the console key.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.ConsoleKeyInfo" /&gt;</ph>-Objekt beschreibt außerdem in einer bitweisen Kombination von <ph id="ph2">&lt;see cref="T:System.ConsoleModifiers" /&gt;</ph>-Werten, ob eine oder mehrere der Modifizierertasten UMSCHALTTASTE, ALT oder STRG gleichzeitig mit der Konsolentaste gedrückt wurden.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey">
          <source>The <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> method waits, that is, blocks on the thread issuing the <ph id="ph2">&lt;xref:System.Console.ReadKey%2A&gt;</ph> method, until a character or function key is pressed.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> Methode wartet, also der Thread ausstellenden blockiert die <ph id="ph2">&lt;xref:System.Console.ReadKey%2A&gt;</ph> -Methode, bis eine Zeichen- oder Funktionstaste gedrückt wird.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey">
          <source>A character or function key can be pressed in combination with one or more Alt, Ctrl, or Shift modifier keys.</source>
          <target state="translated">Eine Zeichen- oder Funktionstaste kann in Kombination mit ein oder mehrere der Modifizierertasten Alt, STRG oder UMSCHALT gedrückt werden.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey">
          <source>However, pressing a modifier key by itself will not cause the <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> method to return.</source>
          <target state="translated">Allerdings drücken Modifizierertaste selbst wird nicht bewirken, dass die <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> -Methode zurückgegeben.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey">
          <source>Depending on your application, you might want to use the <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> method in conjunction with the <ph id="ph2">&lt;xref:System.Console.KeyAvailable%2A&gt;</ph> property.</source>
          <target state="translated">Je nach Ihrer Anwendung möchten Sie möglicherweise verwenden die <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> Methode in Verbindung mit der <ph id="ph2">&lt;xref:System.Console.KeyAvailable%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey">
          <source>The <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> method reads from the keyboard even if the standard input is redirected to a file with the <ph id="ph2">&lt;xref:System.Console.SetIn%2A&gt;</ph> method.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> Methode liest aus der Tastatur, selbst wenn die Standardeingabe umgeleitet wird, in eine Datei mit der <ph id="ph2">&lt;xref:System.Console.SetIn%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey">
          <source>One of the most common uses of the <ph id="ph1">&lt;xref:System.Console.ReadKey&gt;</ph> method is to halt program execution until the user presses a key and the app either terminates or displays an additional window of information.</source>
          <target state="translated">Eine der am häufigsten verwendet, der die <ph id="ph1">&lt;xref:System.Console.ReadKey&gt;</ph> Methode ist die Ausführung des Programms angehalten, bis der Benutzer eine Taste drückt, und die app beendet wird oder zeigt ein Fenster "zusätzliche", der Informationen.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey">
          <source>The following example uses the  <ph id="ph1">&lt;xref:System.Console.ReadKey&gt;</ph> method to wait for the user to press the Enter key before terminating the app.</source>
          <target state="translated">Im folgenden Beispiel wird die <ph id="ph1">&lt;xref:System.Console.ReadKey&gt;</ph> Methode für den Benutzer die EINGABETASTE drücken, vor dem Beenden der app zu warten.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey">
          <source>Note that this overload of the <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> method by default echoes any displayable keys that the user presses to the console.</source>
          <target state="translated">Beachten Sie, die dieser Überladung von der <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> Methode standardmäßig wiederholt anzeigbaren Schlüssel, die der Benutzer, an die Konsole drückt.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey">
          <source>To suppress them, call the  <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> method with an <ph id="ph2">`intercept`</ph> argument of <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Aufrufen, um sie zu unterdrücken, die <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> Methode mit einem <ph id="ph2">`intercept`</ph> Argument <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Console.ReadKey&gt;</ph> method to display information about which key the user pressed..</source>
          <target state="translated">Im folgenden Beispiel wird die <ph id="ph1">&lt;xref:System.Console.ReadKey&gt;</ph> Methode zum Anzeigen von Informationen über die Taste gedrückt..</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" uid="M:System.Console.ReadKey">
          <source>The <ph id="ph1">&lt;see cref="P:System.Console.In" /&gt;</ph> property is redirected from some stream other than the console.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="P:System.Console.In" /&gt;</ph>-Eigenschaft wird von einem anderen Stream als der Konsole umgeleitet.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="M:System.Console.ReadKey(System.Boolean)">
          <source>Determines whether to display the pressed key in the console window.</source>
          <target state="translated">Bestimmt, ob die gedrückte Taste im Konsolenfenster angezeigt werden soll.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" uid="M:System.Console.ReadKey(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to not display the pressed key; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die gedrückte Taste nicht angezeigt werden soll, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="M:System.Console.ReadKey(System.Boolean)">
          <source>Obtains the next character or function key pressed by the user.</source>
          <target state="translated">Ruft die nächste vom Benutzer gedrückte Zeichen- oder Funktionstaste ab.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" uid="M:System.Console.ReadKey(System.Boolean)">
          <source>The pressed key is optionally displayed in the console window.</source>
          <target state="translated">Die gedrückte Taste wird optional im Konsolenfenster angezeigt.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" uid="M:System.Console.ReadKey(System.Boolean)">
          <source>An object that describes the <ph id="ph1">&lt;see cref="T:System.ConsoleKey" /&gt;</ph> constant and Unicode character, if any, that correspond to the pressed console key.</source>
          <target state="translated">Ein Objekt, das die <ph id="ph1">&lt;see cref="T:System.ConsoleKey" /&gt;</ph>-Konstante und ggf. das Unicode-Zeichen beschreibt, die der gedrückten Konsolentaste entsprechen.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:System.Console.ReadKey(System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ConsoleKeyInfo" /&gt;</ph> object also describes, in a bitwise combination of <ph id="ph2">&lt;see cref="T:System.ConsoleModifiers" /&gt;</ph> values, whether one or more Shift, Alt, or Ctrl modifier keys was pressed simultaneously with the console key.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.ConsoleKeyInfo" /&gt;</ph>-Objekt beschreibt außerdem in einer bitweisen Kombination von <ph id="ph2">&lt;see cref="T:System.ConsoleModifiers" /&gt;</ph>-Werten, ob eine oder mehrere der Modifizierertasten UMSCHALTTASTE, ALT oder STRG gleichzeitig mit der Konsolentaste gedrückt wurden.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> method waits, that is, blocks on the thread issuing the <ph id="ph2">&lt;xref:System.Console.ReadKey%2A&gt;</ph> method, until a character or function key is pressed.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> Methode wartet, also der Thread ausstellenden blockiert die <ph id="ph2">&lt;xref:System.Console.ReadKey%2A&gt;</ph> -Methode, bis eine Zeichen- oder Funktionstaste gedrückt wird.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey(System.Boolean)">
          <source>A character or function key can be pressed in combination with one or more Alt, Ctrl, or Shift modifier keys.</source>
          <target state="translated">Eine Zeichen- oder Funktionstaste kann in Kombination mit ein oder mehrere der Modifizierertasten Alt, STRG oder UMSCHALT gedrückt werden.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey(System.Boolean)">
          <source>However, pressing a modifier key by itself will not cause the <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> method to return.</source>
          <target state="translated">Allerdings drücken Modifizierertaste selbst wird nicht bewirken, dass die <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> -Methode zurückgegeben.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey(System.Boolean)">
          <source>If the <ph id="ph1">`intercept`</ph> parameter is <ph id="ph2">`true`</ph>, the pressed key is intercepted and not displayed in the console window; otherwise, the pressed key is displayed.</source>
          <target state="translated">Wenn die <ph id="ph1">`intercept`</ph> Parameter ist <ph id="ph2">`true`</ph>, die gedrückte Taste wird abgefangen und nicht im Konsolenfenster angezeigt; andernfalls wird die gedrückte Taste angezeigt.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey(System.Boolean)">
          <source>Depending on your application, you might want to use the <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> method in conjunction with the <ph id="ph2">&lt;xref:System.Console.KeyAvailable%2A&gt;</ph> property.</source>
          <target state="translated">Je nach Ihrer Anwendung möchten Sie möglicherweise verwenden die <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> Methode in Verbindung mit der <ph id="ph2">&lt;xref:System.Console.KeyAvailable%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> method reads from the keyboard even if the standard input is redirected to a file with the <ph id="ph2">&lt;xref:System.Console.SetIn%2A&gt;</ph> method.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> Methode liest aus der Tastatur, selbst wenn die Standardeingabe umgeleitet wird, in eine Datei mit der <ph id="ph2">&lt;xref:System.Console.SetIn%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey(System.Boolean)">
          <source>One of the most common uses of the <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> method is to halt program execution until the user presses a key and the app either terminates or displays an additional window of information.</source>
          <target state="translated">Eine der am häufigsten verwendet, der die <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> Methode ist die Ausführung des Programms angehalten, bis der Benutzer eine Taste drückt, und die app beendet wird oder zeigt ein Fenster "zusätzliche", der Informationen.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey(System.Boolean)">
          <source>The following example uses the  <ph id="ph1">&lt;xref:System.Console.ReadKey%28System.Boolean%29&gt;</ph> method to wait for the user to press the Enter key before terminating the app.</source>
          <target state="translated">Im folgenden Beispiel wird die <ph id="ph1">&lt;xref:System.Console.ReadKey%28System.Boolean%29&gt;</ph> Methode für den Benutzer die EINGABETASTE drücken, vor dem Beenden der app zu warten.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey(System.Boolean)">
          <source>Note that, if the user presses any other key, it is not echoed to the console.</source>
          <target state="translated">Beachten Sie, dass, wenn der Benutzer eine andere Taste drückt, ihn nicht an die Konsole ausgegeben wird.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey(System.Boolean)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Console.ReadKey%28System.Boolean%29&gt;</ph> method to display information about the key pressed by a user without echoing that key to the console.</source>
          <target state="translated">Im folgenden Beispiel wird die <ph id="ph1">&lt;xref:System.Console.ReadKey%28System.Boolean%29&gt;</ph> Methode, um Informationen über die Taste gedrückt durch einen Benutzer ohne Echo diesen Schlüssel in der Konsole anzuzeigen.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="M:System.Console.ReadKey(System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Console.In" /&gt;</ph> property is redirected from some stream other than the console.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="P:System.Console.In" /&gt;</ph>-Eigenschaft wird von einem anderen Stream als der Konsole umgeleitet.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" uid="M:System.Console.ReadLine">
          <source>Reads the next line of characters from the standard input stream.</source>
          <target state="translated">Liest die nächste Zeile von Zeichen aus dem Standardeingabestream.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" uid="M:System.Console.ReadLine">
          <source>The next line of characters from the input stream, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no more lines are available.</source>
          <target state="translated">Die nächste Zeile von Zeichen aus dem Eingabestream oder <ph id="ph1">&lt;see langword="null" /&gt;</ph>, wenn keine weiteren Zeilen verfügbar sind.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>The <ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> method reads a line from the standard input stream.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> Methode liest eine Zeile aus dem Standardeingabestream.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>(For the definition of a line, see the paragraph after the following list.) This means that:</source>
          <target state="translated">(Die Definition einer Linie, finden Sie unter dem Absatz nach der folgenden Liste.) Dies bedeutet Folgendes:</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>If the standard input device is the keyboard, the <ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> method blocks until the user presses the <bpt id="p1">**</bpt>Enter<ept id="p1">**</ept> key.</source>
          <target state="translated">Ist der standard Eingabegerät, das der Tastatur die <ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> Methode blockiert, bis der Benutzer drückt die <bpt id="p1">**</bpt>EINGABETASTE<ept id="p1">**</ept> Schlüssel.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>One of the most common uses of the <ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> method is to pause program execution before clearing the console and displaying new information to it, or to prompt the user to press the Enter key before terminating the application.</source>
          <target state="translated">Eine der am häufigsten verwendet, der die <ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> Methode ist, zum Anhalten der Ausführung des Programms vor dem Löschen der Konsole und Anzeigen von Informationen zu neuen darauf, und fordert den Benutzer auf die EINGABETASTE drücken, bevor die Anwendung beendet.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>The following example illustrates this.</source>
          <target state="translated">Dies wird anhand des folgenden Beispiels veranschaulicht.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>If standard input is redirected to a file, the <ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> method reads a line of text from a file.</source>
          <target state="translated">Wenn die Standardeingabe in eine Datei umgeleitet wird die <ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> Methode liest eine Textzeile aus einer Datei.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>For example, the following is a text file named ReadLine1.txt:</source>
          <target state="translated">Folgendes ist z. B. eine Textdatei namens ReadLine1.txt:</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> method to read input that is redirected from a file.</source>
          <target state="translated">Im folgenden Beispiel wird die <ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> Methode, um die Eingabe zu lesen, die aus einer Datei umgeleitet wird.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>The read operation terminates when the  method returns <ph id="ph1">`null`</ph>, which indicates that no lines remain to be read.</source>
          <target state="translated">Der Lesevorgang beendet, wenn die Methode zurückkehrt <ph id="ph1">`null`</ph>, was bedeutet, dass keine Zeilen noch nicht gelesen werden.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>After compiling the example to an executable named ReadLine1.exe, you can run it from the command line with the syntax</source>
          <target state="translated">Nach dem Kompilieren des Beispiels für eine ausführbare benannte ReadLine1.exe, können Sie ihn über die Befehlszeile mit der Syntax ausführen</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>to read the contents of the file and display them to the console.</source>
          <target state="translated">um den Inhalt der Datei lesen und in der Konsole angezeigt werden.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>A line is defined as a sequence of characters followed by a carriage return (hexadecimal 0x000d), a line feed (hexadecimal 0x000a), or the value of the <ph id="ph1">&lt;xref:System.Environment.NewLine%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Eine Zeile ist definiert als eine Folge von Zeichen, gefolgt von einem Wagenrücklauf (hexadezimal 0x000d), ein Zeilenvorschub (hexadezimal 0x000a) oder den Wert des der <ph id="ph1">&lt;xref:System.Environment.NewLine%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>The returned string does not contain the terminating character(s).</source>
          <target state="translated">Die zurückgegebene Zeichenfolge enthält keine die abschließenden Zeichen.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>By default, the method reads input from a 256-character input buffer.</source>
          <target state="translated">Die Methode liest standardmäßig Eingabe aus einem Eingabepuffer 256 Zeichen.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>Because this includes the <ph id="ph1">&lt;xref:System.Environment.NewLine%2A?displayProperty=nameWithType&gt;</ph> character(s), the method can read lines that contain up to 254 characters.</source>
          <target state="translated">Da dies schließt die <ph id="ph1">&lt;xref:System.Environment.NewLine%2A?displayProperty=nameWithType&gt;</ph> Zeichen, die die Methode kann lesen Zeilen, die bis zu 254 Zeichen enthalten.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>To read longer lines, call the <ph id="ph1">&lt;xref:System.Console.OpenStandardInput%28System.Int32%29&gt;</ph> method.</source>
          <target state="translated">Um mehr Zeilen zu lesen, rufen Sie die <ph id="ph1">&lt;xref:System.Console.OpenStandardInput%28System.Int32%29&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>The <ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> method executes synchronously.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> Methode wird synchron ausgeführt.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>That is, it blocks until a line is read or the Ctrl+Z keyboard combination is pressed.</source>
          <target state="translated">D. h., wird sie bis zum Lesen einer Zeile oder die Tastenkombination STRG + Z gedrückt wird.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>The <ph id="ph1">&lt;xref:System.Console.In%2A&gt;</ph> property returns a <ph id="ph2">&lt;xref:System.IO.TextReader&gt;</ph> object that represents the standard input stream and that has both a synchronous <ph id="ph3">&lt;xref:System.IO.TextReader.ReadLine%2A?displayProperty=nameWithType&gt;</ph> method and an asynchronous <ph id="ph4">&lt;xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Console.In%2A&gt;</ph> Eigenschaft gibt eine <ph id="ph2">&lt;xref:System.IO.TextReader&gt;</ph> -Objekt, das den Standardeingabestream darstellt und verfügt, die über eine synchrone <ph id="ph3">&lt;xref:System.IO.TextReader.ReadLine%2A?displayProperty=nameWithType&gt;</ph> -Methode und eine asynchrone <ph id="ph4">&lt;xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>However, when used as the console's standard input stream, the <ph id="ph1">&lt;xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType&gt;</ph> executes synchronously rather than asynchronously and returns a <ph id="ph2">`Task&lt;String&gt;`</ph> only after the read operation has completed.</source>
          <target state="translated">Jedoch, wenn es als Standardeingabestream der Konsole verwendet die <ph id="ph1">&lt;xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType&gt;</ph> führt synchron statt asynchron und gibt eine <ph id="ph2">`Task&lt;String&gt;`</ph> erst nach Abschluss des Lesevorgangs hat.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>If this method throws an <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exception, the reader's position in the underlying <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> object is advanced by the number of characters the method was able to read, but the characters already read into the internal <ph id="ph3">&lt;xref:System.Console.ReadLine%2A&gt;</ph> buffer are discarded.</source>
          <target state="translated">Wenn diese Methode löst eine <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> Ausnahme, die Position des Readers in der zugrunde liegenden <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> Objekt wird durch die Anzahl der Zeichen, die die Methode wurde lesen, aber die bereits in den internen gelesenen Zeichen erweiterte <ph id="ph3">&lt;xref:System.Console.ReadLine%2A&gt;</ph> Puffer werden verworfen.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>Since the position of the reader in the stream cannot be changed, the characters already read are unrecoverable, and can be accessed only by reinitializing the <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph>.</source>
          <target state="translated">Da die Position des Readers im Stream nicht geändert werden kann, die bereits gelesenen Zeichen nicht behebbar sind, und möglich, die nur durch erneutes Initialisieren der <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>If the initial position within the stream is unknown or the stream does not support seeking, the underlying <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> also needs to be reinitialized.</source>
          <target state="translated">Wenn die ursprüngliche Position im Stream unbekannt ist oder der Stream keine Suchvorgänge unterstützt, die zugrunde liegende <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> auch erneut initialisiert werden muss.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>To avoid such a situation and to produce robust code, you should use the <ph id="ph1">&lt;xref:System.Console.KeyAvailable%2A&gt;</ph> property and <ph id="ph2">&lt;xref:System.Console.ReadKey%2A&gt;</ph> method and store the read characters in a pre-allocated buffer.</source>
          <target state="translated">Um diese Situation zu vermeiden und stabile Code zu erzeugen, sollten Sie verwenden die <ph id="ph1">&lt;xref:System.Console.KeyAvailable%2A&gt;</ph> Eigenschaft und <ph id="ph2">&lt;xref:System.Console.ReadKey%2A&gt;</ph> -Methode und Speicher die gelesenen Zeichen in einem vorab zugeordneten Puffer.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>If the Ctrl+Z character is pressed when the method is reading input from the console, the method returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Wenn Sie STRG + z gedrückt wird, wenn die Methode Lesen von Eingaben über die Konsole ist, gibt die Methode <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>This enables the user to prevent further keyboard input when the <ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> method is called in a loop.</source>
          <target state="translated">Dadurch kann der Benutzer zu verhindern, dass weitere Tastatur Eingabe Wenn die <ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> Methode in einer Schleife aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>The following example illustrates this scenario.</source>
          <target state="translated">Im folgende Beispiel wird dieses Szenario veranschaulicht.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>The following example requires two command line arguments: the name of an existing text file, and the name of a file to write the output to.</source>
          <target state="translated">Das folgende Beispiel erfordert zwei Befehlszeilenargumente: den Namen einer vorhandenen Textdatei, und der Name einer Datei an die Ausgabe zu schreiben.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>It opens the existing text file and redirects the standard input from the keyboard to that file.</source>
          <target state="translated">Es wird die vorhandene Textdatei geöffnet und leitet die Standardeingabe über die Tastatur auf diese Datei.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>It also redirects the standard output from the console to the output file.</source>
          <target state="translated">Er leitet auch die Standardausgabe aus der Konsole in die Ausgabedatei.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>It then uses the <ph id="ph1">&lt;xref:System.Console.ReadLine%2A?displayProperty=nameWithType&gt;</ph> method to read each line in the file, replaces every sequence of four spaces with a tab character, and uses the <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> method to write the result to the output file.</source>
          <target state="translated">Es verwendet dann die <ph id="ph1">&lt;xref:System.Console.ReadLine%2A?displayProperty=nameWithType&gt;</ph> Methode, um jede Zeile in der Datei lesen jeder Sequenz von vier Leerzeichen durch ein Tabstoppzeichen ersetzt, und verwendet die <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> Methode, um das Ergebnis in die Ausgabedatei zu schreiben.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" uid="M:System.Console.ReadLine">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" uid="M:System.Console.ReadLine">
          <source>There is insufficient memory to allocate a buffer for the returned string.</source>
          <target state="translated">Es ist nicht genügend Speicher vorhanden, um einen Puffer für die zurückgegebene Zeichenfolge zuzuordnen.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" uid="M:System.Console.ReadLine">
          <source>The number of characters in the next line of characters is greater than <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated">Die Anzahl der Zeichen in der nächsten Zeile von Zeichen ist größer als <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" uid="M:System.Console.ResetColor">
          <source>Sets the foreground and background console colors to their defaults.</source>
          <target state="translated">Legt die Vordergrund- und Hintergrundkonsolenfarben auf die entsprechenden Standardwerte fest.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ResetColor">
          <source>The foreground and background colors are restored to the colors that existed when the current process began.</source>
          <target state="translated">Die Vordergrund- und Hintergrundfarben werden die Farben wiederhergestellt, die vorhanden waren, wenn der aktuelle Prozess gestartet wurde.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ResetColor">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Console.ForegroundColor%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.BackgroundColor%2A&gt;</ph> properties.</source>
          <target state="translated">Weitere Informationen finden Sie unter der <ph id="ph1">&lt;xref:System.Console.ForegroundColor%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Console.BackgroundColor%2A&gt;</ph> Eigenschaften.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ResetColor">
          <source>The following example saves the values of the <ph id="ph1">&lt;xref:System.ConsoleColor&gt;</ph> enumeration to an array and stores the current values of the <ph id="ph2">&lt;xref:System.Console.BackgroundColor%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Console.ForegroundColor%2A&gt;</ph> properties to variables.</source>
          <target state="translated">Im folgende Beispiel speichert die Werte der <ph id="ph1">&lt;xref:System.ConsoleColor&gt;</ph> Enumeration in ein Array und speichert die aktuellen Werte von der <ph id="ph2">&lt;xref:System.Console.BackgroundColor%2A&gt;</ph> und <ph id="ph3">&lt;xref:System.Console.ForegroundColor%2A&gt;</ph> Eigenschaften an Variablen.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ResetColor">
          <source>It then changes the foreground color to each color in the <ph id="ph1">&lt;xref:System.ConsoleColor&gt;</ph> enumeration except to the color that matches the current background, and it changes the background color to each color in the <ph id="ph2">&lt;xref:System.ConsoleColor&gt;</ph> enumeration except to the color that matches the current foreground.</source>
          <target state="translated">Anschließend wird die Vordergrundfarbe für jede Farbe in der <ph id="ph1">&lt;xref:System.ConsoleColor&gt;</ph> Enumeration, mit der Ausnahme, die Farbe, die mit den aktuellen Hintergrund übereinstimmt, und die Farbe des Hintergrunds auf jede Farbe in ändert der <ph id="ph2">&lt;xref:System.ConsoleColor&gt;</ph> Enumeration, außer auf die Farbe, entspricht die aktuelle Vordergrundfarbe.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ResetColor">
          <source>(If the foreground color is the same as the background color, the text isn't visible.) Finally, it calls the <ph id="ph1">&lt;xref:System.Console.ResetColor%2A&gt;</ph> method to restore the original console colors.</source>
          <target state="translated">(Wenn die Vordergrundfarbe für die Farbe des Hintergrunds identisch ist, der Text nicht sichtbar ist.) Zum Schluss ruft es die <ph id="ph1">&lt;xref:System.Console.ResetColor%2A&gt;</ph> Verfahren zum Wiederherstellen der ursprünglichen konsolenfarben.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" uid="M:System.Console.ResetColor">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">Der Benutzer verfügt nicht über die erforderliche Berechtigung, um diese Aktion auszuführen.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" uid="M:System.Console.ResetColor">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ResetColor">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ResetColor">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source>The width of the buffer area measured in columns.</source>
          <target state="translated">Die Breite des Pufferbereichs in Spalten.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source>The height of the buffer area measured in rows.</source>
          <target state="translated">Die Höhe des Pufferbereichs in Zeilen.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source>Sets the height and width of the screen buffer area to the specified values.</source>
          <target state="translated">Legt die Höhe und die Breite des Bildschirmpufferbereichs auf die angegebenen Werte fest.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Console.WindowTop%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Console.WindowWidth%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Console.WindowHeight%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Console.BufferWidth%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Console.BufferHeight%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Console.CursorVisible%2A&gt;</ph> properties; and the <ph id="ph8">&lt;xref:System.Console.SetWindowPosition%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.Console.SetBufferSize%2A&gt;</ph>, and <ph id="ph10">&lt;xref:System.Console.ReadKey%2A&gt;</ph> methods.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Console.WindowTop%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Console.WindowWidth%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Console.WindowHeight%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Console.BufferWidth%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Console.BufferHeight%2A&gt;</ph>, und <ph id="ph7">&lt;xref:System.Console.CursorVisible%2A&gt;</ph> Eigenschaften und die <ph id="ph8">&lt;xref:System.Console.SetWindowPosition%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.Console.SetBufferSize%2A&gt;</ph>, und <ph id="ph10">&lt;xref:System.Console.ReadKey%2A&gt;</ph> Methoden.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source>The example draws a grid pattern in the screen buffer based on the screen buffer width.</source>
          <target state="translated">Im Beispiel zeichnet eine Rasterstruktur im Bildschirmpuffer basierend auf die Bildschirmbreite für die Puffer.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source>Then the example moves the console window in response to which of the UP ARROW, DOWN ARROW, LEFT ARROW, or RIGHT ARROW console keys is pressed.</source>
          <target state="translated">Danach verschiebt im Beispiel wird das Konsolenfenster als Antwort auf die von der nach-oben, nach-unten, links oder nach-rechts-Konsole-Taste gedrückt wird.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source>The grid pattern helps you see the movement of the console window relative to the screen buffer.</source>
          <target state="translated">Das Grid-Muster können Sie die Verschiebung des Konsolenfensters relativ zum Bildschirmpuffer sehen.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="height" /&gt;</ph> or <ph id="ph2">&lt;paramref name="width" /&gt;</ph> is less than or equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="height" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="width" /&gt;</ph> ist kleiner oder gleich 0 (null).</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="height" /&gt;</ph> or <ph id="ph2">&lt;paramref name="width" /&gt;</ph> is greater than or equal to <ph id="ph3">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="height" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="width" /&gt;</ph> ist größer oder gleich <ph id="ph3">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="width" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="P:System.Console.WindowLeft" /&gt;</ph><ph id="ph3"> + </ph><ph id="ph4">&lt;see cref="P:System.Console.WindowWidth" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="width" /&gt;</ph> ist kleiner als <ph id="ph2">&lt;see cref="P:System.Console.WindowLeft" /&gt;</ph><ph id="ph3"> + </ph><ph id="ph4">&lt;see cref="P:System.Console.WindowWidth" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="height" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="P:System.Console.WindowTop" /&gt;</ph><ph id="ph3"> + </ph><ph id="ph4">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="height" /&gt;</ph> ist kleiner als <ph id="ph2">&lt;see cref="P:System.Console.WindowTop" /&gt;</ph><ph id="ph3"> + </ph><ph id="ph4">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">Der Benutzer verfügt nicht über die erforderliche Berechtigung, um diese Aktion auszuführen.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>The column position of the cursor.</source>
          <target state="translated">Die Spaltenposition des Cursors.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>Columns are numbered from left to right starting at 0.</source>
          <target state="translated">Spalten werden von links nach rechts beginnend mit 0 nummeriert.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>The row position of the cursor.</source>
          <target state="translated">Die Zeilenposition des Cursors.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>Rows are numbered from top to bottom starting at 0.</source>
          <target state="translated">Zeilen werden von oben nach unten nummeriert und beginnen mit 0.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>Sets the position of the cursor.</source>
          <target state="translated">Legt die Position des Cursors fest.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>Use the <ph id="ph1">&lt;xref:System.Console.SetCursorPosition%2A&gt;</ph> method to specify where the next write operation in the console window is to begin.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:System.Console.SetCursorPosition%2A&gt;</ph> Methode, um anzugeben, wo der nächste Schreibvorgang im Konsolenfenster begonnen werden soll.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>If the specified cursor position is outside the area that is currently visible in the console window, the window origin changes automatically to make the cursor visible.</source>
          <target state="translated">Wenn die angegebene Cursorposition außerhalb des Bereichs, die derzeit im Konsolenfenster angezeigt wird ist, ändert den Fensterursprung automatisch aus, um den Cursor sichtbar zu machen.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>The cursor automatically moves to the next character position each time a character is written to the console window.</source>
          <target state="translated">Der Cursor wird automatisch verschoben, auf die nächste Zeichenposition jedes Mal ein Zeichen in das Konsolenfenster geschrieben wird.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>If the cursor is at the bottom right character position of the console window, the next write operation causes the console window to scroll so the cursor remains visible.</source>
          <target state="translated">Wenn der Cursor an der rechten unteren Zeichenposition des Konsolenfensters befindet, das nächste schreiben verursacht das Konsolenfenster scrollen, damit der Cursor sichtbar bleibt.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>If you want to write a character to the bottom right character position without causing the console window to scroll, use the <ph id="ph1">&lt;xref:System.Console.MoveBufferArea%2A&gt;</ph> method to move a character to that position.</source>
          <target state="translated">Wenn Sie ein Zeichen in der unteren rechten Zeichenposition schreiben, ohne dass das Konsolenfenster scrollen, verwenden Sie möchten die <ph id="ph1">&lt;xref:System.Console.MoveBufferArea%2A&gt;</ph> Methode, um ein Zeichen in dieser Position zu verschieben.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>This example demonstrates the <ph id="ph1">&lt;xref:System.Console.CursorLeft%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.CursorTop%2A&gt;</ph> properties, and the <ph id="ph3">&lt;xref:System.Console.SetCursorPosition%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Console.Clear%2A&gt;</ph> methods.</source>
          <target state="translated">Dieses Beispiel zeigt die <ph id="ph1">&lt;xref:System.Console.CursorLeft%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Console.CursorTop%2A&gt;</ph> Eigenschaften, und die <ph id="ph3">&lt;xref:System.Console.SetCursorPosition%2A&gt;</ph> und <ph id="ph4">&lt;xref:System.Console.Clear%2A&gt;</ph> Methoden.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>The example positions the cursor, which determines where the next write will occur, to draw a 5 character by 5 character rectangle using a combination of "+", "&amp;#124;", and "-" strings.</source>
          <target state="translated">Im Beispiel wird der Cursor, der bestimmt, wo der nächste Schreibvorgang erfolgt ein 5 Zeichen durch eine Kombination von 5 Zeichen-Rechteck gezeichnet werden soll, "+", "&amp;#124;", und "-" Zeichenfolgen.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>Note that the rectangle could be drawn with fewer steps using a combination of other strings.</source>
          <target state="translated">Beachten Sie, dass das Rechteck mit weniger Schritte, die mit einer Kombination aus anderen Zeichenfolgen werden konnte.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="left" /&gt;</ph> or <ph id="ph2">&lt;paramref name="top" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="top" /&gt;</ph> ist kleiner als 0.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="left" /&gt;</ph> is greater than or equal to <ph id="ph2">&lt;see cref="P:System.Console.BufferWidth" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph> ist größer als oder gleich <ph id="ph2">&lt;see cref="P:System.Console.BufferWidth" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="top" /&gt;</ph> is greater than or equal to <ph id="ph2">&lt;see cref="P:System.Console.BufferHeight" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="top" /&gt;</ph> ist größer gleich <ph id="ph2">&lt;see cref="P:System.Console.BufferHeight" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">Der Benutzer verfügt nicht über die erforderliche Berechtigung, um diese Aktion auszuführen.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" uid="M:System.Console.SetError(System.IO.TextWriter)">
          <source>A stream that is the new standard error output.</source>
          <target state="translated">Ein Datenstrom, der die neue Standardfehlerausgabe darstellt.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" uid="M:System.Console.SetError(System.IO.TextWriter)">
          <source>Sets the <ph id="ph1">&lt;see cref="P:System.Console.Error" /&gt;</ph> property to the specified <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> object.</source>
          <target state="translated">Legt die <ph id="ph1">&lt;see cref="P:System.Console.Error" /&gt;</ph>-Eigenschaft auf den angegebenen <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> fest.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetError(System.IO.TextWriter)">
          <source>By default, the <ph id="ph1">&lt;xref:System.Console.Error%2A&gt;</ph> property is set to the standard error output stream.</source>
          <target state="translated">Wird standardmäßig die <ph id="ph1">&lt;xref:System.Console.Error%2A&gt;</ph> Eigenschaft auf den Standard-Fehlerausgabestream festgelegt ist.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetError(System.IO.TextWriter)">
          <source>A <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> that encapsulates a <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> can be used to send error messages to a file.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> , kapselt einen <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> kann verwendet werden, um Fehlermeldungen in eine Datei senden.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetError(System.IO.TextWriter)">
          <source>The following example shows how to redirect the standard error stream to a file.</source>
          <target state="translated">Im folgende Beispiel wird gezeigt, wie den Standardfehlerstream in eine Datei umgeleitet wird.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" uid="M:System.Console.SetError(System.IO.TextWriter)">
          <source><ph id="ph1">&lt;paramref name="newError" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="newError" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" uid="M:System.Console.SetError(System.IO.TextWriter)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetError(System.IO.TextWriter)">
          <source>for calling unmanaged code.</source>
          <target state="translated">zum Aufrufen von nicht verwalteten Codes.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetError(System.IO.TextWriter)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" uid="M:System.Console.SetIn(System.IO.TextReader)">
          <source>A stream that is the new standard input.</source>
          <target state="translated">Ein Datenstrom, der die neue Standardeingabe darstellt.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" uid="M:System.Console.SetIn(System.IO.TextReader)">
          <source>Sets the <ph id="ph1">&lt;see cref="P:System.Console.In" /&gt;</ph> property to the specified <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object.</source>
          <target state="translated">Legt die <ph id="ph1">&lt;see cref="P:System.Console.In" /&gt;</ph>-Eigenschaft auf den angegebenen <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> fest.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetIn(System.IO.TextReader)">
          <source>By default, the <ph id="ph1">&lt;xref:System.Console.In%2A&gt;</ph> property is set to the standard input stream.</source>
          <target state="translated">Wird standardmäßig die <ph id="ph1">&lt;xref:System.Console.In%2A&gt;</ph> Eigenschaft auf den Standardeingabestream festgelegt ist.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetIn(System.IO.TextReader)">
          <source>A <ph id="ph1">&lt;xref:System.IO.StreamReader&gt;</ph> that encapsulates a <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> can be used to receive input from a file.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.IO.StreamReader&gt;</ph> , kapselt einen <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> zum Empfangen von Eingaben aus einer Datei verwendet werden können.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetIn(System.IO.TextReader)">
          <source>The following example illustrates the use of the <ph id="ph1">&lt;xref:System.Console.SetIn%2A&gt;</ph> method.</source>
          <target state="translated">Im folgenden Beispiel wird die Verwendung der <ph id="ph1">&lt;xref:System.Console.SetIn%2A&gt;</ph>-Methode veranschaulicht.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetIn(System.IO.TextReader)">
          <source>It replaces four consecutive space characters in a string with a tab character.</source>
          <target state="translated">Hierdurch werden vier aufeinander folgende Leerzeichen in einer Zeichenfolge durch ein Tabstoppzeichen ersetzt.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetIn(System.IO.TextReader)">
          <source>To run it, you must supply two command line arguments.</source>
          <target state="translated">Um es auszuführen, müssen Sie zwei Befehlszeilenargumente angeben.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetIn(System.IO.TextReader)">
          <source>The first is the name of an existing text file to redirect the standard input stream to.</source>
          <target state="translated">Das erste ist der Name einer vorhandenen Textdatei, in die der Standardeingabestream umgeleitet wird.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetIn(System.IO.TextReader)">
          <source>The second is the name of a file to redirect the standard output stream to.</source>
          <target state="translated">Das zweite ist der Name einer Datei, in die der Standardausgabestream umgeleitet wird.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetIn(System.IO.TextReader)">
          <source>This file need not exist.</source>
          <target state="translated">Diese Datei muss nicht vorhanden sein.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetIn(System.IO.TextReader)">
          <source>If it does, its contents will be overwritten.</source>
          <target state="translated">Wenn das der Fall ist, wird der Inhalt überschrieben.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" uid="M:System.Console.SetIn(System.IO.TextReader)">
          <source><ph id="ph1">&lt;paramref name="newIn" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="newIn" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" uid="M:System.Console.SetIn(System.IO.TextReader)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetIn(System.IO.TextReader)">
          <source>for calling unmanaged code.</source>
          <target state="translated">zum Aufrufen von nicht verwalteten Codes.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetIn(System.IO.TextReader)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" uid="M:System.Console.SetOut(System.IO.TextWriter)">
          <source>A stream that is the new standard output.</source>
          <target state="translated">Ein Datenstrom, der die neue Standardausgabe darstellt.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" uid="M:System.Console.SetOut(System.IO.TextWriter)">
          <source>Sets the <ph id="ph1">&lt;see cref="P:System.Console.Out" /&gt;</ph> property to the specified <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> object.</source>
          <target state="translated">Legt die <ph id="ph1">&lt;see cref="P:System.Console.Out" /&gt;</ph>-Eigenschaft auf den angegebenen <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> fest.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetOut(System.IO.TextWriter)">
          <source>By default, the <ph id="ph1">&lt;xref:System.Console.Out%2A&gt;</ph> property is set to the standard output stream.</source>
          <target state="translated">Wird standardmäßig die <ph id="ph1">&lt;xref:System.Console.Out%2A&gt;</ph> Eigenschaft wird festgelegt, in den Standardausgabestream.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetOut(System.IO.TextWriter)">
          <source>A <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> that encapsulates a <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> can be used to send output to a file.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> , kapselt einen <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> zum Senden der Ausgabe in eine Datei verwendet werden können.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetOut(System.IO.TextWriter)">
          <source>For example:</source>
          <target state="translated">Zum Beispiel:</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetOut(System.IO.TextWriter)">
          <source>The following example illustrates the use of the <ph id="ph1">&lt;xref:System.Console.SetOut%2A&gt;</ph> method.</source>
          <target state="translated">Im folgenden Beispiel wird die Verwendung der <ph id="ph1">&lt;xref:System.Console.SetOut%2A&gt;</ph>-Methode veranschaulicht.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetOut(System.IO.TextWriter)">
          <source>It replaces four consecutive space characters in a string with a tab character.</source>
          <target state="translated">Hierdurch werden vier aufeinander folgende Leerzeichen in einer Zeichenfolge durch ein Tabstoppzeichen ersetzt.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetOut(System.IO.TextWriter)">
          <source>To run it, you must supply two command line arguments.</source>
          <target state="translated">Um es auszuführen, müssen Sie zwei Befehlszeilenargumente angeben.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetOut(System.IO.TextWriter)">
          <source>The first is the name of an existing text file to redirect the standard input stream to.</source>
          <target state="translated">Das erste ist der Name einer vorhandenen Textdatei, in die der Standardeingabestream umgeleitet wird.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetOut(System.IO.TextWriter)">
          <source>The second is the name of a file to redirect the standard output stream to.</source>
          <target state="translated">Das zweite ist der Name einer Datei, in die der Standardausgabestream umgeleitet wird.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetOut(System.IO.TextWriter)">
          <source>This file need not exist.</source>
          <target state="translated">Diese Datei muss nicht vorhanden sein.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetOut(System.IO.TextWriter)">
          <source>If it does, its contents will be overwritten.</source>
          <target state="translated">Wenn das der Fall ist, wird der Inhalt überschrieben.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" uid="M:System.Console.SetOut(System.IO.TextWriter)">
          <source><ph id="ph1">&lt;paramref name="newOut" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="newOut" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" uid="M:System.Console.SetOut(System.IO.TextWriter)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetOut(System.IO.TextWriter)">
          <source>for calling unmanaged code.</source>
          <target state="translated">zum Aufrufen von nicht verwalteten Codes.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetOut(System.IO.TextWriter)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>The column position of the upper left  corner of the console window.</source>
          <target state="translated">Die Spaltenposition der linken oberen Ecke des Konsolenfensters.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>The row position of the upper left corner of the console window.</source>
          <target state="translated">Die Zeilenposition der linken oberen Ecke des Konsolenfensters.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>Sets the position of the console window relative to the screen buffer.</source>
          <target state="translated">Legt die Position des Konsolenfensters relativ zum Bildschirmpuffer fest.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>The operating system window displays the console window, and the console window displays a portion of the screen buffer.</source>
          <target state="translated">Das Betriebssystem-Fenster zeigt das Konsolenfenster und das Konsolenfenster zeigt einen Teil des Bildschirmpuffers.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Console.SetWindowPosition%2A&gt;</ph> method affects the position of the console window relative to the screen buffer, but does not affect the position of the operating system window relative to the desktop.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Console.SetWindowPosition%2A&gt;</ph> Methode wirkt sich auf die Position des Konsolenfensters relativ zum Bildschirmpuffer, sondern wirkt sich nicht auf die Position des Fensters Betriebssystem in Bezug auf dem Desktop.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>The console and operating system windows generally do not affect each other.</source>
          <target state="translated">Die Windows-Konsole und Betriebssystem im Allgemeinen wirken miteinander sich nicht.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>However, if the screen buffer cannot be displayed in the current boundaries of the console window, the operating system automatically appends scroll bars to the operating system window.</source>
          <target state="translated">Allerdings Bildschirmpuffer in der aktuellen Grenzen des Konsolenfensters angezeigt werden kann, fügt das Betriebssystem automatisch Bildlaufleisten an das Betriebssystem-Fenster.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>In that case, moving the operating system window scroll bars affects the position of the console window, and moving the console window with the <ph id="ph1">&lt;xref:System.Console.SetWindowPosition%2A&gt;</ph> method affects the position of the operating system window scroll bars.</source>
          <target state="translated">In diesem Fall verschieben Sie die Bildlaufleisten des Betriebssystems wirkt sich auf die Position des Konsolenfensters, und verschieben Sie das Konsolenfenster mit dem <ph id="ph1">&lt;xref:System.Console.SetWindowPosition%2A&gt;</ph> Methode wirkt sich auf die Position des Bildlaufleisten des Betriebssystems.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Console.WindowTop%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Console.WindowWidth%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Console.WindowHeight%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Console.BufferWidth%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Console.BufferHeight%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Console.CursorVisible%2A&gt;</ph> properties; and the <ph id="ph8">&lt;xref:System.Console.SetWindowPosition%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.Console.SetBufferSize%2A&gt;</ph>, and <ph id="ph10">&lt;xref:System.Console.ReadKey%2A&gt;</ph> methods.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Console.WindowTop%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Console.WindowWidth%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Console.WindowHeight%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Console.BufferWidth%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Console.BufferHeight%2A&gt;</ph>, und <ph id="ph7">&lt;xref:System.Console.CursorVisible%2A&gt;</ph> Eigenschaften und die <ph id="ph8">&lt;xref:System.Console.SetWindowPosition%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.Console.SetBufferSize%2A&gt;</ph>, und <ph id="ph10">&lt;xref:System.Console.ReadKey%2A&gt;</ph> Methoden.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>The example draws a grid pattern in the screen buffer based on the screen buffer width.</source>
          <target state="translated">Im Beispiel zeichnet eine Rasterstruktur im Bildschirmpuffer basierend auf die Bildschirmbreite für die Puffer.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>Then the example moves the console window in response to which of the UP ARROW, DOWN ARROW, LEFT ARROW, or RIGHT ARROW console keys is pressed.</source>
          <target state="translated">Danach verschiebt im Beispiel wird das Konsolenfenster als Antwort auf die von der nach-oben, nach-unten, links oder nach-rechts-Konsole-Taste gedrückt wird.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>The grid pattern helps you see the movement of the console window relative to the screen buffer.</source>
          <target state="translated">Das Grid-Muster können Sie die Verschiebung des Konsolenfensters relativ zum Bildschirmpuffer sehen.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="left" /&gt;</ph> or <ph id="ph2">&lt;paramref name="top" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="top" /&gt;</ph> ist kleiner als 0.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="left" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;see cref="P:System.Console.WindowWidth" /&gt;</ph> is greater than <ph id="ph4">&lt;see cref="P:System.Console.BufferWidth" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;see cref="P:System.Console.WindowWidth" /&gt;</ph> ist größer als <ph id="ph4">&lt;see cref="P:System.Console.BufferWidth" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="top" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph> is greater than <ph id="ph4">&lt;see cref="P:System.Console.BufferHeight" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="top" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph> ist größer als <ph id="ph4">&lt;see cref="P:System.Console.BufferHeight" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">Der Benutzer verfügt nicht über die erforderliche Berechtigung, um diese Aktion auszuführen.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowSize(System.Int32,System.Int32)">
          <source>The width of the console window measured in columns.</source>
          <target state="translated">Die Breite des Konsolenfensters in Spalten.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowSize(System.Int32,System.Int32)">
          <source>The height of the console window measured in rows.</source>
          <target state="translated">Die Höhe des Konsolenfensters in Zeilen.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowSize(System.Int32,System.Int32)">
          <source>Sets the height and width of the console window to the specified values.</source>
          <target state="translated">Legt die Höhe und die Breite des Konsolenfensters auf die angegebenen Werte fest.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowSize(System.Int32,System.Int32)">
          <source>This example demonstrates the <ph id="ph1">&lt;xref:System.Console.SetWindowSize%2A&gt;</ph> method, and the <ph id="ph2">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> properties.</source>
          <target state="translated">Dieses Beispiel zeigt die <ph id="ph1">&lt;xref:System.Console.SetWindowSize%2A&gt;</ph> -Methode, und die <ph id="ph2">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> und <ph id="ph3">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> Eigenschaften.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowSize(System.Int32,System.Int32)">
          <source>You must run the example to see the full effect of changing the console window size.</source>
          <target state="translated">Sie müssen das Beispiel an, um die vollständigen Auswirkungen der Änderung der Größe des Konsolenfenster finden Sie unter ausführen.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowSize(System.Int32,System.Int32)">
          <source>The example reports the dimensions of a console window set to 85 columns and 43 rows, then waits for a key to be pressed.</source>
          <target state="translated">Im Beispiel meldet die Dimensionen eines Konsolenfensters 85 Spalten und 43 Zeilen festgelegt und dann eine Taste gedrückt, wartet.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowSize(System.Int32,System.Int32)">
          <source>When any key is pressed, the dimensions of the console window are halved, the new dimensions are reported, and the example waits for another key press.</source>
          <target state="translated">Wenn eine beliebige Taste gedrückt wird, werden die Dimensionen des Konsolenfensters halbiert, die neuen Dimensionen werden gemeldet, und im Beispiel wird eine andere Drücken einer Taste gewartet.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowSize(System.Int32,System.Int32)">
          <source>Finally, when any key is pressed, the console window is restored to its original dimensions and the example terminates.</source>
          <target state="translated">Wenn eine beliebige Taste gedrückt wird, wird im Konsolenfenster die ursprünglichen Proportionen wiederhergestellt und zum Schluss im Beispiel wird beendet.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowSize(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="width" /&gt;</ph> or <ph id="ph2">&lt;paramref name="height" /&gt;</ph> is less than or equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="width" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="height" /&gt;</ph> ist kleiner oder gleich 0 (null).</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowSize(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowSize(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="width" /&gt;</ph> plus <ph id="ph2">&lt;see cref="P:System.Console.WindowLeft" /&gt;</ph> or <ph id="ph3">&lt;paramref name="height" /&gt;</ph> plus <ph id="ph4">&lt;see cref="P:System.Console.WindowTop" /&gt;</ph> is greater than or equal to <ph id="ph5">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="width" /&gt;</ph> plus <ph id="ph2">&lt;see cref="P:System.Console.WindowLeft" /&gt;</ph> oder <ph id="ph3">&lt;paramref name="height" /&gt;</ph> plus <ph id="ph4">&lt;see cref="P:System.Console.WindowTop" /&gt;</ph> ist größer oder gleich <ph id="ph5">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowSize(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowSize(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="width" /&gt;</ph> or <ph id="ph2">&lt;paramref name="height" /&gt;</ph> is greater than the largest possible window width or height for the current screen resolution and console font.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="width" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="height" /&gt;</ph> ist größer als die größtmögliche Fensterbreite oder -höhe für die aktuelle Bildschirmauflösung und Konsolenschriftart.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowSize(System.Int32,System.Int32)">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">Der Benutzer verfügt nicht über die erforderliche Berechtigung, um diese Aktion auszuführen.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowSize(System.Int32,System.Int32)">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowSize(System.Int32,System.Int32)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowSize(System.Int32,System.Int32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" uid="P:System.Console.Title">
          <source>Gets or sets the title to display in the console title bar.</source>
          <target state="translated">Ruft den auf der Konsolentitelleiste anzuzeigenden Titel ab oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Title">
          <source>The string to be displayed in the title bar of the console.</source>
          <target state="translated">Die Zeichenfolge, die auf der Titelleiste der Konsole angezeigt werden soll.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Title">
          <source>The maximum length of the title string is 24500 characters.</source>
          <target state="translated">Die maximale Länge der Titelzeichenfolge beträgt 24500 Zeichen.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Title">
          <source>This example demonstrates the <ph id="ph1">&lt;xref:System.Console.Title%2A&gt;</ph> property.</source>
          <target state="translated">Dieses Beispiel zeigt die <ph id="ph1">&lt;xref:System.Console.Title%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Title">
          <source>The example displays the current title of the operating system window, waits for a key press, then displays a new title.</source>
          <target state="translated">Im Beispiel zeigt den aktuellen Titel des Fensters Betriebssystem, ein Tastendruck wartet und dann ein neuer Titel angezeigt.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" uid="P:System.Console.Title">
          <source>In a get operation, the retrieved title is longer than 24500 characters.</source>
          <target state="translated">In einem Get-Vorgang umfasst der abgerufene Titel mehr als 24500 Zeichen.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" uid="P:System.Console.Title">
          <source>In a set operation, the specified title is longer than 24500 characters.</source>
          <target state="translated">In einem Set-Vorgang umfasst der angegebene Titel mehr als 24500 Zeichen.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" uid="P:System.Console.Title">
          <source>In a set operation, the specified title is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">In einem Set-Vorgang ist der angegebene Titel <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" uid="P:System.Console.Title">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Title">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Title">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" uid="P:System.Console.TreatControlCAsInput">
          <source>Gets or sets a value indicating whether the combination of the <ph id="ph1">&lt;see cref="F:System.ConsoleModifiers.Control" /&gt;</ph> modifier key and <ph id="ph2">&lt;see cref="F:System.ConsoleKey.C" /&gt;</ph> console key (Ctrl+C) is treated as ordinary input or as an interruption that is handled by the operating system.</source>
          <target state="translated">Ruft einen Wert ab oder legt diesen fest, der angibt, ob die Kombination der <ph id="ph1">&lt;see cref="F:System.ConsoleModifiers.Control" /&gt;</ph>-Modifizierertaste und der <ph id="ph2">&lt;see cref="F:System.ConsoleKey.C" /&gt;</ph>-Konsolentaste (STRG+C) als normale Eingabe oder als vom Betriebssystem zu behandelnde Unterbrechung behandelt wird.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.TreatControlCAsInput">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if Ctrl+C is treated as ordinary input; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn STRG+C als normale Eingabe behandelt wird, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.TreatControlCAsInput">
          <source>If the value of the <ph id="ph1">&lt;xref:System.Console.TreatControlCAsInput%2A&gt;</ph> property is <ph id="ph2">`false`</ph> and Ctrl+C is pressed, the pressed keys are not stored in the input buffer and the operating system terminates the currently executing process.</source>
          <target state="translated">Wenn der Wert der <ph id="ph1">&lt;xref:System.Console.TreatControlCAsInput%2A&gt;</ph> Eigenschaft ist <ph id="ph2">`false`</ph> und STRG + C gedrückt wird, der gedrückten Schlüssel nicht im Eingabepuffer gespeichert werden und das Betriebssystem beendet den derzeit ausgeführten Prozess.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.TreatControlCAsInput">
          <source>This is the default value.</source>
          <target state="translated">Dies ist der Standardwert.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.TreatControlCAsInput">
          <source>Use this property judiciously because setting it to <ph id="ph1">`true`</ph> has such a dramatic effect.</source>
          <target state="translated">Verwenden Sie diese Eigenschaft Umsicht, da es durch Festlegen auf <ph id="ph1">`true`</ph> solche einen entscheidenden Einfluss hat.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.TreatControlCAsInput">
          <source>Most users expect Ctrl+C to terminate a console application.</source>
          <target state="translated">Die meisten Benutzer erwarten, STRG + C, um eine Konsolenanwendung zu beenden.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.TreatControlCAsInput">
          <source>If you disable the effect of Ctrl+C, the user must remember to use Ctrl+Break to terminate the application, which is a less familiar key combination.</source>
          <target state="translated">Wenn Sie die Auswirkungen von STRG + C deaktivieren, muss die Benutzer daran denken, STRG + UNTBR verwenden, um die Anwendung zu beenden, die eine weniger bekannten Tastenkombination ist.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.TreatControlCAsInput">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Console.TreatControlCAsInput%2A&gt;</ph> property.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die <ph id="ph1">&lt;xref:System.Console.TreatControlCAsInput%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" uid="P:System.Console.TreatControlCAsInput">
          <source>Unable to get or set the input mode of the console input buffer.</source>
          <target state="translated">Der Eingabemodus des Konsoleneingabepuffers kann weder abgerufen noch festgelegt werden.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.TreatControlCAsInput">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.TreatControlCAsInput">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" uid="P:System.Console.WindowHeight">
          <source>Gets or sets the height of the console window area.</source>
          <target state="translated">Ruft die Höhe des Konsolenfensterbereichs ab oder legt diese fest.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowHeight">
          <source>The height of the console window measured in rows.</source>
          <target state="translated">Die Höhe des Konsolenfensters in Zeilen.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowHeight">
          <source>Attempting to set the value of the <ph id="ph1">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> property when output is redirected throws either an <ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> or an <ph id="ph3">&lt;xref:System.IO.IOException&gt;</ph> exception.</source>
          <target state="translated">Beim Festlegen des Werts der <ph id="ph1">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> Eigenschaft, wenn die Ausgabe umgeleitet wird, löst entweder eine <ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> oder ein <ph id="ph3">&lt;xref:System.IO.IOException&gt;</ph> Ausnahme.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowHeight">
          <source>To prevent an exception, you can set the value of this property only if the <ph id="ph1">&lt;xref:System.Console.IsOutputRedirected%2A&gt;</ph> property returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Um eine Ausnahme zu verhindern, können Sie legen den Wert für diese Eigenschaft nur, wenn die <ph id="ph1">&lt;xref:System.Console.IsOutputRedirected%2A&gt;</ph> -Eigenschaft gibt <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowHeight">
          <source>This example demonstrates the <ph id="ph1">&lt;xref:System.Console.SetWindowSize%2A&gt;</ph> method, and the <ph id="ph2">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> properties.</source>
          <target state="translated">Dieses Beispiel zeigt die <ph id="ph1">&lt;xref:System.Console.SetWindowSize%2A&gt;</ph> -Methode, und die <ph id="ph2">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> und <ph id="ph3">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> Eigenschaften.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowHeight">
          <source>You must run the example to see the full effect of changing the console window size.</source>
          <target state="translated">Sie müssen das Beispiel an, um die vollständigen Auswirkungen der Änderung der Größe des Konsolenfenster finden Sie unter ausführen.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowHeight">
          <source>The example reports the dimensions of a console window set to 85 columns and 43 rows, then waits for a key press.</source>
          <target state="translated">Im Beispiel meldet die Dimensionen eines Konsolenfensters auf 85 Spalten und Zeilen 43 festgelegt und dann ein Tastendruck wartet.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowHeight">
          <source>When any key is pressed, the dimensions of the console window are halved, the new dimensions are reported, and the example waits for another key press.</source>
          <target state="translated">Wenn eine beliebige Taste gedrückt wird, werden die Dimensionen des Konsolenfensters halbiert, die neuen Dimensionen werden gemeldet, und im Beispiel wird eine andere Drücken einer Taste gewartet.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowHeight">
          <source>Finally, when any key is pressed the console window is restored to its original dimensions and the example terminates.</source>
          <target state="translated">Wenn eine beliebige Taste gedrückt wird, wird im Konsolenfenster die ursprünglichen Proportionen wiederhergestellt und zum Schluss im Beispiel wird beendet.</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" uid="P:System.Console.WindowHeight">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Console.WindowWidth" /&gt;</ph> property or the value of the <ph id="ph2">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph> property is less than or equal to 0.</source>
          <target state="translated">Der Wert der <ph id="ph1">&lt;see cref="P:System.Console.WindowWidth" /&gt;</ph>-Eigenschaft oder der Wert der <ph id="ph2">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph>-Eigenschaft muss kleiner als oder gleich 0 sein.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" uid="P:System.Console.WindowHeight">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" uid="P:System.Console.WindowHeight">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph> property plus the value of the <ph id="ph2">&lt;see cref="P:System.Console.WindowTop" /&gt;</ph> property is greater than or equal to <ph id="ph3">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</source>
          <target state="translated">Der Wert der <ph id="ph1">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph>-Eigenschaft plus dem Wert der <ph id="ph2">&lt;see cref="P:System.Console.WindowTop" /&gt;</ph>-Eigenschaft muss größer als oder gleich <ph id="ph3">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph> sein.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" uid="P:System.Console.WindowHeight">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" uid="P:System.Console.WindowHeight">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Console.WindowWidth" /&gt;</ph> property or the value of the <ph id="ph2">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph> property is greater than the largest possible window width or height for the current screen resolution and console font.</source>
          <target state="translated">Der Wert der <ph id="ph1">&lt;see cref="P:System.Console.WindowWidth" /&gt;</ph>-Eigenschaft oder der Wert der <ph id="ph2">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph>-Eigenschaft ist größer als die größtmögliche Fensterbreite oder -höhe für die aktuelle Bildschirmauflösung und Konsolenschriftart.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" uid="P:System.Console.WindowHeight">
          <source>Error reading or writing information.</source>
          <target state="translated">Fehler beim Lesen oder Schreiben von Informationen.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" uid="P:System.Console.WindowLeft">
          <source>Gets or sets the leftmost position of the console window area relative to the screen buffer.</source>
          <target state="translated">Ruft die am weitesten links stehende Position des Konsolenfensterbereichs im Verhältnis zum Bildschirmpuffer ab oder legt diese fest.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>The leftmost console window position measured in columns.</source>
          <target state="translated">Die am weitesten links stehende Konsolenfensterposition in Spalten.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>The console represents a rectangular window into a larger rectangular buffer area.</source>
          <target state="translated">Die Konsole stellt ein rechteckiges Fenster in einem größeren rechteckigen Pufferbereich dar.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>Both the window and the buffer are measured vertically by their number of rows and horizontally by their number of columns.</source>
          <target state="translated">Das Fenster und der Puffer werden vertikal nach deren Anzahl von Zeilen und horizontal nach deren Anzahl von Spalten gemessen.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>The dimensions of the buffer area are defined by the <ph id="ph1">&lt;xref:System.Console.BufferHeight%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.BufferWidth%2A&gt;</ph> properties.</source>
          <target state="translated">Die Dimensionen des Pufferbereichs werden definiert, durch die <ph id="ph1">&lt;xref:System.Console.BufferHeight%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Console.BufferWidth%2A&gt;</ph> Eigenschaften.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>The dimensions of the console area are defined by the <ph id="ph1">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> properties.</source>
          <target state="translated">Die Dimensionen der der Bereich der Konsole werden definiert, durch die <ph id="ph1">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> Eigenschaften.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>The <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> property determines which column of the buffer area is displayed in the first column of the console window.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> Eigenschaft bestimmt, welche Spalte des Pufferbereichs in der ersten Spalte des Konsolenfensters angezeigt wird.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>The value of the <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> property can range from 0 to <ph id="ph2">&lt;xref:System.Console.BufferWidth%2A&gt;</ph><ph id="ph3"> - </ph><ph id="ph4">&lt;xref:System.Console.WindowWidth%2A&gt;</ph>.</source>
          <target state="translated">Der Wert, der die <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> Eigenschaft kann im Bereich von 0 bis <ph id="ph2">&lt;xref:System.Console.BufferWidth%2A&gt;</ph> <ph id="ph3"> - </ph> <ph id="ph4">&lt;xref:System.Console.WindowWidth%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>Attempting to set it to a value outside that range throws an <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>.</source>
          <target state="translated">Beim Festlegen auf einen Wert außerhalb der, die im Bereich löst eine <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>When a console window first opens, the default value of the <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> property is zero, which indicates that the first column shown by the console corresponds to the first column (the column at position zero) in the buffer area.</source>
          <target state="translated">Wenn eine Konsolenfenster zuerst geöffnet wird, den Standardwert der <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> Eigenschaft ist 0 (null), der angibt, dass die erste Spalte (an Position 0 (null)) im Pufferbereich die erste Spalte, die von der Konsole angezeigt entspricht.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>The default width of both the console window and the buffer area is 80 columns.</source>
          <target state="translated">Die Standardbreite das Konsolenfenster und Pufferbereichs ist 80 Spalten.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>This means that the <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> property can be modified only if the console window is made narrower or the buffer area is made wider.</source>
          <target state="translated">Dies bedeutet, dass die <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> Eigenschaft kann geändert werden, nur dann, wenn das Konsolenfenster schmaler gemacht oder Pufferbereichs breiter gemacht wird.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>Note that if the width of the buffer area exceeds the width of the console window, the value of the <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> property is automatically adjusted when the user uses the horizontal scroll bar to define the window's relationship to the buffer area.</source>
          <target state="translated">Beachten Sie, dass die Breite des Pufferbereichs die Breite des Konsolenfensters, den Wert der überschreitet die <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> Eigenschaft wird automatisch angepasst, wenn der Benutzer die horizontale Bildlaufleiste verwendet, um die Beziehung des Fensters zu Pufferbereichs definieren.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>Attempting to set the value of the <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> property when output is redirected throws an <ph id="ph2">&lt;xref:System.IO.IOException&gt;</ph> exception.</source>
          <target state="translated">Beim Festlegen des Werts der <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> Eigenschaft, wenn die Ausgabe umgeleitet, löst eine <ph id="ph2">&lt;xref:System.IO.IOException&gt;</ph> Ausnahme.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>To prevent the exception, you can set the value of this property only if the <ph id="ph1">&lt;xref:System.Console.IsOutputRedirected%2A&gt;</ph> property returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Um die Ausnahme zu verhindern, können Sie legen den Wert für diese Eigenschaft nur, wenn die <ph id="ph1">&lt;xref:System.Console.IsOutputRedirected%2A&gt;</ph> -Eigenschaft gibt <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>The following example opens an 80-column console window and defines a buffer area that is 120 columns wide.</source>
          <target state="translated">Im folgenden Beispiel wird ein 80-Spalte Konsolenfenster geöffnet und definiert einen Pufferbereich,, der 120 Spalten breit ist.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>It displays information on window and buffer size, and then waits for the user to press either the LEFT ARROW key or the RIGHT ARROW key.</source>
          <target state="translated">Es zeigt Informationen zum Fenster und die Puffergröße und wartet dann darauf, dass sich der Benutzer auf die links-Taste oder der nach-rechts-Taste drücken.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>In the former case, it decrements the value of the <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> property by one if the result is a legal value.</source>
          <target state="translated">Im ersten Fall ist es verringert den Wert von der <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> Eigenschaft um eins, wenn das Ergebnis ein gültiger Wert ist.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>In the latter case, it increases the value of the <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> property by one if the result would be legal.</source>
          <target state="translated">Im letzteren Fall es erhöht den Wert des der <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> Eigenschaft um eins, wenn das Ergebnis gültig wäre.</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>Note that the example does not have to handle an <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>, because it checks that the value to be assigned to the <ph id="ph2">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> property is not negative and does not cause the sum of the <ph id="ph3">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> properties to exceed the <ph id="ph5">&lt;xref:System.Console.BufferWidth%2A&gt;</ph> property value.</source>
          <target state="translated">Im Beispiel nicht behandeln muss, eine <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>, da wird, dass überprüft der Wert zugewiesen werden die <ph id="ph2">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> -Eigenschaft ist nicht negativ und nicht dazu, dass die Summe der der <ph id="ph3">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> und <ph id="ph4">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> Eigenschaften überschreitet die <ph id="ph5">&lt;xref:System.Console.BufferWidth%2A&gt;</ph> Eigenschaftswert.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" uid="P:System.Console.WindowLeft">
          <source>In a set operation, the value to be assigned is less than zero.</source>
          <target state="translated">In einem SET-Vorgang ist der zuzuweisende Wert kleiner als 0 (null).</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" uid="P:System.Console.WindowLeft">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" uid="P:System.Console.WindowLeft">
          <source>As a result of the assignment, <ph id="ph1">&lt;see cref="P:System.Console.WindowLeft" /&gt;</ph> plus <ph id="ph2">&lt;see cref="P:System.Console.WindowWidth" /&gt;</ph> would exceed <ph id="ph3">&lt;see cref="P:System.Console.BufferWidth" /&gt;</ph>.</source>
          <target state="translated">Als Ergebnis der Zuweisung würde <ph id="ph1">&lt;see cref="P:System.Console.WindowLeft" /&gt;</ph> plus <ph id="ph2">&lt;see cref="P:System.Console.WindowWidth" /&gt;</ph> den Wert für <ph id="ph3">&lt;see cref="P:System.Console.BufferWidth" /&gt;</ph> überschreiten.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" uid="P:System.Console.WindowLeft">
          <source>Error reading or writing information.</source>
          <target state="translated">Fehler beim Lesen oder Schreiben von Informationen.</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" uid="P:System.Console.WindowTop">
          <source>Gets or sets the top position of the console window area relative to the screen buffer.</source>
          <target state="translated">Ruft die oberste Position des Konsolenfensterbereichs im Verhältnis zum Bildschirmpuffer ab oder legt diese fest.</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowTop">
          <source>The uppermost console window position measured in rows.</source>
          <target state="translated">Die oberste Konsolenfensterposition in Zeilen.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowTop">
          <source>The console represents a rectangular window into a larger rectangular buffer area.</source>
          <target state="translated">Die Konsole stellt ein rechteckiges Fenster in einem größeren rechteckigen Pufferbereich dar.</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowTop">
          <source>Both the window and the buffer are measured vertically by their number of rows and horizontally by their number of columns.</source>
          <target state="translated">Das Fenster und der Puffer werden vertikal nach deren Anzahl von Zeilen und horizontal nach deren Anzahl von Spalten gemessen.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowTop">
          <source>The dimensions of the buffer area are defined by the <ph id="ph1">&lt;xref:System.Console.BufferHeight%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.BufferWidth%2A&gt;</ph> properties.</source>
          <target state="translated">Die Dimensionen des Pufferbereichs werden definiert, durch die <ph id="ph1">&lt;xref:System.Console.BufferHeight%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Console.BufferWidth%2A&gt;</ph> Eigenschaften.</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowTop">
          <source>The dimensions of the console area are defined by the <ph id="ph1">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> properties.</source>
          <target state="translated">Die Dimensionen der der Bereich der Konsole werden definiert, durch die <ph id="ph1">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> Eigenschaften.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowTop">
          <source>The <ph id="ph1">&lt;xref:System.Console.WindowTop%2A&gt;</ph> property determines which row of the buffer area is displayed in the first column of the console window.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Console.WindowTop%2A&gt;</ph> Eigenschaft bestimmt, welche Zeile des Pufferbereichs in der ersten Spalte des Konsolenfensters angezeigt wird.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowTop">
          <source>The value of the <ph id="ph1">&lt;xref:System.Console.WindowTop%2A&gt;</ph> property can range from 0 to <ph id="ph2">&lt;xref:System.Console.BufferHeight%2A&gt;</ph><ph id="ph3"> - </ph><ph id="ph4">&lt;xref:System.Console.WindowHeight%2A&gt;</ph>.</source>
          <target state="translated">Der Wert, der die <ph id="ph1">&lt;xref:System.Console.WindowTop%2A&gt;</ph> Eigenschaft kann im Bereich von 0 bis <ph id="ph2">&lt;xref:System.Console.BufferHeight%2A&gt;</ph> <ph id="ph3"> - </ph> <ph id="ph4">&lt;xref:System.Console.WindowHeight%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowTop">
          <source>Attempting to set it to a value outside that range throws an <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>.</source>
          <target state="translated">Beim Festlegen auf einen Wert außerhalb der, die im Bereich löst eine <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowTop">
          <source>Attempting to set the value of the <ph id="ph1">&lt;xref:System.Console.WindowTop%2A&gt;</ph> property when output is redirected throws an <ph id="ph2">&lt;xref:System.IO.IOException&gt;</ph> exception.</source>
          <target state="translated">Beim Festlegen des Werts der <ph id="ph1">&lt;xref:System.Console.WindowTop%2A&gt;</ph> Eigenschaft, wenn die Ausgabe umgeleitet, löst eine <ph id="ph2">&lt;xref:System.IO.IOException&gt;</ph> Ausnahme.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowTop">
          <source>To prevent the exception, you can set the value of this property only if the <ph id="ph1">&lt;xref:System.Console.IsOutputRedirected%2A&gt;</ph> property returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Um die Ausnahme zu verhindern, können Sie legen den Wert für diese Eigenschaft nur, wenn die <ph id="ph1">&lt;xref:System.Console.IsOutputRedirected%2A&gt;</ph> -Eigenschaft gibt <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowTop">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Console.WindowTop%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Console.WindowWidth%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Console.WindowHeight%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Console.BufferWidth%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Console.BufferHeight%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Console.CursorVisible%2A&gt;</ph> properties; and the <ph id="ph8">&lt;xref:System.Console.SetWindowPosition%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.Console.SetBufferSize%2A&gt;</ph>, and <ph id="ph10">&lt;xref:System.Console.ReadKey%2A&gt;</ph> methods.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Console.WindowTop%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Console.WindowWidth%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Console.WindowHeight%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Console.BufferWidth%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Console.BufferHeight%2A&gt;</ph>, und <ph id="ph7">&lt;xref:System.Console.CursorVisible%2A&gt;</ph> Eigenschaften und die <ph id="ph8">&lt;xref:System.Console.SetWindowPosition%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.Console.SetBufferSize%2A&gt;</ph>, und <ph id="ph10">&lt;xref:System.Console.ReadKey%2A&gt;</ph> Methoden.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowTop">
          <source>The example draws a grid pattern in the screen buffer based on the screen buffer width.</source>
          <target state="translated">Im Beispiel zeichnet eine Rasterstruktur im Bildschirmpuffer basierend auf die Bildschirmbreite für die Puffer.</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowTop">
          <source>Then the example moves the console window in response to which of the UP ARROW, DOWN ARROW, LEFT ARROW, or RIGHT ARROW console keys is pressed.</source>
          <target state="translated">Danach verschiebt im Beispiel wird das Konsolenfenster als Antwort auf die von der nach-oben, nach-unten, links oder nach-rechts-Konsole-Taste gedrückt wird.</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowTop">
          <source>The grid pattern helps you see the movement of the console window relative to the screen buffer.</source>
          <target state="translated">Das Grid-Muster können Sie die Verschiebung des Konsolenfensters relativ zum Bildschirmpuffer sehen.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" uid="P:System.Console.WindowTop">
          <source>In a set operation, the value to be assigned is less than zero.</source>
          <target state="translated">In einem SET-Vorgang ist der zuzuweisende Wert kleiner als 0 (null).</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" uid="P:System.Console.WindowTop">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" uid="P:System.Console.WindowTop">
          <source>As a result of the assignment, <ph id="ph1">&lt;see cref="P:System.Console.WindowTop" /&gt;</ph> plus <ph id="ph2">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph> would exceed <ph id="ph3">&lt;see cref="P:System.Console.BufferHeight" /&gt;</ph>.</source>
          <target state="translated">Als Ergebnis der Zuweisung würde <ph id="ph1">&lt;see cref="P:System.Console.WindowTop" /&gt;</ph> plus <ph id="ph2">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph> den Wert für <ph id="ph3">&lt;see cref="P:System.Console.BufferHeight" /&gt;</ph> überschreiten.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" uid="P:System.Console.WindowTop">
          <source>Error reading or writing information.</source>
          <target state="translated">Fehler beim Lesen oder Schreiben von Informationen.</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" uid="P:System.Console.WindowWidth">
          <source>Gets or sets the width of the console window.</source>
          <target state="translated">Ruft die Breite des Konsolenfensters ab oder legt diese fest.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowWidth">
          <source>The width of the console window measured in columns.</source>
          <target state="translated">Die Breite des Konsolenfensters in Spalten.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowWidth">
          <source>Attempting to set the value of the <ph id="ph1">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> property when output is redirected throws either an <ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> or an <ph id="ph3">&lt;xref:System.IO.IOException&gt;</ph> exception.</source>
          <target state="translated">Beim Festlegen des Werts der <ph id="ph1">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> Eigenschaft, wenn die Ausgabe umgeleitet wird, löst entweder eine <ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> oder ein <ph id="ph3">&lt;xref:System.IO.IOException&gt;</ph> Ausnahme.</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowWidth">
          <source>To prevent an exception, you can set the value of this property only if the <ph id="ph1">&lt;xref:System.Console.IsOutputRedirected%2A&gt;</ph> property returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Um eine Ausnahme zu verhindern, können Sie legen den Wert für diese Eigenschaft nur, wenn die <ph id="ph1">&lt;xref:System.Console.IsOutputRedirected%2A&gt;</ph> -Eigenschaft gibt <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowWidth">
          <source>This example demonstrates the <ph id="ph1">&lt;xref:System.Console.SetWindowSize%2A&gt;</ph> method, and the <ph id="ph2">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> properties.</source>
          <target state="translated">Dieses Beispiel zeigt die <ph id="ph1">&lt;xref:System.Console.SetWindowSize%2A&gt;</ph> -Methode, und die <ph id="ph2">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> und <ph id="ph3">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> Eigenschaften.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowWidth">
          <source>You must run the example to see the full effect of changing the console window size.</source>
          <target state="translated">Sie müssen das Beispiel an, um die vollständigen Auswirkungen der Änderung der Größe des Konsolenfenster finden Sie unter ausführen.</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowWidth">
          <source>The example reports the dimensions of a console window set to 85 columns and 43 rows, then waits for a key press.</source>
          <target state="translated">Im Beispiel meldet die Dimensionen eines Konsolenfensters auf 85 Spalten und Zeilen 43 festgelegt und dann ein Tastendruck wartet.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowWidth">
          <source>When any key is pressed, the dimensions of the console window are halved, the new dimensions are reported, and the example waits for another key press.</source>
          <target state="translated">Wenn eine beliebige Taste gedrückt wird, werden die Dimensionen des Konsolenfensters halbiert, die neuen Dimensionen werden gemeldet, und im Beispiel wird eine andere Drücken einer Taste gewartet.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowWidth">
          <source>Finally, when any key is pressed the console window is restored to its original dimensions and the example terminates.</source>
          <target state="translated">Wenn eine beliebige Taste gedrückt wird, wird im Konsolenfenster die ursprünglichen Proportionen wiederhergestellt und zum Schluss im Beispiel wird beendet.</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" uid="P:System.Console.WindowWidth">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Console.WindowWidth" /&gt;</ph> property or the value of the <ph id="ph2">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph> property is less than or equal to 0.</source>
          <target state="translated">Der Wert der <ph id="ph1">&lt;see cref="P:System.Console.WindowWidth" /&gt;</ph>-Eigenschaft oder der Wert der <ph id="ph2">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph>-Eigenschaft muss kleiner als oder gleich 0 sein.</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" uid="P:System.Console.WindowWidth">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" uid="P:System.Console.WindowWidth">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph> property plus the value of the <ph id="ph2">&lt;see cref="P:System.Console.WindowTop" /&gt;</ph> property is greater than or equal to <ph id="ph3">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</source>
          <target state="translated">Der Wert der <ph id="ph1">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph>-Eigenschaft plus dem Wert der <ph id="ph2">&lt;see cref="P:System.Console.WindowTop" /&gt;</ph>-Eigenschaft muss größer als oder gleich <ph id="ph3">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph> sein.</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" uid="P:System.Console.WindowWidth">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" uid="P:System.Console.WindowWidth">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Console.WindowWidth" /&gt;</ph> property or the value of the <ph id="ph2">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph> property is greater than the largest possible window width or height for the current screen resolution and console font.</source>
          <target state="translated">Der Wert der <ph id="ph1">&lt;see cref="P:System.Console.WindowWidth" /&gt;</ph>-Eigenschaft oder der Wert der <ph id="ph2">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph>-Eigenschaft ist größer als die größtmögliche Fensterbreite oder -höhe für die aktuelle Bildschirmauflösung und Konsolenschriftart.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" uid="P:System.Console.WindowWidth">
          <source>Error reading or writing information.</source>
          <target state="translated">Fehler beim Lesen oder Schreiben von Informationen.</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" uid="T:System.Console">
          <source>Writes the text representation of the specified value or values to the standard output stream.</source>
          <target state="translated">Schreibt die Textdarstellung des angegebenen booleschen Werts oder der angegebenen booleschen Werte in den Standardausgabestream.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Boolean)">
          <source>The value to write.</source>
          <target state="translated">Der zu schreibende Wert.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Boolean)">
          <source>Writes the text representation of the specified Boolean value to the standard output stream.</source>
          <target state="translated">Schreibt die Textdarstellung des angegebenen booleschen Werts in den Standardausgabestream.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Boolean)">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling <ph id="ph2">&lt;xref:System.Boolean.ToString%2A?displayProperty=nameWithType&gt;</ph>, which outputs either <ph id="ph3">&lt;xref:System.Boolean.TrueString?displayProperty=nameWithType&gt;</ph> or <ph id="ph4">&lt;xref:System.Boolean.FalseString?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Die Textdarstellung des <ph id="ph1">`value`</ph> wird erzeugt, indem Aufrufen <ph id="ph2">&lt;xref:System.Boolean.ToString%2A?displayProperty=nameWithType&gt;</ph>, dem gibt entweder <ph id="ph3">&lt;xref:System.Boolean.TrueString?displayProperty=nameWithType&gt;</ph> oder <ph id="ph4">&lt;xref:System.Boolean.FalseString?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Boolean)">
          <source>The following example illustrates the use of the <ph id="ph1">`Write`</ph> method.</source>
          <target state="translated">Im folgenden Beispiel wird die Verwendung der <ph id="ph1">`Write`</ph>-Methode veranschaulicht.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Boolean)">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Boolean)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Boolean)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Char)">
          <source>The value to write.</source>
          <target state="translated">Der zu schreibende Wert.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Char)">
          <source>Writes the specified Unicode character value to the standard output stream.</source>
          <target state="translated">Schreibt das angegebene Unicode-Zeichen in den Standardausgabestream.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Char)">
          <source>The following example illustrates the use of the <ph id="ph1">`Write`</ph> method.</source>
          <target state="translated">Im folgenden Beispiel wird die Verwendung der <ph id="ph1">`Write`</ph>-Methode veranschaulicht.</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Char)">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Char)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Char)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Char[])">
          <source>A Unicode character array.</source>
          <target state="translated">Ein Array von Unicode-Zeichen.</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Char[])">
          <source>Writes the specified array of Unicode characters to the standard output stream.</source>
          <target state="translated">Schreibt das angegebene Array von Unicode-Zeichen in den Standardausgabestream.</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Char[])">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Char[])">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Char[])">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Decimal)">
          <source>The value to write.</source>
          <target state="translated">Der zu schreibende Wert.</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Decimal)">
          <source>Writes the text representation of the specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> value to the standard output stream.</source>
          <target state="translated">Schreibt die Textdarstellung des angegebenen <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>-Werts in den Standardausgabestream.</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Decimal)">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling <ph id="ph2">&lt;xref:System.Decimal.ToString%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Die Textdarstellung des <ph id="ph1">`value`</ph> wird erzeugt, indem Aufrufen <ph id="ph2">&lt;xref:System.Decimal.ToString%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Decimal)">
          <source>The following example illustrates the use of the <ph id="ph1">`Write`</ph> method.</source>
          <target state="translated">Im folgenden Beispiel wird die Verwendung der <ph id="ph1">`Write`</ph>-Methode veranschaulicht.</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Decimal)">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Decimal)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Decimal)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Double)">
          <source>The value to write.</source>
          <target state="translated">Der zu schreibende Wert.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Double)">
          <source>Writes the text representation of the specified double-precision floating-point value to the standard output stream.</source>
          <target state="translated">Schreibt die Textdarstellung der angegebenen Gleitkommazahl mit doppelter Genauigkeit in den Standardausgabestream.</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Double)">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the <ph id="ph2">&lt;xref:System.Double.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Die Textdarstellung des <ph id="ph1">`value`</ph> wird erstellt, durch Aufrufen der <ph id="ph2">&lt;xref:System.Double.ToString%2A?displayProperty=nameWithType&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Double)">
          <source>The following example illustrates the use of the <ph id="ph1">`Write`</ph> method.</source>
          <target state="translated">Im folgenden Beispiel wird die Verwendung der <ph id="ph1">`Write`</ph>-Methode veranschaulicht.</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Double)">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Double)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Double)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Int32)">
          <source>The value to write.</source>
          <target state="translated">Der zu schreibende Wert.</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Int32)">
          <source>Writes the text representation of the specified 32-bit signed integer value to the standard output stream.</source>
          <target state="translated">Schreibt die Textdarstellung der angegebenen 32-Bit-Ganzzahl mit Vorzeichen in den Standardausgabestream.</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Int32)">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the <ph id="ph2">&lt;xref:System.Int32.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Die Textdarstellung des <ph id="ph1">`value`</ph> wird erstellt, durch Aufrufen der <ph id="ph2">&lt;xref:System.Int32.ToString%2A?displayProperty=nameWithType&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Int32)">
          <source>The following example illustrates the use of the <ph id="ph1">`Write`</ph> method.</source>
          <target state="translated">Im folgenden Beispiel wird die Verwendung der <ph id="ph1">`Write`</ph>-Methode veranschaulicht.</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Int32)">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Int32)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Int32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Int64)">
          <source>The value to write.</source>
          <target state="translated">Der zu schreibende Wert.</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Int64)">
          <source>Writes the text representation of the specified 64-bit signed integer value to the standard output stream.</source>
          <target state="translated">Schreibt die Textdarstellung der angegebenen 64-Bit-Ganzzahl mit Vorzeichen in den Standardausgabestream.</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Int64)">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the <ph id="ph2">&lt;xref:System.Int64.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Die Textdarstellung des <ph id="ph1">`value`</ph> wird erstellt, durch Aufrufen der <ph id="ph2">&lt;xref:System.Int64.ToString%2A?displayProperty=nameWithType&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Int64)">
          <source>The following example illustrates the use of the <ph id="ph1">`Write`</ph> method.</source>
          <target state="translated">Im folgenden Beispiel wird die Verwendung der <ph id="ph1">`Write`</ph>-Methode veranschaulicht.</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Int64)">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Int64)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Int64)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Object)">
          <source>The value to write, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der zu schreibende Wert oder <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Object)">
          <source>Writes the text representation of the specified object to the standard output stream.</source>
          <target state="translated">Schreibt die Textdarstellung des angegebenen Objekts in den Standardausgabestream.</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Object)">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph>, nothing is written and no exception is thrown.</source>
          <target state="translated">Wenn <ph id="ph1">`value`</ph> ist <ph id="ph2">`null`</ph>, wird nichts geschrieben und keine Ausnahme ausgelöst wird.</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Object)">
          <source>Otherwise, the <ph id="ph1">`ToString`</ph> method of <ph id="ph2">`value`</ph> is called to produce its string representation, and the resulting string is written to the standard output stream.</source>
          <target state="translated">Andernfalls die <ph id="ph1">`ToString`</ph> Methode <ph id="ph2">`value`</ph> wird aufgerufen, um die Zeichenfolgendarstellung zu erzeugen und die resultierende Zeichenfolge wird in den Standardausgabestream geschrieben.</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Object)">
          <source>The following example illustrates the use of the <ph id="ph1">`Write`</ph> method.</source>
          <target state="translated">Im folgenden Beispiel wird die Verwendung der <ph id="ph1">`Write`</ph>-Methode veranschaulicht.</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Object)">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Object)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Single)">
          <source>The value to write.</source>
          <target state="translated">Der zu schreibende Wert.</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Single)">
          <source>Writes the text representation of the specified single-precision floating-point value to the standard output stream.</source>
          <target state="translated">Schreibt die Textdarstellung der angegebenen Gleitkommazahl mit einfacher Genauigkeit in den Standardausgabestream.</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Single)">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the <ph id="ph2">&lt;xref:System.Single.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Die Textdarstellung des <ph id="ph1">`value`</ph> wird erstellt, durch Aufrufen der <ph id="ph2">&lt;xref:System.Single.ToString%2A?displayProperty=nameWithType&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Single)">
          <source>The following example illustrates the use of the <ph id="ph1">`Write`</ph> method.</source>
          <target state="translated">Im folgenden Beispiel wird die Verwendung der <ph id="ph1">`Write`</ph>-Methode veranschaulicht.</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Single)">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Single)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Single)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String)">
          <source>The value to write.</source>
          <target state="translated">Der zu schreibende Wert.</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String)">
          <source>Writes the specified string value to the standard output stream.</source>
          <target state="translated">Schreibt die angegebene Zeichenfolge in den Standardausgabestream.</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String)">
          <source>If value is <ph id="ph1">`null`</ph>, nothing is written to the standard output stream.</source>
          <target state="translated">Falls der Wert <ph id="ph1">`null`</ph>, wird nichts in den Standardausgabestream geschrieben.</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String)">
          <source>The following example illustrates the use of the <ph id="ph1">`Write`</ph> method.</source>
          <target state="translated">Im folgenden Beispiel wird die Verwendung der <ph id="ph1">`Write`</ph>-Methode veranschaulicht.</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String)">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.UInt32)">
          <source>The value to write.</source>
          <target state="translated">Der zu schreibende Wert.</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.UInt32)">
          <source>Writes the text representation of the specified 32-bit unsigned integer value to the standard output stream.</source>
          <target state="translated">Schreibt die Textdarstellung der angegebenen 32-Bit-Ganzzahl ohne Vorzeichen in den Standardausgabestream.</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.UInt32)">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the <ph id="ph2">&lt;xref:System.UInt32.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Die Textdarstellung des <ph id="ph1">`value`</ph> wird erstellt, durch Aufrufen der <ph id="ph2">&lt;xref:System.UInt32.ToString%2A?displayProperty=nameWithType&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.UInt32)">
          <source>The following example illustrates the use of the <ph id="ph1">`Write`</ph> method.</source>
          <target state="translated">Im folgenden Beispiel wird die Verwendung der <ph id="ph1">`Write`</ph>-Methode veranschaulicht.</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.UInt32)">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.UInt32)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.UInt32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.UInt64)">
          <source>The value to write.</source>
          <target state="translated">Der zu schreibende Wert.</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.UInt64)">
          <source>Writes the text representation of the specified 64-bit unsigned integer value to the standard output stream.</source>
          <target state="translated">Schreibt die Textdarstellung der angegebenen 64-Bit-Ganzzahl ohne Vorzeichen in den Standardausgabestream.</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.UInt64)">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the <ph id="ph2">&lt;xref:System.UInt64.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Die Textdarstellung des <ph id="ph1">`value`</ph> wird erstellt, durch Aufrufen der <ph id="ph2">&lt;xref:System.UInt64.ToString%2A?displayProperty=nameWithType&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.UInt64)">
          <source>The following example illustrates the use of the <ph id="ph1">`Write`</ph> method.</source>
          <target state="translated">Im folgenden Beispiel wird die Verwendung der <ph id="ph1">`Write`</ph>-Methode veranschaulicht.</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.UInt64)">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.UInt64)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.UInt64)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">Eine kombinierte Formatzeichenfolge.</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object)">
          <source>An object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Ein mit <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept> zu schreibendes Objekt.</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object)">
          <source>Writes the text representation of the specified object to the standard output stream using the specified format information.</source>
          <target state="translated">Schreibt die Textdarstellung des angegebenen Objekts unter Verwendung der angegebenen Formatinformationen in den Standardausgabestream.</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object)">
          <source>This method uses the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</source>
          <target state="translated">Diese Methode verwendet die <bpt id="p1">[</bpt>Funktion für kombinierte Formatierung<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> von .NET Framework, um den Wert eines Objekts in die Textdarstellung zu konvertieren und diese Darstellung in eine Zeichenfolge einzubetten.</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object)">
          <source>The resulting string is written to the output stream.</source>
          <target state="translated">Die resultierende Zeichenfolge wird in den Ausgabestream geschrieben.</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated">Die <ph id="ph1">`format`</ph> -Parameter besteht aus 0 (null) oder mehreren Einheiten Text mit NULL oder mehr indizierten Platzhaltern enthalten, so genannten Formatelementen, die ein Objekt in der Parameterliste dieser Methode entsprechen.</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object)">
          <source>The formatting process replaces each format item with the text representation of the value of the corresponding object.</source>
          <target state="translated">Der Formatierungsvorgang wird jedes Formatelement durch die Textdarstellung des Werts des entsprechenden Objekts ersetzt.</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object)">
          <source>The syntax of a format item is <ph id="ph1">`{`</ph><bpt id="p1">*</bpt>index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>alignment<ept id="p2">*</ept>][<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</source>
          <target state="translated">Die Syntax eines Formatelements ist <ph id="ph1">`{`</ph> <bpt id="p1">*</bpt>Index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>Ausrichtung<ept id="p2">*</ept>] [<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>"FormatString"<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, gibt ein obligatorische Index, optionale Länge und Ausrichtung des formatierten Text und eine optionale Zeichenfolge von Formatbezeichnerzeichen, die steuern, wie der Wert des entsprechenden Objekts formatiert ist.</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</source>
          <target state="translated">.NET Framework bietet eine umfangreiche formatierungsunterstützung, dies wird in den folgenden Themen zur Formatierung ausführlicher beschrieben.</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object)">
          <source>For more information about the composite formatting feature supported by methods such as <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, and some overloads of <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu der Funktion für kombinierte Formatierung mit Methoden wie z. B. unterstützt <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, und einige Überladungen <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, finden Sie unter <bpt id="p1">[</bpt>kombinierte Formatierung<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu numerischen Formatbezeichnern finden Sie unter <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> und <bpt id="p2">[</bpt>benutzerdefinierte Zahlenformatzeichenfolgen<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object)">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen über Datum und Uhrzeit, die Formatbezeichner finden Sie unter <bpt id="p1">[</bpt>Standardformatbezeichner für Datum und Uhrzeit-Formatzeichenfolgen<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> und <bpt id="p2">[</bpt>benutzerdefinierte Datums- und Uhrzeit-Formatzeichenfolgen<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object)">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu Formatbezeichnern finden Sie unter <bpt id="p1">[</bpt>Enumerationsformatzeichenfolgen<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Weitere Informationen zur Formatierung finden Sie unter <bpt id="p1">[</bpt>Formatierung von Typen<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object)">
          <source>The following example uses the <ph id="ph1">`WriteLine`</ph> method to demonstrate the standard formatting specifiers for numbers, dates, and enumerations.</source>
          <target state="translated">Im folgenden Beispiel werden die Standardformatbezeichner für Zahlen, Datumsangaben und Enumerationen mithilfe der <ph id="ph1">`WriteLine`</ph>-Methode veranschaulicht.</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object)">
          <source>The following example illustrates the use of the <ph id="ph1">&lt;xref:System.Console.Write%2A&gt;</ph> method.</source>
          <target state="translated">Im folgenden Beispiel wird die Verwendung der <ph id="ph1">&lt;xref:System.Console.Write%2A&gt;</ph>-Methode veranschaulicht.</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object)">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object)">
          <source>The format specification in <ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated">Die Formatangabe in <ph id="ph1">&lt;paramref name="format" /&gt;</ph> ist ungültig.</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>A composite format string.</source>
          <target state="translated">Eine kombinierte Formatzeichenfolge.</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>An array of objects to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Ein mit <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept> zu schreibendes Array von Objekten.</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>Writes the text representation of the specified array of objects to the standard output stream using the specified format information.</source>
          <target state="translated">Schreibt die Textdarstellung des angegebenen Arrays von Objekten unter Verwendung der angegebenen Formatinformationen in den Standardausgabestream.</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>This method uses the  <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</source>
          <target state="translated">Diese Methode verwendet die <bpt id="p1">[</bpt>Funktion für kombinierte Formatierung<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> von .NET Framework, um den Wert eines Objekts in die Textdarstellung zu konvertieren und diese Darstellung in eine Zeichenfolge einzubetten.</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>The resulting string is written to the output stream.</source>
          <target state="translated">Die resultierende Zeichenfolge wird in den Ausgabestream geschrieben.</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated">Die <ph id="ph1">`format`</ph> -Parameter besteht aus 0 (null) oder mehreren Einheiten Text mit NULL oder mehr indizierten Platzhaltern enthalten, so genannten Formatelementen, die ein Objekt in der Parameterliste dieser Methode entsprechen.</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>The formatting process replaces each format item with the text representation of the value of the corresponding object.</source>
          <target state="translated">Der Formatierungsvorgang wird jedes Formatelement durch die Textdarstellung des Werts des entsprechenden Objekts ersetzt.</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>The syntax of a format item is <ph id="ph1">`{`</ph><bpt id="p1">*</bpt>index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>alignment<ept id="p2">*</ept>][<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</source>
          <target state="translated">Die Syntax eines Formatelements ist <ph id="ph1">`{`</ph> <bpt id="p1">*</bpt>Index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>Ausrichtung<ept id="p2">*</ept>] [<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>"FormatString"<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, gibt ein obligatorische Index, optionale Länge und Ausrichtung des formatierten Text und eine optionale Zeichenfolge von Formatbezeichnerzeichen, die steuern, wie der Wert des entsprechenden Objekts formatiert ist.</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</source>
          <target state="translated">.NET Framework bietet eine umfangreiche formatierungsunterstützung, dies wird in den folgenden Themen zur Formatierung ausführlicher beschrieben.</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>For more information about the composite formatting feature supported by methods such as <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, and some overloads of <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu der Funktion für kombinierte Formatierung mit Methoden wie z. B. unterstützt <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, und einige Überladungen <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, finden Sie unter <bpt id="p1">[</bpt>kombinierte Formatierung<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu numerischen Formatbezeichnern finden Sie unter <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> und <bpt id="p2">[</bpt>benutzerdefinierte Zahlenformatzeichenfolgen<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen über Datum und Uhrzeit, die Formatbezeichner finden Sie unter <bpt id="p1">[</bpt>Standardformatbezeichner für Datum und Uhrzeit-Formatzeichenfolgen<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> und <bpt id="p2">[</bpt>benutzerdefinierte Datums- und Uhrzeit-Formatzeichenfolgen<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu Formatbezeichnern finden Sie unter <bpt id="p1">[</bpt>Enumerationsformatzeichenfolgen<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Weitere Informationen zur Formatierung finden Sie unter <bpt id="p1">[</bpt>Formatierung von Typen<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>The <ph id="ph1">`arg`</ph> parameter is a parameter array.</source>
          <target state="translated">Die <ph id="ph1">`arg`</ph> Parameter ist ein Parameterarray.</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>Arguments  can be passed to the method either as an array or as list of five or more items.</source>
          <target state="translated">Argumente können entweder als Array oder als Liste von fünf oder mehr Elementen an die Methode übergeben werden.</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>The examples illustrate both forms of method call.</source>
          <target state="translated">Die Beispiele veranschaulichen die beiden Formen des Methodenaufrufs.</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>The following example defines a <ph id="ph1">`Person`</ph> class with a number of properties that provide information about a person.</source>
          <target state="translated">Das folgende Beispiel definiert eine <ph id="ph1">`Person`</ph> Klasse mit einer Reihe von Eigenschaften, die Informationen zu einer Person bereitstellen.</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>Its <ph id="ph1">`GetDescription`</ph> method returns an array that contains all of the property values except one.</source>
          <target state="translated">Die <ph id="ph1">`GetDescription`</ph> -Methode gibt ein Array, das alle Eigenschaftswerte mit einer Ausnahme enthält.</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>The example then uses the array returned by the  <ph id="ph1">`GetDescription`</ph> method  to display the values of the Person object.</source>
          <target state="translated">Im Beispiel wird dann verwendet das zurückgegebene Array die <ph id="ph1">`GetDescription`</ph> Methode, um die Werte des Objekts Person anzuzeigen.</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>Note that the example calls the <ph id="ph1">&lt;xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29&gt;</ph> method rather than the <ph id="ph2">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29&gt;</ph> method because it attempts to display the value of the <ph id="ph3">`Person.Remarks`</ph> property on the same line.</source>
          <target state="translated">Beachten Sie, die im Beispiel wird die <ph id="ph1">&lt;xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29&gt;</ph> Methode statt über das <ph id="ph2">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29&gt;</ph> Methode, da er versucht, den Wert anzuzeigen die <ph id="ph3">`Person.Remarks`</ph> Eigenschaft in derselben Zeile.</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>To do this, it examines the value of the <ph id="ph1">&lt;xref:System.Console.CursorLeft%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> properties to determine whether there is enough space for the remark to fit.</source>
          <target state="translated">Zu diesem Zweck den Wert des untersucht die <ph id="ph1">&lt;xref:System.Console.CursorLeft%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> Eigenschaften zu bestimmen, ob genügend Speicherplatz für die angeführt passt vorhanden ist.</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>If there is, it displays the line.</source>
          <target state="translated">Wenn Sie vorhanden ist, wird die Zeile angezeigt.</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>If not, it writes a line, indents three spaces, and displays the remark.</source>
          <target state="translated">Wenn dies nicht der Fall, schreibt eine Zeile, rückt drei Leerzeichen und zeigt die angeführt.</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>The following example is identical to the first, except that it supplies a five-item list as the <ph id="ph1">`arg`</ph> argument instead of a parameter array.</source>
          <target state="translated">Im folgende Beispiel wird mit dem ersten identisch, außer dass es eine Liste mit fünf Elementen als liefert die <ph id="ph1">`arg`</ph> Argument anstelle von einem Parameterarray.</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> or <ph id="ph2">&lt;paramref name="arg" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="arg" /&gt;</ph> ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>The format specification in <ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated">Die Formatangabe in <ph id="ph1">&lt;paramref name="format" /&gt;</ph> ist ungültig.</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>This method is not called by C++ code.</source>
          <target state="translated">Diese Methode wird von C++-Code nicht aufgerufen.</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>The C++ compiler resolves calls to <bpt id="p1">[</bpt>System.Console.Write<ept id="p1">](xref:System.Console.Write*)</ept> that include a string and a list of four or more object parameters as a call to <ph id="ph1">&lt;see cref="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)" /&gt;</ph>.</source>
          <target state="translated">Der C++-Compiler löst Aufrufe von <bpt id="p1">[</bpt>System.Console.Write<ept id="p1">](xref:System.Console.Write*)</ept> , die eine Zeichenfolge und eine Liste mit vier oder mehr Objektparameter enthalten, wie ein Aufruf <ph id="ph1">&lt;see cref="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>It resolves calls to <bpt id="p1">[</bpt>System.Console.Write<ept id="p1">](xref:System.Console.Write*)</ept> that include a string and an object array as a call to <ph id="ph1">&lt;see cref="M:System.Console.Write(System.String,System.Object)" /&gt;</ph>.</source>
          <target state="translated">Sie löst Aufrufe von <bpt id="p1">[</bpt>System.Console.Write<ept id="p1">](xref:System.Console.Write*)</ept> , die eine Zeichenfolge und einem Objektarray enthalten, wie ein Aufruf <ph id="ph1">&lt;see cref="M:System.Console.Write(System.String,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Char[],System.Int32,System.Int32)">
          <source>An array of Unicode characters.</source>
          <target state="translated">Ein Array von Unicode-Zeichen.</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Char[],System.Int32,System.Int32)">
          <source>The starting position in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Die Anfangsposition in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to write.</source>
          <target state="translated">Die Anzahl der zu schreibenden Zeichen.</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Char[],System.Int32,System.Int32)">
          <source>Writes the specified subarray of Unicode characters to the standard output stream.</source>
          <target state="translated">Schreibt das angegebene Unterarray von Unicode-Zeichen in den Standardausgabestream.</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Char[],System.Int32,System.Int32)">
          <source>This method writes <ph id="ph1">`count`</ph> characters starting at position <ph id="ph2">`index`</ph> of <ph id="ph3">`buffer`</ph> to the standard output stream.</source>
          <target state="translated">Diese Methode schreibt <ph id="ph1">`count`</ph> Zeichen ab Position <ph id="ph2">`index`</ph> von <ph id="ph3">`buffer`</ph> in den Standardausgabestream.</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="count" /&gt;</ph> ist kleiner als 0.</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> plus <ph id="ph2">&lt;paramref name="count" /&gt;</ph> specify a position that is not within <ph id="ph3">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> plus <ph id="ph2">&lt;paramref name="count" /&gt;</ph> geben eine Position an, die nicht innerhalb von <ph id="ph3">&lt;paramref name="buffer" /&gt;</ph> liegt.</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Char[],System.Int32,System.Int32)">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Char[],System.Int32,System.Int32)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Char[],System.Int32,System.Int32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">Eine kombinierte Formatzeichenfolge.</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>The first object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Das erste mit <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept> zu schreibende Objekt.</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>The second object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Das zweite mit <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept> zu schreibende Objekt.</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>Writes the text representation of the specified objects to the standard output stream using the specified format information.</source>
          <target state="translated">Schreibt die Textdarstellung der angegebenen Objekte unter Verwendung der angegebenen Formatinformationen in den Standardausgabestream.</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>This method uses the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</source>
          <target state="translated">Diese Methode verwendet die <bpt id="p1">[</bpt>Funktion für kombinierte Formatierung<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> von .NET Framework, um den Wert eines Objekts in die Textdarstellung zu konvertieren und diese Darstellung in eine Zeichenfolge einzubetten.</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>The resulting string is written to the output stream.</source>
          <target state="translated">Die resultierende Zeichenfolge wird in den Ausgabestream geschrieben.</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated">Die <ph id="ph1">`format`</ph> -Parameter besteht aus 0 (null) oder mehreren Einheiten Text mit NULL oder mehr indizierten Platzhaltern enthalten, so genannten Formatelementen, die ein Objekt in der Parameterliste dieser Methode entsprechen.</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>The formatting process replaces each format item with the text representation of the value of the corresponding object.</source>
          <target state="translated">Der Formatierungsvorgang wird jedes Formatelement durch die Textdarstellung des Werts des entsprechenden Objekts ersetzt.</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>The syntax of a format item is <ph id="ph1">`{`</ph><bpt id="p1">*</bpt>index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>alignment<ept id="p2">*</ept>][<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</source>
          <target state="translated">Die Syntax eines Formatelements ist <ph id="ph1">`{`</ph> <bpt id="p1">*</bpt>Index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>Ausrichtung<ept id="p2">*</ept>] [<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>"FormatString"<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, gibt ein obligatorische Index, optionale Länge und Ausrichtung des formatierten Text und eine optionale Zeichenfolge von Formatbezeichnerzeichen, die steuern, wie der Wert des entsprechenden Objekts formatiert ist.</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</source>
          <target state="translated">.NET Framework bietet eine umfangreiche formatierungsunterstützung, dies wird in den folgenden Themen zur Formatierung ausführlicher beschrieben.</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>For more information about the composite formatting feature supported by methods such as <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, and some overloads of <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu der Funktion für kombinierte Formatierung mit Methoden wie z. B. unterstützt <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, und einige Überladungen <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, finden Sie unter <bpt id="p1">[</bpt>kombinierte Formatierung<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu numerischen Formatbezeichnern finden Sie unter <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> und <bpt id="p2">[</bpt>benutzerdefinierte Zahlenformatzeichenfolgen<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen über Datum und Uhrzeit, die Formatbezeichner finden Sie unter <bpt id="p1">[</bpt>Standardformatbezeichner für Datum und Uhrzeit-Formatzeichenfolgen<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> und <bpt id="p2">[</bpt>benutzerdefinierte Datums- und Uhrzeit-Formatzeichenfolgen<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu Formatbezeichnern finden Sie unter <bpt id="p1">[</bpt>Enumerationsformatzeichenfolgen<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Weitere Informationen zur Formatierung finden Sie unter <bpt id="p1">[</bpt>Formatierung von Typen<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>The following example uses the <ph id="ph1">`WriteLine`</ph> method to demonstrate the standard formatting specifiers for numbers, dates, and enumerations.</source>
          <target state="translated">Im folgenden Beispiel werden die Standardformatbezeichner für Zahlen, Datumsangaben und Enumerationen mithilfe der <ph id="ph1">`WriteLine`</ph>-Methode veranschaulicht.</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>The following example illustrates the use of the <ph id="ph1">`Write`</ph> method.</source>
          <target state="translated">Im folgenden Beispiel wird die Verwendung der <ph id="ph1">`Write`</ph>-Methode veranschaulicht.</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>The format specification in <ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated">Die Formatangabe in <ph id="ph1">&lt;paramref name="format" /&gt;</ph> ist ungültig.</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">Eine kombinierte Formatzeichenfolge.</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The first object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Das erste mit <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept> zu schreibende Objekt.</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The second object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Das zweite mit <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept> zu schreibende Objekt.</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The third object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Das dritte mit <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept> zu schreibende Objekt.</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>Writes the text representation of the specified objects to the standard output stream using the specified format information.</source>
          <target state="translated">Schreibt die Textdarstellung der angegebenen Objekte unter Verwendung der angegebenen Formatinformationen in den Standardausgabestream.</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>This method uses the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</source>
          <target state="translated">Diese Methode verwendet die <bpt id="p1">[</bpt>Funktion für kombinierte Formatierung<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> von .NET Framework, um den Wert eines Objekts in die Textdarstellung zu konvertieren und diese Darstellung in eine Zeichenfolge einzubetten.</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The resulting string is written to the output stream.</source>
          <target state="translated">Die resultierende Zeichenfolge wird in den Ausgabestream geschrieben.</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated">Die <ph id="ph1">`format`</ph> -Parameter besteht aus 0 (null) oder mehreren Einheiten Text mit NULL oder mehr indizierten Platzhaltern enthalten, so genannten Formatelementen, die ein Objekt in der Parameterliste dieser Methode entsprechen.</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The formatting process replaces each format item with the text representation of the value of the corresponding object.</source>
          <target state="translated">Der Formatierungsvorgang wird jedes Formatelement durch die Textdarstellung des Werts des entsprechenden Objekts ersetzt.</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The syntax of a format item is <ph id="ph1">`{`</ph><bpt id="p1">*</bpt>index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>alignment<ept id="p2">*</ept>][<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</source>
          <target state="translated">Die Syntax eines Formatelements ist <ph id="ph1">`{`</ph> <bpt id="p1">*</bpt>Index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>Ausrichtung<ept id="p2">*</ept>] [<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>"FormatString"<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, gibt ein obligatorische Index, optionale Länge und Ausrichtung des formatierten Text und eine optionale Zeichenfolge von Formatbezeichnerzeichen, die steuern, wie der Wert des entsprechenden Objekts formatiert ist.</target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</source>
          <target state="translated">.NET Framework bietet eine umfangreiche formatierungsunterstützung, dies wird in den folgenden Themen zur Formatierung ausführlicher beschrieben.</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about the composite formatting feature supported by methods such as <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, and some overloads of <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu der Funktion für kombinierte Formatierung mit Methoden wie z. B. unterstützt <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, und einige Überladungen <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, finden Sie unter <bpt id="p1">[</bpt>kombinierte Formatierung<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu numerischen Formatbezeichnern finden Sie unter <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> und <bpt id="p2">[</bpt>benutzerdefinierte Zahlenformatzeichenfolgen<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen über Datum und Uhrzeit, die Formatbezeichner finden Sie unter <bpt id="p1">[</bpt>Standardformatbezeichner für Datum und Uhrzeit-Formatzeichenfolgen<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> und <bpt id="p2">[</bpt>benutzerdefinierte Datums- und Uhrzeit-Formatzeichenfolgen<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu Formatbezeichnern finden Sie unter <bpt id="p1">[</bpt>Enumerationsformatzeichenfolgen<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Weitere Informationen zur Formatierung finden Sie unter <bpt id="p1">[</bpt>Formatierung von Typen<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The following example uses the <ph id="ph1">`WriteLine`</ph> method to demonstrate the standard formatting specifiers for numbers, dates, and enumerations.</source>
          <target state="translated">Im folgenden Beispiel werden die Standardformatbezeichner für Zahlen, Datumsangaben und Enumerationen mithilfe der <ph id="ph1">`WriteLine`</ph>-Methode veranschaulicht.</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The following example illustrates the use of the <ph id="ph1">`Write`</ph> method.</source>
          <target state="translated">Im folgenden Beispiel wird die Verwendung der <ph id="ph1">`Write`</ph>-Methode veranschaulicht.</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The format specification in <ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated">Die Formatangabe in <ph id="ph1">&lt;paramref name="format" /&gt;</ph> ist ungültig.</target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">Eine kombinierte Formatzeichenfolge.</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The first object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Das erste mit <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept> zu schreibende Objekt.</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The second object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Das zweite mit <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept> zu schreibende Objekt.</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The third object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Das dritte mit <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept> zu schreibende Objekt.</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The fourth object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Das vierte mit <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept> zu schreibende Objekt.</target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>Writes the text representation of the specified objects and variable-length parameter list to the standard output stream using the specified format information.</source>
          <target state="translated">Schreibt die Textdarstellung der angegebenen Objekte und der Parameterliste von variabler Länge unter Verwendung der angegebenen Formatinformationen in den Standardausgabestream.</target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">Diese API ist nicht CLS-kompatibel.</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The CLS-compliant alternative is <ph id="ph1">&lt;xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Die CLS-kompatible Alternative ist <ph id="ph1">&lt;xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The C# and Visual Basic compilers automatically resolve a call to this method as a call to <ph id="ph1">&lt;xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Die C#- und Visual Basic-Compiler automatisch auflösen, einen Aufruf dieser Methode als Aufruf <ph id="ph1">&lt;xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>This method uses the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</source>
          <target state="translated">Diese Methode verwendet die <bpt id="p1">[</bpt>Funktion für kombinierte Formatierung<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> von .NET Framework, um den Wert eines Objekts in die Textdarstellung zu konvertieren und diese Darstellung in eine Zeichenfolge einzubetten.</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The resulting string is written to the output stream.</source>
          <target state="translated">Die resultierende Zeichenfolge wird in den Ausgabestream geschrieben.</target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated">Die <ph id="ph1">`format`</ph> -Parameter besteht aus 0 (null) oder mehreren Einheiten Text mit NULL oder mehr indizierten Platzhaltern enthalten, so genannten Formatelementen, die ein Objekt in der Parameterliste dieser Methode entsprechen.</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The formatting process replaces each format item with the text representation of the value of the corresponding object.</source>
          <target state="translated">Der Formatierungsvorgang wird jedes Formatelement durch die Textdarstellung des Werts des entsprechenden Objekts ersetzt.</target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The syntax of a format item is <ph id="ph1">`{`</ph><bpt id="p1">*</bpt>index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>alignment<ept id="p2">*</ept>][<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</source>
          <target state="translated">Die Syntax eines Formatelements ist <ph id="ph1">`{`</ph> <bpt id="p1">*</bpt>Index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>Ausrichtung<ept id="p2">*</ept>] [<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>"FormatString"<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, gibt ein obligatorische Index, optionale Länge und Ausrichtung des formatierten Text und eine optionale Zeichenfolge von Formatbezeichnerzeichen, die steuern, wie der Wert des entsprechenden Objekts formatiert ist.</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</source>
          <target state="translated">.NET Framework bietet eine umfangreiche formatierungsunterstützung, dies wird in den folgenden Themen zur Formatierung ausführlicher beschrieben.</target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>For more information about the composite formatting feature supported by methods such as <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, and some overloads of <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu der Funktion für kombinierte Formatierung mit Methoden wie z. B. unterstützt <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, und einige Überladungen <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, finden Sie unter <bpt id="p1">[</bpt>kombinierte Formatierung<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu numerischen Formatbezeichnern finden Sie unter <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> und <bpt id="p2">[</bpt>benutzerdefinierte Zahlenformatzeichenfolgen<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen über Datum und Uhrzeit, die Formatbezeichner finden Sie unter <bpt id="p1">[</bpt>Standardformatbezeichner für Datum und Uhrzeit-Formatzeichenfolgen<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> und <bpt id="p2">[</bpt>benutzerdefinierte Datums- und Uhrzeit-Formatzeichenfolgen<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu Formatbezeichnern finden Sie unter <bpt id="p1">[</bpt>Enumerationsformatzeichenfolgen<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Weitere Informationen zur Formatierung finden Sie unter <bpt id="p1">[</bpt>Formatierung von Typen<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The following example illustrates the use of variable parameters with the <ph id="ph1">&lt;xref:System.Console.Write%28System.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%2CSystem.Object%29&gt;</ph> method.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die Verwendung von Variablen Parametern mit dem <ph id="ph1">&lt;xref:System.Console.Write%28System.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%2CSystem.Object%29&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The method is called with a composite format string and five format items.</source>
          <target state="translated">Die Methode wird mit einer kombinierten Formatzeichenfolge und fünf Formatelementen aufgerufen.</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The format specification in <ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated">Die Formatangabe in <ph id="ph1">&lt;paramref name="format" /&gt;</ph> ist ungültig.</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>This method is marked with the <ph id="ph1">&lt;see langword="vararg" /&gt;</ph> keyword, which means that it supports a variable number of parameters.</source>
          <target state="translated">Diese Methode ist mit markiert die <ph id="ph1">&lt;see langword="vararg" /&gt;</ph> Schlüsselwort, das bedeutet, dass es sich um eine Variable Anzahl an Parametern unterstützt.</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The method can be called from Visual C++, but it cannot be called from C# or Visual Basic code.</source>
          <target state="translated">Die Methode kann aufgerufen werden, von Visual C++, aber es kann nicht von c# oder Visual Basic-Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The C# and Visual Basic compilers resolve calls to <ph id="ph1">&lt;see cref="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)" /&gt;</ph> as calls to <ph id="ph2">&lt;see cref="M:System.Console.Write(System.String,System.Object[])" /&gt;</ph>.</source>
          <target state="translated">Die C#- und Visual Basic-Compiler lösen Aufrufe an <ph id="ph1">&lt;see cref="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)" /&gt;</ph> als Aufrufe von <ph id="ph2">&lt;see cref="M:System.Console.Write(System.String,System.Object[])" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" uid="T:System.Console">
          <source>Writes the specified data, followed by the current line terminator, to the standard output stream.</source>
          <target state="translated">Schreibt die angegebenen Daten, gefolgt vom aktuellen Zeichen für den Zeilenabschluss, in den Standardausgabestream.</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The default line terminator is a string whose value is a carriage return followed by a line feed ("\r\n" in C#, or <ph id="ph1">`vbCrLf`</ph> in Visual Basic).</source>
          <target state="translated">Das Standardzeilenabschlusszeichen ist eine Zeichenfolge, deren Wert einem Wagenrücklaufzeichen gefolgt von einem Zeilenvorschub entspricht ("\r\n" in c# oder <ph id="ph1">`vbCrLf`</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>You can change the line terminator by setting the <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Console.Out%2A&gt;</ph> property to another string.</source>
          <target state="translated">Sie können die für den Zeilenabschluss ändern, indem Sie festlegen der <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft von der <ph id="ph2">&lt;xref:System.Console.Out%2A&gt;</ph> Eigenschaft in eine andere Zeichenfolge.</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine">
          <source>Writes the current line terminator to the standard output stream.</source>
          <target state="translated">Schreibt das aktuelle Zeichen für den Zeilenabschluss in den Standardausgabestream.</target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine">
          <source>The default line terminator is a string whose value is a carriage return followed by a line feed ("\r\n" in C#, or <ph id="ph1">`vbCrLf`</ph> in Visual Basic).</source>
          <target state="translated">Das Standardzeilenabschlusszeichen ist eine Zeichenfolge, deren Wert einem Wagenrücklaufzeichen gefolgt von einem Zeilenvorschub entspricht ("\r\n" in c# oder <ph id="ph1">`vbCrLf`</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine">
          <source>You can change the line terminator by setting the <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Console.Out%2A&gt;</ph> property to another string.</source>
          <target state="translated">Sie können die für den Zeilenabschluss ändern, indem Sie festlegen der <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft von der <ph id="ph2">&lt;xref:System.Console.Out%2A&gt;</ph> Eigenschaft in eine andere Zeichenfolge.</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine">
          <source>The example provides an illustration.</source>
          <target state="translated">Dies wird im Beispiel veranschaulicht.</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine">
          <source>The example changes the line terminator from its default value of "\r\n" or <ph id="ph1">`vbCrLf`</ph> to "\r\n\r\n" or <ph id="ph2">`vbCrLf`</ph><ph id="ph3"> + </ph><ph id="ph4">`vbCrLf`</ph>.</source>
          <target state="translated">Im Beispiel wird das Zeilenabschlusszeichen von seinem Standardwert "\r\n" geändert oder <ph id="ph1">`vbCrLf`</ph> auf "\r\n\r\n" oder <ph id="ph2">`vbCrLf`</ph> <ph id="ph3"> + </ph> <ph id="ph4">`vbCrLf`</ph>.</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine">
          <source>It then calls the <ph id="ph1">&lt;xref:System.Console.WriteLine&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.WriteLine%28System.String%29&gt;</ph> methods to display output to the console.</source>
          <target state="translated">Er ruft dann die <ph id="ph1">&lt;xref:System.Console.WriteLine&gt;</ph> und <ph id="ph2">&lt;xref:System.Console.WriteLine%28System.String%29&gt;</ph> Methoden, um die Ausgabe in der Konsole anzeigen.</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Boolean)">
          <source>The value to write.</source>
          <target state="translated">Der zu schreibende Wert.</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Boolean)">
          <source>Writes the text representation of the specified Boolean value, followed by the current line terminator, to the standard output stream.</source>
          <target state="translated">Schreibt die Textdarstellung des angegebenen booleschen Werts, gefolgt vom aktuellen Zeichen für den Zeilenabschluss, in den Standardausgabestream.</target>       </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Boolean)">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the <ph id="ph2">&lt;xref:System.Boolean.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Die Textdarstellung des <ph id="ph1">`value`</ph> wird erstellt, durch Aufrufen der <ph id="ph2">&lt;xref:System.Boolean.ToString%2A?displayProperty=nameWithType&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Boolean)">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method that takes no parameters.</source>
          <target state="translated">Weitere Informationen zu den für den Zeilenabschluss, finden Sie im Abschnitt "Hinweise" der <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> -Methode, die keine Parameter akzeptiert.</target>       </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Boolean)">
          <source>The following example generates ten random integers and uses the <ph id="ph1">&lt;xref:System.Console.WriteLine%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> method to indicate whether they are even.</source>
          <target state="translated">Im folgenden Beispiel wird die zehn zufällige ganze Zahlen generiert und verwendet die <ph id="ph1">&lt;xref:System.Console.WriteLine%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> Methode, um anzugeben, ob sie gerade sind.</target>       </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Boolean)">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Boolean)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Boolean)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Char)">
          <source>The value to write.</source>
          <target state="translated">Der zu schreibende Wert.</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Char)">
          <source>Writes the specified Unicode character, followed by the current line terminator, value to the standard output stream.</source>
          <target state="translated">Schreibt das angegebene Unicode-Zeichen, gefolgt vom aktuellen Zeichen für den Zeilenabschluss, in den Standardausgabestream.</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Char)">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method that takes no parameters.</source>
          <target state="translated">Weitere Informationen zu den für den Zeilenabschluss, finden Sie im Abschnitt "Hinweise" der <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> -Methode, die keine Parameter akzeptiert.</target>       </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Char)">
          <source>The following example is a tip calculator that calculates an 18% tip and uses the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method to display the amount of the original charge, the amount of the tip, and the total amount.</source>
          <target state="translated">Im folgende Beispiel wird ein QuickInfo-Rechner, die ein Tipp 18 % berechnet und verwendet die <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> Methode, um die Menge an den ursprünglichen Kosten, die Menge des Tipps und die Gesamtmenge anzuzeigen.</target>       </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Char)">
          <source>The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</source>
          <target state="translated">Das Beispiel ist eine Konsolenanwendung, die der Benutzer die Menge der ursprünglichen kostenlos als Befehlszeilenparameter angeben muss.</target>       </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Char)">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Char)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Char)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Char[])">
          <source>A Unicode character array.</source>
          <target state="translated">Ein Array von Unicode-Zeichen.</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Char[])">
          <source>Writes the specified array of Unicode characters, followed by the current line terminator, to the standard output stream.</source>
          <target state="translated">Schreibt das angegebenen Array von Unicode-Zeichen, gefolgt vom aktuellen Zeichen für den Zeilenabschluss, in den Standardausgabestream.</target>       </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Char[])">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method that takes no parameters.</source>
          <target state="translated">Weitere Informationen zu den für den Zeilenabschluss, finden Sie im Abschnitt "Hinweise" der <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> -Methode, die keine Parameter akzeptiert.</target>       </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Char[])">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Char[])">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Char[])">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Decimal)">
          <source>The value to write.</source>
          <target state="translated">Der zu schreibende Wert.</target>       </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Decimal)">
          <source>Writes the text representation of the specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> value, followed by the current line terminator, to the standard output stream.</source>
          <target state="translated">Schreibt die Textdarstellung des angegebenen <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>-Werts, gefolgt vom aktuellen Zeichen für den Zeilenabschluss, in den Standardausgabestream.</target>       </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Decimal)">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the <ph id="ph2">&lt;xref:System.Decimal.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Die Textdarstellung des <ph id="ph1">`value`</ph> wird erstellt, durch Aufrufen der <ph id="ph2">&lt;xref:System.Decimal.ToString%2A?displayProperty=nameWithType&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Decimal)">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method that takes no parameters.</source>
          <target state="translated">Weitere Informationen zu den für den Zeilenabschluss, finden Sie im Abschnitt "Hinweise" der <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> -Methode, die keine Parameter akzeptiert.</target>       </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Decimal)">
          <source>The following example is a tip calculator that calculates an 18% tip and uses the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method to display the amount of the original charge, the amount of the tip, and the total amount.</source>
          <target state="translated">Im folgende Beispiel wird ein QuickInfo-Rechner, die ein Tipp 18 % berechnet und verwendet die <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> Methode, um die Menge an den ursprünglichen Kosten, die Menge des Tipps und die Gesamtmenge anzuzeigen.</target>       </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Decimal)">
          <source>The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</source>
          <target state="translated">Das Beispiel ist eine Konsolenanwendung, die der Benutzer die Menge der ursprünglichen kostenlos als Befehlszeilenparameter angeben muss.</target>       </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Decimal)">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Decimal)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Decimal)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Double)">
          <source>The value to write.</source>
          <target state="translated">Der zu schreibende Wert.</target>       </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Double)">
          <source>Writes the text representation of the specified double-precision floating-point value, followed by the current line terminator, to the standard output stream.</source>
          <target state="translated">Schreibt die Textdarstellung der angegebenen Gleitkommazahl mit doppelter Genauigkeit, gefolgt vom aktuellen Zeichen für den Zeilenabschluss, in den Standardausgabestream.</target>       </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Double)">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the <ph id="ph2">&lt;xref:System.Double.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Die Textdarstellung des <ph id="ph1">`value`</ph> wird erstellt, durch Aufrufen der <ph id="ph2">&lt;xref:System.Double.ToString%2A?displayProperty=nameWithType&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Double)">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method that takes no parameters.</source>
          <target state="translated">Weitere Informationen zu den für den Zeilenabschluss, finden Sie im Abschnitt "Hinweise" der <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> -Methode, die keine Parameter akzeptiert.</target>       </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Double)">
          <source>The following example is a tip calculator that calculates an 18% tip and uses the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method to display the amount of the original charge, the amount of the tip, and the total amount.</source>
          <target state="translated">Im folgende Beispiel wird ein QuickInfo-Rechner, die ein Tipp 18 % berechnet und verwendet die <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> Methode, um die Menge an den ursprünglichen Kosten, die Menge des Tipps und die Gesamtmenge anzuzeigen.</target>       </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Double)">
          <source>The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</source>
          <target state="translated">Das Beispiel ist eine Konsolenanwendung, die der Benutzer die Menge der ursprünglichen kostenlos als Befehlszeilenparameter angeben muss.</target>       </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Double)">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Double)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Double)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Int32)">
          <source>The value to write.</source>
          <target state="translated">Der zu schreibende Wert.</target>       </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Int32)">
          <source>Writes the text representation of the specified 32-bit signed integer value, followed by the current line terminator, to the standard output stream.</source>
          <target state="translated">Schreibt die Textdarstellung der angegebenen 32-Bit-Ganzzahl mit Vorzeichen, gefolgt vom aktuellen Zeichen für den Zeilenabschluss, in den Standardausgabestream.</target>       </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Int32)">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the <ph id="ph2">&lt;xref:System.Int32.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Die Textdarstellung des <ph id="ph1">`value`</ph> wird erstellt, durch Aufrufen der <ph id="ph2">&lt;xref:System.Int32.ToString%2A?displayProperty=nameWithType&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Int32)">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method that takes no parameters.</source>
          <target state="translated">Weitere Informationen zu den für den Zeilenabschluss, finden Sie im Abschnitt "Hinweise" der <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> -Methode, die keine Parameter akzeptiert.</target>       </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Int32)">
          <source>The following example is a tip calculator that calculates an 18% tip and uses the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method to display the amount of the original charge, the amount of the tip, and the total amount.</source>
          <target state="translated">Im folgende Beispiel wird ein QuickInfo-Rechner, die ein Tipp 18 % berechnet und verwendet die <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> Methode, um die Menge an den ursprünglichen Kosten, die Menge des Tipps und die Gesamtmenge anzuzeigen.</target>       </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Int32)">
          <source>The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</source>
          <target state="translated">Das Beispiel ist eine Konsolenanwendung, die der Benutzer die Menge der ursprünglichen kostenlos als Befehlszeilenparameter angeben muss.</target>       </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Int32)">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Int32)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Int32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Int64)">
          <source>The value to write.</source>
          <target state="translated">Der zu schreibende Wert.</target>       </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Int64)">
          <source>Writes the text representation of the specified 64-bit signed integer value, followed by the current line terminator, to the standard output stream.</source>
          <target state="translated">Schreibt die Textdarstellung der angegebenen 64-Bit-Ganzzahl mit Vorzeichen, gefolgt vom aktuellen Zeichen für den Zeilenabschluss, in den Standardausgabestream.</target>       </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Int64)">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the <ph id="ph2">&lt;xref:System.Int64.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Die Textdarstellung des <ph id="ph1">`value`</ph> wird erstellt, durch Aufrufen der <ph id="ph2">&lt;xref:System.Int64.ToString%2A?displayProperty=nameWithType&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Int64)">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method that takes no parameters.</source>
          <target state="translated">Weitere Informationen zu den für den Zeilenabschluss, finden Sie im Abschnitt "Hinweise" der <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> -Methode, die keine Parameter akzeptiert.</target>       </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Int64)">
          <source>The following example is a tip calculator that calculates an 18% tip and uses the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method to display the amount of the original charge, the amount of the tip, and the total amount.</source>
          <target state="translated">Im folgende Beispiel wird ein QuickInfo-Rechner, die ein Tipp 18 % berechnet und verwendet die <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> Methode, um die Menge an den ursprünglichen Kosten, die Menge des Tipps und die Gesamtmenge anzuzeigen.</target>       </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Int64)">
          <source>The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</source>
          <target state="translated">Das Beispiel ist eine Konsolenanwendung, die der Benutzer die Menge der ursprünglichen kostenlos als Befehlszeilenparameter angeben muss.</target>       </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Int64)">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Int64)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Int64)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Object)">
          <source>The value to write.</source>
          <target state="translated">Der zu schreibende Wert.</target>       </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Object)">
          <source>Writes the text representation of the specified object, followed by the current line terminator, to the standard output stream.</source>
          <target state="translated">Schreibt die Textdarstellung des angegebenen Objekts, gefolgt vom aktuellen Zeichen für den Zeilenabschluss, in den Standardausgabestream.</target>       </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Object)">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph>, only the line terminator is written.</source>
          <target state="translated">Wenn <ph id="ph1">`value`</ph><ph id="ph2">`null`</ph> ist, wird nur das Zeichen für den Zeilenabschluss geschrieben.</target>       </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Object)">
          <source>Otherwise, the <ph id="ph1">`ToString`</ph> method of <ph id="ph2">`value`</ph> is called to produce its string representation, and the resulting string is written to the standard output stream.</source>
          <target state="translated">Andernfalls die <ph id="ph1">`ToString`</ph> Methode <ph id="ph2">`value`</ph> wird aufgerufen, um die Zeichenfolgendarstellung zu erzeugen und die resultierende Zeichenfolge wird in den Standardausgabestream geschrieben.</target>       </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Object)">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method that takes no parameters.</source>
          <target state="translated">Weitere Informationen zu den für den Zeilenabschluss, finden Sie im Abschnitt "Hinweise" der <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> -Methode, die keine Parameter akzeptiert.</target>       </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Object)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Console.WriteLine%28System.Object%29&gt;</ph> method to display each value in an object array to the console.</source>
          <target state="translated">Im folgenden Beispiel wird die <ph id="ph1">&lt;xref:System.Console.WriteLine%28System.Object%29&gt;</ph> Methode, um jeden Wert in einem Objektarray an die Konsole anzuzeigen.</target>       </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Object)">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Object)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Single)">
          <source>The value to write.</source>
          <target state="translated">Der zu schreibende Wert.</target>       </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Single)">
          <source>Writes the text representation of the specified single-precision floating-point value, followed by the current line terminator, to the standard output stream.</source>
          <target state="translated">Schreibt die Textdarstellung der angegebenen Gleitkommazahl mit einfacher Genauigkeit, gefolgt vom aktuellen Zeichen für den Zeilenabschluss, in den Standardausgabestream.</target>       </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Single)">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the <ph id="ph2">&lt;xref:System.Single.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Die Textdarstellung des <ph id="ph1">`value`</ph> wird erstellt, durch Aufrufen der <ph id="ph2">&lt;xref:System.Single.ToString%2A?displayProperty=nameWithType&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Single)">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method that takes no parameters.</source>
          <target state="translated">Weitere Informationen zu den für den Zeilenabschluss, finden Sie im Abschnitt "Hinweise" der <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> -Methode, die keine Parameter akzeptiert.</target>       </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Single)">
          <source>The following example is a tip calculator that calculates an 18% tip and uses the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method to display the amount of the original charge, the amount of the tip, and the total amount.</source>
          <target state="translated">Im folgende Beispiel wird ein QuickInfo-Rechner, die ein Tipp 18 % berechnet und verwendet die <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> Methode, um die Menge an den ursprünglichen Kosten, die Menge des Tipps und die Gesamtmenge anzuzeigen.</target>       </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Single)">
          <source>The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</source>
          <target state="translated">Das Beispiel ist eine Konsolenanwendung, die der Benutzer die Menge der ursprünglichen kostenlos als Befehlszeilenparameter angeben muss.</target>       </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Single)">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Single)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Single)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String)">
          <source>The value to write.</source>
          <target state="translated">Der zu schreibende Wert.</target>       </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String)">
          <source>Writes the specified string value, followed by the current line terminator, to the standard output stream.</source>
          <target state="translated">Schreibt den angegebenen Zeichenfolgenwert, gefolgt vom aktuellen Zeichen für den Zeilenabschluss, in den Standardausgabestream.</target>       </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String)">
          <source>If value is <ph id="ph1">`null`</ph>, only the line terminator is written to the standard output stream.</source>
          <target state="translated">Falls der Wert <ph id="ph1">`null`</ph>, nur die für den Zeilenabschluss in den Standardausgabestream geschrieben.</target>       </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String)">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine&gt;</ph> method.</source>
          <target state="translated">Weitere Informationen zu den für den Zeilenabschluss, finden Sie im Abschnitt "Hinweise" der <ph id="ph1">&lt;xref:System.Console.WriteLine&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String)">
          <source>The example changes the line terminator from its default value of "\r\n" or <ph id="ph1">`vbCrLf`</ph> to "\r\n\r\n" or <ph id="ph2">`vbCrLf`</ph><ph id="ph3"> + </ph><ph id="ph4">`vbCrLf`</ph>.</source>
          <target state="translated">Im Beispiel wird das Zeilenabschlusszeichen von seinem Standardwert "\r\n" geändert oder <ph id="ph1">`vbCrLf`</ph> auf "\r\n\r\n" oder <ph id="ph2">`vbCrLf`</ph> <ph id="ph3"> + </ph> <ph id="ph4">`vbCrLf`</ph>.</target>       </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String)">
          <source>It then calls the <ph id="ph1">&lt;xref:System.Console.WriteLine&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.WriteLine%28System.String%29&gt;</ph> methods to display output to the console.</source>
          <target state="translated">Er ruft dann die <ph id="ph1">&lt;xref:System.Console.WriteLine&gt;</ph> und <ph id="ph2">&lt;xref:System.Console.WriteLine%28System.String%29&gt;</ph> Methoden, um die Ausgabe in der Konsole anzeigen.</target>       </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String)">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.UInt32)">
          <source>The value to write.</source>
          <target state="translated">Der zu schreibende Wert.</target>       </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.UInt32)">
          <source>Writes the text representation of the specified 32-bit unsigned integer value, followed by the current line terminator, to the standard output stream.</source>
          <target state="translated">Schreibt die Textdarstellung der angegebenen 32-Bit-Ganzzahl ohne Vorzeichen, gefolgt vom aktuellen Zeichen für den Zeilenabschluss, in den Standardausgabestream.</target>       </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.UInt32)">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the <ph id="ph2">&lt;xref:System.UInt32.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Die Textdarstellung des <ph id="ph1">`value`</ph> wird erstellt, durch Aufrufen der <ph id="ph2">&lt;xref:System.UInt32.ToString%2A?displayProperty=nameWithType&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.UInt32)">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method that takes no parameters.</source>
          <target state="translated">Weitere Informationen zu den für den Zeilenabschluss, finden Sie im Abschnitt "Hinweise" der <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> -Methode, die keine Parameter akzeptiert.</target>       </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.UInt32)">
          <source>The following example is a tip calculator that calculates an 18% tip and uses the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method to display the amount of the original charge, the amount of the tip, and the total amount.</source>
          <target state="translated">Im folgende Beispiel wird ein QuickInfo-Rechner, die ein Tipp 18 % berechnet und verwendet die <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> Methode, um die Menge an den ursprünglichen Kosten, die Menge des Tipps und die Gesamtmenge anzuzeigen.</target>       </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.UInt32)">
          <source>The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</source>
          <target state="translated">Das Beispiel ist eine Konsolenanwendung, die der Benutzer die Menge der ursprünglichen kostenlos als Befehlszeilenparameter angeben muss.</target>       </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.UInt32)">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.UInt32)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.UInt32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.UInt64)">
          <source>The value to write.</source>
          <target state="translated">Der zu schreibende Wert.</target>       </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.UInt64)">
          <source>Writes the text representation of the specified 64-bit unsigned integer value, followed by the current line terminator, to the standard output stream.</source>
          <target state="translated">Schreibt die Textdarstellung der angegebenen 64-Bit-Ganzzahl ohne Vorzeichen, gefolgt vom aktuellen Zeichen für den Zeilenabschluss, in den Standardausgabestream.</target>       </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.UInt64)">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the <ph id="ph2">&lt;xref:System.UInt64.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Die Textdarstellung des <ph id="ph1">`value`</ph> wird erstellt, durch Aufrufen der <ph id="ph2">&lt;xref:System.UInt64.ToString%2A?displayProperty=nameWithType&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.UInt64)">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method that takes no parameters.</source>
          <target state="translated">Weitere Informationen zu den für den Zeilenabschluss, finden Sie im Abschnitt "Hinweise" der <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> -Methode, die keine Parameter akzeptiert.</target>       </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.UInt64)">
          <source>The following example is a tip calculator that calculates an 18% tip and uses the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method to display the amount of the original charge, the amount of the tip, and the total amount.</source>
          <target state="translated">Im folgende Beispiel wird ein QuickInfo-Rechner, die ein Tipp 18 % berechnet und verwendet die <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> Methode, um die Menge an den ursprünglichen Kosten, die Menge des Tipps und die Gesamtmenge anzuzeigen.</target>       </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.UInt64)">
          <source>The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</source>
          <target state="translated">Das Beispiel ist eine Konsolenanwendung, die der Benutzer die Menge der ursprünglichen kostenlos als Befehlszeilenparameter angeben muss.</target>       </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.UInt64)">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.UInt64)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.UInt64)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">Eine kombinierte Formatzeichenfolge.</target>       </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>An object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Ein mit <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept> zu schreibendes Objekt.</target>       </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>Writes the text representation of the specified object, followed by the current line terminator, to the standard output stream using the specified format information.</source>
          <target state="translated">Schreibt die Textdarstellung des angegebenen Objekts, gefolgt vom aktuellen Zeichen für den Zeilenabschluss, unter Verwendung der angegebenen Formatinformationen in den Standardausgabestream.</target>       </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>This method uses the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</source>
          <target state="translated">Diese Methode verwendet die <bpt id="p1">[</bpt>Funktion für kombinierte Formatierung<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> von .NET Framework, um den Wert eines Objekts in die Textdarstellung zu konvertieren und diese Darstellung in eine Zeichenfolge einzubetten.</target>       </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>The resulting string is written to the output stream.</source>
          <target state="translated">Die resultierende Zeichenfolge wird in den Ausgabestream geschrieben.</target>       </trans-unit>
        <trans-unit id="1211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated">Die <ph id="ph1">`format`</ph> -Parameter besteht aus 0 (null) oder mehreren Einheiten Text mit NULL oder mehr indizierten Platzhaltern enthalten, so genannten Formatelementen, die ein Objekt in der Parameterliste dieser Methode entsprechen.</target>       </trans-unit>
        <trans-unit id="1212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>The formatting process replaces each format item with the text representation of the value of the corresponding object.</source>
          <target state="translated">Der Formatierungsvorgang wird jedes Formatelement durch die Textdarstellung des Werts des entsprechenden Objekts ersetzt.</target>       </trans-unit>
        <trans-unit id="1213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>The syntax of a format item is <ph id="ph1">`{`</ph><bpt id="p1">*</bpt>index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>alignment<ept id="p2">*</ept>][<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</source>
          <target state="translated">Die Syntax eines Formatelements ist <ph id="ph1">`{`</ph> <bpt id="p1">*</bpt>Index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>Ausrichtung<ept id="p2">*</ept>] [<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>"FormatString"<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, gibt ein obligatorische Index, optionale Länge und Ausrichtung des formatierten Text und eine optionale Zeichenfolge von Formatbezeichnerzeichen, die steuern, wie der Wert des entsprechenden Objekts formatiert ist.</target>       </trans-unit>
        <trans-unit id="1214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</source>
          <target state="translated">.NET Framework bietet eine umfangreiche formatierungsunterstützung, dies wird in den folgenden Themen zur Formatierung ausführlicher beschrieben.</target>       </trans-unit>
        <trans-unit id="1215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>For more information about the composite formatting feature supported by methods such as <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, and some overloads of <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu der Funktion für kombinierte Formatierung mit Methoden wie z. B. unterstützt <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, und einige Überladungen <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, finden Sie unter <bpt id="p1">[</bpt>kombinierte Formatierung<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu numerischen Formatbezeichnern finden Sie unter <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> und <bpt id="p2">[</bpt>benutzerdefinierte Zahlenformatzeichenfolgen<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen über Datum und Uhrzeit, die Formatbezeichner finden Sie unter <bpt id="p1">[</bpt>Standardformatbezeichner für Datum und Uhrzeit-Formatzeichenfolgen<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> und <bpt id="p2">[</bpt>benutzerdefinierte Datums- und Uhrzeit-Formatzeichenfolgen<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu Formatbezeichnern finden Sie unter <bpt id="p1">[</bpt>Enumerationsformatzeichenfolgen<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Weitere Informationen zur Formatierung finden Sie unter <bpt id="p1">[</bpt>Formatierung von Typen<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method that takes no parameters.</source>
          <target state="translated">Weitere Informationen zu den für den Zeilenabschluss, finden Sie im Abschnitt "Hinweise" der <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> -Methode, die keine Parameter akzeptiert.</target>       </trans-unit>
        <trans-unit id="1221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%29&gt;</ph> method to display five randomly generated <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> values.</source>
          <target state="translated">Im folgenden Beispiel wird die <ph id="ph1">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%29&gt;</ph> anzuzeigenden fünf nach dem Zufallsprinzip generierte Methode <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> Werte.</target>       </trans-unit>
        <trans-unit id="1222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%29&gt;</ph> method to display the current date.</source>
          <target state="translated">Im folgenden Beispiel wird die <ph id="ph1">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%29&gt;</ph> Methode, um das aktuelle Datum anzuzeigen.</target>       </trans-unit>
        <trans-unit id="1223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>Note that the format item in the <ph id="ph1">`format`</ph> argument uses the "D" <bpt id="p1">[</bpt>standard date and time format string<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> to display the date in the long date format of the current culture.</source>
          <target state="translated">Beachten Sie, die das Format-Element in der <ph id="ph1">`format`</ph> Argument verwendet, das "D" <bpt id="p1">[</bpt>Formatzeichenfolge Standardformatbezeichner für Datum und Uhrzeit<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> das Datum im langen Datumsformat der aktuellen Kultur anzeigen.</target>       </trans-unit>
        <trans-unit id="1224" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="1225" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1226" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>The format specification in <ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated">Die Formatangabe in <ph id="ph1">&lt;paramref name="format" /&gt;</ph> ist ungültig.</target>       </trans-unit>
        <trans-unit id="1227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="1228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1229" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>A composite format string.</source>
          <target state="translated">Eine kombinierte Formatzeichenfolge.</target>       </trans-unit>
        <trans-unit id="1230" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>An array of objects to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Ein mit <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept> zu schreibendes Array von Objekten.</target>       </trans-unit>
        <trans-unit id="1231" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>Writes the text representation of the specified array of objects, followed by the current line terminator, to the standard output stream using the specified format information.</source>
          <target state="translated">Schreibt die Textdarstellung des angegebenen Arrays von Objekten, gefolgt vom aktuellen Zeichen für den Zeilenabschluss, unter Verwendung der angegebenen Formatinformationen in den Standardausgabestream.</target>       </trans-unit>
        <trans-unit id="1232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>This method uses the  <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</source>
          <target state="translated">Diese Methode verwendet die <bpt id="p1">[</bpt>Funktion für kombinierte Formatierung<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> von .NET Framework, um den Wert eines Objekts in die Textdarstellung zu konvertieren und diese Darstellung in eine Zeichenfolge einzubetten.</target>       </trans-unit>
        <trans-unit id="1233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>The resulting string is written to the output stream.</source>
          <target state="translated">Die resultierende Zeichenfolge wird in den Ausgabestream geschrieben.</target>       </trans-unit>
        <trans-unit id="1234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated">Die <ph id="ph1">`format`</ph> -Parameter besteht aus 0 (null) oder mehreren Einheiten Text mit NULL oder mehr indizierten Platzhaltern enthalten, so genannten Formatelementen, die ein Objekt in der Parameterliste dieser Methode entsprechen.</target>       </trans-unit>
        <trans-unit id="1235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>The formatting process replaces each format item with the text representation of the value of the corresponding object.</source>
          <target state="translated">Der Formatierungsvorgang wird jedes Formatelement durch die Textdarstellung des Werts des entsprechenden Objekts ersetzt.</target>       </trans-unit>
        <trans-unit id="1236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>The syntax of a format item is <ph id="ph1">`{`</ph><bpt id="p1">*</bpt>index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>alignment<ept id="p2">*</ept>][<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</source>
          <target state="translated">Die Syntax eines Formatelements ist <ph id="ph1">`{`</ph> <bpt id="p1">*</bpt>Index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>Ausrichtung<ept id="p2">*</ept>] [<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>"FormatString"<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, gibt ein obligatorische Index, optionale Länge und Ausrichtung des formatierten Text und eine optionale Zeichenfolge von Formatbezeichnerzeichen, die steuern, wie der Wert des entsprechenden Objekts formatiert ist.</target>       </trans-unit>
        <trans-unit id="1237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</source>
          <target state="translated">.NET Framework bietet eine umfangreiche formatierungsunterstützung, dies wird in den folgenden Themen zur Formatierung ausführlicher beschrieben.</target>       </trans-unit>
        <trans-unit id="1238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>For more information about the composite formatting feature supported by methods such as <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, and some overloads of <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu der Funktion für kombinierte Formatierung mit Methoden wie z. B. unterstützt <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, und einige Überladungen <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, finden Sie unter <bpt id="p1">[</bpt>kombinierte Formatierung<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu numerischen Formatbezeichnern finden Sie unter <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> und <bpt id="p2">[</bpt>benutzerdefinierte Zahlenformatzeichenfolgen<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen über Datum und Uhrzeit, die Formatbezeichner finden Sie unter <bpt id="p1">[</bpt>Standardformatbezeichner für Datum und Uhrzeit-Formatzeichenfolgen<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> und <bpt id="p2">[</bpt>benutzerdefinierte Datums- und Uhrzeit-Formatzeichenfolgen<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu Formatbezeichnern finden Sie unter <bpt id="p1">[</bpt>Enumerationsformatzeichenfolgen<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Weitere Informationen zur Formatierung finden Sie unter <bpt id="p1">[</bpt>Formatierung von Typen<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method that takes no parameters.</source>
          <target state="translated">Weitere Informationen zu den für den Zeilenabschluss, finden Sie im Abschnitt "Hinweise" der <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> -Methode, die keine Parameter akzeptiert.</target>       </trans-unit>
        <trans-unit id="1244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>The following example demonstrates the standard formatting specifiers for numbers, dates, and enumerations.</source>
          <target state="translated">Im folgenden Beispiel werden die Standardformatbezeichner für Zahlen, Datumsangaben und Enumerationen veranschaulicht.</target>       </trans-unit>
        <trans-unit id="1245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>The following example is a tip calculator that calculates an 18% tip and uses the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method to display the amount of the original charge, the amount of the tip, and the total amount.</source>
          <target state="translated">Im folgende Beispiel wird ein QuickInfo-Rechner, die ein Tipp 18 % berechnet und verwendet die <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> Methode, um die Menge an den ursprünglichen Kosten, die Menge des Tipps und die Gesamtmenge anzuzeigen.</target>       </trans-unit>
        <trans-unit id="1246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</source>
          <target state="translated">Das Beispiel ist eine Konsolenanwendung, die der Benutzer die Menge der ursprünglichen kostenlos als Befehlszeilenparameter angeben muss.</target>       </trans-unit>
        <trans-unit id="1247" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="1248" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> or <ph id="ph2">&lt;paramref name="arg" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="arg" /&gt;</ph> ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1249" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>The format specification in <ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated">Die Formatangabe in <ph id="ph1">&lt;paramref name="format" /&gt;</ph> ist ungültig.</target>       </trans-unit>
        <trans-unit id="1250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="1251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>This method is not called by C++ code.</source>
          <target state="translated">Diese Methode wird von C++-Code nicht aufgerufen.</target>       </trans-unit>
        <trans-unit id="1253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>The C++ compiler resolves calls to <bpt id="p1">[</bpt>System.Console.WriteLine<ept id="p1">](xref:System.Console.WriteLine*)</ept> that include a string and a list of four or more object parameters as a call to <ph id="ph1">&lt;see cref="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)" /&gt;</ph>.</source>
          <target state="translated">Der C++-Compiler löst Aufrufe von <bpt id="p1">[</bpt>System.Console.WriteLine<ept id="p1">](xref:System.Console.WriteLine*)</ept> , die eine Zeichenfolge und eine Liste mit vier oder mehr Objektparameter enthalten, wie ein Aufruf <ph id="ph1">&lt;see cref="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>It resolves calls to <bpt id="p1">[</bpt>System.Console.WriteLine<ept id="p1">](xref:System.Console.WriteLine*)</ept> that include a string and an object array as a call to <ph id="ph1">&lt;see cref="M:System.Console.WriteLine(System.String,System.Object)" /&gt;</ph>.</source>
          <target state="translated">Sie löst Aufrufe von <bpt id="p1">[</bpt>System.Console.WriteLine<ept id="p1">](xref:System.Console.WriteLine*)</ept> , die eine Zeichenfolge und einem Objektarray enthalten, wie ein Aufruf <ph id="ph1">&lt;see cref="M:System.Console.WriteLine(System.String,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1255" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>An array of Unicode characters.</source>
          <target state="translated">Ein Array von Unicode-Zeichen.</target>       </trans-unit>
        <trans-unit id="1256" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The starting position in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Die Anfangsposition in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1257" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to write.</source>
          <target state="translated">Die Anzahl der zu schreibenden Zeichen.</target>       </trans-unit>
        <trans-unit id="1258" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>Writes the specified subarray of Unicode characters, followed by the current line terminator, to the standard output stream.</source>
          <target state="translated">Schreibt das angegebene Unterarray von Unicode-Zeichen, gefolgt vom aktuellen Zeichen für den Zeilenabschluss, in den Standardausgabestream.</target>       </trans-unit>
        <trans-unit id="1259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>This method writes <ph id="ph1">`count`</ph> characters starting at position <ph id="ph2">`index`</ph> of <ph id="ph3">`buffer`</ph> to the standard output stream.</source>
          <target state="translated">Diese Methode schreibt <ph id="ph1">`count`</ph> Zeichen ab Position <ph id="ph2">`index`</ph> von <ph id="ph3">`buffer`</ph> in den Standardausgabestream.</target>       </trans-unit>
        <trans-unit id="1260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method that takes no parameters.</source>
          <target state="translated">Weitere Informationen zu den für den Zeilenabschluss, finden Sie im Abschnitt "Hinweise" der <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> -Methode, die keine Parameter akzeptiert.</target>       </trans-unit>
        <trans-unit id="1261" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1262" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="count" /&gt;</ph> ist kleiner als 0.</target>       </trans-unit>
        <trans-unit id="1263" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> plus <ph id="ph2">&lt;paramref name="count" /&gt;</ph> specify a position that is not within <ph id="ph3">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> plus <ph id="ph2">&lt;paramref name="count" /&gt;</ph> geben eine Position an, die nicht innerhalb von <ph id="ph3">&lt;paramref name="buffer" /&gt;</ph> liegt.</target>       </trans-unit>
        <trans-unit id="1264" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="1265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="1266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1267" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">Eine kombinierte Formatzeichenfolge.</target>       </trans-unit>
        <trans-unit id="1268" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>The first object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Das erste mit <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept> zu schreibende Objekt.</target>       </trans-unit>
        <trans-unit id="1269" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>The second object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Das zweite mit <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept> zu schreibende Objekt.</target>       </trans-unit>
        <trans-unit id="1270" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>Writes the text representation of the specified objects, followed by the current line terminator, to the standard output stream using the specified format information.</source>
          <target state="translated">Schreibt die Textdarstellung der angegebenen Objekte, gefolgt vom aktuellen Zeichen für den Zeilenabschluss, unter Verwendung der angegebenen Formatinformationen in den Standardausgabestream.</target>       </trans-unit>
        <trans-unit id="1271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>This method uses the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</source>
          <target state="translated">Diese Methode verwendet die <bpt id="p1">[</bpt>Funktion für kombinierte Formatierung<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> von .NET Framework, um den Wert eines Objekts in die Textdarstellung zu konvertieren und diese Darstellung in eine Zeichenfolge einzubetten.</target>       </trans-unit>
        <trans-unit id="1272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>The resulting string is written to the output stream.</source>
          <target state="translated">Die resultierende Zeichenfolge wird in den Ausgabestream geschrieben.</target>       </trans-unit>
        <trans-unit id="1273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated">Die <ph id="ph1">`format`</ph> -Parameter besteht aus 0 (null) oder mehreren Einheiten Text mit NULL oder mehr indizierten Platzhaltern enthalten, so genannten Formatelementen, die ein Objekt in der Parameterliste dieser Methode entsprechen.</target>       </trans-unit>
        <trans-unit id="1274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>The formatting process replaces each format item with the text representation of the value of the corresponding object.</source>
          <target state="translated">Der Formatierungsvorgang wird jedes Formatelement durch die Textdarstellung des Werts des entsprechenden Objekts ersetzt.</target>       </trans-unit>
        <trans-unit id="1275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>The syntax of a format item is <ph id="ph1">`{`</ph><bpt id="p1">*</bpt>index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>alignment<ept id="p2">*</ept>][<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</source>
          <target state="translated">Die Syntax eines Formatelements ist <ph id="ph1">`{`</ph> <bpt id="p1">*</bpt>Index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>Ausrichtung<ept id="p2">*</ept>] [<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>"FormatString"<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, gibt ein obligatorische Index, optionale Länge und Ausrichtung des formatierten Text und eine optionale Zeichenfolge von Formatbezeichnerzeichen, die steuern, wie der Wert des entsprechenden Objekts formatiert ist.</target>       </trans-unit>
        <trans-unit id="1276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</source>
          <target state="translated">.NET Framework bietet eine umfangreiche formatierungsunterstützung, dies wird in den folgenden Themen zur Formatierung ausführlicher beschrieben.</target>       </trans-unit>
        <trans-unit id="1277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>For more information about the composite formatting feature supported by methods such as <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, and some overloads of <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu der Funktion für kombinierte Formatierung mit Methoden wie z. B. unterstützt <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, und einige Überladungen <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, finden Sie unter <bpt id="p1">[</bpt>kombinierte Formatierung<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu numerischen Formatbezeichnern finden Sie unter <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> und <bpt id="p2">[</bpt>benutzerdefinierte Zahlenformatzeichenfolgen<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen über Datum und Uhrzeit, die Formatbezeichner finden Sie unter <bpt id="p1">[</bpt>Standardformatbezeichner für Datum und Uhrzeit-Formatzeichenfolgen<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> und <bpt id="p2">[</bpt>benutzerdefinierte Datums- und Uhrzeit-Formatzeichenfolgen<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu Formatbezeichnern finden Sie unter <bpt id="p1">[</bpt>Enumerationsformatzeichenfolgen<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Weitere Informationen zur Formatierung finden Sie unter <bpt id="p1">[</bpt>Formatierung von Typen<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method that takes no parameters.</source>
          <target state="translated">Weitere Informationen zu den für den Zeilenabschluss, finden Sie im Abschnitt "Hinweise" der <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> -Methode, die keine Parameter akzeptiert.</target>       </trans-unit>
        <trans-unit id="1283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>The following example demonstrates the standard formatting specifiers for numbers, dates, and enumerations.</source>
          <target state="translated">Im folgenden Beispiel werden die Standardformatbezeichner für Zahlen, Datumsangaben und Enumerationen veranschaulicht.</target>       </trans-unit>
        <trans-unit id="1284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>The following example is a tip calculator that calculates an 18% tip and uses the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method to display the amount of the original charge, the amount of the tip, and the total amount.</source>
          <target state="translated">Im folgende Beispiel wird ein QuickInfo-Rechner, die ein Tipp 18 % berechnet und verwendet die <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> Methode, um die Menge an den ursprünglichen Kosten, die Menge des Tipps und die Gesamtmenge anzuzeigen.</target>       </trans-unit>
        <trans-unit id="1285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</source>
          <target state="translated">Das Beispiel ist eine Konsolenanwendung, die der Benutzer die Menge der ursprünglichen kostenlos als Befehlszeilenparameter angeben muss.</target>       </trans-unit>
        <trans-unit id="1286" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="1287" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1288" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>The format specification in <ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated">Die Formatangabe in <ph id="ph1">&lt;paramref name="format" /&gt;</ph> ist ungültig.</target>       </trans-unit>
        <trans-unit id="1289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="1290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1291" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">Eine kombinierte Formatzeichenfolge.</target>       </trans-unit>
        <trans-unit id="1292" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The first object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Das erste mit <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept> zu schreibende Objekt.</target>       </trans-unit>
        <trans-unit id="1293" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The second object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Das zweite mit <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept> zu schreibende Objekt.</target>       </trans-unit>
        <trans-unit id="1294" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The third object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Das dritte mit <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept> zu schreibende Objekt.</target>       </trans-unit>
        <trans-unit id="1295" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>Writes the text representation of the specified objects, followed by the current line terminator, to the standard output stream using the specified format information.</source>
          <target state="translated">Schreibt die Textdarstellung der angegebenen Objekte, gefolgt vom aktuellen Zeichen für den Zeilenabschluss, unter Verwendung der angegebenen Formatinformationen in den Standardausgabestream.</target>       </trans-unit>
        <trans-unit id="1296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>This method uses the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</source>
          <target state="translated">Diese Methode verwendet die <bpt id="p1">[</bpt>Funktion für kombinierte Formatierung<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> von .NET Framework, um den Wert eines Objekts in die Textdarstellung zu konvertieren und diese Darstellung in eine Zeichenfolge einzubetten.</target>       </trans-unit>
        <trans-unit id="1297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The resulting string is written to the output stream.</source>
          <target state="translated">Die resultierende Zeichenfolge wird in den Ausgabestream geschrieben.</target>       </trans-unit>
        <trans-unit id="1298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated">Die <ph id="ph1">`format`</ph> -Parameter besteht aus 0 (null) oder mehreren Einheiten Text mit NULL oder mehr indizierten Platzhaltern enthalten, so genannten Formatelementen, die ein Objekt in der Parameterliste dieser Methode entsprechen.</target>       </trans-unit>
        <trans-unit id="1299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The formatting process replaces each format item with the text representation of the value of the corresponding object.</source>
          <target state="translated">Der Formatierungsvorgang wird jedes Formatelement durch die Textdarstellung des Werts des entsprechenden Objekts ersetzt.</target>       </trans-unit>
        <trans-unit id="1300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The syntax of a format item is <ph id="ph1">`{`</ph><bpt id="p1">*</bpt>index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>alignment<ept id="p2">*</ept>][<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</source>
          <target state="translated">Die Syntax eines Formatelements ist <ph id="ph1">`{`</ph> <bpt id="p1">*</bpt>Index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>Ausrichtung<ept id="p2">*</ept>] [<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>"FormatString"<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, gibt ein obligatorische Index, optionale Länge und Ausrichtung des formatierten Text und eine optionale Zeichenfolge von Formatbezeichnerzeichen, die steuern, wie der Wert des entsprechenden Objekts formatiert ist.</target>       </trans-unit>
        <trans-unit id="1301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</source>
          <target state="translated">.NET Framework bietet eine umfangreiche formatierungsunterstützung, dies wird in den folgenden Themen zur Formatierung ausführlicher beschrieben.</target>       </trans-unit>
        <trans-unit id="1302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about the composite formatting feature supported by methods such as <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, and some overloads of <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu der Funktion für kombinierte Formatierung mit Methoden wie z. B. unterstützt <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, und einige Überladungen <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, finden Sie unter <bpt id="p1">[</bpt>kombinierte Formatierung<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu numerischen Formatbezeichnern finden Sie unter <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> und <bpt id="p2">[</bpt>benutzerdefinierte Zahlenformatzeichenfolgen<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen über Datum und Uhrzeit, die Formatbezeichner finden Sie unter <bpt id="p1">[</bpt>Standardformatbezeichner für Datum und Uhrzeit-Formatzeichenfolgen<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> und <bpt id="p2">[</bpt>benutzerdefinierte Datums- und Uhrzeit-Formatzeichenfolgen<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu Formatbezeichnern finden Sie unter <bpt id="p1">[</bpt>Enumerationsformatzeichenfolgen<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Weitere Informationen zur Formatierung finden Sie unter <bpt id="p1">[</bpt>Formatierung von Typen<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method that takes no parameters.</source>
          <target state="translated">Weitere Informationen zu den für den Zeilenabschluss, finden Sie im Abschnitt "Hinweise" der <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> -Methode, die keine Parameter akzeptiert.</target>       </trans-unit>
        <trans-unit id="1308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The following example demonstrates the standard formatting specifiers for numbers, dates, and enumerations.</source>
          <target state="translated">Im folgenden Beispiel werden die Standardformatbezeichner für Zahlen, Datumsangaben und Enumerationen veranschaulicht.</target>       </trans-unit>
        <trans-unit id="1309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The following example is a tip calculator that calculates an 18% tip and uses the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method to display the amount of the original charge, the amount of the tip, and the total amount.</source>
          <target state="translated">Im folgende Beispiel wird ein QuickInfo-Rechner, die ein Tipp 18 % berechnet und verwendet die <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> Methode, um die Menge an den ursprünglichen Kosten, die Menge des Tipps und die Gesamtmenge anzuzeigen.</target>       </trans-unit>
        <trans-unit id="1310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</source>
          <target state="translated">Das Beispiel ist eine Konsolenanwendung, die der Benutzer die Menge der ursprünglichen kostenlos als Befehlszeilenparameter angeben muss.</target>       </trans-unit>
        <trans-unit id="1311" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="1312" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1313" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The format specification in <ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated">Die Formatangabe in <ph id="ph1">&lt;paramref name="format" /&gt;</ph> ist ungültig.</target>       </trans-unit>
        <trans-unit id="1314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="1315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1316" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">Eine kombinierte Formatzeichenfolge.</target>       </trans-unit>
        <trans-unit id="1317" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The first object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Das erste mit <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept> zu schreibende Objekt.</target>       </trans-unit>
        <trans-unit id="1318" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The second object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Das zweite mit <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept> zu schreibende Objekt.</target>       </trans-unit>
        <trans-unit id="1319" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The third object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Das dritte mit <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept> zu schreibende Objekt.</target>       </trans-unit>
        <trans-unit id="1320" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The fourth object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Das vierte mit <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept> zu schreibende Objekt.</target>       </trans-unit>
        <trans-unit id="1321" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>Writes the text representation of the specified objects and variable-length parameter list, followed by the current line terminator, to the standard output stream using the specified format information.</source>
          <target state="translated">Schreibt die Textdarstellung der angegebenen Objekte und der Parameterliste variabler Länge, gefolgt vom aktuellen Zeichen für den Zeilenabschluss, unter Verwendung der angegebenen Formatinformationen in den Standardausgabestream.</target>       </trans-unit>
        <trans-unit id="1322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">Diese API ist nicht CLS-kompatibel.</target>       </trans-unit>
        <trans-unit id="1323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The CLS-compliant alternative is <ph id="ph1">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Die CLS-kompatible Alternative ist <ph id="ph1">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The C# and Visual Basic compilers automatically resolve a call to this method as a call to <ph id="ph1">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Die C#- und Visual Basic-Compiler automatisch auflösen, einen Aufruf dieser Methode als Aufruf <ph id="ph1">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>This method uses the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</source>
          <target state="translated">Diese Methode verwendet die <bpt id="p1">[</bpt>Funktion für kombinierte Formatierung<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> von .NET Framework, um den Wert eines Objekts in die Textdarstellung zu konvertieren und diese Darstellung in eine Zeichenfolge einzubetten.</target>       </trans-unit>
        <trans-unit id="1326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The resulting string is written to the output stream.</source>
          <target state="translated">Die resultierende Zeichenfolge wird in den Ausgabestream geschrieben.</target>       </trans-unit>
        <trans-unit id="1327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated">Die <ph id="ph1">`format`</ph> -Parameter besteht aus 0 (null) oder mehreren Einheiten Text mit NULL oder mehr indizierten Platzhaltern enthalten, so genannten Formatelementen, die ein Objekt in der Parameterliste dieser Methode entsprechen.</target>       </trans-unit>
        <trans-unit id="1328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The formatting process replaces each format item with the text representation of the value of the corresponding object.</source>
          <target state="translated">Der Formatierungsvorgang wird jedes Formatelement durch die Textdarstellung des Werts des entsprechenden Objekts ersetzt.</target>       </trans-unit>
        <trans-unit id="1329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The syntax of a format item is <ph id="ph1">`{`</ph><bpt id="p1">*</bpt>index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>alignment<ept id="p2">*</ept>][<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</source>
          <target state="translated">Die Syntax eines Formatelements ist <ph id="ph1">`{`</ph> <bpt id="p1">*</bpt>Index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>Ausrichtung<ept id="p2">*</ept>] [<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>"FormatString"<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, gibt ein obligatorische Index, optionale Länge und Ausrichtung des formatierten Text und eine optionale Zeichenfolge von Formatbezeichnerzeichen, die steuern, wie der Wert des entsprechenden Objekts formatiert ist.</target>       </trans-unit>
        <trans-unit id="1330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</source>
          <target state="translated">.NET Framework bietet eine umfangreiche formatierungsunterstützung, dies wird in den folgenden Themen zur Formatierung ausführlicher beschrieben.</target>       </trans-unit>
        <trans-unit id="1331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>For more information about the composite formatting feature supported by methods such as <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, and some overloads of <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu der Funktion für kombinierte Formatierung mit Methoden wie z. B. unterstützt <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, und einige Überladungen <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, finden Sie unter <bpt id="p1">[</bpt>kombinierte Formatierung<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu numerischen Formatbezeichnern finden Sie unter <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> und <bpt id="p2">[</bpt>benutzerdefinierte Zahlenformatzeichenfolgen<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen über Datum und Uhrzeit, die Formatbezeichner finden Sie unter <bpt id="p1">[</bpt>Standardformatbezeichner für Datum und Uhrzeit-Formatzeichenfolgen<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> und <bpt id="p2">[</bpt>benutzerdefinierte Datums- und Uhrzeit-Formatzeichenfolgen<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu Formatbezeichnern finden Sie unter <bpt id="p1">[</bpt>Enumerationsformatzeichenfolgen<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Weitere Informationen zur Formatierung finden Sie unter <bpt id="p1">[</bpt>Formatierung von Typen<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method that takes no parameters.</source>
          <target state="translated">Weitere Informationen zu den für den Zeilenabschluss, finden Sie im Abschnitt "Hinweise" der <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> -Methode, die keine Parameter akzeptiert.</target>       </trans-unit>
        <trans-unit id="1337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The following example illustrates the use of variable arguments with the <ph id="ph1">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%2CSystem.Object%29&gt;</ph> method.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die Verwendung von Variablen Argumenten mit dem <ph id="ph1">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%2CSystem.Object%29&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="1338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The method is called with a composite format string and five format items.</source>
          <target state="translated">Die Methode wird mit einer kombinierten Formatzeichenfolge und fünf Formatelementen aufgerufen.</target>       </trans-unit>
        <trans-unit id="1339" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="1340" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1341" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The format specification in <ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated">Die Formatangabe in <ph id="ph1">&lt;paramref name="format" /&gt;</ph> ist ungültig.</target>       </trans-unit>
        <trans-unit id="1342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">zum Ändern von sicheren Fenster auf oberster Ebene und untergeordnete Fenster.</target>       </trans-unit>
        <trans-unit id="1343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>This method is marked with the <ph id="ph1">&lt;see langword="vararg" /&gt;</ph> keyword, which means that it supports a variable number of parameters.</source>
          <target state="translated">Diese Methode ist mit markiert die <ph id="ph1">&lt;see langword="vararg" /&gt;</ph> Schlüsselwort, das bedeutet, dass es sich um eine Variable Anzahl an Parametern unterstützt.</target>       </trans-unit>
        <trans-unit id="1345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The method can be called from Visual C++, but it cannot be called from C# or Visual Basic code.</source>
          <target state="translated">Die Methode kann aufgerufen werden, von Visual C++, aber es kann nicht von c# oder Visual Basic-Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="1346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The C# and Visual Basic compilers resolve calls to <ph id="ph1">&lt;see cref="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)" /&gt;</ph> as calls to <ph id="ph2">&lt;see cref="M:System.Console.WriteLine(System.String,System.Object[])" /&gt;</ph>.</source>
          <target state="translated">Die C#- und Visual Basic-Compiler lösen Aufrufe an <ph id="ph1">&lt;see cref="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)" /&gt;</ph> als Aufrufe von <ph id="ph2">&lt;see cref="M:System.Console.WriteLine(System.String,System.Object[])" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>