<Type Name="EnvironmentVariableTarget" FullName="System.EnvironmentVariableTarget">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="35b8f0d5b4debc17bc81714e0a0ee7e3f6e08297" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48662922" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum EnvironmentVariableTarget" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed EnvironmentVariableTarget extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.EnvironmentVariableTarget" />
  <TypeSignature Language="VB.NET" Value="Public Enum EnvironmentVariableTarget" />
  <TypeSignature Language="C++ CLI" Value="public enum class EnvironmentVariableTarget" />
  <TypeSignature Language="F#" Value="type EnvironmentVariableTarget = " />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Gibt den Speicherort an, an dem eine Umgebungsvariable in einer Set- oder Get-Operation gespeichert bzw. abgerufen wird.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.EnvironmentVariableTarget> Enumeration wird verwendet, von bestimmten Überladungen der der <xref:System.Environment.SetEnvironmentVariable%2A>, <xref:System.Environment.GetEnvironmentVariable%2A>, und <xref:System.Environment.GetEnvironmentVariables%2A> Methoden, um den Speicherort oder das Ziel anzugeben, in den Namen und Wert einer Umgebungsvariablen gespeichert oder abgerufen wird.  
  
 Das Ziel kann eine der drei folgenden Speicherorte: der Umgebungsblock, der den aktuellen Prozess, der Windows-Betriebssystem Registrierungsschlüssel reservierte für Umgebungsvariablen, die den aktuellen Benutzer zugeordnet und der reservierte Schlüssel für die Umgebung zugeordnet Variablen, die allen Benutzern auf dem lokalen Computer zugeordnet werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, die <xref:System.EnvironmentVariableTarget> -Enumeration in Methoden zum Erstellen, ändern und Löschen von Umgebungsvariablen.  
  
 [!code-cpp[environment.getsetenvar#1](~/samples/snippets/cpp/VS_Snippets_CLR/environment.getsetenvar/CPP/source.cpp#1)]
 [!code-csharp[environment.getsetenvar#1](~/samples/snippets/csharp/VS_Snippets_CLR/environment.getsetenvar/CS/gsev.cs#1)]
 [!code-vb[environment.getsetenvar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/environment.getsetenvar/VB/gsev.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Machine">
      <MemberSignature Language="C#" Value="Machine" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.EnvironmentVariableTarget Machine = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.EnvironmentVariableTarget.Machine" />
      <MemberSignature Language="VB.NET" Value="Machine" />
      <MemberSignature Language="C++ CLI" Value="Machine" />
      <MemberSignature Language="F#" Value="Machine = 2" Usage="System.EnvironmentVariableTarget.Machine" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnvironmentVariableTarget</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Die Umgebungsvariable wird im <see langword="HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Session Manager\Environment" />-Schlüssel in der Registrierung des Windows-Betriebssystems gespeichert bzw. daraus abgerufen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein Benutzer die Umgebungsvariable in einem Set-Vorgang erstellt, speichert das Betriebssystem die Umgebungsvariable in der Registrierung des Systems, aber nicht in den aktuellen Prozess an. Wenn alle Benutzer auf dem lokalen Computer einen neuen Prozess gestartet wird, kopiert das Betriebssystem die Umgebungsvariable aus der Registrierung für den jeweiligen Prozess an.  
  
 Wenn der Prozess beendet wird, zerstört das Betriebssystem die Umgebungsvariable in diesem Prozess. Die Umgebungsvariable in der Registrierung jedoch bleibt, bis ein Benutzer sie programmgesteuert oder über ein Betriebssystem-Tool entfernt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Process">
      <MemberSignature Language="C#" Value="Process" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.EnvironmentVariableTarget Process = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.EnvironmentVariableTarget.Process" />
      <MemberSignature Language="VB.NET" Value="Process" />
      <MemberSignature Language="C++ CLI" Value="Process" />
      <MemberSignature Language="F#" Value="Process = 0" Usage="System.EnvironmentVariableTarget.Process" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnvironmentVariableTarget</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Die Umgebungsvariable wird in dem Umgebungsblock gespeichert, der dem aktuellen Prozess zugeordnet ist, bzw. daraus abgerufen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Benutzer erstellt die Umgebungsvariable in einem Set-Vorgang.  
  
 Wenn der Prozess beendet wird, zerstört das Betriebssystem die Umgebungsvariable in diesem Prozess.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="User" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.EnvironmentVariableTarget User = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.EnvironmentVariableTarget.User" />
      <MemberSignature Language="VB.NET" Value="User" />
      <MemberSignature Language="C++ CLI" Value="User" />
      <MemberSignature Language="F#" Value="User = 1" Usage="System.EnvironmentVariableTarget.User" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnvironmentVariableTarget</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Die Umgebungsvariable wird im <see langword="HKEY_CURRENT_USER\Environment" />-Schlüssel in der Registrierung des Windows-Betriebssystems gespeichert bzw. daraus abgerufen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn der Benutzer die Umgebungsvariable in einem Set-Vorgang erstellt, speichert das Betriebssystem die Umgebungsvariable aus, in der Registrierung des Systems, aber nicht in den aktuellen Prozess. Wenn der Benutzer einen neuen Prozess startet, kopiert das Betriebssystem die Umgebungsvariable aus der Registrierung für den jeweiligen Prozess an.  
  
 Wenn der Prozess beendet wird, zerstört das Betriebssystem die Umgebungsvariable in diesem Prozess. Die Umgebungsvariable in der Registrierung jedoch bleibt, bis der Benutzer sie programmgesteuert oder über ein Betriebssystem-Tool entfernt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>