<Type Name="EnvironmentVariableTarget" FullName="System.EnvironmentVariableTarget">
  <TypeSignature Language="C#" Value="public enum EnvironmentVariableTarget" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed EnvironmentVariableTarget extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.EnvironmentVariableTarget" />
  <TypeSignature Language="VB.NET" Value="Public Enum EnvironmentVariableTarget" />
  <TypeSignature Language="C++ CLI" Value="public enum class EnvironmentVariableTarget" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ade13-101">Gibt den Speicherort an, an dem eine Umgebungsvariable in einer Set- oder Get-Operation gespeichert bzw. abgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="ade13-101">Specifies the location where an environment variable is stored or retrieved in a set or get operation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ade13-102">Die <xref:System.EnvironmentVariableTarget> Enumeration wird von bestimmten Überladungen der verwendet die <xref:System.Environment.SetEnvironmentVariable%2A>, <xref:System.Environment.GetEnvironmentVariable%2A>, und <xref:System.Environment.GetEnvironmentVariables%2A> Methoden, um den Speicherort oder das Ziel anzugeben, in dem die Namen und den Wert einer Umgebungsvariablen gespeichert oder abgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="ade13-102">The <xref:System.EnvironmentVariableTarget> enumeration is used by certain overloads of the <xref:System.Environment.SetEnvironmentVariable%2A>, <xref:System.Environment.GetEnvironmentVariable%2A>, and <xref:System.Environment.GetEnvironmentVariables%2A> methods to specify the location, or target, where the name and value of an environment variable is stored or retrieved.</span></span>  
  
 <span data-ttu-id="ade13-103">Das Ziel kann eine von drei Speicherorten: der Umgebungsblock, der den aktuellen Prozess, der Windows-Betriebssystem Registrierungsschlüssel reservierte für Umgebungsvariablen, die dem aktuellen Benutzer zugeordnet oder die Registrierungsschlüssel, die für die Umgebung reservierten zugeordnet Variablen, die alle Benutzer auf dem lokalen Computer zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="ade13-103">The target can be one of three locations: the environment block associated with the current process, the Windows operating system registry key reserved for environment variables associated with the current user, or the registry key reserved for environment variables associated with all users on the local machine.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ade13-104">Das folgende Codebeispiel veranschaulicht die <xref:System.EnvironmentVariableTarget> Enumeration in Methoden, die erstellen, ändern und Löschen von Umgebungsvariablen.</span><span class="sxs-lookup"><span data-stu-id="ade13-104">The following code example demonstrates the <xref:System.EnvironmentVariableTarget> enumeration in methods that create, modify, and delete environment variables.</span></span>  
  
 [!code-cpp[environment.getsetenvar#1](~/samples/snippets/cpp/VS_Snippets_CLR/environment.getsetenvar/CPP/source.cpp#1)]
 [!code-csharp[environment.getsetenvar#1](~/samples/snippets/csharp/VS_Snippets_CLR/environment.getsetenvar/CS/gsev.cs#1)]
 [!code-vb[environment.getsetenvar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/environment.getsetenvar/VB/gsev.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Machine">
      <MemberSignature Language="C#" Value="Machine" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.EnvironmentVariableTarget Machine = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.EnvironmentVariableTarget.Machine" />
      <MemberSignature Language="VB.NET" Value="Machine" />
      <MemberSignature Language="C++ CLI" Value="Machine" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnvironmentVariableTarget</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="ade13-105">Die Umgebungsvariable wird im <see langword="HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Session Manager\Environment" />-Schlüssel in der Registrierung des Windows-Betriebssystems gespeichert bzw. daraus abgerufen.</span><span class="sxs-lookup"><span data-stu-id="ade13-105">The environment variable is stored or retrieved from the <see langword="HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Session Manager\Environment" /> key in the Windows operating system registry.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ade13-106">Wenn ein Benutzer die Umgebungsvariable in einem Set-Vorgang erstellt, speichert das Betriebssystem die Umgebungsvariable in der systemregistrierung, aber nicht im aktuellen Prozess an.</span><span class="sxs-lookup"><span data-stu-id="ade13-106">When a user creates the environment variable in a set operation, the operating system stores the environment variable in the system registry, but not in the current process.</span></span> <span data-ttu-id="ade13-107">Wenn jeder Benutzer auf dem lokalen Computer einen neuen Prozess gestartet wird, kopiert das Betriebssystem die Umgebungsvariable aus der Registrierung für den jeweiligen Prozess an.</span><span class="sxs-lookup"><span data-stu-id="ade13-107">If any user on the local machine starts a new process, the operating system copies the environment variable from the registry to that process.</span></span>  
  
 <span data-ttu-id="ade13-108">Wenn der Prozess beendet wird, zerstört das Betriebssystem die Umgebungsvariable in diesem Prozess.</span><span class="sxs-lookup"><span data-stu-id="ade13-108">When the process terminates, the operating system destroys the environment variable in that process.</span></span> <span data-ttu-id="ade13-109">Die Umgebungsvariable in der Registrierung bleibt jedoch erhalten, bis ein Benutzer sie programmgesteuert oder mithilfe eines Betriebssystemtools entfernt.</span><span class="sxs-lookup"><span data-stu-id="ade13-109">However, the environment variable in the registry persists until a user removes it programmatically or by means of an operating system tool.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Process">
      <MemberSignature Language="C#" Value="Process" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.EnvironmentVariableTarget Process = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.EnvironmentVariableTarget.Process" />
      <MemberSignature Language="VB.NET" Value="Process" />
      <MemberSignature Language="C++ CLI" Value="Process" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnvironmentVariableTarget</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="ade13-110">Die Umgebungsvariable wird in dem Umgebungsblock gespeichert, der dem aktuellen Prozess zugeordnet ist, bzw. daraus abgerufen.</span><span class="sxs-lookup"><span data-stu-id="ade13-110">The environment variable is stored or retrieved from the environment block associated with the current process.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ade13-111">Der Benutzer erstellt die Umgebungsvariable in einem Set-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="ade13-111">The user creates the environment variable in a set operation.</span></span>  
  
 <span data-ttu-id="ade13-112">Wenn der Prozess beendet wird, zerstört das Betriebssystem die Umgebungsvariable in diesem Prozess.</span><span class="sxs-lookup"><span data-stu-id="ade13-112">When the process terminates, the operating system destroys the environment variable in that process.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="User" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.EnvironmentVariableTarget User = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.EnvironmentVariableTarget.User" />
      <MemberSignature Language="VB.NET" Value="User" />
      <MemberSignature Language="C++ CLI" Value="User" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnvironmentVariableTarget</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="ade13-113">Die Umgebungsvariable wird im <see langword="HKEY_CURRENT_USER\Environment" />-Schlüssel in der Registrierung des Windows-Betriebssystems gespeichert bzw. daraus abgerufen.</span><span class="sxs-lookup"><span data-stu-id="ade13-113">The environment variable is stored or retrieved from the <see langword="HKEY_CURRENT_USER\Environment" /> key in the Windows operating system registry.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ade13-114">Wenn der Benutzer die Umgebungsvariable in einem Set-Vorgang erstellt, speichert das Betriebssystem die Umgebungsvariable in der systemregistrierung, aber nicht im aktuellen Prozess an.</span><span class="sxs-lookup"><span data-stu-id="ade13-114">When the user creates the environment variable in a set operation, the operating system stores the environment variable in the system registry, but not in the current process.</span></span> <span data-ttu-id="ade13-115">Wenn der Benutzer einen neuen Prozess startet, kopiert das Betriebssystem die Umgebungsvariable aus der Registrierung für den jeweiligen Prozess an.</span><span class="sxs-lookup"><span data-stu-id="ade13-115">If the user starts a new process, the operating system copies the environment variable from the registry to that process.</span></span>  
  
 <span data-ttu-id="ade13-116">Wenn der Prozess beendet wird, zerstört das Betriebssystem die Umgebungsvariable in diesem Prozess.</span><span class="sxs-lookup"><span data-stu-id="ade13-116">When the process terminates, the operating system destroys the environment variable in that process.</span></span> <span data-ttu-id="ade13-117">Die Umgebungsvariable in der Registrierung bleibt jedoch erhalten, bis der Benutzer sie programmgesteuert oder mithilfe eines Betriebssystemtools entfernt.</span><span class="sxs-lookup"><span data-stu-id="ade13-117">However, the environment variable in the registry persists until the user removes it programmatically or by means of an operating system tool.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>