<Type Name="WeakReference" FullName="System.WeakReference">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c64dd4518ed88d7987a52b1fcefc3ba5badf0140" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36427230" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WeakReference : System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit WeakReference extends System.Object implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.WeakReference" />
  <TypeSignature Language="VB.NET" Value="Public Class WeakReference&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class WeakReference : System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type WeakReference = class&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="3a40a-101">Stellt einen schwachen Verweis dar. Dieser verweist auf ein Objekt, ohne jedoch dessen Freigabe durch die Garbage Collection zu verhindern.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3a40a-101">Represents a weak reference, which references an object while still allowing that object to be reclaimed by garbage collection.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a40a-102">Ein schwacher Verweis ermöglicht den Garbage Collector auf ein Objekt zu sammeln, während noch eine Anwendung Zugriff auf das Objekt.</span><span class="sxs-lookup"><span data-stu-id="3a40a-102">A weak reference allows the garbage collector to collect an object while still allowing an application to access the object.</span></span> <span data-ttu-id="3a40a-103">Wenn Sie das Objekt benötigen, können Sie einen starken Verweis darauf zu erhalten und verhindern, dass Sie gesammelt werden.</span><span class="sxs-lookup"><span data-stu-id="3a40a-103">If you need the object, you can still obtain a strong reference to it and prevent it from being collected.</span></span> <span data-ttu-id="3a40a-104">Weitere Informationen zur Verwendung und lange schwache Verweise finden Sie unter [schwache Verweise](~/docs/standard/garbage-collection/weak-references.md).</span><span class="sxs-lookup"><span data-stu-id="3a40a-104">For more information about how to use short and long weak references, see [Weak References](~/docs/standard/garbage-collection/weak-references.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a40a-105">Im folgende Beispiel wird veranschaulicht, wie Sie schwache Verweise können auf um einen Cache von Objekten als Ressource für eine Anwendung zu verwalten.</span><span class="sxs-lookup"><span data-stu-id="3a40a-105">The following example demonstrates how you can use weak references to maintain a cache of objects as a resource for an application.</span></span> <span data-ttu-id="3a40a-106">Der Cache wird unter Verwendung erstellt ein <xref:System.Collections.Generic.IDictionary%602> der <xref:System.WeakReference> Objekte, die einen Indexwert geordnet.</span><span class="sxs-lookup"><span data-stu-id="3a40a-106">The cache is constructed using an <xref:System.Collections.Generic.IDictionary%602> of <xref:System.WeakReference> objects keyed by an index value.</span></span> <span data-ttu-id="3a40a-107">Die <xref:System.WeakReference.Target%2A> -Eigenschaft für die <xref:System.WeakReference> Objekte ist ein Objekt in ein Bytearray, das Daten darstellt.</span><span class="sxs-lookup"><span data-stu-id="3a40a-107">The <xref:System.WeakReference.Target%2A> property for the <xref:System.WeakReference> objects is an object in a byte array that represents data.</span></span>  
  
 <span data-ttu-id="3a40a-108">Im Beispiel greift nach dem Zufallsprinzip auf Objekte im Cache.</span><span class="sxs-lookup"><span data-stu-id="3a40a-108">The example randomly accesses objects in the cache.</span></span> <span data-ttu-id="3a40a-109">Wenn ein Objekt für die Garbagecollection wieder zugänglich gemacht wird, wird ein neues Datenobjekt regeneriert; Andernfalls ist das Objekt aufgrund der schwache Verweis Zugriff zur Verfügung.</span><span class="sxs-lookup"><span data-stu-id="3a40a-109">If an object is reclaimed for garbage collection, a new data object is regenerated; otherwise, the object is available to access because of the weak reference.</span></span>  
  
 [!code-csharp[WeakReference#1](~/samples/snippets/csharp/VS_Snippets_CLR/WeakReference/cs/program.cs#1)]
 [!code-vb[WeakReference#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/WeakReference/vb/Module1.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">
      <span data-ttu-id="3a40a-110">Für die Fähigkeit, nicht verwalteten Code aufrufen.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3a40a-110">for the ability to call unmanaged code.</span>
      </span>
      <span data-ttu-id="3a40a-111">"Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />; Berechtigungswert: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
      <span class="sxs-lookup">
        <span data-stu-id="3a40a-111">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
      </span>
    </permission>
    <altmember cref="T:System.GC" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3a40a-112">Initialisiert eine neue Instanz der <see cref="T:System.WeakReference" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a40a-112">Initializes a new instance of the <see cref="T:System.WeakReference" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WeakReference ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WeakReference.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WeakReference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WeakReference (object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WeakReference.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (target As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WeakReference(System::Object ^ target);" />
      <MemberSignature Language="F#" Value="new WeakReference : obj -&gt; WeakReference" Usage="new System.WeakReference target" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="3a40a-113">Das zu verfolgende Objekt oder <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a40a-113">The object to track or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a40a-114">Initialisiert eine neue Instanz der <see cref="T:System.WeakReference" />-Klasse, die auf das angegebene Objekt verweist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a40a-114">Initializes a new instance of the <see cref="T:System.WeakReference" /> class, referencing the specified object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a40a-115">Dieser Konstruktor erstellt einen kurzen schwachen Verweis auf `target`.</span><span class="sxs-lookup"><span data-stu-id="3a40a-115">This constructor creates a short weak reference to `target`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WeakReference (object target, bool trackResurrection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object target, bool trackResurrection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WeakReference.#ctor(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (target As Object, trackResurrection As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WeakReference(System::Object ^ target, bool trackResurrection);" />
      <MemberSignature Language="F#" Value="new WeakReference : obj * bool -&gt; WeakReference" Usage="new System.WeakReference (target, trackResurrection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="trackResurrection" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="3a40a-116">Ein zu verfolgendes Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a40a-116">An object to track.</span>
          </span>
        </param>
        <param name="trackResurrection">
          <span data-ttu-id="3a40a-117">Gibt an, wann das Verfolgen des Objekts beendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a40a-117">Indicates when to stop tracking the object.</span>
          </span>
          <span data-ttu-id="3a40a-118">Bei <see langword="true" /> wird das Objekt auch nach seiner Finalisierung verfolgt, bei <see langword="false" /> wird das Objekt nur bis zur Finalisierung verfolgt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a40a-118">If <see langword="true" />, the object is tracked after finalization; if <see langword="false" />, the object is only tracked until finalization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a40a-119">Initialisiert eine neue Instanz der <see cref="T:System.WeakReference" />-Klasse, die auf das angegebene Objekt verweist und auf die angegebene Art verfolgt, wie es wieder zugänglich gemacht wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a40a-119">Initializes a new instance of the <see cref="T:System.WeakReference" /> class, referencing the specified object and using the specified resurrection tracking.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a40a-120">Wenn `trackResurrection` ist `false`, ein kurzer schwacher Verweis wird erstellt.</span><span class="sxs-lookup"><span data-stu-id="3a40a-120">If `trackResurrection` is `false`, a short weak reference is created.</span></span> <span data-ttu-id="3a40a-121">Wenn `trackResurrection` ist `true`, ein schwacher Verweis wird erstellt.</span><span class="sxs-lookup"><span data-stu-id="3a40a-121">If `trackResurrection` is `true`, a long weak reference is created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a40a-122">Das folgende Beispiel erstellt einen Cache von Datenobjekten mit kurzen schwache Verweise.</span><span class="sxs-lookup"><span data-stu-id="3a40a-122">The following example creates a cache of data objects with short weak references.</span></span> <span data-ttu-id="3a40a-123">In diesem Beispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.WeakReference> Klasse.</span><span class="sxs-lookup"><span data-stu-id="3a40a-123">This example is part of a larger example provided for the <xref:System.WeakReference> class.</span></span>  
  
 [!code-csharp[WeakReference#2](~/samples/snippets/csharp/VS_Snippets_CLR/WeakReference/cs/program.cs#2)]
 [!code-vb[WeakReference#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/WeakReference/vb/Module1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.Runtime.InteropServices.GCHandle" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WeakReference (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WeakReference.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WeakReference(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new WeakReference : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; WeakReference" Usage="new System.WeakReference (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="3a40a-124">Ein Objekt, das alle für das Serialisieren bzw. Deserialisieren des aktuellen <see cref="T:System.WeakReference" />-Objekts erforderlichen Daten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a40a-124">An object that holds all the data needed to serialize or deserialize the current <see cref="T:System.WeakReference" /> object.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="3a40a-125">(Reserviert) Beschreibt die Quelle und das Ziel des serialisierten Streams, der durch <c>info</c> angegeben wird</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a40a-125">(Reserved) Describes the source and destination of the serialized stream specified by <c>info</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a40a-126">Initialisiert eine neue Instanz der <see cref="T:System.WeakReference" />-Klasse mit deserialisierten Daten aus den angegebenen Serialisierungs- und Stream-Objekten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a40a-126">Initializes a new instance of the <see cref="T:System.WeakReference" /> class, using deserialized data from the specified serialization and stream objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a40a-127">Die `context` Parameter ist reserviert und derzeit nicht bei diesem Vorgang beteiligt.</span><span class="sxs-lookup"><span data-stu-id="3a40a-127">The `context` parameter is reserved, and does not currently participate in this operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a40a-128">
            <paramref name="info" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a40a-128">
              <paramref name="info" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~WeakReference ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WeakReference.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!WeakReference ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="weakReference.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3a40a-129">Verwirft den Verweis auf das Ziel, das durch das aktuelle <see cref="T:System.WeakReference" />-Objekt dargestellt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a40a-129">Discards the reference to the target represented by the current <see cref="T:System.WeakReference" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.GC" />
        <altmember cref="M:System.Object.Finalize" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WeakReference.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="weakReference.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="3a40a-130">Ein Objekt, das alle für das Serialisieren bzw. Deserialisieren des aktuellen <see cref="T:System.WeakReference" />-Objekts erforderlichen Daten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a40a-130">An object that holds all the data needed to serialize or deserialize the current <see cref="T:System.WeakReference" /> object.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="3a40a-131">(Reserviert) Der Ort, an dem serialisierte Daten gespeichert und von dem sie abgerufen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a40a-131">(Reserved) The location where serialized data is stored and retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a40a-132">Füllt ein <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt mit allen für das Serialisieren des aktuellen <see cref="T:System.WeakReference" />-Objekts erforderlichen Daten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a40a-132">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with all the data needed to serialize the current <see cref="T:System.WeakReference" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a40a-133">Diese Methode speichert die Informationen in `info` zum Serialisieren des aktuellen <xref:System.WeakReference> Objekt.</span><span class="sxs-lookup"><span data-stu-id="3a40a-133">This method stores all the information in `info` necessary to serialize the current <xref:System.WeakReference> object.</span></span>  
  
 <span data-ttu-id="3a40a-134">Die `context` Parameter ist reserviert und wird derzeit bei der Ausführung dieser Methode nicht verwendet.</span><span class="sxs-lookup"><span data-stu-id="3a40a-134">The `context` parameter is reserved and is not currently used in the execution of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a40a-135">
            <paramref name="info" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a40a-135">
              <paramref name="info" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="3a40a-136">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a40a-136">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="3a40a-137">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a40a-137">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
      </Docs>
    </Member>
    <Member MemberName="IsAlive">
      <MemberSignature Language="C#" Value="public virtual bool IsAlive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAlive" />
      <MemberSignature Language="DocId" Value="P:System.WeakReference.IsAlive" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsAlive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAlive { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAlive : bool" Usage="System.WeakReference.IsAlive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a40a-138">Ruft einen Wert ab, der angibt, ob das Objekt, auf das das aktuelle <see cref="T:System.WeakReference" />-Objekt verweist, an den Garbage Collector übergeben wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a40a-138">Gets an indication whether the object referenced by the current <see cref="T:System.WeakReference" /> object has been garbage collected.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a40a-139">
            <see langword="true" />, wenn das Objekt, auf das dieses aktuelle <see cref="T:System.WeakReference" />-Objekt verweist, nicht an den Garbage Collector übergeben wurde und weiterhin verfügbar ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a40a-139">
              <see langword="true" /> if the object referenced by the current <see cref="T:System.WeakReference" /> object has not been garbage collected and is still accessible; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a40a-140">Da ein Objekt potenziell für die Garbagecollection wieder zugänglich gemacht werden konnte unmittelbar nach der <xref:System.WeakReference.IsAlive%2A> -Eigenschaft gibt `true`, mit dieser Eigenschaft wird nicht empfohlen, es sei denn, Sie nur für testen eine `false` Rückgabewert.</span><span class="sxs-lookup"><span data-stu-id="3a40a-140">Because an object could potentially be reclaimed for garbage collection immediately after the <xref:System.WeakReference.IsAlive%2A> property returns `true`, using this property is not recommended unless you are testing only for a `false` return value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.GC" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public virtual object Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Target" />
      <MemberSignature Language="DocId" Value="P:System.WeakReference.Target" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Target As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Target { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Target : obj with get, set" Usage="System.WeakReference.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a40a-141">Ruft das Objekt (das Ziel) ab, auf das das aktuelle <see cref="T:System.WeakReference" />-Objekt verweist, oder legt dieses fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a40a-141">Gets or sets the object (the target) referenced by the current <see cref="T:System.WeakReference" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a40a-142">
            <see langword="null" />, wenn das Objekt, auf das das aktuelle <see cref="T:System.WeakReference" />-Objekt verweist, an den Garbage Collector übergeben wurde, andernfalls ein Verweis auf das Objekt, auf das das aktuelle <see cref="T:System.WeakReference" />-Objekt verweist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a40a-142">
              <see langword="null" /> if the object referenced by the current <see cref="T:System.WeakReference" /> object has been garbage collected; otherwise, a reference to the object referenced by the current <see cref="T:System.WeakReference" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a40a-143">Nach dem Festlegen dieser Eigenschaft auf das Zielobjekt, stellen Sie sicher, dass keine anderen starken Verweise auf das Objekt; Andernfalls wird er nicht erfasst werden.</span><span class="sxs-lookup"><span data-stu-id="3a40a-143">After setting this property to the target object, make sure that there are no other strong references to the object; otherwise, it will not be collected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a40a-144">Im folgenden Beispiel wird versucht, ein Objekt aus einem Cache von Objekten mit schwacher Verweise zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="3a40a-144">The following example tries to obtain an object from a cache of objects with weak references.</span></span> <span data-ttu-id="3a40a-145">Wenn das Objekt für die Garbagecollection wieder zugänglich gemacht wurde, wird ein neues Objekt generiert.</span><span class="sxs-lookup"><span data-stu-id="3a40a-145">If the object was reclaimed for garbage collection, a new object is generated.</span></span> <span data-ttu-id="3a40a-146">In diesem Beispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.WeakReference> Klasse.</span><span class="sxs-lookup"><span data-stu-id="3a40a-146">This example is part of a larger example provided for the <xref:System.WeakReference> class.</span></span>  
  
 [!code-csharp[WeakReference#3](~/samples/snippets/csharp/VS_Snippets_CLR/WeakReference/cs/program.cs#3)]
 [!code-vb[WeakReference#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/WeakReference/vb/Module1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3a40a-147">Der Verweis auf das Zielobjekt ist ungültig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a40a-147">The reference to the target object is invalid.</span>
          </span>
          <span data-ttu-id="3a40a-148">Diese Ausnahme kann beim Festlegen dieser Eigenschaft ausgelöst werden, wenn der Wert ein Nullverweis ist oder wenn das Objekt während des Set-Vorgangs abgeschlossen wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a40a-148">This exception can be thrown while setting this property if the value is a null reference or if the object has been finalized during the set operation.</span>
          </span>
        </exception>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.GC" />
      </Docs>
    </Member>
    <Member MemberName="TrackResurrection">
      <MemberSignature Language="C#" Value="public virtual bool TrackResurrection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TrackResurrection" />
      <MemberSignature Language="DocId" Value="P:System.WeakReference.TrackResurrection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TrackResurrection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool TrackResurrection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.TrackResurrection : bool" Usage="System.WeakReference.TrackResurrection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a40a-149">Ruft eine Angabe darüber ab, ob das Objekt, auf das das aktuelle <see cref="T:System.WeakReference" />-Objekt verweist, nach der Finalisierung verfolgt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a40a-149">Gets an indication whether the object referenced by the current <see cref="T:System.WeakReference" /> object is tracked after it is finalized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a40a-150">
            <see langword="true" />, wenn das Objekt, auf das das aktuelle <see cref="T:System.WeakReference" />-Objekt verweist, nach seiner Finalisierung verfolgt wird, oder <see langword="false" />, wenn das Objekt nur bis zur Finalisierung verfolgt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a40a-150">
              <see langword="true" /> if the object the current <see cref="T:System.WeakReference" /> object refers to is tracked after finalization; or <see langword="false" /> if the object is only tracked until finalization.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a40a-151">Wenn `true`, der schwache Verweis ist ein schwacher Verweis und `true` wurde angegeben, für die `trackResurrection` Parameter in der <xref:System.WeakReference> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="3a40a-151">If `true`, the weak reference is a long weak reference and `true` was specified for the `trackResurrection` parameter in the <xref:System.WeakReference> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.GC" />
      </Docs>
    </Member>
  </Members>
</Type>