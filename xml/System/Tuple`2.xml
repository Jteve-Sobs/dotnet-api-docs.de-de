<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Tuple`2.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac542802c8b131a7cf4904d9bfcece32d03ba6f604e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">42802c8b131a7cf4904d9bfcece32d03ba6f604e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`2">
          <source>The type of the tuple's first component.</source>
          <target state="translated">Der Typ der ersten Komponente des Tupels.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`2">
          <source>The type of the tuple's second component.</source>
          <target state="translated">Der Typ der zweiten Komponente des Tupels.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Tuple`2">
          <source>Represents a 2-tuple, or pair.</source>
          <target state="translated">Stellt ein 2-Tupel (Paar) dar.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`2">
          <source>A tuple is a data structure that has a specific number and sequence of values.</source>
          <target state="translated">Ein Tupel ist eine Datenstruktur, die eine bestimmte Anzahl und die Sequenz von Werten aufweist.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`2">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%602&gt;</ph> class represents a 2-tuple, or pair, which is a tuple that has two components.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Tuple%602&gt;</ph> Klasse stellt ein 2-Tupel bzw. Paar, das ein Tupel ist, die über zwei Komponenten verfügt.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`2">
          <source>A 2-tuple is similar to a <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> structure.</source>
          <target state="translated">Ein 2-Tupel ähnelt einer <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> Struktur.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`2">
          <source>You can instantiate a <ph id="ph1">&lt;xref:System.Tuple%602&gt;</ph> object by calling either the <ph id="ph2">&lt;xref:System.Tuple%602.%23ctor%2A&gt;</ph> constructor or the static <ph id="ph3">&lt;xref:System.Tuple.Create%60%602%28%60%600%2C%60%601%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Instanziieren Sie ein <ph id="ph1">&lt;xref:System.Tuple%602&gt;</ph> durch den Aufruf eines Objekts die <ph id="ph2">&lt;xref:System.Tuple%602.%23ctor%2A&gt;</ph> Konstruktor oder die statische <ph id="ph3">&lt;xref:System.Tuple.Create%60%602%28%60%600%2C%60%601%29?displayProperty=nameWithType&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`2">
          <source>You can retrieve the values of the tuple's components by using the read-only <ph id="ph1">&lt;xref:System.Tuple%602.Item1%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Tuple%602.Item2%2A&gt;</ph> instance properties.</source>
          <target state="translated">Sie können die Werte der Komponenten des Tupels abrufen, indem Sie mithilfe der schreibgeschützten <ph id="ph1">&lt;xref:System.Tuple%602.Item1%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Tuple%602.Item2%2A&gt;</ph> Instanzeigenschaften.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`2">
          <source>Tuples are commonly used in four different ways:</source>
          <target state="translated">Tupel werden häufig in vier verschiedene Arten verwendet:</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`2">
          <source>To represent a single set of data.</source>
          <target state="translated">Um einen einzelnen Satz von Daten darzustellen.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`2">
          <source>For example, a tuple can represent a record in a database, and its components can represent that record's fields.</source>
          <target state="translated">Beispielsweise ein Tupel kann einen Datensatz in einer Datenbank darstellen, und seine Komponenten können die Felder des Datensatzes darstellen.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`2">
          <source>To provide easy access to, and manipulation of, a data set.</source>
          <target state="translated">Einfacher Zugriff auf und Bearbeitung von einem DataSet bereitzustellen.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`2">
          <source>The following example defines an array of <ph id="ph1">&lt;xref:System.Tuple%602&gt;</ph> objects that contain the names of students and their corresponding test scores.</source>
          <target state="translated">Das folgende Beispiel definiert ein Array von <ph id="ph1">&lt;xref:System.Tuple%602&gt;</ph> Testergebnisse für Objekte, die die Namen von Studenten und ihre entsprechenden enthalten.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`2">
          <source>It then iterates the array to calculate the mean test score.</source>
          <target state="translated">Es durchläuft dann das Array, um das mittlere Testergebnis zu berechnen.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`2">
          <source>To return multiple values from a method without the use of <ph id="ph1">`out`</ph> parameters (in C#) or <ph id="ph2">`ByRef`</ph> parameters (in Visual Basic).</source>
          <target state="translated">Mehrere Werte zurückgeben, von einer Methode ohne Verwendung eines <ph id="ph1">`out`</ph> Parameter (in c#) oder <ph id="ph2">`ByRef`</ph> Parameter (in Visual Basic).</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`2">
          <source>For example, the following example uses a <ph id="ph1">&lt;xref:System.Tuple%602&gt;</ph> object to return the quotient and the remainder that result from integer division.</source>
          <target state="translated">Z. B. im folgenden Beispiel wird eine <ph id="ph1">&lt;xref:System.Tuple%602&gt;</ph> Objekts, das den Quotienten und des Rests einer Ganzzahldivision zurückgegeben.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`2">
          <source>To pass multiple values to a method through a single parameter.</source>
          <target state="translated">Mehrere Werte an eine Methode über einen einzelnen Parameter übergeben.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`2">
          <source>For example, the <ph id="ph1">&lt;xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType&gt;</ph> method has a single parameter that lets you supply one value to the method that the thread executes at startup.</source>
          <target state="translated">Z. B. die <ph id="ph1">&lt;xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType&gt;</ph> Methode verfügt über einen einzelnen Parameter, mit dem Sie einen Wert für die Methode angeben, die beim Start der Thread ausgeführt wird.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`2">
          <source>If you supply a <ph id="ph1">&lt;xref:System.Tuple%602&gt;</ph> object as the method argument, you can supply the thread’s startup routine with two items of data.</source>
          <target state="translated">Wenn Sie angeben, ein <ph id="ph1">&lt;xref:System.Tuple%602&gt;</ph> -Objekt als Methodenargument können Sie die Startroutine mit zwei Datenelemente angeben.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Tuple`2.#ctor(`0,`1)">
          <source>The value of the tuple's first component.</source>
          <target state="translated">Der Wert der ersten Komponente des Tupels.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Tuple`2.#ctor(`0,`1)">
          <source>The value of the tuple's second component.</source>
          <target state="translated">Der Wert der zweiten Komponente des Tupels.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Tuple`2.#ctor(`0,`1)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Tuple`2" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Tuple`2" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`2.#ctor(`0,`1)">
          <source>You can also use the static <ph id="ph1">&lt;xref:System.Tuple.Create%60%602%28%60%600%2C%60%601%29?displayProperty=nameWithType&gt;</ph> method to instantiate a 2-tuple object without having to explicitly specify the types of its components.</source>
          <target state="translated">Sie können auch mithilfe der statischen <ph id="ph1">&lt;xref:System.Tuple.Create%60%602%28%60%600%2C%60%601%29?displayProperty=nameWithType&gt;</ph> Methode, um ein 2-Tupel-Objekt zu instanziieren, ohne die Typen seiner Komponenten explizit angeben zu müssen.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`2.#ctor(`0,`1)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Tuple.Create%60%602%28%60%600%2C%60%601%29?displayProperty=nameWithType&gt;</ph> method to instantiate a 2-tuple whose components are of type <ph id="ph2">&lt;xref:System.String&gt;</ph> and <ph id="ph3">&lt;xref:System.Double&gt;</ph>.</source>
          <target state="translated">Im folgenden Beispiel wird die <ph id="ph1">&lt;xref:System.Tuple.Create%60%602%28%60%600%2C%60%601%29?displayProperty=nameWithType&gt;</ph> Methode, um ein 2-Tupel, dessen Komponenten vom Typ sind <ph id="ph2">&lt;xref:System.String&gt;</ph> und <ph id="ph3">&lt;xref:System.Double&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`2.#ctor(`0,`1)">
          <source>This is equivalent to the following call to the <ph id="ph1">&lt;xref:System.Tuple%602.%23ctor%2A&gt;</ph> class constructor.</source>
          <target state="translated">Dies ist gleichbedeutend mit dem folgenden Aufruf der <ph id="ph1">&lt;xref:System.Tuple%602.%23ctor%2A&gt;</ph> Klassenkonstruktor.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Tuple`2.Equals(System.Object)">
          <source>The object to compare with this instance.</source>
          <target state="translated">Das Objekt, das mit dieser Instanz verglichen werden soll.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Tuple`2.Equals(System.Object)">
          <source>Returns a value that indicates whether the current <ph id="ph1">&lt;see cref="T:System.Tuple`2" /&gt;</ph> object is equal to a specified object.</source>
          <target state="translated">Gibt einen Wert zurück, der angibt, ob das aktuelle <ph id="ph1">&lt;see cref="T:System.Tuple`2" /&gt;</ph>-Objekt gleich einem angegebenen Objekt ist.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Tuple`2.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current instance is equal to the specified object; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die aktuelle Instanz gleich dem angegebenen Objekt ist, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`2.Equals(System.Object)">
          <source>The <ph id="ph1">`obj`</ph> parameter is considered to be equal to the current instance under the following conditions:</source>
          <target state="translated">Die <ph id="ph1">`obj`</ph> Parameter wird als gleich der aktuellen Instanz in den folgenden Situationen:</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`2.Equals(System.Object)">
          <source>It is a <ph id="ph1">&lt;xref:System.Tuple%602&gt;</ph> object.</source>
          <target state="translated">Es ist ein <ph id="ph1">&lt;xref:System.Tuple%602&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`2.Equals(System.Object)">
          <source>Its two components are of the same types as the current instance.</source>
          <target state="translated">Die beiden Komponenten sind dieselben Typen wie die aktuelle Instanz.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`2.Equals(System.Object)">
          <source>Its two components are equal to those of the current instance.</source>
          <target state="translated">Die beiden Komponenten sind, die denen der aktuellen Instanz entsprechen.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`2.Equals(System.Object)">
          <source>Equality is determined by the default object equality comparer for each component.</source>
          <target state="translated">Die Gleichheit wird vom standardmäßigen Objektgleichheitsvergleich für die einzelnen Komponenten festgelegt.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`2.Equals(System.Object)">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Tuple%602.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph> method to determine whether any of the objects in an array of <ph id="ph2">&lt;xref:System.Tuple%602&gt;</ph> objects are equal to one another.</source>
          <target state="translated">Im folgenden Beispiel wird die <ph id="ph1">&lt;xref:System.Tuple%602.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph> Methode, um zu bestimmen, ob eines der Objekte in einem Array von <ph id="ph2">&lt;xref:System.Tuple%602&gt;</ph> Objekte gleich sind.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`2.Equals(System.Object)">
          <source>The output reflects the fact that the <ph id="ph1">&lt;xref:System.Tuple%602.Equals%28System.Object%29&gt;</ph> method returns <ph id="ph2">`true`</ph> when comparing <ph id="ph3">&lt;xref:System.Tuple%602&gt;</ph> objects whose components have equal values.</source>
          <target state="translated">Die Ausgabe gibt die Tatsache wieder, die die <ph id="ph1">&lt;xref:System.Tuple%602.Equals%28System.Object%29&gt;</ph> -Methode zurückkehrt <ph id="ph2">`true`</ph> beim Vergleich von <ph id="ph3">&lt;xref:System.Tuple%602&gt;</ph> Objekte, deren Komponenten gleiche Werte aufweisen.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Tuple`2.GetHashCode">
          <source>Returns the hash code for the current <ph id="ph1">&lt;see cref="T:System.Tuple`2" /&gt;</ph> object.</source>
          <target state="translated">Gibt den Hashcode für das aktuelle <ph id="ph1">&lt;see cref="T:System.Tuple`2" /&gt;</ph>-Objekt zurück.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Tuple`2.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.Tuple`2.Item1">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`2" /&gt;</ph> object's first component.</source>
          <target state="translated">Ruft den Wert der ersten Komponente des aktuellen <ph id="ph1">&lt;see cref="T:System.Tuple`2" /&gt;</ph>-Objekts ab.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`2.Item1">
          <source>The value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`2" /&gt;</ph> object's first component.</source>
          <target state="translated">Der Wert der ersten Komponente des aktuellen <ph id="ph1">&lt;see cref="T:System.Tuple`2" /&gt;</ph>-Objekts.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`2.Item1">
          <source>You can dynamically determine the type of the <ph id="ph1">&lt;xref:System.Tuple%602.Item1%2A&gt;</ph> component in one of two ways:</source>
          <target state="translated">Sie können den Typ des dynamisch bestimmen die <ph id="ph1">&lt;xref:System.Tuple%602.Item1%2A&gt;</ph> -Komponente in zwei Arten:</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`2.Item1">
          <source>By calling the <ph id="ph1">`GetType`</ph> method on the value that is returned by the <ph id="ph2">&lt;xref:System.Tuple%602.Item1%2A&gt;</ph> property.</source>
          <target state="translated">Durch Aufrufen der <ph id="ph1">`GetType`</ph> Methode auf dem Wert, der von zurückgegeben wird die <ph id="ph2">&lt;xref:System.Tuple%602.Item1%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`2.Item1">
          <source>By retrieving the <ph id="ph1">&lt;xref:System.Type&gt;</ph> object that represents the <ph id="ph2">&lt;xref:System.Tuple%602&gt;</ph> object, and retrieving the first element from the array that is returned by its <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Durch Abrufen der <ph id="ph1">&lt;xref:System.Type&gt;</ph> Objekt, das darstellt der <ph id="ph2">&lt;xref:System.Tuple%602&gt;</ph> -Objekt und das Abrufen des ersten Elements aus dem Array, das von zurückgegebene seine <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`2.Item1">
          <source>The example illustrates the use of the <ph id="ph1">&lt;xref:System.Tuple%602.Item1%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Tuple%602.Item2%2A&gt;</ph> properties to define a method that returns multiple values in the form of a 2-tuple.</source>
          <target state="translated">Das Beispiel veranschaulicht die Verwendung der <ph id="ph1">&lt;xref:System.Tuple%602.Item1%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Tuple%602.Item2%2A&gt;</ph> Eigenschaften definieren eine Methode, die mehrere Werte in der Form ein 2-Tupel zurückgibt.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="P:System.Tuple`2.Item2">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`2" /&gt;</ph> object's second component.</source>
          <target state="translated">Ruft den Wert der zweiten Komponente des aktuellen <ph id="ph1">&lt;see cref="T:System.Tuple`2" /&gt;</ph>-Objekts ab.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`2.Item2">
          <source>The value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`2" /&gt;</ph> object's second component.</source>
          <target state="translated">Der Wert der zweiten Komponente des aktuellen <ph id="ph1">&lt;see cref="T:System.Tuple`2" /&gt;</ph>-Objekts.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`2.Item2">
          <source>You can dynamically determine the type of the <ph id="ph1">&lt;xref:System.Tuple%602.Item2%2A&gt;</ph> component in one of two ways:</source>
          <target state="translated">Sie können den Typ des dynamisch bestimmen die <ph id="ph1">&lt;xref:System.Tuple%602.Item2%2A&gt;</ph> -Komponente in zwei Arten:</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`2.Item2">
          <source>By calling the <ph id="ph1">`GetType`</ph> method on the value that is returned by the <ph id="ph2">&lt;xref:System.Tuple%602.Item2%2A&gt;</ph> property.</source>
          <target state="translated">Durch Aufrufen der <ph id="ph1">`GetType`</ph> Methode auf dem Wert, der von zurückgegeben wird die <ph id="ph2">&lt;xref:System.Tuple%602.Item2%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`2.Item2">
          <source>By retrieving the <ph id="ph1">&lt;xref:System.Type&gt;</ph> object that represents the <ph id="ph2">&lt;xref:System.Tuple%602&gt;</ph> object, and retrieving the second element from the array that is returned by its <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Durch Abrufen der <ph id="ph1">&lt;xref:System.Type&gt;</ph> Objekt, das darstellt der <ph id="ph2">&lt;xref:System.Tuple%602&gt;</ph> -Objekt und das zweite Element aus dem Array, das von zurückgegebene abrufen seiner <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`2.Item2">
          <source>The example illustrates the use of the <ph id="ph1">&lt;xref:System.Tuple%602.Item1%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Tuple%602.Item2%2A&gt;</ph> properties to define a method that returns multiple values in the form of a 2-tuple.</source>
          <target state="translated">Das Beispiel veranschaulicht die Verwendung der <ph id="ph1">&lt;xref:System.Tuple%602.Item1%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Tuple%602.Item2%2A&gt;</ph> Eigenschaften definieren eine Methode, die mehrere Werte in der Form ein 2-Tupel zurückgibt.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Tuple`2.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>An object to compare with the current instance.</source>
          <target state="translated">Ein Objekt, das mit der aktuellen Instanz verglichen werden soll.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Tuple`2.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>An object that provides custom rules for comparison.</source>
          <target state="translated">Ein Objekt, das benutzerdefinierte Regeln für Vergleiche bereitstellt.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Tuple`2.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>Compares the current <ph id="ph1">&lt;see cref="T:System.Tuple`2" /&gt;</ph> object to a specified object by using a specified comparer, and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</source>
          <target state="translated">Vergleicht das aktuelle <ph id="ph1">&lt;see cref="T:System.Tuple`2" /&gt;</ph>-Objekt anhand eines angegebenen Vergleichs mit einem angegebenen Objekt und gibt eine ganze Zahl zurück, die angibt, ob sich das aktuelle Objekt in der Sortierreihenfolge vor dem angegebenen Objekt, dahinter oder an derselben Position befindet.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Tuple`2.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>A signed integer that indicates the relative position of this instance and <ph id="ph1">&lt;paramref name="other" /&gt;</ph> in the sort order, as shown in the following table.</source>
          <target state="translated">Eine ganze Zahl mit Vorzeichen, die die relative Position dieser Instanz und von <ph id="ph1">&lt;paramref name="other" /&gt;</ph> in der Sortierreihenfolge angibt, wie in der folgenden Tabelle veranschaulicht.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Tuple`2.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Wert</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Tuple`2.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Beschreibung</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Tuple`2.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A negative integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Eine negative ganze Zahl</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Tuple`2.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance precedes <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Diese Instanz geht <ph id="ph3">&lt;paramref name="other" /&gt;</ph> voran.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Tuple`2.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0 (null)</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Tuple`2.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance and <ph id="ph3">&lt;paramref name="other" /&gt;</ph> have the same position in the sort order.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Diese Instanz und <ph id="ph3">&lt;paramref name="other" /&gt;</ph> befinden sich in der Sortierreihenfolge an der gleichen Position.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Tuple`2.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A positive integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Eine positive ganze Zahl</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Tuple`2.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance follows <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Diese Instanz folgt <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`2.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`2.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Tuple%602&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IStructuralComparable&gt;</ph> interface.</source>
          <target state="translated">Er kann nur verwendet werden, wenn die <ph id="ph1">&lt;xref:System.Tuple%602&gt;</ph>-Instanz in eine <ph id="ph2">&lt;xref:System.Collections.IStructuralComparable&gt;</ph>-Schnittstelle umgewandelt wird.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`2.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>Although this method can be called directly, it is most commonly called by collection sorting methods that include <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> parameters to order the members of a collection., For example, it is called by the <ph id="ph2">&lt;xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Collections.SortedList.Add%2A&gt;</ph> method of a <ph id="ph4">&lt;xref:System.Collections.SortedList&gt;</ph> object that is instantiated by using the <ph id="ph5">&lt;xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> constructor.</source>
          <target state="translated">Obwohl diese Methode direkt aufgerufen werden kann, wird er am häufigsten durch aufgerufen Auflistung Sortieren von Methoden wie <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> Parameter zum Anordnen der Elemente einer Auflistung., z. B. von aufgerufen der <ph id="ph2">&lt;xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> Methode und die <ph id="ph3">&lt;xref:System.Collections.SortedList.Add%2A&gt;</ph> Methode von einem <ph id="ph4">&lt;xref:System.Collections.SortedList&gt;</ph> -Objekt, das mit instanziiert wird die <ph id="ph5">&lt;xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> Konstruktor.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`2.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%602.System%23Collections%23IStructuralComparable%23CompareTo%2A&gt;</ph> method is intended for use in sorting operations.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Tuple%602.System%23Collections%23IStructuralComparable%23CompareTo%2A&gt;</ph> Methode ist für die Verwendung in Sortiervorgängen vorgesehen.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`2.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</source>
          <target state="translated">Es sollte nicht verwendet werden, wenn der primäre Zweck eines Vergleichs ist, um zu bestimmen, ob zwei Objekte gleich sind.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`2.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>To determine whether two objects are equal, call the <ph id="ph1">&lt;xref:System.Tuple%602.System%23Collections%23IStructuralEquatable%23Equals%2A&gt;</ph> method.</source>
          <target state="translated">Um zu bestimmen, ob zwei Objekte gleich sind, rufen Sie die <ph id="ph1">&lt;xref:System.Tuple%602.System%23Collections%23IStructuralEquatable%23Equals%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`2.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>The following example creates an array of <ph id="ph1">&lt;xref:System.Tuple%602&gt;</ph> objects that consist of a student's name and test score.</source>
          <target state="translated">Das folgende Beispiel erstellt ein Array von <ph id="ph1">&lt;xref:System.Tuple%602&gt;</ph> Objekte, die eine Student Namen und Bewertung zu testen.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`2.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>It displays the component of each tuple in the array in unsorted order, sorts the array, and then calls <ph id="ph1">&lt;xref:System.Tuple%602.ToString%2A&gt;</ph> to display the value of each tuple in sorted order.</source>
          <target state="translated">Die Komponente der einzelnen Tupel im Array in unsortierter Reihenfolge angezeigt, sortiert das Array und ruft dann <ph id="ph1">&lt;xref:System.Tuple%602.ToString%2A&gt;</ph> den Wert jedes Tupels in sortierter Reihenfolge anzuzeigen.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`2.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>To sort the array, the example defines a generic <ph id="ph1">`ScoreComparer`</ph> class that implements the <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> interface and sorts the <ph id="ph3">&lt;xref:System.Tuple%602&gt;</ph> objects in ascending order by the value of their second component rather than their first component.</source>
          <target state="translated">Um das Array zu sortieren, definiert das Beispiel eine generische <ph id="ph1">`ScoreComparer`</ph> Klasse, die implementiert die <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> Schnittstelle und sortiert die <ph id="ph3">&lt;xref:System.Tuple%602&gt;</ph> Objekte in aufsteigender Reihenfolge nach dem Wert der zweiten Komponente anstelle der ersten Komponente.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`2.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>Note that the example does not directly call the <ph id="ph1">&lt;xref:System.Tuple%602.System%23Collections%23IStructuralComparable%23CompareTo%2A&gt;</ph> method.</source>
          <target state="translated">Beachten Sie, die im Beispiel nicht direkt aufgerufen wird die <ph id="ph1">&lt;xref:System.Tuple%602.System%23Collections%23IStructuralComparable%23CompareTo%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`2.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>This method is called implicitly by the <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> method for each element in the array.</source>
          <target state="translated">Diese Methode aufgerufen wird, implizit von der <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> Methode für jedes Element im Array.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Tuple`2.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Tuple`2" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph> ist kein <ph id="ph2">&lt;see cref="T:System.Tuple`2" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Tuple`2.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The object to compare with this instance.</source>
          <target state="translated">Das Objekt, das mit dieser Instanz verglichen werden soll.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Tuple`2.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>An object that defines the method to use to evaluate whether the two objects are equal.</source>
          <target state="translated">Ein Objekt, das die Methode definiert, mit der ermittelt wird, ob die beiden Objekte gleich sind.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Tuple`2.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>Returns a value that indicates whether the current <ph id="ph1">&lt;see cref="T:System.Tuple`2" /&gt;</ph> object is equal to a specified object based on a specified comparison method.</source>
          <target state="translated">Gibt einen Wert zurück, der auf Grundlage einer angegebenen Vergleichsmethode angibt, ob das aktuelle <ph id="ph1">&lt;see cref="T:System.Tuple`2" /&gt;</ph>-Objekt gleich einem angegebenen Objekt ist.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Tuple`2.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current instance is equal to the specified object; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die aktuelle Instanz gleich dem angegebenen Objekt ist, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`2.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`2.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Tuple%602&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface.</source>
          <target state="translated">Er kann nur verwendet werden, wenn die <ph id="ph1">&lt;xref:System.Tuple%602&gt;</ph>-Instanz in eine <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph>-Schnittstelle umgewandelt wird.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`2.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%602.System%23Collections%23IStructuralEquatable%23Equals%2A&gt;</ph> implementation is called only if <ph id="ph2">`other`</ph> is not <ph id="ph3">`null`</ph>, and if it can be successfully cast (in C#) or converted (in Visual Basic) to a <ph id="ph4">&lt;xref:System.Tuple%602&gt;</ph> object whose components are of the same types as the current instance.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Tuple%602.System%23Collections%23IStructuralEquatable%23Equals%2A&gt;</ph> Implementierung wird nur aufgerufen, wenn <ph id="ph2">`other`</ph> nicht <ph id="ph3">`null`</ph>, und ob es erfolgreich sein kann (in c#) umgewandelt oder konvertiert (in Visual Basic) einer <ph id="ph4">&lt;xref:System.Tuple%602&gt;</ph> Objekt, dessen Komponenten dieselben Typen wie die aktuelle Instanz sind.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`2.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%602.System%23Collections%23IStructuralEquatable%23Equals%2A&gt;</ph> method first passes the <ph id="ph2">&lt;xref:System.Tuple%602.Item1%2A&gt;</ph> values of the <ph id="ph3">&lt;xref:System.Tuple%602&gt;</ph> objects to be compared to the <ph id="ph4">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType&gt;</ph> implementation.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Tuple%602.System%23Collections%23IStructuralEquatable%23Equals%2A&gt;</ph> -Methode übergibt zuerst die <ph id="ph2">&lt;xref:System.Tuple%602.Item1%2A&gt;</ph> Werte von der <ph id="ph3">&lt;xref:System.Tuple%602&gt;</ph> zu zu vergleichenden Objekte die <ph id="ph4">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType&gt;</ph> Implementierung.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`2.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>If this method call returns <ph id="ph1">`true`</ph>, the method is called again and passed the <ph id="ph2">&lt;xref:System.Tuple%602.Item2%2A&gt;</ph> values of the two <ph id="ph3">&lt;xref:System.Tuple%602&gt;</ph> objects.</source>
          <target state="translated">Wenn dieser Methodenaufruf zurückgegeben <ph id="ph1">`true`</ph>, die-Methode erneut aufgerufen und an die <ph id="ph2">&lt;xref:System.Tuple%602.Item2%2A&gt;</ph> Werte der beiden <ph id="ph3">&lt;xref:System.Tuple%602&gt;</ph> Objekte.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`2.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The following example defines an <ph id="ph1">`Item2Comparer`</ph> class that implements the <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer&gt;</ph> interface and changes the way in which <ph id="ph3">&lt;xref:System.Tuple%602&gt;</ph> objects are evaluated for equality.</source>
          <target state="translated">Das folgende Beispiel definiert eine <ph id="ph1">`Item2Comparer`</ph> Klasse, die implementiert die <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer&gt;</ph> Schnittstelle, und ändert die Art, wie <ph id="ph3">&lt;xref:System.Tuple%602&gt;</ph> -Objekte auf Gleichheit ausgewertet werden.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`2.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The method always returns <ph id="ph1">`true`</ph> when it is passed the <ph id="ph2">&lt;xref:System.Tuple%602.Item1%2A&gt;</ph> property values of two <ph id="ph3">&lt;xref:System.Tuple%602&gt;</ph> objects, and it calls the <ph id="ph4">&lt;xref:System.Tuple%602.System%23Collections%23IStructuralEquatable%23Equals%2A&gt;</ph> method to evaluate their <ph id="ph5">&lt;xref:System.Tuple%602.Item2%2A&gt;</ph> property values.</source>
          <target state="translated">Die-Methode gibt immer <ph id="ph1">`true`</ph> wird beim Übergeben der <ph id="ph2">&lt;xref:System.Tuple%602.Item1%2A&gt;</ph> Eigenschaftswerte von zwei <ph id="ph3">&lt;xref:System.Tuple%602&gt;</ph> Objekte, und ruft die <ph id="ph4">&lt;xref:System.Tuple%602.System%23Collections%23IStructuralEquatable%23Equals%2A&gt;</ph> Methode auszuwertende ihre <ph id="ph5">&lt;xref:System.Tuple%602.Item2%2A&gt;</ph> Eigenschaftswerte.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`2.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>As a result, the method tests for equality based only on the value of the <ph id="ph1">&lt;xref:System.Tuple%602.Item2%2A&gt;</ph> property.</source>
          <target state="translated">Daher die Methode testet auf Gleichheit anhand des Werts, der nur die <ph id="ph1">&lt;xref:System.Tuple%602.Item2%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`2.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The output illustrates the result for a data set of <ph id="ph1">&lt;xref:System.Tuple%602&gt;</ph> objects that record the names of runners and the distances that they ran.</source>
          <target state="translated">Die Ausgabe veranschaulicht das Ergebnis für ein Dataset von <ph id="ph1">&lt;xref:System.Tuple%602&gt;</ph> Objekte, die die Namen der Kanäle und die Abstände an, die Ausführung aufzeichnen.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Tuple`2.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>An object whose <ph id="ph1">&lt;see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /&gt;</ph> method calculates the hash code of the current <ph id="ph2">&lt;see cref="T:System.Tuple`2" /&gt;</ph> object.</source>
          <target state="translated">Ein Objekt, dessen <ph id="ph1">&lt;see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /&gt;</ph>-Methode den Hashcode des aktuellen <ph id="ph2">&lt;see cref="T:System.Tuple`2" /&gt;</ph>-Objekts berechnet</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Tuple`2.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>Calculates the hash code for the current <ph id="ph1">&lt;see cref="T:System.Tuple`2" /&gt;</ph> object by using a specified computation method.</source>
          <target state="translated">Berechnet mit einer angegebenen Berechnungsmethode den Hash für das aktuelle <ph id="ph1">&lt;see cref="T:System.Tuple`2" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Tuple`2.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`2.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`2.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Tuple%602&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface.</source>
          <target state="translated">Er kann nur verwendet werden, wenn die <ph id="ph1">&lt;xref:System.Tuple%602&gt;</ph>-Instanz in eine <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph>-Schnittstelle umgewandelt wird.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`2.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>The method simply wraps a call to the <ph id="ph1">`comparer`</ph> object's <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType&gt;</ph> implementation.</source>
          <target state="translated">Die Methode einfach einen Aufruf umschließt die <ph id="ph1">`comparer`</ph> des Objekts <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType&gt;</ph> Implementierung.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`2.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>The algorithm used to compute the hash code should return the same hash code for two <ph id="ph1">&lt;xref:System.Tuple%602&gt;</ph> objects that are considered to be equal.</source>
          <target state="translated">Der Algorithmus verwendet, um den Hash berechnen sollte den gleichen Hashcode zurückgeben, für zwei <ph id="ph1">&lt;xref:System.Tuple%602&gt;</ph> Objekte, die als gleich betrachtet werden.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Tuple`2.System#IComparable#CompareTo(System.Object)">
          <source>An object to compare with the current instance.</source>
          <target state="translated">Ein Objekt, das mit der aktuellen Instanz verglichen werden soll.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Tuple`2.System#IComparable#CompareTo(System.Object)">
          <source>Compares the current <ph id="ph1">&lt;see cref="T:System.Tuple`2" /&gt;</ph> object to a specified object and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</source>
          <target state="translated">Vergleicht das aktuelle <ph id="ph1">&lt;see cref="T:System.Tuple`2" /&gt;</ph>-Objekt mit einem angegebenen Objekt und gibt eine Ganzzahl zurück, die darauf hinweist, ob sich das aktuelle Objekt in der Sortierreihenfolge vor oder hinter dem angegebenen Objekt oder an der gleichen Position befindet.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Tuple`2.System#IComparable#CompareTo(System.Object)">
          <source>A signed integer that indicates the relative position of this instance and <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> in the sort order, as shown in the following table.</source>
          <target state="translated">Eine ganze Zahl mit Vorzeichen, die die relative Position dieser Instanz und von <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> in der Sortierreihenfolge angibt, wie in der folgenden Tabelle veranschaulicht.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Tuple`2.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Wert</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Tuple`2.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Beschreibung</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Tuple`2.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A negative integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Eine negative ganze Zahl</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Tuple`2.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance precedes <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Diese Instanz geht <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> voran.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Tuple`2.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0 (null)</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Tuple`2.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance and <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> have the same position in the sort order.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Diese Instanz und <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> befinden sich in der Sortierreihenfolge an der gleichen Position.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Tuple`2.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A positive integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Eine positive ganze Zahl</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Tuple`2.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance follows <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Diese Instanz folgt <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`2.System#IComparable#CompareTo(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`2.System#IComparable#CompareTo(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Tuple%602&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IComparable&gt;</ph> interface.</source>
          <target state="translated">Er kann nur verwendet werden, wenn die <ph id="ph1">&lt;xref:System.Tuple%602&gt;</ph>-Instanz in eine <ph id="ph2">&lt;xref:System.IComparable&gt;</ph>-Schnittstelle umgewandelt wird.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`2.System#IComparable#CompareTo(System.Object)">
          <source>This method provides the <ph id="ph1">&lt;xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType&gt;</ph> implementation for the <ph id="ph2">&lt;xref:System.Tuple%602&gt;</ph> class.</source>
          <target state="translated">Diese Methode stellt der <ph id="ph1">&lt;xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType&gt;</ph> Implementierung für die <ph id="ph2">&lt;xref:System.Tuple%602&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`2.System#IComparable#CompareTo(System.Object)">
          <source>Although the method can be called directly, it is most commonly called by the default overloads of collection sorting methods, such as <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType&gt;</ph>, to order the members of a collection.</source>
          <target state="translated">Obwohl die Methode direkt aufgerufen werden kann, am häufigsten heißt es von der standardüberladungen der Sortiermethoden, z. B. Auflistung <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType&gt;</ph> und <ph id="ph2">&lt;xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType&gt;</ph>, um die Elemente einer Auflistung zu bestellen.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`2.System#IComparable#CompareTo(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%602.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType&gt;</ph> method is intended for use in sorting operations.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Tuple%602.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType&gt;</ph> Methode ist für die Verwendung in Sortiervorgängen vorgesehen.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`2.System#IComparable#CompareTo(System.Object)">
          <source>It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</source>
          <target state="translated">Es sollte nicht verwendet werden, wenn der primäre Zweck eines Vergleichs ist, um zu bestimmen, ob zwei Objekte gleich sind.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`2.System#IComparable#CompareTo(System.Object)">
          <source>To determine whether two objects are equal, call the <ph id="ph1">&lt;xref:System.Tuple%602.Equals%2A&gt;</ph> method.</source>
          <target state="translated">Um zu bestimmen, ob zwei Objekte gleich sind, rufen Sie die <ph id="ph1">&lt;xref:System.Tuple%602.Equals%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`2.System#IComparable#CompareTo(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%602.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType&gt;</ph> method uses the default object comparer to compare each component.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Tuple%602.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType&gt;</ph> Methode verwendet den Standardvergleich für das Objekt, jede Komponente verglichen werden soll.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`2.System#IComparable#CompareTo(System.Object)">
          <source>The following example creates an array of <ph id="ph1">&lt;xref:System.Tuple%602&gt;</ph> objects that consist of a student's name and test score.</source>
          <target state="translated">Das folgende Beispiel erstellt ein Array von <ph id="ph1">&lt;xref:System.Tuple%602&gt;</ph> Objekte, die eine Student Namen und Bewertung zu testen.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`2.System#IComparable#CompareTo(System.Object)">
          <source>It displays the component of each tuple in the array in unsorted order, sorts the array, and then calls <ph id="ph1">&lt;xref:System.Tuple%602.ToString%2A&gt;</ph> to display the value of each tuple in sorted order.</source>
          <target state="translated">Die Komponente der einzelnen Tupel im Array in unsortierter Reihenfolge angezeigt, sortiert das Array und ruft dann <ph id="ph1">&lt;xref:System.Tuple%602.ToString%2A&gt;</ph> den Wert jedes Tupels in sortierter Reihenfolge anzuzeigen.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`2.System#IComparable#CompareTo(System.Object)">
          <source>The output shows that the array has been sorted by its first component.</source>
          <target state="translated">Die Ausgabe zeigt, dass es sich bei der Sortierung des Arrays durch die erste Komponente.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`2.System#IComparable#CompareTo(System.Object)">
          <source>Note that the example does not directly call the <ph id="ph1">&lt;xref:System.Tuple%602.System%23IComparable%23CompareTo%28System.Object%29&gt;</ph> method.</source>
          <target state="translated">Beachten Sie, die im Beispiel nicht direkt aufgerufen wird die <ph id="ph1">&lt;xref:System.Tuple%602.System%23IComparable%23CompareTo%28System.Object%29&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`2.System#IComparable#CompareTo(System.Object)">
          <source>This method is called implicitly by the <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%29&gt;</ph> method for each element in the array.</source>
          <target state="translated">Diese Methode aufgerufen wird, implizit von der <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%29&gt;</ph> Methode für jedes Element im Array.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Tuple`2.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Tuple`2" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> ist kein <ph id="ph2">&lt;see cref="T:System.Tuple`2" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="P:System.Tuple`2.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>The index of the specified <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> element.</source>
          <target state="translated">Der Index des angegebenen Elements <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="P:System.Tuple`2.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source><bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept> can range from 0 to 1.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept> kann zwischen 0 und 1 liegen.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="P:System.Tuple`2.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>Gets the value of the specified <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> element.</source>
          <target state="translated">Ruft den Wert des angegebenen Elements <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> ab.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`2.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>The value of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> element at the specified position.</source>
          <target state="translated">Der Wert des <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph>-Elements an der angegebenen Position.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`2.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%602.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType&gt;</ph> property is an explicit interface implementation.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Tuple%602.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft ist eine explizite schnittstellenimplementierung.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`2.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>To call it, you must cast or convert the <ph id="ph1">&lt;xref:System.Tuple%602&gt;</ph> object to an <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph> interface object.</source>
          <target state="translated">Um sie aufzurufen, müssen Sie umgewandelt oder konvertiert die <ph id="ph1">&lt;xref:System.Tuple%602&gt;</ph> -Objekt an eine <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph> -Schnittstellenobjekt.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="P:System.Tuple`2.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than 0 or greater than 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ist kleiner als 0 (null) oder größer als 1.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="P:System.Tuple`2.System#Runtime#CompilerServices#ITuple#Length">
          <source>Gets the number of elements in the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph>.</source>
          <target state="translated">Ruft die Anzahl der Elemente im <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> ab.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`2.System#Runtime#CompilerServices#ITuple#Length">
          <source>2, the number of elements in a <ph id="ph1">&lt;see cref="T:System.Tuple`2" /&gt;</ph> object.</source>
          <target state="translated">Die Anzahl von Elementen in einem <ph id="ph1">&lt;see cref="T:System.Tuple`2" /&gt;</ph>-Objekt beträgt 2.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`2.System#Runtime#CompilerServices#ITuple#Length">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%602.System%23Runtime%23CompilerServices%23ITuple%23Length%2A&gt;</ph> property is an explicit interface implementation.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Tuple%602.System%23Runtime%23CompilerServices%23ITuple%23Length%2A&gt;</ph> Eigenschaft ist eine explizite schnittstellenimplementierung.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`2.System#Runtime#CompilerServices#ITuple#Length">
          <source>To call it, you must cast or convert the <ph id="ph1">&lt;xref:System.Tuple%602&gt;</ph> object to an <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph> interface object.</source>
          <target state="translated">Um sie aufzurufen, müssen Sie umgewandelt oder konvertiert die <ph id="ph1">&lt;xref:System.Tuple%602&gt;</ph> -Objekt an eine <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph> -Schnittstellenobjekt.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Tuple`2.ToString">
          <source>Returns a string that represents the value of this <ph id="ph1">&lt;see cref="T:System.Tuple`2" /&gt;</ph> instance.</source>
          <target state="translated">Gibt eine Zeichenfolge zurück, die den Wert dieser <ph id="ph1">&lt;see cref="T:System.Tuple`2" /&gt;</ph>-Instanz darstellt.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Tuple`2.ToString">
          <source>The string representation of this <ph id="ph1">&lt;see cref="T:System.Tuple`2" /&gt;</ph> object.</source>
          <target state="translated">Die Zeichenfolgendarstellung dieses <ph id="ph1">&lt;see cref="T:System.Tuple`2" /&gt;</ph>-Objekts.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`2.ToString">
          <source>The string returned by this method takes the form (<bpt id="p1">*</bpt>Item1<ept id="p1">*</ept>, <bpt id="p2">*</bpt>Item2<ept id="p2">*</ept>), where <bpt id="p3">*</bpt>Item1<ept id="p3">*</ept> and <bpt id="p4">*</bpt>Item2<ept id="p4">*</ept> represent the values of the <ph id="ph1">&lt;xref:System.Tuple%602.Item1%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Tuple%602.Item2%2A&gt;</ph> properties.</source>
          <target state="translated">Die von dieser Methode zurückgegebene Zeichenfolge hat das Format (<bpt id="p1">*</bpt>Item1<ept id="p1">*</ept>, <bpt id="p2">*</bpt>Item2<ept id="p2">*</ept>), wobei <bpt id="p3">*</bpt>Item1<ept id="p3">*</ept> und <bpt id="p4">*</bpt>Item2<ept id="p4">*</ept> stellen die Werte von der <ph id="ph1">&lt;xref:System.Tuple%602.Item1%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Tuple%602.Item2%2A&gt;</ph> Eigenschaften.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`2.ToString">
          <source>If either property value is <ph id="ph1">`null`</ph>, it is represented as <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Wenn entweder Eigenschaftswert ist <ph id="ph1">`null`</ph>, liegt als <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`2.ToString">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Tuple%602.ToString%2A&gt;</ph> method.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die <ph id="ph1">&lt;xref:System.Tuple%602.ToString%2A&gt;</ph> Methode.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>