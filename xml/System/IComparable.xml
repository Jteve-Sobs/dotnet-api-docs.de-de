<Type Name="IComparable" FullName="System.IComparable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a8f557e994926a1defd28f5baf14b4c7ba5a4b70" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36430821" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IComparable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComparable" />
  <TypeSignature Language="DocId" Value="T:System.IComparable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComparable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IComparable" />
  <TypeSignature Language="F#" Value="type IComparable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definiert eine generalisierte, typspezifische Vergleichsmethode, die von einem Werttyp oder von einer Klasse implementiert wird, um die eigenen Instanzen zu sortieren.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Schnittstelle wird von Typen implementiert, deren Werte angeordnet oder sortiert werden können. Sie erfordert, dass implementierende Typen definieren Sie eine einzelne Methode <xref:System.IComparable.CompareTo%28System.Object%29>, Wert, der angibt, ob die Position der aktuellen Instanz in der Sortierreihenfolge vor, nach oder ein zweites Objekt des gleichen Typs identisch. Der Instanz <xref:System.IComparable> Implementierung wird automatisch aufgerufen, indem Sie Methoden wie z. B. <xref:System.Array.Sort%2A?displayProperty=nameWithType> und <xref:System.Collections.ArrayList.Sort%2A?displayProperty=nameWithType>.  
  
 Die Implementierung der <xref:System.IComparable.CompareTo%28System.Object%29> Methodenrückgabewert muss ein <xref:System.Int32> , besitzt einen von drei Werten, wie in der folgenden Tabelle gezeigt.  
  
|Wert|Bedeutung|  
|-----------|-------------|  
|Kleiner als 0 (null)|Die aktuelle Instanz vorangestellt ist, das Objekt, das gemäß der <xref:System.IComparable.CompareTo%2A> Methode in der Sortierreihenfolge.|  
|Zero|Diese aktuelle Instanz tritt an derselben Position wie das vom angegebenen Objekt in der Sortierreihenfolge der <xref:System.IComparable.CompareTo%2A> Methode.|  
|Größer als 0 (null)|Diese aktuelle Instanz folgt das Objekt, das gemäß der <xref:System.IComparable.CompareTo%2A> Methode in der Sortierreihenfolge.|  
  
 Alle numerischen Typen (z. B. <xref:System.Int32> und <xref:System.Double>) implementieren <xref:System.IComparable>Gleiches gilt für <xref:System.String>, <xref:System.Char>, und <xref:System.DateTime>. Benutzerdefinierte Typen sollten auch eine eigene Implementierung von bereitstellen <xref:System.IComparable> , damit Objektinstanzen angeordnet oder sortiert werden.  
  
   
  
## Examples  
 Das folgende Beispiel veranschaulicht die Implementierung der <xref:System.IComparable> und der erforderlichen <xref:System.IComparable.CompareTo%2A> Methode.  
  
 [!code-cpp[IComparable Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable Example/CS/source.cs#1)]
 [!code-vb[IComparable Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IComparable.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int" Usage="iComparable.CompareTo obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Ein Objekt, das mit dieser Instanz verglichen werden soll.</param>
        <summary>Vergleicht die aktuelle Instanz mit einem anderen Objekt vom selben Typ und gibt eine ganze Zahl zurück, die angibt, ob die aktuelle Instanz in der Sortierreihenfolge vor oder nach dem anderen Objekt oder an derselben Position auftritt.</summary>
        <returns>Ein Wert, der die relative Reihenfolge der verglichenen Objekte angibt. Der Rückgabewert hat folgende Bedeutungen:  <list type="table"><listheader><term> Wert  </term><description> Bedeutung  </description></listheader><item><term> Kleiner als 0 (null)  </term><description> Diese Instanz steht in der Sortierreihenfolge vor <paramref name="obj" />.  </description></item><item><term> 0 (null)  </term><description> Diese Instanz tritt in der Sortierreihenfolge an der gleichen Position wie <paramref name="obj" /> auf.  </description></item><item><term> Größer als 0 (null)  </term><description> Diese Instanz folgt in der Sortierreihenfolge auf <paramref name="obj" />.  </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.IComparable.CompareTo%2A> Methode wird von Typen implementiert, deren Werte angeordnet oder sortiert werden können. Es wird automatisch aufgerufen, durch die Methoden der nicht generische Auflistung von Objekten, z. B. <xref:System.Array.Sort%2A?displayProperty=nameWithType>, um jedes Element im Array zu sortieren. Wenn Sie eine benutzerdefinierte Klasse oder Struktur nicht implementiert <xref:System.IComparable>, Membern nicht sortiert werden und kann der Sortiervorgang Auslösen einer <xref:System.InvalidOperationException>.  
  
 Diese Methode ist nur eine Definition und muss von einer bestimmten Klasse oder eines Werttyps Auswirkung hat implementiert werden. Die Bedeutung der Vergleiche in des Rückgabewerts Abschnitt ("vorausgeht", "tritt auf, in der gleichen Position wie" und "folgt") von der jeweiligen Implementierung abhängig ist angegeben.  
  
 Laut Definition sind ein Objekt größer als (oder folgt) `null`, und Vergleichen von zwei null-Verweise gleich sind.  
  
 Der Parameter `obj`, muss denselben Typ wie die Klasse oder Werttyp, der diese Schnittstelle implementiert; andernfalls ein <xref:System.ArgumentException> ausgelöst wird.  
  
   
  
## Examples  
 Das folgende Beispiel veranschaulicht die Verwendung von <xref:System.IComparable.CompareTo%2A> Vergleichen einer `Temperature` implementiert <xref:System.IComparable> mit einem anderen Objekt. Die `Temperature` -Objekt implementiert <xref:System.IComparable.CompareTo%2A> durch wrapping einfach einen Aufruf der <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> Methode.  
  
 [!code-cpp[IComparable Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable Example/CS/source.cs#1)]
 [!code-vb[IComparable Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="obj" /> hat nicht denselben Typ wie diese Instanz.</exception>
        <block subset="none" type="overrides">
          <para>Für Objekte, A, B und C, Folgendes erfüllt sein: <c>einmal</c> muss 0 (null) zurückgeben.  Wenn <c>A.CompareTo(B)</c> 0 zurückgibt, <c>B.CompareTo(A)</c> muss 0 (null) zurückgeben.  Wenn <c>A.CompareTo(B)</c> gibt 0 (null) und <c>B.CompareTo(C)</c> 0 zurückgibt, <c>A.CompareTo(C)</c> muss 0 (null) zurückgeben.  Wenn <c>A.CompareTo(B)</c> einen anderen Wert als 0 (null), dann gibt <c>B.CompareTo(A)</c> muss den Wert dem entgegen gesetzten Zeichen zurück.  Wenn <c>A.CompareTo(B)</c> gibt einen Wert zurück <paramref name="x" /> ungleich 0 (null), und <c>B.CompareTo(C)</c> gibt einen Wert zurück <paramref name="y" /> dasselbe Vorzeichen wie <paramref name="x" />, klicken Sie dann <c>A. CompareTo(C)</c> muss das gleichen Vorzeichen wie der Wert zurückgeben <paramref name="x" /> und <paramref name="y" />.</para>
        </block>
        <block subset="none" type="usage">
          <para>Verwenden der <see cref="M:System.IComparable.CompareTo(System.Object)" /> Methode, um die Reihenfolge der Instanzen einer Klasse zu ermitteln.</para>
        </block>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
  </Members>
</Type>