<Type Name="IComparable" FullName="System.IComparable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0177d972b5cbe72cebc55370b0db86925bdfaa4d" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75041425" /></Metadata><TypeSignature Language="C#" Value="public interface IComparable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComparable" />
  <TypeSignature Language="DocId" Value="T:System.IComparable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComparable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IComparable" />
  <TypeSignature Language="F#" Value="type IComparable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definiert eine generalisierte, typspezifische Vergleichsmethode, die von einem Werttyp oder von einer Klasse implementiert wird, um die eigenen Instanzen zu sortieren.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Schnittstelle wird von Typen implementiert, deren Werte sortiert oder sortiert werden können. Es erfordert, dass implementierende Typen eine einzige Methode definieren, <xref:System.IComparable.CompareTo%28System.Object%29>, die angibt, ob die Position der aktuellen Instanz in der Sortierreihenfolge vor, nach oder mit einem zweiten Objekt desselben Typs ist. Die <xref:System.IComparable> Implementierung der-Instanz wird automatisch durch Methoden wie <xref:System.Array.Sort%2A?displayProperty=nameWithType> und <xref:System.Collections.ArrayList.Sort%2A?displayProperty=nameWithType>aufgerufen.  
  
 Die Implementierung der <xref:System.IComparable.CompareTo%28System.Object%29>-Methode muss eine <xref:System.Int32> zurückgeben, die einen von drei Werten hat, wie in der folgenden Tabelle dargestellt.  
  
|Wert|Bedeutung|  
|-----------|-------------|  
|Kleiner als 0 (null)|Die aktuelle Instanz befindet sich vor dem Objekt, das durch die <xref:System.IComparable.CompareTo%2A>-Methode in der Sortierreihenfolge angegeben wird.|  
|Zero|Diese aktuelle Instanz tritt in der Sortierreihenfolge an der gleichen Position wie das Objekt auf, das durch die <xref:System.IComparable.CompareTo%2A>-Methode angegeben wird.|  
|Größer als 0 (null)|Diese aktuelle Instanz folgt dem Objekt, das durch die <xref:System.IComparable.CompareTo%2A>-Methode in der Sortierreihenfolge angegeben wird.|  
  
 Alle numerischen Typen (z. b. <xref:System.Int32> und <xref:System.Double>) implementieren <xref:System.IComparable>, wie <xref:System.String>, <xref:System.Char>und <xref:System.DateTime>. Benutzerdefinierte Typen sollten auch Ihre eigene Implementierung von <xref:System.IComparable> bereitstellen, um das Sortieren oder Sortieren von Objektinstanzen zu ermöglichen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die Implementierung von <xref:System.IComparable> und die erforderliche <xref:System.IComparable.CompareTo%2A>-Methode veranschaulicht.  
  
 [!code-cpp[IComparable Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable Example/CS/source.cs#1)]
 [!code-vb[IComparable Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IComparable.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int" Usage="iComparable.CompareTo obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Ein Objekt, das mit dieser Instanz verglichen werden soll.</param>
        <summary>Vergleicht die aktuelle Instanz mit einem anderen Objekt vom selben Typ und gibt eine ganze Zahl zurück, die angibt, ob die aktuelle Instanz in der Sortierreihenfolge vor oder nach dem anderen Objekt oder an derselben Position auftritt.</summary>
        <returns>Ein Wert, der die relative Reihenfolge der verglichenen Objekte angibt. Der Rückgabewert hat folgende Bedeutungen: 
 <list type="table"><listheader><term> Wert 
 </term><description> Bedeutung 
 </description></listheader><item><term> Kleiner als 0 (null) 
 </term><description> Diese Instanz befindet sich in der Sortierreihenfolge vor <paramref name="obj" />.  
  
 </description></item><item><term> Zero 
 </term><description> Diese Instanz tritt in der Sortierreihenfolge an der gleichen Position wie <paramref name="obj" /> auf.  
  
 </description></item><item><term> Größer als 0 (null) 
 </term><description> Diese Instanz folgt in der Sortierreihenfolge auf <paramref name="obj" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.IComparable.CompareTo%2A>-Methode wird von Typen implementiert, deren Werte sortiert oder sortiert werden können. Sie wird automatisch durch Methoden von nicht generischen Auflistungs Objekten, z. b. <xref:System.Array.Sort%2A?displayProperty=nameWithType>, aufgerufen, um die einzelnen Member des Arrays zu sortieren. Wenn eine benutzerdefinierte Klasse oder Struktur <xref:System.IComparable>nicht implementiert, können ihre Member nicht sortiert werden, und der Sortiervorgang kann eine <xref:System.InvalidOperationException>auslösen.  
  
 Diese Methode ist nur eine Definition und muss von einer bestimmten Klasse oder einem Werttyp implementiert werden, damit Sie wirksam werden. Die Bedeutung der im Abschnitt "Rückgabewert" angegebenen Vergleiche ("vor", "tritt an der gleichen Position wie" und "folgt") hängt von der jeweiligen Implementierung ab.  
  
 Definitionsgemäß vergleicht jedes Objekt größer als (oder folgt) `null`, und zwei NULL-Verweise vergleichen einander.  
  
 Der `obj`-Parameter muss mit dem Typ der Klasse oder des Werttyps identisch sein, der diese Schnittstelle implementiert. Andernfalls wird eine <xref:System.ArgumentException> ausgelöst.  
  
   
  
## Examples  
 Das folgende Beispiel veranschaulicht die Verwendung von <xref:System.IComparable.CompareTo%2A>, um ein `Temperature` Objekt zu vergleichen, das <xref:System.IComparable> mit einem anderen Objekt implementiert. Das `Temperature` Objekt implementiert <xref:System.IComparable.CompareTo%2A>, indem er einfach einen aufzurufenden Befehl der <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType>-Methode umwickelt.  
  
 [!code-cpp[IComparable Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable Example/CS/source.cs#1)]
 [!code-vb[IComparable Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="obj" /> hat nicht denselben Typ wie diese Instanz.</exception>
        <block subset="none" type="overrides"><para>Für die Objekte a, B und C muss Folgendes zutreffen: 
 <c>A. CompareTo (a)</c> muss 0 (null) zurückgeben.  
  
Wenn <c>a. CompareTo (B) 0 (null)</c> zurückgibt, muss <c>B. CompareTo (a) 0 (</c> null) zurückgeben.  
  
Wenn <c>a. CompareTo (B) 0 (null)</c> zurückgibt und <c>B. CompareTo (c) 0 (null)</c> zurückgibt, muss <c>A. CompareTo (c) 0 (</c> null) zurückgeben.  
  
Wenn <c>eine. CompareTo (B)</c> einen anderen Wert als 0 (null) zurückgibt, muss <c>B. CompareTo (a)</c> einen Wert des umgekehrten Zeichens zurückgeben.  
  
Wenn <c>eine. CompareTo (B)</c> einen Wert zurückgibt <paramref name="x" /> ungleich 0 (null) ist, und <c>B. CompareTo (c)</c> einen Wert <paramref name="y" /> desselben Zeichens <paramref name="x" />zurückgibt, muss <c>a. CompareTo (c)</c> einen Wert desselben Zeichens zurückgeben wie <paramref name="x" /> und <paramref name="y" />.</para></block>
        <block subset="none" type="usage"><para>Verwenden Sie die <see cref="M:System.IComparable.CompareTo(System.Object)" />-Methode, um die Reihenfolge der Instanzen einer Klasse zu bestimmen.</para></block>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
  </Members>
</Type>
