<Type Name="IComparable" FullName="System.IComparable">
  <TypeSignature Language="C#" Value="public interface IComparable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComparable" />
  <TypeSignature Language="DocId" Value="T:System.IComparable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComparable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IComparable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="da7c4-101">Definiert eine generalisierte, typspezifische Vergleichsmethode, die von einem Werttyp oder von einer Klasse implementiert wird, um die eigenen Instanzen zu sortieren.</span><span class="sxs-lookup"><span data-stu-id="da7c4-101">Defines a generalized type-specific comparison method that a value type or class implements to order or sort its instances.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da7c4-102">Diese Schnittstelle wird von Typen implementiert, deren Werte angeordnet oder sortiert werden können.</span><span class="sxs-lookup"><span data-stu-id="da7c4-102">This interface is implemented by types whose values can be ordered or sorted.</span></span> <span data-ttu-id="da7c4-103">Sie erfordert, dass implementierende Typen definieren Sie eine einzelne Methode <xref:System.IComparable.CompareTo%28System.Object%29>, Wert, der angibt, ob die Position der aktuellen Instanz in der Sortierreihenfolge vor, nach oder ein zweites Objekt des gleichen Typs identisch.</span><span class="sxs-lookup"><span data-stu-id="da7c4-103">It requires that implementing types define a single method, <xref:System.IComparable.CompareTo%28System.Object%29>, that indicates whether the position of the current instance in the sort order is before, after, or the same as a second object of the same type.</span></span> <span data-ttu-id="da7c4-104">Der Instanz <xref:System.IComparable> Implementierung wird automatisch aufgerufen, indem Sie Methoden wie z. B. <xref:System.Array.Sort%2A?displayProperty=nameWithType> und <xref:System.Collections.ArrayList.Sort%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="da7c4-104">The instance's <xref:System.IComparable> implementation is called automatically by methods such as <xref:System.Array.Sort%2A?displayProperty=nameWithType> and <xref:System.Collections.ArrayList.Sort%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="da7c4-105">Die Implementierung der <xref:System.IComparable.CompareTo%28System.Object%29> Methodenrückgabewert muss ein <xref:System.Int32> , besitzt einen von drei Werten, wie in der folgenden Tabelle gezeigt.</span><span class="sxs-lookup"><span data-stu-id="da7c4-105">The implementation of the <xref:System.IComparable.CompareTo%28System.Object%29> method must return an <xref:System.Int32> that has one of three values, as shown in the following table.</span></span>  
  
|<span data-ttu-id="da7c4-106">Wert</span><span class="sxs-lookup"><span data-stu-id="da7c4-106">Value</span></span>|<span data-ttu-id="da7c4-107">Bedeutung</span><span class="sxs-lookup"><span data-stu-id="da7c4-107">Meaning</span></span>|  
|-----------|-------------|  
|<span data-ttu-id="da7c4-108">Kleiner als 0 (null)</span><span class="sxs-lookup"><span data-stu-id="da7c4-108">Less than zero</span></span>|<span data-ttu-id="da7c4-109">Die aktuelle Instanz vorangestellt ist, das Objekt, das gemäß der <xref:System.IComparable.CompareTo%2A> Methode in der Sortierreihenfolge.</span><span class="sxs-lookup"><span data-stu-id="da7c4-109">The current instance precedes the object specified by the <xref:System.IComparable.CompareTo%2A> method in the sort order.</span></span>|  
|<span data-ttu-id="da7c4-110">Zero</span><span class="sxs-lookup"><span data-stu-id="da7c4-110">Zero</span></span>|<span data-ttu-id="da7c4-111">Diese aktuelle Instanz tritt an derselben Position wie das vom angegebenen Objekt in der Sortierreihenfolge der <xref:System.IComparable.CompareTo%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="da7c4-111">This current instance occurs in the same position in the sort order as the object specified by the <xref:System.IComparable.CompareTo%2A> method.</span></span>|  
|<span data-ttu-id="da7c4-112">Größer als 0 (null)</span><span class="sxs-lookup"><span data-stu-id="da7c4-112">Greater than zero</span></span>|<span data-ttu-id="da7c4-113">Diese aktuelle Instanz folgt das Objekt, das gemäß der <xref:System.IComparable.CompareTo%2A> Methode in der Sortierreihenfolge.</span><span class="sxs-lookup"><span data-stu-id="da7c4-113">This current instance follows the object specified by the <xref:System.IComparable.CompareTo%2A> method in the sort order.</span></span>|  
  
 <span data-ttu-id="da7c4-114">Alle numerischen Typen (z. B. <xref:System.Int32> und <xref:System.Double>) implementieren <xref:System.IComparable>Gleiches gilt für <xref:System.String>, <xref:System.Char>, und <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="da7c4-114">All numeric types (such as <xref:System.Int32> and <xref:System.Double>) implement <xref:System.IComparable>, as do <xref:System.String>, <xref:System.Char>, and <xref:System.DateTime>.</span></span> <span data-ttu-id="da7c4-115">Benutzerdefinierte Typen sollten auch eine eigene Implementierung von bereitstellen <xref:System.IComparable> , damit Objektinstanzen angeordnet oder sortiert werden.</span><span class="sxs-lookup"><span data-stu-id="da7c4-115">Custom types should also provide their own implementation of <xref:System.IComparable> to enable object instances to be ordered or sorted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da7c4-116">Das folgende Beispiel veranschaulicht die Implementierung der <xref:System.IComparable> und der erforderlichen <xref:System.IComparable.CompareTo%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="da7c4-116">The following example illustrates the implementation of <xref:System.IComparable> and the requisite <xref:System.IComparable.CompareTo%2A> method.</span></span>  
  
 [!code-cpp[IComparable Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable Example/CS/source.cs#1)]
 [!code-vb[IComparable Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IComparable.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="da7c4-117">Ein Objekt, das mit dieser Instanz verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="da7c4-117">An object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="da7c4-118">Vergleicht die aktuelle Instanz mit einem anderen Objekt vom selben Typ und gibt eine ganze Zahl zurück, die angibt, ob die aktuelle Instanz in der Sortierreihenfolge vor oder nach dem anderen Objekt oder an derselben Position auftritt.</span><span class="sxs-lookup"><span data-stu-id="da7c4-118">Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.</span></span></summary>
        <returns><span data-ttu-id="da7c4-119">Ein Wert, der die relative Reihenfolge der verglichenen Objekte angibt.</span><span class="sxs-lookup"><span data-stu-id="da7c4-119">A value that indicates the relative order of the objects being compared.</span></span> <span data-ttu-id="da7c4-120">Der Rückgabewert hat folgende Bedeutung:</span><span class="sxs-lookup"><span data-stu-id="da7c4-120">The return value has these meanings:</span></span>  
  
 <span data-ttu-id="da7c4-121"><list type="table"><listheader><term> Wert</span><span class="sxs-lookup"><span data-stu-id="da7c4-121"><list type="table"><listheader><term> Value</span></span>  
  
 <span data-ttu-id="da7c4-122"></term><description> Bedeutung</span><span class="sxs-lookup"><span data-stu-id="da7c4-122"></term><description> Meaning</span></span>  
  
 <span data-ttu-id="da7c4-123"></description></listheader><item><term> Kleiner als 0 (null)</span><span class="sxs-lookup"><span data-stu-id="da7c4-123"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="da7c4-124"></term><description> Diese Instanz befindet sich in der Sortierreihenfolge vor <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="da7c4-124"></term><description> This instance precedes <paramref name="obj" /> in the sort order.</span></span>  
  
 <span data-ttu-id="da7c4-125"></description></item><item><term> 0 (null)</span><span class="sxs-lookup"><span data-stu-id="da7c4-125"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="da7c4-126"></term><description> Diese Instanz tritt in der Sortierreihenfolge an der gleichen Position wie <paramref name="obj" /> auf.</span><span class="sxs-lookup"><span data-stu-id="da7c4-126"></term><description> This instance occurs in the same position in the sort order as <paramref name="obj" />.</span></span>  
  
 <span data-ttu-id="da7c4-127"></description></item><item><term> Größer als 0 (null)</span><span class="sxs-lookup"><span data-stu-id="da7c4-127"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="da7c4-128"></term><description> Diese Instanz folgt in der Sortierreihenfolge auf <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="da7c4-128"></term><description> This instance follows <paramref name="obj" /> in the sort order.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da7c4-129">Die <xref:System.IComparable.CompareTo%2A> Methode wird von Typen implementiert, deren Werte angeordnet oder sortiert werden können.</span><span class="sxs-lookup"><span data-stu-id="da7c4-129">The <xref:System.IComparable.CompareTo%2A> method is implemented by types whose values can be ordered or sorted.</span></span> <span data-ttu-id="da7c4-130">Es wird automatisch aufgerufen, durch die Methoden der nicht generische Auflistung von Objekten, z. B. <xref:System.Array.Sort%2A?displayProperty=nameWithType>, um jedes Element im Array zu sortieren.</span><span class="sxs-lookup"><span data-stu-id="da7c4-130">It is called automatically by methods of non-generic collection objects, such as <xref:System.Array.Sort%2A?displayProperty=nameWithType>, to order each member of the array.</span></span> <span data-ttu-id="da7c4-131">Wenn Sie eine benutzerdefinierte Klasse oder Struktur nicht implementiert <xref:System.IComparable>, Membern nicht sortiert werden und kann der Sortiervorgang Auslösen einer <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="da7c4-131">If a custom class or structure does not implement <xref:System.IComparable>, its members cannot be ordered and the sort operation can throw an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="da7c4-132">Diese Methode ist nur eine Definition und muss von einer bestimmten Klasse oder eines Werttyps Auswirkung hat implementiert werden.</span><span class="sxs-lookup"><span data-stu-id="da7c4-132">This method is only a definition and must be implemented by a specific class or value type to have effect.</span></span> <span data-ttu-id="da7c4-133">Die Bedeutung der Vergleiche in des Rückgabewerts Abschnitt ("vorausgeht", "tritt auf, in der gleichen Position wie" und "folgt") von der jeweiligen Implementierung abhängig ist angegeben.</span><span class="sxs-lookup"><span data-stu-id="da7c4-133">The meaning of the comparisons specified in the Return Value section ("precedes", "occurs in the same position as", and "follows") depends on the particular implementation.</span></span>  
  
 <span data-ttu-id="da7c4-134">Laut Definition sind ein Objekt größer als (oder folgt) `null`, und Vergleichen von zwei null-Verweise gleich sind.</span><span class="sxs-lookup"><span data-stu-id="da7c4-134">By definition, any object compares greater than (or follows) `null`, and two null references compare equal to each other.</span></span>  
  
 <span data-ttu-id="da7c4-135">Der Parameter `obj`, muss denselben Typ wie die Klasse oder Werttyp, der diese Schnittstelle implementiert; andernfalls ein <xref:System.ArgumentException> ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="da7c4-135">The parameter, `obj`, must be the same type as the class or value type that implements this interface; otherwise, an <xref:System.ArgumentException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da7c4-136">Das folgende Beispiel veranschaulicht die Verwendung von <xref:System.IComparable.CompareTo%2A> Vergleichen einer `Temperature` implementiert <xref:System.IComparable> mit einem anderen Objekt.</span><span class="sxs-lookup"><span data-stu-id="da7c4-136">The following example illustrates the use of <xref:System.IComparable.CompareTo%2A> to compare a `Temperature` object implementing <xref:System.IComparable> with another object.</span></span> <span data-ttu-id="da7c4-137">Die `Temperature` -Objekt implementiert <xref:System.IComparable.CompareTo%2A> durch wrapping einfach einen Aufruf der <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="da7c4-137">The `Temperature` object implements <xref:System.IComparable.CompareTo%2A> by simply wrapping a call to the <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[IComparable Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable Example/CS/source.cs#1)]
 [!code-vb[IComparable Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="da7c4-138"><paramref name="obj" /> hat nicht denselben Typ wie diese Instanz.</span><span class="sxs-lookup"><span data-stu-id="da7c4-138"><paramref name="obj" /> is not the same type as this instance.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="da7c4-139">Für Objekte, A, B und C muss Folgendes zutreffen:</span><span class="sxs-lookup"><span data-stu-id="da7c4-139">For objects A, B and C, the following must be true:</span></span>  
  
 <span data-ttu-id="da7c4-140"><c>Einmal</c> muss 0 (null) zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="da7c4-140"><c>A.CompareTo(A)</c> must return zero.</span></span>  
  
 <span data-ttu-id="da7c4-141">Wenn <c>A.CompareTo(B)</c> 0 zurückgibt, <c>B.CompareTo(A)</c> muss 0 (null) zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="da7c4-141">If <c>A.CompareTo(B)</c> returns zero, then <c>B.CompareTo(A)</c> must return zero.</span></span>  
  
 <span data-ttu-id="da7c4-142">Wenn <c>A.CompareTo(B)</c> gibt 0 (null) und <c>B.CompareTo(C)</c> 0 zurückgibt, <c>A.CompareTo(C)</c> muss 0 (null) zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="da7c4-142">If <c>A.CompareTo(B)</c> returns zero and <c>B.CompareTo(C)</c> returns zero, then <c>A.CompareTo(C)</c> must return zero.</span></span>  
  
 <span data-ttu-id="da7c4-143">Wenn <c>A.CompareTo(B)</c> einen anderen Wert als 0 (null), dann gibt <c>B.CompareTo(A)</c> muss den Wert dem entgegen gesetzten Zeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="da7c4-143">If <c>A.CompareTo(B)</c> returns a value other than zero, then <c>B.CompareTo(A)</c> must return a value of the opposite sign.</span></span>  
  
 <span data-ttu-id="da7c4-144">Wenn <c>A.CompareTo(B)</c> gibt einen Wert zurück <paramref name="x" /> ungleich 0 (null), und <c>B.CompareTo(C)</c> gibt einen Wert zurück <paramref name="y" /> dasselbe Vorzeichen wie <paramref name="x" />, klicken Sie dann <c>A. CompareTo(C)</c> muss das gleichen Vorzeichen wie der Wert zurückgeben <paramref name="x" /> und <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="da7c4-144">If <c>A.CompareTo(B)</c> returns a value <paramref name="x" /> not equal to zero, and <c>B.CompareTo(C)</c> returns a value <paramref name="y" /> of the same sign as <paramref name="x" />, then <c>A.CompareTo(C)</c> must return a value of the same sign as <paramref name="x" /> and <paramref name="y" />.</span></span></para>
        </block>
        <block subset="none" type="usage">
          <para><span data-ttu-id="da7c4-145">Verwenden der <see cref="M:System.IComparable.CompareTo(System.Object)" /> Methode, um die Reihenfolge der Instanzen einer Klasse zu ermitteln.</span><span class="sxs-lookup"><span data-stu-id="da7c4-145">Use the <see cref="M:System.IComparable.CompareTo(System.Object)" /> method to determine the ordering of instances of a class.</span></span></para>
        </block>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
  </Members>
</Type>