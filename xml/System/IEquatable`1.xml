<Type Name="IEquatable&lt;T&gt;" FullName="System.IEquatable&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6cf9514e878010f1710a9517414d04169c8524bc" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36431067" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IEquatable&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEquatable`1&lt;T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.IEquatable`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEquatable(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IEquatable" />
  <TypeSignature Language="F#" Value="type IEquatable&lt;'T&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="23dbf-101">Der Typ der zu vergleichenden Objekte.</span>
      <span class="sxs-lookup">
        <span data-stu-id="23dbf-101">The type of objects to compare.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="23dbf-102">Definiert eine generalisierte Methode, die von einem Werttyp oder von einer Klasse zur Erstellung einer typspezifischen Methode implementiert wird, um die Gleichheit von Instanzen zu ermitteln.</span>
      <span class="sxs-lookup">
        <span data-stu-id="23dbf-102">Defines a generalized method that a value type or class implements to create a type-specific method for determining equality of instances.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23dbf-103">Diese Schnittstelle wird durch Typen implementiert, deren Werte (z. B. numerische und String-Klassen) gleichgesetzt werden können.</span><span class="sxs-lookup"><span data-stu-id="23dbf-103">This interface is implemented by types whose values can be equated (for example, the numeric and string classes).</span></span> <span data-ttu-id="23dbf-104">Ein Werttyp oder von einer Klasse implementiert die <xref:System.IEquatable%601.Equals%2A> Methode um eine typspezifische Methode zum Bestimmen der Gleichheit von Instanzen zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="23dbf-104">A value type or class implements the <xref:System.IEquatable%601.Equals%2A> method to create a type-specific method suitable for determining equality of instances.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="23dbf-105">Die <xref:System.IComparable%601> Schnittstelle definiert die <xref:System.IComparable%601.CompareTo%2A> -Methode, die die Sortierreihenfolge von Instanzen des Implementierungstyps bestimmt.</span><span class="sxs-lookup"><span data-stu-id="23dbf-105">The <xref:System.IComparable%601> interface defines the <xref:System.IComparable%601.CompareTo%2A> method, which determines the sort order of instances of the implementing type.</span></span> <span data-ttu-id="23dbf-106">Die <xref:System.IEquatable%601> Schnittstelle definiert die <xref:System.IEquatable%601.Equals%2A> Methode, die die Gleichheit von Instanzen des Implementierungstyps bestimmt.</span><span class="sxs-lookup"><span data-stu-id="23dbf-106">The <xref:System.IEquatable%601> interface defines the <xref:System.IEquatable%601.Equals%2A> method, which determines the equality of instances of the implementing type.</span></span>  
  
 <span data-ttu-id="23dbf-107">Die <xref:System.IEquatable%601> Schnittstelle wird von generischen Auflistungsobjekten verwendet, z. B. <xref:System.Collections.Generic.Dictionary%602>, <xref:System.Collections.Generic.List%601>, und <xref:System.Collections.Generic.LinkedList%601> beim Testen der Gleichheit in Methoden wie `Contains`, `IndexOf`, `LastIndexOf`, und `Remove`.</span><span class="sxs-lookup"><span data-stu-id="23dbf-107">The <xref:System.IEquatable%601> interface is used by generic collection objects such as <xref:System.Collections.Generic.Dictionary%602>, <xref:System.Collections.Generic.List%601>, and <xref:System.Collections.Generic.LinkedList%601> when testing for equality in such methods as `Contains`, `IndexOf`, `LastIndexOf`, and `Remove`.</span></span> <span data-ttu-id="23dbf-108">Sie sollten für ein beliebiges Objekt implementiert werden, die in einer generischen Auflistung gespeichert werden kann.</span><span class="sxs-lookup"><span data-stu-id="23dbf-108">It should be implemented for any object that might be stored in a generic collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="23dbf-109">Siehe das Beispiel für die <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="23dbf-109">See the example for the <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="23dbf-110">
        <para>Ersetzen der Typparameter der <see cref="T:System.IEquatable`1" /> Schnittstelle mit dem Typ, die diese Schnittstelle implementiert.  Wenn Sie implementieren <see cref="T:System.IEquatable`1" />, sollten Sie auch Implementierungen der Basisklasse überschreiben <see cref="M:System.Object.Equals(System.Object)" /> und <see cref="M:System.Object.GetHashCode" /> , damit ihr Verhalten konsistent mit der ist die <see cref="M:System.IEquatable`1.Equals(`0)" /> Methode. Wenn Sie außer Kraft setzen <see cref="M:System.Object.Equals(System.Object)" />, die überschriebene Implementierung ist die Abkürzung in Aufrufen der statischen <see langword="Equals(System.Object, System.Object)" /> Methode für Ihre Klasse. Darüber hinaus sollten Sie überladen der <see langword="op_Equality" /> und <see langword="op_Inequality" /> Operatoren. Dadurch wird sichergestellt, dass alle Tests Gleichheit konsistente Ergebnisse zurückgeben.  <block subset="none" type="note"><para> Informationen zum Überschreiben <see cref="M:System.Object.Equals(System.Object)" />, finden Sie unter der <see cref="M:System.Object.Equals(System.Object)" /> Artikel.  </para></block>  Für einen Werttyp aufweist, sollten Sie immer implementieren <see cref="T:System.IEquatable`1" /> und überschreiben <see cref="M:System.Object.Equals(System.Object)" /> für eine bessere Leistung. <see cref="M:System.Object.Equals(System.Object)" /> Felder von Werttypen und basiert auf Reflektion, um zwei Werte hinsichtlich ihrer Gleichheit verglichen werden soll. Sowohl der Implementierung von <see cref="M:System.IEquatable`1.Equals(`0)" /> und Ihre Überschreibung <see cref="M:System.Object.Equals(System.Object)" /> konsistente Ergebnisse zurückgeben soll.  Wenn Sie implementieren <see cref="T:System.IEquatable`1" />, sollten Sie auch implementieren <see cref="T:System.IComparable`1" /> Wenn Instanzen des Typs sortiert oder sortiert werden können. Wenn Ihr Typ implementiert <see cref="T:System.IComparable`1" />, Sie fast immer auch implementieren <see cref="T:System.IEquatable`1" />.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="23dbf-110">
          <para>Replace the type parameter of the <see cref="T:System.IEquatable`1" /> interface with the type that is implementing this interface.  If you implement <see cref="T:System.IEquatable`1" />, you should also override the base class implementations of <see cref="M:System.Object.Equals(System.Object)" /> and <see cref="M:System.Object.GetHashCode" /> so that their behavior is consistent with that of the <see cref="M:System.IEquatable`1.Equals(`0)" /> method. If you do override <see cref="M:System.Object.Equals(System.Object)" />, your overridden implementation is also called in calls to the static <see langword="Equals(System.Object, System.Object)" /> method on your class. In addition, you should overload the <see langword="op_Equality" /> and <see langword="op_Inequality" /> operators. This ensures that all tests for equality return consistent results.  <block subset="none" type="note"><para> For information on overriding <see cref="M:System.Object.Equals(System.Object)" />, see the <see cref="M:System.Object.Equals(System.Object)" /> article.  </para></block>  For a value type, you should always implement <see cref="T:System.IEquatable`1" /> and override <see cref="M:System.Object.Equals(System.Object)" /> for better performance. <see cref="M:System.Object.Equals(System.Object)" /> boxes value types and relies on reflection to compare two values for equality. Both your implementation of <see cref="M:System.IEquatable`1.Equals(`0)" /> and your override of <see cref="M:System.Object.Equals(System.Object)" /> should return consistent results.  If you implement <see cref="T:System.IEquatable`1" />, you should also implement <see cref="T:System.IComparable`1" /> if instances of your type can be ordered or sorted. If your type implements <see cref="T:System.IComparable`1" />, you almost always also implement <see cref="T:System.IEquatable`1" />.</para>
        </span>
      </span>
      <span data-ttu-id="23dbf-111">
        <para>Beachten Sie, dass einige Entwürfe, wo ein Typ eine reihenfolgebeziehung unterstützt, aber auf Gleichheit ist möglicherweise eine Sortierung vorzugeben unterscheiden. Betrachten Sie eine ""-Personenklasse, in dem Sie alphabetisch zu sortieren. Zwei Personen mit demselben Namen sortieren identisch, jedoch nicht die gleiche Person.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="23dbf-111">
          <para>Note that there are some designs where a type supports an order relation, but equality may be distinct from an ordering relation. Consider a `Person` class where you sort alphabetically. Two people with the same name sort the same, but are not the same person.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.IComparable`1" />
    <altmember cref="T:System.IComparable" />
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (T other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(!T other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IEquatable`1.Equals(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(T other);" />
      <MemberSignature Language="F#" Value="abstract member Equals : 'T -&gt; bool" Usage="iEquatable.Equals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="T" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="23dbf-112">Ein Objekt, das mit diesem Objekt verglichen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23dbf-112">An object to compare with this object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="23dbf-113">Gibt an, ob das aktuelle Objekt gleich einem anderen Objekt des gleichen Typs ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23dbf-113">Indicates whether the current object is equal to another object of the same type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="23dbf-114">
            <see langword="true" />, wenn das aktuelle Objekt gleich dem <paramref name="other" />-Parameter ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23dbf-114">
              <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23dbf-115">Die Implementierung der <xref:System.IEquatable%601.Equals%2A> -Methode dient zum Ausführen eines Tests für Gleichheit mit einem anderen Objekt vom Typ `T`, denselben Typ wie das aktuelle Objekt.</span><span class="sxs-lookup"><span data-stu-id="23dbf-115">The implementation of the <xref:System.IEquatable%601.Equals%2A> method is intended to perform a test for equality with another object of type `T`, the same type as the current object.</span></span> <span data-ttu-id="23dbf-116">Die <xref:System.IEquatable%601.Equals(%600)> Methode wird aufgerufen, in den folgenden Situationen:</span><span class="sxs-lookup"><span data-stu-id="23dbf-116">The <xref:System.IEquatable%601.Equals(%600)> method is called in the following circumstances:</span></span>  
  
-   <span data-ttu-id="23dbf-117">Wenn die `Equals` Methode wird aufgerufen, und die `other` Argument ist ein stark typisiertes Objekt vom Typ `T`.</span><span class="sxs-lookup"><span data-stu-id="23dbf-117">When the `Equals` method is called and the `other` argument is a strongly-typed object of type `T`.</span></span> <span data-ttu-id="23dbf-118">(Wenn `other` ist nicht vom Typ `T`, der Base <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> -Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="23dbf-118">(If `other` is not of type `T`, the base <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> method is called.</span></span> <span data-ttu-id="23dbf-119">Der beiden Methoden <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> bietet eine etwas bessere Leistung.)</span><span class="sxs-lookup"><span data-stu-id="23dbf-119">Of the two methods, <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> offers slightly better performance.)</span></span>  
  
-   <span data-ttu-id="23dbf-120">Wenn die Suchmethoden einer Anzahl von generischen Auflistungsobjekten aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="23dbf-120">When the search methods of a number of generic collection objects are called.</span></span> <span data-ttu-id="23dbf-121">Einige dieser Typen und ihre Methoden umfassen Folgendes:</span><span class="sxs-lookup"><span data-stu-id="23dbf-121">Some of these types and their methods include the following:</span></span>  
  
    -   <span data-ttu-id="23dbf-122">Einige generische Überladung von der <xref:System.Array.BinarySearch%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="23dbf-122">Some of the generic overloads of the <xref:System.Array.BinarySearch%2A> method.</span></span>  
  
    -   <span data-ttu-id="23dbf-123">Die Suchmethoden der <xref:System.Collections.Generic.List%601> Klasse, einschließlich <xref:System.Collections.Generic.List%601.Contains%28%600%29?displayProperty=nameWithType>, <xref:System.Collections.Generic.List%601.IndexOf%2A?displayProperty=nameWithType>, <xref:System.Collections.Generic.List%601.LastIndexOf%2A?displayProperty=nameWithType>, und <xref:System.Collections.Generic.List%601.Remove%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="23dbf-123">The search methods of the <xref:System.Collections.Generic.List%601> class, including <xref:System.Collections.Generic.List%601.Contains%28%600%29?displayProperty=nameWithType>, <xref:System.Collections.Generic.List%601.IndexOf%2A?displayProperty=nameWithType>, <xref:System.Collections.Generic.List%601.LastIndexOf%2A?displayProperty=nameWithType>, and <xref:System.Collections.Generic.List%601.Remove%2A?displayProperty=nameWithType>.</span></span>  
  
    -   <span data-ttu-id="23dbf-124">Die Suchmethoden der <xref:System.Collections.Generic.Dictionary%602> Klasse, einschließlich <xref:System.Collections.Generic.Dictionary%602.ContainsKey%2A> und <xref:System.Collections.Generic.IDictionary%602.Remove%2A>.</span><span class="sxs-lookup"><span data-stu-id="23dbf-124">The search methods of the <xref:System.Collections.Generic.Dictionary%602> class, including <xref:System.Collections.Generic.Dictionary%602.ContainsKey%2A> and <xref:System.Collections.Generic.IDictionary%602.Remove%2A>.</span></span>  
  
    -   <span data-ttu-id="23dbf-125">Die Suchmethoden der generischen <xref:System.Collections.Generic.LinkedList%601> Klasse, einschließlich <xref:System.Collections.Generic.LinkedList%601.Contains%2A?displayProperty=nameWithType> und <xref:System.Collections.Generic.LinkedList%601.Remove%2A>.</span><span class="sxs-lookup"><span data-stu-id="23dbf-125">The search methods of the generic <xref:System.Collections.Generic.LinkedList%601> class, including <xref:System.Collections.Generic.LinkedList%601.Contains%2A?displayProperty=nameWithType> and <xref:System.Collections.Generic.LinkedList%601.Remove%2A>.</span></span>  
  
 <span data-ttu-id="23dbf-126">Das heißt, behandeln Sie die Möglichkeit, dass Objekte einer Klasse in ein Array oder eine generische Auflistungsobjekt gespeichert werden, ist eine gute Idee, implementieren <xref:System.IEquatable%601> , damit das Objekt leicht identifiziert und bearbeitet werden kann.</span><span class="sxs-lookup"><span data-stu-id="23dbf-126">In other words, to handle the possibility that objects of a class will be stored in an array or a generic collection object, it is a good idea to implement <xref:System.IEquatable%601> so that the object can be easily identified and manipulated.</span></span>  
  
 <span data-ttu-id="23dbf-127">Bei der Implementierung der <xref:System.IEquatable%601.Equals%2A> -Methode, die Gleichheit entsprechend für den vom generischen Argument angegebenen Typ definieren.</span><span class="sxs-lookup"><span data-stu-id="23dbf-127">When implementing the <xref:System.IEquatable%601.Equals%2A> method, define equality appropriately for the type specified by the generic type argument.</span></span> <span data-ttu-id="23dbf-128">Wenn das Typargument ist z. B. <xref:System.Int32>, definieren Sie Gleichheit entsprechend für den Vergleich von zwei 32-Bit-Ganzzahlen mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="23dbf-128">For example, if the type argument is <xref:System.Int32>, define equality appropriately for the comparison of two 32-bit signed integers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="23dbf-129">Das folgende Beispiel zeigt die partielle Implementierung des eine `Person` Klasse, die implementiert <xref:System.IEquatable%601> und verfügt über zwei Eigenschaften `LastName` und `SSN`.</span><span class="sxs-lookup"><span data-stu-id="23dbf-129">The following example shows the partial implementation of a `Person` class that implements <xref:System.IEquatable%601> and has two properties, `LastName` and `SSN`.</span></span> <span data-ttu-id="23dbf-130">Die <xref:System.IEquatable%601.Equals%2A> -Methode zurückkehrt `True` Wenn die `SSN` Eigenschaft zweier `Person` Objekte identisch ist; andernfalls wird zurückgegeben `False`.</span><span class="sxs-lookup"><span data-stu-id="23dbf-130">The <xref:System.IEquatable%601.Equals%2A> method returns `True` if the `SSN` property of two `Person` objects is identical; otherwise, it returns `False`.</span></span>  
  
 [!code-csharp[System.GenericIEquatable.Equals#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.GenericIEquatable.Equals/cs/EqualsEx2.cs#3)]
 [!code-vb[System.GenericIEquatable.Equals#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.GenericIEquatable.Equals/vb/EqualsEx2.vb#3)]  
  
 <span data-ttu-id="23dbf-131">`Person` Objekte können dann gespeichert werden, einer <xref:System.Collections.Generic.List%601> Objekt und kann festgestellt werden, indem die `Contains` Methode, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="23dbf-131">`Person` objects can then be stored in a <xref:System.Collections.Generic.List%601> object and can be identified by the `Contains` method, as the following example shows.</span></span>  
  
 [!code-csharp[System.GenericIEquatable.Equals#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.GenericIEquatable.Equals/cs/Snippet12.cs#12)]
 [!code-vb[System.GenericIEquatable.Equals#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.GenericIEquatable.Equals/vb/Snippet12.vb#12)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="23dbf-132">
            <para>Wenn Sie implementieren <see cref="M:System.IEquatable`1.Equals(`0)" />, sollten Sie auch Implementierungen der Basisklasse überschreiben <see cref="M:System.Object.Equals(System.Object)" /> und <see cref="M:System.Object.GetHashCode" /> , damit ihr Verhalten konsistent mit der ist die <see cref="M:System.IEquatable`1.Equals(`0)" /> Methode. Wenn Sie außer Kraft setzen <see cref="M:System.Object.Equals(System.Object)" />, die überschriebene Implementierung ist die Abkürzung in Aufrufen der statischen <see langword="Equals(System.Object, System.Object)" /> Methode für Ihre Klasse. Darüber hinaus sollten Sie überladen der <see langword="op_Equality" /> und <see langword="op_Inequality" /> Operatoren. Dadurch wird sichergestellt, dass alle Tests Gleichheit konsistente Ergebnisse zurückgeben, die das Beispiel veranschaulicht.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="23dbf-132">
              <para>If you implement <see cref="M:System.IEquatable`1.Equals(`0)" />, you should also override the base class implementations of <see cref="M:System.Object.Equals(System.Object)" /> and <see cref="M:System.Object.GetHashCode" /> so that their behavior is consistent with that of the <see cref="M:System.IEquatable`1.Equals(`0)" /> method. If you do override <see cref="M:System.Object.Equals(System.Object)" />, your overridden implementation is also called in calls to the static <see langword="Equals(System.Object, System.Object)" /> method on your class. In addition, you should overload the <see langword="op_Equality" /> and <see langword="op_Inequality" /> operators. This ensures that all tests for equality return consistent results, which the example illustrates.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>