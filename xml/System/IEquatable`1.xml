<Type Name="IEquatable&lt;T&gt;" FullName="System.IEquatable&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d13d2a1249f5f2aa09c6bbd78eb6f2931d76006f" /><Meta Name="ms.sourcegitcommit" Value="f828282420515ef705e09bbdb6c22116df98b5e3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="83499620" /></Metadata><TypeSignature Language="C#" Value="public interface IEquatable&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEquatable`1&lt;T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.IEquatable`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEquatable(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IEquatable" />
  <TypeSignature Language="F#" Value="type IEquatable&lt;'T&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T"><span data-ttu-id="7e0ad-101">Der Typ der zu vergleichenden Objekte.</span><span class="sxs-lookup"><span data-stu-id="7e0ad-101">The type of objects to compare.</span></span></typeparam>
    <summary><span data-ttu-id="7e0ad-102">Definiert eine generalisierte Methode, die von einem Werttyp oder von einer Klasse zur Erstellung einer typspezifischen Methode implementiert wird, um die Gleichheit von Instanzen zu ermitteln.</span><span class="sxs-lookup"><span data-stu-id="7e0ad-102">Defines a generalized method that a value type or class implements to create a type-specific method for determining equality of instances.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e0ad-103">Diese Schnittstelle wird von Typen implementiert, deren Werte gleichgesetzt werden können (z. b. die numerischen Klassen und Zeichen folgen Klassen).</span><span class="sxs-lookup"><span data-stu-id="7e0ad-103">This interface is implemented by types whose values can be equated (for example, the numeric and string classes).</span></span> <span data-ttu-id="7e0ad-104">Ein Werttyp oder eine Klasse implementiert die- <xref:System.IEquatable%601.Equals%2A> Methode, um eine typspezifische Methode zu erstellen, die zum Bestimmen der Gleichheit von Instanzen geeignet ist.</span><span class="sxs-lookup"><span data-stu-id="7e0ad-104">A value type or class implements the <xref:System.IEquatable%601.Equals%2A> method to create a type-specific method suitable for determining equality of instances.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7e0ad-105">Die- <xref:System.IComparable%601> Schnittstelle definiert die- <xref:System.IComparable%601.CompareTo%2A> Methode, die die Sortierreihenfolge von Instanzen des implementierenden Typs bestimmt.</span><span class="sxs-lookup"><span data-stu-id="7e0ad-105">The <xref:System.IComparable%601> interface defines the <xref:System.IComparable%601.CompareTo%2A> method, which determines the sort order of instances of the implementing type.</span></span> <span data-ttu-id="7e0ad-106">Die- <xref:System.IEquatable%601> Schnittstelle definiert die- <xref:System.IEquatable%601.Equals%2A> Methode, die die Gleichheit von Instanzen des implementierenden Typs bestimmt.</span><span class="sxs-lookup"><span data-stu-id="7e0ad-106">The <xref:System.IEquatable%601> interface defines the <xref:System.IEquatable%601.Equals%2A> method, which determines the equality of instances of the implementing type.</span></span>  
  
 <span data-ttu-id="7e0ad-107">Die <xref:System.IEquatable%601> -Schnittstelle wird von generischen Auflistungs Objekten, wie z. b., <xref:System.Collections.Generic.Dictionary%602> <xref:System.Collections.Generic.List%601> und, <xref:System.Collections.Generic.LinkedList%601> beim Testen auf Gleichheit in Methoden wie `Contains` , `IndexOf` , und verwendet `LastIndexOf` `Remove` .</span><span class="sxs-lookup"><span data-stu-id="7e0ad-107">The <xref:System.IEquatable%601> interface is used by generic collection objects such as <xref:System.Collections.Generic.Dictionary%602>, <xref:System.Collections.Generic.List%601>, and <xref:System.Collections.Generic.LinkedList%601> when testing for equality in such methods as `Contains`, `IndexOf`, `LastIndexOf`, and `Remove`.</span></span> <span data-ttu-id="7e0ad-108">Sie sollte für jedes Objekt implementiert werden, das möglicherweise in einer generischen Auflistung gespeichert ist.</span><span class="sxs-lookup"><span data-stu-id="7e0ad-108">It should be implemented for any object that might be stored in a generic collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7e0ad-109">Weitere Informationen finden Sie im Beispiel für die- <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="7e0ad-109">See the example for the <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="7e0ad-110">Ersetzen Sie den Typparameter der <see cref="T:System.IEquatable`1" /> Schnittstelle durch den Typ, der diese Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="7e0ad-110">Replace the type parameter of the <see cref="T:System.IEquatable`1" /> interface with the type that is implementing this interface.</span></span>  
  
<span data-ttu-id="7e0ad-111">Wenn Sie implementieren <see cref="T:System.IEquatable`1" /> , sollten Sie auch die Basisklassen Implementierungen von und überschreiben, <see cref="M:System.Object.Equals(System.Object)" /> <see cref="M:System.Object.GetHashCode" /> damit ihr Verhalten mit dem der-Methode konsistent ist <see cref="M:System.IEquatable`1.Equals(`0)" /> .</span><span class="sxs-lookup"><span data-stu-id="7e0ad-111">If you implement <see cref="T:System.IEquatable`1" />, you should also override the base class implementations of <see cref="M:System.Object.Equals(System.Object)" /> and <see cref="M:System.Object.GetHashCode" /> so that their behavior is consistent with that of the <see cref="M:System.IEquatable`1.Equals(`0)" /> method.</span></span> <span data-ttu-id="7e0ad-112">Wenn Sie außer Kraft setzen <see cref="M:System.Object.Equals(System.Object)" /> , wird die überschriebene Implementierung auch in Aufrufen der statischen- <see langword="Equals(System.Object, System.Object)" /> Methode für die-Klasse aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="7e0ad-112">If you do override <see cref="M:System.Object.Equals(System.Object)" />, your overridden implementation is also called in calls to the static <see langword="Equals(System.Object, System.Object)" /> method on your class.</span></span> <span data-ttu-id="7e0ad-113">Außerdem sollten Sie die <see langword="op_Equality" /> Operatoren und überladen <see langword="op_Inequality" /> .</span><span class="sxs-lookup"><span data-stu-id="7e0ad-113">In addition, you should overload the <see langword="op_Equality" /> and <see langword="op_Inequality" /> operators.</span></span> <span data-ttu-id="7e0ad-114">Dadurch wird sichergestellt, dass alle Gleichheits Überprüfungen konsistente Ergebnisse zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="7e0ad-114">This ensures that all tests for equality return consistent results.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="7e0ad-115">Weitere Informationen zum Überschreiben von <see cref="M:System.Object.Equals(System.Object)" /> finden Sie im <see cref="M:System.Object.Equals(System.Object)" /> Artikel.</span><span class="sxs-lookup"><span data-stu-id="7e0ad-115">For information on overriding <see cref="M:System.Object.Equals(System.Object)" />, see the <see cref="M:System.Object.Equals(System.Object)" /> article.</span></span>  
  
</para></block>  
  
 <span data-ttu-id="7e0ad-116">Für einen Werttyp sollten Sie immer implementieren <see cref="T:System.IEquatable`1" /> und überschreiben, <see cref="M:System.Object.Equals(System.Object)" /> um eine bessere Leistung zu erzielen.</span><span class="sxs-lookup"><span data-stu-id="7e0ad-116">For a value type, you should always implement <see cref="T:System.IEquatable`1" /> and override <see cref="M:System.Object.Equals(System.Object)" /> for better performance.</span></span> <span data-ttu-id="7e0ad-117"><see cref="M:System.Object.Equals(System.Object)" />Boxes-Werttypen und basiert auf Reflektion, um zwei Werte auf Gleichheit zu vergleichen.</span><span class="sxs-lookup"><span data-stu-id="7e0ad-117"><see cref="M:System.Object.Equals(System.Object)" /> boxes value types and relies on reflection to compare two values for equality.</span></span> <span data-ttu-id="7e0ad-118">Sowohl Ihre Implementierung von <see cref="M:System.IEquatable`1.Equals(`0)" /> als auch Ihre außer Kraft Setzung von <see cref="M:System.Object.Equals(System.Object)" /> sollten konsistente Ergebnisse zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="7e0ad-118">Both your implementation of <see cref="M:System.IEquatable`1.Equals(`0)" /> and your override of <see cref="M:System.Object.Equals(System.Object)" /> should return consistent results.</span></span>  
  
<span data-ttu-id="7e0ad-119">Wenn Sie implementieren <see cref="T:System.IEquatable`1" /> , sollten Sie auch implementieren, <see cref="T:System.IComparable`1" /> Wenn Instanzen des Typs sortiert oder sortiert werden können.</span><span class="sxs-lookup"><span data-stu-id="7e0ad-119">If you implement <see cref="T:System.IEquatable`1" />, you should also implement <see cref="T:System.IComparable`1" /> if instances of your type can be ordered or sorted.</span></span> <span data-ttu-id="7e0ad-120">Wenn Ihr Typ implementiert <see cref="T:System.IComparable`1" /> , implementieren Sie fast immer auch <see cref="T:System.IEquatable`1" /> .</span><span class="sxs-lookup"><span data-stu-id="7e0ad-120">If your type implements <see cref="T:System.IComparable`1" />, you almost always also implement <see cref="T:System.IEquatable`1" />.</span></span></para>
      <para><span data-ttu-id="7e0ad-121">Beachten Sie, dass einige Entwürfe vorhanden sind, bei denen ein Typ eine Auftrags Beziehung unterstützt, aber die Gleichheit von einer Sortier Beziehung abweichen kann.</span><span class="sxs-lookup"><span data-stu-id="7e0ad-121">Note that there are some designs where a type supports an order relation, but equality may be distinct from an ordering relation.</span></span> <span data-ttu-id="7e0ad-122">Stellen Sie sich eine Klasse vor, `Person` bei der alphabetisch sortiert wird.</span><span class="sxs-lookup"><span data-stu-id="7e0ad-122">Consider a `Person` class where you sort alphabetically.</span></span> <span data-ttu-id="7e0ad-123">Zwei Personen mit demselben Namen sortieren dasselbe, aber nicht die gleiche Person.</span><span class="sxs-lookup"><span data-stu-id="7e0ad-123">Two people with the same name sort the same, but are not the same person.</span></span></para></block>
    <altmember cref="T:System.IComparable`1" />
    <altmember cref="T:System.IComparable" />
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (T other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(!T other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IEquatable`1.Equals(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(T other);" />
      <MemberSignature Language="F#" Value="abstract member Equals : 'T -&gt; bool" Usage="iEquatable.Equals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="T" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="7e0ad-124">Ein Objekt, das mit diesem Objekt verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="7e0ad-124">An object to compare with this object.</span></span></param>
        <summary><span data-ttu-id="7e0ad-125">Gibt an, ob das aktuelle Objekt gleich einem anderen Objekt des gleichen Typs ist.</span><span class="sxs-lookup"><span data-stu-id="7e0ad-125">Indicates whether the current object is equal to another object of the same type.</span></span></summary>
        <returns><span data-ttu-id="7e0ad-126"><see langword="true" />, wenn das aktuelle Objekt gleich dem <paramref name="other" />-Parameter ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7e0ad-126"><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e0ad-127">Die Implementierung der- <xref:System.IEquatable%601.Equals%2A> Methode soll einen Test auf Gleichheit mit einem anderen Objekt vom Typ ausführen `T` , und zwar mit demselben Typ wie das aktuelle Objekt.</span><span class="sxs-lookup"><span data-stu-id="7e0ad-127">The implementation of the <xref:System.IEquatable%601.Equals%2A> method is intended to perform a test for equality with another object of type `T`, the same type as the current object.</span></span> <span data-ttu-id="7e0ad-128">Die- <xref:System.IEquatable%601.Equals(%600)> Methode wird in den folgenden Situationen aufgerufen:</span><span class="sxs-lookup"><span data-stu-id="7e0ad-128">The <xref:System.IEquatable%601.Equals(%600)> method is called in the following circumstances:</span></span>  
  
-   <span data-ttu-id="7e0ad-129">Wenn die `Equals` -Methode aufgerufen wird und das- `other` Argument ein stark typisiertes Objekt vom Typ ist `T` .</span><span class="sxs-lookup"><span data-stu-id="7e0ad-129">When the `Equals` method is called and the `other` argument is a strongly-typed object of type `T`.</span></span> <span data-ttu-id="7e0ad-130">(Wenn `other` nicht vom Typ ist `T` , wird die Basis <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="7e0ad-130">(If `other` is not of type `T`, the base <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> method is called.</span></span> <span data-ttu-id="7e0ad-131">Von den beiden Methoden <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> bietet eine etwas bessere Leistung.)</span><span class="sxs-lookup"><span data-stu-id="7e0ad-131">Of the two methods, <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> offers slightly better performance.)</span></span>  
  
-   <span data-ttu-id="7e0ad-132">Wenn die Suchmethoden einer Reihe generischer Auflistungs Objekte aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="7e0ad-132">When the search methods of a number of generic collection objects are called.</span></span> <span data-ttu-id="7e0ad-133">Einige dieser Typen und ihre Methoden umfassen Folgendes:</span><span class="sxs-lookup"><span data-stu-id="7e0ad-133">Some of these types and their methods include the following:</span></span>  
  
    -   <span data-ttu-id="7e0ad-134">Einige der generischen über Ladungen der- <xref:System.Array.BinarySearch%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="7e0ad-134">Some of the generic overloads of the <xref:System.Array.BinarySearch%2A> method.</span></span>  
  
    -   <span data-ttu-id="7e0ad-135">Die Suchmethoden der- <xref:System.Collections.Generic.List%601> Klasse, einschließlich <xref:System.Collections.Generic.List%601.Contains%28%600%29?displayProperty=nameWithType> , <xref:System.Collections.Generic.List%601.IndexOf%2A?displayProperty=nameWithType> , <xref:System.Collections.Generic.List%601.LastIndexOf%2A?displayProperty=nameWithType> und <xref:System.Collections.Generic.List%601.Remove%2A?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="7e0ad-135">The search methods of the <xref:System.Collections.Generic.List%601> class, including <xref:System.Collections.Generic.List%601.Contains%28%600%29?displayProperty=nameWithType>, <xref:System.Collections.Generic.List%601.IndexOf%2A?displayProperty=nameWithType>, <xref:System.Collections.Generic.List%601.LastIndexOf%2A?displayProperty=nameWithType>, and <xref:System.Collections.Generic.List%601.Remove%2A?displayProperty=nameWithType>.</span></span>  
  
    -   <span data-ttu-id="7e0ad-136">Die Suchmethoden der <xref:System.Collections.Generic.Dictionary%602> -Klasse, einschließlich <xref:System.Collections.Generic.Dictionary%602.ContainsKey%2A> und <xref:System.Collections.Generic.IDictionary%602.Remove%2A> .</span><span class="sxs-lookup"><span data-stu-id="7e0ad-136">The search methods of the <xref:System.Collections.Generic.Dictionary%602> class, including <xref:System.Collections.Generic.Dictionary%602.ContainsKey%2A> and <xref:System.Collections.Generic.IDictionary%602.Remove%2A>.</span></span>  
  
    -   <span data-ttu-id="7e0ad-137">Die Suchmethoden der generischen <xref:System.Collections.Generic.LinkedList%601> Klasse, einschließlich <xref:System.Collections.Generic.LinkedList%601.Contains%2A?displayProperty=nameWithType> und <xref:System.Collections.Generic.LinkedList%601.Remove%2A> .</span><span class="sxs-lookup"><span data-stu-id="7e0ad-137">The search methods of the generic <xref:System.Collections.Generic.LinkedList%601> class, including <xref:System.Collections.Generic.LinkedList%601.Contains%2A?displayProperty=nameWithType> and <xref:System.Collections.Generic.LinkedList%601.Remove%2A>.</span></span>  
  
 <span data-ttu-id="7e0ad-138">Anders ausgedrückt: um die Möglichkeit zu behandeln, dass Objekte einer Klasse in einem Array oder einem generischen Auflistungs Objekt gespeichert werden, empfiehlt es sich, zu implementieren, <xref:System.IEquatable%601> damit das Objekt leicht identifiziert und manipuliert werden kann.</span><span class="sxs-lookup"><span data-stu-id="7e0ad-138">In other words, to handle the possibility that objects of a class will be stored in an array or a generic collection object, it is a good idea to implement <xref:System.IEquatable%601> so that the object can be easily identified and manipulated.</span></span>  
  
 <span data-ttu-id="7e0ad-139">Definieren Sie bei der Implementierung der- <xref:System.IEquatable%601.Equals%2A> Methode Gleichheit entsprechend für den Typ, der vom generischen Typargument angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="7e0ad-139">When implementing the <xref:System.IEquatable%601.Equals%2A> method, define equality appropriately for the type specified by the generic type argument.</span></span> <span data-ttu-id="7e0ad-140">Wenn das Typargument z <xref:System.Int32> . b. lautet, definieren Sie Gleichheit entsprechend für den Vergleich von 2 32-Bit-Ganzzahlen mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="7e0ad-140">For example, if the type argument is <xref:System.Int32>, define equality appropriately for the comparison of two 32-bit signed integers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7e0ad-141">Das folgende Beispiel zeigt die partielle Implementierung einer `Person` Klasse, die implementiert <xref:System.IEquatable%601> und über zwei Eigenschaften verfügt: `LastName` und `SSN` .</span><span class="sxs-lookup"><span data-stu-id="7e0ad-141">The following example shows the partial implementation of a `Person` class that implements <xref:System.IEquatable%601> and has two properties, `LastName` and `SSN`.</span></span> <span data-ttu-id="7e0ad-142">Die- <xref:System.IEquatable%601.Equals%2A> Methode gibt zurück `True` , wenn die- `SSN` Eigenschaft von zwei- `Person` Objekten identisch ist, andernfalls wird zurückgegeben `False` .</span><span class="sxs-lookup"><span data-stu-id="7e0ad-142">The <xref:System.IEquatable%601.Equals%2A> method returns `True` if the `SSN` property of two `Person` objects is identical; otherwise, it returns `False`.</span></span>  
  
 [!code-csharp[System.GenericIEquatable.Equals#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.GenericIEquatable.Equals/cs/EqualsEx2.cs#3)]
 [!code-vb[System.GenericIEquatable.Equals#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.GenericIEquatable.Equals/vb/EqualsEx2.vb#3)]  
  
 <span data-ttu-id="7e0ad-143">`Person`-Objekte können dann in einem <xref:System.Collections.Generic.List%601> -Objekt gespeichert werden und können durch die-Methode identifiziert werden `Contains` , wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="7e0ad-143">`Person` objects can then be stored in a <xref:System.Collections.Generic.List%601> object and can be identified by the `Contains` method, as the following example shows.</span></span>  
  
 [!code-csharp[System.GenericIEquatable.Equals#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.GenericIEquatable.Equals/cs/Snippet12.cs#12)]
 [!code-vb[System.GenericIEquatable.Equals#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.GenericIEquatable.Equals/vb/Snippet12.vb#12)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="7e0ad-144">Wenn Sie implementieren <see cref="M:System.IEquatable`1.Equals(`0)" /> , sollten Sie auch die Basisklassen Implementierungen von und überschreiben, <see cref="M:System.Object.Equals(System.Object)" /> <see cref="M:System.Object.GetHashCode" /> damit ihr Verhalten mit dem der-Methode konsistent ist <see cref="M:System.IEquatable`1.Equals(`0)" /> .</span><span class="sxs-lookup"><span data-stu-id="7e0ad-144">If you implement <see cref="M:System.IEquatable`1.Equals(`0)" />, you should also override the base class implementations of <see cref="M:System.Object.Equals(System.Object)" /> and <see cref="M:System.Object.GetHashCode" /> so that their behavior is consistent with that of the <see cref="M:System.IEquatable`1.Equals(`0)" /> method.</span></span> <span data-ttu-id="7e0ad-145">Wenn Sie außer Kraft setzen <see cref="M:System.Object.Equals(System.Object)" /> , wird die überschriebene Implementierung auch in Aufrufen der statischen- <see langword="Equals(System.Object, System.Object)" /> Methode für die-Klasse aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="7e0ad-145">If you do override <see cref="M:System.Object.Equals(System.Object)" />, your overridden implementation is also called in calls to the static <see langword="Equals(System.Object, System.Object)" /> method on your class.</span></span> <span data-ttu-id="7e0ad-146">Außerdem sollten Sie die <see langword="op_Equality" /> Operatoren und überladen <see langword="op_Inequality" /> .</span><span class="sxs-lookup"><span data-stu-id="7e0ad-146">In addition, you should overload the <see langword="op_Equality" /> and <see langword="op_Inequality" /> operators.</span></span> <span data-ttu-id="7e0ad-147">Dadurch wird sichergestellt, dass alle Gleichheits Überprüfungen konsistente Ergebnisse zurückgeben, die im Beispiel veranschaulicht werden.</span><span class="sxs-lookup"><span data-stu-id="7e0ad-147">This ensures that all tests for equality return consistent results, which the example illustrates.</span></span></para></block>
      </Docs>
    </Member>
  </Members>
</Type>
