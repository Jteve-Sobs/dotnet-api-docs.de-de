<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IndexOutOfRangeException.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5fa743ca2f45cda07f83e63ffd565711d31756eb5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fa743ca2f45cda07f83e63ffd565711d31756eb5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IndexOutOfRangeException">
          <source>The exception that is thrown when an attempt is made to access an element of an array or collection with an index that is outside its bounds.</source>
          <target state="translated">Die Ausnahme, die bei einem Versuch ausgelöst wird, auf ein Element eines Arrays oder einer Auflistung mit einem Index zuzugreifen, der sich außerhalb der Begrenzungen des Arrays oder der Auflistung befindet.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>An <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph> exception is thrown when an invalid index is used to access a member of an array or a collection, or to read or write from a particular location in a buffer.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph> Ausnahme wird ausgelöst, wenn ein ungültiger Indexname verwendet wird, Zugriff auf ein Member eines Arrays oder einer Auflistung oder das Lesen und Schreiben von einem bestimmten Standort in einem Puffer.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>This exception  inherits from the <ph id="ph1">&lt;xref:System.Exception&gt;</ph> class but adds no unique members.</source>
          <target state="translated">Diese Ausnahme erbt von der <ph id="ph1">&lt;xref:System.Exception&gt;</ph> Klasse fügt jedoch keine speziellen Elemente.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Typically, an <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph> exception is thrown as a result of developer error.</source>
          <target state="translated">In der Regel eine <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph> wird als Ergebnis der Developer-Fehler ausgelöst.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Instead of handling the exception, you should diagnose the cause of the error and correct your code.</source>
          <target state="translated">Statt die Ausnahme wird verarbeitet, sollten Sie die Ursache des Fehlers und beheben Sie den Code.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>The most common causes of the error are:</source>
          <target state="translated">Die häufigsten Ursachen des Fehlers sind:</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Forgetting that the upper bound of a collection or a zero-based array is one less than its number of members or elements, as the following example illustrates.</source>
          <target state="translated">Kleiner als die Anzahl der Elemente oder Elemente, wie im folgenden Beispiel veranschaulicht, vergessen, dass die obere Grenze einer Auflistung oder ein nullbasiertes Array ist.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>To correct the error, you can use code like the following.</source>
          <target state="translated">Um den Fehler zu beheben, können Sie Code wie den folgenden verwenden.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Alternately, instead of iterating all the elements in the array by their index, you can use the <ph id="ph1">`foreach`</ph> statement (in C#) or the <ph id="ph2">`For Each`</ph> statement (in Visual Basic).</source>
          <target state="translated">Alternativ können Sie anstelle aller Elemente im Array nach dem Index durchlaufen, können Sie die <ph id="ph1">`foreach`</ph> -Anweisung (in c#) oder die <ph id="ph2">`For Each`</ph> -Anweisung (in Visual Basic).</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Attempting to assign an array element to another array that has not been adequately dimensioned and that has fewer elements than the original array.</source>
          <target state="translated">Es wird versucht, ein Arrayelement in ein anderes Array zuweisen, wurde nicht wurde ausreichend dimensioniert und weniger Elemente als das ursprüngliche Array aufweist.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>The following example attempts to assign the last element in the <ph id="ph1">`value1`</ph> array to the same element in the <ph id="ph2">`value2`</ph> array.</source>
          <target state="translated">Im folgenden Beispiel wird versucht, weisen Sie das letzte Element in der <ph id="ph1">`value1`</ph> mit dem gleichen Element im Array der <ph id="ph2">`value2`</ph> Array.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>However, the <ph id="ph1">`value2`</ph> array has been incorrectly dimensioned to have six instead of seven elements.</source>
          <target state="translated">Allerdings die <ph id="ph1">`value2`</ph> Array wurde nicht ordnungsgemäß dimensioniert um sechs anstelle von sieben Elemente haben.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>As a result, the assignment throws an <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph> exception.</source>
          <target state="translated">Daher löst aus, die Zuweisung einer <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph> Ausnahme.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Using a value returned by a search method to iterate a portion of an array or collection starting at a particular index position.</source>
          <target state="translated">Anhand eines Werts wird zurückgegeben, durch eine Search-Methode, einen Teil eines Arrays oder einer Auflistung beginnend an einer bestimmten Indexposition durchlaufen.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>If you forget to check whether the search operation found a match, the runtime throws an <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph> exception, as shown in this example.</source>
          <target state="translated">Wenn Sie vergessen, überprüfen Sie, ob der Suchvorgang eine Übereinstimmung gefunden, löst die Laufzeit eine <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph> Ausnahme aus, wie im folgenden Beispiel gezeigt.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.IndexOf%2A?displayProperty=nameWithType&gt;</ph> method returns -1, which is an invalid index value, when it fails to find a match.</source>
          <target state="translated">In diesem Fall die <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.IndexOf%2A?displayProperty=nameWithType&gt;</ph> Methode gibt-1 zurück, der Indexwert ungültig ist, wenn ein Fehler auftritt, eine Übereinstimmung zu finden.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>To correct this error, check the search method's return value before iterating the array, as shown in this example.</source>
          <target state="translated">Um diesen Fehler zu beheben, überprüfen Sie die Search-Methode zurückgegebene Wert vor durchläuft das Array, wie im folgenden Beispiel gezeigt.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Trying to use or enumerate a result set, collection, or array returned by a query without testing whether the returned object has any valid data.</source>
          <target state="translated">Verwenden oder ein Resultset, eine Auflistung oder ein Array ohne testen, ob das zurückgegebene Objekt gültigen Daten von einer Abfrage zurückgegebenen auflisten möchten.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Using a computed value to define the starting index, the ending index, or the number of items to be iterated.</source>
          <target state="translated">Definieren der startIndex, endIndex oder die Anzahl der Elemente, die durchlaufen werden anhand eines berechneten Werts.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>If the result of the computation is unexpected, it might result in an <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph> exception.</source>
          <target state="translated">Wenn das Ergebnis der Berechnung unerwartet auftritt, kann es kommen, eine <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph> Ausnahme.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>You should check your program's logic in calculating the index value and validate the value before iterating the array or collection.</source>
          <target state="translated">Überprüfen Sie Ihre Programmlogik beim berechnen den Indexwert und überprüfen den Wert, bevor Sie das Array oder die Auflistung durchläuft.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>The following conditions must all be true; otherwise, an <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph> exception is thrown:</source>
          <target state="translated">Die folgenden Bedingungen müssen alle "true" sein; andernfalls ein <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph> Ausnahme ausgelöst:</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>The starting index must be greater than or equal to <ph id="ph1">&lt;xref:System.Array.GetLowerBound%2A?displayProperty=nameWithType&gt;</ph> for the dimension of the array that you want to iterate, or greater than or equal to 0 for a collection.</source>
          <target state="translated">Der Startindex muss größer als oder gleich <ph id="ph1">&lt;xref:System.Array.GetLowerBound%2A?displayProperty=nameWithType&gt;</ph> für die Dimension des Arrays, das durchlaufen werden sollen oder größer als oder gleich 0 für eine Sammlung.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>The ending index cannot exceed <ph id="ph1">&lt;xref:System.Array.GetUpperBound%2A?displayProperty=nameWithType&gt;</ph> for the dimension of the array that you want to iterate, or cannot be greater than or equal to the <ph id="ph2">`Count`</ph> property of a collection.</source>
          <target state="translated">Der endIndex nicht überschreiten <ph id="ph1">&lt;xref:System.Array.GetUpperBound%2A?displayProperty=nameWithType&gt;</ph> für die Dimension des Arrays, das durchlaufen, oder kann nicht größer als oder gleich sein sollen die <ph id="ph2">`Count`</ph> Eigenschaft einer Auflistung.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>The following equation must be true for the dimension of the array that you want to iterate:</source>
          <target state="translated">Die folgende Gleichung muss für die Dimension des Arrays "true" sein, die durchlaufen werden sollen:</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>For a collection, the following equation must be true:</source>
          <target state="translated">Für eine Sammlung muss "true" die folgende Gleichung:</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>The starting index of an array or collection can never be a negative number.</source>
          <target state="translated">Der Startindex des Arrays oder einer Auflistung kann nie eine negative Zahl sein.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Assuming that an array must be zero-based.</source>
          <target state="translated">Angenommen, ein Array nullbasierte sein muss.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Arrays that are not zero-based can be created by the <ph id="ph1">&lt;xref:System.Array.CreateInstance%28System.Type%2CSystem.Int32%5B%5D%2CSystem.Int32%5B%5D%29?displayProperty=nameWithType&gt;</ph> method and can be returned by COM interop, although they aren’t CLS-compliant.</source>
          <target state="translated">Arrays, die nicht nullbasiert sind erstellt werden, indem die <ph id="ph1">&lt;xref:System.Array.CreateInstance%28System.Type%2CSystem.Int32%5B%5D%2CSystem.Int32%5B%5D%29?displayProperty=nameWithType&gt;</ph> Methode und von COM-Interop, zurückgegeben werden kann, obwohl sie nicht CLS-kompatibel sind.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph> that is thrown when you try to iterate a non-zero-based array created by the <ph id="ph2">&lt;xref:System.Array.CreateInstance%28System.Type%2CSystem.Int32%5B%5D%2CSystem.Int32%5B%5D%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph> , die ausgelöst wird, wenn Sie versuchen, durchlaufen Sie eine nicht-NULL-basierten Array erstellt, indem die <ph id="ph2">&lt;xref:System.Array.CreateInstance%28System.Type%2CSystem.Int32%5B%5D%2CSystem.Int32%5B%5D%29?displayProperty=nameWithType&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>To correct the error, as the following example does, you can call the <ph id="ph1">&lt;xref:System.Array.GetLowerBound%2A&gt;</ph> method instead of making assumptions about the starting index of an array.</source>
          <target state="translated">Um die Fehler behoben haben, wie im folgenden Beispiel wird der Fall ist, rufen Sie die <ph id="ph1">&lt;xref:System.Array.GetLowerBound%2A&gt;</ph> Methode anstelle von Annahmen über den Startindex eines Arrays.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Note that when you call the <ph id="ph1">&lt;xref:System.Array.GetLowerBound%2A&gt;</ph> method to get the starting index of an array, you should also call the <ph id="ph2">&lt;xref:System.Array.GetUpperBound%28System.Int32%29?displayProperty=nameWithType&gt;</ph> method to get its ending index.</source>
          <target state="translated">Beachten Sie, dass beim Aufrufen der <ph id="ph1">&lt;xref:System.Array.GetLowerBound%2A&gt;</ph> Methode zum Abrufen der Startindex eines Arrays, Sie sollten auch aufrufen, die <ph id="ph2">&lt;xref:System.Array.GetUpperBound%28System.Int32%29?displayProperty=nameWithType&gt;</ph> Methode zum Abrufen der endIndex.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Confusing an index and the value at that index in a numeric array or collection.</source>
          <target state="translated">Verwechseln einen Index und der Wert in diesem Index in ein numerisches Array oder eine Auflistung an.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>This issue usually occurs when using the <ph id="ph1">`foreach`</ph> statement (in C#) or the <ph id="ph2">`For Each`</ph> statement (in Visual Basic).</source>
          <target state="translated">Dieses Problem tritt gewöhnlich auf, wenn Sie mit der <ph id="ph1">`foreach`</ph> -Anweisung (in c#) oder die <ph id="ph2">`For Each`</ph> -Anweisung (in Visual Basic).</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>The following example illustrates the problem.</source>
          <target state="translated">Das Problem wird anhand des folgenden Beispiels veranschaulicht.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>The iteration construct returns each value in an array or collection, not its index.</source>
          <target state="translated">Das Konstrukt Iteration gibt jeden Wert in ein Array oder die Auflistung, die nicht über seinen Index zurück.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>To eliminate the exception, use this code.</source>
          <target state="translated">Verwenden Sie diesen Code zur Beseitigung dieser Ausnahme.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Providing an invalid column name to the <ph id="ph1">&lt;xref:System.Data.DataView.Sort%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Einen Ungültiger Spaltenname zum Bereitstellen der <ph id="ph1">&lt;xref:System.Data.DataView.Sort%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Violating thread safety.</source>
          <target state="translated">Verletzung der Threadsicherheit.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Operations such as reading from the same <ph id="ph1">&lt;xref:System.IO.StreamReader&gt;</ph> object, writing to the same <ph id="ph2">&lt;xref:System.IO.StreamWriter&gt;</ph> object from multiple threads, or enumerating the objects in a <ph id="ph3">&lt;xref:System.Collections.Hashtable&gt;</ph> from different threads can throw an <ph id="ph4">&lt;xref:System.IndexOutOfRangeException&gt;</ph> if the object isn’t accessed in a thread-safe way.</source>
          <target state="translated">Vorgänge wie das Lesen aus der gleichen <ph id="ph1">&lt;xref:System.IO.StreamReader&gt;</ph> -Objekt, auf das gleiche schreiben <ph id="ph2">&lt;xref:System.IO.StreamWriter&gt;</ph> Objekt von mehreren Threads, oder das Auflisten der Objekte in einer <ph id="ph3">&lt;xref:System.Collections.Hashtable&gt;</ph> in verschiedenen Threads auslösen können eine <ph id="ph4">&lt;xref:System.IndexOutOfRangeException&gt;</ph> , wenn der Zugriff auf das Objekt im ist kein threadsichere Weise.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>This exception is typically intermittent because it relies on a race condition.</source>
          <target state="translated">Diese Ausnahme wird in der Regel zeitweilig daran, dass es eine Racebedingung verwendet.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Using hard-coded index values to manipulate an array is likely to throw an exception if the index value is incorrect or invalid, or if the size of the array being manipulation is unexpected.</source>
          <target state="translated">Mithilfe von hartcodierten Indexwerte bearbeitet ein Array ist wahrscheinlich eine Ausnahme auslöst, wenn der Indexwert falsch oder ungültig ist oder die Größe des Arrays Manipulation wird unerwartet ist.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>To prevent an operation from throwing an  <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph> exception, you can do the following:</source>
          <target state="translated">Um zu verhindern, dass einen Vorgang von Auslösen einer <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph> Ausnahme können Sie wie folgt vorgehen:</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Iterate the elements of the array using the <bpt id="p1">[</bpt>foreach<ept id="p1">](https://msdn.microsoft.com/library/ttw7t8t6.aspx)</ept> statement (in C#) or the <bpt id="p2">[</bpt>For Each...Next<ept id="p2">](https://msdn.microsoft.com/library/5ebk1751.aspx)</ept> construct (in Visual Basic)  instead of iterating elements by index.</source>
          <target state="translated">Durchlaufen Sie die Elemente des Arrays mithilfe der <bpt id="p1">[</bpt>Foreach<ept id="p1">](https://msdn.microsoft.com/library/ttw7t8t6.aspx)</ept> -Anweisung (in c#) oder die <bpt id="p2">[</bpt>für jede... Nächste<ept id="p2">](https://msdn.microsoft.com/library/5ebk1751.aspx)</ept> erstellen (in Visual Basic) anstelle von Elementen nach dem Index durchlaufen.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Iterate the elements by index starting with the index returned by the <ph id="ph1">&lt;xref:System.Array.GetLowerBound%2A?displayProperty=nameWithType&gt;</ph> method and ending with the index returned by the <ph id="ph2">&lt;xref:System.Array.GetUpperBound%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Durchlaufen Sie Elemente nach Index ab, mit dem Index zurückgegebenes der <ph id="ph1">&lt;xref:System.Array.GetLowerBound%2A?displayProperty=nameWithType&gt;</ph> -Methode und den Endpunkt mit dem Index zurückgegeben werden, indem Sie die <ph id="ph2">&lt;xref:System.Array.GetUpperBound%2A?displayProperty=nameWithType&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>If you are assigning elements in one array to another, ensure that  the target array has at least as many elements as the source array by comparing their <ph id="ph1">&lt;xref:System.Array.Length%2A?displayProperty=nameWithType&gt;</ph> properties.</source>
          <target state="translated">Wenn Sie Elemente in einem Array in einen anderen zuweisen, sicherzustellen, dass im Zielarray mindestens so viele Elemente als das Quellarray durch vergleichen ihren <ph id="ph1">&lt;xref:System.Array.Length%2A?displayProperty=nameWithType&gt;</ph> Eigenschaften.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>For a list of initial property values for an instance of <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph>, see the <ph id="ph2">&lt;xref:System.IndexOutOfRangeException&gt;</ph> constructors.</source>
          <target state="translated">Eine Liste der anfänglichen Eigenschaftenwerte für eine Instanz von <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph>, finden Sie unter der <ph id="ph2">&lt;xref:System.IndexOutOfRangeException&gt;</ph> Konstruktoren.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>The following intermediate language (IL) instructions throw <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph>:</source>
          <target state="translated">Die folgenden intermediate Language (IL)-Anweisungen auslösen <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>ldelem.<ph id="ph1">\&lt;</ph>type&gt;</source>
          <target state="translated">Ldelem. <ph id="ph1">\&lt;</ph>Typ &gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>ldelema</source>
          <target state="translated">ldelema</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>stelem.<ph id="ph1">\&lt;</ph>type&gt;</source>
          <target state="translated">Stelem. <ph id="ph1">\&lt;</ph>Typ &gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source><ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph> uses the HRESULT COR_E_INDEXOUTOFRANGE, which has the value 0x80131508.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph> verwendet HRESULT COR_E_INDEXOUTOFRANGE mit den Wert 0 x 80131508.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="T:System.IndexOutOfRangeException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IndexOutOfRangeException" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.IndexOutOfRangeException" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.IndexOutOfRangeException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IndexOutOfRangeException" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.IndexOutOfRangeException" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> property of the new instance to a system-supplied message that describes the error, such as "An array index is out of range."</source>
          <target state="translated">Dieser Konstruktor initialisiert die <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> -Eigenschaft der neuen Instanz mit einer vom System gelieferten Meldung, die den Fehler beschreibt, wie z. B. "ein Arrayindex liegt außerhalb des gültigen Bereichs".</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor">
          <source>This message takes into account the current system culture.</source>
          <target state="translated">Diese Meldung berücksichtigt die aktuelle Systemkultur.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph>.</source>
          <target state="translated">In der folgenden Tabelle werden die anfänglichen Eigenschaftenwerte für eine <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph>-Instanz aufgeführt.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor">
          <source>Property</source>
          <target state="translated">Eigenschaft</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor">
          <source>Value</source>
          <target state="translated">Wert</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">Ein NULL-Verweis (<ph id="ph1">`Nothing`</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor">
          <source>The localized error message string.</source>
          <target state="translated">Die lokalisierte Zeichenfolge mit der Fehlermeldung.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.IndexOutOfRangeException.#ctor(System.String)">
          <source>The message that describes the error.</source>
          <target state="translated">Die Meldung, in der der Fehler beschrieben wird.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.IndexOutOfRangeException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IndexOutOfRangeException" /&gt;</ph> class with a specified error message.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.IndexOutOfRangeException" /&gt;</ph>-Klasse mit einer angegebenen Fehlermeldung.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor(System.String)">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Exception.Message%2A?displayProperty=nameWithType&gt;</ph> property of the new exception using the <ph id="ph2">`message`</ph> parameter.</source>
          <target state="translated">Dieser Konstruktor initialisiert die <ph id="ph1">&lt;xref:System.Exception.Message%2A?displayProperty=nameWithType&gt;</ph> -Eigenschaft der neuen Ausnahme unter Verwendung der <ph id="ph2">`message`</ph> Parameter.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor(System.String)">
          <source>The content of <ph id="ph1">`message`</ph> is intended to be understood by humans.</source>
          <target state="translated">Der Inhalt der <ph id="ph1">`message`</ph> soll in verständlicher Sprache gehalten sein.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor(System.String)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">Der Aufrufer dieses Konstruktors muss sicherstellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor(System.String)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph>.</source>
          <target state="translated">In der folgenden Tabelle werden die anfänglichen Eigenschaftenwerte für eine <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph>-Instanz aufgeführt.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor(System.String)">
          <source>Property</source>
          <target state="translated">Eigenschaft</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor(System.String)">
          <source>Value</source>
          <target state="translated">Wert</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor(System.String)">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">Ein NULL-Verweis (<ph id="ph1">`Nothing`</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor(System.String)">
          <source>The error message string.</source>
          <target state="translated">Die Zeichenfolge der Fehlermeldung.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.IndexOutOfRangeException.#ctor(System.String,System.Exception)">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.IndexOutOfRangeException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.IndexOutOfRangeException.#ctor(System.String,System.Exception)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> parameter is not a null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic), the current exception is raised in a <ph id="ph2">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated">Wenn der Parameter <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> kein NULL-Verweis ist (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic), wird die aktuelle Ausnahme in einem <ph id="ph2">&lt;see langword="catch" /&gt;</ph>-Block ausgelöst, der die innere Ausnahme behandelt.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.IndexOutOfRangeException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IndexOutOfRangeException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.IndexOutOfRangeException" /&gt;</ph>-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">Eine Ausnahme, die als direktes Ergebnis einer vorhergehenden Ausnahme ausgelöst wird, muss in der <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph>-Eigenschaft über einen Verweis auf die vorhergehende Ausnahme verfügen.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">`InnerException`</ph> property returns the same value that is passed into the constructor, or a null reference (<ph id="ph2">`Nothing`</ph> in Visual Basic) if the <ph id="ph3">`InnerException`</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated">Die <ph id="ph1">`InnerException`</ph>-Eigenschaft gibt denselben Wert zurück, der an den Konstruktor übergeben wurde, bzw. einen NULL-Verweis (<ph id="ph2">`Nothing`</ph> in Visual Basic), wenn die <ph id="ph3">`InnerException`</ph>-Eigenschaft nicht den Wert für die innere Ausnahme für den Konstruktor bereitstellt.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor(System.String,System.Exception)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph>.</source>
          <target state="translated">In der folgenden Tabelle werden die anfänglichen Eigenschaftenwerte für eine <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph>-Instanz aufgeführt.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor(System.String,System.Exception)">
          <source>Property</source>
          <target state="translated">Eigenschaft</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor(System.String,System.Exception)">
          <source>Value</source>
          <target state="translated">Wert</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor(System.String,System.Exception)">
          <source>The inner exception reference.</source>
          <target state="translated">Der Verweis auf die interne Ausnahme.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor(System.String,System.Exception)">
          <source>The error message string.</source>
          <target state="translated">Die Zeichenfolge der Fehlermeldung.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>