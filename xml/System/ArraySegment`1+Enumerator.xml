<Type Name="ArraySegment&lt;T&gt;+Enumerator" FullName="System.ArraySegment&lt;T&gt;+Enumerator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4ee876dac6be9ea8a4242611e2bfe22fe170f41f" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83520972" /></Metadata><TypeSignature Language="C#" Value="public struct ArraySegment&lt;T&gt;.Enumerator : System.Collections.Generic.IEnumerator&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi sealed beforefieldinit ArraySegment`1/Enumerator&lt;T&gt; extends System.ValueType implements class System.Collections.Generic.IEnumerator`1&lt;!T&gt;, class System.Collections.IEnumerator, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ArraySegment`1.Enumerator" />
  <TypeSignature Language="VB.NET" Value="Public Structure ArraySegment(Of T).Enumerator&#xA;Implements IEnumerator(Of T)" />
  <TypeSignature Language="C++ CLI" Value="public: value class ArraySegment&lt;T&gt;::Enumerator : System::Collections::Generic::IEnumerator&lt;T&gt;" />
  <TypeSignature Language="F#" Value="type ArraySegment&lt;'T&gt;.Enumerator = struct&#xA;    interface IEnumerator&lt;'T&gt;&#xA;    interface IEnumerator&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerator&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Stellt einen Enumerator für diese Elemente eines <see cref="T:System.ArraySegment`1" />-Elements bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  

## Remarks

Die C# [foreach](~/docs/csharp/language-reference/keywords/foreach-in.md) - C# Sprache und die [for each-Sprache... Das nächste](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md) Konstrukt in Visual Basic verbirgt die Komplexität von Enumeratoren. Anstatt den Enumerator direkt zu manipulieren, wird die Verwendung von `foreach` oder `For Each...Next` empfohlen. 

Anfänglich wird der Enumerator vor dem ersten Element im <xref:System.ArraySegment%601>positioniert. An dieser Position ist <xref:System.ArraySegment%601.Enumerator.Current> nicht definiert. Sie müssen <xref:System.ArraySegment%601.Enumerator.MoveNext%2A> aufgerufen werden, um den Enumerator vor dem Lesen des Werts von <xref:System.ArraySegment%601.Enumerator.Current>auf das erste Element im <xref:System.ArraySegment%601> zu setzen.

<xref:System.ArraySegment%601.Enumerator.Current> gibt denselben Wert zurück, bis <xref:System.ArraySegment%601.Enumerator.MoveNext%2A> aufgerufen wird. <xref:System.ArraySegment%601.Enumerator.MoveNext%2A> legt <xref:System.ArraySegment%601.Enumerator.Current> auf das nächste Element in der <xref:System.ArraySegment%601>fest.

Wenn <xref:System.ArraySegment%601.Enumerator.MoveNext%2A> das Ende der <xref:System.ArraySegment%601>übergibt, gibt <xref:System.ArraySegment%601.Enumerator.MoveNext%2A> `false`zurück. Wenn sich der Enumerator in diesem Zustand befindet, geben nachfolgende Aufrufe von <xref:System.ArraySegment%601.Enumerator.MoveNext%2A> ebenfalls `false` zurück, und <xref:System.ArraySegment%601.Enumerator.Current> ist nicht definiert. <xref:System.ArraySegment%601.Enumerator.Current> kann nicht erneut auf das erste Element in der <xref:System.ArraySegment%601> festgelegt werden. Stattdessen müssen Sie eine neue Enumeratorinstanz erstellen. 
 
      ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public T Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Current" />
      <MemberSignature Language="DocId" Value="P:System.ArraySegment`1.Enumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T Current { T get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : 'T" Usage="System.ArraySegment&lt;'T&gt;.Enumerator.Current" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IEnumerator`1.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf das Element an der aktuellen Position des Enumerators ab.</summary>
        <value>Das Element des <see cref="T:System.ArraySegment`1" /> an der aktuellen Position des Enumerators.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

`Current` ist unter einer der folgenden Bedingungen nicht definiert: 

- Unmittelbar nach dem Erstellen des Enumerators wird der Enumerator vor dem ersten Element im Array Segment positioniert. <xref:System.ArraySegment%601.Enumerator.MoveNext%2A> müssen aufgerufen werden, um den Enumerator vor dem Lesen des Werts `Current`auf das erste Element des Array Segments zu verschieben.

- Der letzte Aufrufe von <xref:System.ArraySegment%601.Enumerator.MoveNext%2A> `false`zurückgegeben, der das Ende des Array Segments angibt. 

`Current` gibt denselben Wert zurück, bis <xref:System.ArraySegment%601.Enumerator.MoveNext%2A> aufgerufen wird. <xref:System.ArraySegment%601.Enumerator.MoveNext%2A> legt `Current` auf das nächste Element im Array Segment fest. 

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArraySegment`1.Enumerator.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="enumerator.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt alle von der Enumeratorinstanz verwendeten Ressourcen frei.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArraySegment`1.Enumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool&#xA;override this.MoveNext : unit -&gt; bool" Usage="enumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Setzt den Enumerator auf das nächste Element der <see cref="T:System.ArraySegment`1" />.</summary>
        <returns><see langword="true" />, wenn der Enumerator erfolgreich auf das nächste Element gesetzt wurde, <see langword="false" />, wenn der Enumerator das Ende des Arraysegments überschritten hat.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

Nachdem ein Enumerator erstellt wurde, wird er vor dem ersten Element im Array Segment positioniert, und der erste-Aufruf`MoveNext` verschiebt den Enumerator auf das erste Element im Array Segment. 

Wenn `MoveNext` das Ende des Array Segments übergibt, gibt `MoveNext` `false`zurück. Wenn sich der Enumerator in diesem Zustand befindet, geben nachfolgende Aufrufe von `MoveNext` ebenfalls `false`zurück.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Current">
      <MemberSignature Language="C#" Value="object System.Collections.IEnumerator.Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IEnumerator.Current" />
      <MemberSignature Language="DocId" Value="P:System.ArraySegment`1.Enumerator.System#Collections#IEnumerator#Current" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Current As Object Implements IEnumerator.Current" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IEnumerator::Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.IEnumerator.Current : obj" Usage="System.Collections.IEnumerator.Current" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Element an der aktuellen Position des Enumerators ab.</summary>
        <value>Das Element im Array Segment an der aktuellen Position des Enumerators.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Der Enumerator befindet sich vor dem ersten Element des Arraysegments oder hinter dem letzten Element.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Reset">
      <MemberSignature Language="C#" Value="void IEnumerator.Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IEnumerator.Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArraySegment`1.Enumerator.System#Collections#IEnumerator#Reset" />
      <MemberSignature Language="VB.NET" Value="Sub Reset () Implements IEnumerator.Reset" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IEnumerator.Reset() = System::Collections::IEnumerator::Reset;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerator.Reset : unit -&gt; unit&#xA;override this.System.Collections.IEnumerator.Reset : unit -&gt; unit" Usage="enumerator.System.Collections.IEnumerator.Reset " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Setzt den Enumerator auf seine anfängliche Position, d.h. vor das erste Element im Arraysegment.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
