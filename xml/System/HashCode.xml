<Type Name="HashCode" FullName="System.HashCode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5debd1a864fb82254f6905dba00712e7a7a09519" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39765738" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct HashCode" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit HashCode extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.HashCode" />
  <TypeSignature Language="VB.NET" Value="Public Structure HashCode" />
  <TypeSignature Language="C++ CLI" Value="public value class HashCode" />
  <TypeSignature Language="F#" Value="type HashCode = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Kombiniert den Hashcode für mehrere Werte zu einem einzelnen Hashcode.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

Sie können <xref:System.HashCode> zum Kombinieren mehrerer Werte (z. B. die Felder in einer Struktur oder Klasse) in einen einzelnen Hashcode. Diese Struktur funktioniert in einem von zwei Möglichkeiten:

 * Statische Methoden, die einen Satz von bis zu acht Werten kombinieren zu akzeptieren.
 * Zwei Instanzmethoden, die Streamingprinzip akzeptieren jeweils einzelne Werte zu einem Zeitpunkt ausgeführt werden.

> [!WARNING]
> Es ist um Hashcodes als Implementierungsdetail beibehalten, sollten bewährte Methoden, wie die Implementierung für Assemblyversionen ändern kann. Speichern Sie keine Hashcodes erzeugten <xref:System.HashCode> im serialisierten Datenstrukturen, z. B. auf dem Datenträger. <xref:System.HashCode> verwendet eine statisch initialisierten zufälliger Ausgangswert zum Erzwingen dieser bewährten Methode, was bedeutet, dass die Hashcodes nur innerhalb des Bereichs eines Betriebssystem-Prozesses deterministisch sind.

### <a name="static-methods"></a>Statische Methoden

Die statischen Methoden kombinieren, die Standard-Hashcodes von bis zu acht Werten.
 
 [!code-csharp[System.HashCode.Structure#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.hashcode.structure/cs/example1.cs#1)]
 [!code-vb[System.HashCode.Structure#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.hashcode.structure/vb/example1.vb#1)] 

### <a name="instance-methods"></a>Instanzmethoden

> [!IMPORTANT]
> <xref:System.HashCode.ToHashCode> höchstens einmal aufgerufen werden muss, pro Instanz von <xref:System.HashCode>.

Die Instanzmethoden Kombinieren der Hashcodes von mehr als acht Werten.
 
 [!code-csharp[System.HashCode.Structure#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.hashcode.structure/cs/example2.cs#1)]
 [!code-vb[System.HashCode.Structure#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.hashcode.structure/vb/example2.vb#1)]

Die Instanzmethoden auch kombinieren, der Hashcodes, die von einer bestimmten erzeugten <xref:System.Collections.Generic.IEqualityComparer%601> Implementierung.

 [!code-csharp[System.HashCode.Structure#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.hashcode.structure/cs/example3.cs#1)]
 [!code-vb[System.HashCode.Structure#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.hashcode.structure/vb/example3.vb#1)]

Die <xref:System.HashCode> Struktur muss übergeben werden nach Verweis an andere Methoden, wie es sich um einen Werttyp handelt.
 
 [!code-csharp[System.HashCode.Structure#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.hashcode.structure/cs/example4.cs#1)]
 [!code-vb[System.HashCode.Structure#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.hashcode.structure/vb/example4.vb#1)]

      ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void Add&lt;T&gt; (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add&lt;T&gt;(!!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.HashCode.Add``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add(Of T) (value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void Add(T value);" />
      <MemberSignature Language="F#" Value="member this.Add : 'T -&gt; unit" Usage="hashCode.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">Der Typ des Werts, der den Hashcode hinzufügen.</typeparam>
        <param name="value">Der Wert, der zum Hashcode hinzugefügt werden soll.</param>
        <summary>Fügt einen einzelnen Wert zum Hashcode hinzu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void Add&lt;T&gt; (T value, System.Collections.Generic.IEqualityComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add&lt;T&gt;(!!T value, class System.Collections.Generic.IEqualityComparer`1&lt;!!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.HashCode.Add``1(``0,System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add(Of T) (value As T, comparer As IEqualityComparer(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void Add(T value, System::Collections::Generic::IEqualityComparer&lt;T&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="member this.Add : 'T * System.Collections.Generic.IEqualityComparer&lt;'T&gt; -&gt; unit" Usage="hashCode.Add (value, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="T" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">Der Typ des Werts, der den Hashcode hinzufügen.</typeparam>
        <param name="value">Der Wert, der zum Hashcode hinzugefügt werden soll.</param>
        <param name="comparer">Die <see cref="T:System.Collections.Generic.IEqualityComparer&lt;T&gt;" />-Schnittstelle, die zum Berechnen des Hashcodes verwendet werden soll.
Dieser Wert kann ein NULL-Verweis („Nothing“ in Visual Basic) sein. Dieser verwendet den Standardgleichheitsvergleich für <typeparamref name="T" />.</param>
        <summary>Fügt einen einzelnen Wert zum Hashcode hinzu, der den Typ angibt, der die Hashcodefunktion bereitstellt.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Combine&lt;T1&gt;">
      <MemberSignature Language="C#" Value="public static int Combine&lt;T1&gt; (T1 value1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Combine&lt;T1&gt;(!!T1 value1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.HashCode.Combine``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine(Of T1) (value1 As T1) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1&gt;&#xA; static int Combine(T1 value1);" />
      <MemberSignature Language="F#" Value="static member Combine : 'T1 -&gt; int" Usage="System.HashCode.Combine value1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value1" Type="T1" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des Werts, fügen die den Hashcode.</typeparam>
        <param name="value1">Der Wert, der zum Hashcode hinzugefügt werden soll.</param>
        <summary>Verteilt den Hashcode, der vom angegebenen Wert zurückgegeben wird.</summary>
        <returns>Der Hashcode, der den einzelnen Wert darstellt.</returns>
        <remarks>Einige Datenstrukturen wird davon ausgegangen, dass die Hashcodes über einen großen Bereich Diffuses Licht sind. Diese Methode verbessert die Qualität, der den Hashcode, der durch den Wert zurückgegeben und ist nützlich, wenn die zugrunde liegende Datentyp einfach, z. B. einen ganzzahligen Wert ist.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Combine&lt;T1,T2&gt;">
      <MemberSignature Language="C#" Value="public static int Combine&lt;T1,T2&gt; (T1 value1, T2 value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Combine&lt;T1, T2&gt;(!!T1 value1, !!T2 value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.HashCode.Combine``2(``0,``1)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine(Of T1, T2) (value1 As T1, value2 As T2) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2&gt;&#xA; static int Combine(T1 value1, T2 value2);" />
      <MemberSignature Language="F#" Value="static member Combine : 'T1 * 'T2 -&gt; int" Usage="System.HashCode.Combine (value1, value2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value1" Type="T1" />
        <Parameter Name="value2" Type="T2" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Werts, der in den Hash zu kombinieren.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Werts, der in den Hash zu kombinieren.</typeparam>
        <param name="value1">Der erste Wert, der zu einem Hashcode kombiniert werden soll.</param>
        <param name="value2">Der zweite Wert, der zu einem Hashcode kombiniert werden soll.</param>
        <summary>Kombiniert zwei Werte zu einem Hashcode.</summary>
        <returns>Der Hashcode, der die zwei Werte darstellt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Combine&lt;T1,T2,T3&gt;">
      <MemberSignature Language="C#" Value="public static int Combine&lt;T1,T2,T3&gt; (T1 value1, T2 value2, T3 value3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Combine&lt;T1, T2, T3&gt;(!!T1 value1, !!T2 value2, !!T3 value3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.HashCode.Combine``3(``0,``1,``2)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine(Of T1, T2, T3) (value1 As T1, value2 As T2, value3 As T3) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3&gt;&#xA; static int Combine(T1 value1, T2 value2, T3 value3);" />
      <MemberSignature Language="F#" Value="static member Combine : 'T1 * 'T2 * 'T3 -&gt; int" Usage="System.HashCode.Combine (value1, value2, value3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value1" Type="T1" />
        <Parameter Name="value2" Type="T2" />
        <Parameter Name="value3" Type="T3" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Werts, der in den Hash zu kombinieren.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Werts, der in den Hash zu kombinieren.</typeparam>
        <typeparam name="T3">Der Typ des der dritte Wert, der in den Hash zu kombinieren.</typeparam>
        <param name="value1">Der erste Wert, der zu einem Hashcode kombiniert werden soll.</param>
        <param name="value2">Der zweite Wert, der zu einem Hashcode kombiniert werden soll.</param>
        <param name="value3">Der dritte Wert, der zu einem Hashcode kombiniert werden soll.</param>
        <summary>Kombiniert drei Werte zu einem Hashcode.</summary>
        <returns>Der Hashcode, der die drei Werte darstellt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Combine&lt;T1,T2,T3,T4&gt;">
      <MemberSignature Language="C#" Value="public static int Combine&lt;T1,T2,T3,T4&gt; (T1 value1, T2 value2, T3 value3, T4 value4);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Combine&lt;T1, T2, T3, T4&gt;(!!T1 value1, !!T2 value2, !!T3 value3, !!T4 value4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.HashCode.Combine``4(``0,``1,``2,``3)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine(Of T1, T2, T3, T4) (value1 As T1, value2 As T2, value3 As T3, value4 As T4) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4&gt;&#xA; static int Combine(T1 value1, T2 value2, T3 value3, T4 value4);" />
      <MemberSignature Language="F#" Value="static member Combine : 'T1 * 'T2 * 'T3 * 'T4 -&gt; int" Usage="System.HashCode.Combine (value1, value2, value3, value4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value1" Type="T1" />
        <Parameter Name="value2" Type="T2" />
        <Parameter Name="value3" Type="T3" />
        <Parameter Name="value4" Type="T4" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Werts, der in den Hash zu kombinieren.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Werts, der in den Hash zu kombinieren.</typeparam>
        <typeparam name="T3">Der Typ des der dritte Wert, der in den Hash zu kombinieren.</typeparam>
        <typeparam name="T4">Der Typ des vierten Werts, der in den Hash zu kombinieren.</typeparam>
        <param name="value1">Der erste Wert, der zu einem Hashcode kombiniert werden soll.</param>
        <param name="value2">Der zweite Wert, der zu einem Hashcode kombiniert werden soll.</param>
        <param name="value3">Der dritte Wert, der zu einem Hashcode kombiniert werden soll.</param>
        <param name="value4">Der vierte Wert, der zu einem Hashcode kombiniert werden soll.</param>
        <summary>Kombiniert vier Werte zu einem Hashcode.</summary>
        <returns>Der Hashcode, der die vier Werte darstellt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Combine&lt;T1,T2,T3,T4,T5&gt;">
      <MemberSignature Language="C#" Value="public static int Combine&lt;T1,T2,T3,T4,T5&gt; (T1 value1, T2 value2, T3 value3, T4 value4, T5 value5);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Combine&lt;T1, T2, T3, T4, T5&gt;(!!T1 value1, !!T2 value2, !!T3 value3, !!T4 value4, !!T5 value5) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.HashCode.Combine``5(``0,``1,``2,``3,``4)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine(Of T1, T2, T3, T4, T5) (value1 As T1, value2 As T2, value3 As T3, value4 As T4, value5 As T5) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5&gt;&#xA; static int Combine(T1 value1, T2 value2, T3 value3, T4 value4, T5 value5);" />
      <MemberSignature Language="F#" Value="static member Combine : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 -&gt; int" Usage="System.HashCode.Combine (value1, value2, value3, value4, value5)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value1" Type="T1" />
        <Parameter Name="value2" Type="T2" />
        <Parameter Name="value3" Type="T3" />
        <Parameter Name="value4" Type="T4" />
        <Parameter Name="value5" Type="T5" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Werts, der in den Hash zu kombinieren.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Werts, der in den Hash zu kombinieren.</typeparam>
        <typeparam name="T3">Der Typ des der dritte Wert, der in den Hash zu kombinieren.</typeparam>
        <typeparam name="T4">Der Typ des vierten Werts, der in den Hash zu kombinieren.</typeparam>
        <typeparam name="T5">Der Typ des fünften Werts, der in den Hash zu kombinieren.</typeparam>
        <param name="value1">Der erste Wert, der zu einem Hashcode kombiniert werden soll.</param>
        <param name="value2">Der zweite Wert, der zu einem Hashcode kombiniert werden soll.</param>
        <param name="value3">Der dritte Wert, der zu einem Hashcode kombiniert werden soll.</param>
        <param name="value4">Der vierte Wert, der zu einem Hashcode kombiniert werden soll.</param>
        <param name="value5">Der fünfte Wert, der zu einem Hashcode kombiniert werden soll.</param>
        <summary>Kombiniert fünf Werte zu einem Hashcode.</summary>
        <returns>Der Hashcode, der die fünf Werte darstellt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Combine&lt;T1,T2,T3,T4,T5,T6&gt;">
      <MemberSignature Language="C#" Value="public static int Combine&lt;T1,T2,T3,T4,T5,T6&gt; (T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Combine&lt;T1, T2, T3, T4, T5, T6&gt;(!!T1 value1, !!T2 value2, !!T3 value3, !!T4 value4, !!T5 value5, !!T6 value6) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.HashCode.Combine``6(``0,``1,``2,``3,``4,``5)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine(Of T1, T2, T3, T4, T5, T6) (value1 As T1, value2 As T2, value3 As T3, value4 As T4, value5 As T5, value6 As T6) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6&gt;&#xA; static int Combine(T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6);" />
      <MemberSignature Language="F#" Value="static member Combine : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 -&gt; int" Usage="System.HashCode.Combine (value1, value2, value3, value4, value5, value6)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value1" Type="T1" />
        <Parameter Name="value2" Type="T2" />
        <Parameter Name="value3" Type="T3" />
        <Parameter Name="value4" Type="T4" />
        <Parameter Name="value5" Type="T5" />
        <Parameter Name="value6" Type="T6" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Werts, der in den Hash zu kombinieren.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Werts, der in den Hash zu kombinieren.</typeparam>
        <typeparam name="T3">Der Typ des der dritte Wert, der in den Hash zu kombinieren.</typeparam>
        <typeparam name="T4">Der Typ des vierten Werts, der in den Hash zu kombinieren.</typeparam>
        <typeparam name="T5">Der Typ des fünften Werts, der in den Hash zu kombinieren.</typeparam>
        <typeparam name="T6">Der Typ des sechsten Werts, der in den Hash zu kombinieren.</typeparam>
        <param name="value1">Der erste Wert, der zu einem Hashcode kombiniert werden soll.</param>
        <param name="value2">Der zweite Wert, der zu einem Hashcode kombiniert werden soll.</param>
        <param name="value3">Der dritte Wert, der zu einem Hashcode kombiniert werden soll.</param>
        <param name="value4">Der vierte Wert, der zu einem Hashcode kombiniert werden soll.</param>
        <param name="value5">Der fünfte Wert, der zu einem Hashcode kombiniert werden soll.</param>
        <param name="value6">Der sechste Wert, der zu einem Hashcode kombiniert werden soll.</param>
        <summary>Kombiniert sechs Werte zu einem Hashcode.</summary>
        <returns>Der Hashcode, der die sechs Werte darstellt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Combine&lt;T1,T2,T3,T4,T5,T6,T7&gt;">
      <MemberSignature Language="C#" Value="public static int Combine&lt;T1,T2,T3,T4,T5,T6,T7&gt; (T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6, T7 value7);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Combine&lt;T1, T2, T3, T4, T5, T6, T7&gt;(!!T1 value1, !!T2 value2, !!T3 value3, !!T4 value4, !!T5 value5, !!T6 value6, !!T7 value7) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.HashCode.Combine``7(``0,``1,``2,``3,``4,``5,``6)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine(Of T1, T2, T3, T4, T5, T6, T7) (value1 As T1, value2 As T2, value3 As T3, value4 As T4, value5 As T5, value6 As T6, value7 As T7) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7&gt;&#xA; static int Combine(T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6, T7 value7);" />
      <MemberSignature Language="F#" Value="static member Combine : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 -&gt; int" Usage="System.HashCode.Combine (value1, value2, value3, value4, value5, value6, value7)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value1" Type="T1" />
        <Parameter Name="value2" Type="T2" />
        <Parameter Name="value3" Type="T3" />
        <Parameter Name="value4" Type="T4" />
        <Parameter Name="value5" Type="T5" />
        <Parameter Name="value6" Type="T6" />
        <Parameter Name="value7" Type="T7" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Werts, der in den Hash zu kombinieren.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Werts, der in den Hash zu kombinieren.</typeparam>
        <typeparam name="T3">Der Typ des der dritte Wert, der in den Hash zu kombinieren.</typeparam>
        <typeparam name="T4">Der Typ des vierten Werts, der in den Hash zu kombinieren.</typeparam>
        <typeparam name="T5">Der Typ des fünften Werts, der in den Hash zu kombinieren.</typeparam>
        <typeparam name="T6">Der Typ des sechsten Werts, der in den Hash zu kombinieren.</typeparam>
        <typeparam name="T7">Der Typ des siebten Werts, der in den Hash zu kombinieren.</typeparam>
        <param name="value1">Der erste Wert, der zu einem Hashcode kombiniert werden soll.</param>
        <param name="value2">Der zweite Wert, der zu einem Hashcode kombiniert werden soll.</param>
        <param name="value3">Der dritte Wert, der zu einem Hashcode kombiniert werden soll.</param>
        <param name="value4">Der vierte Wert, der zu einem Hashcode kombiniert werden soll.</param>
        <param name="value5">Der fünfte Wert, der zu einem Hashcode kombiniert werden soll.</param>
        <param name="value6">Der sechste Wert, der zu einem Hashcode kombiniert werden soll.</param>
        <param name="value7">Der siebte Wert, der zu einem Hashcode kombiniert werden soll.</param>
        <summary>Kombiniert sechs Werte zu einem Hashcode.</summary>
        <returns>Der Hashcode, der die sieben Werte darstellt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Combine&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt;">
      <MemberSignature Language="C#" Value="public static int Combine&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt; (T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6, T7 value7, T8 value8);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Combine&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;(!!T1 value1, !!T2 value2, !!T3 value3, !!T4 value4, !!T5 value5, !!T6 value6, !!T7 value7, !!T8 value8) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.HashCode.Combine``8(``0,``1,``2,``3,``4,``5,``6,``7)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine(Of T1, T2, T3, T4, T5, T6, T7, T8) (value1 As T1, value2 As T2, value3 As T3, value4 As T4, value5 As T5, value6 As T6, value7 As T7, value8 As T8) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8&gt;&#xA; static int Combine(T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6, T7 value7, T8 value8);" />
      <MemberSignature Language="F#" Value="static member Combine : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 -&gt; int" Usage="System.HashCode.Combine (value1, value2, value3, value4, value5, value6, value7, value8)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value1" Type="T1" />
        <Parameter Name="value2" Type="T2" />
        <Parameter Name="value3" Type="T3" />
        <Parameter Name="value4" Type="T4" />
        <Parameter Name="value5" Type="T5" />
        <Parameter Name="value6" Type="T6" />
        <Parameter Name="value7" Type="T7" />
        <Parameter Name="value8" Type="T8" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Werts, der in den Hash zu kombinieren.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Werts, der in den Hash zu kombinieren.</typeparam>
        <typeparam name="T3">Der Typ des der dritte Wert, der in den Hash zu kombinieren.</typeparam>
        <typeparam name="T4">Der Typ des vierten Werts, der in den Hash zu kombinieren.</typeparam>
        <typeparam name="T5">Der Typ des fünften Werts, der in den Hash zu kombinieren.</typeparam>
        <typeparam name="T6">Der Typ des sechsten Werts, der in den Hash zu kombinieren.</typeparam>
        <typeparam name="T7">Der Typ des siebten Werts, der in den Hash zu kombinieren.</typeparam>
        <typeparam name="T8">Der Typ des achten Werts, der in den Hash zu kombinieren.</typeparam>
        <param name="value1">Der erste Wert, der zu einem Hashcode kombiniert werden soll.</param>
        <param name="value2">Der zweite Wert, der zu einem Hashcode kombiniert werden soll.</param>
        <param name="value3">Der dritte Wert, der zu einem Hashcode kombiniert werden soll.</param>
        <param name="value4">Der vierte Wert, der zu einem Hashcode kombiniert werden soll.</param>
        <param name="value5">Der fünfte Wert, der zu einem Hashcode kombiniert werden soll.</param>
        <param name="value6">Der sechste Wert, der zu einem Hashcode kombiniert werden soll.</param>
        <param name="value7">Der siebte Wert, der zu einem Hashcode kombiniert werden soll.</param>
        <param name="value8">Der achte Wert, der zu einem Hashcode kombiniert werden soll.</param>
        <summary>Kombiniert sieben Werte zu einem Hashcode.</summary>
        <returns>Der Hashcode, der die acht Werte darstellt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.HashCode.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="hashCode.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.1">
          <AttributeName>System.Obsolete("HashCode is a mutable struct and should not be compared with other HashCodes.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Ignoriert.</param>
        <summary>Diese Methode wird nicht unterstützt und sollte nicht aufgerufen werden.</summary>
        <returns>Diese Methode löst immer <see cref="T:System.NotSupportedException" /> aus.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Wird immer ausgelöst, wenn diese Methode aufgerufen wird.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.HashCode.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="hashCode.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.1">
          <AttributeName>System.Obsolete("HashCode is a mutable struct and should not be compared with other HashCodes. Use ToHashCode to retrieve the computed hash code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Diese Methode wird nicht unterstützt und sollte nicht aufgerufen werden.</summary>
        <returns>Diese Methode löst immer <see cref="T:System.NotSupportedException" /> aus.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Wird immer ausgelöst, wenn diese Methode aufgerufen wird.</exception>
      </Docs>
    </Member>
    <Member MemberName="ToHashCode">
      <MemberSignature Language="C#" Value="public int ToHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ToHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.HashCode.ToHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Function ToHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ToHashCode();" />
      <MemberSignature Language="F#" Value="member this.ToHashCode : unit -&gt; int" Usage="hashCode.ToHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Berechnet den endgültigen Hashcode nach aufeinanderfolgenden Aufrufen von <see cref="Overload:System.HashCode.Add" />.</summary>
        <returns>Der berechnete Hashcode.</returns>
        <remarks>Diese Methode höchstens einmal pro Instanz aufgerufen werden muss <see cref="T:System.HashCode" />.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>