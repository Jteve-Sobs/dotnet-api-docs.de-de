<Type Name="UriTemplate" FullName="System.UriTemplate">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cd2c5b1f7517e80a4a2e14d89cc10d67824467e6" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69418653" /></Metadata><TypeSignature Language="C#" Value="public class UriTemplate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UriTemplate extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.UriTemplate" />
  <TypeSignature Language="VB.NET" Value="Public Class UriTemplate" />
  <TypeSignature Language="C++ CLI" Value="public ref class UriTemplate" />
  <TypeSignature Language="F#" Value="type UriTemplate = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.ServiceModel.Web, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="37d6e-101">Eine Klasse, die eine URI-Vorlage (Uniform Resource Identifier) darstellt.</span><span class="sxs-lookup"><span data-stu-id="37d6e-101">A class that represents a Uniform Resource Identifier (URI) template.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37d6e-102">Mit einer URI-Vorlage können Sie einen Satz strukturell ähnlicher URIs definieren.</span><span class="sxs-lookup"><span data-stu-id="37d6e-102">A URI template allows you to define a set of structurally similar URIs.</span></span> <span data-ttu-id="37d6e-103">Vorlagen bestehen aus zwei Teilen, einem Pfad und einer Abfrage.</span><span class="sxs-lookup"><span data-stu-id="37d6e-103">Templates are composed of two parts, a path and a query.</span></span> <span data-ttu-id="37d6e-104">Ein Pfad besteht aus einer Reihe von Segmenten, die durch einen Schrägstrich (/) voneinander getrennt werden.</span><span class="sxs-lookup"><span data-stu-id="37d6e-104">A path consists of a series of segments delimited by a slash (/).</span></span> <span data-ttu-id="37d6e-105">Jedes Segment kann über einen Literalwert, einen Variablenwert (wird in geschweiften Klammern [{ }] angegeben und muss dem Inhalt genau eines Segments entsprechen) oder einen Platzhalter verfügen (wird als Sternchen [\*] angegeben, das als "restlicher Pfad" interpretiert wird), der am Ende des Pfads stehen muss.</span><span class="sxs-lookup"><span data-stu-id="37d6e-105">Each segment can have a literal value, a variable value (written within curly braces [{ }], constrained to match the contents of exactly one segment), or a wildcard (written as an asterisk [\*], which matches "the rest of the path"), which must appear at the end of the path.</span></span> <span data-ttu-id="37d6e-106">Der Abfrageausdruck kann vollständig weggelassen werden.</span><span class="sxs-lookup"><span data-stu-id="37d6e-106">The query expression can be omitted entirely.</span></span> <span data-ttu-id="37d6e-107">Sofern der Abfrageausdruck vorhanden ist, wird eine ungeordnete Reihe von Name-Wert-Paaren angegeben.</span><span class="sxs-lookup"><span data-stu-id="37d6e-107">If present, it specifies an unordered series of name/value pairs.</span></span> <span data-ttu-id="37d6e-108">Bei den Elementen des Abfrageausdrucks kann es sich entweder um literale Paare (? x=2) oder variable Paare (?x={val}) handeln.</span><span class="sxs-lookup"><span data-stu-id="37d6e-108">Elements of the query expression can be either literal pairs (?x=2) or variable pairs (?x={val}).</span></span> <span data-ttu-id="37d6e-109">Alleinstehende Werte sind nicht zulässig.</span><span class="sxs-lookup"><span data-stu-id="37d6e-109">Unpaired values are not permitted.</span></span> <span data-ttu-id="37d6e-110">Die folgenden Beispiele veranschaulichen gültige Vorlagenzeichenfolgen:</span><span class="sxs-lookup"><span data-stu-id="37d6e-110">The following examples show valid template strings:</span></span>  
  
-   <span data-ttu-id="37d6e-111">"Wetter/BW/Mannheim"</span><span class="sxs-lookup"><span data-stu-id="37d6e-111">"weather/WA/Seattle"</span></span>  
  
-   <span data-ttu-id="37d6e-112">"Wetter/{Bundesland}/{Stadt}"</span><span class="sxs-lookup"><span data-stu-id="37d6e-112">"weather/{state}/{city}"</span></span>  
  
-   <span data-ttu-id="37d6e-113">"Wetter/\*"</span><span class="sxs-lookup"><span data-stu-id="37d6e-113">"weather/\*"</span></span>  
  
-   <span data-ttu-id="37d6e-114">"Wetter/{Bundesland}/{Stadt}?forecast=heute</span><span class="sxs-lookup"><span data-stu-id="37d6e-114">"weather/{state}/{city}?forecast=today</span></span>  
  
-   <span data-ttu-id="37d6e-115">"Wetter/{Bundesland}/{Stadt}?forecast={Tag}</span><span class="sxs-lookup"><span data-stu-id="37d6e-115">"weather/{state}/{city}?forecast={day}</span></span>  
  
 <span data-ttu-id="37d6e-116">Die vorangehenden URI-Vorlagen können zum Organisieren von Wetterberichten verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="37d6e-116">The preceding URI templates might be used for organizing weather reports.</span></span> <span data-ttu-id="37d6e-117">In geschweifte Klammern eingeschlossene Segmente sind Variablen, alle anderen sind Literale.</span><span class="sxs-lookup"><span data-stu-id="37d6e-117">Segments enclosed in curly braces are variables, everything else is a literal.</span></span> <span data-ttu-id="37d6e-118">Sie können eine <xref:System.UriTemplate>-Instanz in einen <xref:System.Uri> konvertieren, indem Sie Variablen durch tatsächliche Werte ersetzen.</span><span class="sxs-lookup"><span data-stu-id="37d6e-118">You can convert a <xref:System.UriTemplate> instance into a <xref:System.Uri> by replacing variables with actual values.</span></span> <span data-ttu-id="37d6e-119">Wenn Sie beispielsweise in die Vorlage "Wetter/{Bundesland}/{Stadt}" Werte für die Variablen "{Bundesland}" und "{Stadt}" eingeben, erhalten Sie "Wetter/BW/Mannheim".</span><span class="sxs-lookup"><span data-stu-id="37d6e-119">For example, taking the template "weather/{state}/{city}" and putting in values for the variables "{state}" and "{city}" gives you "weather/WA/Seattle".</span></span> <span data-ttu-id="37d6e-120">wenn ein möglicher URI gegeben ist, können Sie durch Aufrufen von <xref:System.UriTemplate.Match%28System.Uri%2CSystem.Uri%29> testen, ob er mit einer bestimmten URI-Vorlage übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="37d6e-120">Given a candidate URI, you can test whether it matches a given URI template by calling <xref:System.UriTemplate.Match%28System.Uri%2CSystem.Uri%29>.</span></span> <span data-ttu-id="37d6e-121">Außerdem können Sie mithilfe von <xref:System.UriTemplate>-Instanzen einen <xref:System.Uri> aus einem Satz von Variablenwerten erstellen, indem Sie <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> oder <xref:System.UriTemplate.BindByPosition%28System.Uri%2CSystem.String%5B%5D%29> aufrufen.</span><span class="sxs-lookup"><span data-stu-id="37d6e-121">You can also use <xref:System.UriTemplate> instances to create a <xref:System.Uri> from a set of variable values by calling <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> or <xref:System.UriTemplate.BindByPosition%28System.Uri%2CSystem.String%5B%5D%29>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37d6e-122">Im folgenden Codebeispiel wird veranschaulicht, wie eine <xref:System.UriTemplate>-Instanz erstellt und an einen möglichen URI gebunden und damit abgeglichen wird.</span><span class="sxs-lookup"><span data-stu-id="37d6e-122">The following code demonstrates how to create a <xref:System.UriTemplate> instance, and bind and match it to a candidate URI.</span></span>  
  
 [!code-csharp[UriTemplate#0](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#0)]
 [!code-vb[UriTemplate#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="37d6e-123">Initialisiert eine neue Instanz der <see cref="T:System.UriTemplate" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="37d6e-123">Initializes a new instance of the <see cref="T:System.UriTemplate" /> class</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UriTemplate (string template);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string template) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (template As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplate(System::String ^ template);" />
      <MemberSignature Language="F#" Value="new UriTemplate : string -&gt; UriTemplate" Usage="new System.UriTemplate template" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="template" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="template"><span data-ttu-id="37d6e-124">Die Vorlage.</span><span class="sxs-lookup"><span data-stu-id="37d6e-124">The template.</span></span></param>
        <summary><span data-ttu-id="37d6e-125">Initialisiert eine neue Instanz der <see cref="T:System.UriTemplate" />-Klasse mit der angegebenen Vorlagenzeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="37d6e-125">Initializes a new instance of the <see cref="T:System.UriTemplate" /> class with the specified template string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="37d6e-126">Im folgenden Beispiel wird der Aufruf des Konstruktors veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="37d6e-126">The following example shows how to call the constructor.</span></span>  
  
 [!code-csharp[UriTemplate#1](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#1)]
 [!code-vb[UriTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UriTemplate (string template, bool ignoreTrailingSlash);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string template, bool ignoreTrailingSlash) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (template As String, ignoreTrailingSlash As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplate(System::String ^ template, bool ignoreTrailingSlash);" />
      <MemberSignature Language="F#" Value="new UriTemplate : string * bool -&gt; UriTemplate" Usage="new System.UriTemplate (template, ignoreTrailingSlash)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="template" Type="System.String" />
        <Parameter Name="ignoreTrailingSlash" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="template"><span data-ttu-id="37d6e-127">Die Vorlagenzeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="37d6e-127">The template string.</span></span></param>
        <param name="ignoreTrailingSlash"><span data-ttu-id="37d6e-128">Ein Wert, der angibt, ob nachstehende Schrägstriche „/“ ignoriert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="37d6e-128">A value that specifies whether trailing slash "/" characters should be ignored.</span></span></param>
        <summary><span data-ttu-id="37d6e-129">Initialisiert eine neue Instanz der <see cref="T:System.UriTemplate" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="37d6e-129">Initializes a new instance of the <see cref="T:System.UriTemplate" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37d6e-130">Wenn `ignoreTrailingSlash` auf `true` festgelegt wurde, werden nachstehende Schrägstriche am Ende der Vorlage beim Vergleich mit einem möglichen URI ignoriert.</span><span class="sxs-lookup"><span data-stu-id="37d6e-130">When the `ignoreTrailingSlash` is set to `true`, trailing slashes on the end of template are ignored when matching a candidate URI.</span></span> <span data-ttu-id="37d6e-131">Beispielsweise `http://www.microsoft.com/customer/` würde eine Vorlage wie die folgenden Kandidaten-URIs erfüllen:</span><span class="sxs-lookup"><span data-stu-id="37d6e-131">For example, a template such as `http://www.microsoft.com/customer/` would match the following candidate URIs:</span></span>  
  
- `http://www.microsoft.com/customer/`  
- `http://www.microsoft.com/customer`  
- `http://www.microsoft.com/customer/?wsdl`  
- `http://www.microsoft.com/customer?wsdl`
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UriTemplate (string template, System.Collections.Generic.IDictionary&lt;string,string&gt; additionalDefaults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string template, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; additionalDefaults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (template As String, additionalDefaults As IDictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplate(System::String ^ template, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ additionalDefaults);" />
      <MemberSignature Language="F#" Value="new UriTemplate : string * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; UriTemplate" Usage="new System.UriTemplate (template, additionalDefaults)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="template" Type="System.String" />
        <Parameter Name="additionalDefaults" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="template"><span data-ttu-id="37d6e-132">Die Vorlagenzeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="37d6e-132">The template string.</span></span></param>
        <param name="additionalDefaults"><span data-ttu-id="37d6e-133">Ein Wörterbuch, das eine Liste der Standardwerte für die Vorlagenparameter enthält.</span><span class="sxs-lookup"><span data-stu-id="37d6e-133">A dictionary that contains a list of default values for the template parameters.</span></span></param>
        <summary><span data-ttu-id="37d6e-134">Initialisiert eine neue Instanz der <see cref="T:System.UriTemplate" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="37d6e-134">Initializes a new instance of the <see cref="T:System.UriTemplate" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UriTemplate (string template, bool ignoreTrailingSlash, System.Collections.Generic.IDictionary&lt;string,string&gt; additionalDefaults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string template, bool ignoreTrailingSlash, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; additionalDefaults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.#ctor(System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (template As String, ignoreTrailingSlash As Boolean, additionalDefaults As IDictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplate(System::String ^ template, bool ignoreTrailingSlash, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ additionalDefaults);" />
      <MemberSignature Language="F#" Value="new UriTemplate : string * bool * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; UriTemplate" Usage="new System.UriTemplate (template, ignoreTrailingSlash, additionalDefaults)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="template" Type="System.String" />
        <Parameter Name="ignoreTrailingSlash" Type="System.Boolean" />
        <Parameter Name="additionalDefaults" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="template"><span data-ttu-id="37d6e-135">Die Vorlagenzeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="37d6e-135">The template string.</span></span></param>
        <param name="ignoreTrailingSlash"><span data-ttu-id="37d6e-136"><see langword="true" /> wenn die nachgestellten Schrägstriche (/) ignoriert werden, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="37d6e-136"><see langword="true" /> if the trailing slash "/" characters are ignored; otherwise <see langword="false" />.</span></span></param>
        <param name="additionalDefaults"><span data-ttu-id="37d6e-137">Ein Wörterbuch, das eine Liste der Standardwerte für die Vorlagenparameter enthält.</span><span class="sxs-lookup"><span data-stu-id="37d6e-137">A dictionary that contains a list of default values for the template parameters.</span></span></param>
        <summary><span data-ttu-id="37d6e-138">Initialisiert eine neue Instanz der <see cref="T:System.UriTemplate" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="37d6e-138">Initializes a new instance of the <see cref="T:System.UriTemplate" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BindByName">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="37d6e-139">Erstellt einen neuen URI aus der Vorlage und der Parameterauflistung.</span><span class="sxs-lookup"><span data-stu-id="37d6e-139">Creates a new URI from the template and the collection of parameters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BindByName">
      <MemberSignature Language="C#" Value="public Uri BindByName (Uri baseAddress, System.Collections.Generic.IDictionary&lt;string,string&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri BindByName(class System.Uri baseAddress, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.BindByName(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function BindByName (baseAddress As Uri, parameters As IDictionary(Of String, String)) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ BindByName(Uri ^ baseAddress, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.BindByName : Uri * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; Uri" Usage="uriTemplate.BindByName (baseAddress, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="baseAddress"><span data-ttu-id="37d6e-140">Die Basisadresse.</span><span class="sxs-lookup"><span data-stu-id="37d6e-140">The base address.</span></span></param>
        <param name="parameters"><span data-ttu-id="37d6e-141">Ein Wörterbuch, das eine Parameterauflistung von Name-Wert-Paaren enthält.</span><span class="sxs-lookup"><span data-stu-id="37d6e-141">A dictionary that contains a collection of parameter name/value pairs.</span></span></param>
        <summary><span data-ttu-id="37d6e-142">Erstellt einen neuen URI aus der Vorlage und der Parameterauflistung.</span><span class="sxs-lookup"><span data-stu-id="37d6e-142">Creates a new URI from the template and the collection of parameters.</span></span></summary>
        <returns><span data-ttu-id="37d6e-143">Ein URI.</span><span class="sxs-lookup"><span data-stu-id="37d6e-143">A URI.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37d6e-144">Die [IDictionary\<-Zeichenfolge, der String >](xref:System.Collections.Generic.IDictionary%602) -Parameter enthält eine Auflistung von Name-Wert-Paaren für Parameter.</span><span class="sxs-lookup"><span data-stu-id="37d6e-144">The [IDictionary\<string,string>](xref:System.Collections.Generic.IDictionary%602) parameter contains a collection of parameter name and value pairs.</span></span> <span data-ttu-id="37d6e-145">Die Parameter werden durch einen Vergleich ohne Berücksichtigung der Groß- und Kleinschreibung mit den Variablen in der Vorlage abgeglichen.</span><span class="sxs-lookup"><span data-stu-id="37d6e-145">The parameters are matched up against the variables within the template by a case-insensitive comparison.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="37d6e-146">Die an diese Methode übergebene Name-Wert-Auflistung muss einen Schlüssel für jede Vorlagenvariable enthalten.</span><span class="sxs-lookup"><span data-stu-id="37d6e-146">The name/value collection passed to this method must contain a key for every template variable.</span></span> <span data-ttu-id="37d6e-147">Zusätzliche Name-Wert-Paare, die nicht mit Vorlagenvariablen übereinstimmen, werden an die Abfragezeichenfolge des endgültigen URI angefügt.</span><span class="sxs-lookup"><span data-stu-id="37d6e-147">Extra name/value pairs that do not match template variables are appended to the query string of the final URI.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="37d6e-148">Es ist möglich, Text innerhalb der Name-Wert-Paare zu übergeben, durch den verhindert wird, dass der generierte URI mit der Vorlage übereinstimmt, mit der er generiert wird.</span><span class="sxs-lookup"><span data-stu-id="37d6e-148">It is possible to pass in text within the name/value pairs that prevent the generated URI from matching the template that is used to generate it.</span></span> <span data-ttu-id="37d6e-149">Beispiele hierfür sind "/", "..", "\*", "{"' und "}".</span><span class="sxs-lookup"><span data-stu-id="37d6e-149">Examples of such text includes: '/', '..', '\*', '{', and '}'.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindByName">
      <MemberSignature Language="C#" Value="public Uri BindByName (Uri baseAddress, System.Collections.Specialized.NameValueCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri BindByName(class System.Uri baseAddress, class System.Collections.Specialized.NameValueCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.BindByName(System.Uri,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function BindByName (baseAddress As Uri, parameters As NameValueCollection) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ BindByName(Uri ^ baseAddress, System::Collections::Specialized::NameValueCollection ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.BindByName : Uri * System.Collections.Specialized.NameValueCollection -&gt; Uri" Usage="uriTemplate.BindByName (baseAddress, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
        <Parameter Name="parameters" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="baseAddress"><span data-ttu-id="37d6e-150">Die Basisadresse.</span><span class="sxs-lookup"><span data-stu-id="37d6e-150">The base address.</span></span></param>
        <param name="parameters"><span data-ttu-id="37d6e-151">Die Parameterwerte.</span><span class="sxs-lookup"><span data-stu-id="37d6e-151">The parameter values.</span></span></param>
        <summary><span data-ttu-id="37d6e-152">Erstellt einen neuen URI aus der Vorlage und der Parameterauflistung.</span><span class="sxs-lookup"><span data-stu-id="37d6e-152">Creates a new URI from the template and the collection of parameters.</span></span></summary>
        <returns><span data-ttu-id="37d6e-153">Eine neue -Instanz.</span><span class="sxs-lookup"><span data-stu-id="37d6e-153">A new instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37d6e-154">Der <xref:System.Collections.Specialized.NameValueCollection>-Parameter enthält eine Parameterauflistung von Name/Wert-Paaren.</span><span class="sxs-lookup"><span data-stu-id="37d6e-154">The <xref:System.Collections.Specialized.NameValueCollection> parameter contains a collection of parameter name/value pairs.</span></span> <span data-ttu-id="37d6e-155">Die Parameter werden durch einen Vergleich ohne Berücksichtigung der Groß- und Kleinschreibung mit den Variablen in der Vorlage abgeglichen.</span><span class="sxs-lookup"><span data-stu-id="37d6e-155">The parameters are matched up against the variables within the template by a case-insensitive comparison.</span></span> <span data-ttu-id="37d6e-156">In dieser Auflistung übergebene Werte werden mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="37d6e-156">Values passed in this collection are escaped.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="37d6e-157">Die an <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> übergebene Name-Wert-Auflistung muss einen Schlüssel für jede Vorlagenvariable enthalten.</span><span class="sxs-lookup"><span data-stu-id="37d6e-157">The name/value collection passed to <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> must contain a key for every template variable.</span></span> <span data-ttu-id="37d6e-158">Zusätzliche Name-Wert-Paare, die nicht mit Vorlagenvariablen übereinstimmen, werden an die Abfragezeichenfolge des endgültigen URI angefügt.</span><span class="sxs-lookup"><span data-stu-id="37d6e-158">Extra name/value pairs that do not match template variables are appended to the query string of the final URI.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="37d6e-159">Es ist möglich, Text innerhalb der Name-Wert-Paare zu übergeben, durch den verhindert wird, dass der generierte URI mit der Vorlage übereinstimmt, mit der er generiert wird.</span><span class="sxs-lookup"><span data-stu-id="37d6e-159">It is possible to pass in text within the name/value pairs that prevent the generated URI from matching the template that is used to generate it.</span></span> <span data-ttu-id="37d6e-160">Beispiele hierfür sind "/", "..", "\*", "{"' und "}".</span><span class="sxs-lookup"><span data-stu-id="37d6e-160">Examples of such text includes: '/', '..', '\*', '{', and '}'.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37d6e-161">Im folgenden Beispiel wird der Aufruf der <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29>-Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="37d6e-161">The following example shows how to call the <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> method.</span></span>  
  
 [!code-csharp[UriTemplate#4](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#4)]
 [!code-vb[UriTemplate#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindByName">
      <MemberSignature Language="C#" Value="public Uri BindByName (Uri baseAddress, System.Collections.Generic.IDictionary&lt;string,string&gt; parameters, bool omitDefaults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri BindByName(class System.Uri baseAddress, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; parameters, bool omitDefaults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.BindByName(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function BindByName (baseAddress As Uri, parameters As IDictionary(Of String, String), omitDefaults As Boolean) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ BindByName(Uri ^ baseAddress, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ parameters, bool omitDefaults);" />
      <MemberSignature Language="F#" Value="member this.BindByName : Uri * System.Collections.Generic.IDictionary&lt;string, string&gt; * bool -&gt; Uri" Usage="uriTemplate.BindByName (baseAddress, parameters, omitDefaults)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="omitDefaults" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="baseAddress"><span data-ttu-id="37d6e-162">Ein URI, der die Basisadresse enthält.</span><span class="sxs-lookup"><span data-stu-id="37d6e-162">A URI that contains the base address.</span></span></param>
        <param name="parameters"><span data-ttu-id="37d6e-163">Ein Wörterbuch, das eine Parameterauflistung von Name-Wert-Paaren enthält.</span><span class="sxs-lookup"><span data-stu-id="37d6e-163">A dictionary that contains a collection of parameter name/value pairs.</span></span></param>
        <param name="omitDefaults"><span data-ttu-id="37d6e-164"><see langword="true" />, wenn die Standardwerte ignoriert werden, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="37d6e-164"><see langword="true" /> is the default values are ignored; otherwise <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="37d6e-165">Erstellt einen neuen URI aus der Vorlage und der Parameterauflistung.</span><span class="sxs-lookup"><span data-stu-id="37d6e-165">Creates a new URI from the template and the collection of parameters.</span></span></summary>
        <returns><span data-ttu-id="37d6e-166">Ein URI.</span><span class="sxs-lookup"><span data-stu-id="37d6e-166">A URI.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindByName">
      <MemberSignature Language="C#" Value="public Uri BindByName (Uri baseAddress, System.Collections.Specialized.NameValueCollection parameters, bool omitDefaults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri BindByName(class System.Uri baseAddress, class System.Collections.Specialized.NameValueCollection parameters, bool omitDefaults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.BindByName(System.Uri,System.Collections.Specialized.NameValueCollection,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function BindByName (baseAddress As Uri, parameters As NameValueCollection, omitDefaults As Boolean) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ BindByName(Uri ^ baseAddress, System::Collections::Specialized::NameValueCollection ^ parameters, bool omitDefaults);" />
      <MemberSignature Language="F#" Value="member this.BindByName : Uri * System.Collections.Specialized.NameValueCollection * bool -&gt; Uri" Usage="uriTemplate.BindByName (baseAddress, parameters, omitDefaults)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
        <Parameter Name="parameters" Type="System.Collections.Specialized.NameValueCollection" />
        <Parameter Name="omitDefaults" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="baseAddress"><span data-ttu-id="37d6e-167">Die Basisadresse.</span><span class="sxs-lookup"><span data-stu-id="37d6e-167">The base address.</span></span></param>
        <param name="parameters"><span data-ttu-id="37d6e-168">Eine Paramterauflistung mit Name-Wert-Paaren.</span><span class="sxs-lookup"><span data-stu-id="37d6e-168">A collection of parameter name/value pairs.</span></span></param>
        <param name="omitDefaults"><span data-ttu-id="37d6e-169"><see langword="true" />, wenn die Standardwerte ignoriert werden, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="37d6e-169"><see langword="true" /> if the default values are ignored; otherwise <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="37d6e-170">Erstellt einen neuen URI aus der Vorlage und der Parameterauflistung.</span><span class="sxs-lookup"><span data-stu-id="37d6e-170">Creates a new URI from the template and the collection of parameters.</span></span></summary>
        <returns><span data-ttu-id="37d6e-171">Ein URI.</span><span class="sxs-lookup"><span data-stu-id="37d6e-171">A URI.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindByPosition">
      <MemberSignature Language="C#" Value="public Uri BindByPosition (Uri baseAddress, params string[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri BindByPosition(class System.Uri baseAddress, string[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.BindByPosition(System.Uri,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BindByPosition (baseAddress As Uri, ParamArray values As String()) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ BindByPosition(Uri ^ baseAddress, ... cli::array &lt;System::String ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="member this.BindByPosition : Uri * string[] -&gt; Uri" Usage="uriTemplate.BindByPosition (baseAddress, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
        <Parameter Name="values" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="baseAddress"><span data-ttu-id="37d6e-172">Ein <see cref="T:System.Uri" />, der die Basisadresse enthält.</span><span class="sxs-lookup"><span data-stu-id="37d6e-172">A <see cref="T:System.Uri" /> that contains the base address.</span></span></param>
        <param name="values"><span data-ttu-id="37d6e-173">Die Parameterwerte.</span><span class="sxs-lookup"><span data-stu-id="37d6e-173">The parameter values.</span></span></param>
        <summary><span data-ttu-id="37d6e-174">Erstellt einen neuen URI aus der Vorlage und einem Array von Parameterwerten.</span><span class="sxs-lookup"><span data-stu-id="37d6e-174">Creates a new URI from the template and an array of parameter values.</span></span></summary>
        <returns><span data-ttu-id="37d6e-175">Eine neue <see cref="T:System.Uri" />-Instanz.</span><span class="sxs-lookup"><span data-stu-id="37d6e-175">A new <see cref="T:System.Uri" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37d6e-176">Die Parameterwerte werden von links nach rechts gebunden.</span><span class="sxs-lookup"><span data-stu-id="37d6e-176">The parameter values are bound by position left to right.</span></span> <span data-ttu-id="37d6e-177">Der erste Parameterwert ersetzt die erste Variable in der Vorlage, der zweite Parameterwert ersetzt die zweite Variable usw.</span><span class="sxs-lookup"><span data-stu-id="37d6e-177">The first parameter value replaces the first variable found in the template, the second parameter value replaces the second variable, and so on.</span></span> <span data-ttu-id="37d6e-178">An diese Methode übergebene Variablen werden mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="37d6e-178">Variables passed to this method are escaped.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="37d6e-179">Die Anzahl der im Werteparameter übergebenen Parameter muss mit der Anzahl der Variablen in der Vorlage übereinstimmen.</span><span class="sxs-lookup"><span data-stu-id="37d6e-179">The number of parameters passed in the values parameter must match the number of variables in the template.</span></span> <span data-ttu-id="37d6e-180">Andernfalls wird eine <xref:System.FormatException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="37d6e-180">If not, a <xref:System.FormatException> is thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="37d6e-181">Es ist möglich, Text innerhalb des Arrays von Parameterwerten zu übergeben, durch den verhindert wird, dass der generierte URI mit der Vorlage übereinstimmt, mit der er generiert wird.</span><span class="sxs-lookup"><span data-stu-id="37d6e-181">It is possible to pass in text within the parameter values array that prevents the generated URI from matching the template that is used to generate it.</span></span> <span data-ttu-id="37d6e-182">Beispiele hierfür sind "/", ".", "..", "\*", "{"' und "}".</span><span class="sxs-lookup"><span data-stu-id="37d6e-182">Examples of such text includes: '/', '.','..', '\*', '{', and '}'.</span></span> <span data-ttu-id="37d6e-183">Im folgenden Code wird dies veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="37d6e-183">The following code demonstrates this.</span></span>  
  
 `UriTemplate template = new UriTemplate("far/{bat}/baz");`  
  
 `Uri uri = new Uri("http://localhost/Base");`  
  
 `Uri result = template.BindByPosition(uri, ".");   // returns Base/form/baz`  
  
 `Uri result = template.BindByPosition(uri, "..");  // returns Base/baz`  
  
 `Uri result = template.BindByPosition(uri, "x/y");  // returns Base/form/x/y/baz`  
  
 `Uri result = template.BindByPosition(uri, "{x}");  // returns Base/form/{x}/baz`  
  
 `Uri result = template.BindByPosition(uri, "*");  // returns Base/form/*/baz`  
  
   
  
## Examples  
 <span data-ttu-id="37d6e-184">Im folgenden Beispiel wird veranschaulicht, wie <xref:System.UriTemplate.BindByPosition%28System.Uri%2CSystem.String%5B%5D%29> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="37d6e-184">The following example shows how to call the <xref:System.UriTemplate.BindByPosition%28System.Uri%2CSystem.String%5B%5D%29>.</span></span>  
  
 [!code-csharp[UriTemplate#5](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#5)]
 [!code-vb[UriTemplate#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Defaults">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; Defaults { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; Defaults" />
      <MemberSignature Language="DocId" Value="P:System.UriTemplate.Defaults" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Defaults As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ Defaults { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Defaults : System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="System.UriTemplate.Defaults" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="37d6e-185">Ruft eine Auflistung von Name/Wert-Paaren für sämtliche Standardparameterwerte ab.</span><span class="sxs-lookup"><span data-stu-id="37d6e-185">Gets a collection of name/value pairs for any default parameter values.</span></span></summary>
        <value><span data-ttu-id="37d6e-186">Ein generisches Wörterbuch.</span><span class="sxs-lookup"><span data-stu-id="37d6e-186">A generic dictionary.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreTrailingSlash">
      <MemberSignature Language="C#" Value="public bool IgnoreTrailingSlash { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreTrailingSlash" />
      <MemberSignature Language="DocId" Value="P:System.UriTemplate.IgnoreTrailingSlash" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IgnoreTrailingSlash As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreTrailingSlash { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreTrailingSlash : bool" Usage="System.UriTemplate.IgnoreTrailingSlash" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="37d6e-187">Gibt an, ob nachstehende Schrägstriche „/“ in der Vorlage beim Vergleich mit möglichen URIs ignoriert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="37d6e-187">Specifies whether trailing slashes "/" in the template should be ignored when matching candidate URIs.</span></span></summary>
        <value><span data-ttu-id="37d6e-188"><see langword="true" />, wenn nachfolgende Schrägstriche "/" ignoriert werden sollen <see langword="false" />, andernfalls.</span><span class="sxs-lookup"><span data-stu-id="37d6e-188"><see langword="true" /> if trailing slashes "/" should be ignored, otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEquivalentTo">
      <MemberSignature Language="C#" Value="public bool IsEquivalentTo (UriTemplate other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEquivalentTo(class System.UriTemplate other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.IsEquivalentTo(System.UriTemplate)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEquivalentTo (other As UriTemplate) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEquivalentTo(UriTemplate ^ other);" />
      <MemberSignature Language="F#" Value="member this.IsEquivalentTo : UriTemplate -&gt; bool" Usage="uriTemplate.IsEquivalentTo other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.UriTemplate" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="37d6e-189">Der zu vergleichende <see cref="T:System.UriTemplate" />.</span><span class="sxs-lookup"><span data-stu-id="37d6e-189">The <see cref="T:System.UriTemplate" /> to compare.</span></span></param>
        <summary><span data-ttu-id="37d6e-190">Gibt an, ob eine <see cref="T:System.UriTemplate" /> strukturell äquivalent zu einer anderen ist.</span><span class="sxs-lookup"><span data-stu-id="37d6e-190">Indicates whether a <see cref="T:System.UriTemplate" /> is structurally equivalent to another.</span></span></summary>
        <returns><span data-ttu-id="37d6e-191"><see langword="true" />, wenn die <see cref="T:System.UriTemplate" /> strukturell einer anderen entspricht, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="37d6e-191"><see langword="true" /> if the <see cref="T:System.UriTemplate" /> is structurally equivalent to another; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37d6e-192">Zwei <xref:System.UriTemplate>-Instanzen sind äquivalent, wenn ihre Literalzeichenfolgen identisch sind und die Variablen in den gleichen Segmenten angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="37d6e-192">Two <xref:System.UriTemplate> instances are equivalent if their literal strings are identical and the variables appear in the same segments.</span></span> <span data-ttu-id="37d6e-193">Beispielsweise sind "Wetter/{Bundesland}/{Stadt}" und "Wetter/{Land}/{Ort}" äquivalent.</span><span class="sxs-lookup"><span data-stu-id="37d6e-193">For example "weather/{state}/{city}" is equivalent to "weather/{country}/{village}".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37d6e-194">Im folgenden Beispiel wird veranschaulicht, wie <xref:System.UriTemplate.IsEquivalentTo%28System.UriTemplate%29> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="37d6e-194">The following example shows how to call the <xref:System.UriTemplate.IsEquivalentTo%28System.UriTemplate%29>.</span></span>  
  
 [!code-csharp[UriTemplate#6](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#6)]
 [!code-vb[UriTemplate#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public UriTemplateMatch Match (Uri baseAddress, Uri candidate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.UriTemplateMatch Match(class System.Uri baseAddress, class System.Uri candidate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.Match(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function Match (baseAddress As Uri, candidate As Uri) As UriTemplateMatch" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplateMatch ^ Match(Uri ^ baseAddress, Uri ^ candidate);" />
      <MemberSignature Language="F#" Value="member this.Match : Uri * Uri -&gt; UriTemplateMatch" Usage="uriTemplate.Match (baseAddress, candidate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UriTemplateMatch</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
        <Parameter Name="candidate" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="baseAddress"><span data-ttu-id="37d6e-195">Die Basisadresse.</span><span class="sxs-lookup"><span data-stu-id="37d6e-195">The base address.</span></span></param>
        <param name="candidate"><span data-ttu-id="37d6e-196">Der <see cref="T:System.Uri" />, der mit der Vorlage abgeglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="37d6e-196">The <see cref="T:System.Uri" /> to match against the template.</span></span></param>
        <summary><span data-ttu-id="37d6e-197">Versucht, einen <see cref="T:System.Uri" /> mit einer <see cref="T:System.UriTemplate" /> abzugleichen.</span><span class="sxs-lookup"><span data-stu-id="37d6e-197">Attempts to match a <see cref="T:System.Uri" /> to a <see cref="T:System.UriTemplate" />.</span></span></summary>
        <returns><span data-ttu-id="37d6e-198">Eine Instanz.</span><span class="sxs-lookup"><span data-stu-id="37d6e-198">An instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37d6e-199">Wenn der Abgleich erfolgreich ist, wird <xref:System.UriTemplateMatch> mit den URI-Segmenten, Variablenwerten, Abfragezeichenfolgenwerten und Platzhaltersegmenten aus dem möglichen URI gefüllt.</span><span class="sxs-lookup"><span data-stu-id="37d6e-199">If the match is successful the <xref:System.UriTemplateMatch> is populated with the URI segments, variable values, query string values, and wildcard segments from the candidate URI.</span></span> <span data-ttu-id="37d6e-200">Wenn der Abgleich nicht erfolgreich ist, wird `null` zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="37d6e-200">If the match is unsuccessful, `null` is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37d6e-201">Im folgenden Beispiel wird der Aufruf der <xref:System.UriTemplate.Match%28System.Uri%2CSystem.Uri%29>-Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="37d6e-201">The following example shows how to call the <xref:System.UriTemplate.Match%28System.Uri%2CSystem.Uri%29> method.</span></span>  
  
 [!code-csharp[UriTemplate#7](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#7)]
 [!code-vb[UriTemplate#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PathSegmentVariableNames">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; PathSegmentVariableNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; PathSegmentVariableNames" />
      <MemberSignature Language="DocId" Value="P:System.UriTemplate.PathSegmentVariableNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathSegmentVariableNames As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ PathSegmentVariableNames { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathSegmentVariableNames : System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="System.UriTemplate.PathSegmentVariableNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="37d6e-202">Ruft eine Auflistung der Variablennamen ab, die innerhalb der Pfadsegmente in der Vorlage verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="37d6e-202">Gets a collection of variable names used within path segments in the template.</span></span></summary>
        <value><span data-ttu-id="37d6e-203">Eine Auflistung der Variablennamen, die innerhalb der Pfadsegmente in der Vorlage verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="37d6e-203">A collection of variable names that appear within the template's path segment.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37d6e-204">Die Auflistung schließt die Namen von Variablen aus, die im Abfrageteil der Vorlage angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="37d6e-204">The collection excludes the names of variables that appear in the query portion of the template.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37d6e-205">Im folgenden Beispiel wird der Zugriff auf die <xref:System.UriTemplate.PathSegmentVariableNames%2A>-Eigenschaft veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="37d6e-205">The following example shows how to access the <xref:System.UriTemplate.PathSegmentVariableNames%2A> property.</span></span>  
  
 [!code-csharp[UriTemplate#2](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#2)]
 [!code-vb[UriTemplate#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryValueVariableNames">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; QueryValueVariableNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; QueryValueVariableNames" />
      <MemberSignature Language="DocId" Value="P:System.UriTemplate.QueryValueVariableNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueryValueVariableNames As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ QueryValueVariableNames { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.QueryValueVariableNames : System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="System.UriTemplate.QueryValueVariableNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="37d6e-206">Ruft eine Auflistung der Variablennamen ab, die innerhalb der Abfragezeichenfolge in der Vorlage verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="37d6e-206">Gets a collection of variable names used within the query string in the template.</span></span></summary>
        <value><span data-ttu-id="37d6e-207">Eine Auflistung der Variablennamen, die im Abfrageteil der Vorlagenzeichenfolge angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="37d6e-207">A collection of template variable names that appear in the query portion of the template string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37d6e-208">Diese Auflistung schließt Variablennamen aus, die im Pfadteil der Vorlagenzeichenfolge angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="37d6e-208">This collection excludes variable names that appear in the path section of the template string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37d6e-209">Im folgenden Beispiel wird der Zugriff auf die <xref:System.UriTemplate.QueryValueVariableNames%2A>-Eigenschaft veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="37d6e-209">The following example shows how to access the <xref:System.UriTemplate.QueryValueVariableNames%2A> property.</span></span>  
  
 [!code-csharp[UriTemplate#3](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#3)]
 [!code-vb[UriTemplate#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="uriTemplate.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37d6e-210">Gibt eine Zeichenfolgendarstellung der <see cref="T:System.UriTemplate" />-Instanz zurück.</span><span class="sxs-lookup"><span data-stu-id="37d6e-210">Returns a string representation of the <see cref="T:System.UriTemplate" /> instance.</span></span></summary>
        <returns><span data-ttu-id="37d6e-211">Die Darstellung der <see cref="T:System.UriTemplate" />-Instanz.</span><span class="sxs-lookup"><span data-stu-id="37d6e-211">The representation of the <see cref="T:System.UriTemplate" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="37d6e-212">Im folgenden Beispiel wird der Aufruf der <xref:System.UriTemplate.ToString>-Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="37d6e-212">The following example shows how to call the <xref:System.UriTemplate.ToString> method.</span></span>  
  
 [!code-csharp[UriTemplate#8](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#8)]
 [!code-vb[UriTemplate#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
