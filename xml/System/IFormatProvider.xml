<Type Name="IFormatProvider" FullName="System.IFormatProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f1ac858f182c688dc6b055b86aaa145795b91794" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75041360" /></Metadata><TypeSignature Language="C#" Value="public interface IFormatProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFormatProvider" />
  <TypeSignature Language="DocId" Value="T:System.IFormatProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IFormatProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IFormatProvider" />
  <TypeSignature Language="F#" Value="type IFormatProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt einen Mechanismus zum Abrufen eines Objekts für die Formatierungssteuerung bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.IFormatProvider>-Schnittstelle stellt ein Objekt bereit, das Formatierungsinformationen für Formatierungs-und Verarbeitungsvorgänge bereitstellt. Bei Formatierungs Vorgängen wird der Wert eines Typs in die Zeichen folgen Darstellung dieses Werts konvertiert. Typische Formatierungs Methoden sind die `ToString` Methoden eines Typs sowie <xref:System.String.Format%2A>. Beim Durcharbeiten von Vorgängen wird die Zeichen folgen Darstellung eines Werts in einen Typ mit diesem Wert konvertiert. Typische Methoden für die Methode sind `Parse` und `TryParse`.  
  
 Die <xref:System.IFormatProvider>-Schnittstelle besteht aus einer einzelnen Methode, <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>. <xref:System.IFormatProvider.GetFormat%2A> ist eine Rückruf Methode: die Methode zum übermitteln oder formatieren ruft Sie auf und übergibt ihr ein <xref:System.Type> Objekt, das den Objekttyp darstellt, der von der Formatierungs-oder der-Methode erwartet wird. Die <xref:System.IFormatProvider.GetFormat%2A>-Methode ist für die Rückgabe eines Objekts dieses Typs verantwortlich.  
  
 <xref:System.IFormatProvider>-Implementierungen werden oft implizit durch Formatierungs-und Methoden Methoden verwendet. Beispielsweise verwendet die <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType>-Methode implizit eine <xref:System.IFormatProvider>-Implementierung, die die aktuelle Kultur des Systems darstellt. <xref:System.IFormatProvider> Implementierungen können auch explizit durch Methoden angegeben werden, die über einen Parameter vom Typ "<xref:System.IFormatProvider>" verfügen, z. b. <xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> und <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.  
  
 Die .NET Framework umfasst die folgenden drei vordefinierten <xref:System.IFormatProvider> Implementierungen, um kulturspezifische Informationen bereitzustellen, die beim Formatieren oder Auswerten von numerischen Werten und Datums-und Uhrzeitwerten verwendet werden:  
  
-   Die <xref:System.Globalization.NumberFormatInfo>-Klasse, die Informationen bereitstellt, die zum Formatieren von Zahlen verwendet werden, wie z. b. die Währungssymbole, Tausender Trennzeichen und Dezimaltrennzeichen für eine bestimmte Kultur. Informationen zu den vordefinierten, von einem <xref:System.Globalization.NumberFormatInfo> Objekt erkannten und in numerischen Formatierungs Vorgängen verwendeten Format Zeichenfolgen finden Sie unter [Standard mäßige Zahlenformat](~/docs/standard/base-types/standard-numeric-format-strings.md) Zeichenfolgen und [benutzerdefinierte Zahlenformat](~/docs/standard/base-types/custom-numeric-format-strings.md)Zeichenfolgen  
  
-   Die <xref:System.Globalization.DateTimeFormatInfo>-Klasse, die Informationen bereitstellt, die zum Formatieren von Datums-und Uhrzeitangaben verwendet werden, z. b. die Datums-und Uhrzeit Trennzeichen für eine bestimmte Kultur oder die Reihenfolge und das Format der Komponenten Jahr, Monat und Tag eines Datums. Informationen zu den vordefinierten, von einem <xref:System.Globalization.DateTimeFormatInfo> Objekt erkannten und in numerischen Formatierungs Vorgängen verwendeten Format Zeichenfolgen finden Sie unter Standard Format Zeichenfolgen für [Datum und Uhrzeit](~/docs/standard/base-types/standard-date-and-time-format-strings.md) und benutzerdefinierte Format Zeichenfolgen für [Datum und Uhrzeit](~/docs/standard/base-types/custom-date-and-time-format-strings.md)  
  
-   Die <xref:System.Globalization.CultureInfo>-Klasse, die eine bestimmte Kultur darstellt. Die <xref:System.IFormatProvider.GetFormat%2A>-Methode gibt ein kulturspezifisches <xref:System.Globalization.NumberFormatInfo> oder <xref:System.Globalization.DateTimeFormatInfo> Objekt zurück, abhängig davon, ob das <xref:System.Globalization.CultureInfo> Objekt in einem Formatierungs-oder einem Verarbeitungsvorgang verwendet wird, das Zahlen oder Datumsangaben und Uhrzeiten umfasst.  
  
 Der .NET Framework unterstützt auch die benutzerdefinierte Formatierung. Dies umfasst in der Regel die Erstellung einer Formatierungs Klasse, die sowohl <xref:System.IFormatProvider> als auch <xref:System.ICustomFormatter>implementiert. Eine Instanz dieser Klasse wird dann als Parameter an eine Methode übergeben, die einen benutzerdefinierten Formatierungs Vorgang ausführt, z. b. <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> das Beispiel eine Darstellung einer solchen benutzerdefinierten Implementierung bereitstellt, die eine Zahl als 12-stellige Kontonummer formatiert.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie eine <xref:System.IFormatProvider>-Implementierung die Darstellung eines Datums-und Uhrzeitwerts ändern kann. In diesem Fall wird ein einzelnes Datum mit <xref:System.Globalization.CultureInfo> Objekten angezeigt, die vier verschiedene Kulturen darstellen.  
  
 [!code-csharp[System.IFormatProvider.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IFormatProvider.Class/cs/provider2.cs#3)]
 [!code-vb[System.IFormatProvider.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IFormatProvider.Class/vb/provider2.vb#3)]  
  
 Das folgende Beispiel veranschaulicht die Verwendung einer-Klasse, die die <xref:System.IFormatProvider>-Schnittstelle und die <xref:System.IFormatProvider.GetFormat%2A>-Methode implementiert. Die `AcctNumberFormat`-Klasse konvertiert einen <xref:System.Int64> Wert, der eine Kontonummer darstellt, in eine formatierte 12-stellige Kontonummer. Die `GetFormat`-Methode gibt einen Verweis auf die aktuelle `AcctNumberFormat` Instanz zurück, wenn der `formatType`-Parameter auf eine Klasse verweist, die <xref:System.ICustomFormatter>implementiert. Andernfalls gibt `GetFormat` `null`zurück.  
  
 [!code-csharp[System.IFormatProvider.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IFormatProvider.Class/cs/Provider.cs#2)]
 [!code-vb[System.IFormatProvider.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IFormatProvider.Class/vb/Provider.vb#2)]  
  
 Die Klasse, die <xref:System.IFormatProvider> implementiert, kann dann in einem Vorgang für einen Formatierungs-und einen Verarbeitungsvorgang verwendet werden. Der folgende Code ruft z. b. die <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>-Methode auf, um eine Zeichenfolge zu generieren, die eine formatierte 12-stellige Kontonummer enthält.  
  
 [!code-csharp[System.IFormatProvider.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IFormatProvider.Class/cs/Provider.cs#1)]
 [!code-vb[System.IFormatProvider.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IFormatProvider.Class/vb/Provider.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ICustomFormatter" />
    <altmember cref="T:System.IFormattable" />
    <related type="Article" href="~/docs/standard/base-types/formatting-types.md">Formatieren von Typen in .NET</related>
    <related type="Article" href="~/docs/standard/base-types/how-to-define-and-use-custom-numeric-format-providers.md">Gewusst wie: Definieren und Verwenden von benutzerdefinierten numerischen Formatanbietern</related>
  </Docs>
  <Members>
    <Member MemberName="GetFormat">
      <MemberSignature Language="C#" Value="public object GetFormat (Type formatType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFormat(class System.Type formatType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IFormatProvider.GetFormat(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormat (formatType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFormat(Type ^ formatType);" />
      <MemberSignature Language="F#" Value="abstract member GetFormat : Type -&gt; obj" Usage="iFormatProvider.GetFormat formatType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="formatType">Ein Objekt, das den Typ des zurückzugebenden Formatierungsobjekts angibt.</param>
        <summary>Gibt ein Objekt zurück, das Formatierungsdienste für den angegebenen Typ bereitstellt.</summary>
        <returns>Eine Instanz des von <paramref name="formatType" /> angegebenen Objekts, wenn die <see cref="T:System.IFormatProvider" />-Implementierung den betreffenden Typ von Objekt angeben kann, andernfalls <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IFormatProvider.GetFormat%2A> ist eine Rückruf Methode, die von Formatierungs-und Methoden Methoden aufgerufen wird, um Informationen über das Format der Eingabe Zeichenfolge in den-Diagnose Vorgängen oder das Format der Ausgabe Zeichenfolge in Formatierungs Vorgängen abzurufen. Im `formatType`-Parameter übergibt die Formatierungs-oder die Methoden Methode den Objekttyp, der zum Ausführen des Vorgangs erforderlich ist. Wenn die <xref:System.IFormatProvider>-Implementierung dieses Formatierungs-oder Analyse-Objekt bereitstellen kann, wird dieses Objekt zurückgegeben. Wenn dies nicht der Fall ist, wird `null`zurückgegeben.  
  
 Beispielsweise ist das Methoden Argument beim Abrufen der <xref:System.Int32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>-Methode ein <xref:System.IFormatProvider> Objekt, das Informationen darüber bereitstellt, wie die Zeichen folgen Darstellung der aktuellen ganzzahligen Instanz formatiert werden kann. Wenn die Laufzeit die-Methode ausführt, ruft Sie die <xref:System.IFormatProvider.GetFormat%2A>-Methode des <xref:System.IFormatProvider> Objekts auf und übergibt ihr ein <xref:System.Type>-Objekt, das den <xref:System.Globalization.NumberFormatInfo> Typ darstellt. Wenn das <xref:System.IFormatProvider> Objekt ein <xref:System.Globalization.NumberFormatInfo> Objekt bereitstellen kann, wird dieses Objekt zurückgegeben. Wenn kein Objekt dieses Typs bereitgestellt werden kann, wird `null`zurückgegeben.  
  
 Sie können die <xref:System.IFormatProvider>-Schnittstelle und die <xref:System.IFormatProvider.GetFormat%2A>-Methode in Klassen implementieren, die benutzerdefinierte Formatierungs-oder Diagnosedienste bereitstellen. Die <xref:System.IFormatProvider>-Implementierung wird dann als Argument an jede Überladung einer Analyse-oder Formatierungs Methode übergeben, die über einen Parameter vom Typ <xref:System.IFormatProvider>verfügt, z. b. <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>, <xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>oder <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Das folgende Beispiel veranschaulicht die Verwendung einer-Klasse, die die <xref:System.IFormatProvider>-Schnittstelle und die <xref:System.IFormatProvider.GetFormat%2A>-Methode implementiert. Die `AcctNumberFormat`-Klasse konvertiert einen <xref:System.Int64> Wert, der eine Kontonummer darstellt, in eine formatierte 12-stellige Kontonummer. Die `GetFormat`-Methode gibt einen Verweis auf sich selbst zurück, wenn der `formatType`-Parameter auf eine Klasse verweist, die <xref:System.ICustomFormatter>implementiert. Andernfalls gibt `GetFormat` `null`zurück.  
  
 [!code-csharp[System.IFormatProvider.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IFormatProvider.Class/cs/Provider.cs#2)]
 [!code-vb[System.IFormatProvider.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IFormatProvider.Class/vb/Provider.vb#2)]  
  
 Eine Instanz der `AcctNumberFormat`-Klasse kann dann als Argument an eine Methode weitergegeben werden, die Formatierungs-oder Analyse-Dienste bereitstellt. Der folgende Code übergibt z. b. eine `AcctNumberFormat`-Klasse an die <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>-Methode, um eine formatierte 12-stellige Kontonummer zu generieren.  
  
 [!code-csharp[System.IFormatProvider.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IFormatProvider.Class/cs/Provider.cs#1)]
 [!code-vb[System.IFormatProvider.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IFormatProvider.Class/vb/Provider.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
