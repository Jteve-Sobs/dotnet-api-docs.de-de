<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IntPtr.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9575d09f-9d72-4690-889e-b83c405ca4568787c0ab91f95a1401dffa1f6a1997b0e747eff3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8787c0ab91f95a1401dffa1f6a1997b0e747eff3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">254e16ae65e82f4aa59360cd8572b36b6b5b2f80</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/05/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IntPtr">
          <source>A platform-specific type that is used to represent a pointer or a handle.</source>
          <target state="translated">Ein plattformabhängiger Typ zur Darstellung von Zeigern und Handles.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IntPtr">
          <source>The <ph id="ph1">&lt;xref:System.IntPtr&gt;</ph> type is designed to be an integer whose size is platform-specific.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IntPtr&gt;</ph> ist eine ganze Zahl sein, dessen Größe plattformspezifisch ist, ausgelegt.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IntPtr">
          <source>That is, an instance of this type is expected to be 32-bits on 32-bit hardware and operating systems, and 64-bits on 64-bit hardware and operating systems.</source>
          <target state="translated">D. h. muss eine Instanz dieses Typs werden 32-Bit unter 32-Bit-Hardware und Betriebssystemen und 64-Bit unter 64-Bit-Hardware und Betriebssystemen.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IntPtr">
          <source>The <ph id="ph1">&lt;xref:System.IntPtr&gt;</ph> type can be used by languages that support pointers, and as a common means of referring to data between languages that do and do not support pointers.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IntPtr&gt;</ph> -Typ kann von Sprachen, die Zeiger unterstützen, und als allgemeine Mittel zum Verweisen auf Daten zwischen Sprachen, die und unterstützen keine Zeiger verwendet werden.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IntPtr">
          <source><ph id="ph1">&lt;xref:System.IntPtr&gt;</ph> objects can also be used to hold handles.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IntPtr&gt;</ph> Objekte können auch verwendet werden, um Handles zu speichern.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IntPtr">
          <source>For example, instances of <ph id="ph1">&lt;xref:System.IntPtr&gt;</ph> are used extensively in the <ph id="ph2">&lt;xref:System.IO.FileStream?displayProperty=nameWithType&gt;</ph> class to hold file handles.</source>
          <target state="translated">Z. B. Instanzen von <ph id="ph1">&lt;xref:System.IntPtr&gt;</ph> umfassenden dienen der <ph id="ph2">&lt;xref:System.IO.FileStream?displayProperty=nameWithType&gt;</ph> Klasse zum Halten von Dateihandles.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IntPtr">
          <source>The <ph id="ph1">&lt;xref:System.IntPtr&gt;</ph> type is CLS-compliant, while the <ph id="ph2">&lt;xref:System.UIntPtr&gt;</ph> type is not.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IntPtr&gt;</ph> Typ CLS-kompatibel ist während der <ph id="ph2">&lt;xref:System.UIntPtr&gt;</ph> ist keine.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IntPtr">
          <source>Only the <ph id="ph1">&lt;xref:System.IntPtr&gt;</ph> type is used in the common language runtime.</source>
          <target state="translated">Nur die <ph id="ph1">&lt;xref:System.IntPtr&gt;</ph> Typ wird in der common Language Runtime verwendet.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IntPtr">
          <source>The <ph id="ph1">&lt;xref:System.UIntPtr&gt;</ph> type is provided mostly to maintain architectural symmetry with the <ph id="ph2">&lt;xref:System.IntPtr&gt;</ph> type.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.UIntPtr&gt;</ph> Typ dient hauptsächlich architektonische Einheitlichkeit mit verwalten die <ph id="ph2">&lt;xref:System.IntPtr&gt;</ph> Typ.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IntPtr">
          <source>This type implements the <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> interface.</source>
          <target state="translated">Dieser Typ implementiert die <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> Schnittstelle.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IntPtr">
          <source>The following example uses managed pointers to reverse the characters in an array.</source>
          <target state="translated">Im folgenden Beispiel wird verwalteten Zeiger, um die Zeichen in einem Array umzukehren.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IntPtr">
          <source>After it initializes a <ph id="ph1">&lt;xref:System.String&gt;</ph> object and gets its length, it does the following:</source>
          <target state="translated">Nachdem er initialisiert ein <ph id="ph1">&lt;xref:System.String&gt;</ph> -Objekt und ruft seine Länge wird Folgendes:</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IntPtr">
          <source>Calls the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A?displayProperty=nameWithType&gt;</ph> method to copy the Unicode string to unmanaged memory as an ANSI (one-byte) character.</source>
          <target state="translated">Ruft die <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A?displayProperty=nameWithType&gt;</ph> Methode, um die Unicode-Zeichenfolge in nicht verwalteten Speicher als ANSI-Zeichen (Einzelbyte) zu kopieren.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IntPtr">
          <source>The method returns an <ph id="ph1">&lt;xref:System.IntPtr&gt;</ph> object that points to the beginning of the unmanaged string.</source>
          <target state="translated">Die Methode gibt ein <ph id="ph1">&lt;xref:System.IntPtr&gt;</ph> Objekt, das an den Anfang der nicht verwalteten Zeichenfolge verweist.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IntPtr">
          <source>The Visual Basic example uses this pointer directly; in the C++ and C# examples, it is cast to a pointer to a byte.</source>
          <target state="translated">Visual Basic-Beispiel verwendet die this-Zeiger direkt. in C++ und c#-Beispielen wird er in einen Zeiger auf ein Byte umgewandelt.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IntPtr">
          <source>Calls the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A?displayProperty=nameWithType&gt;</ph> method to allocate the same number of bytes as the unmanaged string occupies.</source>
          <target state="translated">Ruft die <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A?displayProperty=nameWithType&gt;</ph> Methode, um die gleiche Anzahl von Bytes Belegen wie die nicht verwaltete Zeichenfolge belegt.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IntPtr">
          <source>The method returns an <ph id="ph1">&lt;xref:System.IntPtr&gt;</ph> object that points to the beginning of the unmanaged block of memory.</source>
          <target state="translated">Die Methode gibt ein <ph id="ph1">&lt;xref:System.IntPtr&gt;</ph> -Objekt, das an den Anfang des nicht verwalteten Speicherblocks zeigt.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IntPtr">
          <source>The Visual Basic example uses this pointer directly; in the C++ and C# examples, it is cast to a pointer to a byte.</source>
          <target state="translated">Visual Basic-Beispiel verwendet die this-Zeiger direkt. in C++ und c#-Beispielen wird er in einen Zeiger auf ein Byte umgewandelt.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IntPtr">
          <source>The Visual Basic example defines a variable named <ph id="ph1">`offset`</ph> that is equal to the length of the ANSI string.</source>
          <target state="translated">Visual Basic-Beispiel definiert eine Variable namens <ph id="ph1">`offset`</ph> , ist gleich der Länge der ANSI-Zeichenfolge.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IntPtr">
          <source>It is used to determine the offset into unmanaged memory to which the next charter in the ANSI string is copied.</source>
          <target state="translated">Es wird verwendet, um den Offset in den nicht verwalteten Arbeitsspeicher zu bestimmen, in die nächste Charta in der ANSI-Zeichenfolge kopiert werden.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IntPtr">
          <source>Because its starting value is the length of the string, the copy operation will copy a character from the start of the string to the end of the memory block.</source>
          <target state="translated">Da Startwert die Länge der Zeichenfolge ist, wird der Kopiervorgang ein Zeichen vom Anfang der Zeichenfolge bis zum Ende des Speicherblocks kopieren.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IntPtr">
          <source>The C# and C++ examples call the <ph id="ph1">&lt;xref:System.IntPtr.ToPointer%2A&gt;</ph> method to get an unmanaged pointer to the starting address of the string and the unmanaged block of memory, and they add one less than the length of the string to the starting address of the ANSI string.</source>
          <target state="translated">Der C#- und C++-Beispiele-Aufruf die <ph id="ph1">&lt;xref:System.IntPtr.ToPointer%2A&gt;</ph> Methode, um ein nicht verwalteter Zeiger auf die Startadresse der Zeichenfolge und den nicht verwalteten Speicherblock abzurufen und sie fügen einen kleiner als die Länge der Zeichenfolge, die die Startadresse der ANSI-Zeichenfolge.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IntPtr">
          <source>Because the unmanaged string pointer now points to the end of the string, the copy operation will copy a character from the end of the string to the start of the memory block.</source>
          <target state="translated">Da der nicht verwalteten Zeichenfolgenzeiger nun bis zum Ende der Zeichenfolge verweist, wird der Kopiervorgang ein Zeichen vom Ende der Zeichenfolge am Anfang der Speicherblock kopieren.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IntPtr">
          <source>Uses a loop to copy each character from the string to the unmanaged block of memory.</source>
          <target state="translated">Mithilfe einer Schleife um jedes Zeichen aus der Zeichenfolge in den nicht verwalteten Speicherblock zu kopieren.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IntPtr">
          <source>The Visual Basic example calls the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadByte%28System.IntPtr%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> method to read the byte (or one-byte character) at a specified offset from the managed pointer to the ANSI string.</source>
          <target state="translated">Im Visual Basic-Beispiel wird die <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadByte%28System.IntPtr%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> Methode, um die Byte (oder ein-Byte-Zeichen) an einem angegebenen Offset aus dem verwalteten Zeiger auf die ANSI-Zeichenfolge zu lesen.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IntPtr">
          <source>The offset is incremented with each iteration of the loop.</source>
          <target state="translated">Der Offset wird bei jeder Iteration der Schleife erhöht.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IntPtr">
          <source>It then calls the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.WriteByte%28System.IntPtr%2CSystem.Int32%2CSystem.Byte%29?displayProperty=nameWithType&gt;</ph> method to write the byte to the memory address defined by the starting address of the unmanaged block of memory plus <ph id="ph2">`offset`</ph>.</source>
          <target state="translated">Er ruft dann die <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.WriteByte%28System.IntPtr%2CSystem.Int32%2CSystem.Byte%29?displayProperty=nameWithType&gt;</ph> Methode zum Schreiben von Bytes auf die Speicheradresse, die durch die Startadresse des plus nicht verwalteten Speicherblock definierten <ph id="ph2">`offset`</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IntPtr">
          <source>It then decrements <ph id="ph1">`offset`</ph>.</source>
          <target state="translated">Es wird dann verringert <ph id="ph1">`offset`</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IntPtr">
          <source>The C# and C++ examples perform the copy operation, then decrement the pointer to the address of the next location in the unmanaged ANSI string and increment the pointer to the next address in the unmanaged block.</source>
          <target state="translated">Die C#- und C++-Beispiele Ausführen des Kopiervorgangs, verringern den Zeiger auf die Adresse von der nächsten Position in der nicht verwalteten ANSI-Zeichenfolge und erhöhen den Zeiger auf die nächste Adresse im nicht verwalteten Block.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IntPtr">
          <source>All examples call the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A?displayProperty=nameWithType&gt;</ph> to convert the unmanaged memory block containing the copied ANSI string to a managed Unicode <ph id="ph2">&lt;xref:System.String&gt;</ph> object.</source>
          <target state="translated">Alle Beispiele rufen die <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A?displayProperty=nameWithType&gt;</ph> den nicht verwaltete Speicherblock mit der kopierten ANSI-Zeichenfolge in einen verwalteten Unicode konvertiert <ph id="ph2">&lt;xref:System.String&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IntPtr">
          <source>After displaying the original and reversed strings, all examples call the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A&gt;</ph> method to free the memory allocated for the unmanaged ANSI string and the unmanaged block of memory.</source>
          <target state="translated">Rufen Sie nach dem Anzeigen von Verbindungszeichenfolgen für die ursprüngliche und umgekehrten alle Beispiele für die <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A&gt;</ph> Methode, um den für den nicht verwalteten ANSI-Zeichenfolge und den nicht verwalteten Speicherblock belegten Arbeitsspeicher freizugeben.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IntPtr">
          <source>This type is thread safe.</source>
          <target state="translated">Dieser Typ ist threadsicher.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="T:System.IntPtr">
          <source>Initializes a new instance of <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph>.</source>
          <target state="translated">Initialisiert eine neue Instanz von <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.IntPtr.#ctor(System.Int32)">
          <source>A pointer or handle contained in a 32-bit signed integer.</source>
          <target state="translated">Ein von einer 32-Bit-Ganzzahl mit Vorzeichen dargestellter Zeiger bzw. ein Handle.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.IntPtr.#ctor(System.Int32)">
          <source>Initializes a new instance of <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> using the specified 32-bit pointer or handle.</source>
          <target state="translated">Initialisiert eine neue Instanz von <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> mit dem angegebenen 32-Bit-Zeiger bzw. -Handle.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.IntPtr.#ctor(System.Int64)">
          <source>A pointer or handle contained in a 64-bit signed integer.</source>
          <target state="translated">Ein von einer 64-Bit-Ganzzahl mit Vorzeichen dargestellter Zeiger bzw. ein Handle.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.IntPtr.#ctor(System.Int64)">
          <source>Initializes a new instance of <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> using the specified 64-bit pointer.</source>
          <target state="translated">Initialisiert eine neue Instanz von <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> mit einem 64-Bit-Zeiger oder -Handle.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IntPtr.#ctor(System.Int64)">
          <source>An exception is only thrown if the value of <ph id="ph1">`value`</ph> requires more bits than the current platform supports.</source>
          <target state="translated">Eine Ausnahme wird nur ausgelöst, wenn der Wert der <ph id="ph1">`value`</ph> erfordert mehr Bits als die aktuelle Plattform unterstützt.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.IntPtr.#ctor(System.Int64)">
          <source>On a 32-bit platform, <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is too large or too small to represent as an <ph id="ph2">&lt;see cref="T:System.IntPtr" /&gt;</ph>.</source>
          <target state="translated">Auf einer 32-Bit-Plattform ist <ph id="ph1">&lt;paramref name="value" /&gt;</ph> für eine Darstellung als <ph id="ph2">&lt;see cref="T:System.IntPtr" /&gt;</ph> zu groß oder zu klein.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.IntPtr.#ctor(System.Void*)">
          <source>A pointer to an unspecified type.</source>
          <target state="translated">Ein Zeiger auf einen nicht angegebenen Typ.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.IntPtr.#ctor(System.Void*)">
          <source>Initializes a new instance of <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> using the specified pointer to an unspecified type.</source>
          <target state="translated">Initialisiert eine neue Instanz von <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> mit dem angegebenen Zeiger auf einen nicht angegebenen Typ.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IntPtr.#ctor(System.Void*)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IntPtr.#ctor(System.Void*)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.IntPtr.Add(System.IntPtr,System.Int32)">
          <source>The pointer to add the offset to.</source>
          <target state="translated">Der Zeiger, zu dem der Offset addiert werden soll.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.IntPtr.Add(System.IntPtr,System.Int32)">
          <source>The offset to add.</source>
          <target state="translated">Der Offset, der addiert werden soll.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.IntPtr.Add(System.IntPtr,System.Int32)">
          <source>Adds an offset to the value of a pointer.</source>
          <target state="translated">Addiert einen Offset zum Wert eines Zeigers.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.IntPtr.Add(System.IntPtr,System.Int32)">
          <source>A new pointer that reflects the addition of <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> to <ph id="ph2">&lt;paramref name="pointer" /&gt;</ph>.</source>
          <target state="translated">Ein neuer Zeiger, der die Addition von <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> zu <ph id="ph2">&lt;paramref name="pointer" /&gt;</ph> widerspiegelt.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IntPtr.Add(System.IntPtr,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.IntPtr.Add%2A&gt;</ph> method does not throw an exception if the result is too large to represent as a pointer on the specified platform.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IntPtr.Add%2A&gt;</ph> Methode löst keine Ausnahme aus, wenn das Ergebnis zu groß, um als Zeiger auf den angegebenen Plattformen dargestellt wird.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IntPtr.Add(System.IntPtr,System.Int32)">
          <source>Instead, the addition operation is performed in an unchecked context.</source>
          <target state="translated">Stattdessen wird die Additionsoperation in einem nicht geprüften Kontext ausgeführt.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IntPtr.Add(System.IntPtr,System.Int32)">
          <source>Languages that do not support operator overloading or custom operators can use this method to add an offset to the value of a pointer.</source>
          <target state="translated">Sprachen, die Überladen von Operatoren oder benutzerdefinierten Operatoren nicht unterstützt werden können diese Methode verwenden, um einen Offset auf den Wert eines Zeigers hinzuzufügen.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IntPtr.Add(System.IntPtr,System.Int32)">
          <source>The following example instantiates an <ph id="ph1">&lt;xref:System.IntPtr&gt;</ph> object that points to the beginning of a ten-element array, and then calls the <ph id="ph2">&lt;xref:System.IntPtr.Add%2A&gt;</ph> method to iterate the elements in the array.</source>
          <target state="translated">Im folgenden Beispiel wird ein <ph id="ph1">&lt;xref:System.IntPtr&gt;</ph> -Objekt, das auf den Anfang des ein Array mit 10 Elementen verweist, und ruft dann die <ph id="ph2">&lt;xref:System.IntPtr.Add%2A&gt;</ph> Methode, um die Elemente im Array durchlaufen.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.IntPtr.Equals(System.Object)">
          <source>An object to compare with this instance or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ein Objekt, das mit dieser Instanz verglichen werden soll, oder <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.IntPtr.Equals(System.Object)">
          <source>Returns a value indicating whether this instance is equal to a specified object.</source>
          <target state="translated">Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen Objekt ist.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.IntPtr.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> is an instance of <ph id="ph3">&lt;see cref="T:System.IntPtr" /&gt;</ph> and equals the value of this instance; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> eine Instanz von <ph id="ph3">&lt;see cref="T:System.IntPtr" /&gt;</ph> ist, deren Wert gleich dem Wert dieser Instanz ist, andernfalls <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.IntPtr.GetHashCode">
          <source>Returns the hash code for this instance.</source>
          <target state="translated">Gibt den Hashcode für diese Instanz zurück.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.IntPtr.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.IntPtr.op_Addition(System.IntPtr,System.Int32)">
          <source>The pointer to add the offset to.</source>
          <target state="translated">Der Zeiger, zu dem der Offset addiert werden soll.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.IntPtr.op_Addition(System.IntPtr,System.Int32)">
          <source>The offset to add.</source>
          <target state="translated">Der Offset, der addiert werden soll.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.IntPtr.op_Addition(System.IntPtr,System.Int32)">
          <source>Adds an offset to the value of a pointer.</source>
          <target state="translated">Addiert einen Offset zum Wert eines Zeigers.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.IntPtr.op_Addition(System.IntPtr,System.Int32)">
          <source>A new pointer that reflects the addition of <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> to <ph id="ph2">&lt;paramref name="pointer" /&gt;</ph>.</source>
          <target state="translated">Ein neuer Zeiger, der die Addition von <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> zu <ph id="ph2">&lt;paramref name="pointer" /&gt;</ph> widerspiegelt.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IntPtr.op_Addition(System.IntPtr,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.IntPtr.op_Addition%2A&gt;</ph> method defines the addition operation for <ph id="ph2">&lt;xref:System.IntPtr&gt;</ph> objects.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IntPtr.op_Addition%2A&gt;</ph> Methode definiert die Additionsoperation für <ph id="ph2">&lt;xref:System.IntPtr&gt;</ph> Objekte.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IntPtr.op_Addition(System.IntPtr,System.Int32)">
          <source>It enables code such as the following.</source>
          <target state="translated">Dadurch wird dem folgenden Code.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IntPtr.op_Addition(System.IntPtr,System.Int32)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.IntPtr.Add%2A&gt;</ph> method instead.</source>
          <target state="translated">Sprachen, die keine benutzerdefinierte Operatoren unterstützen können Aufrufen der <ph id="ph1">&lt;xref:System.IntPtr.Add%2A&gt;</ph> Methode stattdessen.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IntPtr.op_Addition(System.IntPtr,System.Int32)">
          <source>The addition operation does not throw an exception if the result is too large to represent as a pointer on the specified platform.</source>
          <target state="translated">Die Additionsoperation wird keine Ausnahme auslöst, wenn das Ergebnis zu groß, um als Zeiger auf den angegebenen Plattformen darstellen.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IntPtr.op_Addition(System.IntPtr,System.Int32)">
          <source>Instead, it is performed in an unchecked context.</source>
          <target state="translated">Stattdessen wird es in einem nicht geprüften Kontext ausgeführt.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IntPtr.op_Addition(System.IntPtr,System.Int32)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.IntPtr.Add%28System.IntPtr%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">Die entsprechende Methode für diesen Operator ist. <ph id="ph1">&lt;xref:System.IntPtr.Add%28System.IntPtr%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.IntPtr.op_Equality(System.IntPtr,System.IntPtr)">
          <source>The first pointer or handle to compare.</source>
          <target state="translated">Der erste Zeiger bzw. das erste Handle für den Vergleich.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.IntPtr.op_Equality(System.IntPtr,System.IntPtr)">
          <source>The second pointer or handle to compare.</source>
          <target state="translated">Der zweite Zeiger bzw. das zweite Handle für den Vergleich.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.IntPtr.op_Equality(System.IntPtr,System.IntPtr)">
          <source>Determines whether two specified instances of <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> are equal.</source>
          <target state="translated">Bestimmt, ob zwei angegebene Instanzen von <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> gleich sind.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.IntPtr.op_Equality(System.IntPtr,System.IntPtr)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value1" /&gt;</ph> equals <ph id="ph3">&lt;paramref name="value2" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn <ph id="ph2">&lt;paramref name="value1" /&gt;</ph> gleich <ph id="ph3">&lt;paramref name="value2" /&gt;</ph> ist, andernfalls <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IntPtr.op_Equality(System.IntPtr,System.IntPtr)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.IntPtr.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">Die entsprechende Methode für diesen Operator ist. <ph id="ph1">&lt;xref:System.IntPtr.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="T:System.IntPtr">
          <source>Converts a specified data type to an <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> value, or an <ph id="ph2">&lt;see cref="T:System.IntPtr" /&gt;</ph> value to a specified data type.</source>
          <target state="translated">Konvertiert einen angegebenen Datentyp in einen <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph>-Wert, oder konvertiert einen <ph id="ph2">&lt;see cref="T:System.IntPtr" /&gt;</ph>-Wert in einen angegebenen Datentyp.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.IntPtr.op_Explicit(System.Int32)~System.IntPtr">
          <source>A 32-bit signed integer.</source>
          <target state="translated">Eine 32-Bit-Ganzzahl mit Vorzeichen.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.IntPtr.op_Explicit(System.Int32)~System.IntPtr">
          <source>Converts the value of a 32-bit signed integer to an <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph>.</source>
          <target state="translated">Konvertiert den Wert einer 32-Bit-Ganzzahl mit Vorzeichen in einen <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph>-Konstruktor.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.IntPtr.op_Explicit(System.Int32)~System.IntPtr">
          <source>A new instance of <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> initialized to <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Eine neue, mit <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> initialisierte Instanz von <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.IntPtr.op_Explicit(System.Int64)~System.IntPtr">
          <source>A 64-bit signed integer.</source>
          <target state="translated">Eine 64-Bit-Ganzzahl mit Vorzeichen.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.IntPtr.op_Explicit(System.Int64)~System.IntPtr">
          <source>Converts the value of a 64-bit signed integer to an <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph>.</source>
          <target state="translated">Konvertiert den Wert einer 64-Bit-Ganzzahl mit Vorzeichen in einen <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph>-Konstruktor.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.IntPtr.op_Explicit(System.Int64)~System.IntPtr">
          <source>A new instance of <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> initialized to <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Eine neue, mit <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> initialisierte Instanz von <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.IntPtr.op_Explicit(System.Int64)~System.IntPtr">
          <source>On a 32-bit platform, <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is too large to represent as an <ph id="ph2">&lt;see cref="T:System.IntPtr" /&gt;</ph>.</source>
          <target state="translated">Auf einer 32-Bit-Plattform ist <ph id="ph1">&lt;paramref name="value" /&gt;</ph> für eine Darstellung als <ph id="ph2">&lt;see cref="T:System.IntPtr" /&gt;</ph> zu groß.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.IntPtr.op_Explicit(System.IntPtr)~System.Int32">
          <source>The pointer or handle to convert.</source>
          <target state="translated">Der zu konvertierende Zeiger bzw. das zu konvertierende Handle.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.IntPtr.op_Explicit(System.IntPtr)~System.Int32">
          <source>Converts the value of the specified <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> to a 32-bit signed integer.</source>
          <target state="translated">Konvertiert den Wert des angegebenen <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph>-Konstruktors in eine 32-Bit-Ganzzahl mit Vorzeichen.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.IntPtr.op_Explicit(System.IntPtr)~System.Int32">
          <source>The contents of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Der Inhalt von <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IntPtr.op_Explicit(System.IntPtr)~System.Int32">
          <source>An exception is only thrown if the value of <ph id="ph1">`value`</ph> requires more bits than the current platform supports.</source>
          <target state="translated">Eine Ausnahme wird nur ausgelöst, wenn der Wert der <ph id="ph1">`value`</ph> erfordert mehr Bits als die aktuelle Plattform unterstützt.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.IntPtr.op_Explicit(System.IntPtr)~System.Int32">
          <source>On a 64-bit platform, the value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is too large to represent as a 32-bit signed integer.</source>
          <target state="translated">Auf einer 64-Bit-Plattform ist <ph id="ph1">&lt;paramref name="value" /&gt;</ph> für eine Darstellung als 32-Bit-Ganzzahl mit Vorzeichen zu groß.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.IntPtr.op_Explicit(System.IntPtr)~System.Int64">
          <source>The pointer or handle to convert.</source>
          <target state="translated">Der zu konvertierende Zeiger bzw. das zu konvertierende Handle.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.IntPtr.op_Explicit(System.IntPtr)~System.Int64">
          <source>Converts the value of the specified <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> to a 64-bit signed integer.</source>
          <target state="translated">Konvertiert den Wert des angegebenen <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph>-Konstruktors in eine 64-Bit-Ganzzahl mit Vorzeichen.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.IntPtr.op_Explicit(System.IntPtr)~System.Int64">
          <source>The contents of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Der Inhalt von <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.IntPtr.op_Explicit(System.IntPtr)~System.Void*">
          <source>The pointer or handle to convert.</source>
          <target state="translated">Der zu konvertierende Zeiger bzw. das zu konvertierende Handle.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.IntPtr.op_Explicit(System.IntPtr)~System.Void*">
          <source>Converts the value of the specified <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> to a pointer to an unspecified type.</source>
          <target state="translated">Konvertiert den Wert des angegebenen <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> in einen Zeiger auf einen nicht angegebenen Typ.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.IntPtr.op_Explicit(System.IntPtr)~System.Void*">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">Diese API ist nicht CLS-kompatibel.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.IntPtr.op_Explicit(System.IntPtr)~System.Void*">
          <source>The contents of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Der Inhalt von <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.IntPtr.op_Explicit(System.Void*)~System.IntPtr">
          <source>A pointer to an unspecified type.</source>
          <target state="translated">Ein Zeiger auf einen nicht angegebenen Typ.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.IntPtr.op_Explicit(System.Void*)~System.IntPtr">
          <source>Converts the specified pointer to an unspecified type to an <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph>.</source>
          <target state="translated">Konvertiert den angegebenen Zeiger auf einen nicht angegebenen Typ in einen <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.IntPtr.op_Explicit(System.Void*)~System.IntPtr">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">Diese API ist nicht CLS-kompatibel.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.IntPtr.op_Explicit(System.Void*)~System.IntPtr">
          <source>A new instance of <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> initialized to <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Eine neue, mit <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> initialisierte Instanz von <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IntPtr.op_Explicit(System.Void*)~System.IntPtr">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IntPtr.op_Explicit(System.Void*)~System.IntPtr">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.IntPtr.op_Inequality(System.IntPtr,System.IntPtr)">
          <source>The first pointer or handle to compare.</source>
          <target state="translated">Der erste Zeiger bzw. das erste Handle für den Vergleich.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.IntPtr.op_Inequality(System.IntPtr,System.IntPtr)">
          <source>The second pointer or handle to compare.</source>
          <target state="translated">Der zweite Zeiger bzw. das zweite Handle für den Vergleich.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.IntPtr.op_Inequality(System.IntPtr,System.IntPtr)">
          <source>Determines whether two specified instances of <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> are not equal.</source>
          <target state="translated">Bestimmt, ob zwei angegebene Instanzen von <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> nicht gleich sind.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.IntPtr.op_Inequality(System.IntPtr,System.IntPtr)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value1" /&gt;</ph> does not equal <ph id="ph3">&lt;paramref name="value2" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn <ph id="ph2">&lt;paramref name="value1" /&gt;</ph> ungleich <ph id="ph3">&lt;paramref name="value2" /&gt;</ph> ist, andernfalls <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IntPtr.op_Inequality(System.IntPtr,System.IntPtr)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.IntPtr.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">Die entsprechende Methode für diesen Operator ist. <ph id="ph1">&lt;xref:System.IntPtr.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.IntPtr.op_Subtraction(System.IntPtr,System.Int32)">
          <source>The pointer to subtract the offset from.</source>
          <target state="translated">Der Zeiger, von dem der Offset subtrahiert werden soll.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.IntPtr.op_Subtraction(System.IntPtr,System.Int32)">
          <source>The offset to subtract.</source>
          <target state="translated">Der Offset, der subtrahiert werden soll.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.IntPtr.op_Subtraction(System.IntPtr,System.Int32)">
          <source>Subtracts an offset from the value of a pointer.</source>
          <target state="translated">Subtrahiert einen Offset vom Wert eines Zeigers.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.IntPtr.op_Subtraction(System.IntPtr,System.Int32)">
          <source>A new pointer that reflects the subtraction of <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> from <ph id="ph2">&lt;paramref name="pointer" /&gt;</ph>.</source>
          <target state="translated">Ein neuer Zeiger, der die Subtraktion von <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> von <ph id="ph2">&lt;paramref name="pointer" /&gt;</ph> widerspiegelt.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IntPtr.op_Subtraction(System.IntPtr,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.IntPtr.op_Subtraction%2A&gt;</ph> method defines the subtraction operation for <ph id="ph2">&lt;xref:System.IntPtr&gt;</ph> objects.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IntPtr.op_Subtraction%2A&gt;</ph> Methode definiert, dem der Subtraktionsvorgang für <ph id="ph2">&lt;xref:System.IntPtr&gt;</ph> Objekte.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IntPtr.op_Subtraction(System.IntPtr,System.Int32)">
          <source>It enables code such as the following.</source>
          <target state="translated">Dadurch wird dem folgenden Code.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IntPtr.op_Subtraction(System.IntPtr,System.Int32)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.IntPtr.Subtract%2A&gt;</ph> method instead.</source>
          <target state="translated">Sprachen, die keine benutzerdefinierte Operatoren unterstützen können Aufrufen der <ph id="ph1">&lt;xref:System.IntPtr.Subtract%2A&gt;</ph> Methode stattdessen.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IntPtr.op_Subtraction(System.IntPtr,System.Int32)">
          <source>The subtraction operation does not throw an exception if the result is too small to represent as a pointer on the specified platform.</source>
          <target state="translated">Die Operation der Mengensubtraktion wird keine Ausnahme auslöst, wenn das Ergebnis zu klein, um als Zeiger auf den angegebenen Plattformen darstellen.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IntPtr.op_Subtraction(System.IntPtr,System.Int32)">
          <source>Instead, it is performed in an unchecked context.</source>
          <target state="translated">Stattdessen wird es in einem nicht geprüften Kontext ausgeführt.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IntPtr.op_Subtraction(System.IntPtr,System.Int32)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.IntPtr.Subtract%28System.IntPtr%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">Die entsprechende Methode für diesen Operator ist. <ph id="ph1">&lt;xref:System.IntPtr.Subtract%28System.IntPtr%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="P:System.IntPtr.Size">
          <source>Gets the size of this instance.</source>
          <target state="translated">Ruft die Größe dieser Instanz ab.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IntPtr.Size">
          <source>The size of a pointer or handle in this process, measured in bytes.</source>
          <target state="translated">Die Größe eines Zeigers bzw. Handles in diesem Prozess in Bytes.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IntPtr.Size">
          <source>The value of this property is 4 in a 32-bit process, and 8 in a 64-bit process.</source>
          <target state="translated">Der Wert dieser Eigenschaft in einem 32-Bit-Prozess ist 4 und in einem 64-Bit-Prozess 8.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IntPtr.Size">
          <source>You can define the process type by setting the <ph id="ph1">&lt;see langword="/platform" /&gt;</ph> switch when you compile your code with the C# and Visual Basic compilers.</source>
          <target state="translated">Sie können den Prozesstyp definieren, indem Sie den <ph id="ph1">&lt;see langword="/platform" /&gt;</ph>-Schalter festlegen, wenn Sie den Code mit den C#- und Visual Basic-Compilern kompilieren.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.IntPtr.Subtract(System.IntPtr,System.Int32)">
          <source>The pointer to subtract the offset from.</source>
          <target state="translated">Der Zeiger, von dem der Offset subtrahiert werden soll.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.IntPtr.Subtract(System.IntPtr,System.Int32)">
          <source>The offset to subtract.</source>
          <target state="translated">Der Offset, der subtrahiert werden soll.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.IntPtr.Subtract(System.IntPtr,System.Int32)">
          <source>Subtracts an offset from the value of a pointer.</source>
          <target state="translated">Subtrahiert einen Offset vom Wert eines Zeigers.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.IntPtr.Subtract(System.IntPtr,System.Int32)">
          <source>A new pointer that reflects the subtraction of <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> from <ph id="ph2">&lt;paramref name="pointer" /&gt;</ph>.</source>
          <target state="translated">Ein neuer Zeiger, der die Subtraktion von <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> von <ph id="ph2">&lt;paramref name="pointer" /&gt;</ph> widerspiegelt.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IntPtr.Subtract(System.IntPtr,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.IntPtr.Subtract%2A&gt;</ph> method does not throw an exception if the result is too small to represent as a pointer on the specified platform.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IntPtr.Subtract%2A&gt;</ph> Methode löst keine Ausnahme aus, wenn das Ergebnis zu klein, um als Zeiger auf den angegebenen Plattformen dargestellt wird.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IntPtr.Subtract(System.IntPtr,System.Int32)">
          <source>Instead, the subtraction operation is performed in an unchecked context.</source>
          <target state="translated">Stattdessen wird die Operation der Mengensubtraktion in einem nicht geprüften Kontext ausgeführt.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IntPtr.Subtract(System.IntPtr,System.Int32)">
          <source>Languages that do not support operator overloading or custom operators can use this method to subtract an offset from the value of a pointer.</source>
          <target state="translated">Sprachen, die Überladen von Operatoren oder benutzerdefinierten Operatoren nicht unterstützen, können diese Methode verwenden, subtrahiert einen Offset vom Wert eines Zeigers.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IntPtr.Subtract(System.IntPtr,System.Int32)">
          <source>The following example instantiates an <ph id="ph1">&lt;xref:System.IntPtr&gt;</ph> object that points to the end of a ten-element array, and then calls the <ph id="ph2">&lt;xref:System.IntPtr.Subtract%2A&gt;</ph> method to iterate the elements in the array in reverse order.</source>
          <target state="translated">Im folgenden Beispiel wird ein <ph id="ph1">&lt;xref:System.IntPtr&gt;</ph> -Objekt, das am Ende ein Array mit 10 Elementen verweist, und ruft dann die <ph id="ph2">&lt;xref:System.IntPtr.Subtract%2A&gt;</ph> Methode, um die Elemente im Array in umgekehrter Reihenfolge zu durchlaufen.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.IntPtr.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object to populate with data.</source>
          <target state="translated">Das mit Daten aufzufüllende <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.IntPtr.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The destination for this serialization.</source>
          <target state="translated">Das Ziel dieser Serialisierung.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.IntPtr.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>(This parameter is not used; specify <ph id="ph1">&lt;see langword="null" /&gt;</ph>.)</source>
          <target state="translated">(Dieser Parameter wird nicht verwendet, geben Sie <ph id="ph1">&lt;see langword="null" /&gt;</ph> an.)</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.IntPtr.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Populates a <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object with the data needed to serialize the current <ph id="ph2">&lt;see cref="T:System.IntPtr" /&gt;</ph> object.</source>
          <target state="translated">Füllt ein <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>-Objekt mit den für das Serialisieren des aktuellen <ph id="ph2">&lt;see cref="T:System.IntPtr" /&gt;</ph>-Objekts erforderlichen Daten.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IntPtr.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This method populates the <ph id="ph1">`info`</ph> parameter with the value of the current <ph id="ph2">&lt;xref:System.IntPtr&gt;</ph> object.</source>
          <target state="translated">Diese Methode füllt die <ph id="ph1">`info`</ph> Parameter mit dem Wert des aktuellen <ph id="ph2">&lt;xref:System.IntPtr&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.IntPtr.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source><ph id="ph1">&lt;paramref name="info" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="info" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IntPtr.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IntPtr.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.IntPtr.ToInt32">
          <source>Converts the value of this instance to a 32-bit signed integer.</source>
          <target state="translated">Konvertiert den Wert dieser Instanz in eine 32-Bit-Ganzzahl mit Vorzeichen.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.IntPtr.ToInt32">
          <source>A 32-bit signed integer equal to the value of this instance.</source>
          <target state="translated">Eine 32-Bit-Ganzzahl mit Vorzeichen, die gleich dem Wert dieser Instanz ist.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.IntPtr.ToInt32">
          <source>On a 64-bit platform, the value of this instance is too large or too small to represent as a 32-bit signed integer.</source>
          <target state="translated">Auf einer 64-Bit-Plattform ist der Wert dieser Instanz für eine Darstellung als 32-Bit-Ganzzahl mit Vorzeichen zu groß oder zu klein.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.IntPtr.ToInt64">
          <source>Converts the value of this instance to a 64-bit signed integer.</source>
          <target state="translated">Konvertiert den Wert dieser Instanz in eine 64-Bit-Ganzzahl mit Vorzeichen.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.IntPtr.ToInt64">
          <source>A 64-bit signed integer equal to the value of this instance.</source>
          <target state="translated">Eine 64-Bit-Ganzzahl mit Vorzeichen, die gleich dem Wert dieser Instanz ist.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.IntPtr.ToPointer">
          <source>Converts the value of this instance to a pointer to an unspecified type.</source>
          <target state="translated">Konvertiert den Wert dieser Instanz in einen Zeiger auf einen nicht angegebenen Typ.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.IntPtr.ToPointer">
          <source>A pointer to <ph id="ph1">&lt;see cref="T:System.Void" /&gt;</ph>; that is, a pointer to memory containing data of an unspecified type.</source>
          <target state="translated">Ein Zeiger auf <ph id="ph1">&lt;see cref="T:System.Void" /&gt;</ph>, d. h. ein Zeiger auf Speicher, der Daten eines nicht angegebenen Typs enthält.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IntPtr.ToPointer">
          <source>The following example uses managed pointers to reverse the characters in an array.</source>
          <target state="translated">Im folgenden Beispiel wird verwalteten Zeiger, um die Zeichen in einem Array umzukehren.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IntPtr.ToPointer">
          <source>After it initializes a <ph id="ph1">&lt;xref:System.String&gt;</ph> object and gets its length, it does the following:</source>
          <target state="translated">Nachdem er initialisiert ein <ph id="ph1">&lt;xref:System.String&gt;</ph> -Objekt und ruft seine Länge wird Folgendes:</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IntPtr.ToPointer">
          <source>Calls the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A?displayProperty=nameWithType&gt;</ph> method to copy the Unicode string to unmanaged memory as ANSI (one-byte) characters.</source>
          <target state="translated">Ruft die <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A?displayProperty=nameWithType&gt;</ph> Methode, um die Unicode-Zeichenfolge in nicht verwalteten Speicher als ANSI (1-Byte-Zeichen) zu kopieren.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IntPtr.ToPointer">
          <source>The method returns an <ph id="ph1">&lt;xref:System.IntPtr&gt;</ph> object that points to the beginning of the unmanaged string.</source>
          <target state="translated">Die Methode gibt ein <ph id="ph1">&lt;xref:System.IntPtr&gt;</ph> Objekt, das an den Anfang der nicht verwalteten Zeichenfolge verweist.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IntPtr.ToPointer">
          <source>Calls the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A?displayProperty=nameWithType&gt;</ph> method to allocate the same number of bytes as the unmanaged string occupies.</source>
          <target state="translated">Ruft die <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A?displayProperty=nameWithType&gt;</ph> Methode, um die gleiche Anzahl von Bytes Belegen wie die nicht verwaltete Zeichenfolge belegt.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IntPtr.ToPointer">
          <source>The method returns an <ph id="ph1">&lt;xref:System.IntPtr&gt;</ph> object that points to the beginning of the unmanaged block of memory.</source>
          <target state="translated">Die Methode gibt ein <ph id="ph1">&lt;xref:System.IntPtr&gt;</ph> -Objekt, das an den Anfang des nicht verwalteten Speicherblocks zeigt.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IntPtr.ToPointer">
          <source>Calls the <ph id="ph1">&lt;xref:System.IntPtr.ToPointer%2A&gt;</ph> method to get an unmanaged pointer to the starting address of the string and the unmanaged block of memory, and adds one less than the length of the string to the starting address of the ANSI string.</source>
          <target state="translated">Ruft die <ph id="ph1">&lt;xref:System.IntPtr.ToPointer%2A&gt;</ph> Methode, um ein nicht verwalteter Zeiger auf die Startadresse der Zeichenfolge und den nicht verwalteten Speicherblock abzurufen und fügt eine kleiner als die Länge der Zeichenfolge, die die Startadresse der ANSI-Zeichenfolge.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IntPtr.ToPointer">
          <source>Because the unmanaged string pointer now points to the end of the string, the copy operation will copy a character from the end of the string to the start of the memory block.</source>
          <target state="translated">Da der nicht verwalteten Zeichenfolgenzeiger nun bis zum Ende der Zeichenfolge verweist, wird der Kopiervorgang ein Zeichen vom Ende der Zeichenfolge am Anfang der Speicherblock kopieren.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IntPtr.ToPointer">
          <source>Uses a loop to copy each character from the string to the unmanaged block of memory.</source>
          <target state="translated">Mithilfe einer Schleife um jedes Zeichen aus der Zeichenfolge in den nicht verwalteten Speicherblock zu kopieren.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IntPtr.ToPointer">
          <source>After each copy operation, it decrements the pointer to the address of the next location in the unmanaged ANSI string and increments the pointer to the next address in the unmanaged block.</source>
          <target state="translated">Nach jedem Kopiervorgang es verringert den Zeiger auf die Adresse von der nächsten Position in der nicht verwalteten ANSI-Zeichenfolge und den Zeiger auf die nächste Adresse im nicht verwalteten Block inkrementiert.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IntPtr.ToPointer">
          <source>Calls the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A?displayProperty=nameWithType&gt;</ph> to convert the unmanaged memory block containing the copied ANSI string to a managed Unicode <ph id="ph2">&lt;xref:System.String&gt;</ph> object.</source>
          <target state="translated">Ruft die <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A?displayProperty=nameWithType&gt;</ph> den nicht verwaltete Speicherblock mit der kopierten ANSI-Zeichenfolge in einen verwalteten Unicode konvertiert <ph id="ph2">&lt;xref:System.String&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IntPtr.ToPointer">
          <source>After displaying the original and reversed strings, calls the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A?displayProperty=nameWithType&gt;</ph> method to free the memory allocated for the unmanaged ANSI string and the unmanaged block of memory.</source>
          <target state="translated">Nach dem Anzeigen der ursprünglichen und umgekehrten Zeichenfolgen, ruft die <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A?displayProperty=nameWithType&gt;</ph> Methode, um den für den nicht verwalteten ANSI-Zeichenfolge und den nicht verwalteten Speicherblock belegten Arbeitsspeicher freizugeben.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="T:System.IntPtr">
          <source>Converts the numeric value of the current <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> object to its equivalent string representation.</source>
          <target state="translated">Konvertiert den numerischen Wert des aktuellen <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph>-Objekts in die entsprechende Zeichenfolgendarstellung.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.IntPtr.ToString">
          <source>Converts the numeric value of the current <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> object to its equivalent string representation.</source>
          <target state="translated">Konvertiert den numerischen Wert des aktuellen <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph>-Objekts in die entsprechende Zeichenfolgendarstellung.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.IntPtr.ToString">
          <source>The string representation of the value of this instance.</source>
          <target state="translated">Die Zeichenfolgendarstellung des Werts dieser Instanz.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IntPtr.ToString">
          <source>If the value of the <ph id="ph1">&lt;xref:System.IntPtr.Size%2A&gt;</ph> property for this instance is 4, then this method is equivalent to <ph id="ph2">&lt;xref:System.Int32.ToString%2A?displayProperty=nameWithType&gt;</ph>; otherwise, this method is equivalent to <ph id="ph3">&lt;xref:System.Int64.ToString%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Wenn der Wert der <ph id="ph1">&lt;xref:System.IntPtr.Size%2A&gt;</ph> Eigenschaft für diese Instanz ist 4, und klicken Sie dann diese Methode entspricht <ph id="ph2">&lt;xref:System.Int32.ToString%2A?displayProperty=nameWithType&gt;</ph>ist, andernfalls dieser Methode entspricht <ph id="ph3">&lt;xref:System.Int64.ToString%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.IntPtr.ToString(System.String)">
          <source>A format specification that governs how the current <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> object is converted.</source>
          <target state="translated">Eine Formatangabe, die bestimmt, wie das aktuelle <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph>-Objekt konvertiert wird.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.IntPtr.ToString(System.String)">
          <source>Converts the numeric value of the current <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> object to its equivalent string representation.</source>
          <target state="translated">Konvertiert den numerischen Wert des aktuellen <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph>-Objekts in die entsprechende Zeichenfolgendarstellung.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.IntPtr.ToString(System.String)">
          <source>The string representation of the value of the current <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> object.</source>
          <target state="translated">Die Zeichenfolgendarstellung des Werts des aktuellen <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph>-Objekts.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IntPtr.ToString(System.String)">
          <source>If the <ph id="ph1">`format`</ph> parameter is <ph id="ph2">`null`</ph> or an empty string (""), the return value is formatted with the general format specifier ("G").</source>
          <target state="translated">Wenn die <ph id="ph1">`format`</ph> Parameter ist <ph id="ph2">`null`</ph> oder eine leere Zeichenfolge (""), der Rückgabewert mit dem allgemeinen Formatbezeichner ("G") formatiert ist.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IntPtr.ToString(System.String)">
          <source>For more information about numeric format specifiers, see the <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> topic.</source>
          <target state="translated">Weitere Informationen zu numerischen Formatbezeichnern finden Sie unter der <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> Thema.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IntPtr.ToString(System.String)">
          <source>The return value is formatted using the invariant culture.</source>
          <target state="translated">Der Rückgabewert wird mit der invarianten Kultur formatiert.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="F:System.IntPtr.Zero">
          <source>A read-only field that represents a pointer or handle that has been initialized to zero.</source>
          <target state="translated">Ein schreibgeschütztes Feld, das einen mit 0 (null) initialisierten Zeiger oder ein Handle darstellt.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.IntPtr.Zero">
          <source>The value of this field is not equivalent to <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Der Wert dieses Felds ist nicht gleichbedeutend mit <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.IntPtr.Zero">
          <source>Use this field to efficiently determine whether an instance of <ph id="ph1">&lt;xref:System.IntPtr&gt;</ph> has been set to a value other than zero.</source>
          <target state="translated">Mit diesem Feld können Sie um effizient zu ermitteln, ob eine Instanz von <ph id="ph1">&lt;xref:System.IntPtr&gt;</ph> auf einen anderen Wert als 0 (null) festgelegt wurde.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.IntPtr.Zero">
          <source>For example, assume the variable, ip, is an instance of <ph id="ph1">&lt;xref:System.IntPtr&gt;</ph>.</source>
          <target state="translated">Nehmen wir beispielsweise an, die Variable, die IP-Adresse ist eine Instanz der <ph id="ph1">&lt;xref:System.IntPtr&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.IntPtr.Zero">
          <source>You can determine if it has been set by comparing it to the value returned by a constructor, for example: " <ph id="ph1">`if ip != new IntPtr(0)...`</ph> ".</source>
          <target state="translated">Sie können feststellen, ob er festgelegt wurde, indem sie z. B. von einem Konstruktor zurückgegebenen Wert vergleichen: " <ph id="ph1">`if ip != new IntPtr(0)...`</ph> ".</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.IntPtr.Zero">
          <source>However, invoking a constructor to get an unintialized pointer is inefficient.</source>
          <target state="translated">Allerdings ist das Aufrufen eines Konstruktors zum Abrufen einer nicht initialisierten Zeigers ineffizient.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.IntPtr.Zero">
          <source>It is better to code either " <ph id="ph1">`if ip != IntPtr.Zero...`</ph> ", or " <ph id="ph2">`if !IntPtr.Zero.Equals(ip)...`</ph> ".</source>
          <target state="translated">Es ist besser, entweder " <ph id="ph1">`if ip != IntPtr.Zero...`</ph> ", oder " <ph id="ph2">`if !IntPtr.Zero.Equals(ip)...`</ph> ".</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.IntPtr.Zero">
          <source>When calling the Windows API from managed code, you can pass <ph id="ph1">&lt;xref:System.IntPtr.Zero?displayProperty=nameWithType&gt;</ph> instead of <ph id="ph2">`null`</ph> if an argument is expected to be either a pointer or a <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Wenn die Windows-API von verwaltetem Code aufrufen, übergeben Sie <ph id="ph1">&lt;xref:System.IntPtr.Zero?displayProperty=nameWithType&gt;</ph> anstelle von <ph id="ph2">`null`</ph> Wenn ein Argument erwartet wird, um entweder einen Zeiger oder ein <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.IntPtr.Zero">
          <source>For example, the following call to the Windows <ph id="ph1">`CreateFile`</ph> function supplies <ph id="ph2">&lt;xref:System.IntPtr.Zero?displayProperty=nameWithType&gt;</ph> for the <ph id="ph3">`pSecurityAttributes`</ph> and <ph id="ph4">`hTemplateFile`</ph> argument values.</source>
          <target state="translated">Beispielsweise beim folgenden Aufruf der Windows <ph id="ph1">`CreateFile`</ph> Funktion stellt <ph id="ph2">&lt;xref:System.IntPtr.Zero?displayProperty=nameWithType&gt;</ph> für die <ph id="ph3">`pSecurityAttributes`</ph> und <ph id="ph4">`hTemplateFile`</ph> Argumentwerte gelten.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.IntPtr.Zero">
          <source>Although <ph id="ph1">&lt;xref:System.IntPtr.Zero&gt;</ph> is equivalent to <ph id="ph2">`null`</ph> for Windows API functions with parameters or return values that can be either pointers or <ph id="ph3">`null`</ph>, <ph id="ph4">&lt;xref:System.IntPtr.Zero&gt;</ph> is not equivalent to <ph id="ph5">`null`</ph>.</source>
          <target state="translated">Obwohl <ph id="ph1">&lt;xref:System.IntPtr.Zero&gt;</ph> entspricht <ph id="ph2">`null`</ph> für Windows-API-Funktionen mit Parametern oder Rückgabewerten, die beide Zeiger werden können oder <ph id="ph3">`null`</ph>, <ph id="ph4">&lt;xref:System.IntPtr.Zero&gt;</ph> entspricht nicht dem <ph id="ph5">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.IntPtr.Zero">
          <source>Passing <ph id="ph1">`null`</ph> to the <ph id="ph2">`IntPtr.Zero.Equals`</ph> method always returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Übergeben von <ph id="ph1">`null`</ph> auf die <ph id="ph2">`IntPtr.Zero.Equals`</ph> immer Methodenrückgabe <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.IntPtr.Zero">
          <source>You can also test for a <ph id="ph1">`null`</ph> return value from Windows API function calls that return either a pointer or a <ph id="ph2">`null`</ph> by comparing the returned value with <ph id="ph3">&lt;xref:System.IntPtr.Zero?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Sie können auch testen, für eine <ph id="ph1">`null`</ph> Rückgabewert aus Windows-API-Funktionsaufrufe ein, die entweder einen Zeiger zurückgeben oder ein <ph id="ph2">`null`</ph> durch Vergleichen des zurückgegebenen Werts mit <ph id="ph3">&lt;xref:System.IntPtr.Zero?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.IntPtr.Zero">
          <source>For example, the call to the <ph id="ph1">`GetWindow`</ph> function in the following example tries to retrieve the handle of a non-existent window.</source>
          <target state="translated">Z. B. der Aufruf der <ph id="ph1">`GetWindow`</ph> Funktion im folgenden Beispiel versucht, die das Handle eines Fensters nicht existierende abgerufen werden soll.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.IntPtr.Zero">
          <source>If it were called from unmanaged code, the function would return <ph id="ph1">`null`</ph>, but when it is called from managed code, it returns <ph id="ph2">&lt;xref:System.IntPtr.Zero?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Wenn sie von nicht verwaltetem Code aufgerufen wurden, würde die Funktion zurückgeben <ph id="ph1">`null`</ph>, wenn sie aus verwaltetem Code aufgerufen wird, gibt jedoch <ph id="ph2">&lt;xref:System.IntPtr.Zero?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>