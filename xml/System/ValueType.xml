<Type Name="ValueType" FullName="System.ValueType">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d7961a45dd5c909be4d66d64972923c01c6ef84f" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52589165" /></Metadata><TypeSignature Language="C#" Value="public abstract class ValueType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit ValueType extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ValueType" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ValueType" />
  <TypeSignature Language="C++ CLI" Value="public ref class ValueType abstract" />
  <TypeSignature Language="F#" Value="type ValueType = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4fdfa-101">Stellt die Basisklasse für Werttypen bereit.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-101">Provides the base class for value types.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fdfa-102"><xref:System.ValueType> überschreibt die virtuelle Methoden von <xref:System.Object> mit angemessener Implementierungen für Werttypen.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-102"><xref:System.ValueType> overrides the virtual methods from <xref:System.Object> with more appropriate implementations for value types.</span></span> <span data-ttu-id="4fdfa-103">Siehe auch <xref:System.Enum>, erbt von <xref:System.ValueType>.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-103">See also <xref:System.Enum>, which inherits from <xref:System.ValueType>.</span></span>  
  
 <span data-ttu-id="4fdfa-104">Datentypen werden in Werttypen und Referenztypen aufgeteilt.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-104">Data types are separated into value types and reference types.</span></span> <span data-ttu-id="4fdfa-105">Werttypen sind entweder Stapel zugeordneten oder Inline in einer Struktur zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-105">Value types are either stack-allocated or allocated inline in a structure.</span></span> <span data-ttu-id="4fdfa-106">Verweistypen werden Heaps zugewiesen.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-106">Reference types are heap-allocated.</span></span> <span data-ttu-id="4fdfa-107">Sowohl Verweis- und Werttypen sind die ultimative Basisklasse abgeleitet <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-107">Both reference and value types are derived from the ultimate base class <xref:System.Object>.</span></span> <span data-ttu-id="4fdfa-108">In Fällen, in denen es erforderlich, für einen Werttyp so verhält, wie ein Objekt ist, wird ein Wrapper, die den Werttyp sieht ein Verweisobjekt wird auf dem Heap zugeordnet, und der Wert des Werttyps in diese kopiert wird.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-108">In cases where it is necessary for a value type to behave like an object, a wrapper that makes the value type look like a reference object is allocated on the heap, and the value type's value is copied into it.</span></span> <span data-ttu-id="4fdfa-109">Der Wrapper wird markiert, damit das System weiß, dass es sich um einen Werttyp enthält.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-109">The wrapper is marked so the system knows that it contains a value type.</span></span> <span data-ttu-id="4fdfa-110">Dieser Prozess wird als Boxing bezeichnet, und der umgekehrte Vorgang wird als unboxing bezeichnet.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-110">This process is known as boxing, and the reverse process is known as unboxing.</span></span> <span data-ttu-id="4fdfa-111">Boxing und unboxing können beliebigen Typs als Objekt behandelt werden soll.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-111">Boxing and unboxing allow any type to be treated as an object.</span></span>  
  
 <span data-ttu-id="4fdfa-112">Obwohl <xref:System.ValueType> ist die implizite Basisklasse für Werttypen können keine Sie erstellen Sie eine Klasse, die von erbt <xref:System.ValueType> direkt.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-112">Although <xref:System.ValueType> is the implicit base class for value types, you cannot create a class that inherits from <xref:System.ValueType> directly.</span></span> <span data-ttu-id="4fdfa-113">Stattdessen einzelne Compiler bieten ein Programmiersprachen-Schlüsselwort, oder erstellen Sie (wie z. B. `struct` in C# geschrieben und `Structure`...`End Structure`</span><span class="sxs-lookup"><span data-stu-id="4fdfa-113">Instead, individual compilers provide a language keyword or construct (such as `struct` in C# and `Structure`…`End Structure`</span></span> <span data-ttu-id="4fdfa-114">in Visual Basic), um die Erstellung von Werttypen zu unterstützen.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-114">in Visual Basic) to support the creation of value types.</span></span>  
  
 <span data-ttu-id="4fdfa-115">Dient als Basisklasse für Werttypen in .NET Framework, abgesehen von den <xref:System.ValueType> Struktur wird in der Regel nicht direkt im Code verwendet.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-115">Aside from serving as the base class for value types in the .NET Framework, the <xref:System.ValueType> structure is generally not used directly in code.</span></span> <span data-ttu-id="4fdfa-116">Allerdings kann es als Parameter in Methodenaufrufe möglichen Argumente auf Werttypen alle Objekte zu beschränken, oder eine Methode zur Handhabung einer Anzahl von verschiedenen Werttypen zuzulassen, verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-116">However, it can be used as a parameter in method calls to restrict possible arguments to value types instead of all objects, or to permit a method to handle a number of different value types.</span></span> <span data-ttu-id="4fdfa-117">Im folgende Beispiel wird veranschaulicht, wie <xref:System.ValueType> verhindert, dass Verweistypen an Methoden übergeben werden.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-117">The following example illustrates how <xref:System.ValueType> prevents reference types from being passed to methods.</span></span> <span data-ttu-id="4fdfa-118">Es definiert eine Klasse namens `Utility` , enthält vier Methoden: `IsNumeric`, der angibt, ob das Argument eine Zahl ist. `IsInteger`, der angibt, ob das Argument eine ganze Zahl ist; `IsFloat`, der angibt, ob das Argument eine Gleitkommazahl; ist und `Compare`, womit die Beziehung zwischen zwei numerische Werte.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-118">It defines a class named `Utility` that contains four methods: `IsNumeric`, which indicates whether its argument is a number; `IsInteger`, which indicates whether its argument is an integer; `IsFloat`, which indicates whether its argument is a floating-point number; and `Compare`, which indicates the relationship between two numeric values.</span></span> <span data-ttu-id="4fdfa-119">In jedem Fall sind die Methodenparameter vom Typ <xref:System.ValueType>, und Verweistypen werden daran gehindert, die an die Methoden übergeben werden.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-119">In each case, the method parameters are of type <xref:System.ValueType>, and reference types are prevented from being passed to the methods.</span></span>  
  
 [!code-csharp[System.ValueType.Structure#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.valuetype.structure/cs/example1.cs#1)]
 [!code-vb[System.ValueType.Structure#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.valuetype.structure/vb/example1.vb#1)]  
  
 <span data-ttu-id="4fdfa-120">Das folgende Beispiel veranschaulicht Aufrufe der Methoden der `Utility` Klasse.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-120">The following example illustrates calls to the methods of the `Utility` class.</span></span>  
  
 [!code-csharp[System.ValueType.Structure#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.valuetype.structure/cs/example1.cs#2)]
 [!code-vb[System.ValueType.Structure#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.valuetype.structure/vb/example1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Object" />
    <altmember cref="T:System.Enum" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ValueType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueType.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ValueType();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4fdfa-121">Initialisiert eine neue Instanz der <see cref="T:System.ValueType" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-121">Initializes a new instance of the <see cref="T:System.ValueType" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueType.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="valueType.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="4fdfa-122">Das Objekt, das mit der aktuellen Instanz verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-122">The object to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="4fdfa-123">Gibt an, ob diese Instanz und ein angegebenes Objekt gleich sind.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-123">Indicates whether this instance and a specified object are equal.</span></span></summary>
        <returns><span data-ttu-id="4fdfa-124"><see langword="true" />, wenn <paramref name="obj" /> und diese Instanz denselben Typ aufweisen und denselben Wert darstellen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-124"><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fdfa-125">Die <xref:System.ValueType.Equals%28System.Object%29?displayProperty=nameWithType> methodenüberschreibungen <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> und stellt die Standardimplementierung der Wertgleichheit für alle Werttypen in .NET Framework bereit.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-125">The <xref:System.ValueType.Equals%28System.Object%29?displayProperty=nameWithType> method overrides <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> and provides the default implementation of value equality for all value types in the .NET Framework.</span></span>  
  
 <span data-ttu-id="4fdfa-126">Wenn keines der Felder der aktuellen Instanz und `obj` sind Referenztypen, die <xref:System.ValueType.Equals%2A> -Methode führt einen Byte-pro-Byte-Vergleich der beiden Objekte im Arbeitsspeicher.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-126">If none of the fields of the current instance and `obj` are reference types, the <xref:System.ValueType.Equals%2A> method performs a byte-by-byte comparison of the two objects in memory.</span></span> <span data-ttu-id="4fdfa-127">Andernfalls wird Reflektion zum Vergleichen von der entsprechenden Feldes von `obj` und diese Instanz.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-127">Otherwise, it uses reflection to compare the corresponding fields of `obj` and this instance.</span></span>  
  
> [!TIP]
>  <span data-ttu-id="4fdfa-128">Insbesondere dann, wenn der Werttyp Felder, die Verweistypen sind enthält, sollten Sie Sie überschreiben die <xref:System.ValueType.Equals%28System.Object%29> Methode.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-128">Particularly if your value type contains fields that are reference types, you should override the <xref:System.ValueType.Equals%28System.Object%29> method.</span></span> <span data-ttu-id="4fdfa-129">Dies kann die Leistung verbessern und ermöglichen es Ihnen, die Bedeutung der Gleichheit für den Typ genauer darstellen.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-129">This can improve performance and enable you to more closely represent the meaning of equality for the type.</span></span>  
  
## <a name="notes-for-the-includewrtincludeswrt-mdmd"></a><span data-ttu-id="4fdfa-130">Anmerkungen zu dieser von der [!INCLUDE[wrt](~/includes/wrt-md.md)]</span><span class="sxs-lookup"><span data-stu-id="4fdfa-130">Notes for the [!INCLUDE[wrt](~/includes/wrt-md.md)]</span></span>  
 <span data-ttu-id="4fdfa-131">Beim Aufrufen der <xref:System.ValueType.Equals%2A> Methode für eine [!INCLUDE[wrt](~/includes/wrt-md.md)] Struktur, ist es das Standardverhalten für Werttypen, die nicht außer Kraft setzen <xref:System.ValueType.Equals%2A>.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-131">When you call the <xref:System.ValueType.Equals%2A> method on a [!INCLUDE[wrt](~/includes/wrt-md.md)] structure, it provides the default behavior for value types that don't override <xref:System.ValueType.Equals%2A>.</span></span> <span data-ttu-id="4fdfa-132">Dies ist Teil der Unterstützung von .NET Framework für die [!INCLUDE[wrt](~/includes/wrt-md.md)] (finden Sie unter [.NET Framework Unterstützung für Windows Store-Apps und Windows-Runtime](~/docs/standard/cross-platform/support-for-windows-store-apps-and-windows-runtime.md)).</span><span class="sxs-lookup"><span data-stu-id="4fdfa-132">This is part of the support that the .NET Framework provides for the [!INCLUDE[wrt](~/includes/wrt-md.md)] (see [.NET Framework Support for Windows Store Apps and Windows Runtime](~/docs/standard/cross-platform/support-for-windows-store-apps-and-windows-runtime.md)).</span></span> [!INCLUDE[wrt](~/includes/wrt-md.md)] <span data-ttu-id="4fdfa-133">Strukturen können nicht außer Kraft setzen <xref:System.ValueType.Equals%2A>, auch wenn sie mit geschrieben werden C# oder Visual Basic, da diese Methoden enthalten können.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-133">structures can't override <xref:System.ValueType.Equals%2A>, even if they're written with C# or Visual Basic, because they can't have methods.</span></span> <span data-ttu-id="4fdfa-134">(Darüber hinaus Strukturen in der [!INCLUDE[wrt](~/includes/wrt-md.md)] selbst nicht erben <xref:System.ValueType>.) Allerdings haben sie anscheinend <xref:System.ValueType.ToString%2A>, <xref:System.ValueType.Equals%2A>, und <xref:System.ValueType.GetHashCode%2A> Methoden ein, wenn Sie diese in Ihrem C#- oder Visual Basic-Code verwenden und .NET Framework das Standardverhalten für diese Methoden ist.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-134">(In addition, structures in the [!INCLUDE[wrt](~/includes/wrt-md.md)] itself don't inherit <xref:System.ValueType>.) However, they appear to have <xref:System.ValueType.ToString%2A>, <xref:System.ValueType.Equals%2A>, and <xref:System.ValueType.GetHashCode%2A> methods when you use them in your C# or Visual Basic code, and the .NET Framework provides the default behavior for these methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fdfa-135">Im folgende Beispiel wird veranschaulicht, wie die <xref:System.ValueType.Equals%2A> Methode kann von einem abgeleiteten Typ überschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-135">The following example demonstrates how the <xref:System.ValueType.Equals%2A> method can be overridden by a derived value type.</span></span>  
  
 [!code-cpp[ValueType.Equals Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/ValueType.Equals Example/CPP/source.cpp#1)]
 [!code-csharp[ValueType.Equals Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/ValueType.Equals Example/CS/source.cs#1)]
 [!code-vb[ValueType.Equals Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ValueType.Equals Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueType.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="valueType.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4fdfa-136">Gibt den Hashcode für diese Instanz zurück.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-136">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="4fdfa-137">Eine 32-Bit-Ganzzahl mit Vorzeichen. Diese ist der Hashcode für die Instanz.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-137">A 32-bit signed integer that is the hash code for this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fdfa-138">Die <xref:System.ValueType.GetHashCode%2A> Methode gilt für die von abgeleiteten Typen <xref:System.ValueType>.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-138">The <xref:System.ValueType.GetHashCode%2A> method applies to types derived from <xref:System.ValueType>.</span></span> <span data-ttu-id="4fdfa-139">Ein oder mehrere Felder des abgeleiteten Typs wird verwendet, um den Rückgabewert zu berechnen.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-139">One or more fields of the derived type is used to calculate the return value.</span></span> <span data-ttu-id="4fdfa-140">Wenn Sie des abgeleiteten Typs aufrufen `GetHashCode` -Methode, der Rückgabewert wahrscheinlich nicht für die Verwendung als Schlüssel in einer Hashtabelle geeignet.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-140">If you call the derived type's `GetHashCode` method, the return value is not likely to be suitable for use as a key in a hash table.</span></span> <span data-ttu-id="4fdfa-141">Darüber hinaus kann der Wert aus einem oder mehreren dieser Felder geändert wird, ungeeignet für die Verwendung in einer Hashtabelle als Schlüssel zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-141">Additionally, if the value of one or more of those fields changes, the return value might become unsuitable for use as a key in a hash table.</span></span> <span data-ttu-id="4fdfa-142">In beiden Fällen sollten Sie eine eigene Implementierung schreiben die <xref:System.ValueType.GetHashCode%2A> -Methode, genauer das Konzept der ein Hashcode für den Typ darstellt.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-142">In either case, consider writing your own implementation of the <xref:System.ValueType.GetHashCode%2A> method that more closely represents the concept of a hash code for the type.</span></span>  
  
 <span data-ttu-id="4fdfa-143">Weitere Informationen finden Sie unter <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> und <xref:System.Collections.Hashtable?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-143">For more information, see <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>, and <xref:System.Collections.Hashtable?displayProperty=nameWithType>.</span></span>  
  
## <a name="notes-for-the-includewrtincludeswrt-mdmd"></a><span data-ttu-id="4fdfa-144">Anmerkungen zu dieser von der [!INCLUDE[wrt](~/includes/wrt-md.md)]</span><span class="sxs-lookup"><span data-stu-id="4fdfa-144">Notes for the [!INCLUDE[wrt](~/includes/wrt-md.md)]</span></span>  
 <span data-ttu-id="4fdfa-145">Beim Aufrufen der <xref:System.ValueType.GetHashCode%2A> Methode für eine [!INCLUDE[wrt](~/includes/wrt-md.md)] Struktur, ist es das Standardverhalten für Werttypen, die nicht außer Kraft setzen <xref:System.ValueType.GetHashCode%2A>.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-145">When you call the <xref:System.ValueType.GetHashCode%2A> method on a [!INCLUDE[wrt](~/includes/wrt-md.md)] structure, it provides the default behavior for value types that don't override <xref:System.ValueType.GetHashCode%2A>.</span></span> <span data-ttu-id="4fdfa-146">Dies ist Teil der Unterstützung von .NET Framework für die [!INCLUDE[wrt](~/includes/wrt-md.md)] (finden Sie unter [.NET Framework Unterstützung für Windows Store-Apps und Windows-Runtime](~/docs/standard/cross-platform/support-for-windows-store-apps-and-windows-runtime.md)).</span><span class="sxs-lookup"><span data-stu-id="4fdfa-146">This is part of the support that the .NET Framework provides for the [!INCLUDE[wrt](~/includes/wrt-md.md)] (see [.NET Framework Support for Windows Store Apps and Windows Runtime](~/docs/standard/cross-platform/support-for-windows-store-apps-and-windows-runtime.md)).</span></span> [!INCLUDE[wrt](~/includes/wrt-md.md)] <span data-ttu-id="4fdfa-147">Strukturen können nicht außer Kraft setzen <xref:System.ValueType.GetHashCode%2A>, auch wenn sie mit geschrieben werden C# oder Visual Basic, da diese Methoden enthalten können.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-147">structures can't override <xref:System.ValueType.GetHashCode%2A>, even if they're written with C# or Visual Basic, because they can't have methods.</span></span> <span data-ttu-id="4fdfa-148">(Darüber hinaus Strukturen in der [!INCLUDE[wrt](~/includes/wrt-md.md)] selbst nicht erben <xref:System.ValueType>.) Allerdings haben sie anscheinend <xref:System.ValueType.ToString%2A>, <xref:System.ValueType.Equals%2A>, und <xref:System.ValueType.GetHashCode%2A> Methoden ein, wenn Sie diese in Ihrem C#- oder Visual Basic-Code verwenden und .NET Framework das Standardverhalten für diese Methoden ist.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-148">(In addition, structures in the [!INCLUDE[wrt](~/includes/wrt-md.md)] itself don't inherit <xref:System.ValueType>.) However, they appear to have <xref:System.ValueType.ToString%2A>, <xref:System.ValueType.Equals%2A>, and <xref:System.ValueType.GetHashCode%2A> methods when you use them in your C# or Visual Basic code, and the .NET Framework provides the default behavior for these methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fdfa-149">Im folgende Beispiel wird veranschaulicht, wie die <xref:System.ValueType.GetHashCode%2A> Methode kann von einem abgeleiteten Typ überschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-149">The following example demonstrates how the <xref:System.ValueType.GetHashCode%2A> method can be overridden by a derived value type.</span></span>  
  
 [!code-cpp[ValueType.Equals Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/ValueType.Equals Example/CPP/source.cpp#1)]
 [!code-csharp[ValueType.Equals Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/ValueType.Equals Example/CS/source.cs#1)]
 [!code-vb[ValueType.Equals Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ValueType.Equals Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueType.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="valueType.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4fdfa-150">Gibt den voll qualifizierten Typnamen dieser Instanz zurück.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-150">Returns the fully qualified type name of this instance.</span></span></summary>
        <returns><span data-ttu-id="4fdfa-151">Der vollqualifizierte Typname.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-151">The fully qualified type name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fdfa-152">Die <xref:System.ValueType.ToString%2A?displayProperty=nameWithType> methodenüberschreibungen der <xref:System.Object.ToString%2A?displayProperty=nameWithType> Methode und stellt die Standardimplementierung von der `ToString` -Methode für Werttypen.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-152">The <xref:System.ValueType.ToString%2A?displayProperty=nameWithType> method overrides the <xref:System.Object.ToString%2A?displayProperty=nameWithType> method and provides the default implementation of the `ToString` method for value types.</span></span> <span data-ttu-id="4fdfa-153">(Werttypen sind Typen von definiert die `struct` Schlüsselwort in C# geschrieben und von der `Structure`... `End Structure` in Visual Basic erstellen.) Funktionell die Implementierung ist jedoch das gleiche wie der <xref:System.Object.ToString%2A?displayProperty=nameWithType>: die Methode gibt den vollqualifizierten Typnamen zurück.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-153">(Value types are types defined by the `struct` keyword in C#, and by the `Structure`...`End Structure` construct in Visual Basic.) Functionally, however, the implementation is that same as that of <xref:System.Object.ToString%2A?displayProperty=nameWithType>: the method returns the fully qualified type name.</span></span>  
  
 <span data-ttu-id="4fdfa-154">Werttypen, die von definiert die `struct` -Schlüsselwort in c# und die `Structure`... `End Structure` Konstrukt in Visual Basic in der Regel überschreiben die <xref:System.ValueType.ToString%2A?displayProperty=nameWithType> Methode, um eine aussagekräftigere Zeichenfolgendarstellung des Werttyps bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-154">Value types defined by the `struct` keyword in C# and the `Structure`...`End Structure` construct in Visual Basic typically override the <xref:System.ValueType.ToString%2A?displayProperty=nameWithType> method to provide a more meaningful string representation of the value type.</span></span> <span data-ttu-id="4fdfa-155">Der Unterschied wird im folgenden Beispiel veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-155">The following example illustrates the difference.</span></span> <span data-ttu-id="4fdfa-156">Es definiert zwei Typen mit Werten `EmployeeA` und `EmployeeB`, erstellt eine Instanz jedes und ruft seine `ToString` Methode.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-156">It defines two value types, `EmployeeA` and `EmployeeB`, creates an instance of each, and calls its `ToString` method.</span></span> <span data-ttu-id="4fdfa-157">Da der `EmployeeA` Struktur überschreibt nicht die <xref:System.ValueType.ToString%2A?displayProperty=nameWithType> -Methode, es zeigt nur den vollqualifizierten Typnamen.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-157">Because the `EmployeeA` structure does not override the <xref:System.ValueType.ToString%2A?displayProperty=nameWithType> method, it displays only the fully qualified type name.</span></span> <span data-ttu-id="4fdfa-158">Die `EmployeeB.ToString` -Methode bietet dagegen auf aussagekräftige Informationen über das Objekt.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-158">The `EmployeeB.ToString` method, on the other hand, provides meaningful information about the object.</span></span>  
  
 [!code-csharp[System.ValueType.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ValueType.ToString/cs/ToString2.cs#1)]
 [!code-vb[System.ValueType.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ValueType.ToString/vb/ToString2.vb#1)]  
  
 <span data-ttu-id="4fdfa-159">Beachten Sie, dass obwohl Enumerationstypen auch Werttypen sind, von Ableiten der <xref:System.Enum> Klasse, welche Außerkraftsetzungen <xref:System.ValueType.ToString%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-159">Note that, although enumeration types are also value types, they derive from the <xref:System.Enum> class, which overrides  <xref:System.ValueType.ToString%2A?displayProperty=nameWithType>.</span></span>  
  
## <a name="notes-for-the-windows-runtime"></a><span data-ttu-id="4fdfa-160">Anmerkungen zu dieser Version für die Windows-Runtime</span><span class="sxs-lookup"><span data-stu-id="4fdfa-160">Notes for the Windows Runtime</span></span>  
 <span data-ttu-id="4fdfa-161">Beim Aufrufen der <xref:System.ValueType.ToString%2A> Methode für eine [!INCLUDE[wrt](~/includes/wrt-md.md)] Struktur, ist es das Standardverhalten für Werttypen, die nicht außer Kraft setzen <xref:System.ValueType.ToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-161">When you call the <xref:System.ValueType.ToString%2A> method on a [!INCLUDE[wrt](~/includes/wrt-md.md)] structure, it provides the default behavior for value types that don't override <xref:System.ValueType.ToString%2A>.</span></span> <span data-ttu-id="4fdfa-162">Dies ist Teil der Unterstützung von .NET Framework für die [!INCLUDE[wrt](~/includes/wrt-md.md)] (finden Sie unter [.NET Framework Unterstützung für Windows Store-Apps und Windows-Runtime](~/docs/standard/cross-platform/support-for-windows-store-apps-and-windows-runtime.md)).</span><span class="sxs-lookup"><span data-stu-id="4fdfa-162">This is part of the support that the .NET Framework provides for the [!INCLUDE[wrt](~/includes/wrt-md.md)] (see [.NET Framework Support for Windows Store Apps and Windows Runtime](~/docs/standard/cross-platform/support-for-windows-store-apps-and-windows-runtime.md)).</span></span> [!INCLUDE[wrt](~/includes/wrt-md.md)] <span data-ttu-id="4fdfa-163">Strukturen können nicht außer Kraft setzen <xref:System.ValueType.ToString%2A>, auch wenn sie mit geschrieben werden C# oder Visual Basic, da diese Methoden enthalten können.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-163">structures can't override <xref:System.ValueType.ToString%2A>, even if they're written with C# or Visual Basic, because they can't have methods.</span></span> <span data-ttu-id="4fdfa-164">(Darüber hinaus Strukturen in der [!INCLUDE[wrt](~/includes/wrt-md.md)] selbst nicht erben <xref:System.ValueType>.) Allerdings haben sie anscheinend <xref:System.ValueType.ToString%2A>, <xref:System.ValueType.Equals%2A>, und <xref:System.ValueType.GetHashCode%2A> Methoden ein, wenn Sie diese in Ihrem C#- oder Visual Basic-Code verwenden und .NET Framework das Standardverhalten für diese Methoden ist.</span><span class="sxs-lookup"><span data-stu-id="4fdfa-164">(In addition, structures in the [!INCLUDE[wrt](~/includes/wrt-md.md)] itself don't inherit <xref:System.ValueType>.) However, they appear to have <xref:System.ValueType.ToString%2A>, <xref:System.ValueType.Equals%2A>, and <xref:System.ValueType.GetHashCode%2A> methods when you use them in your C# or Visual Basic code, and the .NET Framework provides the default behavior for these methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>