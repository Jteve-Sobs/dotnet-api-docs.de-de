<Type Name="ValueType" FullName="System.ValueType">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ef54065645b4e3acf79121680d7e82bb4b2b12f4" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75037993" /></Metadata><TypeSignature Language="C#" Value="public abstract class ValueType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit ValueType extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ValueType" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ValueType" />
  <TypeSignature Language="C++ CLI" Value="public ref class ValueType abstract" />
  <TypeSignature Language="F#" Value="type ValueType = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4e666-101">Stellt die Basisklasse für Werttypen bereit.</span><span class="sxs-lookup"><span data-stu-id="4e666-101">Provides the base class for value types.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e666-102"><xref:System.ValueType> überschreibt die virtuellen Methoden <xref:System.Object> mit geeigneteren Implementierungen für Werttypen.</span><span class="sxs-lookup"><span data-stu-id="4e666-102"><xref:System.ValueType> overrides the virtual methods from <xref:System.Object> with more appropriate implementations for value types.</span></span> <span data-ttu-id="4e666-103">Siehe auch <xref:System.Enum>, die von <xref:System.ValueType>erbt.</span><span class="sxs-lookup"><span data-stu-id="4e666-103">See also <xref:System.Enum>, which inherits from <xref:System.ValueType>.</span></span>  
  
 <span data-ttu-id="4e666-104">Datentypen werden in Werttypen und Verweis Typen unterteilt.</span><span class="sxs-lookup"><span data-stu-id="4e666-104">Data types are separated into value types and reference types.</span></span> <span data-ttu-id="4e666-105">Werttypen werden entweder in einem Stapel zugeordnet oder Inline in einer Struktur zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="4e666-105">Value types are either stack-allocated or allocated inline in a structure.</span></span> <span data-ttu-id="4e666-106">Verweis Typen werden Heap zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="4e666-106">Reference types are heap-allocated.</span></span> <span data-ttu-id="4e666-107">Verweis-und Werttypen werden von der Ultimate-Basisklasse <xref:System.Object>abgeleitet.</span><span class="sxs-lookup"><span data-stu-id="4e666-107">Both reference and value types are derived from the ultimate base class <xref:System.Object>.</span></span> <span data-ttu-id="4e666-108">In Fällen, in denen es erforderlich ist, dass sich ein Werttyp wie ein Objekt verhält, wird ein Wrapper, der den Werttyp als Verweis Objekt ausgleicht, auf dem Heap zugeordnet, und der Wert des Werttyps wird in ihn kopiert.</span><span class="sxs-lookup"><span data-stu-id="4e666-108">In cases where it is necessary for a value type to behave like an object, a wrapper that makes the value type look like a reference object is allocated on the heap, and the value type's value is copied into it.</span></span> <span data-ttu-id="4e666-109">Der Wrapper ist so gekennzeichnet, dass das System weiß, dass es einen Werttyp enthält.</span><span class="sxs-lookup"><span data-stu-id="4e666-109">The wrapper is marked so the system knows that it contains a value type.</span></span> <span data-ttu-id="4e666-110">Dieser Prozess wird als Boxing bezeichnet, und der umgekehrte Prozess wird als Unboxing bezeichnet.</span><span class="sxs-lookup"><span data-stu-id="4e666-110">This process is known as boxing, and the reverse process is known as unboxing.</span></span> <span data-ttu-id="4e666-111">Beim Boxing und Unboxing kann jeder Typ als Objekt behandelt werden.</span><span class="sxs-lookup"><span data-stu-id="4e666-111">Boxing and unboxing allow any type to be treated as an object.</span></span>  
  
 <span data-ttu-id="4e666-112">Obwohl <xref:System.ValueType> die implizite Basisklasse für Werttypen ist, können Sie keine Klasse erstellen, die von <xref:System.ValueType> direkt erbt.</span><span class="sxs-lookup"><span data-stu-id="4e666-112">Although <xref:System.ValueType> is the implicit base class for value types, you cannot create a class that inherits from <xref:System.ValueType> directly.</span></span> <span data-ttu-id="4e666-113">Stattdessen stellen einzelne Compiler ein sprach Schlüsselwort oder Konstrukt bereit (z. b C# . `struct` in und `Structure`...`End Structure`</span><span class="sxs-lookup"><span data-stu-id="4e666-113">Instead, individual compilers provide a language keyword or construct (such as `struct` in C# and `Structure`…`End Structure`</span></span> <span data-ttu-id="4e666-114">in Visual Basic), um die Erstellung von Werttypen zu unterstützen.</span><span class="sxs-lookup"><span data-stu-id="4e666-114">in Visual Basic) to support the creation of value types.</span></span>  
  
 <span data-ttu-id="4e666-115">Abgesehen von der Bereitstellung als Basisklasse für Werttypen im .NET Framework wird die <xref:System.ValueType> Struktur in der Regel nicht direkt im Code verwendet.</span><span class="sxs-lookup"><span data-stu-id="4e666-115">Aside from serving as the base class for value types in the .NET Framework, the <xref:System.ValueType> structure is generally not used directly in code.</span></span> <span data-ttu-id="4e666-116">Sie kann jedoch als Parameter in Methoden aufrufen verwendet werden, um mögliche Argumente auf Werttypen anstelle von allen Objekten zu beschränken, oder um eine Methode für die Verarbeitung einer Reihe unterschiedlicher Werttypen zuzulassen.</span><span class="sxs-lookup"><span data-stu-id="4e666-116">However, it can be used as a parameter in method calls to restrict possible arguments to value types instead of all objects, or to permit a method to handle a number of different value types.</span></span> <span data-ttu-id="4e666-117">Im folgenden Beispiel wird veranschaulicht, wie <xref:System.ValueType> verhindert, dass Verweis Typen an Methoden übermittelt werden.</span><span class="sxs-lookup"><span data-stu-id="4e666-117">The following example illustrates how <xref:System.ValueType> prevents reference types from being passed to methods.</span></span> <span data-ttu-id="4e666-118">Er definiert eine Klasse mit dem Namen `Utility`, die vier Methoden enthält: `IsNumeric`, der angibt, ob das Argument eine Zahl ist. `IsInteger`, das angibt, ob das Argument eine ganze Zahl ist. `IsFloat`, das angibt, ob das Argument eine Gleit Komma Zahl ist. und `Compare`, womit die Beziehung zwischen zwei numerischen Werten angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="4e666-118">It defines a class named `Utility` that contains four methods: `IsNumeric`, which indicates whether its argument is a number; `IsInteger`, which indicates whether its argument is an integer; `IsFloat`, which indicates whether its argument is a floating-point number; and `Compare`, which indicates the relationship between two numeric values.</span></span> <span data-ttu-id="4e666-119">In jedem Fall sind die Methoden Parameter vom Typ <xref:System.ValueType>, und die Übergabe von Verweis Typen an die Methoden wird verhindert.</span><span class="sxs-lookup"><span data-stu-id="4e666-119">In each case, the method parameters are of type <xref:System.ValueType>, and reference types are prevented from being passed to the methods.</span></span>  
  
 [!code-csharp[System.ValueType.Structure#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.valuetype.structure/cs/example1.cs#1)]
 [!code-vb[System.ValueType.Structure#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.valuetype.structure/vb/example1.vb#1)]  
  
 <span data-ttu-id="4e666-120">Das folgende Beispiel veranschaulicht Aufrufe der-Methoden der `Utility`-Klasse.</span><span class="sxs-lookup"><span data-stu-id="4e666-120">The following example illustrates calls to the methods of the `Utility` class.</span></span>  
  
 [!code-csharp[System.ValueType.Structure#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.valuetype.structure/cs/example1.cs#2)]
 [!code-vb[System.ValueType.Structure#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.valuetype.structure/vb/example1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Object" />
    <altmember cref="T:System.Enum" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ValueType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueType.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ValueType();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4e666-121">Initialisiert eine neue Instanz der <see cref="T:System.ValueType" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="4e666-121">Initializes a new instance of the <see cref="T:System.ValueType" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueType.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="valueType.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="4e666-122">Das Objekt, das mit der aktuellen Instanz verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e666-122">The object to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="4e666-123">Gibt an, ob diese Instanz und ein angegebenes Objekt gleich sind.</span><span class="sxs-lookup"><span data-stu-id="4e666-123">Indicates whether this instance and a specified object are equal.</span></span></summary>
        <returns><span data-ttu-id="4e666-124"><see langword="true" />, wenn <paramref name="obj" /> und diese Instanz denselben Typ aufweisen und denselben Wert darstellen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4e666-124"><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e666-125">Die <xref:System.ValueType.Equals%28System.Object%29?displayProperty=nameWithType>-Methode überschreibt <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> und stellt die Standard Implementierung der Wert Gleichheit für alle Werttypen im .NET Framework bereit.</span><span class="sxs-lookup"><span data-stu-id="4e666-125">The <xref:System.ValueType.Equals%28System.Object%29?displayProperty=nameWithType> method overrides <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> and provides the default implementation of value equality for all value types in the .NET Framework.</span></span>  
  
 <span data-ttu-id="4e666-126">Die Standard Implementierung ruft <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> für jedes Feld der aktuellen Instanz auf und `obj` und gibt `true` zurück, wenn alle Felder gleich sind.</span><span class="sxs-lookup"><span data-stu-id="4e666-126">The default implementation calls <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> on each field of the current instance and `obj` and returns `true` if all fields are equal.</span></span>
  
> [!TIP]
>  <span data-ttu-id="4e666-127">Insbesondere wenn der Werttyp Felder enthält, die Verweis Typen sind, sollten Sie die <xref:System.ValueType.Equals%28System.Object%29>-Methode überschreiben.</span><span class="sxs-lookup"><span data-stu-id="4e666-127">Particularly if your value type contains fields that are reference types, you should override the <xref:System.ValueType.Equals%28System.Object%29> method.</span></span> <span data-ttu-id="4e666-128">Dies kann die Leistung verbessern und es Ihnen ermöglichen, die Bedeutung der Gleichheit für den Typ genauer darzustellen.</span><span class="sxs-lookup"><span data-stu-id="4e666-128">This can improve performance and enable you to more closely represent the meaning of equality for the type.</span></span>  
  
## <a name="notes-for-the-includewrtincludeswrt-mdmd"></a><span data-ttu-id="4e666-129">Hinweise für den [!INCLUDE[wrt](~/includes/wrt-md.md)]</span><span class="sxs-lookup"><span data-stu-id="4e666-129">Notes for the [!INCLUDE[wrt](~/includes/wrt-md.md)]</span></span>  
 <span data-ttu-id="4e666-130">Wenn Sie die <xref:System.ValueType.Equals%2A>-Methode für eine [!INCLUDE[wrt](~/includes/wrt-md.md)] Struktur aufzurufen, wird das Standardverhalten für Werttypen bereitstellt, die <xref:System.ValueType.Equals%2A>nicht überschreiben.</span><span class="sxs-lookup"><span data-stu-id="4e666-130">When you call the <xref:System.ValueType.Equals%2A> method on a [!INCLUDE[wrt](~/includes/wrt-md.md)] structure, it provides the default behavior for value types that don't override <xref:System.ValueType.Equals%2A>.</span></span> <span data-ttu-id="4e666-131">Dies ist ein Teil der Unterstützung, die der .NET Framework für die [!INCLUDE[wrt](~/includes/wrt-md.md)] bietet (siehe [.NET Framework Support für Windows Store-Apps und Windows-Runtime](~/docs/standard/cross-platform/support-for-windows-store-apps-and-windows-runtime.md)).</span><span class="sxs-lookup"><span data-stu-id="4e666-131">This is part of the support that the .NET Framework provides for the [!INCLUDE[wrt](~/includes/wrt-md.md)] (see [.NET Framework Support for Windows Store Apps and Windows Runtime](~/docs/standard/cross-platform/support-for-windows-store-apps-and-windows-runtime.md)).</span></span> [!INCLUDE[wrt](~/includes/wrt-md.md)] <span data-ttu-id="4e666-132">Strukturen können <xref:System.ValueType.Equals%2A>nicht überschreiben, auch wenn Sie mit C# oder Visual Basic geschrieben sind, da Sie keine Methoden aufweisen können.</span><span class="sxs-lookup"><span data-stu-id="4e666-132">structures can't override <xref:System.ValueType.Equals%2A>, even if they're written with C# or Visual Basic, because they can't have methods.</span></span> <span data-ttu-id="4e666-133">(Darüber hinaus erben Strukturen im [!INCLUDE[wrt](~/includes/wrt-md.md)] selbst nicht <xref:System.ValueType>.) Sie scheinen jedoch <xref:System.ValueType.ToString%2A>-, <xref:System.ValueType.Equals%2A>-und <xref:System.ValueType.GetHashCode%2A>-Methoden zu haben, wenn Sie Sie im C# -oder-Visual Basic Code verwenden, und das .NET Framework stellt das Standardverhalten für diese Methoden bereit.</span><span class="sxs-lookup"><span data-stu-id="4e666-133">(In addition, structures in the [!INCLUDE[wrt](~/includes/wrt-md.md)] itself don't inherit <xref:System.ValueType>.) However, they appear to have <xref:System.ValueType.ToString%2A>, <xref:System.ValueType.Equals%2A>, and <xref:System.ValueType.GetHashCode%2A> methods when you use them in your C# or Visual Basic code, and the .NET Framework provides the default behavior for these methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4e666-134">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.ValueType.Equals%2A> Methode von einem abgeleiteten Werttyp überschrieben werden kann.</span><span class="sxs-lookup"><span data-stu-id="4e666-134">The following example demonstrates how the <xref:System.ValueType.Equals%2A> method can be overridden by a derived value type.</span></span>  
  
 [!code-cpp[ValueType.Equals Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/ValueType.Equals Example/CPP/source.cpp#1)]
 [!code-csharp[ValueType.Equals Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/ValueType.Equals Example/CS/source.cs#1)]
 [!code-vb[ValueType.Equals Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ValueType.Equals Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueType.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="valueType.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4e666-135">Gibt den Hashcode für diese Instanz zurück.</span><span class="sxs-lookup"><span data-stu-id="4e666-135">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="4e666-136">Eine 32-Bit-Ganzzahl mit Vorzeichen. Diese ist der Hashcode für die Instanz.</span><span class="sxs-lookup"><span data-stu-id="4e666-136">A 32-bit signed integer that is the hash code for this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e666-137">Die <xref:System.ValueType.GetHashCode%2A>-Methode gilt für Typen, die von <xref:System.ValueType>abgeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="4e666-137">The <xref:System.ValueType.GetHashCode%2A> method applies to types derived from <xref:System.ValueType>.</span></span> <span data-ttu-id="4e666-138">Ein oder mehrere Felder des abgeleiteten Typs werden verwendet, um den Rückgabewert zu berechnen.</span><span class="sxs-lookup"><span data-stu-id="4e666-138">One or more fields of the derived type is used to calculate the return value.</span></span> <span data-ttu-id="4e666-139">Wenn Sie die `GetHashCode`-Methode des abgeleiteten Typs aufzurufen, ist der Rückgabewert wahrscheinlich nicht für die Verwendung als Schlüssel in einer Hash Tabelle geeignet.</span><span class="sxs-lookup"><span data-stu-id="4e666-139">If you call the derived type's `GetHashCode` method, the return value is not likely to be suitable for use as a key in a hash table.</span></span> <span data-ttu-id="4e666-140">Wenn sich der Wert eines oder mehrerer dieser Felder ändert, wird der Rückgabewert möglicherweise ungeeignet für die Verwendung als Schlüssel in einer Hash Tabelle.</span><span class="sxs-lookup"><span data-stu-id="4e666-140">Additionally, if the value of one or more of those fields changes, the return value might become unsuitable for use as a key in a hash table.</span></span> <span data-ttu-id="4e666-141">In jedem Fall sollten Sie eine eigene Implementierung der <xref:System.ValueType.GetHashCode%2A>-Methode schreiben, die das Konzept eines Hashcodes für den Typ genauer darstellt.</span><span class="sxs-lookup"><span data-stu-id="4e666-141">In either case, consider writing your own implementation of the <xref:System.ValueType.GetHashCode%2A> method that more closely represents the concept of a hash code for the type.</span></span>  
  
 <span data-ttu-id="4e666-142">Weitere Informationen finden Sie unter <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> und <xref:System.Collections.Hashtable?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4e666-142">For more information, see <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>, and <xref:System.Collections.Hashtable?displayProperty=nameWithType>.</span></span>  
  
## <a name="notes-for-the-includewrtincludeswrt-mdmd"></a><span data-ttu-id="4e666-143">Hinweise für den [!INCLUDE[wrt](~/includes/wrt-md.md)]</span><span class="sxs-lookup"><span data-stu-id="4e666-143">Notes for the [!INCLUDE[wrt](~/includes/wrt-md.md)]</span></span>  
 <span data-ttu-id="4e666-144">Wenn Sie die <xref:System.ValueType.GetHashCode%2A>-Methode für eine [!INCLUDE[wrt](~/includes/wrt-md.md)] Struktur aufzurufen, wird das Standardverhalten für Werttypen bereitstellt, die <xref:System.ValueType.GetHashCode%2A>nicht überschreiben.</span><span class="sxs-lookup"><span data-stu-id="4e666-144">When you call the <xref:System.ValueType.GetHashCode%2A> method on a [!INCLUDE[wrt](~/includes/wrt-md.md)] structure, it provides the default behavior for value types that don't override <xref:System.ValueType.GetHashCode%2A>.</span></span> <span data-ttu-id="4e666-145">Dies ist ein Teil der Unterstützung, die der .NET Framework für die [!INCLUDE[wrt](~/includes/wrt-md.md)] bietet (siehe [.NET Framework Support für Windows Store-Apps und Windows-Runtime](~/docs/standard/cross-platform/support-for-windows-store-apps-and-windows-runtime.md)).</span><span class="sxs-lookup"><span data-stu-id="4e666-145">This is part of the support that the .NET Framework provides for the [!INCLUDE[wrt](~/includes/wrt-md.md)] (see [.NET Framework Support for Windows Store Apps and Windows Runtime](~/docs/standard/cross-platform/support-for-windows-store-apps-and-windows-runtime.md)).</span></span> [!INCLUDE[wrt](~/includes/wrt-md.md)] <span data-ttu-id="4e666-146">Strukturen können <xref:System.ValueType.GetHashCode%2A>nicht überschreiben, auch wenn Sie mit C# oder Visual Basic geschrieben sind, da Sie keine Methoden aufweisen können.</span><span class="sxs-lookup"><span data-stu-id="4e666-146">structures can't override <xref:System.ValueType.GetHashCode%2A>, even if they're written with C# or Visual Basic, because they can't have methods.</span></span> <span data-ttu-id="4e666-147">(Darüber hinaus erben Strukturen im [!INCLUDE[wrt](~/includes/wrt-md.md)] selbst nicht <xref:System.ValueType>.) Sie scheinen jedoch <xref:System.ValueType.ToString%2A>-, <xref:System.ValueType.Equals%2A>-und <xref:System.ValueType.GetHashCode%2A>-Methoden zu haben, wenn Sie Sie im C# -oder-Visual Basic Code verwenden, und das .NET Framework stellt das Standardverhalten für diese Methoden bereit.</span><span class="sxs-lookup"><span data-stu-id="4e666-147">(In addition, structures in the [!INCLUDE[wrt](~/includes/wrt-md.md)] itself don't inherit <xref:System.ValueType>.) However, they appear to have <xref:System.ValueType.ToString%2A>, <xref:System.ValueType.Equals%2A>, and <xref:System.ValueType.GetHashCode%2A> methods when you use them in your C# or Visual Basic code, and the .NET Framework provides the default behavior for these methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4e666-148">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.ValueType.GetHashCode%2A> Methode von einem abgeleiteten Werttyp überschrieben werden kann.</span><span class="sxs-lookup"><span data-stu-id="4e666-148">The following example demonstrates how the <xref:System.ValueType.GetHashCode%2A> method can be overridden by a derived value type.</span></span>  
  
 [!code-cpp[ValueType.Equals Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/ValueType.Equals Example/CPP/source.cpp#1)]
 [!code-csharp[ValueType.Equals Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/ValueType.Equals Example/CS/source.cs#1)]
 [!code-vb[ValueType.Equals Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ValueType.Equals Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueType.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="valueType.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4e666-149">Gibt den vollqualifizierten Typnamen dieser Instanz zurück.</span><span class="sxs-lookup"><span data-stu-id="4e666-149">Returns the fully qualified type name of this instance.</span></span></summary>
        <returns><span data-ttu-id="4e666-150">Der vollqualifizierte Typname.</span><span class="sxs-lookup"><span data-stu-id="4e666-150">The fully qualified type name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e666-151">Die <xref:System.ValueType.ToString%2A?displayProperty=nameWithType>-Methode überschreibt die <xref:System.Object.ToString%2A?displayProperty=nameWithType>-Methode und stellt die Standard Implementierung der `ToString`-Methode für Werttypen bereit.</span><span class="sxs-lookup"><span data-stu-id="4e666-151">The <xref:System.ValueType.ToString%2A?displayProperty=nameWithType> method overrides the <xref:System.Object.ToString%2A?displayProperty=nameWithType> method and provides the default implementation of the `ToString` method for value types.</span></span> <span data-ttu-id="4e666-152">(Werttypen sind Typen, die durch das `struct` C#-Schlüsselwort in und das `Structure`...`End Structure`-Konstrukt in Visual Basic definiert sind.) Funktionell ist die Implementierung jedoch identisch mit der von <xref:System.Object.ToString%2A?displayProperty=nameWithType>: die Methode gibt den voll qualifizierten Typnamen zurück.</span><span class="sxs-lookup"><span data-stu-id="4e666-152">(Value types are types defined by the `struct` keyword in C#, and by the `Structure`...`End Structure` construct in Visual Basic.) Functionally, however, the implementation is that same as that of <xref:System.Object.ToString%2A?displayProperty=nameWithType>: the method returns the fully qualified type name.</span></span>  
  
 <span data-ttu-id="4e666-153">Werttypen, die durch das `struct` C# -Schlüsselwort in und das `Structure`...`End Structure`-Konstrukt in Visual Basic definiert sind, überschreiben normalerweise die <xref:System.ValueType.ToString%2A?displayProperty=nameWithType>-Methode, um eine aussagekräftigere Zeichen folgen Darstellung des wertt</span><span class="sxs-lookup"><span data-stu-id="4e666-153">Value types defined by the `struct` keyword in C# and the `Structure`...`End Structure` construct in Visual Basic typically override the <xref:System.ValueType.ToString%2A?displayProperty=nameWithType> method to provide a more meaningful string representation of the value type.</span></span> <span data-ttu-id="4e666-154">Der Unterschied wird im folgenden Beispiel veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="4e666-154">The following example illustrates the difference.</span></span> <span data-ttu-id="4e666-155">Er definiert zwei Werttypen, `EmployeeA` und `EmployeeB`, erstellt eine Instanz von jedem und ruft seine `ToString`-Methode auf.</span><span class="sxs-lookup"><span data-stu-id="4e666-155">It defines two value types, `EmployeeA` and `EmployeeB`, creates an instance of each, and calls its `ToString` method.</span></span> <span data-ttu-id="4e666-156">Da die `EmployeeA` Struktur die <xref:System.ValueType.ToString%2A?displayProperty=nameWithType>-Methode nicht außer Kraft setzt, wird nur der voll qualifizierte Typname angezeigt.</span><span class="sxs-lookup"><span data-stu-id="4e666-156">Because the `EmployeeA` structure does not override the <xref:System.ValueType.ToString%2A?displayProperty=nameWithType> method, it displays only the fully qualified type name.</span></span> <span data-ttu-id="4e666-157">Die `EmployeeB.ToString`-Methode hingegen stellt sinnvolle Informationen über das Objekt bereit.</span><span class="sxs-lookup"><span data-stu-id="4e666-157">The `EmployeeB.ToString` method, on the other hand, provides meaningful information about the object.</span></span>  
  
 [!code-csharp[System.ValueType.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ValueType.ToString/cs/ToString2.cs#1)]
 [!code-vb[System.ValueType.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ValueType.ToString/vb/ToString2.vb#1)]  
  
 <span data-ttu-id="4e666-158">Beachten Sie Folgendes: Obwohl Enumerationstypen auch Werttypen sind, werden Sie von der <xref:System.Enum>-Klasse abgeleitet, die <xref:System.ValueType.ToString%2A?displayProperty=nameWithType>überschreibt.</span><span class="sxs-lookup"><span data-stu-id="4e666-158">Note that, although enumeration types are also value types, they derive from the <xref:System.Enum> class, which overrides  <xref:System.ValueType.ToString%2A?displayProperty=nameWithType>.</span></span>  
  
## <a name="notes-for-the-windows-runtime"></a><span data-ttu-id="4e666-159">Hinweise für den Windows-Runtime</span><span class="sxs-lookup"><span data-stu-id="4e666-159">Notes for the Windows Runtime</span></span>  
 <span data-ttu-id="4e666-160">Wenn Sie die <xref:System.ValueType.ToString%2A>-Methode für eine [!INCLUDE[wrt](~/includes/wrt-md.md)] Struktur aufzurufen, wird das Standardverhalten für Werttypen bereitstellt, die <xref:System.ValueType.ToString%2A>nicht überschreiben.</span><span class="sxs-lookup"><span data-stu-id="4e666-160">When you call the <xref:System.ValueType.ToString%2A> method on a [!INCLUDE[wrt](~/includes/wrt-md.md)] structure, it provides the default behavior for value types that don't override <xref:System.ValueType.ToString%2A>.</span></span> <span data-ttu-id="4e666-161">Dies ist ein Teil der Unterstützung, die der .NET Framework für die [!INCLUDE[wrt](~/includes/wrt-md.md)] bietet (siehe [.NET Framework Support für Windows Store-Apps und Windows-Runtime](~/docs/standard/cross-platform/support-for-windows-store-apps-and-windows-runtime.md)).</span><span class="sxs-lookup"><span data-stu-id="4e666-161">This is part of the support that the .NET Framework provides for the [!INCLUDE[wrt](~/includes/wrt-md.md)] (see [.NET Framework Support for Windows Store Apps and Windows Runtime](~/docs/standard/cross-platform/support-for-windows-store-apps-and-windows-runtime.md)).</span></span> [!INCLUDE[wrt](~/includes/wrt-md.md)] <span data-ttu-id="4e666-162">Strukturen können <xref:System.ValueType.ToString%2A>nicht überschreiben, auch wenn Sie mit C# oder Visual Basic geschrieben sind, da Sie keine Methoden aufweisen können.</span><span class="sxs-lookup"><span data-stu-id="4e666-162">structures can't override <xref:System.ValueType.ToString%2A>, even if they're written with C# or Visual Basic, because they can't have methods.</span></span> <span data-ttu-id="4e666-163">(Darüber hinaus erben Strukturen im [!INCLUDE[wrt](~/includes/wrt-md.md)] selbst nicht <xref:System.ValueType>.) Sie scheinen jedoch <xref:System.ValueType.ToString%2A>-, <xref:System.ValueType.Equals%2A>-und <xref:System.ValueType.GetHashCode%2A>-Methoden zu haben, wenn Sie Sie im C# -oder-Visual Basic Code verwenden, und das .NET Framework stellt das Standardverhalten für diese Methoden bereit.</span><span class="sxs-lookup"><span data-stu-id="4e666-163">(In addition, structures in the [!INCLUDE[wrt](~/includes/wrt-md.md)] itself don't inherit <xref:System.ValueType>.) However, they appear to have <xref:System.ValueType.ToString%2A>, <xref:System.ValueType.Equals%2A>, and <xref:System.ValueType.GetHashCode%2A> methods when you use them in your C# or Visual Basic code, and the .NET Framework provides the default behavior for these methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
