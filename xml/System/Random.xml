<Type Name="Random" FullName="System.Random">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cbb8ff602a8e78c0f686218857a876c8e8fdd1ad" />
    <Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="11/27/2018" />
    <Meta Name="ms.locfileid" Value="52357508" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Random" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Random extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Random" />
  <TypeSignature Language="VB.NET" Value="Public Class Random" />
  <TypeSignature Language="C++ CLI" Value="public ref class Random" />
  <TypeSignature Language="F#" Value="type Random = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="1ae25-101">Stellt einen Generator für Pseudozufallszahlen dar, d. h. ein Gerät, das eine Zahlenfolge erzeugt, die bestimmte statistische Anforderungen hinsichtlich ihrer Zufälligkeit erfüllt.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1ae25-101">Represents a pseudo-random number generator, which is a device that produces a sequence of numbers that meet certain statistical requirements for randomness.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ae25-102">Pseudozufallszahlen werden von einer begrenzten Menge von Zahlen mit gleicher Wahrscheinlichkeit ausgewählt.</span><span class="sxs-lookup"><span data-stu-id="1ae25-102">Pseudo-random numbers are chosen with equal probability from a finite set of numbers.</span></span> <span data-ttu-id="1ae25-103">Die gewählten Zahlen sind nicht vollständig wahlfreien, da ein mathematischer Algorithmus verwendet wird, um sie auszuwählen, aber sie für praktische Zwecke ausreichend zufälligen sind.</span><span class="sxs-lookup"><span data-stu-id="1ae25-103">The chosen numbers are not completely random because a mathematical algorithm is used to select them, but they are sufficiently random for practical purposes.</span></span> <span data-ttu-id="1ae25-104">Die aktuelle Implementierung von der <xref:System.Random> Klasse basiert darauf, dass eine geänderte Version des Donald E. Knuths Subtraktive Algorithmus mit Zufallszahlengenerator.</span><span class="sxs-lookup"><span data-stu-id="1ae25-104">The current implementation of the <xref:System.Random> class is based on a modified version of Donald E. Knuth's subtractive random number generator algorithm.</span></span> <span data-ttu-id="1ae25-105">Weitere Informationen finden Sie unter d E.</span><span class="sxs-lookup"><span data-stu-id="1ae25-105">For more information, see D. E.</span></span> <span data-ttu-id="1ae25-106">Knuth.</span><span class="sxs-lookup"><span data-stu-id="1ae25-106">Knuth.</span></span> <span data-ttu-id="1ae25-107">*The Art of Computer Programming "," Volume 2: Seminumerical Algorithms*.</span><span class="sxs-lookup"><span data-stu-id="1ae25-107">*The Art of Computer Programming, Volume 2: Seminumerical Algorithms*.</span></span> <span data-ttu-id="1ae25-108">Addison-Wesley, lesen, MA, 3. Auflage, 1997.</span><span class="sxs-lookup"><span data-stu-id="1ae25-108">Addison-Wesley, Reading, MA, third edition, 1997.</span></span>  
  
 <span data-ttu-id="1ae25-109">Verwenden Sie eine kryptografisch sichere Zufallszahl, z. B. ein generieren, die für Sie erstellen ein zufälliges Kennwort, geeignet ist die <xref:System.Security.Cryptography.RNGCryptoServiceProvider> Klasse oder leiten eine Klasse von <xref:System.Security.Cryptography.RandomNumberGenerator?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1ae25-109">To generate a cryptographically secure random number, such as one that's suitable for creating a random password, use the <xref:System.Security.Cryptography.RNGCryptoServiceProvider> class or derive a class from <xref:System.Security.Cryptography.RandomNumberGenerator?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="1ae25-110">In diesem Thema:</span><span class="sxs-lookup"><span data-stu-id="1ae25-110">In this topic:</span></span>  
  
 <span data-ttu-id="1ae25-111">[Instanziieren den Zufallszahlengenerator](#Instantiate) </span><span class="sxs-lookup"><span data-stu-id="1ae25-111">[Instantiating the random number generator](#Instantiate) </span></span>  
 <span data-ttu-id="1ae25-112">[Vermeiden Sie mehrere Instanziierungen von](#Multiple) </span><span class="sxs-lookup"><span data-stu-id="1ae25-112">[Avoiding multiple instantiations](#Multiple) </span></span>  
 <span data-ttu-id="1ae25-113">[Der System.Random-Klasse und Threadsicherheit](#ThreadSafety) </span><span class="sxs-lookup"><span data-stu-id="1ae25-113">[The System.Random class and thread safety](#ThreadSafety) </span></span>  
 <span data-ttu-id="1ae25-114">[Generieren von anderen Typen von Zufallszahlen](#Functionality) </span><span class="sxs-lookup"><span data-stu-id="1ae25-114">[Generating different types of random numbers](#Functionality) </span></span>  
 <span data-ttu-id="1ae25-115">[Ersetzen einen eigenen Algorithmus](#Overriding) </span><span class="sxs-lookup"><span data-stu-id="1ae25-115">[Substituting your own algorithm](#Overriding) </span></span>  
 <span data-ttu-id="1ae25-116">[Wie verwenden Sie "System.Random", um...](#Operations) </span><span class="sxs-lookup"><span data-stu-id="1ae25-116">[How do you use System.Random to…](#Operations) </span></span>  
 [<span data-ttu-id="1ae25-117">Rufen Sie die gleiche Sequenz von zufälligen Werten</span><span class="sxs-lookup"><span data-stu-id="1ae25-117">Retrieve the same sequence of random values</span></span>](#Same)  
 [<span data-ttu-id="1ae25-118">Eindeutige Sequenzen von zufälligen Werten abrufen</span><span class="sxs-lookup"><span data-stu-id="1ae25-118">Retrieve unique sequences of random values</span></span>](#Unique)  
 [<span data-ttu-id="1ae25-119">Abrufen von ganzen Zahlen in einem angegebenen Bereich</span><span class="sxs-lookup"><span data-stu-id="1ae25-119">Retrieve integers in a specified range</span></span>](#Range)  
 [<span data-ttu-id="1ae25-120">Abrufen von ganzen Zahlen mit einer angegebenen Anzahl von Ziffern</span><span class="sxs-lookup"><span data-stu-id="1ae25-120">Retrieve integers with a specified number of digits</span></span>](#Digits)  
 [<span data-ttu-id="1ae25-121">Gleitkommawerte in einem angegebenen Bereich abrufen</span><span class="sxs-lookup"><span data-stu-id="1ae25-121">Retrieve floating-point values in a specified range</span></span>](#Floats)  
 [<span data-ttu-id="1ae25-122">Generieren von zufälligen boolesche Werte</span><span class="sxs-lookup"><span data-stu-id="1ae25-122">Generate random Boolean values</span></span>](#Boolean)  
 [<span data-ttu-id="1ae25-123">Generieren von zufälligen 64-Bit-Ganzzahlen</span><span class="sxs-lookup"><span data-stu-id="1ae25-123">Generate random 64-bit integers</span></span>](#Long)  
 [<span data-ttu-id="1ae25-124">Abrufen der Bytes in einem angegebenen Bereich</span><span class="sxs-lookup"><span data-stu-id="1ae25-124">Retrieve bytes in a specified range</span></span>](#Bytes)  
 [<span data-ttu-id="1ae25-125">Ein Element nach dem Zufallsprinzip aus einem Array oder einer Auflistung abrufen</span><span class="sxs-lookup"><span data-stu-id="1ae25-125">Retrieve an element from an array or collection at random</span></span>](#Array)  
 [<span data-ttu-id="1ae25-126">Ein eindeutiges Element aus einem Array oder einer Auflistung abrufen</span><span class="sxs-lookup"><span data-stu-id="1ae25-126">Retrieve a unique element from an array or collection</span></span>](#UniqueArray)  
  
<a name="Instantiate"></a>   
## <a name="instantiating-the-random-number-generator"></a><span data-ttu-id="1ae25-127">Instanziieren den Zufallszahlengenerator</span><span class="sxs-lookup"><span data-stu-id="1ae25-127">Instantiating the random number generator</span></span>  
 <span data-ttu-id="1ae25-128">Instanziieren Sie den Zufallszahlen-Generator durch Angeben eines Ausgangswert-Werts (ein Startwert für den Algorithmus von Pseudozufallszahlen Generation) zu einem <xref:System.Random.%23ctor%2A> Klassenkonstruktor.</span><span class="sxs-lookup"><span data-stu-id="1ae25-128">You instantiate the random number generator by providing a seed value (a starting value for the pseudo-random number generation algorithm) to a <xref:System.Random.%23ctor%2A> class constructor.</span></span>  <span data-ttu-id="1ae25-129">Sie können den Ausgangswert entweder explizit oder implizit bereitstellen:</span><span class="sxs-lookup"><span data-stu-id="1ae25-129">You can supply the seed value either explicitly or implicitly:</span></span>  
  
-   <span data-ttu-id="1ae25-130">Die <xref:System.Random.%23ctor%28System.Int32%29> Konstruktor verwendet einen expliziten Seed-Wert, den Sie angeben.</span><span class="sxs-lookup"><span data-stu-id="1ae25-130">The <xref:System.Random.%23ctor%28System.Int32%29> constructor uses an explicit seed value that you supply.</span></span>  
  
-   <span data-ttu-id="1ae25-131">Die <xref:System.Random.%23ctor> Konstruktor verwendet die Systemuhr, um einen Ausgangswert angeben.</span><span class="sxs-lookup"><span data-stu-id="1ae25-131">The <xref:System.Random.%23ctor> constructor uses the system clock to provide a seed value.</span></span> <span data-ttu-id="1ae25-132">Dies ist die gängigste Methode instanziieren Sie den Zufallszahlengenerator an.</span><span class="sxs-lookup"><span data-stu-id="1ae25-132">This is the most common way of instantiating the random number generator.</span></span>  
  
 <span data-ttu-id="1ae25-133">Wenn der gleiche Ausgangswert, für einzelne verwendet wird <xref:System.Random> Objekten, die sie die gleiche Reihe von Zufallszahlen generiert.</span><span class="sxs-lookup"><span data-stu-id="1ae25-133">If the same seed is used for separate <xref:System.Random> objects, they will generate the same series of random numbers.</span></span> <span data-ttu-id="1ae25-134">Dies kann nützlich für das Erstellen einer Testsammlung aus, die zufällige Werte verarbeitet oder für die Wiedergabe von Spielen, die ihre Daten von Zufallszahlen abgeleitet sein.</span><span class="sxs-lookup"><span data-stu-id="1ae25-134">This can be useful for creating a test suite that processes random values, or for replaying games that derive their data from random numbers.</span></span> <span data-ttu-id="1ae25-135">Beachten Sie jedoch, dass <xref:System.Random> Objekte in Prozesse, die unter unterschiedlichen Versionen von .NET Framework ausgeführt werden. möglicherweise verschiedene Folge von Zufallszahlen zurück, selbst wenn sie mit dem identischen Startwerten instanziiert werden.</span><span class="sxs-lookup"><span data-stu-id="1ae25-135">However, note that <xref:System.Random> objects in processes running under different versions of the .NET Framework may return different series of random numbers even if they're instantiated with identical seed values.</span></span>  
  
 <span data-ttu-id="1ae25-136">Um verschiedene Sequenzen von Zufallszahlen zu generieren, können Sie vornehmen den Ausgangswert zeitabhängige, und erzeugt eine andere Datenreihe mit jeder neuen Instanz von <xref:System.Random>.</span><span class="sxs-lookup"><span data-stu-id="1ae25-136">To produce different sequences of random numbers, you can make the seed value time-dependent, thereby producing a different series with each new instance of <xref:System.Random>.</span></span> <span data-ttu-id="1ae25-137">Die parametrisierte <xref:System.Random.%23ctor%28System.Int32%29> Konstruktor dauert ein <xref:System.Int32> -Wert auf Grundlage der Anzahl der Ticks in der aktuellen Zeit, während die parameterlose <xref:System.Random.%23ctor> Konstruktor verwendet die Systemuhr zum Generieren des Startwerts.</span><span class="sxs-lookup"><span data-stu-id="1ae25-137">The parameterized <xref:System.Random.%23ctor%28System.Int32%29> constructor can take an <xref:System.Int32> value based on the number of ticks in the current time, whereas the parameterless <xref:System.Random.%23ctor> constructor uses the system clock to generate its seed value.</span></span> <span data-ttu-id="1ae25-138">Aber da die Uhr endliche Auflösung verfügt, mithilfe des Konstruktors unterschiedlichen <xref:System.Random> Objekte unmittelbar nacheinander erstellt random Number-Generatoren, die identische Sequenzen von Zufallszahlen zu generieren.</span><span class="sxs-lookup"><span data-stu-id="1ae25-138">However, because the clock has finite resolution, using the parameterless constructor to create different <xref:System.Random> objects in close succession creates random number generators that produce identical sequences of random numbers.</span></span> <span data-ttu-id="1ae25-139">Im folgende Beispiel wird veranschaulicht, wie zwei <xref:System.Random> Objekte, die unmittelbar nacheinander instanziiert werden, generieren eine identische Folge von Zufallszahlen.</span><span class="sxs-lookup"><span data-stu-id="1ae25-139">The following example illustrates how two <xref:System.Random> objects that are instantiated in close succession generate an identical series of random numbers.</span></span> <span data-ttu-id="1ae25-140">In den meisten Windows-Systemen <xref:System.Random> innerhalb von 15 Millisekunden voneinander erstellten Objekte haben wahrscheinlich identische Ausgangswerte.</span><span class="sxs-lookup"><span data-stu-id="1ae25-140">On most Windows systems, <xref:System.Random> objects created within 15 milliseconds of one another are likely to have identical seed values.</span></span>  
  
 [!code-cpp[System.Random#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/random1.cpp#1)]
 [!code-csharp[System.Random#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/Random1.cs#1)]
 [!code-vb[System.Random#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/Random1.vb#1)]  
  
 <span data-ttu-id="1ae25-141">Um dieses Problem zu vermeiden, erstellen Sie eine einzelne <xref:System.Random> Objekt anstelle mehrerer Objekte.</span><span class="sxs-lookup"><span data-stu-id="1ae25-141">To avoid this problem, create a single <xref:System.Random> object instead of multiple objects.</span></span>  
  
<a name="Multiple"></a>   
## <a name="avoiding-multiple-instantiations"></a><span data-ttu-id="1ae25-142">Vermeiden Sie mehrere Instanziierungen von</span><span class="sxs-lookup"><span data-stu-id="1ae25-142">Avoiding multiple instantiations</span></span>  
 <span data-ttu-id="1ae25-143">Initialisieren von zwei random Number-Generatoren in einer engen Schleife oder in rascher Folge erstellt zwei random Number-Generatoren, die identische Sequenzen von Zufallszahlen erzeugen können.</span><span class="sxs-lookup"><span data-stu-id="1ae25-143">Initializing two random number generators in a tight loop or in rapid succession creates two random number generators that can produce identical sequences of random numbers.</span></span> <span data-ttu-id="1ae25-144">In den meisten Fällen Dies ist nicht der Entwickler den Zweck und kann zu Leistungseinbußen zu vermeiden, führen, da instanziieren und Initialisieren eines Zufallszahlen-Generators ein relativ teurer Vorgang ist.</span><span class="sxs-lookup"><span data-stu-id="1ae25-144">In most cases, this is not the developer's intent and can lead to performance issues, because instantiating and initializing a random number generator is a relatively expensive process.</span></span>  
  
 <span data-ttu-id="1ae25-145">Sowohl zum Verbessern der Leistung und verhindern, dass versehentlich erstellt separate random Number-Generatoren, die identische numerische Sequenzen zu generieren, es wird empfohlen, dass Sie eine erstellen <xref:System.Random> Objekt, das viele zufällige Zahlen im Laufe der Zeit, statt zu generieren. neue <xref:System.Random> Objekte, die eine Zufallszahl zu generieren.</span><span class="sxs-lookup"><span data-stu-id="1ae25-145">Both to improve performance and to avoid inadvertently creating separate random number generators that generate identical numeric sequences, we recommend that you create one <xref:System.Random> object to generate many random numbers over time, instead of creating new <xref:System.Random> objects to generate one random number.</span></span>  
  
 <span data-ttu-id="1ae25-146">Allerdings die <xref:System.Random> Klasse nicht threadsicher.</span><span class="sxs-lookup"><span data-stu-id="1ae25-146">However, the <xref:System.Random> class isn't thread safe.</span></span> <span data-ttu-id="1ae25-147">Wenn Sie aufrufen <xref:System.Random> Methoden von mehreren Threads, befolgen Sie die Richtlinien, die im nächsten Abschnitt erläutert.</span><span class="sxs-lookup"><span data-stu-id="1ae25-147">If you call <xref:System.Random> methods from multiple threads, follow the guidelines discussed in the next section.</span></span>  
  
<a name="ThreadSafety"></a>   
## <a name="the-systemrandom-class-and-thread-safety"></a><span data-ttu-id="1ae25-148">Der System.Random-Klasse und Threadsicherheit</span><span class="sxs-lookup"><span data-stu-id="1ae25-148">The System.Random class and thread safety</span></span>  
 <span data-ttu-id="1ae25-149">Anstelle von instanziieren Person <xref:System.Random> Objekte, es wird empfohlen, erstellen Sie eine einzelne <xref:System.Random> Instanz, um alle von der Anwendung benötigten Zufallszahlen zu generieren.</span><span class="sxs-lookup"><span data-stu-id="1ae25-149">Instead of instantiating individual <xref:System.Random> objects, we recommend that you create a single <xref:System.Random> instance to generate all the random numbers needed by your app.</span></span> <span data-ttu-id="1ae25-150">Allerdings <xref:System.Random> Objekte sind nicht threadsicher.</span><span class="sxs-lookup"><span data-stu-id="1ae25-150">However, <xref:System.Random> objects are not thread safe.</span></span> <span data-ttu-id="1ae25-151">Wenn Ihre app aufruft <xref:System.Random> Methoden von mehreren Threads, Sie müssen ein Synchronisierungsobjekt verwenden, um sicherzustellen, dass nur ein Thread den Zufallszahlengenerator gleichzeitig zugreifen kann.</span><span class="sxs-lookup"><span data-stu-id="1ae25-151">If your app calls <xref:System.Random> methods from multiple threads, you must use a synchronization object to ensure that only one thread can access the random number generator at a time.</span></span> <span data-ttu-id="1ae25-152">Wenn Sie nicht sicherstellen, dass die <xref:System.Random> Objekt Zugriff auf eine threadsichere Möglichkeit, Aufrufe von Methoden, die Zufallszahlen zurückzugeben, gibt 0 zurück.</span><span class="sxs-lookup"><span data-stu-id="1ae25-152">If you don't ensure that the <xref:System.Random> object is accessed in a thread-safe way, calls to methods that return random numbers return 0.</span></span>  
  
 <span data-ttu-id="1ae25-153">Im folgenden Beispiel wird der C#- [lock-Anweisung](~/docs/csharp/language-reference/keywords/lock-statement.md) und die Visual Basic [SyncLock-Anweisung](~/docs/visual-basic/language-reference/statements/synclock-statement.md) um sicherzustellen, dass ein einzelnes Zufallszahlen-Generators von 11 Threads auf threadsichere Weise zugegriffen wird.</span><span class="sxs-lookup"><span data-stu-id="1ae25-153">The following example uses the C# [lock Statement](~/docs/csharp/language-reference/keywords/lock-statement.md) and the Visual Basic [SyncLock statement](~/docs/visual-basic/language-reference/statements/synclock-statement.md) to ensure that a single random number generator is accessed by 11 threads in a thread-safe manner.</span></span> <span data-ttu-id="1ae25-154">Jeder Thread 2 Millionen Zufallszahlen generiert, zählt die Anzahl von Zufallszahlen generiert, deren Summe berechnet und aktualisiert dann die Gesamtwerte für alle Threads aus, wenn sie mit der Ausführung beendet ist.</span><span class="sxs-lookup"><span data-stu-id="1ae25-154">Each thread generates 2 million random numbers, counts the number of random numbers generated and calculates their sum, and then updates the totals for all threads when it finishes executing.</span></span>  
  
 [!code-cpp[System.Random#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/threadsafeex1.cpp#3)]
 [!code-csharp[System.Random#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/threadsafeex1.cs#3)]
 [!code-vb[System.Random#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/threadsafeex1.vb#3)]  
  
 <span data-ttu-id="1ae25-155">Im Beispiel wird Threadsicherheit sichergestellt, es gibt folgende Möglichkeiten:</span><span class="sxs-lookup"><span data-stu-id="1ae25-155">The example ensures thread-safety in the following ways:</span></span>  
  
-   <span data-ttu-id="1ae25-156">Die <xref:System.ThreadStaticAttribute> Attribut wird verwendet, um die Thread-lokalen Variablen zu definieren, die die Gesamtzahl der Zufallszahlen generiert und die Summe für jeden Thread nachverfolgen.</span><span class="sxs-lookup"><span data-stu-id="1ae25-156">The <xref:System.ThreadStaticAttribute> attribute is used to define thread-local variables that track the total number of random numbers generated and their sum for each thread.</span></span>  
  
-   <span data-ttu-id="1ae25-157">Eine Sperre (die `lock` -Anweisung in c# und die `SyncLock` -Anweisung in Visual Basic) schützt den Zugriff auf die Variablen für die Gesamtanzahl und die Summe aller zufälligen Zahlen, die auf alle Threads generiert.</span><span class="sxs-lookup"><span data-stu-id="1ae25-157">A lock (the `lock` statement in C# and the `SyncLock` statement in Visual Basic) protects access to the variables for the total count and sum of all random numbers generated on all threads.</span></span>  
  
-   <span data-ttu-id="1ae25-158">Ein Semaphor (die <xref:System.Threading.CountdownEvent> Objekt) wird verwendet, um sicherzustellen, dass der Hauptthread blockiert, bis alle anderen Threads vollständig ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="1ae25-158">A semaphore (the <xref:System.Threading.CountdownEvent> object) is used to ensure that the main thread blocks until all other threads complete execution.</span></span>  
  
-   <span data-ttu-id="1ae25-159">Im Beispiel wird überprüft, ob für der Zufallszahlengenerator durch bestimmen beschädigt wurde, ob zwei aufeinander folgende Aufrufe von Zufallszahlen generieren, Methoden 0 zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="1ae25-159">The example checks whether the random number generator has become corrupted by determining whether two consecutive calls to random number generation methods return 0.</span></span> <span data-ttu-id="1ae25-160">Wenn eine Beschädigung erkannt wird, wird im Beispiel wird die <xref:System.Threading.CancellationTokenSource> -Objekt signalisiert, dass es sich bei allen Threads abgebrochen werden soll.</span><span class="sxs-lookup"><span data-stu-id="1ae25-160">If corruption is detected, the example uses the <xref:System.Threading.CancellationTokenSource> object to signal that all threads should be canceled.</span></span>  
  
-   <span data-ttu-id="1ae25-161">Vor dem Generieren von jeder Zufallszahl jeder Thread überprüft den Status der <xref:System.Threading.CancellationToken> Objekt.</span><span class="sxs-lookup"><span data-stu-id="1ae25-161">Before generating each random number, each thread checks the state of the <xref:System.Threading.CancellationToken> object.</span></span> <span data-ttu-id="1ae25-162">Wenn der Abbruch angefordert wird, wird im Beispiel wird die <xref:System.Threading.CancellationToken.ThrowIfCancellationRequested%2A?displayProperty=nameWithType> Methode, um den Thread abzubrechen.</span><span class="sxs-lookup"><span data-stu-id="1ae25-162">If cancellation is requested, the example calls the <xref:System.Threading.CancellationToken.ThrowIfCancellationRequested%2A?displayProperty=nameWithType> method to cancel the thread.</span></span>  
  
 <span data-ttu-id="1ae25-163">Im folgende Beispiel wird mit dem ersten identisch, außer dass mithilfe einer <xref:System.Threading.Tasks.Task> -Objekt und ein Lambda-Ausdruck anstelle von <xref:System.Threading.Thread> Objekte.</span><span class="sxs-lookup"><span data-stu-id="1ae25-163">The following example is identical to the first, except that it uses a <xref:System.Threading.Tasks.Task> object and a lambda expression instead of <xref:System.Threading.Thread> objects.</span></span>  
  
 [!code-csharp[System.Random#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/threadsafeex2.cs#4)]
 [!code-vb[System.Random#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/threadsafeex2.vb#4)]  
  
 <span data-ttu-id="1ae25-164">Es unterscheidet sich von dem ersten Beispiel gibt folgenden Möglichkeiten:</span><span class="sxs-lookup"><span data-stu-id="1ae25-164">It differs from the first example in the following ways:</span></span>  
  
-   <span data-ttu-id="1ae25-165">Die Variablen zum Nachverfolgen der Anzahl von Zufallszahlen generiert und die Summe in jeder Aufgabe gelten lokal in der Aufgabe, daher keine Notwendigkeit besteht, verwenden Sie die <xref:System.ThreadStaticAttribute> Attribut.</span><span class="sxs-lookup"><span data-stu-id="1ae25-165">The variables to keep track of the number of random numbers generated and their sum in each task are local to the task, so there is no need to use the <xref:System.ThreadStaticAttribute> attribute.</span></span>  
  
-   <span data-ttu-id="1ae25-166">Die statische <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType> Methode wird verwendet, um sicherzustellen, dass der Hauptthread nicht abgeschlossen, bevor alle Aufgaben beendet wurden.</span><span class="sxs-lookup"><span data-stu-id="1ae25-166">The static <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType> method is used to ensure that the main thread doesn't complete before all tasks have finished.</span></span> <span data-ttu-id="1ae25-167">Besteht keine Notwendigkeit für die <xref:System.Threading.CountdownEvent> Objekt.</span><span class="sxs-lookup"><span data-stu-id="1ae25-167">There is no need for the <xref:System.Threading.CountdownEvent> object.</span></span>  
  
-   <span data-ttu-id="1ae25-168">Die Ausnahme, die aus den Aufgabenabbruch wird angezeigt, der <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="1ae25-168">The exception that results from task cancellation is surfaced in the <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="1ae25-169">Im vorherigen Beispiel wird sie von jedem Thread behandelt.</span><span class="sxs-lookup"><span data-stu-id="1ae25-169">In the previous example, it is handled by each thread.</span></span>  
  
<a name="Functionality"></a>   
## <a name="generating-different-types-of-random-numbers"></a><span data-ttu-id="1ae25-170">Generieren von anderen Typen von Zufallszahlen</span><span class="sxs-lookup"><span data-stu-id="1ae25-170">Generating different types of random numbers</span></span>  
 <span data-ttu-id="1ae25-171">Der Zufallszahlengenerator bietet Methoden, mit denen Sie die folgenden Arten von Zufallszahlen zu generieren:</span><span class="sxs-lookup"><span data-stu-id="1ae25-171">The random number generator provides methods that let you generate the following kinds of random numbers:</span></span>  
  
-   <span data-ttu-id="1ae25-172">Eine Reihe von <xref:System.Byte> Werte.</span><span class="sxs-lookup"><span data-stu-id="1ae25-172">A series of <xref:System.Byte> values.</span></span> <span data-ttu-id="1ae25-173">Sie bestimmen die Anzahl der Bytewerte durch Übergeben eines Arrays initialisiert, um die Anzahl der Elemente, die Sie möchten, dass die Methode zurückgibt, die <xref:System.Random.NextBytes%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1ae25-173">You determine the number of byte values by passing an array initialized to the number of elements you want the method to return to the <xref:System.Random.NextBytes%2A> method.</span></span> <span data-ttu-id="1ae25-174">Im folgende Beispiel werden 20 Byte an Daten generiert.</span><span class="sxs-lookup"><span data-stu-id="1ae25-174">The following example generates 20 bytes.</span></span>  
  
     [!code-cpp[System.Random#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/nextbytes1.cpp#5)]
     [!code-csharp[System.Random#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/nextbytes1.cs#5)]
     [!code-vb[System.Random#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/nextbytes1.vb#5)]  
  
-   <span data-ttu-id="1ae25-175">Eine einzelne ganze Zahl.</span><span class="sxs-lookup"><span data-stu-id="1ae25-175">A single integer.</span></span> <span data-ttu-id="1ae25-176">Sie können auswählen, ob Sie einen Integer zwischen 0 und einen maximalen Wert (<xref:System.Int32.MaxValue?displayProperty=nameWithType> – 1) durch Aufrufen der <xref:System.Random.Next> -Methode, eine ganze Zahl zwischen 0 und einen bestimmten Wert durch Aufrufen der <xref:System.Random.Next%28System.Int32%29> Methode oder eine ganze Zahl in einen Bereich von Werten durch Aufrufen der <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29>Methode.</span><span class="sxs-lookup"><span data-stu-id="1ae25-176">You can choose whether you want an integer from 0 to a maximum value (<xref:System.Int32.MaxValue?displayProperty=nameWithType> – 1) by calling the <xref:System.Random.Next> method, an integer between 0 and a specific value by calling the <xref:System.Random.Next%28System.Int32%29> method, or an integer within a range of values by calling the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="1ae25-177">In parametrisierten Überladungen ist der angegebene Wert für die maximale exklusive; die aktuelle maximale Anzahl generiert, ist eine kleiner als der angegebene Wert.</span><span class="sxs-lookup"><span data-stu-id="1ae25-177">In the parameterized overloads, the specified maximum value is exclusive; that is, the actual maximum number generated is one less than the specified value.</span></span>  
  
     <span data-ttu-id="1ae25-178">Im folgenden Beispiel wird die <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> Methode, um 10 zufällige Zahlen zwischen-10 und 10 zu generieren.</span><span class="sxs-lookup"><span data-stu-id="1ae25-178">The following example calls the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method to generate 10 random numbers between -10 and 10.</span></span> <span data-ttu-id="1ae25-179">Beachten Sie, dass das zweite Argument für die Methode gibt an, die exklusive obere Grenze des Bereichs von zufälligen Werten, die von der Methode zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="1ae25-179">Note that the second argument to the method specifies the exclusive upper bound of the range of random values returned by the method.</span></span> <span data-ttu-id="1ae25-180">Das heißt, die größte ganze Zahl, die die Methode zurückgeben kann eine ist kleiner als dieser Wert.</span><span class="sxs-lookup"><span data-stu-id="1ae25-180">In other words, the largest integer that the method can return is one less than this value.</span></span>  
  
     [!code-cpp[System.Random#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/nextex1.cpp#6)]
     [!code-csharp[System.Random#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/nextex1.cs#6)]
     [!code-vb[System.Random#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/nextex1.vb#6)]  
  
-   <span data-ttu-id="1ae25-181">Ein einzelner Gleitkommawert Wert von 0,0 kleiner als 1,0 durch Aufrufen der <xref:System.Random.NextDouble%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1ae25-181">A single floating-point value from 0.0 to less than 1.0 by calling the <xref:System.Random.NextDouble%2A> method.</span></span> <span data-ttu-id="1ae25-182">Die exklusive obere Grenze der Zufallszahl, die von der Methode zurückgegebenen ist 1, damit die tatsächliche Obergrenze 0.99999999999999978 ist.</span><span class="sxs-lookup"><span data-stu-id="1ae25-182">The exclusive upper bound of the random number returned by the method is 1, so its actual upper bound is 0.99999999999999978.</span></span> <span data-ttu-id="1ae25-183">Im folgende Beispiel wird 10 zufällige Gleitkommazahlen generiert.</span><span class="sxs-lookup"><span data-stu-id="1ae25-183">The following example generates 10 random floating-point numbers.</span></span>  
  
     [!code-cpp[System.Random#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/nextdoubleex1.cpp#7)]
     [!code-csharp[System.Random#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/nextdoubleex1.cs#7)]
     [!code-vb[System.Random#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/nextdoubleex1.vb#7)]  
  
> [!IMPORTANT]
>  <span data-ttu-id="1ae25-184">Die <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> Methode können Sie den Bereich der zurückgegebenen Zufallszahl an.</span><span class="sxs-lookup"><span data-stu-id="1ae25-184">The <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method allows you to specify the range of the returned random number.</span></span> <span data-ttu-id="1ae25-185">Allerdings die `maxValue` Parameter gibt an, der obere Bereich Anzahl zurückgegeben wird, wird eine exklusive, keiner inklusiven Wert.</span><span class="sxs-lookup"><span data-stu-id="1ae25-185">However, the `maxValue` parameter, which specifies the upper range returned number, is an exclusive, not an inclusive, value.</span></span> <span data-ttu-id="1ae25-186">Dies bedeutet, dass den Methodenaufruf `Next(0, 100)` gibt einen Wert zwischen 0 und 99 und nicht zwischen 0 und 100 zurück.</span><span class="sxs-lookup"><span data-stu-id="1ae25-186">This means that the method call `Next(0, 100)` returns a value between 0 and 99, and not between 0 and 100.</span></span>  
  
 <span data-ttu-id="1ae25-187">Können Sie auch die <xref:System.Random> -Klasse für Aufgaben wie das Generieren von [Zufallswerte t: System.Boolean](#Boolean), Generieren von [zufällige Gleitkommazahl Werte mit einer Reihe außer 0 bis 1](#Floats), Generieren von [zufälligen 64-Bit-Ganzzahlen](#Long), und [nach dem Zufallsprinzip ein eindeutiges Element aus einem Array oder einer Auflistung abrufen](#UniqueArray).</span><span class="sxs-lookup"><span data-stu-id="1ae25-187">You can also use the <xref:System.Random> class for such tasks as generating [random T:System.Boolean values](#Boolean), generating [random floating point values with a range other than 0 to 1](#Floats), generating [random 64-bit integers](#Long), and [randomly retrieving a unique element from an array or collection](#UniqueArray).</span></span> <span data-ttu-id="1ae25-188">Diese und andere häufige Aufgaben finden Sie in der [wie verwenden Sie "System.Random", um...](#Operations)</span><span class="sxs-lookup"><span data-stu-id="1ae25-188">For these and other common tasks, see the [How do you use System.Random to…](#Operations)</span></span> <span data-ttu-id="1ae25-189">Abschnitt.</span><span class="sxs-lookup"><span data-stu-id="1ae25-189">section.</span></span>  
  
<a name="Overriding"></a>   
## <a name="substituting-your-own-algorithm"></a><span data-ttu-id="1ae25-190">Ersetzen einen eigenen Algorithmus</span><span class="sxs-lookup"><span data-stu-id="1ae25-190">Substituting your own algorithm</span></span>  
 <span data-ttu-id="1ae25-191">Sie können Ihre eigenen Zufallszahlengenerator implementieren, durch Erben von der <xref:System.Random> -Klasse und Ihre random Number-generierungsalgorithmus angeben.</span><span class="sxs-lookup"><span data-stu-id="1ae25-191">You can implement your own random number generator by inheriting from the <xref:System.Random> class and supplying your random number generation algorithm.</span></span> <span data-ttu-id="1ae25-192">Um einen eigenen Algorithmus angeben, müssen Sie überschreiben die <xref:System.Random.Sample%2A> Methode, die die random Number-generierungsalgorithmus implementiert.</span><span class="sxs-lookup"><span data-stu-id="1ae25-192">To supply your own algorithm, you must override the <xref:System.Random.Sample%2A> method, which implements the random number generation algorithm.</span></span> <span data-ttu-id="1ae25-193">Sie sollten auch überschreiben, die <xref:System.Random.Next>, <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29>, und <xref:System.Random.NextBytes%2A> Methoden, um sicherzustellen, dass sie die überschriebene Aufrufen <xref:System.Random.Sample%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1ae25-193">You should also override the <xref:System.Random.Next>, <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29>, and <xref:System.Random.NextBytes%2A> methods to ensure that they call your overridden <xref:System.Random.Sample%2A> method.</span></span> <span data-ttu-id="1ae25-194">Sie müssen keine außer Kraft setzen der <xref:System.Random.Next%28System.Int32%29> und <xref:System.Random.NextDouble%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="1ae25-194">You don't have to override the <xref:System.Random.Next%28System.Int32%29> and <xref:System.Random.NextDouble%2A> methods.</span></span>  
  
 <span data-ttu-id="1ae25-195">Ein Beispiel für die abgeleitet der <xref:System.Random> Klasse und ändert dessen Standardwert Zufallszahlengenerator, finden Sie unter den <xref:System.Random.Sample%2A> Referenzseite.</span><span class="sxs-lookup"><span data-stu-id="1ae25-195">For an example that derives from the <xref:System.Random> class and modifies its default pseudo-random number generator, see the <xref:System.Random.Sample%2A> reference page.</span></span>  
  
<a name="Operations"></a>   
## <a name="how-do-you-use-systemrandom-to"></a><span data-ttu-id="1ae25-196">Wie verwenden Sie "System.Random", um...</span><span class="sxs-lookup"><span data-stu-id="1ae25-196">How do you use System.Random to…</span></span>  
 <span data-ttu-id="1ae25-197">In den folgenden Abschnitten erörtern und stellen entsprechenden Beispielcode für einige der Möglichkeiten, die Zufallszahlen in Ihrer app verwenden möchten.</span><span class="sxs-lookup"><span data-stu-id="1ae25-197">The following sections discuss and provide sample code for some of the ways you might want to use random numbers in your app.</span></span>  
  
<a name="Same"></a>   
### <a name="retrieve-the-same-sequence-of-random-values"></a><span data-ttu-id="1ae25-198">Rufen Sie die gleiche Sequenz von zufälligen Werten</span><span class="sxs-lookup"><span data-stu-id="1ae25-198">Retrieve the same sequence of random values</span></span>  
 <span data-ttu-id="1ae25-199">Manchmal möchten Sie die gleiche Sequenz von Zufallszahlen zu generieren, in Testszenarien und Spiele zu spielen.</span><span class="sxs-lookup"><span data-stu-id="1ae25-199">Sometimes you want to generate the same sequence of random numbers in software test scenarios and in game playing.</span></span> <span data-ttu-id="1ae25-200">Mit derselben Sequenz von Zufallszahlen testen, können Sie Regressionen erkennen und Fehlerbehebungen zu bestätigen.</span><span class="sxs-lookup"><span data-stu-id="1ae25-200">Testing with the same sequence of random numbers allows you to detect regressions and confirm bug fixes.</span></span> <span data-ttu-id="1ae25-201">Verwenden die gleiche Sequenz von Zufallszahl bei Spielen, können Sie vorherigen Spiele wiedergeben.</span><span class="sxs-lookup"><span data-stu-id="1ae25-201">Using the same sequence of random number in games allows you to replay previous games.</span></span>  
  
 <span data-ttu-id="1ae25-202">Sie können die gleiche Sequenz von Zufallszahlen generieren, indem Sie den gleichen Ausgangswert zum Bereitstellen der <xref:System.Random.%23ctor%28System.Int32%29> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="1ae25-202">You can generate the same sequence of random numbers by providing the same seed value to the <xref:System.Random.%23ctor%28System.Int32%29> constructor.</span></span> <span data-ttu-id="1ae25-203">Der Ausgangswert enthält einen Startwert für das Pseudo-random Number-generierungsalgorithmus.</span><span class="sxs-lookup"><span data-stu-id="1ae25-203">The seed value provides a starting value for the pseudo-random number generation algorithm.</span></span> <span data-ttu-id="1ae25-204">Im folgenden Beispiel wird 100100 als einen beliebigen Startwert zum Instanziieren der <xref:System.Random> zeigt 20 zufällige Gleitkommazahlen-Punktwerte-Objekt, und die Seed-Wert beibehalten.</span><span class="sxs-lookup"><span data-stu-id="1ae25-204">The following example uses 100100 as an arbitrary seed value to instantiate the <xref:System.Random> object, displays 20 random floating-point values, and persists the seed value.</span></span> <span data-ttu-id="1ae25-205">Anschließend wird den Startwert, instanziiert einen neuen Zufallszahlen-Generator, und zeigt die gleichen 20 zufällige Gleitkommazahlen-Punktwerte.</span><span class="sxs-lookup"><span data-stu-id="1ae25-205">It then restores the seed value, instantiates a new random number generator, and displays the same 20 random floating-point values.</span></span>  <span data-ttu-id="1ae25-206">Beachten Sie, dass im Beispiel verschiedene Sequenzen der Zufallszahlen erzeugen kann, wenn unterschiedliche Versionen von .NET Framework ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="1ae25-206">Note that the example may produce different sequences of random numbers if run on different versions of the .NET Framework.</span></span>  
  
 [!code-cpp[System.Random#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/same1.cpp#12)]
 [!code-csharp[System.Random#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/same1.cs#12)]
 [!code-vb[System.Random#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/same1.vb#12)]  
  
<a name="Unique"></a>   
### <a name="retrieve-unique-sequences-of-random-numbers"></a><span data-ttu-id="1ae25-207">Abrufen von eindeutige Sequenzen von Zufallszahlen</span><span class="sxs-lookup"><span data-stu-id="1ae25-207">Retrieve unique sequences of random numbers</span></span>  
 <span data-ttu-id="1ae25-208">Bereitstellen von Werten der anderen Startwert auf Instanzen von der <xref:System.Random> Klasse bewirkt, dass jede Zufallszahlengenerator, um eine andere Sequenz von Werten zu erzeugen.</span><span class="sxs-lookup"><span data-stu-id="1ae25-208">Providing different seed values to instances of the <xref:System.Random> class causes each random number generator to produce a different sequence of values.</span></span> <span data-ttu-id="1ae25-209">Sie können einem Ausgangswert angeben, entweder explizit durch Aufrufen der <xref:System.Random.%23ctor%28System.Int32%29> Konstruktor oder implizit durch Aufrufen der <xref:System.Random.%23ctor> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="1ae25-209">You can provide a seed value either explicitly by calling the <xref:System.Random.%23ctor%28System.Int32%29> constructor, or implicitly by calling the <xref:System.Random.%23ctor> constructor.</span></span> <span data-ttu-id="1ae25-210">Die meisten Entwickler rufen Sie den parameterlosen Konstruktor, der die Systemuhr verwendet.</span><span class="sxs-lookup"><span data-stu-id="1ae25-210">Most developers call the parameterless constructor, which uses the system clock.</span></span> <span data-ttu-id="1ae25-211">Im folgenden Beispiel wird dieser Ansatz zum Instanziieren zweier <xref:System.Random> Instanzen.</span><span class="sxs-lookup"><span data-stu-id="1ae25-211">The following example uses this approach to instantiate two <xref:System.Random> instances.</span></span> <span data-ttu-id="1ae25-212">Jede Instanz wird eine Reihe von 10 zufällige ganze Zahlen angezeigt.</span><span class="sxs-lookup"><span data-stu-id="1ae25-212">Each instance displays a series of 10 random integers.</span></span>  
  
 [!code-cpp[System.Random#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/unique.cpp#13)]
 [!code-csharp[System.Random#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/unique.cs#13)]
 [!code-vb[System.Random#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/unique.vb#13)]  
  
 <span data-ttu-id="1ae25-213">Jedoch aufgrund der begrenzten Auflösung erkennt die Systemuhr Zeitunterschiede nicht, die weniger als etwa 15 Millisekunden.</span><span class="sxs-lookup"><span data-stu-id="1ae25-213">However, because of its finite resolution, the system clock doesn't detect time differences that are less than approximately 15 milliseconds.</span></span> <span data-ttu-id="1ae25-214">Aus diesem Grund Wenn Ihr Code Ruft die <xref:System.Random.%23ctor> -Überladung verwenden, um zwei instanziieren <xref:System.Random> Objekte nacheinander Sie versehentlich geleistet werden die Objekte mit dem Startwerten identisch.</span><span class="sxs-lookup"><span data-stu-id="1ae25-214">Therefore, if your code calls the <xref:System.Random.%23ctor> overload to instantiate two <xref:System.Random> objects in succession, you might inadvertently be providing the objects with identical seed values.</span></span> <span data-ttu-id="1ae25-215">Um dies im vorherigen Beispiel zu sehen, kommentieren Sie die <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> -Methodenaufruf, und kompilieren und führen Sie das Beispiel erneut aus.</span><span class="sxs-lookup"><span data-stu-id="1ae25-215">To see this in the previous example, comment out the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method call, and compile and run the example again.</span></span>  
  
 <span data-ttu-id="1ae25-216">Um dies zu verhindern, wird empfohlen, Sie ein einzelnes instanziieren <xref:System.Random> -Objekt statt mehrere.</span><span class="sxs-lookup"><span data-stu-id="1ae25-216">To prevent this from happening, we recommend that you instantiate a single <xref:System.Random> object rather than multiple ones.</span></span> <span data-ttu-id="1ae25-217">Da jedoch <xref:System.Random> ist nicht threadsicher ist, müssen Sie einige Synchronisierung-Gerät verwenden, wenn Sie Zugriff auf eine <xref:System.Random> -Instanz; Weitere Informationen von mehreren Threads verwenden, finden Sie unter [der Random-Klasse und Threadsicherheit](#ThreadSafety) weiter oben in diesem In diesem Thema.</span><span class="sxs-lookup"><span data-stu-id="1ae25-217">However, since <xref:System.Random> isn't thread safe, you must use some synchronization device if you access a <xref:System.Random> instance from multiple threads; for more information, see [The Random class and thread safety](#ThreadSafety) earlier in this topic.</span></span> <span data-ttu-id="1ae25-218">Alternativ können Sie können einen verzögerungsmechanismus, z. B. die <xref:System.Threading.Thread.Sleep%2A> Methode, die im vorherigen Beispiel verwendet, um sicherzustellen, dass die Instanziierungen, mehr als 15 Millisekunden voneinander entfernt auftreten.</span><span class="sxs-lookup"><span data-stu-id="1ae25-218">Alternately, you can use a delay mechanism, such as the <xref:System.Threading.Thread.Sleep%2A> method used in the previous example, to ensure that the instantiations occur more than 15 millisecond apart.</span></span>  
  
<a name="Range"></a>   
### <a name="retrieve-integers-in-a-specified-range"></a><span data-ttu-id="1ae25-219">Abrufen von ganzen Zahlen in einem angegebenen Bereich</span><span class="sxs-lookup"><span data-stu-id="1ae25-219">Retrieve integers in a specified range</span></span>  
 <span data-ttu-id="1ae25-220">Sie können die ganzen Zahlen in einem angegebenen Bereich abrufen, durch den Aufruf der <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> -Methode, die können Sie angeben, sowohl für die untere als auch für die obere Grenze der Zahlen den Zufallszahlengenerator zurückgegeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="1ae25-220">You can retrieve integers in a specified range by calling the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method, which lets you specify both the lower and the upper bound of the numbers you'd like the random number generator to return.</span></span> <span data-ttu-id="1ae25-221">Die Obergrenze ist eine exklusive, keiner inklusiven Wert.</span><span class="sxs-lookup"><span data-stu-id="1ae25-221">The upper bound is an exclusive, not an inclusive, value.</span></span> <span data-ttu-id="1ae25-222">Es ist, also nicht in den Bereich der Werte, die von der Methode zurückgegebenen enthalten.</span><span class="sxs-lookup"><span data-stu-id="1ae25-222">That is, it isn't included in the range of values returned by the method.</span></span> <span data-ttu-id="1ae25-223">Im folgenden Beispiel wird diese Methode zum Generieren von zufälliger Zahlen zwischen-10 und 10.</span><span class="sxs-lookup"><span data-stu-id="1ae25-223">The following example uses this method to generate random integers between -10 and 10.</span></span> <span data-ttu-id="1ae25-224">Beachten Sie, dass es 11 gibt, der eins größer ist als der Wert den gewünschten Wert von der `maxValue` Argument im Aufruf Methode.</span><span class="sxs-lookup"><span data-stu-id="1ae25-224">Note that it specifies 11, which is one greater than the desired value, as the value of the `maxValue` argument in the method call.</span></span>  
  
 [!code-cpp[System.Random#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/range1.cpp#15)]
 [!code-csharp[System.Random#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/range1.cs#15)]
 [!code-vb[System.Random#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/range1.vb#15)]  
  
<a name="Digits"></a>   
### <a name="retrieve-integers-with-a-specified-number-of-digits"></a><span data-ttu-id="1ae25-225">Abrufen von ganzen Zahlen mit einer angegebenen Anzahl von Ziffern</span><span class="sxs-lookup"><span data-stu-id="1ae25-225">Retrieve integers with a specified number of digits</span></span>  
 <span data-ttu-id="1ae25-226">Rufen Sie die <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> Methode zum Abrufen von Zahlen mit einer angegebenen Anzahl von Ziffern.</span><span class="sxs-lookup"><span data-stu-id="1ae25-226">You can call the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method to retrieve numbers with a specified number of digits.</span></span> <span data-ttu-id="1ae25-227">Beispielsweise zum Abrufen von Zahlen mit vier Ziffern (d. h. Zahlen, die zwischen 1000 und 9999 liegen), rufen Sie die <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> -Methode mit einer `minValue` Wert 1000 und ein `maxValue` Wert 10.000, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="1ae25-227">For example, to retrieve numbers with four digits (that is, numbers that range from 1000 to 9999), you call the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method with a `minValue` value of 1000 and a `maxValue` value of 10000, as the following example shows.</span></span>  
  
 [!code-cpp[System.Random#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/range2.cpp#16)]
 [!code-csharp[System.Random#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/range2.cs#16)]
 [!code-vb[System.Random#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/range2.vb#16)]  
  
<a name="Floats"></a>   
### <a name="retrieve-floating-point-values-in-a-specified-range"></a><span data-ttu-id="1ae25-228">Gleitkommawerte in einem angegebenen Bereich abrufen</span><span class="sxs-lookup"><span data-stu-id="1ae25-228">Retrieve floating-point values in a specified range</span></span>  
 <span data-ttu-id="1ae25-229">Die <xref:System.Random.NextDouble%2A> Methodenrückgabe zufällige Gleitkommazahlen-Punktwerte diesen Bereich von 0 auf weniger als 1.</span><span class="sxs-lookup"><span data-stu-id="1ae25-229">The <xref:System.Random.NextDouble%2A> method returns random floating-point values that range from 0 to less than 1.</span></span> <span data-ttu-id="1ae25-230">Sie sollten jedoch häufig zum Generieren von zufälliger Werten in einigen anderen Bereich zu können.</span><span class="sxs-lookup"><span data-stu-id="1ae25-230">However, you'll often want to generate random values in some other range.</span></span>  
  
 <span data-ttu-id="1ae25-231">Wenn das Intervall zwischen den minimalen und maximalen Werten für den gewünschten 1 ist, können Sie den Unterschied zwischen den gewünschten ab Abstand und 0 hinzufügen, um die Anzahl von zurückgegebenen der <xref:System.Random.NextDouble%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1ae25-231">If the interval between the minimum and maximum desired values is 1, you can add the difference between the desired starting interval and 0 to the number returned by the <xref:System.Random.NextDouble%2A> method.</span></span> <span data-ttu-id="1ae25-232">Im folgende Beispiel wird um 10 Zufallszahlen zwischen-1 und 0.</span><span class="sxs-lookup"><span data-stu-id="1ae25-232">The following example does this to generate 10 random numbers between -1 and 0.</span></span>  
  
 [!code-cpp[System.Random#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/doublerange2.cpp#17)]
 [!code-csharp[System.Random#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/doublerange2.cs#17)]
 [!code-vb[System.Random#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/doublerange2.vb#17)]  
  
 <span data-ttu-id="1ae25-233">Um zufällige Gleitkommazahlen generiert wird, dessen untere Grenze 0 aber Obergrenze ist größer als 1 (oder, bei negativen Zahlen, dessen untere Grenze ist kleiner als-1 und obere Grenze ist 0), Multiplizieren Sie die Zufallszahl an, mit der Grenze ungleich NULL.</span><span class="sxs-lookup"><span data-stu-id="1ae25-233">To generate random floating-point numbers whose lower bound is 0 but upper bound is greater than 1 (or, in the case of negative numbers, whose lower bound is less than -1 and upper bound is 0), multiply the random number by the non-zero bound.</span></span> <span data-ttu-id="1ae25-234">Im folgende Beispiel wird diese Option, um 20 Millionen zufällige Gleitkommazahlen generiert dieses Bereichs von 0 bis <xref:System.Int64.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1ae25-234">The following example does this to generate 20 million random floating-point numbers that range from 0 to <xref:System.Int64.MaxValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1ae25-235">In zeigt außerdem die Verteilung der zufälligen Werte von der Methode generiert.</span><span class="sxs-lookup"><span data-stu-id="1ae25-235">In also displays the distribution of the random values generated by the method.</span></span>  
  
 [!code-cpp[System.Random#18](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/doublerange1.cpp#18)]
 [!code-csharp[System.Random#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/doublerange1.cs#18)]
 [!code-vb[System.Random#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/doublerange1.vb#18)]  
  
 <span data-ttu-id="1ae25-236">Um zufällige Gleitkommazahlen zwischen zwei beliebigen Werten zu generieren, wie die <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> Methode für ganze Zahlen ist, verwenden Sie die folgende Formel:</span><span class="sxs-lookup"><span data-stu-id="1ae25-236">To generate random floating-point numbers between two arbitrary values, like the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method does for integers, use the following formula:</span></span>  
  
```csharp  
Random.NextDouble() * (maxValue – minValue) + minValue  
```  
  
 <span data-ttu-id="1ae25-237">Das folgende Beispiel generiert von 1 Mio. Zufallszahlen, die den Bereich aus 10.0 auf 11.0 und zeigt die Verteilung.</span><span class="sxs-lookup"><span data-stu-id="1ae25-237">The following example generates 1 million random numbers that range from 10.0 to 11.0, and displays their distribution.</span></span>  
  
 [!code-cpp[System.Random#19](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/doublerange3.cpp#19)]
 [!code-csharp[System.Random#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/doublerange3.cs#19)]
 [!code-vb[System.Random#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/doublerange3.vb#19)]  
  
<a name="Boolean"></a>   
### <a name="generate-random-boolean-values"></a><span data-ttu-id="1ae25-238">Generieren von zufälligen boolesche Werte</span><span class="sxs-lookup"><span data-stu-id="1ae25-238">Generate random Boolean values</span></span>  
 <span data-ttu-id="1ae25-239">Die <xref:System.Random> Klasse nicht die Methoden zur Erstellung bereitstellen <xref:System.Boolean> Werte.</span><span class="sxs-lookup"><span data-stu-id="1ae25-239">The <xref:System.Random> class doesn't provide methods that generate <xref:System.Boolean> values.</span></span> <span data-ttu-id="1ae25-240">Allerdings können Sie Ihre eigenen Klasse oder Methode dafür definieren.</span><span class="sxs-lookup"><span data-stu-id="1ae25-240">However, you can define your own class or method to do that.</span></span> <span data-ttu-id="1ae25-241">Das folgende Beispiel definiert eine Klasse, `BooleanGenerator`, mit einer einzelnen Methode, `NextBoolean`.</span><span class="sxs-lookup"><span data-stu-id="1ae25-241">The following example defines a class, `BooleanGenerator`, with a single method, `NextBoolean`.</span></span> <span data-ttu-id="1ae25-242">Die `BooleanGenerator` -Klasse speichert ein <xref:System.Random> -Objekt als eine private Variable.</span><span class="sxs-lookup"><span data-stu-id="1ae25-242">The `BooleanGenerator` class stores a <xref:System.Random> object as a private variable.</span></span> <span data-ttu-id="1ae25-243">Die `NextBoolean` Methodenaufrufe der <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> Methode und übergibt das Ergebnis an die <xref:System.Convert.ToBoolean%28System.Int32%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="1ae25-243">The `NextBoolean` method calls the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method and passes the result to the <xref:System.Convert.ToBoolean%28System.Int32%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="1ae25-244">Beachten Sie, dass 2 als Argument an die obere Grenze der Zufallszahl verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="1ae25-244">Note that 2 is used as the argument to specify the upper bound of the random number.</span></span> <span data-ttu-id="1ae25-245">Da dies ein ausgeschlossener Wert ist, gibt der Aufruf der Methode zurück, 0 oder 1.</span><span class="sxs-lookup"><span data-stu-id="1ae25-245">Since this is an exclusive value, the method call returns either 0 or 1.</span></span>  
  
 [!code-cpp[System.Random#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/booleans1.cpp#8)]
 [!code-csharp[System.Random#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/booleans1.cs#8)]
 [!code-vb[System.Random#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/booleans1.vb#8)]  
  
 <span data-ttu-id="1ae25-246">Statt eine separate Klasse für das Generieren von zufälligen <xref:System.Boolean> Werte im Beispiel können einfach eine einzelne Methode definiert haben.</span><span class="sxs-lookup"><span data-stu-id="1ae25-246">Instead of creating a separate class to generate random <xref:System.Boolean> values, the example could simply have defined a single method.</span></span> <span data-ttu-id="1ae25-247">In diesem Fall jedoch die <xref:System.Random> Objekt sollte als eine Variable auf Klassenebene, um zu vermeiden, Instanziierung eines neuen definiert wurden <xref:System.Random> -Instanz in jedem Methodenaufruf.</span><span class="sxs-lookup"><span data-stu-id="1ae25-247">In that case, however, the <xref:System.Random> object should have been defined as a class-level variable to avoid instantiating a new <xref:System.Random> instance in each method call.</span></span> <span data-ttu-id="1ae25-248">In Visual Basic die Random-Instanz definiert werden kann, als eine [statische](~/docs/visual-basic/language-reference/modifiers/static.md) -Variable in der `NextBoolean` Methode.</span><span class="sxs-lookup"><span data-stu-id="1ae25-248">In Visual Basic, the Random instance can be defined as a [Static](~/docs/visual-basic/language-reference/modifiers/static.md) variable in the `NextBoolean` method.</span></span>  <span data-ttu-id="1ae25-249">Im folgende Beispiel stellt eine Implementierung bereit.</span><span class="sxs-lookup"><span data-stu-id="1ae25-249">The following example provides an implementation.</span></span>  
  
 [!code-cpp[System.Random#20](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/booleans2.cpp#20)]
 [!code-csharp[System.Random#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/booleans2.cs#20)]
 [!code-vb[System.Random#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/booleans2.vb#20)]  
  
<a name="Long"></a>   
### <a name="generate-random-64-bit-integers"></a><span data-ttu-id="1ae25-250">Generieren von zufälligen 64-Bit-Ganzzahlen</span><span class="sxs-lookup"><span data-stu-id="1ae25-250">Generate random 64-bit integers</span></span>  
 <span data-ttu-id="1ae25-251">Die Überladungen der <xref:System.Random.Next%2A> Methodenrückgabewert 32-Bit-Ganzzahlen.</span><span class="sxs-lookup"><span data-stu-id="1ae25-251">The overloads of the <xref:System.Random.Next%2A> method return 32-bit integers.</span></span> <span data-ttu-id="1ae25-252">In einigen Fällen möchten jedoch möglicherweise arbeiten mit der 64-Bit-Ganzzahlen.</span><span class="sxs-lookup"><span data-stu-id="1ae25-252">However, in some cases, you might want to work with 64-bit integers.</span></span> <span data-ttu-id="1ae25-253">Sie können dies wie folgt tun:</span><span class="sxs-lookup"><span data-stu-id="1ae25-253">You can do this as follows:</span></span>  
  
1.  <span data-ttu-id="1ae25-254">Rufen Sie die <xref:System.Random.NextDouble%2A> Datenpunkt Methode zum Abrufen der Gleitkommazahl mit doppelter Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="1ae25-254">Call the <xref:System.Random.NextDouble%2A> method to retrieve a double-precision floating point value.</span></span>  
  
2.  <span data-ttu-id="1ae25-255">Multiplizieren Sie diesen Wert durch <xref:System.Int64.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1ae25-255">Multiply that value by <xref:System.Int64.MaxValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="1ae25-256">Im folgende Beispiel verwendet dieses Verfahren zum Generieren von 20 Millionen zufälliger ganzer lange Zahlen und stuft sie in 10 gleich große Gruppen.</span><span class="sxs-lookup"><span data-stu-id="1ae25-256">The following example uses this technique to generate 20 million random long integers and categorizes them in 10 equal groups.</span></span> <span data-ttu-id="1ae25-257">Er wertet dann die Verteilung der zufälligen Zahlen durch zählen der Anzahl in jeder Gruppe von 0 bis <xref:System.Int64.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1ae25-257">It then evaluates the distribution of the random numbers by counting the number in each group from 0 to <xref:System.Int64.MaxValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1ae25-258">Wie die Ausgabe des Beispiels zeigt, werden die Zahlen über den Bereich einer langen ganzen Zahl mehr oder weniger gleichmäßig verteilt.</span><span class="sxs-lookup"><span data-stu-id="1ae25-258">As the output from the example shows, the numbers are distributed more or less equally through the range of a long integer.</span></span>  
  
 [!code-cpp[System.Random#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/long1.cpp#14)]
 [!code-csharp[System.Random#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/long1.cs#14)]
 [!code-vb[System.Random#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/long1.vb#14)]  
  
 <span data-ttu-id="1ae25-259">Alternatives Verfahren, dass Bitmanipulation verwendet keine echten Zufallszahlen generiert.</span><span class="sxs-lookup"><span data-stu-id="1ae25-259">An alternative technique that uses bit manipulation does not generate truly random numbers.</span></span> <span data-ttu-id="1ae25-260">Diese Methode ruft <xref:System.Random.Next> zum Generieren von zwei ganzen Zahlen, links verschiebt eine von 32 Bits und OR werden zusammen.</span><span class="sxs-lookup"><span data-stu-id="1ae25-260">This technique calls <xref:System.Random.Next> to generate two integers, left-shifts one by 32 bits, and ORs them together.</span></span> <span data-ttu-id="1ae25-261">Diese Technik bietet zwei Einschränkungen:</span><span class="sxs-lookup"><span data-stu-id="1ae25-261">This technique has two limitations:</span></span>  
  
1.  <span data-ttu-id="1ae25-262">Da Bit 31 das signierte Bit ist, ist der Wert in 31 Bit, das sich ergebende langen ganzen Zahl immer 0.</span><span class="sxs-lookup"><span data-stu-id="1ae25-262">Because bit 31 is the sign bit, the value in bit 31 of the resulting long integer is always 0.</span></span>  <span data-ttu-id="1ae25-263">Dies kann behoben werden, durch Generieren einer zufälligen 0 oder 1, es links-Verschiebung, 31 Bits und oder-Verknüpfung mit der ursprünglichen zufällige lange ganze Zahl.</span><span class="sxs-lookup"><span data-stu-id="1ae25-263">This can be addressed by generating a random 0 or 1, left-shifting it 31 bits, and ORing it with the original random long integer.</span></span>  
  
2.  <span data-ttu-id="1ae25-264">Doch Spaß beiseite, da die Wahrscheinlichkeit, die den Rückgabewert von <xref:System.Random.Next> 0, wird ggf. einige zufällig gewählte Zahlen im Bereich von 0 x 0 – 0x00000000FFFFFFFF.</span><span class="sxs-lookup"><span data-stu-id="1ae25-264">More seriously, because the probability that the value returned by <xref:System.Random.Next> will be 0, there will be few if any random numbers in the range 0x0-0x00000000FFFFFFFF.</span></span>  
  
<a name="Bytes"></a>   
### <a name="retrieve-bytes-in-a-specified-range"></a><span data-ttu-id="1ae25-265">Abrufen der Bytes in einem angegebenen Bereich</span><span class="sxs-lookup"><span data-stu-id="1ae25-265">Retrieve bytes in a specified range</span></span>  
 <span data-ttu-id="1ae25-266">Die Überladungen von der <xref:System.Random.Next%2A> Methode ermöglichen Ihnen die Angabe des Bereichs von Zufallszahlen, aber die <xref:System.Random.NextBytes%2A> Methode nicht.</span><span class="sxs-lookup"><span data-stu-id="1ae25-266">The overloads of the <xref:System.Random.Next%2A> method allow you to specify the range of random numbers, but the <xref:System.Random.NextBytes%2A> method does not.</span></span> <span data-ttu-id="1ae25-267">Das folgende Beispiel implementiert eine `NextBytes` -Methode, die Sie den Bereich der zurückgegebenen Bytes angeben kann.</span><span class="sxs-lookup"><span data-stu-id="1ae25-267">The following example implements a `NextBytes` method that lets you specify the range of the returned bytes.</span></span> <span data-ttu-id="1ae25-268">Definiert eine `Random2` abgeleitete Klasse <xref:System.Random> und überlädt die `NextBytes` Methode.</span><span class="sxs-lookup"><span data-stu-id="1ae25-268">It defines a `Random2` class that derives from <xref:System.Random> and overloads its `NextBytes` method.</span></span>  
  
 [!code-cpp[System.Random#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/bytes1.cpp#9)]
 [!code-csharp[System.Random#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/bytes1.cs#9)]
 [!code-vb[System.Random#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/bytes1.vb#9)]  
  
 <span data-ttu-id="1ae25-269">Die `NextBytes(Byte[], Byte, Byte)` Methode umschließt einen Aufruf der <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> Methode und gibt den minimalen Wert und eine, die größer als der maximale Wert (in diesem Fall 0 und 101), dass wir in das Bytearray zurückgegeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="1ae25-269">The `NextBytes(Byte[], Byte, Byte)` method wraps a call to the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method and specifies the minimum value and one greater than the maximum value (in this case, 0 and 101) that we want returned in the byte array.</span></span> <span data-ttu-id="1ae25-270">Da wir Sie sicher sind, dass die ganzzahligen Werte von zurückgegeben. die <xref:System.Random.Next%2A> Methode werden innerhalb des Bereichs von der <xref:System.Byte> -Datentyp, wir können sicher umgewandelt werden (in c#) oder konvertieren Sie sie (in Visual Basic) von ganzen Zahlen, in Byte.</span><span class="sxs-lookup"><span data-stu-id="1ae25-270">Because we are sure that the integer values returned by the <xref:System.Random.Next%2A> method are within the range of the <xref:System.Byte> data type, we can safely cast them (in C#) or convert them (in Visual Basic) from integers to bytes.</span></span>  
  
<a name="Array"></a>   
### <a name="retrieve-an-element-from-an-array-or-collection-at-random"></a><span data-ttu-id="1ae25-271">Ein Element nach dem Zufallsprinzip aus einem Array oder einer Auflistung abrufen</span><span class="sxs-lookup"><span data-stu-id="1ae25-271">Retrieve an element from an array or collection at random</span></span>  
 <span data-ttu-id="1ae25-272">Zufallszahlen dienen häufig als Indizes, um Werte aus Arrays oder Auflistungen abzurufen.</span><span class="sxs-lookup"><span data-stu-id="1ae25-272">Random numbers often serve as indexes to retrieve values from arrays or collections.</span></span> <span data-ttu-id="1ae25-273">Um einen zufälligen Indexwert abzurufen, können Sie Aufrufen der <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> -Methode, und verwenden Sie die untere Grenze des Arrays als Wert für die `minValue` Argument und eins größer ist als die obere Grenze des Arrays als Wert für die `maxValue` Argument.</span><span class="sxs-lookup"><span data-stu-id="1ae25-273">To retrieve a random index value, you can call the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method, and use the lower bound of the array as the value of its `minValue` argument and one greater than the upper bound of the array as the value of its `maxValue` argument.</span></span> <span data-ttu-id="1ae25-274">Für ein nullbasiertes Array, dies entspricht der <xref:System.Array.Length%2A> Eigenschaft oder eins größer ist als der Rückgabewert von der <xref:System.Array.GetUpperBound%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="1ae25-274">For a zero-based array, this is equivalent to its <xref:System.Array.Length%2A> property, or one greater than the value returned by the <xref:System.Array.GetUpperBound%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="1ae25-275">Im folgende Beispiel ruft den Namen einer Stadt in den Vereinigten Staaten nach dem Zufallsprinzip aus einem Array aus Städten ab.</span><span class="sxs-lookup"><span data-stu-id="1ae25-275">The following example randomly retrieves the name of a city in the United States from an array of cities.</span></span>  
  
 [!code-cpp[System.Random#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/array1.cpp#10)]
 [!code-csharp[System.Random#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/array1.cs#10)]
 [!code-vb[System.Random#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/array1.vb#10)]  
  
<a name="UniqueArray"></a>   
### <a name="retrieve-a-unique-element-from-an-array-or-collection"></a><span data-ttu-id="1ae25-276">Ein eindeutiges Element aus einem Array oder einer Auflistung abrufen</span><span class="sxs-lookup"><span data-stu-id="1ae25-276">Retrieve a unique element from an array or collection</span></span>  
 <span data-ttu-id="1ae25-277">Eine Zufallszahlen-Generators kann doppelte Werte immer zurück.</span><span class="sxs-lookup"><span data-stu-id="1ae25-277">A random number generator can always return duplicate values.</span></span> <span data-ttu-id="1ae25-278">Der Bereich der Werte kleiner wird, oder die Anzahl der Werte, die generiert wird, größer, steigt die Wahrscheinlichkeit von Duplikaten.</span><span class="sxs-lookup"><span data-stu-id="1ae25-278">As the range of numbers becomes smaller or the number of values generated becomes larger, the probability of duplicates grows.</span></span> <span data-ttu-id="1ae25-279">Wenn zufällige Werte eindeutig sein müssen, werden weitere Zahlen generiert, um Duplikate zu kompensieren zunehmend eine schlechte Leistung.</span><span class="sxs-lookup"><span data-stu-id="1ae25-279">If random values must be unique, more numbers are generated to compensate for duplicates, resulting in increasingly poor performance.</span></span>  
  
 <span data-ttu-id="1ae25-280">Es gibt eine Reihe von Techniken zum Behandeln dieses Szenarios.</span><span class="sxs-lookup"><span data-stu-id="1ae25-280">There are a number of techniques to handle this scenario.</span></span> <span data-ttu-id="1ae25-281">Eine gängige Lösung ist ein Array oder -Auflistung, die die Werte enthält, abgerufen werden sollen, und ein paralleles Array, das zufällige Gleitkommazahlen enthält zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="1ae25-281">One common solution is to create an array or collection that contains the values to be retrieved, and a parallel array that contains random floating-point numbers.</span></span> <span data-ttu-id="1ae25-282">Das zweite Array wird mit Zufallszahlen gefüllt, die zum Zeitpunkt der erste Array erstellt, und die <xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=nameWithType> Methode wird verwendet, um das erste Array zu sortieren, indem Sie mithilfe der Werte in den parallelen Arrays.</span><span class="sxs-lookup"><span data-stu-id="1ae25-282">The second array is populated with random numbers at the time the first array is created, and the <xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=nameWithType> method is used to sort the first array by using the values in the parallel array.</span></span>  
  
 <span data-ttu-id="1ae25-283">Z. B. Wenn Sie ein Spiel Solitaire entwickeln, möchten Sie sicherstellen, dass jede Karte nur einmal verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="1ae25-283">For example, if you're developing a Solitaire game, you want to ensure that each card is used only once.</span></span> <span data-ttu-id="1ae25-284">Anstatt Zufallszahlen zum Abrufen einer Karte und nachverfolgt, ob die Karte bereits behandelt wurde, können Sie ein paralleles Array von Zufallszahlen erstellen, die verwendet werden können, um den Stapel zu sortieren.</span><span class="sxs-lookup"><span data-stu-id="1ae25-284">Instead of generating random numbers to retrieve a card and tracking whether that card has already been dealt, you can create a parallel array of random numbers that can be used to sort the deck.</span></span> <span data-ttu-id="1ae25-285">Nach der Kartenstapel sortiert ist, kann Ihre app einen Zeiger, um anzugeben, den Index der nächsten Karte des Kartenstapels beibehalten.</span><span class="sxs-lookup"><span data-stu-id="1ae25-285">Once the deck is sorted, your app can maintain a pointer to indicate the index of the next card on the deck.</span></span>  
  
 <span data-ttu-id="1ae25-286">Dieser Ansatz wird anhand des folgenden Beispiels veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="1ae25-286">The following example illustrates this approach.</span></span> <span data-ttu-id="1ae25-287">Definiert eine `Card` Klasse die darstellt, die eine Spielkarte und einen `Dealer` -Klasse, die einen Satz mischenden Karten behandelt.</span><span class="sxs-lookup"><span data-stu-id="1ae25-287">It defines a `Card` class that represents a playing card and a `Dealer` class that deals a deck of shuffled cards.</span></span> <span data-ttu-id="1ae25-288">Die `Dealer` Klassenkonstruktor füllt zwei Arrays: eine `deck` Array, das über einen Klassenbereich und, das alle Karten des Kartenstapels; und einem lokalen darstellt `order` Array, das die gleiche von Elementen wie Anzahl die `deck` array und aufgefüllt mit nach dem Zufallsprinzip generiert <xref:System.Double> Werte.</span><span class="sxs-lookup"><span data-stu-id="1ae25-288">The `Dealer` class constructor populates two arrays: a `deck` array that has class scope and that represents all the cards in the deck; and a local `order` array that has the same number of elements as the `deck` array and is populated with randomly generated <xref:System.Double> values.</span></span>  <span data-ttu-id="1ae25-289">Die <xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=nameWithType> Methode wird aufgerufen, um das Sortieren der `deck` Array basierend auf den Werten in der `order` Array.</span><span class="sxs-lookup"><span data-stu-id="1ae25-289">The <xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=nameWithType> method is then called to sort the `deck` array based on the values in the `order` array.</span></span>  
  
 [!code-cpp[System.Random#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/uniquearray1.cpp#11)]
 [!code-csharp[System.Random#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/uniquearray1.cs#11)]
 [!code-vb[System.Random#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/uniquearray1.vb#11)]  
  
   
  
## Examples  
 <span data-ttu-id="1ae25-290">Das folgende Beispiel erstellt einen einzelnen Zufallszahlen-Generator und ruft seine <xref:System.Random.NextBytes%2A>, <xref:System.Random.Next%2A>, und <xref:System.Random.NextDouble%2A> Methoden zum Generieren von Sequenzen von Zufallszahlen in verschiedenen Bereichen.</span><span class="sxs-lookup"><span data-stu-id="1ae25-290">The following example creates a single random number generator and calls its <xref:System.Random.NextBytes%2A>, <xref:System.Random.Next%2A>, and <xref:System.Random.NextDouble%2A> methods to generate sequences of random numbers within different ranges.</span></span>  
  
 [!code-cpp[System.Random#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/random2.cpp#2)]
 [!code-csharp[System.Random#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/Random2.cs#2)]
 [!code-vb[System.Random#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/Random2.vb#2)]  
  
 <span data-ttu-id="1ae25-291">Im folgenden Beispiel wird eine zufällige ganze Zahl, die sie als Index verwendet. um einen Zeichenfolgenwert aus einem Array abzurufen.</span><span class="sxs-lookup"><span data-stu-id="1ae25-291">The following example generates a random integer that it uses as an index to retrieve a string value from an array.</span></span>  
  
 [!code-cpp[System.Random.Next#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Next/CPP/next1.cpp#3)]
 [!code-csharp[System.Random.Next#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Next/CS/next1.cs#3)]
 [!code-vb[System.Random.Next#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Next/VB/next1.vb#3)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="1ae25-292">In .NET Framework 1.0 und 1.1, eine minimale Implementierung einer Klasse abgeleitet <see cref="T:System.Random" /> erforderlich sind, überschreiben die <see cref="M:System.Random.Sample" /> Methode, um einen neuen oder geänderten Algorithmus zum Generieren von Zufallszahlen zu definieren.</span>
        <span class="sxs-lookup">
          <span data-stu-id="1ae25-292">In the .NET Framework 1.0 and 1.1, a minimum implementation of a class derived from <see cref="T:System.Random" /> required overriding the <see cref="M:System.Random.Sample" /> method to define a new or modified algorithm for generating random numbers.</span>
        </span>
        <span data-ttu-id="1ae25-293">Die abgeleitete Klasse kann anschließend die basisklassenimplementierung von kommen die <see cref="M:System.Random.Next" />, <see cref="M:System.Random.Next(System.Int32)" />, <see cref="M:System.Random.Next(System.Int32,System.Int32)" />, <see cref="M:System.Random.NextBytes(System.Byte[])" />, und <see cref="M:System.Random.NextDouble" /> Methoden zum Aufrufen der Implementierung der abgeleiteten Klasse die <see cref="M:System.Random.Sample" /> Methode.</span>
        <span class="sxs-lookup">
          <span data-stu-id="1ae25-293">The derived class could then rely on the base class implementation of the <see cref="M:System.Random.Next" />, <see cref="M:System.Random.Next(System.Int32)" />, <see cref="M:System.Random.Next(System.Int32,System.Int32)" />, <see cref="M:System.Random.NextBytes(System.Byte[])" />, and <see cref="M:System.Random.NextDouble" /> methods to call the derived class implementation of the <see cref="M:System.Random.Sample" /> method.</span>
        </span>
        <span data-ttu-id="1ae25-294">In .NET Framework 2.0 und höher wird das Verhalten der <see cref="M:System.Random.Next" />, <see cref="M:System.Random.Next(System.Int32,System.Int32)" />, und <see cref="M:System.Random.NextBytes(System.Byte[])" /> Methoden wurden geändert, sodass diese Methoden nicht unbedingt Implementierung der abgeleiteten Klasse Aufrufen der <see cref="M:System.Random.Sample" /> Methode.</span>
        <span class="sxs-lookup">
          <span data-stu-id="1ae25-294">In the .NET Framework 2.0 and later, the behavior of the <see cref="M:System.Random.Next" />, <see cref="M:System.Random.Next(System.Int32,System.Int32)" />, and <see cref="M:System.Random.NextBytes(System.Byte[])" /> methods have changed so that these methods do not necessarily call the derived class implementation of the <see cref="M:System.Random.Sample" /> method.</span>
        </span>
        <span data-ttu-id="1ae25-295">Daher von abgeleiteten Klassen <see cref="T:System.Random" /> , die als Ziel .NET Framework 2.0 und höher sollten auch diese drei Methoden überschreiben.</span>
        <span class="sxs-lookup">
          <span data-stu-id="1ae25-295">As a result, classes derived from <see cref="T:System.Random" /> that target the .NET Framework 2.0 and later should also override these three methods.</span>
        </span>
      </para>
    </block>
    <block subset="none" type="usage">
      <para>
        <span data-ttu-id="1ae25-296">Die Implementierung der vom Zufallszahlen-Generator in der <see cref="T:System.Random" /> Klasse ist nicht zwingend von Hauptversionen von .NET Framework unverändert.</span>
        <span class="sxs-lookup">
          <span data-stu-id="1ae25-296">The implementation of the random number generator in the <see cref="T:System.Random" /> class isn't guaranteed to remain the same across major versions of the .NET Framework.</span>
        </span>
        <span data-ttu-id="1ae25-297">Daher sollte nicht Sie davon ausgehen, dass der gleiche Ausgangswert in der gleichen pseudozufällige Sequenz in verschiedenen Versionen von .NET Framework führt.</span>
        <span class="sxs-lookup">
          <span data-stu-id="1ae25-297">As a result, you shouldn't assume that the same seed will result in the same pseudo-random sequence in different versions of the .NET Framework.</span>
        </span>
      </para>
    </block>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1ae25-298">Initialisiert eine neue Instanz der <see cref="T:System.Random" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ae25-298">Initializes a new instance of the <see cref="T:System.Random" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Random ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Random();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1ae25-299">Initialisiert eine neue Instanz der <see cref="T:System.Random" />-Klasse unter Verwendung eines zeitabhängigen Standardstartwerts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ae25-299">Initializes a new instance of the <see cref="T:System.Random" /> class, using a time-dependent default seed value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ae25-300">Der Standardstartwert wird von der Systemuhr abgeleitet und verfügt über begrenzte Auflösung.</span><span class="sxs-lookup"><span data-stu-id="1ae25-300">The default seed value is derived from the system clock and has finite resolution.</span></span> <span data-ttu-id="1ae25-301">Als Ergebnis verschiedene <xref:System.Random> Objekte, die unmittelbar nacheinander durch einen Aufruf des Standardkonstruktors erstellt werden müssen identische Ausgangswert Standardwerte, und daher erzeugen identische Sätze von Zufallszahlen.</span><span class="sxs-lookup"><span data-stu-id="1ae25-301">As a result, different <xref:System.Random> objects that are created in close succession by a call to the default constructor will have identical default seed values and, therefore, will produce identical sets of random numbers.</span></span> <span data-ttu-id="1ae25-302">Dieses Problem kann vermieden werden, mithilfe einer einzelnes <xref:System.Random> Objekt, das alle Zufallszahlen zu generieren.</span><span class="sxs-lookup"><span data-stu-id="1ae25-302">This problem can be avoided by using a single <xref:System.Random> object to generate all random numbers.</span></span> <span data-ttu-id="1ae25-303">Sie können auch umgehen, indem der Seed-Wert, der von der Systemuhr zurückgegebenen ändern und anschließend explizit dieser neuen Ausgangswerts, um die <xref:System.Random.%23ctor%28System.Int32%29> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="1ae25-303">You can also work around it by modifying the seed value returned by the system clock and then explicitly providing this new seed value to the <xref:System.Random.%23ctor%28System.Int32%29> constructor.</span></span> <span data-ttu-id="1ae25-304">Weitere Informationen finden Sie unter den <xref:System.Random.%23ctor%28System.Int32%29> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="1ae25-304">For more information, see the <xref:System.Random.%23ctor%28System.Int32%29> constructor.</span></span>  
  
 <span data-ttu-id="1ae25-305">Rufen Sie diesen Konstruktor, ggf. Ihre Zufallszahlengenerator, um eine zufällige Sequenz von Zahlen zu generieren.</span><span class="sxs-lookup"><span data-stu-id="1ae25-305">Call this constructor if you want your random number generator to generate a random sequence of numbers.</span></span> <span data-ttu-id="1ae25-306">Rufen Sie eine feste Abfolge von Zufallszahlen generieren, die für verschiedene random Number-Generatoren werden die <xref:System.Random.%23ctor%28System.Int32%29> Konstruktor mit einem festen Ausgangswert.</span><span class="sxs-lookup"><span data-stu-id="1ae25-306">To generate a fixed  sequence of random numbers that will be the same for different random number generators, call the <xref:System.Random.%23ctor%28System.Int32%29> constructor with a fixed seed value .</span></span> <span data-ttu-id="1ae25-307">Dies <xref:System.Random> Überladung des Konstruktors wird häufig verwendet werden, beim Testen von apps, die Zufallszahlen zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="1ae25-307">This <xref:System.Random> constructor overload is frequently used when testing apps that use random numbers.</span></span>  
  
 <span data-ttu-id="1ae25-308">Nachdem Sie den Zufallszahlengenerator instanziiert haben, rufen Sie einzelne <xref:System.Random> Methoden, wie z. B. <xref:System.Random.Next> oder <xref:System.Random.NextDouble>, um Zufallszahlen zu generieren.</span><span class="sxs-lookup"><span data-stu-id="1ae25-308">Once you've instantiated the random number generator, you call individual <xref:System.Random> methods, such as <xref:System.Random.Next> or <xref:System.Random.NextDouble>, to generate random numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ae25-309">Im folgenden Beispiel wird den Standardkonstruktor drei instanziieren <xref:System.Random> Objekte und eine Sequenz von fünf zufällige ganze Zahlen enthält, für die einzelnen.</span><span class="sxs-lookup"><span data-stu-id="1ae25-309">The following example uses the default constructor to instantiate three <xref:System.Random> objects and displays a sequence of five random integers for each.</span></span> <span data-ttu-id="1ae25-310">Da die ersten beiden <xref:System.Random> Objekte werden unmittelbar nacheinander erstellt, sie mit identischen Startwerten basierend auf der Systemzeit instanziiert sind und deshalb erzeugen sie eine identische Folge von Zufallszahlen.</span><span class="sxs-lookup"><span data-stu-id="1ae25-310">Because the first two <xref:System.Random> objects are created in close succession, they are instantiated using identical seed values based on the system clock and, therefore, they produce an identical sequence of random numbers.</span></span> <span data-ttu-id="1ae25-311">Andererseits, der Standardkonstruktor des dritten <xref:System.Random> -Objekts aufgerufen wird, nach einer Verzögerung von zwei Sekunden durch Aufrufen der <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="1ae25-311">On the other hand, the default constructor of the third <xref:System.Random> object is called after a two-second delay caused by calling the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="1ae25-312">Da dies einen anderer Startwert für die dritte erzeugt <xref:System.Random> Objekt, es wird eine andere Sequenz von Zufallszahlen generiert.</span><span class="sxs-lookup"><span data-stu-id="1ae25-312">Because this produces a different seed value for the third <xref:System.Random> object, it produces a different sequence of random numbers.</span></span>  
  
 [!code-csharp[System.Random.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Ctor/CS/ctor1.cs#2)]
 [!code-vb[System.Random.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Ctor/VB/ctor1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Random (int Seed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 Seed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Seed As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Random(int Seed);" />
      <MemberSignature Language="F#" Value="new Random : int -&gt; Random" Usage="new System.Random Seed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="Seed" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Seed">
          <span data-ttu-id="1ae25-313">Eine Zahl, mit der ein Startwert für Folgen von Pseudozufallszahlen berechnet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ae25-313">A number used to calculate a starting value for the pseudo-random number sequence.</span>
          </span>
          <span data-ttu-id="1ae25-314">Wenn eine negative Zahl angegeben wird, wird der absolute Wert der Zahl verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ae25-314">If a negative number is specified, the absolute value of the number is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ae25-315">Initialisiert eine neue Instanz der <see cref="T:System.Random" />-Klasse unter Verwendung des angegebenen Startwerts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ae25-315">Initializes a new instance of the <see cref="T:System.Random" /> class, using the specified seed value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ae25-316">Bereitstellen einer identischen Startwerts in andere <xref:System.Random> Objekte bewirkt, dass jede Instanz identische Sequenzen von Zufallszahlen erzeugen.</span><span class="sxs-lookup"><span data-stu-id="1ae25-316">Providing an identical seed value to different <xref:System.Random> objects causes each instance to produce identical sequences of random numbers.</span></span> <span data-ttu-id="1ae25-317">Dies erfolgt häufig beim Testen von apps, die von random Number-Generatoren abhängen.</span><span class="sxs-lookup"><span data-stu-id="1ae25-317">This is often done when testing apps that rely on random number generators.</span></span>  
  
 <span data-ttu-id="1ae25-318">Wenn Ihre Anwendung verschiedene Folgen von Zufallszahlen erfordert, rufen Sie diesen Konstruktor wiederholt mit verschiedenen Ausgangswerte.</span><span class="sxs-lookup"><span data-stu-id="1ae25-318">If your application requires different random number sequences, invoke this constructor repeatedly with different seed values.</span></span> <span data-ttu-id="1ae25-319">Eine Möglichkeit, einen eindeutigen Ausgangswert zu erstellen ist, zeitabhängige zu erleichtern.</span><span class="sxs-lookup"><span data-stu-id="1ae25-319">One way to produce a unique seed value is to make it time-dependent.</span></span> <span data-ttu-id="1ae25-320">Die Systemuhr, z. B. den Ausgangswert abgeleitet werden, als die <xref:System.Random.%23ctor> Überladung ist.</span><span class="sxs-lookup"><span data-stu-id="1ae25-320">For example, derive the seed value from the system clock, as the <xref:System.Random.%23ctor> overload does.</span></span> <span data-ttu-id="1ae25-321">Die Systemuhr möglicherweise jedoch nicht genügend Auflösung verschiedene Aufrufen dieses Konstruktors mit einem anderen Ausgangswert angeben.</span><span class="sxs-lookup"><span data-stu-id="1ae25-321">However, the system clock might not have sufficient resolution to provide different invocations of this constructor with a different seed value.</span></span> <span data-ttu-id="1ae25-322">Dies führt in random Number-Generatoren, die identische Sequenzen von Pseudozufallszahlen, generieren, wie die ersten beiden veranschaulicht <xref:System.Random> Objekte im folgenden Beispiel.</span><span class="sxs-lookup"><span data-stu-id="1ae25-322">This results in random number generators that generate identical sequences of pseudo-random numbers, as illustrated by the first two <xref:System.Random> objects in the following example.</span></span> <span data-ttu-id="1ae25-323">Um dies zu verhindern, wenden Sie einen Algorithmus zum unterscheiden des Seed-Wertes in jeder Aufruf oder ein Aufruf der <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> Methode, um sicherzustellen, dass Sie jeder Konstruktor mit einem anderen Ausgangswert angeben.</span><span class="sxs-lookup"><span data-stu-id="1ae25-323">To prevent this, apply an algorithm to differentiate the seed value in each invocation, or call the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method to ensure that you provide each constructor with a different seed value.</span></span>  
  
 [!code-csharp[System.Random.Ctor#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Ctor/CS/ctor4.cs#4)]
 [!code-vb[System.Random.Ctor#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Ctor/VB/ctor4.vb#4)]  
  
 <span data-ttu-id="1ae25-324">Eine weitere Möglichkeit ist eine einzelne Instanziierung <xref:System.Random> Objekt, das Sie verwenden, um die Zufallszahlen in Ihrer Anwendung zu generieren.</span><span class="sxs-lookup"><span data-stu-id="1ae25-324">Another option is to instantiate a single <xref:System.Random> object that you use to generate all the random numbers in your application.</span></span> <span data-ttu-id="1ae25-325">Dies ergibt eine etwas bessere Leistung, da Instanziieren eines Zufallszahlen-Generators recht teuer ist.</span><span class="sxs-lookup"><span data-stu-id="1ae25-325">This yields slightly better performance, since instantiating a random number generator is fairly expensive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ae25-326">Das folgende Beispiel erstellt <xref:System.Random> Objekte mit dem Konstruktor der Klasse, die einen Ausgangswert Parameter und generiert eine Sequenz von Zufallszahlen und Double-Werten.</span><span class="sxs-lookup"><span data-stu-id="1ae25-326">The following example creates <xref:System.Random> objects with the class constructor that takes a seed parameter and generates a sequence of random integers and doubles.</span></span> <span data-ttu-id="1ae25-327">Im Beispiel wird veranschaulicht, dass die gleiche Sequenz generiert, wird bei der <xref:System.Random> Objekt mit dem Parameter-Konstruktor und einem Startwert erneut erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="1ae25-327">The example illustrates that the same sequence is generated when the <xref:System.Random> object is created again with the constructor and seed parameter.</span></span>  
  
 [!code-cpp[System.Random.Ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Ctor/CPP/ctor.cpp#1)]
 [!code-csharp[System.Random.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Ctor/CS/ctor.cs#1)]
 [!code-vb[System.Random.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Ctor/VB/ctor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Next">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1ae25-328">Gibt eine Zufallsganzzahl zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ae25-328">Returns a random integer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public virtual int Next ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Next() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.Next" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Next () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Next();" />
      <MemberSignature Language="F#" Value="abstract member Next : unit -&gt; int&#xA;override this.Next : unit -&gt; int" Usage="random.Next " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1ae25-329">Gibt eine nicht negative Zufallsganzzahl zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ae25-329">Returns a non-negative random integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ae25-330">Eine ganze 32-Bit-Zahl mit Vorzeichen, die größer oder gleich 0 (null) und kleiner als <see cref="F:System.Int32.MaxValue" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ae25-330">A 32-bit signed integer that is greater than or equal to 0 and less than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ae25-331"><xref:System.Random.Next%2A?displayProperty=nameWithType> generiert eine zufällige Zahl, deren Wert liegt, zwischen 0 und kleiner als <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1ae25-331"><xref:System.Random.Next%2A?displayProperty=nameWithType> generates a random number whose value ranges from 0 to less than <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1ae25-332">Verwenden Sie zum Generieren einer Zufallszahl, dessen Wert im Bereich, von 0 auf eine andere positive Zahl der <xref:System.Random.Next%28System.Int32%29?displayProperty=nameWithType> -methodenüberladung.</span><span class="sxs-lookup"><span data-stu-id="1ae25-332">To generate a random number whose value ranges from 0 to some other positive number, use the <xref:System.Random.Next%28System.Int32%29?displayProperty=nameWithType> method overload.</span></span> <span data-ttu-id="1ae25-333">Verwenden Sie zum Generieren einer Zufallszahl innerhalb eines anderen Bereichs der <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> -methodenüberladung.</span><span class="sxs-lookup"><span data-stu-id="1ae25-333">To generate a random number within a different range, use the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ae25-334">Im folgenden Beispiel wird die wiederholte Aufrufe an die <xref:System.Random.Next%2A> Methode, um eine bestimmte Anzahl von vom Benutzer angeforderte Zufallszahlen zu generieren.</span><span class="sxs-lookup"><span data-stu-id="1ae25-334">The following example makes repeated calls to the <xref:System.Random.Next%2A> method to generate a specific number of random numbers requested by the user.</span></span> <span data-ttu-id="1ae25-335">Die <xref:System.Console.ReadLine%2A?displayProperty=nameWithType> Methode wird verwendet, um Kundeninformationen zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="1ae25-335">The <xref:System.Console.ReadLine%2A?displayProperty=nameWithType> method is used to get customer input.</span></span>  
  
 [!code-cpp[System.Random.Next#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Next/CPP/next3.cpp#5)]
 [!code-csharp[System.Random.Next#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Next/CS/next3.cs#5)]
 [!code-vb[System.Random.Next#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Next/VB/next3.vb#5)]  
  
 <span data-ttu-id="1ae25-336">Im folgende Beispiel wird eine Klasse von abgeleitet <xref:System.Random> generiert eine Sequenz von Zufallszahlen, deren Verteilung unterscheidet sich, bei der gleichmäßigen Verteilung von generiert die <xref:System.Random.Sample%2A> Methode der Basisklasse.</span><span class="sxs-lookup"><span data-stu-id="1ae25-336">The following example derives a class from <xref:System.Random> to generate a sequence of random numbers whose distribution differs from the uniform distribution generated by the <xref:System.Random.Sample%2A> method of the base class.</span></span> <span data-ttu-id="1ae25-337">Es überschreibt die <xref:System.Random.Sample%2A> Methode, um die Verteilung von Zufallszahlen und Außerkraftsetzungen bereitzustellen der <xref:System.Random.Next%2A?displayProperty=nameWithType> zu Folge von Zufallszahlen zu verwendende Methode.</span><span class="sxs-lookup"><span data-stu-id="1ae25-337">It overrides the <xref:System.Random.Sample%2A> method to provide the distribution of random numbers, and overrides the <xref:System.Random.Next%2A?displayProperty=nameWithType> method to use series of random numbers.</span></span>  
  
 [!code-cpp[System.Random.Sample#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Sample/cpp/sampleex.cpp#1)]
 [!code-csharp[System.Random.Sample#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Sample/CS/sample.cs#1)]
 [!code-vb[System.Random.Sample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Sample/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="1ae25-338">Ab .NET Framework, Version 2.0, bei der Ableitung einer Klasse von <see cref="T:System.Random" /> und überschreiben die <see cref="M:System.Random.Sample" /> -Methode, die von der Implementierung der abgeleiteten Klasse der bereitgestellte Verteilung der <see cref="M:System.Random.Sample" /> Methode wird nicht verwendet, in der Basisklasse aufrufen Implementierung der <see cref="M:System.Random.Next" /> Methode.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1ae25-338">Starting with the .NET Framework version 2.0, if you derive a class from <see cref="T:System.Random" /> and override the <see cref="M:System.Random.Sample" /> method, the distribution provided by the derived class implementation of the <see cref="M:System.Random.Sample" /> method is not used in calls to the base class implementation of the <see cref="M:System.Random.Next" /> method.</span>
            </span>
            <span data-ttu-id="1ae25-339">Stattdessen die gleichmäßigen Verteilung zurückgegeben, der von den Basis- <see cref="T:System.Random" /> Klasse wird verwendet.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1ae25-339">Instead, the uniform distribution returned by the base <see cref="T:System.Random" /> class is used.</span>
            </span>
            <span data-ttu-id="1ae25-340">Dieses Verhalten verbessert die gesamtleistung der <see cref="T:System.Random" /> Klasse.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1ae25-340">This behavior improves the overall performance of the <see cref="T:System.Random" /> class.</span>
            </span>
            <span data-ttu-id="1ae25-341">So ändern Sie dieses Verhalten zum Aufrufen der <see cref="M:System.Random.Sample" /> -Methode in der abgeleiteten Klasse, müssen Sie auch überschreiben die <see cref="M:System.Random.Next" /> Methode.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1ae25-341">To modify this behavior to call the <see cref="M:System.Random.Sample" /> method in the derived class, you must also override the <see cref="M:System.Random.Next" /> method.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public virtual int Next (int maxValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Next(int32 maxValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.Next(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Next (maxValue As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Next(int maxValue);" />
      <MemberSignature Language="F#" Value="abstract member Next : int -&gt; int&#xA;override this.Next : int -&gt; int" Usage="random.Next maxValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxValue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="maxValue">
          <span data-ttu-id="1ae25-342">Die exklusive obere Grenze der Zufallszahl, die generiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ae25-342">The exclusive upper bound of the random number to be generated.</span>
          </span>
          <span data-ttu-id="1ae25-343">
            <paramref name="maxValue" /> muss größer oder gleich 0 sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ae25-343">
              <paramref name="maxValue" /> must be greater than or equal to 0.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ae25-344">Gibt eine nicht negative Zufallsganzzahl zurück, die kleiner als das angegebene Maximum ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ae25-344">Returns a non-negative random integer that is less than the specified maximum.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ae25-345">Eine ganze 32-Bit-Zahl mit Vorzeichen, die größer oder gleich 0 (null) und kleiner als <paramref name="maxValue" /> ist, d.h., der Bereich der Rückgabewerte umfasst in der Regel 0 (null), aber nicht <paramref name="maxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ae25-345">A 32-bit signed integer that is greater than or equal to 0, and less than <paramref name="maxValue" />; that is, the range of return values ordinarily includes 0 but not <paramref name="maxValue" />.</span>
          </span>
          <span data-ttu-id="1ae25-346">Wenn jedoch <paramref name="maxValue" /> 0 (null) entspricht, wird <paramref name="maxValue" /> zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ae25-346">However, if <paramref name="maxValue" /> equals 0, <paramref name="maxValue" /> is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ae25-347">Die <xref:System.Random.Next%28System.Int32%29> Überladung gibt zufälligen ganze Zahlen, Bereich von 0 bis `maxValue` – 1.</span><span class="sxs-lookup"><span data-stu-id="1ae25-347">The <xref:System.Random.Next%28System.Int32%29> overload returns random integers that range from 0 to `maxValue` – 1.</span></span> <span data-ttu-id="1ae25-348">Aber wenn `maxValue` gleich 0 ist, gibt die Methode 0 zurück.</span><span class="sxs-lookup"><span data-stu-id="1ae25-348">However, if `maxValue` is 0, the method returns 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ae25-349">Im folgenden Beispiel wird die zufällige ganze Zahlen mit verschiedenen Überladungen von der <xref:System.Random.Next%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1ae25-349">The following example generates random integers with various overloads of the <xref:System.Random.Next%2A> method.</span></span>  
  
 [!code-cpp[System.Random.Next#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Next/CPP/next.cpp#1)]
 [!code-csharp[System.Random.Next#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Next/CS/next.cs#1)]
 [!code-vb[System.Random.Next#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Next/VB/next.vb#1)]  
  
 <span data-ttu-id="1ae25-350">Im folgenden Beispiel wird eine zufällige ganze Zahl, die sie als Index verwendet. um einen Zeichenfolgenwert aus einem Array abzurufen.</span><span class="sxs-lookup"><span data-stu-id="1ae25-350">The following example generates a random integer that it uses as an index to retrieve a string value from an array.</span></span> <span data-ttu-id="1ae25-351">Da der höchste Index des Arrays eine kleiner als die Länge wird der Wert des ist der <xref:System.Array.Length%2A?displayProperty=nameWithType> -Eigenschaft angegeben ist, als eine der `maxValue` Parameter.</span><span class="sxs-lookup"><span data-stu-id="1ae25-351">Because the highest index of the array is one less than its length, the value of the <xref:System.Array.Length%2A?displayProperty=nameWithType> property is supplied as a the `maxValue` parameter.</span></span>  
  
 [!code-cpp[System.Random.Next#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Next/CPP/next1.cpp#3)]
 [!code-csharp[System.Random.Next#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Next/CS/next1.cs#3)]
 [!code-vb[System.Random.Next#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Next/VB/next1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1ae25-352">
            <paramref name="maxValue" /> ist kleiner als 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ae25-352">
              <paramref name="maxValue" /> is less than 0.</span>
          </span>
        </exception>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public virtual int Next (int minValue, int maxValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Next(int32 minValue, int32 maxValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.Next(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Next (minValue As Integer, maxValue As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Next(int minValue, int maxValue);" />
      <MemberSignature Language="F#" Value="abstract member Next : int * int -&gt; int&#xA;override this.Next : int * int -&gt; int" Usage="random.Next (minValue, maxValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minValue" Type="System.Int32" />
        <Parameter Name="maxValue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minValue">
          <span data-ttu-id="1ae25-353">Die inklusive untere Grenze der zurückgegebenen Zufallszahl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ae25-353">The inclusive lower bound of the random number returned.</span>
          </span>
        </param>
        <param name="maxValue">
          <span data-ttu-id="1ae25-354">Die exklusive obere Grenze der zurückgegebenen Zufallszahl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ae25-354">The exclusive upper bound of the random number returned.</span>
          </span>
          <span data-ttu-id="1ae25-355">
            <paramref name="maxValue" /> muss größer oder gleich <paramref name="minValue" /> sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ae25-355">
              <paramref name="maxValue" /> must be greater than or equal to <paramref name="minValue" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ae25-356">Gibt eine Zufallsganzzahl zurück, die in einem angegebenen Bereich liegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ae25-356">Returns a random integer that is within a specified range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ae25-357">Eine 32-Bit-Ganzzahl mit Vorzeichen, die größer oder gleich <paramref name="minValue" /> und kleiner als <paramref name="maxValue" /> ist, d. h., der Bereich der Rückgabewerte umfasst <paramref name="minValue" />, aber nicht <paramref name="maxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ae25-357">A 32-bit signed integer greater than or equal to <paramref name="minValue" /> and less than <paramref name="maxValue" />; that is, the range of return values includes <paramref name="minValue" /> but not <paramref name="maxValue" />.</span>
          </span>
          <span data-ttu-id="1ae25-358">Wenn <paramref name="minValue" /> gleich <paramref name="maxValue" /> ist, wird <paramref name="minValue" /> zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ae25-358">If <paramref name="minValue" /> equals <paramref name="maxValue" />, <paramref name="minValue" /> is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ae25-359">Die <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> Überladung gibt eine zufälligen ganze Zahlen zwischen `minValue` zu `maxValue` – 1.</span><span class="sxs-lookup"><span data-stu-id="1ae25-359">The <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> overload returns random integers that range from `minValue` to `maxValue` – 1.</span></span> <span data-ttu-id="1ae25-360">Aber wenn `maxValue` gleich `minValue`, gibt die Methode zurück `minValue`.</span><span class="sxs-lookup"><span data-stu-id="1ae25-360">However, if `maxValue` equals `minValue`, the method returns `minValue`.</span></span>  
  
 <span data-ttu-id="1ae25-361">Im Gegensatz zu den anderen Überladungen der der <xref:System.Random.Next%2A> -Methode, die nur positive Werte zurückgeben möchten, kann diese Methode eine negative Zufallsganzzahl zurück.</span><span class="sxs-lookup"><span data-stu-id="1ae25-361">Unlike the other overloads of the <xref:System.Random.Next%2A> method, which return only non-negative values, this method can return a negative random integer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ae25-362">Im folgenden Beispiel wird die <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> Methode, um zufällige ganze Zahlen mit drei verschiedenen Wertebereichen zu generieren.</span><span class="sxs-lookup"><span data-stu-id="1ae25-362">The following example uses the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method to generate random integers with three distinct ranges.</span></span> <span data-ttu-id="1ae25-363">Beachten Sie, dass der vom System bereitgestellten Ausgangswert übergeben wird, um die genaue Ausgabe aus dem Beispiel abhängig der <xref:System.Random> Klassenkonstruktor.</span><span class="sxs-lookup"><span data-stu-id="1ae25-363">Note that the exact output from the example depends on the system-supplied seed value passed to the <xref:System.Random> class constructor.</span></span>  
  
 [!code-cpp[System.Random.Next#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Next/CPP/next2.cpp#2)]
 [!code-csharp[System.Random.Next#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Next/CS/Next2.cs#2)]
 [!code-vb[System.Random.Next#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Next/VB/next2.vb#2)]  
  
 <span data-ttu-id="1ae25-364">Im folgenden Beispiel wird eine zufällige ganze Zahl, die sie als Index verwendet. um einen Zeichenfolgenwert aus einem Array abzurufen.</span><span class="sxs-lookup"><span data-stu-id="1ae25-364">The following example generates a random integer that it uses as an index to retrieve a string value from an array.</span></span> <span data-ttu-id="1ae25-365">Da der höchste Index des Arrays eine kleiner als die Länge wird der Wert des ist der <xref:System.Array.Length%2A?displayProperty=nameWithType> -Eigenschaft angegeben ist, als eine der `maxValue` Parameter.</span><span class="sxs-lookup"><span data-stu-id="1ae25-365">Because the highest index of the array is one less than its length, the value of the <xref:System.Array.Length%2A?displayProperty=nameWithType> property is supplied as a the `maxValue` parameter.</span></span>  
  
 [!code-cpp[System.Random.Next#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Next/CPP/next4.cpp#4)]
 [!code-csharp[System.Random.Next#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Next/CS/next4.cs#4)]
 [!code-vb[System.Random.Next#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Next/VB/next4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1ae25-366">
            <paramref name="minValue" /> ist größer als <paramref name="maxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ae25-366">
              <paramref name="minValue" /> is greater than <paramref name="maxValue" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="1ae25-367">Ab .NET Framework, Version 2.0, bei der Ableitung einer Klasse von <see cref="T:System.Random" /> und überschreiben die <see cref="M:System.Random.Sample" /> -Methode, die von der Implementierung der abgeleiteten Klasse der bereitgestellte Verteilung der <see cref="M:System.Random.Sample" /> Methode wird nicht verwendet, in der Basisklasse aufrufen Implementierung der <see cref="M:System.Random.Next(System.Int32,System.Int32)" /> Methode zu überladen, wenn der Unterschied zwischen der <paramref name="minValue" /> und <paramref name="maxValue" /> Parameter ist größer als <see cref="F:System.Int32.MaxValue" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1ae25-367">Starting with the .NET Framework version 2.0, if you derive a class from <see cref="T:System.Random" /> and override the <see cref="M:System.Random.Sample" /> method, the distribution provided by the derived class implementation of the <see cref="M:System.Random.Sample" /> method is not used in calls to the base class implementation of the <see cref="M:System.Random.Next(System.Int32,System.Int32)" /> method overload if the difference between the <paramref name="minValue" /> and <paramref name="maxValue" /> parameters is greater than <see cref="F:System.Int32.MaxValue" />.</span>
            </span>
            <span data-ttu-id="1ae25-368">Stattdessen die gleichmäßigen Verteilung zurückgegeben, der von den Basis- <see cref="T:System.Random" /> Klasse wird verwendet.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1ae25-368">Instead, the uniform distribution returned by the base <see cref="T:System.Random" /> class is used.</span>
            </span>
            <span data-ttu-id="1ae25-369">Dieses Verhalten verbessert die gesamtleistung der <see cref="T:System.Random" /> Klasse.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1ae25-369">This behavior improves the overall performance of the <see cref="T:System.Random" /> class.</span>
            </span>
            <span data-ttu-id="1ae25-370">So ändern Sie dieses Verhalten zum Aufrufen der <see cref="M:System.Random.Sample" /> -Methode in der abgeleiteten Klasse, müssen Sie auch überschreiben die <see cref="M:System.Random.Next(System.Int32,System.Int32)" /> -methodenüberladung.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1ae25-370">To modify this behavior to call the <see cref="M:System.Random.Sample" /> method in the derived class, you must also override the <see cref="M:System.Random.Next(System.Int32,System.Int32)" /> method overload.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="NextBytes">
      <MemberSignature Language="C#" Value="public virtual void NextBytes (byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NextBytes(unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.NextBytes(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub NextBytes (buffer As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void NextBytes(cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="abstract member NextBytes : byte[] -&gt; unit&#xA;override this.NextBytes : byte[] -&gt; unit" Usage="random.NextBytes buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="1ae25-371">Ein Bytearray, das für Zufallszahlen vorgesehen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ae25-371">An array of bytes to contain random numbers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ae25-372">Füllt die Elemente eines angegebenen Bytearrays mit Zufallszahlen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ae25-372">Fills the elements of a specified array of bytes with random numbers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ae25-373">Jedes Element des Arrays von Bytes in eine zufällige Zahl größer als oder gleich 0 (null) festgelegt ist und kleiner als oder gleich <xref:System.Byte.MaxValue>.</span><span class="sxs-lookup"><span data-stu-id="1ae25-373">Each element of the array of bytes is set to a random number greater than or equal to 0, and less than or equal to <xref:System.Byte.MaxValue>.</span></span>  
  
 <span data-ttu-id="1ae25-374">Z. B. um eine kryptografisch sichere Zufallszahl, die für das Erstellen eines zufälligen Kennworts generieren, verwenden Sie eine Methode wie z. B. <xref:System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1ae25-374">For example, to generate a cryptographically secured random number suitable for creating a random password, use a method such as <xref:System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ae25-375">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Random.NextBytes%2A> Methode, um ein Array von Bytes mit zufälligen Bytes-Werte zu füllen.</span><span class="sxs-lookup"><span data-stu-id="1ae25-375">The following example demonstrates how to use the <xref:System.Random.NextBytes%2A> method to fill an array of bytes with random byte values.</span></span>  
  
 [!code-cpp[Classic Random.NextBytes Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Random.NextBytes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Random.NextBytes Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Random.NextBytes Example/CS/source.cs#1)]
 [!code-vb[Classic Random.NextBytes Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Random.NextBytes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1ae25-376">
            <paramref name="buffer" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ae25-376">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="1ae25-377">Ab .NET Framework, Version 2.0, bei der Ableitung einer Klasse von <see cref="T:System.Random" /> und überschreiben die <see cref="M:System.Random.Sample" /> -Methode, die von der Implementierung der abgeleiteten Klasse der bereitgestellte Verteilung der <see cref="M:System.Random.Sample" /> Methode wird nicht verwendet, in der Basisklasse aufrufen Implementierung der <see cref="M:System.Random.NextBytes(System.Byte[])" /> Methode.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1ae25-377">Starting with the .NET Framework version 2.0, if you derive a class from <see cref="T:System.Random" /> and override the <see cref="M:System.Random.Sample" /> method, the distribution provided by the derived class implementation of the <see cref="M:System.Random.Sample" /> method is not used in calls to the base class implementation of the <see cref="M:System.Random.NextBytes(System.Byte[])" /> method.</span>
            </span>
            <span data-ttu-id="1ae25-378">Stattdessen die gleichmäßigen Verteilung zurückgegeben, der von den Basis- <see cref="T:System.Random" /> Klasse wird verwendet.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1ae25-378">Instead, the uniform distribution returned by the base <see cref="T:System.Random" /> class is used.</span>
            </span>
            <span data-ttu-id="1ae25-379">Dieses Verhalten verbessert die gesamtleistung der <see cref="T:System.Random" /> Klasse.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1ae25-379">This behavior improves the overall performance of the <see cref="T:System.Random" /> class.</span>
            </span>
            <span data-ttu-id="1ae25-380">So ändern Sie dieses Verhalten zum Aufrufen der <see cref="M:System.Random.Sample" /> -Methode in der abgeleiteten Klasse, müssen Sie auch überschreiben die <see cref="M:System.Random.NextBytes(System.Byte[])" /> Methode.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1ae25-380">To modify this behavior to call the <see cref="M:System.Random.Sample" /> method in the derived class, you must also override the <see cref="M:System.Random.NextBytes(System.Byte[])" /> method.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="NextBytes">
      <MemberSignature Language="C#" Value="public virtual void NextBytes (Span&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NextBytes(valuetype System.Span`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.NextBytes(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub NextBytes (buffer As Span(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void NextBytes(Span&lt;System::Byte&gt; buffer);" />
      <MemberSignature Language="F#" Value="abstract member NextBytes : Span&lt;byte&gt; -&gt; unit&#xA;override this.NextBytes : Span&lt;byte&gt; -&gt; unit" Usage="random.NextBytes buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextDouble">
      <MemberSignature Language="C#" Value="public virtual double NextDouble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 NextDouble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.NextDouble" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function NextDouble () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual double NextDouble();" />
      <MemberSignature Language="F#" Value="abstract member NextDouble : unit -&gt; double&#xA;override this.NextDouble : unit -&gt; double" Usage="random.NextDouble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1ae25-381">Gibt eine zufällige Gleitkommazahl zurück, die größer oder gleich 0,0 und kleiner als 1,0 ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ae25-381">Returns a random floating-point number that is greater than or equal to 0.0, and less than 1.0.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ae25-382">Eine Gleitkommazahl mit doppelter Genauigkeit, die größer oder gleich 0,0 und kleiner als 1,0 ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ae25-382">A double-precision floating point number that is greater than or equal to 0.0, and less than 1.0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ae25-383">Die tatsächliche obere Grenze der Zufallszahl, die von dieser Methode zurückgegebene ist 0.99999999999999978.</span><span class="sxs-lookup"><span data-stu-id="1ae25-383">The actual upper bound of the random number returned by this method is 0.99999999999999978.</span></span>  
  
 <span data-ttu-id="1ae25-384">Um zufällige Gleitkommazahlen-Punktwerte innerhalb eines Bereichs als 0,0 und 1,0 abzurufen, finden Sie im Abschnitt "Abgerufen werden Gleitkommazahlen-Punktwerte in einem angegebenen Bereich", der die <xref:System.Random> Thema-Klasse.</span><span class="sxs-lookup"><span data-stu-id="1ae25-384">To retrieve random floating-point values within a range other than 0.0 and 1.0, see the "Retrieve floating-point values in a specified range" section of the <xref:System.Random> class topic.</span></span>  
  
 <span data-ttu-id="1ae25-385">Diese Methode ist die öffentliche Version der geschützten Methode <xref:System.Random.Sample%2A>.</span><span class="sxs-lookup"><span data-stu-id="1ae25-385">This method is the public version of the protected method, <xref:System.Random.Sample%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ae25-386">Im folgenden Beispiel wird die <xref:System.Random.NextDouble%2A> Methode, um Sequenzen von Double zu generieren.</span><span class="sxs-lookup"><span data-stu-id="1ae25-386">The following example uses the <xref:System.Random.NextDouble%2A> method to generate sequences of random doubles.</span></span>  
  
 [!code-cpp[System.Random.Ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Ctor/CPP/ctor.cpp#1)]
 [!code-csharp[System.Random.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Ctor/CS/ctor.cs#1)]
 [!code-vb[System.Random.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Ctor/VB/ctor.vb#1)]  
  
 <span data-ttu-id="1ae25-387">Im folgenden Beispiel wird die <xref:System.Random.NextDouble%2A> Methode zum Generieren von 100 zufälligen Zahlen und zeigt deren Häufigkeit-Verteilung.</span><span class="sxs-lookup"><span data-stu-id="1ae25-387">The following example calls the <xref:System.Random.NextDouble%2A> method to generate 100 random numbers and displays their frequency distribution.</span></span>  
  
 [!code-csharp[System.Random.NextDouble#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.random.nextdouble/cs/nextdouble1.cs#2)]
 [!code-vb[System.Random.NextDouble#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.random.nextdouble/vb/nextdouble1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sample">
      <MemberSignature Language="C#" Value="protected virtual double Sample ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance float64 Sample() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.Sample" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Sample () As Double" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual double Sample();" />
      <MemberSignature Language="F#" Value="abstract member Sample : unit -&gt; double&#xA;override this.Sample : unit -&gt; double" Usage="random.Sample " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1ae25-388">Gibt eine zufällige Gleitkommazahl zwischen 0,0 und 1,0 zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ae25-388">Returns a random floating-point number between 0.0 and 1.0.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ae25-389">Eine Gleitkommazahl mit doppelter Genauigkeit, die größer oder gleich 0,0 und kleiner als 1,0 ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ae25-389">A double-precision floating point number that is greater than or equal to 0.0, and less than 1.0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ae25-390">Um eine andere zufällige Verteilung oder anderen random Number Generatorprinzip zu erzeugen, leiten Sie eine Klasse von der <xref:System.Random> Klasse, und überschreiben die <xref:System.Random.Sample%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1ae25-390">To produce a different random distribution or a different random number generator principle, derive a class from the <xref:System.Random> class and override the <xref:System.Random.Sample%2A> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1ae25-391">Die <xref:System.Random.Sample%2A> Methode `protected`, was bedeutet, dass er nur innerhalb ist die <xref:System.Random> -Klasse und ihrer abgeleiteten Klassen.</span><span class="sxs-lookup"><span data-stu-id="1ae25-391">The <xref:System.Random.Sample%2A> method is `protected`, which means that it is accessible only within the <xref:System.Random> class and its derived classes.</span></span> <span data-ttu-id="1ae25-392">Generiert eine Zufallszahl zwischen 0 und 1 ein <xref:System.Random> Instanz ist, rufen Sie die <xref:System.Random.NextDouble%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1ae25-392">To generate a random number between 0 and 1 from a <xref:System.Random> instance, call the <xref:System.Random.NextDouble%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ae25-393">Im folgende Beispiel wird eine Klasse von abgeleitet <xref:System.Random> und überschreibt die <xref:System.Random.Sample%2A> Methode, um eine Verteilung von Zufallszahlen zu generieren.</span><span class="sxs-lookup"><span data-stu-id="1ae25-393">The following example derives a class from <xref:System.Random> and overrides the <xref:System.Random.Sample%2A> method to generate a distribution of random numbers.</span></span> <span data-ttu-id="1ae25-394">Diese Verteilung unterscheidet sich von der gleichmäßigen Verteilung von generiert die <xref:System.Random.Sample%2A> Methode der Basisklasse.</span><span class="sxs-lookup"><span data-stu-id="1ae25-394">This distribution is different than the uniform distribution generated by the <xref:System.Random.Sample%2A> method of the base class.</span></span>  
  
 [!code-cpp[System.Random.Sample#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Sample/cpp/sampleex.cpp#1)]
 [!code-csharp[System.Random.Sample#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Sample/CS/sample.cs#1)]
 [!code-vb[System.Random.Sample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Sample/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="1ae25-395">Ab .NET Framework, Version 2.0, bei der Ableitung einer Klasse von <see cref="T:System.Random" /> und überschreiben die <see cref="M:System.Random.Sample" /> -Methode, die von der Implementierung der abgeleiteten Klasse der bereitgestellte Verteilung der <see cref="M:System.Random.Sample" /> Methode wird nicht verwendet, in der Basisklasse aufrufen die Implementierung der folgenden Methoden:</span>
            <span class="sxs-lookup">
              <span data-stu-id="1ae25-395">Starting with the .NET Framework version 2.0, if you derive a class from <see cref="T:System.Random" /> and override the <see cref="M:System.Random.Sample" /> method, the distribution provided by the derived class implementation of the <see cref="M:System.Random.Sample" /> method is not used in calls to the base class implementation of the following methods:</span>
            </span>
            <span data-ttu-id="1ae25-396">–   Die <see cref="M:System.Random.NextBytes(System.Byte[])" />-Methode.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1ae25-396">-   The <see cref="M:System.Random.NextBytes(System.Byte[])" /> method.</span>
            </span>
            <span data-ttu-id="1ae25-397">–   Die <see cref="M:System.Random.Next" />-Methode.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1ae25-397">-   The <see cref="M:System.Random.Next" /> method.</span>
            </span>
            <span data-ttu-id="1ae25-398">– Die <see cref="M:System.Random.Next(System.Int32,System.Int32)" /> -Methode, wenn (<paramref name="maxValue" /> - <paramref name="minValue" />) ist größer als <see cref="F:System.Int32.MaxValue" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1ae25-398">-   The <see cref="M:System.Random.Next(System.Int32,System.Int32)" /> method, if (<paramref name="maxValue" /> - <paramref name="minValue" />) is greater than <see cref="F:System.Int32.MaxValue" />.</span>
            </span>
            <span data-ttu-id="1ae25-399">Stattdessen die Basis die gleichmäßigen Verteilung gebotenen <see cref="T:System.Random" /> Klasse wird verwendet.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1ae25-399">Instead, the uniform distribution provided by the base <see cref="T:System.Random" /> class is used.</span>
            </span>
            <span data-ttu-id="1ae25-400">Dieses Verhalten verbessert die gesamtleistung der <see cref="T:System.Random" /> Klasse.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1ae25-400">This behavior improves the overall performance of the <see cref="T:System.Random" /> class.</span>
            </span>
            <span data-ttu-id="1ae25-401">So ändern Sie das Verhalten, dass die Implementierung von Aufrufen der <see cref="M:System.Random.Sample" /> Methode in der abgeleiteten Klasse, müssen Sie auch das Verhalten dieser drei Member überschreiben.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1ae25-401">To modify this behavior to call the implementation of the <see cref="M:System.Random.Sample" /> method in the derived class, you must also override the behavior of these three members.</span>
            </span>
            <span data-ttu-id="1ae25-402">Dies wird im Beispiel veranschaulicht.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1ae25-402">The example provides an illustration.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Random.NextDouble" />
      </Docs>
    </Member>
  </Members>
</Type>