<Type Name="Random" FullName="System.Random">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6267dd3b609332021d5290c26d8e676d5a9ca009" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78682364" /></Metadata><TypeSignature Language="C#" Value="public class Random" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Random extends System.Object" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Random" />
  <TypeSignature Language="VB.NET" Value="Public Class Random" />
  <TypeSignature Language="C++ CLI" Value="public ref class Random" />
  <TypeSignature Language="F#" Value="type Random = class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Random extends System.Object" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime.Extensions" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4e599-101">Stellt einen Generator für Pseudozufallszahlen dar, d. h. ein Algorithmus, der eine Zahlenfolge erzeugt, die bestimmte statistische Anforderungen hinsichtlich ihrer Zufälligkeit erfüllt.</span><span class="sxs-lookup"><span data-stu-id="4e599-101">Represents a pseudo-random number generator, which is an algorithm that produces a sequence of numbers that meet certain statistical requirements for randomness.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e599-102">Pseudo Zufallszahlen werden mit gleicher Wahrscheinlichkeit aus einem begrenzten Satz von Zahlen ausgewählt.</span><span class="sxs-lookup"><span data-stu-id="4e599-102">Pseudo-random numbers are chosen with equal probability from a finite set of numbers.</span></span> <span data-ttu-id="4e599-103">Die ausgewählten Zahlen sind nicht vollständig zufällig, da Sie mit einem mathematischen Algorithmus ausgewählt werden, Sie sind jedoch für praktische Zwecke ausreichend.</span><span class="sxs-lookup"><span data-stu-id="4e599-103">The chosen numbers are not completely random because a mathematical algorithm is used to select them, but they are sufficiently random for practical purposes.</span></span> <span data-ttu-id="4e599-104">Die aktuelle Implementierung der <xref:System.Random>-Klasse basiert auf einer geänderten Version des subtraktiven Zufallszahlen-Generator Algorithmus von Donald E. Knuth.</span><span class="sxs-lookup"><span data-stu-id="4e599-104">The current implementation of the <xref:System.Random> class is based on a modified version of Donald E. Knuth's subtractive random number generator algorithm.</span></span> <span data-ttu-id="4e599-105">Weitere Informationen finden Sie unter D. E.</span><span class="sxs-lookup"><span data-stu-id="4e599-105">For more information, see D. E.</span></span> <span data-ttu-id="4e599-106">Knuth.</span><span class="sxs-lookup"><span data-stu-id="4e599-106">Knuth.</span></span> <span data-ttu-id="4e599-107">*Die Art der Computer Programmierung, Volume 2: seminumerische Algorithmen*.</span><span class="sxs-lookup"><span data-stu-id="4e599-107">*The Art of Computer Programming, Volume 2: Seminumerical Algorithms*.</span></span> <span data-ttu-id="4e599-108">Addison-Wesley, Reading, MA, dritte Edition, 1997.</span><span class="sxs-lookup"><span data-stu-id="4e599-108">Addison-Wesley, Reading, MA, third edition, 1997.</span></span>  
  
 <span data-ttu-id="4e599-109">Um eine kryptografisch sichere Zufallszahl zu generieren, z. b. eine, die zum Erstellen eines zufälligen Kennworts geeignet ist, verwenden Sie die <xref:System.Security.Cryptography.RNGCryptoServiceProvider>-Klasse, oder leiten Sie eine Klasse von <xref:System.Security.Cryptography.RandomNumberGenerator?displayProperty=nameWithType>ab.</span><span class="sxs-lookup"><span data-stu-id="4e599-109">To generate a cryptographically secure random number, such as one that's suitable for creating a random password, use the <xref:System.Security.Cryptography.RNGCryptoServiceProvider> class or derive a class from <xref:System.Security.Cryptography.RandomNumberGenerator?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="4e599-110">In diesem Thema:</span><span class="sxs-lookup"><span data-stu-id="4e599-110">In this topic:</span></span>  
  
 <span data-ttu-id="4e599-111">[Instanziieren des Zufallszahlen-Generators](#Instantiate) </span><span class="sxs-lookup"><span data-stu-id="4e599-111">[Instantiating the random number generator](#Instantiate) </span></span>  
 <span data-ttu-id="4e599-112">[Vermeiden mehrerer Instanziierungen](#Multiple) </span><span class="sxs-lookup"><span data-stu-id="4e599-112">[Avoiding multiple instantiations](#Multiple) </span></span>  
 <span data-ttu-id="4e599-113">[Die System. Random-Klasse und die Thread Sicherheit](#ThreadSafety) </span><span class="sxs-lookup"><span data-stu-id="4e599-113">[The System.Random class and thread safety](#ThreadSafety) </span></span>  
 <span data-ttu-id="4e599-114">[Erstellen verschiedener Typen von Zufallszahlen](#Functionality) </span><span class="sxs-lookup"><span data-stu-id="4e599-114">[Generating different types of random numbers](#Functionality) </span></span>  
 <span data-ttu-id="4e599-115">Durch [ihren eigenen Algorithmus ersetzen](#Overriding) </span><span class="sxs-lookup"><span data-stu-id="4e599-115">[Substituting your own algorithm](#Overriding) </span></span>  
 <span data-ttu-id="4e599-116">[Verwendung von System. Random für..](#Operations) . </span><span class="sxs-lookup"><span data-stu-id="4e599-116">[How do you use System.Random to…](#Operations) </span></span>  
 [<span data-ttu-id="4e599-117">Abrufen der gleichen Sequenz von Zufalls Werten</span><span class="sxs-lookup"><span data-stu-id="4e599-117">Retrieve the same sequence of random values</span></span>](#Same)  
 [<span data-ttu-id="4e599-118">Abrufen eindeutiger Sequenzen von Zufalls Werten</span><span class="sxs-lookup"><span data-stu-id="4e599-118">Retrieve unique sequences of random values</span></span>](#Unique)  
 [<span data-ttu-id="4e599-119">Abrufen von ganzen Zahlen in einem angegebenen Bereich</span><span class="sxs-lookup"><span data-stu-id="4e599-119">Retrieve integers in a specified range</span></span>](#Range)  
 [<span data-ttu-id="4e599-120">Ganze Zahlen mit einer angegebenen Anzahl von Ziffern abrufen</span><span class="sxs-lookup"><span data-stu-id="4e599-120">Retrieve integers with a specified number of digits</span></span>](#Digits)  
 [<span data-ttu-id="4e599-121">Abrufen von Gleit Komma Werten in einem angegebenen Bereich</span><span class="sxs-lookup"><span data-stu-id="4e599-121">Retrieve floating-point values in a specified range</span></span>](#Floats)  
 [<span data-ttu-id="4e599-122">Generieren von zufälligen booleschen Werten</span><span class="sxs-lookup"><span data-stu-id="4e599-122">Generate random Boolean values</span></span>](#Boolean)  
 [<span data-ttu-id="4e599-123">Generieren zufälliger 64-Bit-Ganzzahlen</span><span class="sxs-lookup"><span data-stu-id="4e599-123">Generate random 64-bit integers</span></span>](#Long)  
 [<span data-ttu-id="4e599-124">Abrufen von Bytes in einem angegebenen Bereich</span><span class="sxs-lookup"><span data-stu-id="4e599-124">Retrieve bytes in a specified range</span></span>](#Bytes)  
 [<span data-ttu-id="4e599-125">Abrufen eines Elements aus einem Array oder einer Auflistung nach dem Zufallsprinzip</span><span class="sxs-lookup"><span data-stu-id="4e599-125">Retrieve an element from an array or collection at random</span></span>](#Array)  
 [<span data-ttu-id="4e599-126">Abrufen eines eindeutigen Elements aus einem Array oder einer Auflistung</span><span class="sxs-lookup"><span data-stu-id="4e599-126">Retrieve a unique element from an array or collection</span></span>](#UniqueArray)  
  
<a name="Instantiate"></a>   
## <a name="instantiating-the-random-number-generator"></a><span data-ttu-id="4e599-127">Instanziieren des Zufallszahlen-Generators</span><span class="sxs-lookup"><span data-stu-id="4e599-127">Instantiating the random number generator</span></span>  
 <span data-ttu-id="4e599-128">Sie instanziieren den Zufallszahlengenerator, indem Sie einen Ausgangswert (einen Startwert für den Algorithmus für die Pseudozufallszahlen Generierung) einem <xref:System.Random.%23ctor%2A>-Klassenkonstruktor bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="4e599-128">You instantiate the random number generator by providing a seed value (a starting value for the pseudo-random number generation algorithm) to a <xref:System.Random.%23ctor%2A> class constructor.</span></span>  <span data-ttu-id="4e599-129">Sie können den Seed-Wert entweder explizit oder implizit angeben:</span><span class="sxs-lookup"><span data-stu-id="4e599-129">You can supply the seed value either explicitly or implicitly:</span></span>  
  
-   <span data-ttu-id="4e599-130">Der <xref:System.Random.%23ctor%28System.Int32%29>-Konstruktor verwendet einen expliziten Ausgangswert, den Sie angeben.</span><span class="sxs-lookup"><span data-stu-id="4e599-130">The <xref:System.Random.%23ctor%28System.Int32%29> constructor uses an explicit seed value that you supply.</span></span>  
  
-   <span data-ttu-id="4e599-131">Der <xref:System.Random.%23ctor>-Konstruktor verwendet die Systemuhr, um einen Ausgangswert bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="4e599-131">The <xref:System.Random.%23ctor> constructor uses the system clock to provide a seed value.</span></span> <span data-ttu-id="4e599-132">Dies ist die gängigste Methode zum Instanziieren des Zufallszahlen-Generators.</span><span class="sxs-lookup"><span data-stu-id="4e599-132">This is the most common way of instantiating the random number generator.</span></span>  
  
 <span data-ttu-id="4e599-133">Wenn derselbe Ausgangswert für separate <xref:System.Random> Objekte verwendet wird, generieren Sie dieselbe Reihe von Zufallszahlen.</span><span class="sxs-lookup"><span data-stu-id="4e599-133">If the same seed is used for separate <xref:System.Random> objects, they will generate the same series of random numbers.</span></span> <span data-ttu-id="4e599-134">Dies kann nützlich sein, um eine Test Sammlung zu erstellen, die zufällige Werte verarbeitet, oder um Spiele wiedergeben, die Ihre Daten von Zufallszahlen ableiten.</span><span class="sxs-lookup"><span data-stu-id="4e599-134">This can be useful for creating a test suite that processes random values, or for replaying games that derive their data from random numbers.</span></span> <span data-ttu-id="4e599-135">Beachten Sie jedoch, dass <xref:System.Random> Objekte in Prozessen, die unter verschiedenen Versionen der .NET Framework ausgeführt werden, möglicherweise andere Serien von Zufallszahlen zurückgeben, selbst wenn Sie mit identischen Ausgangswerten instanziiert werden.</span><span class="sxs-lookup"><span data-stu-id="4e599-135">However, note that <xref:System.Random> objects in processes running under different versions of the .NET Framework may return different series of random numbers even if they're instantiated with identical seed values.</span></span>  
  
 <span data-ttu-id="4e599-136">Um verschiedene Sequenzen von Zufallszahlen zu erzeugen, können Sie den Seed-Wert Zeit abhängig machen und so eine andere Reihe mit jeder neuen Instanz von <xref:System.Random>erzeugen.</span><span class="sxs-lookup"><span data-stu-id="4e599-136">To produce different sequences of random numbers, you can make the seed value time-dependent, thereby producing a different series with each new instance of <xref:System.Random>.</span></span> <span data-ttu-id="4e599-137">Der parametrisierte <xref:System.Random.%23ctor%28System.Int32%29> Konstruktor kann basierend auf der Anzahl der Ticks in der aktuellen Zeit einen <xref:System.Int32> Wert annehmen, während der Parameter lose <xref:System.Random.%23ctor> Konstruktor die Systemuhr verwendet, um den Ausgangswert zu generieren.</span><span class="sxs-lookup"><span data-stu-id="4e599-137">The parameterized <xref:System.Random.%23ctor%28System.Int32%29> constructor can take an <xref:System.Int32> value based on the number of ticks in the current time, whereas the parameterless <xref:System.Random.%23ctor> constructor uses the system clock to generate its seed value.</span></span> <span data-ttu-id="4e599-138">Allerdings werden nur im .NET Framework, da die Uhr eine begrenzte Auflösung aufweist und der Parameter lose Konstruktor verwendet wird, um unterschiedliche <xref:System.Random> Objekte in der Schluss Folge zu erstellen, Zufallszahlengeneratoren erstellt, die identische Sequenzen von Zufallszahlen erzeugen.</span><span class="sxs-lookup"><span data-stu-id="4e599-138">However, on the .NET Framework only, because the clock has finite resolution, using the parameterless constructor to create different <xref:System.Random> objects in close succession creates random number generators that produce identical sequences of random numbers.</span></span> <span data-ttu-id="4e599-139">Im folgenden Beispiel wird veranschaulicht, wie zwei <xref:System.Random>-Objekte, die in einer .NET Framework-Anwendung in unmittelbarer Folge instanziiert werden, eine identische Reihe von Zufallszahlen generieren.</span><span class="sxs-lookup"><span data-stu-id="4e599-139">The following example illustrates how two <xref:System.Random> objects that are instantiated in close succession in a .NET Framework application generate an identical series of random numbers.</span></span> <span data-ttu-id="4e599-140">Bei den meisten Windows-Systemen haben <xref:System.Random> Objekte, die innerhalb von 15 Millisekunden von einem anderen erstellt werden, wahrscheinlich identische Seed-Werte.</span><span class="sxs-lookup"><span data-stu-id="4e599-140">On most Windows systems, <xref:System.Random> objects created within 15 milliseconds of one another are likely to have identical seed values.</span></span>  
  
 [!code-cpp[System.Random#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/random1.cpp#1)]
 [!code-csharp-interactive[System.Random#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/Random1.cs#1)]
 [!code-vb[System.Random#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/Random1.vb#1)]  
  
<span data-ttu-id="4e599-141">Um dieses Problem zu vermeiden, erstellen Sie ein einzelnes <xref:System.Random> Objekt anstelle mehrerer Objekte.</span><span class="sxs-lookup"><span data-stu-id="4e599-141">To avoid this problem, create a single <xref:System.Random> object instead of multiple objects.</span></span> <span data-ttu-id="4e599-142">Beachten Sie, dass die `Random`-Klasse in .net Core diese Einschränkung nicht besitzt.</span><span class="sxs-lookup"><span data-stu-id="4e599-142">Note that the `Random` class in .NET Core does not have this limitation.</span></span>
  
<a name="Multiple"></a>   
## <a name="avoiding-multiple-instantiations"></a><span data-ttu-id="4e599-143">Vermeiden mehrerer Instanziierungen</span><span class="sxs-lookup"><span data-stu-id="4e599-143">Avoiding multiple instantiations</span></span>  
 <span data-ttu-id="4e599-144">In der .NET Framework werden durch die Initialisierung von zwei Zufallszahlengeneratoren in einer engen Schleife oder in schneller Folge zwei Zufallszahlengeneratoren erstellt, die identische Sequenzen von Zufallszahlen erzeugen können.</span><span class="sxs-lookup"><span data-stu-id="4e599-144">On the .NET Framework, initializing two random number generators in a tight loop or in rapid succession creates two random number generators that can produce identical sequences of random numbers.</span></span> <span data-ttu-id="4e599-145">In den meisten Fällen ist dies nicht die Absicht des Entwicklers und kann zu Leistungsproblemen führen, da die Instanziierung und Initialisierung eines Zufallszahlengenerators ein relativ kostspieliger Prozess ist.</span><span class="sxs-lookup"><span data-stu-id="4e599-145">In most cases, this is not the developer's intent and can lead to performance issues, because instantiating and initializing a random number generator is a relatively expensive process.</span></span>  
  
 <span data-ttu-id="4e599-146">Um die Leistung zu verbessern und nicht versehentlich separate Zufallszahlengeneratoren zu erstellen, die identische numerische Sequenzen generieren, empfiehlt es sich, ein <xref:System.Random> Objekt zu erstellen, das viele Zufallszahlen generiert, anstatt neue <xref:System.Random> Objekte zu erstellen, um eine Zufallszahl zu generieren.</span><span class="sxs-lookup"><span data-stu-id="4e599-146">Both to improve performance and to avoid inadvertently creating separate random number generators that generate identical numeric sequences, we recommend that you create one <xref:System.Random> object to generate many random numbers over time, instead of creating new <xref:System.Random> objects to generate one random number.</span></span>  
  
 <span data-ttu-id="4e599-147">Die <xref:System.Random>-Klasse ist jedoch nicht Thread sicher.</span><span class="sxs-lookup"><span data-stu-id="4e599-147">However, the <xref:System.Random> class isn't thread safe.</span></span> <span data-ttu-id="4e599-148">Wenn Sie <xref:System.Random> Methoden aus mehreren Threads abrufen, befolgen Sie die im nächsten Abschnitt beschriebenen Richtlinien.</span><span class="sxs-lookup"><span data-stu-id="4e599-148">If you call <xref:System.Random> methods from multiple threads, follow the guidelines discussed in the next section.</span></span>  
  
<a name="ThreadSafety"></a>   
## <a name="the-systemrandom-class-and-thread-safety"></a><span data-ttu-id="4e599-149">Die System. Random-Klasse und die Thread Sicherheit</span><span class="sxs-lookup"><span data-stu-id="4e599-149">The System.Random class and thread safety</span></span>  
 <span data-ttu-id="4e599-150">Anstatt einzelne <xref:System.Random> Objekte zu instanziieren, empfiehlt es sich, eine einzelne <xref:System.Random> Instanz zu erstellen, um alle Zufallszahlen zu generieren, die von Ihrer APP benötigt werden.</span><span class="sxs-lookup"><span data-stu-id="4e599-150">Instead of instantiating individual <xref:System.Random> objects, we recommend that you create a single <xref:System.Random> instance to generate all the random numbers needed by your app.</span></span> <span data-ttu-id="4e599-151"><xref:System.Random> Objekte sind jedoch nicht Thread sicher.</span><span class="sxs-lookup"><span data-stu-id="4e599-151">However, <xref:System.Random> objects are not thread safe.</span></span> <span data-ttu-id="4e599-152">Wenn Ihre APP <xref:System.Random> Methoden aus mehreren Threads aufruft, müssen Sie ein Synchronisierungs Objekt verwenden, um sicherzustellen, dass jeweils nur ein Thread auf den Zufallszahlengenerator zugreifen kann.</span><span class="sxs-lookup"><span data-stu-id="4e599-152">If your app calls <xref:System.Random> methods from multiple threads, you must use a synchronization object to ensure that only one thread can access the random number generator at a time.</span></span> <span data-ttu-id="4e599-153">Wenn Sie nicht sicherstellen, dass auf das <xref:System.Random> Objekt auf Thread sichere Weise zugegriffen wird, geben Aufrufe von-Methoden, die Zufallszahlen zurückgeben, den Wert 0 zurück.</span><span class="sxs-lookup"><span data-stu-id="4e599-153">If you don't ensure that the <xref:System.Random> object is accessed in a thread-safe way, calls to methods that return random numbers return 0.</span></span>  
  
 <span data-ttu-id="4e599-154">Im folgenden Beispiel wird die C# [lock-Anweisung](~/docs/csharp/language-reference/keywords/lock-statement.md) und die Visual Basic [SyncLock-Anweisung](~/docs/visual-basic/language-reference/statements/synclock-statement.md) verwendet, um sicherzustellen, dass der Zugriff auf einen einzelnen Zufallszahlengenerator von 11 Threads Thread sicher erfolgt.</span><span class="sxs-lookup"><span data-stu-id="4e599-154">The following example uses the C# [lock Statement](~/docs/csharp/language-reference/keywords/lock-statement.md) and the Visual Basic [SyncLock statement](~/docs/visual-basic/language-reference/statements/synclock-statement.md) to ensure that a single random number generator is accessed by 11 threads in a thread-safe manner.</span></span> <span data-ttu-id="4e599-155">Jeder Thread generiert 2 Millionen Zufallszahlen, zählt die Anzahl der generierten Zufallszahlen und berechnet seine Summe und aktualisiert dann die Summen für alle Threads, wenn die Ausführung abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="4e599-155">Each thread generates 2 million random numbers, counts the number of random numbers generated and calculates their sum, and then updates the totals for all threads when it finishes executing.</span></span>  
  
 [!code-cpp[System.Random#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/threadsafeex1.cpp#3)]
 [!code-csharp[System.Random#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/threadsafeex1.cs#3)]
 [!code-vb[System.Random#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/threadsafeex1.vb#3)]  
  
 <span data-ttu-id="4e599-156">Im Beispiel wird die Thread Sicherheit auf folgende Weise sichergestellt:</span><span class="sxs-lookup"><span data-stu-id="4e599-156">The example ensures thread-safety in the following ways:</span></span>  
  
-   <span data-ttu-id="4e599-157">Das <xref:System.ThreadStaticAttribute>-Attribut wird verwendet, um Thread lokale Variablen zu definieren, mit denen die Gesamtzahl der generierten Zufallszahlen und deren Summe für jeden Thread nachverfolgt wird.</span><span class="sxs-lookup"><span data-stu-id="4e599-157">The <xref:System.ThreadStaticAttribute> attribute is used to define thread-local variables that track the total number of random numbers generated and their sum for each thread.</span></span>  
  
-   <span data-ttu-id="4e599-158">Eine Sperre (die `lock`-Anweisung C# in und die `SyncLock`-Anweisung in Visual Basic) schützt den Zugriff auf die Variablen für die Gesamtanzahl und Summe aller Zufallszahlen, die für alle Threads generiert werden.</span><span class="sxs-lookup"><span data-stu-id="4e599-158">A lock (the `lock` statement in C# and the `SyncLock` statement in Visual Basic) protects access to the variables for the total count and sum of all random numbers generated on all threads.</span></span>  
  
-   <span data-ttu-id="4e599-159">Ein Semaphor (das <xref:System.Threading.CountdownEvent> Objekt) wird verwendet, um sicherzustellen, dass der Haupt Thread blockiert wird, bis alle anderen Threads die Ausführung vollständig erfüllen.</span><span class="sxs-lookup"><span data-stu-id="4e599-159">A semaphore (the <xref:System.Threading.CountdownEvent> object) is used to ensure that the main thread blocks until all other threads complete execution.</span></span>  
  
-   <span data-ttu-id="4e599-160">Im Beispiel wird überprüft, ob der Zufallszahlen-Generator beschädigt wurde, indem ermittelt wird, ob zwei aufeinander folgende Aufrufe der Zufallszahlen Generierungs Methode 0 zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="4e599-160">The example checks whether the random number generator has become corrupted by determining whether two consecutive calls to random number generation methods return 0.</span></span> <span data-ttu-id="4e599-161">Wenn eine Beschädigung erkannt wird, wird im Beispiel das <xref:System.Threading.CancellationTokenSource>-Objekt verwendet, um zu signalisieren, dass alle Threads abgebrochen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="4e599-161">If corruption is detected, the example uses the <xref:System.Threading.CancellationTokenSource> object to signal that all threads should be canceled.</span></span>  
  
-   <span data-ttu-id="4e599-162">Vor dem Erstellen der Zufallszahl überprüft jeder Thread den Status des <xref:System.Threading.CancellationToken> Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e599-162">Before generating each random number, each thread checks the state of the <xref:System.Threading.CancellationToken> object.</span></span> <span data-ttu-id="4e599-163">Wenn der Abbruch angefordert wird, ruft das Beispiel die <xref:System.Threading.CancellationToken.ThrowIfCancellationRequested%2A?displayProperty=nameWithType>-Methode auf, um den Thread abzubrechen.</span><span class="sxs-lookup"><span data-stu-id="4e599-163">If cancellation is requested, the example calls the <xref:System.Threading.CancellationToken.ThrowIfCancellationRequested%2A?displayProperty=nameWithType> method to cancel the thread.</span></span>  
  
 <span data-ttu-id="4e599-164">Das folgende Beispiel ist mit dem ersten identisch, mit der Ausnahme, dass es ein <xref:System.Threading.Tasks.Task> Objekt und einen Lambda-Ausdruck anstelle von <xref:System.Threading.Thread>-Objekten verwendet.</span><span class="sxs-lookup"><span data-stu-id="4e599-164">The following example is identical to the first, except that it uses a <xref:System.Threading.Tasks.Task> object and a lambda expression instead of <xref:System.Threading.Thread> objects.</span></span>  
  
 [!code-csharp[System.Random#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/threadsafeex2.cs#4)]
 [!code-vb[System.Random#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/threadsafeex2.vb#4)]  
  
 <span data-ttu-id="4e599-165">Dies unterscheidet sich vom ersten Beispiel wie folgt:</span><span class="sxs-lookup"><span data-stu-id="4e599-165">It differs from the first example in the following ways:</span></span>  
  
-   <span data-ttu-id="4e599-166">Die Variablen, die die Anzahl der generierten Zufallszahlen und deren Summe in jeder Aufgabe nachverfolgen sollen, sind für die Aufgabe lokal, sodass es nicht erforderlich ist, das <xref:System.ThreadStaticAttribute>-Attribut zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="4e599-166">The variables to keep track of the number of random numbers generated and their sum in each task are local to the task, so there is no need to use the <xref:System.ThreadStaticAttribute> attribute.</span></span>  
  
-   <span data-ttu-id="4e599-167">Die statische <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType>-Methode wird verwendet, um sicherzustellen, dass der Haupt Thread nicht vollständig abgeschlossen ist, bevor alle Aufgaben abgeschlossen sind.</span><span class="sxs-lookup"><span data-stu-id="4e599-167">The static <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType> method is used to ensure that the main thread doesn't complete before all tasks have finished.</span></span> <span data-ttu-id="4e599-168">Das <xref:System.Threading.CountdownEvent>-Objekt ist nicht erforderlich.</span><span class="sxs-lookup"><span data-stu-id="4e599-168">There is no need for the <xref:System.Threading.CountdownEvent> object.</span></span>  
  
-   <span data-ttu-id="4e599-169">Die Ausnahme, die sich aus dem Task Abbruch ergibt, wird in der <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType>-Methode angezeigt.</span><span class="sxs-lookup"><span data-stu-id="4e599-169">The exception that results from task cancellation is surfaced in the <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4e599-170">Im vorherigen Beispiel wird Sie von jedem Thread behandelt.</span><span class="sxs-lookup"><span data-stu-id="4e599-170">In the previous example, it is handled by each thread.</span></span>  
  
<a name="Functionality"></a>   
## <a name="generating-different-types-of-random-numbers"></a><span data-ttu-id="4e599-171">Erstellen verschiedener Typen von Zufallszahlen</span><span class="sxs-lookup"><span data-stu-id="4e599-171">Generating different types of random numbers</span></span>  
 <span data-ttu-id="4e599-172">Der Zufallszahlengenerator stellt Methoden bereit, mit denen Sie die folgenden Arten von Zufallszahlen generieren können:</span><span class="sxs-lookup"><span data-stu-id="4e599-172">The random number generator provides methods that let you generate the following kinds of random numbers:</span></span>  
  
-   <span data-ttu-id="4e599-173">Eine Reihe von <xref:System.Byte> Werten.</span><span class="sxs-lookup"><span data-stu-id="4e599-173">A series of <xref:System.Byte> values.</span></span> <span data-ttu-id="4e599-174">Sie bestimmen die Anzahl von Byte Werten, indem Sie ein Array, das an die Anzahl der Elemente initialisiert wird, die die Methode zurückgeben soll, an die <xref:System.Random.NextBytes%2A> Methode übergeben.</span><span class="sxs-lookup"><span data-stu-id="4e599-174">You determine the number of byte values by passing an array initialized to the number of elements you want the method to return to the <xref:System.Random.NextBytes%2A> method.</span></span> <span data-ttu-id="4e599-175">Im folgenden Beispiel werden 20 Bytes generiert.</span><span class="sxs-lookup"><span data-stu-id="4e599-175">The following example generates 20 bytes.</span></span>  
  
     [!code-cpp[System.Random#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/nextbytes1.cpp#5)]
     [!code-csharp-interactive[System.Random#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/nextbytes1.cs#5)]
     [!code-vb[System.Random#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/nextbytes1.vb#5)]  
  
-   <span data-ttu-id="4e599-176">Eine einzelne Ganzzahl.</span><span class="sxs-lookup"><span data-stu-id="4e599-176">A single integer.</span></span> <span data-ttu-id="4e599-177">Sie können auswählen, ob eine ganze Zahl zwischen 0 und einem maximalen Wert (<xref:System.Int32.MaxValue?displayProperty=nameWithType>-1) werden soll, indem Sie die <xref:System.Random.Next>-Methode aufrufen, eine ganze Zahl zwischen 0 und einem bestimmten Wert, indem Sie die <xref:System.Random.Next%28System.Int32%29>-Methode aufrufen, oder eine ganze Zahl innerhalb eines Wertebereichs, indem Sie die <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29>-Methode aufrufen.</span><span class="sxs-lookup"><span data-stu-id="4e599-177">You can choose whether you want an integer from 0 to a maximum value (<xref:System.Int32.MaxValue?displayProperty=nameWithType> - 1) by calling the <xref:System.Random.Next> method, an integer between 0 and a specific value by calling the <xref:System.Random.Next%28System.Int32%29> method, or an integer within a range of values by calling the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="4e599-178">In den parametrisierten über Ladungen ist der angegebene Maximalwert exklusiv. Das heißt, die tatsächliche Höchstzahl, die generiert wird, ist ein kleiner als der angegebene Wert.</span><span class="sxs-lookup"><span data-stu-id="4e599-178">In the parameterized overloads, the specified maximum value is exclusive; that is, the actual maximum number generated is one less than the specified value.</span></span>  
  
     <span data-ttu-id="4e599-179">Im folgenden Beispiel wird die <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29>-Methode aufgerufen, um 10 Zufallszahlen zwischen-10 und 10 zu generieren.</span><span class="sxs-lookup"><span data-stu-id="4e599-179">The following example calls the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method to generate 10 random numbers between -10 and 10.</span></span> <span data-ttu-id="4e599-180">Beachten Sie, dass das zweite Argument für die-Methode die exklusive obere Grenze des Bereichs von Zufalls Werten angibt, die von der-Methode zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="4e599-180">Note that the second argument to the method specifies the exclusive upper bound of the range of random values returned by the method.</span></span> <span data-ttu-id="4e599-181">Anders ausgedrückt: die größte Ganzzahl, die die Methode zurückgeben kann, ist ein kleiner als dieser Wert.</span><span class="sxs-lookup"><span data-stu-id="4e599-181">In other words, the largest integer that the method can return is one less than this value.</span></span>  
  
     [!code-cpp[System.Random#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/nextex1.cpp#6)]
     [!code-csharp-interactive[System.Random#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/nextex1.cs#6)]
     [!code-vb[System.Random#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/nextex1.vb#6)]  
  
-   <span data-ttu-id="4e599-182">Ein einzelner Gleit Komma Wert zwischen 0,0 und kleiner als 1,0 durch Aufrufen der <xref:System.Random.NextDouble%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="4e599-182">A single floating-point value from 0.0 to less than 1.0 by calling the <xref:System.Random.NextDouble%2A> method.</span></span> <span data-ttu-id="4e599-183">Die exklusive obere Grenze der Zufallszahl, die von der-Methode zurückgegeben wird, ist 1, sodass Ihre tatsächliche obere Grenze 0.99999999999999978 ist.</span><span class="sxs-lookup"><span data-stu-id="4e599-183">The exclusive upper bound of the random number returned by the method is 1, so its actual upper bound is 0.99999999999999978.</span></span> <span data-ttu-id="4e599-184">Im folgenden Beispiel werden 10 zufällige Gleit Komma Zahlen generiert.</span><span class="sxs-lookup"><span data-stu-id="4e599-184">The following example generates 10 random floating-point numbers.</span></span>  
  
     [!code-cpp[System.Random#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/nextdoubleex1.cpp#7)]
     [!code-csharp-interactive[System.Random#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/nextdoubleex1.cs#7)]
     [!code-vb[System.Random#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/nextdoubleex1.vb#7)]  
  
> [!IMPORTANT]
>  <span data-ttu-id="4e599-185">Die <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29>-Methode ermöglicht es Ihnen, den Bereich der zurückgegebenen Zufallszahl anzugeben.</span><span class="sxs-lookup"><span data-stu-id="4e599-185">The <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method allows you to specify the range of the returned random number.</span></span> <span data-ttu-id="4e599-186">Der `maxValue`-Parameter, der die zurückgegebene Zahl des oberen Bereichs angibt, ist jedoch ein exklusiver, kein inklusiver Wert.</span><span class="sxs-lookup"><span data-stu-id="4e599-186">However, the `maxValue` parameter, which specifies the upper range returned number, is an exclusive, not an inclusive, value.</span></span> <span data-ttu-id="4e599-187">Dies bedeutet, dass der Methoden Aufruf`Next(0, 100)` einen Wert zwischen 0 und 99 zurückgibt, nicht zwischen 0 und 100.</span><span class="sxs-lookup"><span data-stu-id="4e599-187">This means that the method call `Next(0, 100)` returns a value between 0 and 99, and not between 0 and 100.</span></span>  
  
 <span data-ttu-id="4e599-188">Sie können auch die <xref:System.Random>-Klasse für Aufgaben wie das Erstellen [zufälliger t:System.Boolean-Werte](#Boolean), das Erstellen [zufälliger Gleit Komma Werte mit einem Bereich von 0 bis 1](#Floats), das Erstellen [zufälliger 64-Bit-](#Long)Ganzzahlen und das [Zufalls Abrufen eines eindeutigen Elements aus einem Array oder](#UniqueArray)einer Auflistung verwenden.</span><span class="sxs-lookup"><span data-stu-id="4e599-188">You can also use the <xref:System.Random> class for such tasks as generating [random T:System.Boolean values](#Boolean), generating [random floating point values with a range other than 0 to 1](#Floats), generating [random 64-bit integers](#Long), and [randomly retrieving a unique element from an array or collection](#UniqueArray).</span></span> <span data-ttu-id="4e599-189">Informationen zu diesen und anderen häufigen Aufgaben finden Sie unter Gewusst [wie: Verwenden von System. Random für..](#Operations) .</span><span class="sxs-lookup"><span data-stu-id="4e599-189">For these and other common tasks, see the [How do you use System.Random to…](#Operations)</span></span> <span data-ttu-id="4e599-190">abgerufen haben.</span><span class="sxs-lookup"><span data-stu-id="4e599-190">section.</span></span>  
  
<a name="Overriding"></a>   
## <a name="substituting-your-own-algorithm"></a><span data-ttu-id="4e599-191">Ersetzen Ihres eigenen Algorithmus</span><span class="sxs-lookup"><span data-stu-id="4e599-191">Substituting your own algorithm</span></span>  
 <span data-ttu-id="4e599-192">Sie können Ihren eigenen Zufallszahlen-Generator implementieren, indem Sie von der <xref:System.Random>-Klasse erben und den Algorithmus für die Zufallszahlengenerierung bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="4e599-192">You can implement your own random number generator by inheriting from the <xref:System.Random> class and supplying your random number generation algorithm.</span></span> <span data-ttu-id="4e599-193">Um einen eigenen Algorithmus bereitzustellen, müssen Sie die <xref:System.Random.Sample%2A>-Methode überschreiben, die den Algorithmus für die Zufallszahlengenerierung implementiert.</span><span class="sxs-lookup"><span data-stu-id="4e599-193">To supply your own algorithm, you must override the <xref:System.Random.Sample%2A> method, which implements the random number generation algorithm.</span></span> <span data-ttu-id="4e599-194">Außerdem sollten Sie die Methoden <xref:System.Random.Next>, <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29>und <xref:System.Random.NextBytes%2A> überschreiben, um sicherzustellen, dass Sie die überschriebene <xref:System.Random.Sample%2A>-Methode aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="4e599-194">You should also override the <xref:System.Random.Next>, <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29>, and <xref:System.Random.NextBytes%2A> methods to ensure that they call your overridden <xref:System.Random.Sample%2A> method.</span></span> <span data-ttu-id="4e599-195">Sie müssen die Methoden <xref:System.Random.Next%28System.Int32%29> und <xref:System.Random.NextDouble%2A> nicht überschreiben.</span><span class="sxs-lookup"><span data-stu-id="4e599-195">You don't have to override the <xref:System.Random.Next%28System.Int32%29> and <xref:System.Random.NextDouble%2A> methods.</span></span>  
  
 <span data-ttu-id="4e599-196">Ein Beispiel, das von der <xref:System.Random>-Klasse abgeleitet wird und den standardmäßigen Pseudozufallszahlen-Generator ändert, finden Sie auf der <xref:System.Random.Sample%2A> Referenzseite.</span><span class="sxs-lookup"><span data-stu-id="4e599-196">For an example that derives from the <xref:System.Random> class and modifies its default pseudo-random number generator, see the <xref:System.Random.Sample%2A> reference page.</span></span>  
  
<a name="Operations"></a>   
## <a name="how-do-you-use-systemrandom-to"></a><span data-ttu-id="4e599-197">Verwendung von System. Random für...</span><span class="sxs-lookup"><span data-stu-id="4e599-197">How do you use System.Random to…</span></span>  
 <span data-ttu-id="4e599-198">In den folgenden Abschnitten wird der Beispielcode für einige Möglichkeiten erläutert und bereitgestellt, wie Sie in Ihrer APP Zufallszahlen verwenden können.</span><span class="sxs-lookup"><span data-stu-id="4e599-198">The following sections discuss and provide sample code for some of the ways you might want to use random numbers in your app.</span></span>  
  
<a name="Same"></a>   
### <a name="retrieve-the-same-sequence-of-random-values"></a><span data-ttu-id="4e599-199">Abrufen der gleichen Sequenz von Zufalls Werten</span><span class="sxs-lookup"><span data-stu-id="4e599-199">Retrieve the same sequence of random values</span></span>  
 <span data-ttu-id="4e599-200">Manchmal möchten Sie die gleiche Sequenz von Zufallszahlen in Softwaretest Szenarien und in Spiel spielen generieren.</span><span class="sxs-lookup"><span data-stu-id="4e599-200">Sometimes you want to generate the same sequence of random numbers in software test scenarios and in game playing.</span></span> <span data-ttu-id="4e599-201">Durch Tests mit der gleichen Sequenz von Zufallszahlen können Sie Regressionen erkennen und Fehlerbehebungen bestätigen.</span><span class="sxs-lookup"><span data-stu-id="4e599-201">Testing with the same sequence of random numbers allows you to detect regressions and confirm bug fixes.</span></span> <span data-ttu-id="4e599-202">Die Verwendung derselben Sequenz von Zufallszahlen in spielen ermöglicht Ihnen, vorherige Spiele wiederzugeben.</span><span class="sxs-lookup"><span data-stu-id="4e599-202">Using the same sequence of random number in games allows you to replay previous games.</span></span>  
  
 <span data-ttu-id="4e599-203">Sie können dieselbe Sequenz von Zufallszahlen generieren, indem Sie dem <xref:System.Random.%23ctor%28System.Int32%29>-Konstruktor denselben Ausgangswert bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="4e599-203">You can generate the same sequence of random numbers by providing the same seed value to the <xref:System.Random.%23ctor%28System.Int32%29> constructor.</span></span> <span data-ttu-id="4e599-204">Der Seed-Wert stellt einen Startwert für den Algorithmus zur Generierung von Pseudozufallszahlen dar.</span><span class="sxs-lookup"><span data-stu-id="4e599-204">The seed value provides a starting value for the pseudo-random number generation algorithm.</span></span> <span data-ttu-id="4e599-205">Im folgenden Beispiel wird 100100 als beliebiger Ausgangswert verwendet, um das <xref:System.Random>-Objekt zu instanziieren, 20 zufällige Gleit Komma Werte anzeigt und den Seed-Wert persistent zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="4e599-205">The following example uses 100100 as an arbitrary seed value to instantiate the <xref:System.Random> object, displays 20 random floating-point values, and persists the seed value.</span></span> <span data-ttu-id="4e599-206">Anschließend wird der Seed-Wert wieder hergestellt, ein neuer Zufallszahlengenerator instanziiert und die gleichen 20 zufälligen Gleit Komma Werte angezeigt.</span><span class="sxs-lookup"><span data-stu-id="4e599-206">It then restores the seed value, instantiates a new random number generator, and displays the same 20 random floating-point values.</span></span>  <span data-ttu-id="4e599-207">Beachten Sie, dass das Beispiel möglicherweise unterschiedliche Sequenzen von Zufallszahlen erzeugt, wenn Sie in verschiedenen Versionen der .NET Framework ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="4e599-207">Note that the example may produce different sequences of random numbers if run on different versions of the .NET Framework.</span></span>  
  
 [!code-cpp[System.Random#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/same1.cpp#12)]
 [!code-csharp[System.Random#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/same1.cs#12)]
 [!code-vb[System.Random#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/same1.vb#12)]  
  
<a name="Unique"></a>   
### <a name="retrieve-unique-sequences-of-random-numbers"></a><span data-ttu-id="4e599-208">Abrufen von eindeutigen Sequenzen von Zufallszahlen</span><span class="sxs-lookup"><span data-stu-id="4e599-208">Retrieve unique sequences of random numbers</span></span>  
 <span data-ttu-id="4e599-209">Die Angabe unterschiedlicher Ausgangswerte für Instanzen der <xref:System.Random> Klasse bewirkt, dass jeder Zufallszahlengenerator eine andere Sequenz von Werten erzeugt.</span><span class="sxs-lookup"><span data-stu-id="4e599-209">Providing different seed values to instances of the <xref:System.Random> class causes each random number generator to produce a different sequence of values.</span></span> <span data-ttu-id="4e599-210">Sie können einen Ausgangswert entweder explizit angeben, indem Sie den <xref:System.Random.%23ctor%28System.Int32%29>-Konstruktor aufrufen oder den <xref:System.Random.%23ctor>-Konstruktor implizit aufrufen.</span><span class="sxs-lookup"><span data-stu-id="4e599-210">You can provide a seed value either explicitly by calling the <xref:System.Random.%23ctor%28System.Int32%29> constructor, or implicitly by calling the <xref:System.Random.%23ctor> constructor.</span></span> <span data-ttu-id="4e599-211">Die meisten Entwickler wenden den Parameter losen Konstruktor an, der die Systemuhr verwendet.</span><span class="sxs-lookup"><span data-stu-id="4e599-211">Most developers call the parameterless constructor, which uses the system clock.</span></span> <span data-ttu-id="4e599-212">Im folgenden Beispiel wird dieser Ansatz verwendet, um zwei <xref:System.Random> Instanzen zu instanziieren.</span><span class="sxs-lookup"><span data-stu-id="4e599-212">The following example uses this approach to instantiate two <xref:System.Random> instances.</span></span> <span data-ttu-id="4e599-213">Jede Instanz zeigt eine Reihe von 10 zufälligen Ganzzahlen an.</span><span class="sxs-lookup"><span data-stu-id="4e599-213">Each instance displays a series of 10 random integers.</span></span>  
  
 [!code-cpp[System.Random#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/unique.cpp#13)]
 [!code-csharp[System.Random#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/unique.cs#13)]
 [!code-vb[System.Random#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/unique.vb#13)]  
  
 <span data-ttu-id="4e599-214">Aufgrund der begrenzten Auflösung erkennt die Systemuhr jedoch keine Zeitunterschiede, die weniger als ungefähr 15 Millisekunden betragen.</span><span class="sxs-lookup"><span data-stu-id="4e599-214">However, because of its finite resolution, the system clock doesn't detect time differences that are less than approximately 15 milliseconds.</span></span> <span data-ttu-id="4e599-215">Wenn Ihr Code die <xref:System.Random.%23ctor> Überladung auf dem .NET Framework aufruft, um zwei <xref:System.Random> Objekte nacheinander zu instanziieren, können Sie daher versehentlich die Objekte mit identischen Ausgangswerten bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="4e599-215">Therefore, if your code calls the <xref:System.Random.%23ctor> overload on the .NET Framework to instantiate two <xref:System.Random> objects in succession, you might inadvertently be providing the objects with identical seed values.</span></span> <span data-ttu-id="4e599-216">(Für die <xref:System.Random>-Klasse in .net Core gibt es diese Einschränkung nicht.) Um dies im vorherigen Beispiel zu sehen, kommentieren Sie den <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType>-Methodenaufrufe aus, und kompilieren Sie das Beispiel, und führen Sie es erneut aus.</span><span class="sxs-lookup"><span data-stu-id="4e599-216">(The <xref:System.Random> class in .NET Core does not have this limitation.) To see this in the previous example, comment out the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method call, and compile and run the example again.</span></span>  
  
 <span data-ttu-id="4e599-217">Um dies zu verhindern, empfiehlt es sich, ein einzelnes <xref:System.Random> Objekt anstelle mehrerer Objekte zu instanziieren.</span><span class="sxs-lookup"><span data-stu-id="4e599-217">To prevent this from happening, we recommend that you instantiate a single <xref:System.Random> object rather than multiple ones.</span></span> <span data-ttu-id="4e599-218">Da <xref:System.Random> jedoch nicht Thread sicher ist, müssen Sie ein Synchronisierungs Gerät verwenden, wenn Sie von mehreren Threads aus auf eine <xref:System.Random> Instanz zugreifen. Weitere Informationen finden Sie [unter Random class and Thread Safety](#ThreadSafety) weiter oben in diesem Thema.</span><span class="sxs-lookup"><span data-stu-id="4e599-218">However, since <xref:System.Random> isn't thread safe, you must use some synchronization device if you access a <xref:System.Random> instance from multiple threads; for more information, see [The Random class and thread safety](#ThreadSafety) earlier in this topic.</span></span> <span data-ttu-id="4e599-219">Alternativ können Sie einen Verzögerungs Mechanismus verwenden, wie z. b. die <xref:System.Threading.Thread.Sleep%2A>-Methode, die im vorherigen Beispiel verwendet wurde, um sicherzustellen, dass die Instanziierungen mehr als 15 Millisekunden voneinander getrennt vorkommen.</span><span class="sxs-lookup"><span data-stu-id="4e599-219">Alternately, you can use a delay mechanism, such as the <xref:System.Threading.Thread.Sleep%2A> method used in the previous example, to ensure that the instantiations occur more than 15 millisecond apart.</span></span>  
  
<a name="Range"></a>   
### <a name="retrieve-integers-in-a-specified-range"></a><span data-ttu-id="4e599-220">Abrufen von ganzen Zahlen in einem angegebenen Bereich</span><span class="sxs-lookup"><span data-stu-id="4e599-220">Retrieve integers in a specified range</span></span>  
 <span data-ttu-id="4e599-221">Sie können ganze Zahlen in einem angegebenen Bereich abrufen, indem Sie die <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29>-Methode aufrufen, mit der Sie sowohl die untere als auch die obere Grenze der Zahlen festlegen können, die der Zufallszahlengenerator zurückgeben soll.</span><span class="sxs-lookup"><span data-stu-id="4e599-221">You can retrieve integers in a specified range by calling the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method, which lets you specify both the lower and the upper bound of the numbers you'd like the random number generator to return.</span></span> <span data-ttu-id="4e599-222">Die obere Grenze ist ein exklusiver, kein inklusiver Wert.</span><span class="sxs-lookup"><span data-stu-id="4e599-222">The upper bound is an exclusive, not an inclusive, value.</span></span> <span data-ttu-id="4e599-223">Das heißt, es ist nicht in den von der-Methode zurückgegebenen Wertebereich enthalten.</span><span class="sxs-lookup"><span data-stu-id="4e599-223">That is, it isn't included in the range of values returned by the method.</span></span> <span data-ttu-id="4e599-224">Im folgenden Beispiel wird diese Methode verwendet, um zufällige ganze Zahlen zwischen-10 und 10 zu generieren.</span><span class="sxs-lookup"><span data-stu-id="4e599-224">The following example uses this method to generate random integers between -10 and 10.</span></span> <span data-ttu-id="4e599-225">Beachten Sie, dass es 11 angibt, das einen größer als der gewünschte Wert ist, als Wert des `maxValue` Arguments im Methoden Aufruf.</span><span class="sxs-lookup"><span data-stu-id="4e599-225">Note that it specifies 11, which is one greater than the desired value, as the value of the `maxValue` argument in the method call.</span></span>  
  
 [!code-cpp[System.Random#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/range1.cpp#15)]
 [!code-csharp-interactive[System.Random#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/range1.cs#15)]
 [!code-vb[System.Random#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/range1.vb#15)]  
  
<a name="Digits"></a>   
### <a name="retrieve-integers-with-a-specified-number-of-digits"></a><span data-ttu-id="4e599-226">Ganze Zahlen mit einer angegebenen Anzahl von Ziffern abrufen</span><span class="sxs-lookup"><span data-stu-id="4e599-226">Retrieve integers with a specified number of digits</span></span>  
 <span data-ttu-id="4e599-227">Sie können die <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29>-Methode aufrufen, um Zahlen mit einer bestimmten Anzahl von Ziffern abzurufen.</span><span class="sxs-lookup"><span data-stu-id="4e599-227">You can call the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method to retrieve numbers with a specified number of digits.</span></span> <span data-ttu-id="4e599-228">Wenn Sie z. b. Zahlen mit vier Ziffern (d. h. Zahlen zwischen 1000 und 9999) abrufen möchten, rufen Sie die <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29>-Methode mit dem `minValue` Wert 1000 und dem `maxValue` Wert 10000 auf, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="4e599-228">For example, to retrieve numbers with four digits (that is, numbers that range from 1000 to 9999), you call the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method with a `minValue` value of 1000 and a `maxValue` value of 10000, as the following example shows.</span></span>  
  
 [!code-cpp[System.Random#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/range2.cpp#16)]
 [!code-csharp-interactive[System.Random#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/range2.cs#16)]
 [!code-vb[System.Random#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/range2.vb#16)]  
  
<a name="Floats"></a>   
### <a name="retrieve-floating-point-values-in-a-specified-range"></a><span data-ttu-id="4e599-229">Abrufen von Gleit Komma Werten in einem angegebenen Bereich</span><span class="sxs-lookup"><span data-stu-id="4e599-229">Retrieve floating-point values in a specified range</span></span>  
 <span data-ttu-id="4e599-230">Die <xref:System.Random.NextDouble%2A>-Methode gibt zufällige Gleit Komma Werte zurück, die zwischen 0 und kleiner als 1 liegen.</span><span class="sxs-lookup"><span data-stu-id="4e599-230">The <xref:System.Random.NextDouble%2A> method returns random floating-point values that range from 0 to less than 1.</span></span> <span data-ttu-id="4e599-231">Sie möchten jedoch häufig Zufallswerte in einem anderen Bereich generieren.</span><span class="sxs-lookup"><span data-stu-id="4e599-231">However, you'll often want to generate random values in some other range.</span></span>  
  
 <span data-ttu-id="4e599-232">Wenn das Intervall zwischen dem minimalen und dem maximalen gewünschten Wert 1 beträgt, können Sie den Unterschied zwischen dem gewünschten Start Intervall und 0 der von der <xref:System.Random.NextDouble%2A>-Methode zurückgegebenen Zahl hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="4e599-232">If the interval between the minimum and maximum desired values is 1, you can add the difference between the desired starting interval and 0 to the number returned by the <xref:System.Random.NextDouble%2A> method.</span></span> <span data-ttu-id="4e599-233">Im folgenden Beispiel werden 10 Zufallszahlen zwischen-1 und 0 generiert.</span><span class="sxs-lookup"><span data-stu-id="4e599-233">The following example does this to generate 10 random numbers between -1 and 0.</span></span>  
  
 [!code-cpp[System.Random#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/doublerange2.cpp#17)]
 [!code-csharp-interactive[System.Random#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/doublerange2.cs#17)]
 [!code-vb[System.Random#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/doublerange2.vb#17)]  
  
 <span data-ttu-id="4e599-234">Um zufällige Gleit Komma Zahlen zu generieren, deren untere Grenze 0 (null) ist, aber obere Grenze größer als 1 ist (oder im Fall von negativen Zahlen, deren untere Grenze kleiner als-1 und die obere Grenze 0 ist), Multiplizieren Sie die Zufallszahl mit der Grenze ungleich 0 (null).</span><span class="sxs-lookup"><span data-stu-id="4e599-234">To generate random floating-point numbers whose lower bound is 0 but upper bound is greater than 1 (or, in the case of negative numbers, whose lower bound is less than -1 and upper bound is 0), multiply the random number by the non-zero bound.</span></span> <span data-ttu-id="4e599-235">Im folgenden Beispiel werden 20 Millionen zufällige Gleit Komma Zahlen generiert, die zwischen 0 und <xref:System.Int64.MaxValue?displayProperty=nameWithType>liegen.</span><span class="sxs-lookup"><span data-stu-id="4e599-235">The following example does this to generate 20 million random floating-point numbers that range from 0 to <xref:System.Int64.MaxValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4e599-236">In wird auch die Verteilung der von der-Methode generierten zufälligen Werte angezeigt.</span><span class="sxs-lookup"><span data-stu-id="4e599-236">In also displays the distribution of the random values generated by the method.</span></span>  
  
 [!code-cpp[System.Random#18](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/doublerange1.cpp#18)]
 [!code-csharp-interactive[System.Random#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/doublerange1.cs#18)]
 [!code-vb[System.Random#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/doublerange1.vb#18)]  
  
 <span data-ttu-id="4e599-237">Verwenden Sie die folgende Formel, um zufällige Gleit Komma Zahlen zwischen zwei beliebigen Werten zu generieren, wie z. b. die <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29>-Methode für ganze Zahlen.</span><span class="sxs-lookup"><span data-stu-id="4e599-237">To generate random floating-point numbers between two arbitrary values, like the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method does for integers, use the following formula:</span></span>  
  
```csharp  
Random.NextDouble() * (maxValue - minValue) + minValue  
```  
  
 <span data-ttu-id="4e599-238">Im folgenden Beispiel werden 1 Million Zufallszahlen generiert, die zwischen 10,0 und 11,0 liegen und deren Verteilung anzeigt.</span><span class="sxs-lookup"><span data-stu-id="4e599-238">The following example generates 1 million random numbers that range from 10.0 to 11.0, and displays their distribution.</span></span>  
  
 [!code-cpp[System.Random#19](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/doublerange3.cpp#19)]
 [!code-csharp-interactive[System.Random#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/doublerange3.cs#19)]
 [!code-vb[System.Random#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/doublerange3.vb#19)]  
  
<a name="Boolean"></a>   
### <a name="generate-random-boolean-values"></a><span data-ttu-id="4e599-239">Generieren von zufälligen booleschen Werten</span><span class="sxs-lookup"><span data-stu-id="4e599-239">Generate random Boolean values</span></span>  
 <span data-ttu-id="4e599-240">Die <xref:System.Random>-Klasse stellt keine Methoden bereit, die <xref:System.Boolean> Werte generieren.</span><span class="sxs-lookup"><span data-stu-id="4e599-240">The <xref:System.Random> class doesn't provide methods that generate <xref:System.Boolean> values.</span></span> <span data-ttu-id="4e599-241">Hierfür können Sie jedoch auch eine eigene Klasse oder Methode definieren.</span><span class="sxs-lookup"><span data-stu-id="4e599-241">However, you can define your own class or method to do that.</span></span> <span data-ttu-id="4e599-242">Im folgenden Beispiel wird eine-Klasse, `BooleanGenerator`mit einer einzelnen Methode definiert, `NextBoolean`.</span><span class="sxs-lookup"><span data-stu-id="4e599-242">The following example defines a class, `BooleanGenerator`, with a single method, `NextBoolean`.</span></span> <span data-ttu-id="4e599-243">Die `BooleanGenerator`-Klasse speichert ein <xref:System.Random>-Objekt als private Variable.</span><span class="sxs-lookup"><span data-stu-id="4e599-243">The `BooleanGenerator` class stores a <xref:System.Random> object as a private variable.</span></span> <span data-ttu-id="4e599-244">Die `NextBoolean`-Methode ruft die <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType>-Methode auf und übergibt das Ergebnis an die <xref:System.Convert.ToBoolean%28System.Int32%29?displayProperty=nameWithType>-Methode.</span><span class="sxs-lookup"><span data-stu-id="4e599-244">The `NextBoolean` method calls the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method and passes the result to the <xref:System.Convert.ToBoolean%28System.Int32%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4e599-245">Beachten Sie, dass 2 als Argument verwendet wird, um die obere Grenze der Zufallszahl anzugeben.</span><span class="sxs-lookup"><span data-stu-id="4e599-245">Note that 2 is used as the argument to specify the upper bound of the random number.</span></span> <span data-ttu-id="4e599-246">Da dies ein exklusiver Wert ist, gibt der Methodenaufrufe entweder 0 oder 1 zurück.</span><span class="sxs-lookup"><span data-stu-id="4e599-246">Since this is an exclusive value, the method call returns either 0 or 1.</span></span>  
  
 [!code-cpp[System.Random#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/booleans1.cpp#8)]
 [!code-csharp[System.Random#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/booleans1.cs#8)]
 [!code-vb[System.Random#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/booleans1.vb#8)]  
  
 <span data-ttu-id="4e599-247">Anstatt eine separate Klasse zum Generieren von zufälligen <xref:System.Boolean> Werten zu erstellen, könnte das Beispiel einfach nur eine einzige Methode definieren.</span><span class="sxs-lookup"><span data-stu-id="4e599-247">Instead of creating a separate class to generate random <xref:System.Boolean> values, the example could simply have defined a single method.</span></span> <span data-ttu-id="4e599-248">In diesem Fall sollte das <xref:System.Random> Objekt jedoch als Variable auf Klassenebene definiert worden sein, um zu vermeiden, dass in jedem Methoden aufrufeine neue <xref:System.Random> Instanz instanziiert wird.</span><span class="sxs-lookup"><span data-stu-id="4e599-248">In that case, however, the <xref:System.Random> object should have been defined as a class-level variable to avoid instantiating a new <xref:System.Random> instance in each method call.</span></span> <span data-ttu-id="4e599-249">In Visual Basic kann die zufällige Instanz als [statische](~/docs/visual-basic/language-reference/modifiers/static.md) Variable in der `NextBoolean`-Methode definiert werden.</span><span class="sxs-lookup"><span data-stu-id="4e599-249">In Visual Basic, the Random instance can be defined as a [Static](~/docs/visual-basic/language-reference/modifiers/static.md) variable in the `NextBoolean` method.</span></span>  <span data-ttu-id="4e599-250">Im folgenden Beispiel wird eine-Implementierung bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="4e599-250">The following example provides an implementation.</span></span>  
  
 [!code-cpp[System.Random#20](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/booleans2.cpp#20)]
 [!code-csharp-interactive[System.Random#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/booleans2.cs#20)]
 [!code-vb[System.Random#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/booleans2.vb#20)]  
  
<a name="Long"></a>   
### <a name="generate-random-64-bit-integers"></a><span data-ttu-id="4e599-251">Generieren zufälliger 64-Bit-Ganzzahlen</span><span class="sxs-lookup"><span data-stu-id="4e599-251">Generate random 64-bit integers</span></span>  
 <span data-ttu-id="4e599-252">Die über Ladungen der <xref:System.Random.Next%2A>-Methode geben 32-Bit-Ganzzahlen zurück.</span><span class="sxs-lookup"><span data-stu-id="4e599-252">The overloads of the <xref:System.Random.Next%2A> method return 32-bit integers.</span></span> <span data-ttu-id="4e599-253">In einigen Fällen möchten Sie jedoch vielleicht mit 64-Bit-Ganzzahlen arbeiten.</span><span class="sxs-lookup"><span data-stu-id="4e599-253">However, in some cases, you might want to work with 64-bit integers.</span></span> <span data-ttu-id="4e599-254">Sie können dies wie folgt tun:</span><span class="sxs-lookup"><span data-stu-id="4e599-254">You can do this as follows:</span></span>  
  
1.  <span data-ttu-id="4e599-255">Rufen Sie die <xref:System.Random.NextDouble%2A>-Methode auf, um einen Gleit Komma Wert mit doppelter Genauigkeit abzurufen.</span><span class="sxs-lookup"><span data-stu-id="4e599-255">Call the <xref:System.Random.NextDouble%2A> method to retrieve a double-precision floating point value.</span></span>  
  
2.  <span data-ttu-id="4e599-256">Multiplizieren Sie diesen Wert <xref:System.Int64.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4e599-256">Multiply that value by <xref:System.Int64.MaxValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="4e599-257">Im folgenden Beispiel wird dieses Verfahren verwendet, um zufällige ganze Zahlen mit 20 Millionen zu generieren und in 10 gleich großen Gruppen zu kategorisieren.</span><span class="sxs-lookup"><span data-stu-id="4e599-257">The following example uses this technique to generate 20 million random long integers and categorizes them in 10 equal groups.</span></span> <span data-ttu-id="4e599-258">Anschließend wertet er die Verteilung der Zufallszahlen aus, indem er die Anzahl der einzelnen Gruppen von 0 bis <xref:System.Int64.MaxValue?displayProperty=nameWithType>zählt.</span><span class="sxs-lookup"><span data-stu-id="4e599-258">It then evaluates the distribution of the random numbers by counting the number in each group from 0 to <xref:System.Int64.MaxValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4e599-259">Wie die Ausgabe des Beispiels zeigt, werden die Zahlen mehr oder weniger gleichmäßig über den Bereich einer langen ganzen Zahl verteilt.</span><span class="sxs-lookup"><span data-stu-id="4e599-259">As the output from the example shows, the numbers are distributed more or less equally through the range of a long integer.</span></span>  
  
 [!code-cpp[System.Random#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/long1.cpp#14)]
 [!code-csharp-interactive[System.Random#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/long1.cs#14)]
 [!code-vb[System.Random#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/long1.vb#14)]  
  
 <span data-ttu-id="4e599-260">Eine alternative Methode, die Bitmanipulation verwendet, generiert keine wirklich zufälligen Zahlen.</span><span class="sxs-lookup"><span data-stu-id="4e599-260">An alternative technique that uses bit manipulation does not generate truly random numbers.</span></span> <span data-ttu-id="4e599-261">Mit dieser Technik werden <xref:System.Random.Next> aufgerufen, um zwei Ganzzahlen zu generieren, um eine nach 32 Bits zu verschieben, und Sie werden miteinander verknüpft.</span><span class="sxs-lookup"><span data-stu-id="4e599-261">This technique calls <xref:System.Random.Next> to generate two integers, left-shifts one by 32 bits, and ORs them together.</span></span> <span data-ttu-id="4e599-262">Diese Methode hat zwei Einschränkungen:</span><span class="sxs-lookup"><span data-stu-id="4e599-262">This technique has two limitations:</span></span>  
  
1.  <span data-ttu-id="4e599-263">Da Bit 31 das Signier Bit ist, ist der Wert in Bit 31 der resultierenden Long-Ganzzahl immer 0.</span><span class="sxs-lookup"><span data-stu-id="4e599-263">Because bit 31 is the sign bit, the value in bit 31 of the resulting long integer is always 0.</span></span>  <span data-ttu-id="4e599-264">Dies kann behoben werden, indem ein zufälliger 0-oder 1-Bit-Wert generiert wird, bei dem der Wert für 31 Bits nach links verschoben und mit der ursprünglichen zufälligen Long-Ganzzahl</span><span class="sxs-lookup"><span data-stu-id="4e599-264">This can be addressed by generating a random 0 or 1, left-shifting it 31 bits, and ORing it with the original random long integer.</span></span>  
  
2.  <span data-ttu-id="4e599-265">Da die Wahrscheinlichkeit, dass der Wert, der von <xref:System.Random.Next> zurückgegeben wird, 0 (null) ist, gibt es nur wenige, wenn eine Zufallszahl im Bereich von 0x0-0x00000000FFFFFFFF liegt.</span><span class="sxs-lookup"><span data-stu-id="4e599-265">More seriously, because the probability that the value returned by <xref:System.Random.Next> will be 0, there will be few if any random numbers in the range 0x0-0x00000000FFFFFFFF.</span></span>  
  
<a name="Bytes"></a>   
### <a name="retrieve-bytes-in-a-specified-range"></a><span data-ttu-id="4e599-266">Abrufen von Bytes in einem angegebenen Bereich</span><span class="sxs-lookup"><span data-stu-id="4e599-266">Retrieve bytes in a specified range</span></span>  
 <span data-ttu-id="4e599-267">Die über Ladungen der <xref:System.Random.Next%2A>-Methode ermöglichen es Ihnen, den Bereich von Zufallszahlen anzugeben, die <xref:System.Random.NextBytes%2A>-Methode jedoch nicht.</span><span class="sxs-lookup"><span data-stu-id="4e599-267">The overloads of the <xref:System.Random.Next%2A> method allow you to specify the range of random numbers, but the <xref:System.Random.NextBytes%2A> method does not.</span></span> <span data-ttu-id="4e599-268">Im folgenden Beispiel wird eine `NextBytes`-Methode implementiert, mit der Sie den Bereich der zurückgegebenen Bytes angeben können.</span><span class="sxs-lookup"><span data-stu-id="4e599-268">The following example implements a `NextBytes` method that lets you specify the range of the returned bytes.</span></span> <span data-ttu-id="4e599-269">Es definiert eine `Random2` Klasse, die von <xref:System.Random> abgeleitet ist und die `NextBytes`-Methode überlädt.</span><span class="sxs-lookup"><span data-stu-id="4e599-269">It defines a `Random2` class that derives from <xref:System.Random> and overloads its `NextBytes` method.</span></span>  
  
 [!code-cpp[System.Random#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/bytes1.cpp#9)]
 [!code-csharp[System.Random#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/bytes1.cs#9)]
 [!code-vb[System.Random#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/bytes1.vb#9)]  
  
 <span data-ttu-id="4e599-270">Die `NextBytes(Byte[], Byte, Byte)`-Methode umschließt einen aufzurufenden <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> Methode und gibt den Minimalwert und einen größer als den maximalen Wert (in diesem Fall 0 und 101) an, der im Bytearray zurückgegeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e599-270">The `NextBytes(Byte[], Byte, Byte)` method wraps a call to the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method and specifies the minimum value and one greater than the maximum value (in this case, 0 and 101) that we want returned in the byte array.</span></span> <span data-ttu-id="4e599-271">Da wir sicher sind, dass die von der <xref:System.Random.Next%2A>-Methode zurückgegebenen ganzzahligen Werte innerhalb des Bereichs des <xref:System.Byte> Datentyps liegen, können C#wir Sie problemlos umwandeln (in) oder von ganzen Zahlen in Bytes konvertieren (in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="4e599-271">Because we are sure that the integer values returned by the <xref:System.Random.Next%2A> method are within the range of the <xref:System.Byte> data type, we can safely cast them (in C#) or convert them (in Visual Basic) from integers to bytes.</span></span>  
  
<a name="Array"></a>   
### <a name="retrieve-an-element-from-an-array-or-collection-at-random"></a><span data-ttu-id="4e599-272">Abrufen eines Elements aus einem Array oder einer Auflistung nach dem Zufallsprinzip</span><span class="sxs-lookup"><span data-stu-id="4e599-272">Retrieve an element from an array or collection at random</span></span>  
 <span data-ttu-id="4e599-273">Zufallszahlen dienen häufig als Indizes zum Abrufen von Werten aus Arrays oder Auflistungen.</span><span class="sxs-lookup"><span data-stu-id="4e599-273">Random numbers often serve as indexes to retrieve values from arrays or collections.</span></span> <span data-ttu-id="4e599-274">Wenn Sie einen zufälligen Indexwert abrufen möchten, können Sie die <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29>-Methode aufrufen und die untere Grenze des Arrays als Wert seines `minValue` Arguments und einen größer als die obere Grenze des Arrays als Wert seines `maxValue` Arguments verwenden.</span><span class="sxs-lookup"><span data-stu-id="4e599-274">To retrieve a random index value, you can call the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method, and use the lower bound of the array as the value of its `minValue` argument and one greater than the upper bound of the array as the value of its `maxValue` argument.</span></span> <span data-ttu-id="4e599-275">Für ein NULL basiertes Array entspricht dies der <xref:System.Array.Length%2A>-Eigenschaft, oder eine größer als der Wert, der von der <xref:System.Array.GetUpperBound%2A?displayProperty=nameWithType>-Methode zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="4e599-275">For a zero-based array, this is equivalent to its <xref:System.Array.Length%2A> property, or one greater than the value returned by the <xref:System.Array.GetUpperBound%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4e599-276">Im folgenden Beispiel wird der Name einer Stadt im USA aus einem Array von Städten nach dem Zufallsprinzip abgerufen.</span><span class="sxs-lookup"><span data-stu-id="4e599-276">The following example randomly retrieves the name of a city in the United States from an array of cities.</span></span>  
  
 [!code-cpp[System.Random#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/array1.cpp#10)]
 [!code-csharp-interactive[System.Random#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/array1.cs#10)]
 [!code-vb[System.Random#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/array1.vb#10)]  
  
<a name="UniqueArray"></a>   
### <a name="retrieve-a-unique-element-from-an-array-or-collection"></a><span data-ttu-id="4e599-277">Abrufen eines eindeutigen Elements aus einem Array oder einer Auflistung</span><span class="sxs-lookup"><span data-stu-id="4e599-277">Retrieve a unique element from an array or collection</span></span>  
 <span data-ttu-id="4e599-278">Ein Zufallszahlengenerator kann immer doppelte Werte zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="4e599-278">A random number generator can always return duplicate values.</span></span> <span data-ttu-id="4e599-279">Wenn der Bereich der Zahlen kleiner wird oder die Anzahl der generierten Werte größer ist, wächst die Wahrscheinlichkeit von Duplikaten.</span><span class="sxs-lookup"><span data-stu-id="4e599-279">As the range of numbers becomes smaller or the number of values generated becomes larger, the probability of duplicates grows.</span></span> <span data-ttu-id="4e599-280">Wenn zufällige Werte eindeutig sein müssen, werden mehr Zahlen generiert, um Duplikate zu kompensieren. Dies führt zu einer zunehmend schlechten Leistung.</span><span class="sxs-lookup"><span data-stu-id="4e599-280">If random values must be unique, more numbers are generated to compensate for duplicates, resulting in increasingly poor performance.</span></span>  
  
 <span data-ttu-id="4e599-281">Es gibt eine Reihe von Techniken zum Behandeln dieses Szenarios.</span><span class="sxs-lookup"><span data-stu-id="4e599-281">There are a number of techniques to handle this scenario.</span></span> <span data-ttu-id="4e599-282">Eine gängige Lösung besteht darin, ein Array oder eine Sammlung zu erstellen, das die abzurufenden Werte enthält, sowie ein paralleles Array, das zufällige Gleit Komma Zahlen enthält.</span><span class="sxs-lookup"><span data-stu-id="4e599-282">One common solution is to create an array or collection that contains the values to be retrieved, and a parallel array that contains random floating-point numbers.</span></span> <span data-ttu-id="4e599-283">Das zweite Array wird mit Zufallszahlen aufgefüllt, wenn das erste Array erstellt wird, und die <xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=nameWithType>-Methode wird verwendet, um das erste Array mithilfe der Werte im parallelen Array zu sortieren.</span><span class="sxs-lookup"><span data-stu-id="4e599-283">The second array is populated with random numbers at the time the first array is created, and the <xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=nameWithType> method is used to sort the first array by using the values in the parallel array.</span></span>  
  
 <span data-ttu-id="4e599-284">Wenn Sie z. b. ein Solitaire-Spiel entwickeln, sollten Sie sicherstellen, dass jede Karte nur einmal verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="4e599-284">For example, if you're developing a Solitaire game, you want to ensure that each card is used only once.</span></span> <span data-ttu-id="4e599-285">Anstatt Zufallszahlen zum Abrufen einer Karte und nachverfolgen, ob diese Karte bereits behandelt wurde, zu erzeugen, können Sie ein paralleles Array von Zufallszahlen erstellen, das zum Sortieren des Stapels verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="4e599-285">Instead of generating random numbers to retrieve a card and tracking whether that card has already been dealt, you can create a parallel array of random numbers that can be used to sort the deck.</span></span> <span data-ttu-id="4e599-286">Sobald der Stapel sortiert ist, kann Ihre APP einen Zeiger behalten, um den Index der nächsten Karte auf dem Stapel anzugeben.</span><span class="sxs-lookup"><span data-stu-id="4e599-286">Once the deck is sorted, your app can maintain a pointer to indicate the index of the next card on the deck.</span></span>  
  
 <span data-ttu-id="4e599-287">Dieser Ansatz wird anhand des folgenden Beispiels veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="4e599-287">The following example illustrates this approach.</span></span> <span data-ttu-id="4e599-288">Es definiert eine `Card` Klasse, die eine Wiedergabe Karte und eine `Dealer` Klasse darstellt, die einen Stapel von gemischten Karten behandelt.</span><span class="sxs-lookup"><span data-stu-id="4e599-288">It defines a `Card` class that represents a playing card and a `Dealer` class that deals a deck of shuffled cards.</span></span> <span data-ttu-id="4e599-289">Der `Dealer`-Klassenkonstruktor füllt zwei Arrays auf: ein `deck` Array mit Klassen Bereich, das alle Karten im Stapel darstellt. und ein lokales `order` Array, das über die gleiche Anzahl von Elementen wie das `deck` Array verfügt und mit zufällig generierten <xref:System.Double> Werten aufgefüllt wird.</span><span class="sxs-lookup"><span data-stu-id="4e599-289">The `Dealer` class constructor populates two arrays: a `deck` array that has class scope and that represents all the cards in the deck; and a local `order` array that has the same number of elements as the `deck` array and is populated with randomly generated <xref:System.Double> values.</span></span>  <span data-ttu-id="4e599-290">Die <xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=nameWithType>-Methode wird dann aufgerufen, um das `deck` Array basierend auf den Werten im `order` Array zu sortieren.</span><span class="sxs-lookup"><span data-stu-id="4e599-290">The <xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=nameWithType> method is then called to sort the `deck` array based on the values in the `order` array.</span></span>  
  
 [!code-cpp[System.Random#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/uniquearray1.cpp#11)]
 [!code-csharp[System.Random#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/uniquearray1.cs#11)]
 [!code-vb[System.Random#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/uniquearray1.vb#11)]  
  
   
  
## Examples  

 <span data-ttu-id="4e599-291">Im folgenden Beispiel wird ein einzelner Zufallszahlengenerator erstellt und seine Methoden <xref:System.Random.NextBytes%2A>, <xref:System.Random.Next%2A>und <xref:System.Random.NextDouble%2A> aufgerufen, um Sequenzen von Zufallszahlen in verschiedenen Bereichen zu generieren.</span><span class="sxs-lookup"><span data-stu-id="4e599-291">The following example creates a single random number generator and calls its <xref:System.Random.NextBytes%2A>, <xref:System.Random.Next%2A>, and <xref:System.Random.NextDouble%2A> methods to generate sequences of random numbers within different ranges.</span></span>  
  
 [!code-cpp[System.Random#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/random2.cpp#2)]
 [!code-csharp-interactive[System.Random#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/Random2.cs#2)]
 [!code-vb[System.Random#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/Random2.vb#2)]  
  
 <span data-ttu-id="4e599-292">Im folgenden Beispiel wird eine zufällige ganze Zahl generiert, die als Index zum Abrufen eines Zeichen folgen Werts aus einem Array verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="4e599-292">The following example generates a random integer that it uses as an index to retrieve a string value from an array.</span></span>  
  
 [!code-cpp[System.Random.Next#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Next/CPP/next1.cpp#3)]
 [!code-csharp-interactive[System.Random.Next#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Next/CS/next1.cs#3)]
 [!code-vb[System.Random.Next#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Next/VB/next1.vb#3)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="4e599-293">In den .NET Framework 1,0 und 1,1 ist eine minimale Implementierung einer von <see cref="T:System.Random" /> abgeleiteten Klasse erforderlich, die die <see cref="M:System.Random.Sample" />-Methode überschreibt, um einen neuen oder geänderten Algorithmus zum Erstellen von Zufallszahlen zu definieren.</span><span class="sxs-lookup"><span data-stu-id="4e599-293">In the .NET Framework 1.0 and 1.1, a minimum implementation of a class derived from <see cref="T:System.Random" /> required overriding the <see cref="M:System.Random.Sample" /> method to define a new or modified algorithm for generating random numbers.</span></span> <span data-ttu-id="4e599-294">Die abgeleitete Klasse kann dann auf die Basisklassen Implementierung der Methoden <see cref="M:System.Random.Next" />, <see cref="M:System.Random.Next(System.Int32)" />, <see cref="M:System.Random.Next(System.Int32,System.Int32)" />, <see cref="M:System.Random.NextBytes(System.Byte[])" />und <see cref="M:System.Random.NextDouble" /> zurückgreifen, um die Implementierung der abgeleiteten Klasse der <see cref="M:System.Random.Sample" />-Methode aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="4e599-294">The derived class could then rely on the base class implementation of the <see cref="M:System.Random.Next" />, <see cref="M:System.Random.Next(System.Int32)" />, <see cref="M:System.Random.Next(System.Int32,System.Int32)" />, <see cref="M:System.Random.NextBytes(System.Byte[])" />, and <see cref="M:System.Random.NextDouble" /> methods to call the derived class implementation of the <see cref="M:System.Random.Sample" /> method.</span></span>  
  
<span data-ttu-id="4e599-295">In der .NET Framework 2,0 und höher wurde das Verhalten der Methoden <see cref="M:System.Random.Next" />, <see cref="M:System.Random.Next(System.Int32,System.Int32)" />und <see cref="M:System.Random.NextBytes(System.Byte[])" /> geändert, sodass diese Methoden nicht notwendigerweise die Implementierung der abgeleiteten Klasse der <see cref="M:System.Random.Sample" />-Methode aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="4e599-295">In the .NET Framework 2.0 and later, the behavior of the <see cref="M:System.Random.Next" />, <see cref="M:System.Random.Next(System.Int32,System.Int32)" />, and <see cref="M:System.Random.NextBytes(System.Byte[])" /> methods have changed so that these methods do not necessarily call the derived class implementation of the <see cref="M:System.Random.Sample" /> method.</span></span> <span data-ttu-id="4e599-296">Daher sollten von <see cref="T:System.Random" /> abgeleitete Klassen, die auf .NET Framework 2,0 und höher ausgerichtet sind, auch diese drei Methoden überschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="4e599-296">As a result, classes derived from <see cref="T:System.Random" /> that target the .NET Framework 2.0 and later should also override these three methods.</span></span></para></block>
    <block subset="none" type="usage"><para><span data-ttu-id="4e599-297">Es ist nicht garantiert, dass die Implementierung des Zufallszahlengenerators in der <see cref="T:System.Random" />-Klasse in den Hauptversionen des .NET Framework identisch bleibt.</span><span class="sxs-lookup"><span data-stu-id="4e599-297">The implementation of the random number generator in the <see cref="T:System.Random" /> class isn't guaranteed to remain the same across major versions of the .NET Framework.</span></span> <span data-ttu-id="4e599-298">Daher sollten Sie nicht davon ausgehen, dass derselbe Ausgangswert in verschiedenen Versionen der .NET Framework dieselbe pseudo zufällige Sequenz ergibt.</span><span class="sxs-lookup"><span data-stu-id="4e599-298">As a result, you shouldn't assume that the same seed will result in the same pseudo-random sequence in different versions of the .NET Framework.</span></span></para></block>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4e599-299">Initialisiert eine neue Instanz der <see cref="T:System.Random" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="4e599-299">Initializes a new instance of the <see cref="T:System.Random" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Random ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Random();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4e599-300">Initialisiert eine neue Instanz der <see cref="T:System.Random" />-Klasse unter Verwendung eines zeitabhängigen Standardstartwerts.</span><span class="sxs-lookup"><span data-stu-id="4e599-300">Initializes a new instance of the <see cref="T:System.Random" /> class, using a time-dependent default seed value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="4e599-301">Der standardseed-Wert wird von der Systemuhr abgeleitet, die eine begrenzte Auflösung aufweist.</span><span class="sxs-lookup"><span data-stu-id="4e599-301">The default seed value is derived from the system clock, which has finite resolution.</span></span> <span data-ttu-id="4e599-302">Demzufolge verfügen unterschiedliche <xref:System.Random> Objekte, die durch einen-Parameter, der den Parameter losen Konstruktor mit einem-Parameter erstellt, mit identischen Standard Ausgangswerten und können daher identische Sätze von Zufallszahlen erstellen. .NET Framework</span><span class="sxs-lookup"><span data-stu-id="4e599-302">As a result, on the .NET Framework only, different <xref:System.Random> objects that are created in close succession by a call to the parameterless constructor will have identical default seed values and, therefore, will produce identical sets of random numbers.</span></span> <span data-ttu-id="4e599-303">Dieses Problem kann vermieden werden, indem ein einzelnes <xref:System.Random> Objekt verwendet wird, um alle Zufallszahlen zu generieren.</span><span class="sxs-lookup"><span data-stu-id="4e599-303">This problem can be avoided by using a single <xref:System.Random> object to generate all random numbers.</span></span> <span data-ttu-id="4e599-304">Sie können das Problem auch umgehen, indem Sie einen eigenen zufälligen Ausgangswert erstellen und an den <xref:System.Random.%23ctor%28System.Int32%29>-Konstruktor übergeben.</span><span class="sxs-lookup"><span data-stu-id="4e599-304">You can also work around it by generating your own random seed value and passing it to the <xref:System.Random.%23ctor%28System.Int32%29> constructor.</span></span> <span data-ttu-id="4e599-305">Weitere Informationen finden Sie im <xref:System.Random.%23ctor%28System.Int32%29>-Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="4e599-305">For more information, see the <xref:System.Random.%23ctor%28System.Int32%29> constructor.</span></span> <span data-ttu-id="4e599-306">Beachten Sie, dass diese Einschränkung nicht auf .net Core anwendbar ist.</span><span class="sxs-lookup"><span data-stu-id="4e599-306">Note that this limitation does not apply to .NET Core.</span></span>  
  
 <span data-ttu-id="4e599-307">Rufen Sie diesen Konstruktor auf, wenn Sie möchten, dass der Zufallszahlengenerator eine zufällige Sequenz von Zahlen generiert.</span><span class="sxs-lookup"><span data-stu-id="4e599-307">Call this constructor if you want your random number generator to generate a random sequence of numbers.</span></span> <span data-ttu-id="4e599-308">Um eine festgelegte Sequenz von Zufallszahlen zu generieren, die für unterschiedliche Zufallszahlengeneratoren identisch sein werden, rufen Sie den <xref:System.Random.%23ctor%28System.Int32%29>-Konstruktor mit einem fixierten Ausgangswert auf.</span><span class="sxs-lookup"><span data-stu-id="4e599-308">To generate a fixed  sequence of random numbers that will be the same for different random number generators, call the <xref:System.Random.%23ctor%28System.Int32%29> constructor with a fixed seed value .</span></span> <span data-ttu-id="4e599-309">Diese <xref:System.Random>-Konstruktorüberladung wird häufig beim Testen von apps verwendet, die Zufallszahlen verwenden.</span><span class="sxs-lookup"><span data-stu-id="4e599-309">This <xref:System.Random> constructor overload is frequently used when testing apps that use random numbers.</span></span>  
  
 <span data-ttu-id="4e599-310">Nachdem Sie den Zufallszahlengenerator instanziiert haben, rufen Sie einzelne <xref:System.Random> Methoden (z. b. <xref:System.Random.Next> oder <xref:System.Random.NextDouble>) auf, um Zufallszahlen zu generieren.</span><span class="sxs-lookup"><span data-stu-id="4e599-310">Once you've instantiated the random number generator, you call individual <xref:System.Random> methods, such as <xref:System.Random.Next> or <xref:System.Random.NextDouble>, to generate random numbers.</span></span>  
  
   
  
## Examples

<span data-ttu-id="4e599-311">Im folgenden Beispiel wird der Parameter lose Konstruktor zum Instanziieren von drei <xref:System.Random> Objekten verwendet, und es wird eine Sequenz von fünf Zufallszahlen für jede angezeigt.</span><span class="sxs-lookup"><span data-stu-id="4e599-311">The following example uses the parameterless constructor to instantiate three <xref:System.Random> objects and displays a sequence of five random integers for each.</span></span> <span data-ttu-id="4e599-312">Wenn Sie auf .NET Framework ausgeführt wird, da die ersten beiden <xref:System.Random> Objekte in der Schlusssequenz erstellt werden, werden Sie mit identischen Ausgangswerten instanziiert, die auf der Systemuhr basieren, und deshalb wird eine identische Sequenz von Zufallszahlen erzeugt.</span><span class="sxs-lookup"><span data-stu-id="4e599-312">If it is run on .NET Framework, because the first two <xref:System.Random> objects are created in close succession, they are instantiated using identical seed values based on the system clock and, therefore, they produce an identical sequence of random numbers.</span></span> <span data-ttu-id="4e599-313">Auf der anderen Seite wird der Parameter lose Konstruktor des dritten <xref:System.Random> Objekts nach einer Verzögerung von zwei Sekunden aufgerufen, die durch den Aufruf der <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType>-Methode verursacht wurde.</span><span class="sxs-lookup"><span data-stu-id="4e599-313">On the other hand, the parameterless constructor of the third <xref:System.Random> object is called after a two-second delay caused by calling the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4e599-314">Da dadurch ein anderer Ausgangswert für das dritte <xref:System.Random>-Objekt erzeugt wird, wird eine andere Sequenz von Zufallszahlen erzeugt.</span><span class="sxs-lookup"><span data-stu-id="4e599-314">Because this produces a different seed value for the third <xref:System.Random> object, it produces a different sequence of random numbers.</span></span>  
  
 [!code-csharp[System.Random.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Ctor/CS/ctor1.cs#2)]
 [!code-vb[System.Random.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Ctor/VB/ctor1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Random (int Seed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 Seed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Seed As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Random(int Seed);" />
      <MemberSignature Language="F#" Value="new Random : int -&gt; Random" Usage="new System.Random Seed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="Seed" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Seed"><span data-ttu-id="4e599-315">Eine Zahl, mit der ein Startwert für Folgen von Pseudozufallszahlen berechnet wird.</span><span class="sxs-lookup"><span data-stu-id="4e599-315">A number used to calculate a starting value for the pseudo-random number sequence.</span></span> <span data-ttu-id="4e599-316">Wenn eine negative Zahl angegeben wird, wird der absolute Wert der Zahl verwendet.</span><span class="sxs-lookup"><span data-stu-id="4e599-316">If a negative number is specified, the absolute value of the number is used.</span></span></param>
        <summary><span data-ttu-id="4e599-317">Initialisiert eine neue Instanz der <see cref="T:System.Random" />-Klasse unter Verwendung des angegebenen Startwerts.</span><span class="sxs-lookup"><span data-stu-id="4e599-317">Initializes a new instance of the <see cref="T:System.Random" /> class, using the specified seed value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e599-318">Das Bereitstellen eines identischen Ausgangs Werts für verschiedene <xref:System.Random> Objekte bewirkt, dass jede Instanz identische Sequenzen von Zufallszahlen erzeugt.</span><span class="sxs-lookup"><span data-stu-id="4e599-318">Providing an identical seed value to different <xref:System.Random> objects causes each instance to produce identical sequences of random numbers.</span></span> <span data-ttu-id="4e599-319">Dies erfolgt häufig beim Testen von apps, die auf Zufallszahlengeneratoren basieren.</span><span class="sxs-lookup"><span data-stu-id="4e599-319">This is often done when testing apps that rely on random number generators.</span></span>  
  
 <span data-ttu-id="4e599-320">Wenn Ihre Anwendung unterschiedliche Zufallszahlen Sequenzen erfordert, rufen Sie diesen Konstruktor wiederholt mit unterschiedlichen Seed-Werten auf.</span><span class="sxs-lookup"><span data-stu-id="4e599-320">If your application requires different random number sequences, invoke this constructor repeatedly with different seed values.</span></span> <span data-ttu-id="4e599-321">Eine Möglichkeit zum Erstellen eines eindeutigen Ausgangs Werts besteht darin, den Wert Zeit abhängig zu machen.</span><span class="sxs-lookup"><span data-stu-id="4e599-321">One way to produce a unique seed value is to make it time-dependent.</span></span> <span data-ttu-id="4e599-322">Leiten Sie z. b. den Seed-Wert von der Systemuhr ab, wie die <xref:System.Random.%23ctor> Überladung.</span><span class="sxs-lookup"><span data-stu-id="4e599-322">For example, derive the seed value from the system clock, as the <xref:System.Random.%23ctor> overload does.</span></span> <span data-ttu-id="4e599-323">Die Systemuhr verfügt jedoch möglicherweise nicht über genügend Auflösung, um unterschiedliche Aufrufe dieses Konstruktors mit einem anderen Ausgangswert bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="4e599-323">However, the system clock might not have sufficient resolution to provide different invocations of this constructor with a different seed value.</span></span> <span data-ttu-id="4e599-324">Auf der .NET Framework werden dadurch Zufallszahlengeneratoren generiert, die identische Sequenzen von Pseudozufallszahlen generieren, wie von den ersten beiden <xref:System.Random> Objekten im folgenden Beispiel dargestellt.</span><span class="sxs-lookup"><span data-stu-id="4e599-324">On the .NET Framework, this results in random number generators that generate identical sequences of pseudo-random numbers, as illustrated by the first two <xref:System.Random> objects in the following example.</span></span> <span data-ttu-id="4e599-325">Um dies zu verhindern, wenden Sie einen Algorithmus an, um den Ausgangswert in jedem Aufruf zu unterscheiden, oder aufrufen Sie die <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType>-Methode, um sicherzustellen, dass Sie jeden Konstruktor mit einem anderen Ausgangswert bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="4e599-325">To prevent this, apply an algorithm to differentiate the seed value in each invocation, or call the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method to ensure that you provide each constructor with a different seed value.</span></span>  
  
 [!code-csharp[System.Random.Ctor#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Ctor/CS/ctor4.cs#4)]
 [!code-vb[System.Random.Ctor#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Ctor/VB/ctor4.vb#4)]  
  
 <span data-ttu-id="4e599-326">Eine andere Möglichkeit besteht darin, ein einzelnes <xref:System.Random> Objekt zu instanziieren, mit dem Sie alle Zufallszahlen in der Anwendung generieren.</span><span class="sxs-lookup"><span data-stu-id="4e599-326">Another option is to instantiate a single <xref:System.Random> object that you use to generate all the random numbers in your application.</span></span> <span data-ttu-id="4e599-327">Dies ergibt eine etwas bessere Leistung, da die Instanziierung eines Zufallszahlengenerators recht teuer ist.</span><span class="sxs-lookup"><span data-stu-id="4e599-327">This yields slightly better performance, since instantiating a random number generator is fairly expensive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4e599-328">Im folgenden Beispiel werden <xref:System.Random>-Objekte mit dem-Klassenkonstruktor erstellt, der einen Seed-Parameter annimmt und eine Sequenz von zufälligen Ganzzahlen und Double-Werten generiert.</span><span class="sxs-lookup"><span data-stu-id="4e599-328">The following example creates <xref:System.Random> objects with the class constructor that takes a seed parameter and generates a sequence of random integers and doubles.</span></span> <span data-ttu-id="4e599-329">Das Beispiel veranschaulicht, dass dieselbe Sequenz generiert wird, wenn das <xref:System.Random>-Objekt mit dem Konstruktor und dem Seed-Parameter erneut erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="4e599-329">The example illustrates that the same sequence is generated when the <xref:System.Random> object is created again with the constructor and seed parameter.</span></span>  
  
 [!code-cpp[System.Random.Ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Ctor/CPP/ctor.cpp#1)]
 [!code-csharp[System.Random.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Ctor/CS/ctor.cs#1)]
 [!code-vb[System.Random.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Ctor/VB/ctor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Next">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4e599-330">Gibt eine Zufallsganzzahl zurück.</span><span class="sxs-lookup"><span data-stu-id="4e599-330">Returns a random integer.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public virtual int Next ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Next() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.Next" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Next () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Next();" />
      <MemberSignature Language="F#" Value="abstract member Next : unit -&gt; int&#xA;override this.Next : unit -&gt; int" Usage="random.Next " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4e599-331">Gibt eine nicht negative Zufallsganzzahl zurück.</span><span class="sxs-lookup"><span data-stu-id="4e599-331">Returns a non-negative random integer.</span></span></summary>
        <returns><span data-ttu-id="4e599-332">Eine ganze 32-Bit-Zahl mit Vorzeichen, die größer oder gleich 0 (null) und kleiner als <see cref="F:System.Int32.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="4e599-332">A 32-bit signed integer that is greater than or equal to 0 and less than <see cref="F:System.Int32.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e599-333"><xref:System.Random.Next%2A?displayProperty=nameWithType> generiert eine Zufallszahl, deren Wert zwischen 0 und kleiner als <xref:System.Int32.MaxValue?displayProperty=nameWithType>liegt.</span><span class="sxs-lookup"><span data-stu-id="4e599-333"><xref:System.Random.Next%2A?displayProperty=nameWithType> generates a random number whose value ranges from 0 to less than <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4e599-334">Verwenden Sie die <xref:System.Random.Next%28System.Int32%29?displayProperty=nameWithType>-Methoden Überladung, um eine Zufallszahl zu generieren, deren Wert zwischen 0 und einer anderen positiven Zahl liegt.</span><span class="sxs-lookup"><span data-stu-id="4e599-334">To generate a random number whose value ranges from 0 to some other positive number, use the <xref:System.Random.Next%28System.Int32%29?displayProperty=nameWithType> method overload.</span></span> <span data-ttu-id="4e599-335">Um eine Zufallszahl in einem anderen Bereich zu generieren, verwenden Sie die <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType>-Methoden Überladung.</span><span class="sxs-lookup"><span data-stu-id="4e599-335">To generate a random number within a different range, use the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4e599-336">Im folgenden Beispiel werden wiederholte Aufrufe der <xref:System.Random.Next%2A>-Methode durchführen, um eine bestimmte Anzahl von Zufallszahlen zu generieren, die vom Benutzer angefordert werden.</span><span class="sxs-lookup"><span data-stu-id="4e599-336">The following example makes repeated calls to the <xref:System.Random.Next%2A> method to generate a specific number of random numbers requested by the user.</span></span> <span data-ttu-id="4e599-337">Die <xref:System.Console.ReadLine%2A?displayProperty=nameWithType>-Methode wird zum erhalten von Kundeneingaben verwendet.</span><span class="sxs-lookup"><span data-stu-id="4e599-337">The <xref:System.Console.ReadLine%2A?displayProperty=nameWithType> method is used to get customer input.</span></span>  
  
 [!code-cpp[System.Random.Next#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Next/CPP/next3.cpp#5)]
 [!code-csharp[System.Random.Next#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Next/CS/next3.cs#5)]
 [!code-vb[System.Random.Next#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Next/VB/next3.vb#5)]  
  
 <span data-ttu-id="4e599-338">Im folgenden Beispiel wird eine Klasse von <xref:System.Random> abgeleitet, um eine Sequenz von Zufallszahlen zu generieren, deren Verteilung von der durch die <xref:System.Random.Sample%2A>-Methode der Basisklasse generierten Verteilung abweicht.</span><span class="sxs-lookup"><span data-stu-id="4e599-338">The following example derives a class from <xref:System.Random> to generate a sequence of random numbers whose distribution differs from the uniform distribution generated by the <xref:System.Random.Sample%2A> method of the base class.</span></span> <span data-ttu-id="4e599-339">Er überschreibt die <xref:System.Random.Sample%2A>-Methode, um die Verteilung von Zufallszahlen bereitzustellen, und überschreibt die <xref:System.Random.Next%2A?displayProperty=nameWithType>-Methode, um eine Reihe von Zufallszahlen zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="4e599-339">It overrides the <xref:System.Random.Sample%2A> method to provide the distribution of random numbers, and overrides the <xref:System.Random.Next%2A?displayProperty=nameWithType> method to use series of random numbers.</span></span>  
  
 [!code-cpp[System.Random.Sample#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Sample/cpp/sampleex.cpp#1)]
 [!code-csharp[System.Random.Sample#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Sample/CS/sample.cs#1)]
 [!code-vb[System.Random.Sample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Sample/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="4e599-340">Beginnend mit der .NET Framework Version 2,0, wenn Sie eine Klasse von <see cref="T:System.Random" /> ableiten und die <see cref="M:System.Random.Sample" />-Methode überschreiben, wird die Distribution, die von der Implementierung der abgeleiteten Klasse der <see cref="M:System.Random.Sample" />-Methode bereitgestellt wird, nicht in Aufrufen der Basisklassen Implementierung der <see cref="M:System.Random.Next" />-Methode verwendet.</span><span class="sxs-lookup"><span data-stu-id="4e599-340">Starting with the .NET Framework version 2.0, if you derive a class from <see cref="T:System.Random" /> and override the <see cref="M:System.Random.Sample" /> method, the distribution provided by the derived class implementation of the <see cref="M:System.Random.Sample" /> method is not used in calls to the base class implementation of the <see cref="M:System.Random.Next" /> method.</span></span> <span data-ttu-id="4e599-341">Stattdessen wird die von der Basis <see cref="T:System.Random" />-Klasse zurückgegebene einheitliche Verteilung verwendet.</span><span class="sxs-lookup"><span data-stu-id="4e599-341">Instead, the uniform distribution returned by the base <see cref="T:System.Random" /> class is used.</span></span> <span data-ttu-id="4e599-342">Dieses Verhalten verbessert die Gesamtleistung der <see cref="T:System.Random" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="4e599-342">This behavior improves the overall performance of the <see cref="T:System.Random" /> class.</span></span> <span data-ttu-id="4e599-343">Wenn Sie dieses Verhalten ändern möchten, um die <see cref="M:System.Random.Sample" />-Methode in der abgeleiteten Klasse aufzurufen, müssen Sie auch die <see cref="M:System.Random.Next" />-Methode überschreiben.</span><span class="sxs-lookup"><span data-stu-id="4e599-343">To modify this behavior to call the <see cref="M:System.Random.Sample" /> method in the derived class, you must also override the <see cref="M:System.Random.Next" /> method.</span></span></para></block>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public virtual int Next (int maxValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Next(int32 maxValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.Next(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Next (maxValue As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Next(int maxValue);" />
      <MemberSignature Language="F#" Value="abstract member Next : int -&gt; int&#xA;override this.Next : int -&gt; int" Usage="random.Next maxValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxValue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="maxValue"><span data-ttu-id="4e599-344">Die exklusive obere Grenze der Zufallszahl, die generiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e599-344">The exclusive upper bound of the random number to be generated.</span></span> <span data-ttu-id="4e599-345"><paramref name="maxValue" /> muss größer oder gleich 0 sein.</span><span class="sxs-lookup"><span data-stu-id="4e599-345"><paramref name="maxValue" /> must be greater than or equal to 0.</span></span></param>
        <summary><span data-ttu-id="4e599-346">Gibt eine nicht negative Zufallsganzzahl zurück, die kleiner als das angegebene Maximum ist.</span><span class="sxs-lookup"><span data-stu-id="4e599-346">Returns a non-negative random integer that is less than the specified maximum.</span></span></summary>
        <returns><span data-ttu-id="4e599-347">Eine ganze 32-Bit-Zahl mit Vorzeichen, die größer oder gleich 0 (null) und kleiner als <paramref name="maxValue" /> ist, d.h., der Bereich der Rückgabewerte umfasst in der Regel 0 (null), aber nicht <paramref name="maxValue" />.</span><span class="sxs-lookup"><span data-stu-id="4e599-347">A 32-bit signed integer that is greater than or equal to 0, and less than <paramref name="maxValue" />; that is, the range of return values ordinarily includes 0 but not <paramref name="maxValue" />.</span></span> <span data-ttu-id="4e599-348">Wenn jedoch <paramref name="maxValue" /> 0 (null) entspricht, wird <paramref name="maxValue" /> zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="4e599-348">However, if <paramref name="maxValue" /> equals 0, <paramref name="maxValue" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e599-349">Die <xref:System.Random.Next%28System.Int32%29> Überladung gibt ganzzahlige ganzzahlige Werte zurück, die zwischen 0 und `maxValue`-1 liegen.</span><span class="sxs-lookup"><span data-stu-id="4e599-349">The <xref:System.Random.Next%28System.Int32%29> overload returns random integers that range from 0 to `maxValue` - 1.</span></span> <span data-ttu-id="4e599-350">Wenn `maxValue` jedoch 0 ist, gibt die Methode 0 zurück.</span><span class="sxs-lookup"><span data-stu-id="4e599-350">However, if `maxValue` is 0, the method returns 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4e599-351">Im folgenden Beispiel werden ganzzahlige Ganzzahlen mit verschiedenen über Ladungen der <xref:System.Random.Next%2A>-Methode generiert.</span><span class="sxs-lookup"><span data-stu-id="4e599-351">The following example generates random integers with various overloads of the <xref:System.Random.Next%2A> method.</span></span>  

 [!code-cpp[System.Random.Next#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Next/CPP/next.cpp#1)]
 [!code-csharp-interactive[System.Random.Next#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Next/CS/next.cs#1)]
 [!code-vb[System.Random.Next#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Next/VB/next.vb#1)]  
  
 <span data-ttu-id="4e599-352">Im folgenden Beispiel wird eine zufällige ganze Zahl generiert, die als Index zum Abrufen eines Zeichen folgen Werts aus einem Array verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="4e599-352">The following example generates a random integer that it uses as an index to retrieve a string value from an array.</span></span> <span data-ttu-id="4e599-353">Da der höchste Index des Arrays kleiner als seine Länge ist, wird der Wert der <xref:System.Array.Length%2A?displayProperty=nameWithType>-Eigenschaft als `maxValue` Parameter bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="4e599-353">Because the highest index of the array is one less than its length, the value of the <xref:System.Array.Length%2A?displayProperty=nameWithType> property is supplied as a the `maxValue` parameter.</span></span>  
  
 [!code-cpp[System.Random.Next#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Next/CPP/next1.cpp#3)]
 [!code-csharp-interactive[System.Random.Next#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Next/CS/next1.cs#3)]
 [!code-vb[System.Random.Next#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Next/VB/next1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4e599-354"><paramref name="maxValue" /> ist kleiner als 0.</span><span class="sxs-lookup"><span data-stu-id="4e599-354"><paramref name="maxValue" /> is less than 0.</span></span></exception>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public virtual int Next (int minValue, int maxValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Next(int32 minValue, int32 maxValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.Next(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Next (minValue As Integer, maxValue As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Next(int minValue, int maxValue);" />
      <MemberSignature Language="F#" Value="abstract member Next : int * int -&gt; int&#xA;override this.Next : int * int -&gt; int" Usage="random.Next (minValue, maxValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minValue" Type="System.Int32" />
        <Parameter Name="maxValue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minValue"><span data-ttu-id="4e599-355">Die inklusive untere Grenze der zurückgegebenen Zufallszahl.</span><span class="sxs-lookup"><span data-stu-id="4e599-355">The inclusive lower bound of the random number returned.</span></span></param>
        <param name="maxValue"><span data-ttu-id="4e599-356">Die exklusive obere Grenze der zurückgegebenen Zufallszahl.</span><span class="sxs-lookup"><span data-stu-id="4e599-356">The exclusive upper bound of the random number returned.</span></span> <span data-ttu-id="4e599-357"><paramref name="maxValue" /> muss größer oder gleich <paramref name="minValue" /> sein.</span><span class="sxs-lookup"><span data-stu-id="4e599-357"><paramref name="maxValue" /> must be greater than or equal to <paramref name="minValue" />.</span></span></param>
        <summary><span data-ttu-id="4e599-358">Gibt eine zufällige ganze Zahl zurück, die in einem angegebenen Bereich liegt.</span><span class="sxs-lookup"><span data-stu-id="4e599-358">Returns a random integer that is within a specified range.</span></span></summary>
        <returns><span data-ttu-id="4e599-359">Eine 32-Bit-Ganzzahl mit Vorzeichen, die größer oder gleich <paramref name="minValue" /> und kleiner als <paramref name="maxValue" /> ist, d. h., der Bereich der Rückgabewerte umfasst <paramref name="minValue" />, aber nicht <paramref name="maxValue" />.</span><span class="sxs-lookup"><span data-stu-id="4e599-359">A 32-bit signed integer greater than or equal to <paramref name="minValue" /> and less than <paramref name="maxValue" />; that is, the range of return values includes <paramref name="minValue" /> but not <paramref name="maxValue" />.</span></span> <span data-ttu-id="4e599-360">Wenn <paramref name="minValue" /> gleich <paramref name="maxValue" /> ist, wird <paramref name="minValue" /> zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="4e599-360">If <paramref name="minValue" /> equals <paramref name="maxValue" />, <paramref name="minValue" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e599-361">Die <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> Überladung gibt ganzzahlige ganzzahlige Werte zurück, die von `minValue` bis `maxValue`-1 reichen.</span><span class="sxs-lookup"><span data-stu-id="4e599-361">The <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> overload returns random integers that range from `minValue` to `maxValue` - 1.</span></span> <span data-ttu-id="4e599-362">Wenn `maxValue` jedoch `minValue`ist, gibt die Methode `minValue`zurück.</span><span class="sxs-lookup"><span data-stu-id="4e599-362">However, if `maxValue` equals `minValue`, the method returns `minValue`.</span></span>  
  
 <span data-ttu-id="4e599-363">Im Gegensatz zu den anderen über Ladungen der <xref:System.Random.Next%2A>-Methode, die nur nicht negative Werte zurückgeben, kann diese Methode eine negative Zufalls Ganzzahl zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="4e599-363">Unlike the other overloads of the <xref:System.Random.Next%2A> method, which return only non-negative values, this method can return a negative random integer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4e599-364">Im folgenden Beispiel wird die <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType>-Methode verwendet, um zufällige ganze Zahlen mit drei unterschiedlichen Bereichen zu generieren.</span><span class="sxs-lookup"><span data-stu-id="4e599-364">The following example uses the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method to generate random integers with three distinct ranges.</span></span> <span data-ttu-id="4e599-365">Beachten Sie, dass die genaue Ausgabe aus dem Beispiel vom vom System bereitgestellten Ausgangswert abhängig ist, der an den <xref:System.Random>-Klassenkonstruktor übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="4e599-365">Note that the exact output from the example depends on the system-supplied seed value passed to the <xref:System.Random> class constructor.</span></span>  
  
 [!code-cpp[System.Random.Next#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Next/CPP/next2.cpp#2)]
 [!code-csharp-interactive[System.Random.Next#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Next/CS/Next2.cs#2)]
 [!code-vb[System.Random.Next#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Next/VB/next2.vb#2)]  
  
 <span data-ttu-id="4e599-366">Im folgenden Beispiel wird eine zufällige ganze Zahl generiert, die als Index zum Abrufen eines Zeichen folgen Werts aus einem Array verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="4e599-366">The following example generates a random integer that it uses as an index to retrieve a string value from an array.</span></span> <span data-ttu-id="4e599-367">Da der höchste Index des Arrays kleiner als seine Länge ist, wird der Wert der <xref:System.Array.Length%2A?displayProperty=nameWithType>-Eigenschaft als `maxValue` Parameter bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="4e599-367">Because the highest index of the array is one less than its length, the value of the <xref:System.Array.Length%2A?displayProperty=nameWithType> property is supplied as a the `maxValue` parameter.</span></span>  
  
 [!code-cpp[System.Random.Next#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Next/CPP/next4.cpp#4)]
 [!code-csharp-interactive[System.Random.Next#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Next/CS/next4.cs#4)]
 [!code-vb[System.Random.Next#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Next/VB/next4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4e599-368"><paramref name="minValue" /> ist größer als <paramref name="maxValue" />.</span><span class="sxs-lookup"><span data-stu-id="4e599-368"><paramref name="minValue" /> is greater than <paramref name="maxValue" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="4e599-369">Beginnend mit der .NET Framework Version 2,0, wenn Sie eine Klasse von <see cref="T:System.Random" /> ableiten und die <see cref="M:System.Random.Sample" />-Methode überschreiben, wird die Distribution, die von der Implementierung der abgeleiteten Klasse der <see cref="M:System.Random.Sample" />-Methode bereitgestellt wird, nicht in Aufrufen der Basisklassen Implementierung der <see cref="M:System.Random.Next(System.Int32,System.Int32)" />-Methoden Überladung verwendet, wenn der Unterschied zwischen den <paramref name="minValue" />-und <paramref name="maxValue" />-Parametern größer als <see cref="F:System.Int32.MaxValue" />ist.</span><span class="sxs-lookup"><span data-stu-id="4e599-369">Starting with the .NET Framework version 2.0, if you derive a class from <see cref="T:System.Random" /> and override the <see cref="M:System.Random.Sample" /> method, the distribution provided by the derived class implementation of the <see cref="M:System.Random.Sample" /> method is not used in calls to the base class implementation of the <see cref="M:System.Random.Next(System.Int32,System.Int32)" /> method overload if the difference between the <paramref name="minValue" /> and <paramref name="maxValue" /> parameters is greater than <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="4e599-370">Stattdessen wird die von der Basis <see cref="T:System.Random" />-Klasse zurückgegebene einheitliche Verteilung verwendet.</span><span class="sxs-lookup"><span data-stu-id="4e599-370">Instead, the uniform distribution returned by the base <see cref="T:System.Random" /> class is used.</span></span> <span data-ttu-id="4e599-371">Dieses Verhalten verbessert die Gesamtleistung der <see cref="T:System.Random" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="4e599-371">This behavior improves the overall performance of the <see cref="T:System.Random" /> class.</span></span> <span data-ttu-id="4e599-372">Wenn Sie dieses Verhalten ändern möchten, um die <see cref="M:System.Random.Sample" />-Methode in der abgeleiteten Klasse aufzurufen, müssen Sie auch die <see cref="M:System.Random.Next(System.Int32,System.Int32)" />-Methoden Überladung überschreiben.</span><span class="sxs-lookup"><span data-stu-id="4e599-372">To modify this behavior to call the <see cref="M:System.Random.Sample" /> method in the derived class, you must also override the <see cref="M:System.Random.Next(System.Int32,System.Int32)" /> method overload.</span></span></para></block>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="NextBytes">
      <MemberSignature Language="C#" Value="public virtual void NextBytes (byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NextBytes(unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.NextBytes(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub NextBytes (buffer As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void NextBytes(cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="abstract member NextBytes : byte[] -&gt; unit&#xA;override this.NextBytes : byte[] -&gt; unit" Usage="random.NextBytes buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="4e599-373">Das Array, das mit zufälligen Zahlen aufgefüllt wird.</span><span class="sxs-lookup"><span data-stu-id="4e599-373">The array to be filled with random numbers.</span></span></param>
        <summary><span data-ttu-id="4e599-374">Füllt die Elemente eines angegebenen Bytearrays mit Zufallszahlen.</span><span class="sxs-lookup"><span data-stu-id="4e599-374">Fills the elements of a specified array of bytes with random numbers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e599-375">Jedes Element des Bytearrays wird auf eine Zufallszahl größer oder gleich 0 (null) und kleiner oder gleich <xref:System.Byte.MaxValue>festgelegt.</span><span class="sxs-lookup"><span data-stu-id="4e599-375">Each element of the array of bytes is set to a random number greater than or equal to 0, and less than or equal to <xref:System.Byte.MaxValue>.</span></span>  
  
 <span data-ttu-id="4e599-376">Um beispielsweise eine kryptografisch gesicherte Zufallszahl zu generieren, die zum Erstellen eines zufälligen Kennworts geeignet ist, verwenden Sie eine Methode wie z. b. <xref:System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4e599-376">For example, to generate a cryptographically secured random number suitable for creating a random password, use a method such as <xref:System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples

 <span data-ttu-id="4e599-377">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Random.NextBytes%2A>-Methode verwendet wird, um ein Bytearray mit zufälligen Byte Werten zu füllen.</span><span class="sxs-lookup"><span data-stu-id="4e599-377">The following example demonstrates how to use the <xref:System.Random.NextBytes%2A> method to fill an array of bytes with random byte values.</span></span>  
 
 [!code-cpp[Classic Random.NextBytes Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Random.NextBytes Example/CPP/source.cpp#1)]
 [!code-csharp-interactive[Classic Random.NextBytes Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Random.NextBytes Example/CS/source.cs#1)]
 [!code-vb[Classic Random.NextBytes Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Random.NextBytes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4e599-378"><paramref name="buffer" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4e599-378"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="4e599-379">Beginnend mit der .NET Framework Version 2,0, wenn Sie eine Klasse von <see cref="T:System.Random" /> ableiten und die <see cref="M:System.Random.Sample" />-Methode überschreiben, wird die Distribution, die von der Implementierung der abgeleiteten Klasse der <see cref="M:System.Random.Sample" />-Methode bereitgestellt wird, nicht in Aufrufen der Basisklassen Implementierung der <see cref="M:System.Random.NextBytes(System.Byte[])" />-Methode verwendet.</span><span class="sxs-lookup"><span data-stu-id="4e599-379">Starting with the .NET Framework version 2.0, if you derive a class from <see cref="T:System.Random" /> and override the <see cref="M:System.Random.Sample" /> method, the distribution provided by the derived class implementation of the <see cref="M:System.Random.Sample" /> method is not used in calls to the base class implementation of the <see cref="M:System.Random.NextBytes(System.Byte[])" /> method.</span></span> <span data-ttu-id="4e599-380">Stattdessen wird die von der Basis <see cref="T:System.Random" />-Klasse zurückgegebene einheitliche Verteilung verwendet.</span><span class="sxs-lookup"><span data-stu-id="4e599-380">Instead, the uniform distribution returned by the base <see cref="T:System.Random" /> class is used.</span></span> <span data-ttu-id="4e599-381">Dieses Verhalten verbessert die Gesamtleistung der <see cref="T:System.Random" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="4e599-381">This behavior improves the overall performance of the <see cref="T:System.Random" /> class.</span></span> <span data-ttu-id="4e599-382">Wenn Sie dieses Verhalten ändern möchten, um die <see cref="M:System.Random.Sample" />-Methode in der abgeleiteten Klasse aufzurufen, müssen Sie auch die <see cref="M:System.Random.NextBytes(System.Byte[])" />-Methode überschreiben.</span><span class="sxs-lookup"><span data-stu-id="4e599-382">To modify this behavior to call the <see cref="M:System.Random.Sample" /> method in the derived class, you must also override the <see cref="M:System.Random.NextBytes(System.Byte[])" /> method.</span></span></para></block>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="NextBytes">
      <MemberSignature Language="C#" Value="public virtual void NextBytes (Span&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NextBytes(valuetype System.Span`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.NextBytes(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub NextBytes (buffer As Span(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void NextBytes(Span&lt;System::Byte&gt; buffer);" />
      <MemberSignature Language="F#" Value="abstract member NextBytes : Span&lt;byte&gt; -&gt; unit&#xA;override this.NextBytes : Span&lt;byte&gt; -&gt; unit" Usage="random.NextBytes buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="4e599-383">Das Array, das mit zufälligen Zahlen aufgefüllt wird.</span><span class="sxs-lookup"><span data-stu-id="4e599-383">The array to be filled with random numbers.</span></span></param>
        <summary><span data-ttu-id="4e599-384">Füllt die Elemente einer festgelegten Bytespanne mit zufälligen Zahlen.</span><span class="sxs-lookup"><span data-stu-id="4e599-384">Fills the elements of a specified span of bytes with random numbers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="4e599-385">Jedes Element der Byte Spanne wird auf eine Zufallszahl festgelegt, die größer oder gleich 0 und kleiner als oder gleich <xref:System.Byte.MaxValue>ist.</span><span class="sxs-lookup"><span data-stu-id="4e599-385">Each element of the span of bytes is set to a random number greater than or equal to 0 and less than or equal to <xref:System.Byte.MaxValue>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextDouble">
      <MemberSignature Language="C#" Value="public virtual double NextDouble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 NextDouble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.NextDouble" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function NextDouble () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual double NextDouble();" />
      <MemberSignature Language="F#" Value="abstract member NextDouble : unit -&gt; double&#xA;override this.NextDouble : unit -&gt; double" Usage="random.NextDouble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4e599-386">Gibt eine zufällige Gleitkommazahl zurück, die größer oder gleich 0,0 und kleiner als 1,0 ist.</span><span class="sxs-lookup"><span data-stu-id="4e599-386">Returns a random floating-point number that is greater than or equal to 0.0, and less than 1.0.</span></span></summary>
        <returns><span data-ttu-id="4e599-387">Eine Gleitkommazahl mit doppelter Genauigkeit, die größer oder gleich 0,0 und kleiner als 1,0 ist.</span><span class="sxs-lookup"><span data-stu-id="4e599-387">A double-precision floating point number that is greater than or equal to 0.0, and less than 1.0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e599-388">Die tatsächliche obere Grenze der Zufallszahl, die von dieser Methode zurückgegeben wird, ist 0.99999999999999978.</span><span class="sxs-lookup"><span data-stu-id="4e599-388">The actual upper bound of the random number returned by this method is 0.99999999999999978.</span></span>  
  
 <span data-ttu-id="4e599-389">Informationen zum Abrufen von zufälligen Gleit Komma Werten in einem anderen Bereich als 0,0 und 1,0 finden Sie im Abschnitt "Abrufen von Gleit Komma Werten in einem angegebenen Bereich" des Themas <xref:System.Random>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="4e599-389">To retrieve random floating-point values within a range other than 0.0 and 1.0, see the "Retrieve floating-point values in a specified range" section of the <xref:System.Random> class topic.</span></span>  
  
 <span data-ttu-id="4e599-390">Bei dieser Methode handelt es sich um die öffentliche Version der geschützten Methode, <xref:System.Random.Sample%2A>.</span><span class="sxs-lookup"><span data-stu-id="4e599-390">This method is the public version of the protected method, <xref:System.Random.Sample%2A>.</span></span>  
  
   
  
## Examples  

 <span data-ttu-id="4e599-391">Im folgenden Beispiel wird die <xref:System.Random.NextDouble%2A>-Methode verwendet, um Sequenzen zufälliger Double-Werte zu generieren.</span><span class="sxs-lookup"><span data-stu-id="4e599-391">The following example uses the <xref:System.Random.NextDouble%2A> method to generate sequences of random doubles.</span></span>  
  
 [!code-cpp[System.Random.Ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Ctor/CPP/ctor.cpp#1)]
 [!code-csharp[System.Random.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Ctor/CS/ctor.cs#1)]
 [!code-vb[System.Random.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Ctor/VB/ctor.vb#1)]  
  
 <span data-ttu-id="4e599-392">Im folgenden Beispiel wird die <xref:System.Random.NextDouble%2A>-Methode aufgerufen, um 100 Zufallszahlen zu generieren und deren Häufigkeitsverteilung anzeigt.</span><span class="sxs-lookup"><span data-stu-id="4e599-392">The following example calls the <xref:System.Random.NextDouble%2A> method to generate 100 random numbers and displays their frequency distribution.</span></span>  
  
 [!code-csharp-interactive[System.Random.NextDouble#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.random.nextdouble/cs/nextdouble1.cs#2)]
 [!code-vb[System.Random.NextDouble#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.random.nextdouble/vb/nextdouble1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sample">
      <MemberSignature Language="C#" Value="protected virtual double Sample ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance float64 Sample() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.Sample" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Sample () As Double" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual double Sample();" />
      <MemberSignature Language="F#" Value="abstract member Sample : unit -&gt; double&#xA;override this.Sample : unit -&gt; double" Usage="random.Sample " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4e599-393">Gibt eine zufällige Gleitkommazahl zwischen 0,0 und 1,0 zurück.</span><span class="sxs-lookup"><span data-stu-id="4e599-393">Returns a random floating-point number between 0.0 and 1.0.</span></span></summary>
        <returns><span data-ttu-id="4e599-394">Eine Gleitkommazahl mit doppelter Genauigkeit, die größer oder gleich 0,0 und kleiner als 1,0 ist.</span><span class="sxs-lookup"><span data-stu-id="4e599-394">A double-precision floating point number that is greater than or equal to 0.0, and less than 1.0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e599-395">Leiten Sie eine Klasse von der <xref:System.Random>-Klasse ab, und überschreiben Sie die <xref:System.Random.Sample%2A>-Methode, um eine andere Zufallsverteilung oder ein anderes Zufallszahlengenerator-Prinzip zu generieren.</span><span class="sxs-lookup"><span data-stu-id="4e599-395">To produce a different random distribution or a different random number generator principle, derive a class from the <xref:System.Random> class and override the <xref:System.Random.Sample%2A> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4e599-396">Die <xref:System.Random.Sample%2A>-Methode ist `protected`. Dies bedeutet, dass auf Sie nur innerhalb der <xref:System.Random>-Klasse und ihrer abgeleiteten Klassen zugegriffen werden kann.</span><span class="sxs-lookup"><span data-stu-id="4e599-396">The <xref:System.Random.Sample%2A> method is `protected`, which means that it is accessible only within the <xref:System.Random> class and its derived classes.</span></span> <span data-ttu-id="4e599-397">Um eine Zufallszahl zwischen 0 und 1 aus einer <xref:System.Random> Instanz zu generieren, rufen Sie die <xref:System.Random.NextDouble%2A>-Methode auf.</span><span class="sxs-lookup"><span data-stu-id="4e599-397">To generate a random number between 0 and 1 from a <xref:System.Random> instance, call the <xref:System.Random.NextDouble%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4e599-398">Im folgenden Beispiel wird eine Klasse von <xref:System.Random> abgeleitet und die <xref:System.Random.Sample%2A>-Methode überschrieben, um eine Verteilung von Zufallszahlen zu generieren.</span><span class="sxs-lookup"><span data-stu-id="4e599-398">The following example derives a class from <xref:System.Random> and overrides the <xref:System.Random.Sample%2A> method to generate a distribution of random numbers.</span></span> <span data-ttu-id="4e599-399">Diese Verteilung unterscheidet sich von der durch die <xref:System.Random.Sample%2A>-Methode der Basisklasse generierten einheitlichen Verteilung.</span><span class="sxs-lookup"><span data-stu-id="4e599-399">This distribution is different than the uniform distribution generated by the <xref:System.Random.Sample%2A> method of the base class.</span></span>  
  
 [!code-cpp[System.Random.Sample#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Sample/cpp/sampleex.cpp#1)]
 [!code-csharp[System.Random.Sample#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Sample/CS/sample.cs#1)]
 [!code-vb[System.Random.Sample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Sample/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="4e599-400">Beginnend mit der .NET Framework Version 2,0, wenn Sie eine Klasse von <see cref="T:System.Random" /> ableiten und die <see cref="M:System.Random.Sample" />-Methode überschreiben, wird die Distribution, die von der Implementierung der abgeleiteten Klasse der <see cref="M:System.Random.Sample" />-Methode bereitgestellt wird, nicht in Aufrufen der Basisklassen Implementierung der folgenden Methoden verwendet:</span><span class="sxs-lookup"><span data-stu-id="4e599-400">Starting with the .NET Framework version 2.0, if you derive a class from <see cref="T:System.Random" /> and override the <see cref="M:System.Random.Sample" /> method, the distribution provided by the derived class implementation of the <see cref="M:System.Random.Sample" /> method is not used in calls to the base class implementation of the following methods:</span></span> 
<span data-ttu-id="4e599-401">–   Die <see cref="M:System.Random.NextBytes(System.Byte[])" />-Methode.</span><span class="sxs-lookup"><span data-stu-id="4e599-401">-   The <see cref="M:System.Random.NextBytes(System.Byte[])" /> method.</span></span>  
  
<span data-ttu-id="4e599-402">–   Die <see cref="M:System.Random.Next" />-Methode.</span><span class="sxs-lookup"><span data-stu-id="4e599-402">-   The <see cref="M:System.Random.Next" /> method.</span></span>  
  
<span data-ttu-id="4e599-403">-Die <see cref="M:System.Random.Next(System.Int32,System.Int32)" /> Methode, wenn (<paramref name="maxValue" /> - <paramref name="minValue" />) größer als <see cref="F:System.Int32.MaxValue" />ist.</span><span class="sxs-lookup"><span data-stu-id="4e599-403">-   The <see cref="M:System.Random.Next(System.Int32,System.Int32)" /> method, if (<paramref name="maxValue" /> - <paramref name="minValue" />) is greater than <see cref="F:System.Int32.MaxValue" />.</span></span>  
  
<span data-ttu-id="4e599-404">Stattdessen wird die von der Basis <see cref="T:System.Random" /> Klasse bereitgestellte einheitliche Verteilung verwendet.</span><span class="sxs-lookup"><span data-stu-id="4e599-404">Instead, the uniform distribution provided by the base <see cref="T:System.Random" /> class is used.</span></span> <span data-ttu-id="4e599-405">Dieses Verhalten verbessert die Gesamtleistung der <see cref="T:System.Random" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="4e599-405">This behavior improves the overall performance of the <see cref="T:System.Random" /> class.</span></span> <span data-ttu-id="4e599-406">Wenn Sie dieses Verhalten ändern möchten, um die Implementierung der <see cref="M:System.Random.Sample" />-Methode in der abgeleiteten Klasse aufzurufen, müssen Sie auch das Verhalten dieser drei Member überschreiben.</span><span class="sxs-lookup"><span data-stu-id="4e599-406">To modify this behavior to call the implementation of the <see cref="M:System.Random.Sample" /> method in the derived class, you must also override the behavior of these three members.</span></span> <span data-ttu-id="4e599-407">Dies wird im Beispiel veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="4e599-407">The example provides an illustration.</span></span></para></block>
        <altmember cref="M:System.Random.NextDouble" />
      </Docs>
    </Member>
  </Members>
</Type>
