<Type Name="Random" FullName="System.Random">
  <TypeSignature Language="C#" Value="public class Random" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Random extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Random" />
  <TypeSignature Language="VB.NET" Value="Public Class Random" />
  <TypeSignature Language="C++ CLI" Value="public ref class Random" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="bafcc-101">Stellt einen Generator für Pseudozufallszahlen dar, d. h. ein Gerät, das eine Zahlenfolge erzeugt, die bestimmte statistische Anforderungen hinsichtlich ihrer Zufälligkeit erfüllt.</span><span class="sxs-lookup"><span data-stu-id="bafcc-101">Represents a pseudo-random number generator, which is a device that produces a sequence of numbers that meet certain statistical requirements for randomness.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bafcc-102">Pseudozufallszahlen werden aus einer endlichen Menge von Zahlen mit gleicher Wahrscheinlichkeit ausgewählt.</span><span class="sxs-lookup"><span data-stu-id="bafcc-102">Pseudo-random numbers are chosen with equal probability from a finite set of numbers.</span></span> <span data-ttu-id="bafcc-103">Die ausgewählten Zahlen sind nicht vollständig zufälligen, da ein mathematisches Algorithmus verwendet wird, um sie auszuwählen, aber sie ausreichend zufällige aus praktischen Gründen sind.</span><span class="sxs-lookup"><span data-stu-id="bafcc-103">The chosen numbers are not completely random because a mathematical algorithm is used to select them, but they are sufficiently random for practical purposes.</span></span> <span data-ttu-id="bafcc-104">Die aktuelle Implementierung von der <xref:System.Random> Klasse basiert auf eine geänderte Version des Donald E. Knuths Subtraktive Algorithmus mit Zufallszahlengenerator.</span><span class="sxs-lookup"><span data-stu-id="bafcc-104">The current implementation of the <xref:System.Random> class is based on a modified version of Donald E. Knuth's subtractive random number generator algorithm.</span></span> <span data-ttu-id="bafcc-105">Weitere Informationen finden Sie unter D. E.</span><span class="sxs-lookup"><span data-stu-id="bafcc-105">For more information, see D. E.</span></span> <span data-ttu-id="bafcc-106">Knuth.</span><span class="sxs-lookup"><span data-stu-id="bafcc-106">Knuth.</span></span> <span data-ttu-id="bafcc-107">*Die Art des Computers Programmierung, Volume 2: Seminumerical Algorithmen*.</span><span class="sxs-lookup"><span data-stu-id="bafcc-107">*The Art of Computer Programming, Volume 2: Seminumerical Algorithms*.</span></span> <span data-ttu-id="bafcc-108">Addison-Wesley, lesen, MA, dritte Edition, 1997.</span><span class="sxs-lookup"><span data-stu-id="bafcc-108">Addison-Wesley, Reading, MA, third edition, 1997.</span></span>  
  
 <span data-ttu-id="bafcc-109">Verwenden Sie eine kryptografisch sichere Zufallszahl, z. B. einen generieren, für das Erstellen eines zufälligen Kennworts entspricht, der <xref:System.Security.Cryptography.RNGCryptoServiceProvider> Klasse oder eine Klasse von <xref:System.Security.Cryptography.RandomNumberGenerator?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="bafcc-109">To generate a cryptographically secure random number, such as one that's suitable for creating a random password, use the <xref:System.Security.Cryptography.RNGCryptoServiceProvider> class or derive a class from <xref:System.Security.Cryptography.RandomNumberGenerator?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="bafcc-110">In diesem Thema:</span><span class="sxs-lookup"><span data-stu-id="bafcc-110">In this topic:</span></span>  
  
 <span data-ttu-id="bafcc-111">[Instanziieren den Zufallszahlen-generator](#Instantiate) </span><span class="sxs-lookup"><span data-stu-id="bafcc-111">[Instantiating the random number generator](#Instantiate) </span></span>  
 <span data-ttu-id="bafcc-112">[Mehrere Instanziierungen vermeiden](#Multiple) </span><span class="sxs-lookup"><span data-stu-id="bafcc-112">[Avoiding multiple instantiations](#Multiple) </span></span>  
 <span data-ttu-id="bafcc-113">[Der System.Random-Klasse und Thread-Sicherheit](#ThreadSafety) </span><span class="sxs-lookup"><span data-stu-id="bafcc-113">[The System.Random class and thread safety](#ThreadSafety) </span></span>  
 <span data-ttu-id="bafcc-114">[Verschiedene Typen von Zufallszahlen generieren](#Functionality) </span><span class="sxs-lookup"><span data-stu-id="bafcc-114">[Generating different types of random numbers](#Functionality) </span></span>  
 <span data-ttu-id="bafcc-115">[Ersetzen einen eigenen Algorithmus](#Overriding) </span><span class="sxs-lookup"><span data-stu-id="bafcc-115">[Substituting your own algorithm](#Overriding) </span></span>  
 <span data-ttu-id="bafcc-116">[Wie werden System.Random, verwendet...](#Operations) </span><span class="sxs-lookup"><span data-stu-id="bafcc-116">[How do you use System.Random to…](#Operations) </span></span>  
 [<span data-ttu-id="bafcc-117">Die gleiche Sequenz von Zufallswerten abrufen</span><span class="sxs-lookup"><span data-stu-id="bafcc-117">Retrieve the same sequence of random values</span></span>](#Same)  
 [<span data-ttu-id="bafcc-118">Eindeutige Sequenzen von Zufallswerten abrufen</span><span class="sxs-lookup"><span data-stu-id="bafcc-118">Retrieve unique sequences of random values</span></span>](#Unique)  
 [<span data-ttu-id="bafcc-119">Abrufen von ganzen Zahlen in einem angegebenen Bereich</span><span class="sxs-lookup"><span data-stu-id="bafcc-119">Retrieve integers in a specified range</span></span>](#Range)  
 [<span data-ttu-id="bafcc-120">Abrufen von ganzen Zahlen mit einer angegebenen Anzahl von Ziffern</span><span class="sxs-lookup"><span data-stu-id="bafcc-120">Retrieve integers with a specified number of digits</span></span>](#Digits)  
 [<span data-ttu-id="bafcc-121">Abrufen von Gleitkommawerten in einem angegebenen Bereich</span><span class="sxs-lookup"><span data-stu-id="bafcc-121">Retrieve floating-point values in a specified range</span></span>](#Floats)  
 [<span data-ttu-id="bafcc-122">Generieren von zufälligen boolesche Werte</span><span class="sxs-lookup"><span data-stu-id="bafcc-122">Generate random Boolean values</span></span>](#Boolean)  
 [<span data-ttu-id="bafcc-123">Generieren von zufälligen 64-Bit-Ganzzahlen</span><span class="sxs-lookup"><span data-stu-id="bafcc-123">Generate random 64-bit integers</span></span>](#Long)  
 [<span data-ttu-id="bafcc-124">Abrufen von Bytes in einem angegebenen Bereich</span><span class="sxs-lookup"><span data-stu-id="bafcc-124">Retrieve bytes in a specified range</span></span>](#Bytes)  
 [<span data-ttu-id="bafcc-125">Nach dem Zufallsprinzip ein Element aus einem Array oder einer Auflistung abrufen</span><span class="sxs-lookup"><span data-stu-id="bafcc-125">Retrieve an element from an array or collection at random</span></span>](#Array)  
 [<span data-ttu-id="bafcc-126">Ein eindeutiges Element aus einem Array oder einer Auflistung abrufen</span><span class="sxs-lookup"><span data-stu-id="bafcc-126">Retrieve a unique element from an array or collection</span></span>](#UniqueArray)  
  
<a name="Instantiate"></a>   
## <a name="instantiating-the-random-number-generator"></a><span data-ttu-id="bafcc-127">Instanziieren den Zufallszahlen-generator</span><span class="sxs-lookup"><span data-stu-id="bafcc-127">Instantiating the random number generator</span></span>  
 <span data-ttu-id="bafcc-128">Zufallszahlen-Generator wird durch Angeben eines Ausgangswert-Werts (ein Startwert für die Generierung Algorithmus Pseudozufallszahlen) instanziieren, um eine <xref:System.Random.%23ctor%2A> Klassenkonstruktor.</span><span class="sxs-lookup"><span data-stu-id="bafcc-128">You instantiate the random number generator by providing a seed value (a starting value for the pseudo-random number generation algorithm) to a <xref:System.Random.%23ctor%2A> class constructor.</span></span>  <span data-ttu-id="bafcc-129">Sie können den Ausgangswert entweder explizit oder implizit angeben:</span><span class="sxs-lookup"><span data-stu-id="bafcc-129">You can supply the seed value either explicitly or implicitly:</span></span>  
  
-   <span data-ttu-id="bafcc-130">Die <xref:System.Random.%23ctor%28System.Int32%29> -Konstruktor verwendet einen explizite Seed-Wert, den Sie angeben.</span><span class="sxs-lookup"><span data-stu-id="bafcc-130">The <xref:System.Random.%23ctor%28System.Int32%29> constructor uses an explicit seed value that you supply.</span></span>  
  
-   <span data-ttu-id="bafcc-131">Die <xref:System.Random.%23ctor> Konstruktor verwendet die Systemuhr einen Ausgangswert angeben.</span><span class="sxs-lookup"><span data-stu-id="bafcc-131">The <xref:System.Random.%23ctor> constructor uses the system clock to provide a seed value.</span></span> <span data-ttu-id="bafcc-132">Dies ist üblicherweise wird bei der Instanziierung des Zufallszahlengenerator.</span><span class="sxs-lookup"><span data-stu-id="bafcc-132">This is the most common way of instantiating the random number generator.</span></span>  
  
 <span data-ttu-id="bafcc-133">Wenn der gleiche Ausgangswert, für Separate verwendet wird <xref:System.Random> Objekte aufweist, werden sie der gleichen Reihe von Zufallszahlen generiert.</span><span class="sxs-lookup"><span data-stu-id="bafcc-133">If the same seed is used for separate <xref:System.Random> objects, they will generate the same series of random numbers.</span></span> <span data-ttu-id="bafcc-134">Dies kann zum Erstellen einer Testsammlung aus, die Zufallswerte verarbeitet oder für die Wiedergabe Spiele, die ihre Daten von Zufallszahlen abgeleitet werden, nützlich sein.</span><span class="sxs-lookup"><span data-stu-id="bafcc-134">This can be useful for creating a test suite that processes random values, or for replaying games that derive their data from random numbers.</span></span> <span data-ttu-id="bafcc-135">Beachten Sie jedoch, dass <xref:System.Random> Objekte in der Prozesse, die unter verschiedenen Versionen von .NET Framework ausgeführt werden. möglicherweise verschiedene Reihen mit Zufallszahlen zurück, selbst wenn sie mit identischen Startwerten instanziiert werden.</span><span class="sxs-lookup"><span data-stu-id="bafcc-135">However, note that <xref:System.Random> objects in processes running under different versions of the .NET Framework may return different series of random numbers even if they're instantiated with identical seed values.</span></span>  
  
 <span data-ttu-id="bafcc-136">Um verschiedene Sequenzen von Zufallszahlen zu erzeugen, möglich den Ausgangswert zeitabhängige, dadurch erzeugt eine andere Serie mit jeder neuen Instanz des <xref:System.Random>.</span><span class="sxs-lookup"><span data-stu-id="bafcc-136">To produce different sequences of random numbers, you can make the seed value time-dependent, thereby producing a different series with each new instance of <xref:System.Random>.</span></span> <span data-ttu-id="bafcc-137">Die parametrisierte <xref:System.Random.%23ctor%28System.Int32%29> Konstruktor akzeptiert ein <xref:System.Int32> Wert basierend auf der Anzahl der Ticks in die aktuelle Uhrzeit, während die parameterlose <xref:System.Random.%23ctor> Konstruktor verwendet die Systemuhr zum Generieren des Startwerts.</span><span class="sxs-lookup"><span data-stu-id="bafcc-137">The parameterized <xref:System.Random.%23ctor%28System.Int32%29> constructor can take an <xref:System.Int32> value based on the number of ticks in the current time, whereas the parameterless <xref:System.Random.%23ctor> constructor uses the system clock to generate its seed value.</span></span> <span data-ttu-id="bafcc-138">Jedoch, da die Uhr endliche Auflösung hat, mithilfe des Konstruktors verschiedenen <xref:System.Random> Objekte schließen nacheinander erstellt random Number-Generatoren, die identische Sequenzen von Zufallszahlen erzeugen.</span><span class="sxs-lookup"><span data-stu-id="bafcc-138">However, because the clock has finite resolution, using the parameterless constructor to create different <xref:System.Random> objects in close succession creates random number generators that produce identical sequences of random numbers.</span></span> <span data-ttu-id="bafcc-139">Im folgende Beispiel wird veranschaulicht, wie zwei <xref:System.Random> Objekte, die in Zufallszahlengeneratoren instanziiert eine identische Folge von zufälligen Zahlen zu generieren.</span><span class="sxs-lookup"><span data-stu-id="bafcc-139">The following example illustrates how two <xref:System.Random> objects that are instantiated in close succession generate an identical series of random numbers.</span></span> <span data-ttu-id="bafcc-140">In den meisten Windows-Systemen <xref:System.Random> innerhalb von 15 Millisekunden voneinander erstellten Objekte werden wahrscheinlich identische Ausgangswerte haben.</span><span class="sxs-lookup"><span data-stu-id="bafcc-140">On most Windows systems, <xref:System.Random> objects created within 15 milliseconds of one another are likely to have identical seed values.</span></span>  
  
 [!code-cpp[System.Random#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/random1.cpp#1)]
 [!code-csharp[System.Random#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/Random1.cs#1)]
 [!code-vb[System.Random#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/Random1.vb#1)]  
  
 <span data-ttu-id="bafcc-141">Um dieses Problem zu vermeiden, erstellen Sie eine einzelne <xref:System.Random> Objekt anstelle mehrerer Objekte.</span><span class="sxs-lookup"><span data-stu-id="bafcc-141">To avoid this problem, create a single <xref:System.Random> object instead of multiple objects.</span></span>  
  
<a name="Multiple"></a>   
## <a name="avoiding-multiple-instantiations"></a><span data-ttu-id="bafcc-142">Mehrere Instanziierungen vermeiden</span><span class="sxs-lookup"><span data-stu-id="bafcc-142">Avoiding multiple instantiations</span></span>  
 <span data-ttu-id="bafcc-143">Initialisieren von zwei random Number-Generatoren in einer dichten Schleife oder in schneller Folge erstellt zwei random Number-Generatoren, die identische Sequenzen von Zufallszahlen generieren können.</span><span class="sxs-lookup"><span data-stu-id="bafcc-143">Initializing two random number generators in a tight loop or in rapid succession creates two random number generators that can produce identical sequences of random numbers.</span></span> <span data-ttu-id="bafcc-144">In den meisten Fällen ist kein des Entwicklers Absicht es kann zu Leistungsproblemen können führen, da instanziieren und Initialisieren eines Zufallszahlen-Generators relativ kostenintensiv ist.</span><span class="sxs-lookup"><span data-stu-id="bafcc-144">In most cases, this is not the developer's intent and can lead to performance issues, because instantiating and initializing a random number generator is a relatively expensive process.</span></span>  
  
 <span data-ttu-id="bafcc-145">Sowohl zum Verbessern der Leistung und um zu vermeiden, versehentlich erstellen separate random Number-Generatoren, die identische numerische Sequenzen zu generieren, es wird empfohlen, Sie eine erstellen <xref:System.Random> Objekt viele Zufallszahlen im Laufe der Zeit anstatt zu erstellen neue <xref:System.Random> -Objekten, die eine Zufallszahl zu generieren.</span><span class="sxs-lookup"><span data-stu-id="bafcc-145">Both to improve performance and to avoid inadvertently creating separate random number generators that generate identical numeric sequences, we recommend that you create one <xref:System.Random> object to generate many random numbers over time, instead of creating new <xref:System.Random> objects to generate one random number.</span></span>  
  
 <span data-ttu-id="bafcc-146">Allerdings die <xref:System.Random> Klasse nicht threadsicher ist.</span><span class="sxs-lookup"><span data-stu-id="bafcc-146">However, the <xref:System.Random> class isn't thread safe.</span></span> <span data-ttu-id="bafcc-147">Beim Aufrufen <xref:System.Random> Methoden aus mehreren Threads verwenden, befolgen Sie die Richtlinien, die im nächsten Abschnitt erläutert.</span><span class="sxs-lookup"><span data-stu-id="bafcc-147">If you call <xref:System.Random> methods from multiple threads, follow the guidelines discussed in the next section.</span></span>  
  
<a name="ThreadSafety"></a>   
## <a name="the-systemrandom-class-and-thread-safety"></a><span data-ttu-id="bafcc-148">Der System.Random-Klasse und Thread-Sicherheit</span><span class="sxs-lookup"><span data-stu-id="bafcc-148">The System.Random class and thread safety</span></span>  
 <span data-ttu-id="bafcc-149">Statt einzelne Instanziierung <xref:System.Random> Objekte, es wird empfohlen, dass Sie beim Erstellen einer einzelnen <xref:System.Random> Instanz alle von der Anwendung benötigten Zufallszahlen generiert.</span><span class="sxs-lookup"><span data-stu-id="bafcc-149">Instead of instantiating individual <xref:System.Random> objects, we recommend that you create a single <xref:System.Random> instance to generate all the random numbers needed by your app.</span></span> <span data-ttu-id="bafcc-150">Allerdings <xref:System.Random> Objekte sind nicht threadsicher.</span><span class="sxs-lookup"><span data-stu-id="bafcc-150">However, <xref:System.Random> objects are not thread safe.</span></span> <span data-ttu-id="bafcc-151">Wenn Ihre app aufruft <xref:System.Random> Methoden aus mehreren Threads, müssen Sie ein Synchronisierungsobjekt verwenden, um sicherzustellen, dass nur ein Thread den Zufallszahlen-Generator zu einem Zeitpunkt zugreifen kann.</span><span class="sxs-lookup"><span data-stu-id="bafcc-151">If your app calls <xref:System.Random> methods from multiple threads, you must use a synchronization object to ensure that only one thread can access the random number generator at a time.</span></span> <span data-ttu-id="bafcc-152">Wenn Sie nicht sicherstellen, dass die <xref:System.Random> Objekt auf threadsichere Weise zugegriffen wird, Aufrufe von Methoden, die Zufallszahlen zurückgeben geben 0 zurück.</span><span class="sxs-lookup"><span data-stu-id="bafcc-152">If you don't ensure that the <xref:System.Random> object is accessed in a thread-safe way, calls to methods that return random numbers return 0.</span></span>  
  
 <span data-ttu-id="bafcc-153">Im folgenden Beispiel wird der C#- [lock-Anweisung](~/docs/csharp/language-reference/keywords/lock-statement.md) und Visual Basic [SyncLock-Anweisung](~/docs/visual-basic/language-reference/statements/synclock-statement.md) , stellen Sie sicher, dass eine einzelne Zufallszahlen-Generators auf threadsichere Weise von 11 Threads zugegriffen wird.</span><span class="sxs-lookup"><span data-stu-id="bafcc-153">The following example uses the C# [lock Statement](~/docs/csharp/language-reference/keywords/lock-statement.md) and the Visual Basic [SyncLock statement](~/docs/visual-basic/language-reference/statements/synclock-statement.md) to ensure that a single random number generator is accessed by 11 threads in a thread-safe manner.</span></span> <span data-ttu-id="bafcc-154">Jeder Thread 2 Millionen Zufallszahlen generiert, zählt die Anzahl der Zufallszahlen generiert und deren Summe berechnet und aktualisiert dann die Gesamtwerte für alle Threads aus, wenn sie die Ausführung abschließt.</span><span class="sxs-lookup"><span data-stu-id="bafcc-154">Each thread generates 2 million random numbers, counts the number of random numbers generated and calculates their sum, and then updates the totals for all threads when it finishes executing.</span></span>  
  
 [!code-cpp[System.Random#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/threadsafeex1.cpp#3)]
 [!code-csharp[System.Random#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/threadsafeex1.cs#3)]
 [!code-vb[System.Random#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/threadsafeex1.vb#3)]  
  
 <span data-ttu-id="bafcc-155">Im Beispiel wird sichergestellt, dass Threadsicherheit auf folgende Weise:</span><span class="sxs-lookup"><span data-stu-id="bafcc-155">The example ensures thread-safety in the following ways:</span></span>  
  
-   <span data-ttu-id="bafcc-156">Die <xref:System.ThreadStaticAttribute> Attribut wird verwendet, um die Thread-lokalen Variablen definieren, die die Gesamtanzahl der Zufallszahlen generiert und deren Summe für jeden Thread zu verfolgen.</span><span class="sxs-lookup"><span data-stu-id="bafcc-156">The <xref:System.ThreadStaticAttribute> attribute is used to define thread-local variables that track the total number of random numbers generated and their sum for each thread.</span></span>  
  
-   <span data-ttu-id="bafcc-157">Eine Sperre (die `lock` -Anweisung in c# und die `SyncLock` -Anweisung in Visual Basic) schützt den Zugriff auf die Variablen für den insgesamt und die Summe aller Zufallszahlen generiert für alle Threads.</span><span class="sxs-lookup"><span data-stu-id="bafcc-157">A lock (the `lock` statement in C# and the `SyncLock` statement in Visual Basic) protects access to the variables for the total count and sum of all random numbers generated on all threads.</span></span>  
  
-   <span data-ttu-id="bafcc-158">Ein Semaphor (die <xref:System.Threading.CountdownEvent> Objekt) wird verwendet, um sicherzustellen, dass der Hauptthread wird blockiert, bis alle anderen Threads die Ausführung abschließt.</span><span class="sxs-lookup"><span data-stu-id="bafcc-158">A semaphore (the <xref:System.Threading.CountdownEvent> object) is used to ensure that the main thread blocks until all other threads complete execution.</span></span>  
  
-   <span data-ttu-id="bafcc-159">Im Beispiel wird überprüft, ob die Zufallszahlen-Generators durch bestimmen beschädigt wurde, ob zwei aufeinander folgende Aufrufe von Zufallszahlen generieren, Methoden geben 0 zurück.</span><span class="sxs-lookup"><span data-stu-id="bafcc-159">The example checks whether the random number generator has become corrupted by determining whether two consecutive calls to random number generation methods return 0.</span></span> <span data-ttu-id="bafcc-160">Wenn eine Beschädigung festgestellt wird, wird im Beispiel wird die <xref:System.Threading.CancellationTokenSource> -Objekt signalisiert, dass alle Threads abgebrochen werden soll.</span><span class="sxs-lookup"><span data-stu-id="bafcc-160">If corruption is detected, the example uses the <xref:System.Threading.CancellationTokenSource> object to signal that all threads should be canceled.</span></span>  
  
-   <span data-ttu-id="bafcc-161">Vor dem Generieren von jeder Zufallszahl jeder Thread überprüft den Status der <xref:System.Threading.CancellationToken> Objekt.</span><span class="sxs-lookup"><span data-stu-id="bafcc-161">Before generating each random number, each thread checks the state of the <xref:System.Threading.CancellationToken> object.</span></span> <span data-ttu-id="bafcc-162">Wenn der Abbruch angefordert wird, wird im Beispiel wird die <xref:System.Threading.CancellationToken.ThrowIfCancellationRequested%2A?displayProperty=nameWithType> Methode, um den Thread abzubrechen.</span><span class="sxs-lookup"><span data-stu-id="bafcc-162">If cancellation is requested, the example calls the <xref:System.Threading.CancellationToken.ThrowIfCancellationRequested%2A?displayProperty=nameWithType> method to cancel the thread.</span></span>  
  
 <span data-ttu-id="bafcc-163">Das folgende Beispiel ist mit dem ersten identisch, außer dass mithilfe einer <xref:System.Threading.Tasks.Task> -Objekt und einen Lambda-Ausdruck anstelle von <xref:System.Threading.Thread> Objekte.</span><span class="sxs-lookup"><span data-stu-id="bafcc-163">The following example is identical to the first, except that it uses a <xref:System.Threading.Tasks.Task> object and a lambda expression instead of <xref:System.Threading.Thread> objects.</span></span>  
  
 [!code-csharp[System.Random#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/threadsafeex2.cs#4)]
 [!code-vb[System.Random#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/threadsafeex2.vb#4)]  
  
 <span data-ttu-id="bafcc-164">Es unterscheidet sich von der ersten Beispiel auf folgende Weise:</span><span class="sxs-lookup"><span data-stu-id="bafcc-164">It differs from the first example in the following ways:</span></span>  
  
-   <span data-ttu-id="bafcc-165">Die Variablen zum Nachverfolgen der Anzahl der Zufallszahlen generiert und deren Summe in jeder Aufgabe befinden sich lokal auf die Aufgabe, daher keine Notwendigkeit zum Verwenden besteht der <xref:System.ThreadStaticAttribute> Attribut.</span><span class="sxs-lookup"><span data-stu-id="bafcc-165">The variables to keep track of the number of random numbers generated and their sum in each task are local to the task, so there is no need to use the <xref:System.ThreadStaticAttribute> attribute.</span></span>  
  
-   <span data-ttu-id="bafcc-166">Die statische <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType> Methode wird verwendet, um sicherzustellen, dass der Hauptthread nicht abgeschlossen, bevor alle Aufgaben beendet wurden.</span><span class="sxs-lookup"><span data-stu-id="bafcc-166">The static <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType> method is used to ensure that the main thread doesn't complete before all tasks have finished.</span></span> <span data-ttu-id="bafcc-167">Besteht keine Notwendigkeit für die <xref:System.Threading.CountdownEvent> Objekt.</span><span class="sxs-lookup"><span data-stu-id="bafcc-167">There is no need for the <xref:System.Threading.CountdownEvent> object.</span></span>  
  
-   <span data-ttu-id="bafcc-168">Die Ausnahme, die durch den Aufgabenabbruch entsteht werden eingeblendet, der <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="bafcc-168">The exception that results from task cancellation is surfaced in the <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="bafcc-169">Im vorherigen Beispiel wird sie von jedem Thread verarbeitet.</span><span class="sxs-lookup"><span data-stu-id="bafcc-169">In the previous example, it is handled by each thread.</span></span>  
  
<a name="Functionality"></a>   
## <a name="generating-different-types-of-random-numbers"></a><span data-ttu-id="bafcc-170">Verschiedene Typen von Zufallszahlen generieren</span><span class="sxs-lookup"><span data-stu-id="bafcc-170">Generating different types of random numbers</span></span>  
 <span data-ttu-id="bafcc-171">Der Zufallszahlengenerator bietet Methoden, mit die Sie die folgenden Arten von Zufallszahlen generieren können:</span><span class="sxs-lookup"><span data-stu-id="bafcc-171">The random number generator provides methods that let you generate the following kinds of random numbers:</span></span>  
  
-   <span data-ttu-id="bafcc-172">Eine Reihe von <xref:System.Byte> Werte.</span><span class="sxs-lookup"><span data-stu-id="bafcc-172">A series of <xref:System.Byte> values.</span></span> <span data-ttu-id="bafcc-173">Sie bestimmen die Anzahl der Byte-Werten durch Übergeben eines Arrays initialisiert, um die Anzahl der Elemente, die Sie die Methode zum zurückgeben möchten der <xref:System.Random.NextBytes%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="bafcc-173">You determine the number of byte values by passing an array initialized to the number of elements you want the method to return to the <xref:System.Random.NextBytes%2A> method.</span></span> <span data-ttu-id="bafcc-174">Im folgende Beispiel werden 20 Byte an Daten generiert.</span><span class="sxs-lookup"><span data-stu-id="bafcc-174">The following example generates 20 bytes.</span></span>  
  
     [!code-cpp[System.Random#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/nextbytes1.cpp#5)]
     [!code-csharp[System.Random#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/nextbytes1.cs#5)]
     [!code-vb[System.Random#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/nextbytes1.vb#5)]  
  
-   <span data-ttu-id="bafcc-175">Eine einzelne ganze Zahl.</span><span class="sxs-lookup"><span data-stu-id="bafcc-175">A single integer.</span></span> <span data-ttu-id="bafcc-176">Sie können auswählen, ob Sie eine Ganzzahl zwischen 0 und einen maximalen Wert (<xref:System.Int32.MaxValue?displayProperty=nameWithType> – 1) durch Aufrufen der <xref:System.Random.Next> -Methode, eine ganze Zahl zwischen 0 und einen bestimmten Wert durch Aufrufen der <xref:System.Random.Next%28System.Int32%29> -Methode oder eine ganze Zahl innerhalb eines Bereichs von Werten durch Aufrufen der <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29>Methode.</span><span class="sxs-lookup"><span data-stu-id="bafcc-176">You can choose whether you want an integer from 0 to a maximum value (<xref:System.Int32.MaxValue?displayProperty=nameWithType> – 1) by calling the <xref:System.Random.Next> method, an integer between 0 and a specific value by calling the <xref:System.Random.Next%28System.Int32%29> method, or an integer within a range of values by calling the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="bafcc-177">In den parametrisierten Überladungen ist der angegebene maximale Wert; die tatsächliche Höchstanzahl generiert also eine kleiner als der angegebene Wert.</span><span class="sxs-lookup"><span data-stu-id="bafcc-177">In the parameterized overloads, the specified maximum value is exclusive; that is, the actual maximum number generated is one less than the specified value.</span></span>  
  
     <span data-ttu-id="bafcc-178">Im folgenden Beispiel wird die <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> Methode zum Generieren der 10 zufälliger Zahlen zwischen-10 und 10.</span><span class="sxs-lookup"><span data-stu-id="bafcc-178">The following example calls the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method to generate 10 random numbers between -10 and 10.</span></span> <span data-ttu-id="bafcc-179">Beachten Sie, dass das zweite Argument an die Methode gibt an, die exklusive obere Grenze des Bereichs von zufälligen Werten, die von der Methode zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="bafcc-179">Note that the second argument to the method specifies the exclusive upper bound of the range of random values returned by the method.</span></span> <span data-ttu-id="bafcc-180">Das heißt, die größte ganze Zahl, die die Methode zurückgeben kann, ist kleiner als dieser Wert.</span><span class="sxs-lookup"><span data-stu-id="bafcc-180">In other words, the largest integer that the method can return is one less than this value.</span></span>  
  
     [!code-cpp[System.Random#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/nextex1.cpp#6)]
     [!code-csharp[System.Random#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/nextex1.cs#6)]
     [!code-vb[System.Random#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/nextex1.vb#6)]  
  
-   <span data-ttu-id="bafcc-181">Eine einzelne Gleitkommawert zwischen 0,0 und kleiner als 1,0 durch Aufrufen der <xref:System.Random.NextDouble%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="bafcc-181">A single floating-point value from 0.0 to less than 1.0 by calling the <xref:System.Random.NextDouble%2A> method.</span></span> <span data-ttu-id="bafcc-182">Die exklusive obere Grenze der von der Methode zurückgegebenen Zufallszahl ist 1, damit die tatsächliche Obergrenze 0.99999999999999978 ist.</span><span class="sxs-lookup"><span data-stu-id="bafcc-182">The exclusive upper bound of the random number returned by the method is 1, so its actual upper bound is 0.99999999999999978.</span></span> <span data-ttu-id="bafcc-183">Im folgende Beispiel wird 10 zufällige Gleitkommazahlen generiert.</span><span class="sxs-lookup"><span data-stu-id="bafcc-183">The following example generates 10 random floating-point numbers.</span></span>  
  
     [!code-cpp[System.Random#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/nextdoubleex1.cpp#7)]
     [!code-csharp[System.Random#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/nextdoubleex1.cs#7)]
     [!code-vb[System.Random#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/nextdoubleex1.vb#7)]  
  
> [!IMPORTANT]
>  <span data-ttu-id="bafcc-184">Die <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> Methode können Sie den Bereich der zurückgegebenen Zufallszahl an.</span><span class="sxs-lookup"><span data-stu-id="bafcc-184">The <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method allows you to specify the range of the returned random number.</span></span> <span data-ttu-id="bafcc-185">Allerdings die `maxValue` -Parameter, der angibt, der obere Bereich zurückgegebene Zahl, wird eine exklusive, keine inklusive Wert.</span><span class="sxs-lookup"><span data-stu-id="bafcc-185">However, the `maxValue` parameter, which specifies the upper range returned number, is an exclusive, not an inclusive, value.</span></span> <span data-ttu-id="bafcc-186">Dies bedeutet, dass den Methodenaufruf `Next(0, 100)` gibt einen Wert zwischen 0 und 99, und nicht zwischen 0 und 100.</span><span class="sxs-lookup"><span data-stu-id="bafcc-186">This means that the method call `Next(0, 100)` returns a value between 0 and 99, and not between 0 and 100.</span></span>  
  
 <span data-ttu-id="bafcc-187">Können Sie auch die <xref:System.Random> Klasse für Aufgaben wie das Generieren von [Zufallswerte: System.Boolean](#Boolean), Generieren von [zufällige Gleitkommazahlen Werte mit einem Bereich von 0 bis 1 außer](#Floats), Generieren von [zufälligen 64-Bit-Ganzzahlen](#Long), und [nach dem Zufallsprinzip ein eindeutiges Element aus einem Array oder einer Auflistung abrufen](#UniqueArray).</span><span class="sxs-lookup"><span data-stu-id="bafcc-187">You can also use the <xref:System.Random> class for such tasks as generating [random T:System.Boolean values](#Boolean), generating [random floating point values with a range other than 0 to 1](#Floats), generating [random 64-bit integers](#Long), and [randomly retrieving a unique element from an array or collection](#UniqueArray).</span></span> <span data-ttu-id="bafcc-188">Diese und andere häufige Aufgaben finden Sie in der [wie verwenden Sie System.Random zu...](#Operations)</span><span class="sxs-lookup"><span data-stu-id="bafcc-188">For these and other common tasks, see the [How do you use System.Random to…](#Operations)</span></span> <span data-ttu-id="bafcc-189">Abschnitt.</span><span class="sxs-lookup"><span data-stu-id="bafcc-189">section.</span></span>  
  
<a name="Overriding"></a>   
## <a name="substituting-your-own-algorithm"></a><span data-ttu-id="bafcc-190">Ersetzen einen eigenen Algorithmus</span><span class="sxs-lookup"><span data-stu-id="bafcc-190">Substituting your own algorithm</span></span>  
 <span data-ttu-id="bafcc-191">Sie können eigene Zufallszahlengenerator implementieren, durch Erben von der <xref:System.Random> Klasse und Ihre Generierung Algorithmus Zufallszahlen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="bafcc-191">You can implement your own random number generator by inheriting from the <xref:System.Random> class and supplying your random number generation algorithm.</span></span> <span data-ttu-id="bafcc-192">Um einen eigenen Algorithmus angeben, müssen Sie überschreiben die <xref:System.Random.Sample%2A> -Methode, die der zufällige Zahlen generieren-Algorithmus implementiert.</span><span class="sxs-lookup"><span data-stu-id="bafcc-192">To supply your own algorithm, you must override the <xref:System.Random.Sample%2A> method, which implements the random number generation algorithm.</span></span> <span data-ttu-id="bafcc-193">Sie sollten auch überschreiben die <xref:System.Random.Next>, <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29>, und <xref:System.Random.NextBytes%2A> Methoden, um sicherzustellen, dass sie die überschriebene Aufrufen <xref:System.Random.Sample%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="bafcc-193">You should also override the <xref:System.Random.Next>, <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29>, and <xref:System.Random.NextBytes%2A> methods to ensure that they call your overridden <xref:System.Random.Sample%2A> method.</span></span> <span data-ttu-id="bafcc-194">Sie überschreiben, müssen die <xref:System.Random.Next%28System.Int32%29> und <xref:System.Random.NextDouble%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="bafcc-194">You don't have to override the <xref:System.Random.Next%28System.Int32%29> and <xref:System.Random.NextDouble%2A> methods.</span></span>  
  
 <span data-ttu-id="bafcc-195">Ein Beispiel, das von abgeleitet ist die <xref:System.Random> Klasse und ändert dessen Standardwert Pseudozufallszahlen, finden Sie unter der <xref:System.Random.Sample%2A> Referenzseite.</span><span class="sxs-lookup"><span data-stu-id="bafcc-195">For an example that derives from the <xref:System.Random> class and modifies its default pseudo-random number generator, see the <xref:System.Random.Sample%2A> reference page.</span></span>  
  
<a name="Operations"></a>   
## <a name="how-do-you-use-systemrandom-to"></a><span data-ttu-id="bafcc-196">Wie werden System.Random, verwendet...</span><span class="sxs-lookup"><span data-stu-id="bafcc-196">How do you use System.Random to…</span></span>  
 <span data-ttu-id="bafcc-197">In den folgenden Abschnitten besprechen und stellen entsprechenden Beispielcode für einige der Methoden, die Zufallszahlen in Ihrer app verwenden werden sollen.</span><span class="sxs-lookup"><span data-stu-id="bafcc-197">The following sections discuss and provide sample code for some of the ways you might want to use random numbers in your app.</span></span>  
  
<a name="Same"></a>   
### <a name="retrieve-the-same-sequence-of-random-values"></a><span data-ttu-id="bafcc-198">Die gleiche Sequenz von Zufallswerten abrufen</span><span class="sxs-lookup"><span data-stu-id="bafcc-198">Retrieve the same sequence of random values</span></span>  
 <span data-ttu-id="bafcc-199">In einigen Fällen Sie dieselbe Sequenz von Zufallszahlen in Software Testszenarios und Spiel Wiedergabe generieren möchten.</span><span class="sxs-lookup"><span data-stu-id="bafcc-199">Sometimes you want to generate the same sequence of random numbers in software test scenarios and in game playing.</span></span> <span data-ttu-id="bafcc-200">Mit derselben Sequenz von Zufallszahlen testen, können Sie erkennen von Regressionen und Fehlerbehebungen zu bestätigen.</span><span class="sxs-lookup"><span data-stu-id="bafcc-200">Testing with the same sequence of random numbers allows you to detect regressions and confirm bug fixes.</span></span> <span data-ttu-id="bafcc-201">Die gleiche Sequenz von Zufallszahl können Spiele Sie vorherige Spiele wiedergeben.</span><span class="sxs-lookup"><span data-stu-id="bafcc-201">Using the same sequence of random number in games allows you to replay previous games.</span></span>  
  
 <span data-ttu-id="bafcc-202">Sie können die gleiche Sequenz von Zufallszahlen generieren, indem Sie den gleichen Ausgangswert zum Bereitstellen der <xref:System.Random.%23ctor%28System.Int32%29> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="bafcc-202">You can generate the same sequence of random numbers by providing the same seed value to the <xref:System.Random.%23ctor%28System.Int32%29> constructor.</span></span> <span data-ttu-id="bafcc-203">Der Ausgangswert stellt einen Startwert für die Generierung Algorithmus Pseudozufallszahlen bereit.</span><span class="sxs-lookup"><span data-stu-id="bafcc-203">The seed value provides a starting value for the pseudo-random number generation algorithm.</span></span> <span data-ttu-id="bafcc-204">Im folgenden Beispiel wird 100100 als eine beliebige Ausgangswert zum Instanziieren der <xref:System.Random> Objekt 20 zufällige Gleitkommazahlen-Punktwerte angezeigt und bleibt weiterhin den Ausgangswert.</span><span class="sxs-lookup"><span data-stu-id="bafcc-204">The following example uses 100100 as an arbitrary seed value to instantiate the <xref:System.Random> object, displays 20 random floating-point values, and persists the seed value.</span></span> <span data-ttu-id="bafcc-205">Anschließend wird der Ausgangswert wiederhergestellt, instanziiert einen neuen Zufallszahlengenerator, und zeigt die gleichen 20 zufällige Gleitkommazahlen Werte.</span><span class="sxs-lookup"><span data-stu-id="bafcc-205">It then restores the seed value, instantiates a new random number generator, and displays the same 20 random floating-point values.</span></span>  <span data-ttu-id="bafcc-206">Beachten Sie, dass im Beispiel verschiedene Sequenzen von Zufallszahlen erzeugen kann, wenn in verschiedenen Versionen von .NET Framework ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="bafcc-206">Note that the example may produce different sequences of random numbers if run on different versions of the .NET Framework.</span></span>  
  
 [!code-cpp[System.Random#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/same1.cpp#12)]
 [!code-csharp[System.Random#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/same1.cs#12)]
 [!code-vb[System.Random#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/same1.vb#12)]  
  
<a name="Unique"></a>   
### <a name="retrieve-unique-sequences-of-random-numbers"></a><span data-ttu-id="bafcc-207">Abrufen von eindeutigen Sequenzen von Zufallszahlen</span><span class="sxs-lookup"><span data-stu-id="bafcc-207">Retrieve unique sequences of random numbers</span></span>  
 <span data-ttu-id="bafcc-208">Bietet verschiedene Ausgangswerte auf Instanzen von der <xref:System.Random> Klasse bewirkt, dass jede Zufallszahlen-Generator um eine andere Sequenz von Werten zu erzeugen.</span><span class="sxs-lookup"><span data-stu-id="bafcc-208">Providing different seed values to instances of the <xref:System.Random> class causes each random number generator to produce a different sequence of values.</span></span> <span data-ttu-id="bafcc-209">Sie können einem Ausgangswert angeben, entweder explizit durch Aufrufen der <xref:System.Random.%23ctor%28System.Int32%29> -Konstruktor oder implizit durch Aufrufen der <xref:System.Random.%23ctor> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="bafcc-209">You can provide a seed value either explicitly by calling the <xref:System.Random.%23ctor%28System.Int32%29> constructor, or implicitly by calling the <xref:System.Random.%23ctor> constructor.</span></span> <span data-ttu-id="bafcc-210">Die meisten Entwickler Aufrufen des Konstruktors, der Systemuhr verwendet.</span><span class="sxs-lookup"><span data-stu-id="bafcc-210">Most developers call the parameterless constructor, which uses the system clock.</span></span> <span data-ttu-id="bafcc-211">Im folgenden Beispiel wird dieser Ansatz zum Instanziieren zweier <xref:System.Random> Instanzen.</span><span class="sxs-lookup"><span data-stu-id="bafcc-211">The following example uses this approach to instantiate two <xref:System.Random> instances.</span></span> <span data-ttu-id="bafcc-212">Jede Instanz zeigt eine Reihe von 10 zufällige ganze Zahlen.</span><span class="sxs-lookup"><span data-stu-id="bafcc-212">Each instance displays a series of 10 random integers.</span></span>  
  
 [!code-cpp[System.Random#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/unique.cpp#13)]
 [!code-csharp[System.Random#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/unique.cs#13)]
 [!code-vb[System.Random#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/unique.vb#13)]  
  
 <span data-ttu-id="bafcc-213">Jedoch aufgrund seiner endliche Auflösung erkennt die Systemuhr Zeitunterschiede nicht, die weniger als etwa 15 Millisekunden.</span><span class="sxs-lookup"><span data-stu-id="bafcc-213">However, because of its finite resolution, the system clock doesn't detect time differences that are less than approximately 15 milliseconds.</span></span> <span data-ttu-id="bafcc-214">Daher Ihren Code aufruft der <xref:System.Random.%23ctor> Überladung zum Instanziieren zweier <xref:System.Random> Objekte nacheinander, Sie versehentlich geleistet werden die Objekte mit identischen Ausgangswerte.</span><span class="sxs-lookup"><span data-stu-id="bafcc-214">Therefore, if your code calls the <xref:System.Random.%23ctor> overload to instantiate two <xref:System.Random> objects in succession, you might inadvertently be providing the objects with identical seed values.</span></span> <span data-ttu-id="bafcc-215">Um dies im vorherigen Beispiel zu sehen, kommentieren Sie Sie aus der <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> -Methodenaufruf, und kompilieren und führen Sie das Beispiel erneut aus.</span><span class="sxs-lookup"><span data-stu-id="bafcc-215">To see this in the previous example, comment out the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method call, and compile and run the example again.</span></span>  
  
 <span data-ttu-id="bafcc-216">Um dies zu vermeiden, wird empfohlen, dass Sie ein einzelnes instanziieren <xref:System.Random> -Objekt statt mehrere Sitzungen.</span><span class="sxs-lookup"><span data-stu-id="bafcc-216">To prevent this from happening, we recommend that you instantiate a single <xref:System.Random> object rather than multiple ones.</span></span> <span data-ttu-id="bafcc-217">Da jedoch <xref:System.Random> ist nicht threadsicher ist, müssen Sie einige Synchronisierung-Gerät verwenden, wenn der Zugriff auf eine <xref:System.Random> -Instanz aus mehreren Threads; Weitere Informationen verwenden, finden Sie unter [der zufälligen Klasse und Threadsicherheit](#ThreadSafety) weiter oben in dieser Thema.</span><span class="sxs-lookup"><span data-stu-id="bafcc-217">However, since <xref:System.Random> isn't thread safe, you must use some synchronization device if you access a <xref:System.Random> instance from multiple threads; for more information, see [The Random class and thread safety](#ThreadSafety) earlier in this topic.</span></span> <span data-ttu-id="bafcc-218">Alternativ können Sie einen verzögerungsmechanismus, wie z. B. die <xref:System.Threading.Thread.Sleep%2A> Methode, die im vorherigen Beispiel verwendet werden, um sicherzustellen, dass die Instanziierungen mehr als 15 Millisekunden voneinander auftreten.</span><span class="sxs-lookup"><span data-stu-id="bafcc-218">Alternately, you can use a delay mechanism, such as the <xref:System.Threading.Thread.Sleep%2A> method used in the previous example, to ensure that the instantiations occur more than 15 millisecond apart.</span></span>  
  
<a name="Range"></a>   
### <a name="retrieve-integers-in-a-specified-range"></a><span data-ttu-id="bafcc-219">Abrufen von ganzen Zahlen in einem angegebenen Bereich</span><span class="sxs-lookup"><span data-stu-id="bafcc-219">Retrieve integers in a specified range</span></span>  
 <span data-ttu-id="bafcc-220">Abrufen von ganzen Zahlen in einem angegebenen Bereich durch Aufrufen der <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> -Methode, die ermöglicht die Angabe der niedrigere Wert und die Obergrenze für die Zahlen den Zufallszahlengenerator zurückgeben möchten.</span><span class="sxs-lookup"><span data-stu-id="bafcc-220">You can retrieve integers in a specified range by calling the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method, which lets you specify both the lower and the upper bound of the numbers you'd like the random number generator to return.</span></span> <span data-ttu-id="bafcc-221">Die Obergrenze ist eine exklusive, keine inklusive Wert.</span><span class="sxs-lookup"><span data-stu-id="bafcc-221">The upper bound is an exclusive, not an inclusive, value.</span></span> <span data-ttu-id="bafcc-222">Es ist nicht, also in den Bereich der Werte, die von der Methode zurückgegebenen enthalten.</span><span class="sxs-lookup"><span data-stu-id="bafcc-222">That is, it isn't included in the range of values returned by the method.</span></span> <span data-ttu-id="bafcc-223">Im folgenden Beispiel wird diese Methode zum Generieren von Zufallszahlen zwischen-10 und 10 ein.</span><span class="sxs-lookup"><span data-stu-id="bafcc-223">The following example uses this method to generate random integers between -10 and 10.</span></span> <span data-ttu-id="bafcc-224">Beachten Sie, dass es 11, gibt der eins größer als den gewünschten Wert, als der Wert von der `maxValue` Argument im Aufruf Methode.</span><span class="sxs-lookup"><span data-stu-id="bafcc-224">Note that it specifies 11, which is one greater than the desired value, as the value of the `maxValue` argument in the method call.</span></span>  
  
 [!code-cpp[System.Random#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/range1.cpp#15)]
 [!code-csharp[System.Random#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/range1.cs#15)]
 [!code-vb[System.Random#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/range1.vb#15)]  
  
<a name="Digits"></a>   
### <a name="retrieve-integers-with-a-specified-number-of-digits"></a><span data-ttu-id="bafcc-225">Abrufen von ganzen Zahlen mit einer angegebenen Anzahl von Ziffern</span><span class="sxs-lookup"><span data-stu-id="bafcc-225">Retrieve integers with a specified number of digits</span></span>  
 <span data-ttu-id="bafcc-226">Sie erreichen die <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> Methode, um Zahlen mit einer angegebenen Anzahl von Ziffern abzurufen.</span><span class="sxs-lookup"><span data-stu-id="bafcc-226">You can call the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method to retrieve numbers with a specified number of digits.</span></span> <span data-ttu-id="bafcc-227">Beispielsweise zum Abrufen von Zahlen mit vier Ziffern (d. h., Zahlen, die im Bereich von 1000 bis 9999), rufen Sie die <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> Methode mit einem `minValue` Wert 1000 und ein `maxValue` Wert von 10.000, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="bafcc-227">For example, to retrieve numbers with four digits (that is, numbers that range from 1000 to 9999), you call the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method with a `minValue` value of 1000 and a `maxValue` value of 10000, as the following example shows.</span></span>  
  
 [!code-cpp[System.Random#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/range2.cpp#16)]
 [!code-csharp[System.Random#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/range2.cs#16)]
 [!code-vb[System.Random#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/range2.vb#16)]  
  
<a name="Floats"></a>   
### <a name="retrieve-floating-point-values-in-a-specified-range"></a><span data-ttu-id="bafcc-228">Abrufen von Gleitkommawerten in einem angegebenen Bereich</span><span class="sxs-lookup"><span data-stu-id="bafcc-228">Retrieve floating-point values in a specified range</span></span>  
 <span data-ttu-id="bafcc-229">Die <xref:System.Random.NextDouble%2A> Methode gibt zufällige Gleitkommazahlen-Punktwerte dieses Bereichs liegt zwischen 0 und kleiner als 1.</span><span class="sxs-lookup"><span data-stu-id="bafcc-229">The <xref:System.Random.NextDouble%2A> method returns random floating-point values that range from 0 to less than 1.</span></span> <span data-ttu-id="bafcc-230">Sie sollten jedoch häufig zum Generieren von zufälliger Werten in einem anderen Bereich zu können.</span><span class="sxs-lookup"><span data-stu-id="bafcc-230">However, you'll often want to generate random values in some other range.</span></span>  
  
 <span data-ttu-id="bafcc-231">Wenn das Intervall zwischen den minimalen und maximalen Werten für den gewünschten 1 ist, können Sie den Unterschied zwischen der gewünschten beginnend Intervall und 0 hinzufügen, auf die zurückgegebene Anzahl der <xref:System.Random.NextDouble%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="bafcc-231">If the interval between the minimum and maximum desired values is 1, you can add the difference between the desired starting interval and 0 to the number returned by the <xref:System.Random.NextDouble%2A> method.</span></span> <span data-ttu-id="bafcc-232">Im folgende Beispiel wird diese Option, um 10 Zufallszahlen zwischen-1 und 0.</span><span class="sxs-lookup"><span data-stu-id="bafcc-232">The following example does this to generate 10 random numbers between -1 and 0.</span></span>  
  
 [!code-cpp[System.Random#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/doublerange2.cpp#17)]
 [!code-csharp[System.Random#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/doublerange2.cs#17)]
 [!code-vb[System.Random#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/doublerange2.vb#17)]  
  
 <span data-ttu-id="bafcc-233">Um zufällige Gleitkommazahlen generiert wird, dessen untere Grenze 0 jedoch Obergrenze ist größer als 1 (oder bei negativen Zahlen, dessen untere Grenze ist kleiner als-1 und obere Grenze ist 0), Multiplizieren Sie Zufallszahl mit der Grenze ungleich NULL.</span><span class="sxs-lookup"><span data-stu-id="bafcc-233">To generate random floating-point numbers whose lower bound is 0 but upper bound is greater than 1 (or, in the case of negative numbers, whose lower bound is less than -1 and upper bound is 0), multiply the random number by the non-zero bound.</span></span> <span data-ttu-id="bafcc-234">Im folgende Beispiel wird diese Option, um 20 Millionen zufällige Gleitkommazahlen generiert dieses Bereichs von 0 bis <xref:System.Int64.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="bafcc-234">The following example does this to generate 20 million random floating-point numbers that range from 0 to <xref:System.Int64.MaxValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="bafcc-235">In zeigt auch die Verteilung von Zufallswerten, die von der Methode generiert.</span><span class="sxs-lookup"><span data-stu-id="bafcc-235">In also displays the distribution of the random values generated by the method.</span></span>  
  
 [!code-cpp[System.Random#18](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/doublerange1.cpp#18)]
 [!code-csharp[System.Random#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/doublerange1.cs#18)]
 [!code-vb[System.Random#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/doublerange1.vb#18)]  
  
 <span data-ttu-id="bafcc-236">Um zufällige Gleitkommazahlen zwischen zwei beliebigen Werten zu generieren, wie die <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> Methode für ganze Zahlen enthält, verwenden Sie die folgende Formel:</span><span class="sxs-lookup"><span data-stu-id="bafcc-236">To generate random floating-point numbers between two arbitrary values, like the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method does for integers, use the following formula:</span></span>  
  
```  
Random.NextDouble() * (maxValue – minValue) + minValue  
```  
  
 <span data-ttu-id="bafcc-237">Im folgenden Beispiel generiert 1 Million Zufallszahlen, die im Bereich von 10.0 11.0 und zeigt die Verteilung.</span><span class="sxs-lookup"><span data-stu-id="bafcc-237">The following example generates 1 million random numbers that range from 10.0 to 11.0, and displays their distribution.</span></span>  
  
 [!code-cpp[System.Random#19](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/doublerange3.cpp#19)]
 [!code-csharp[System.Random#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/doublerange3.cs#19)]
 [!code-vb[System.Random#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/doublerange3.vb#19)]  
  
<a name="Boolean"></a>   
### <a name="generate-random-boolean-values"></a><span data-ttu-id="bafcc-238">Generieren von zufälligen boolesche Werte</span><span class="sxs-lookup"><span data-stu-id="bafcc-238">Generate random Boolean values</span></span>  
 <span data-ttu-id="bafcc-239">Die <xref:System.Random> Klasse stellt Methoden zur Erstellung keinen <xref:System.Boolean> Werte.</span><span class="sxs-lookup"><span data-stu-id="bafcc-239">The <xref:System.Random> class doesn't provide methods that generate <xref:System.Boolean> values.</span></span> <span data-ttu-id="bafcc-240">Allerdings können Sie eine eigene Klasse oder Methode dafür definieren.</span><span class="sxs-lookup"><span data-stu-id="bafcc-240">However, you can define your own class or method to do that.</span></span> <span data-ttu-id="bafcc-241">Das folgende Beispiel definiert eine Klasse `BooleanGenerator`, mit einer einzelnen Methode `NextBoolean`.</span><span class="sxs-lookup"><span data-stu-id="bafcc-241">The following example defines a class, `BooleanGenerator`, with a single method, `NextBoolean`.</span></span> <span data-ttu-id="bafcc-242">Die `BooleanGenerator` -Klasse speichert ein <xref:System.Random> Objekt als eine private Variable.</span><span class="sxs-lookup"><span data-stu-id="bafcc-242">The `BooleanGenerator` class stores a <xref:System.Random> object as a private variable.</span></span> <span data-ttu-id="bafcc-243">Die `NextBoolean` Methodenaufrufe der <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> Methode und übergibt das Ergebnis, das die <xref:System.Convert.ToBoolean%28System.Int32%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="bafcc-243">The `NextBoolean` method calls the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method and passes the result to the <xref:System.Convert.ToBoolean%28System.Int32%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="bafcc-244">Beachten Sie, dass 2 als Argument an die obere Grenze der zufälligen Zahl verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="bafcc-244">Note that 2 is used as the argument to specify the upper bound of the random number.</span></span> <span data-ttu-id="bafcc-245">Da dies ein ausgeschlossener Wert ist, gibt der Aufruf der Methode zurück, entweder 0 oder 1.</span><span class="sxs-lookup"><span data-stu-id="bafcc-245">Since this is an exclusive value, the method call returns either 0 or 1.</span></span>  
  
 [!code-cpp[System.Random#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/booleans1.cpp#8)]
 [!code-csharp[System.Random#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/booleans1.cs#8)]
 [!code-vb[System.Random#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/booleans1.vb#8)]  
  
 <span data-ttu-id="bafcc-246">Statt eine separate Klasse generieren zufälliger <xref:System.Boolean> Werte, die im Beispiel können einfach eine einzelne Methode definiert haben.</span><span class="sxs-lookup"><span data-stu-id="bafcc-246">Instead of creating a separate class to generate random <xref:System.Boolean> values, the example could simply have defined a single method.</span></span> <span data-ttu-id="bafcc-247">In diesem Fall wird jedoch die <xref:System.Random> Objekt sollte als einer Variablen auf Klassenebene, um zu vermeiden, instanziieren ein neues definiert wurden <xref:System.Random> Instanz in jedem Methodenaufruf.</span><span class="sxs-lookup"><span data-stu-id="bafcc-247">In that case, however, the <xref:System.Random> object should have been defined as a class-level variable to avoid instantiating a new <xref:System.Random> instance in each method call.</span></span> <span data-ttu-id="bafcc-248">In Visual Basic Random-Instanz definiert werden kann, als ein [statische](~/docs/visual-basic/language-reference/modifiers/static.md) -Variable in der `NextBoolean` Methode.</span><span class="sxs-lookup"><span data-stu-id="bafcc-248">In Visual Basic, the Random instance can be defined as a [Static](~/docs/visual-basic/language-reference/modifiers/static.md) variable in the `NextBoolean` method.</span></span>  <span data-ttu-id="bafcc-249">Im folgende Beispiel stellt eine Implementierung bereit.</span><span class="sxs-lookup"><span data-stu-id="bafcc-249">The following example provides an implementation.</span></span>  
  
 [!code-cpp[System.Random#20](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/booleans2.cpp#20)]
 [!code-csharp[System.Random#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/booleans2.cs#20)]
 [!code-vb[System.Random#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/booleans2.vb#20)]  
  
<a name="Long"></a>   
### <a name="generate-random-64-bit-integers"></a><span data-ttu-id="bafcc-250">Generieren von zufälligen 64-Bit-Ganzzahlen</span><span class="sxs-lookup"><span data-stu-id="bafcc-250">Generate random 64-bit integers</span></span>  
 <span data-ttu-id="bafcc-251">Die Überladungen der <xref:System.Random.Next%2A> Methodenrückgabewert 32-Bit-Ganzzahlen.</span><span class="sxs-lookup"><span data-stu-id="bafcc-251">The overloads of the <xref:System.Random.Next%2A> method return 32-bit integers.</span></span> <span data-ttu-id="bafcc-252">In einigen Fällen möchten jedoch möglicherweise mit 64-Bit-Ganzzahlen arbeiten.</span><span class="sxs-lookup"><span data-stu-id="bafcc-252">However, in some cases, you might want to work with 64-bit integers.</span></span> <span data-ttu-id="bafcc-253">Sie können dies wie folgt tun:</span><span class="sxs-lookup"><span data-stu-id="bafcc-253">You can do this as follows:</span></span>  
  
1.  <span data-ttu-id="bafcc-254">Rufen Sie die <xref:System.Random.NextDouble%2A> Methode zum Abrufen der Gleitkommazahl mit doppelter Genauigkeit Datenpunktwert.</span><span class="sxs-lookup"><span data-stu-id="bafcc-254">Call the <xref:System.Random.NextDouble%2A> method to retrieve a double-precision floating point value.</span></span>  
  
2.  <span data-ttu-id="bafcc-255">Multiplizieren Sie den Wert von <xref:System.Int64.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="bafcc-255">Multiply that value by <xref:System.Int64.MaxValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="bafcc-256">Im folgenden Beispiel verwendet dieses Verfahren zu lange 20 Millionen Zufallszahlen generieren und diese in 10 gleich große Gruppen kategorisiert.</span><span class="sxs-lookup"><span data-stu-id="bafcc-256">The following example uses this technique to generate 20 million random long integers and categorizes them in 10 equal groups.</span></span> <span data-ttu-id="bafcc-257">Wertet dann die Verteilung der zufälligen Zahlen durch zählen der Anzahl in jeder Gruppe von 0 bis <xref:System.Int64.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="bafcc-257">It then evaluates the distribution of the random numbers by counting the number in each group from 0 to <xref:System.Int64.MaxValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="bafcc-258">Wie die Ausgabe des Beispiels zeigt, werden die Zahlen über den Bereich einer langen ganzen Zahl mehr oder weniger gleichmäßig verteilt.</span><span class="sxs-lookup"><span data-stu-id="bafcc-258">As the output from the example shows, the numbers are distributed more or less equally through the range of a long integer.</span></span>  
  
 [!code-cpp[System.Random#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/long1.cpp#14)]
 [!code-csharp[System.Random#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/long1.cs#14)]
 [!code-vb[System.Random#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/long1.vb#14)]  
  
 <span data-ttu-id="bafcc-259">Ein alternatives Verfahren, dass Bitmanipulation verwendet keine echten Zufallszahlen generiert.</span><span class="sxs-lookup"><span data-stu-id="bafcc-259">An alternative technique that uses bit manipulation does not generate truly random numbers.</span></span> <span data-ttu-id="bafcc-260">Diese Methode ruft <xref:System.Random.Next> zum Generieren von zwei ganzen Zahlen nach links verschiebt eine von 32 Bits und oder-Operatoren werden zusammen.</span><span class="sxs-lookup"><span data-stu-id="bafcc-260">This technique calls <xref:System.Random.Next> to generate two integers, left-shifts one by 32 bits, and ORs them together.</span></span> <span data-ttu-id="bafcc-261">Dieses Verfahren hat zwei Nachteile:</span><span class="sxs-lookup"><span data-stu-id="bafcc-261">This technique has two limitations:</span></span>  
  
1.  <span data-ttu-id="bafcc-262">Da Bit 31 das signierte Bit ist, lautet der Wert in Bit 31 des resultierenden long integer-Wert immer 0.</span><span class="sxs-lookup"><span data-stu-id="bafcc-262">Because bit 31 is the sign bit, the value in bit 31 of the resulting long integer is always 0.</span></span>  <span data-ttu-id="bafcc-263">Dies kann durch Generieren einer zufälligen 0 oder 1, es links-Verschiebung Bits 31 und OR adressiert werden mit der ursprünglichen zufällige lange ganze Zahl.</span><span class="sxs-lookup"><span data-stu-id="bafcc-263">This can be addressed by generating a random 0 or 1, left-shifting it 31 bits, and ORing it with the original random long integer.</span></span>  
  
2.  <span data-ttu-id="bafcc-264">Mehr erheblich, da die Wahrscheinlichkeit, die der Wert von zurückgegeben <xref:System.Random.Next> wird "0" sein, es werden ggf. einige Zufallszahlen im Bereich 0 x 0 – 0x00000000FFFFFFFF.</span><span class="sxs-lookup"><span data-stu-id="bafcc-264">More seriously, because the probability that the value returned by <xref:System.Random.Next> will be 0, there will be few if any random numbers in the range 0x0-0x00000000FFFFFFFF.</span></span>  
  
<a name="Bytes"></a>   
### <a name="retrieve-bytes-in-a-specified-range"></a><span data-ttu-id="bafcc-265">Abrufen von Bytes in einem angegebenen Bereich</span><span class="sxs-lookup"><span data-stu-id="bafcc-265">Retrieve bytes in a specified range</span></span>  
 <span data-ttu-id="bafcc-266">Überladungen der der <xref:System.Random.Next%2A> Methode ermöglichen Ihnen das Festlegen des Bereichs von zufälligen Zahlen, aber die <xref:System.Random.NextBytes%2A> Methode nicht.</span><span class="sxs-lookup"><span data-stu-id="bafcc-266">The overloads of the <xref:System.Random.Next%2A> method allow you to specify the range of random numbers, but the <xref:System.Random.NextBytes%2A> method does not.</span></span> <span data-ttu-id="bafcc-267">Das folgende Beispiel implementiert eine `NextBytes` Methode, die Sie den Bereich der zurückgegebenen Bytes angeben kann.</span><span class="sxs-lookup"><span data-stu-id="bafcc-267">The following example implements a `NextBytes` method that lets you specify the range of the returned bytes.</span></span> <span data-ttu-id="bafcc-268">Definiert eine `Random2` von abgeleitete Klasse <xref:System.Random> und überlädt die `NextBytes` Methode.</span><span class="sxs-lookup"><span data-stu-id="bafcc-268">It defines a `Random2` class that derives from <xref:System.Random> and overloads its `NextBytes` method.</span></span>  
  
 [!code-cpp[System.Random#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/bytes1.cpp#9)]
 [!code-csharp[System.Random#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/bytes1.cs#9)]
 [!code-vb[System.Random#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/bytes1.vb#9)]  
  
 <span data-ttu-id="bafcc-269">Die `NextBytes(Byte[], Byte, Byte)` Methode bindet einen Aufruf der <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> Methode und gibt den minimalen und Wert größer als der maximale Wert (in diesem Fall 0 und 101), dass wir in der Byte-Array zurückgegeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="bafcc-269">The `NextBytes(Byte[], Byte, Byte)` method wraps a call to the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method and specifies the minimum value and one greater than the maximum value (in this case, 0 and 101) that we want returned in the byte array.</span></span> <span data-ttu-id="bafcc-270">Da wir sicher sind, dass die ganzzahligen Werte zurückgegebene der <xref:System.Random.Next%2A> Methode sind innerhalb des Bereichs von der <xref:System.Byte> -Datentyp, wir können sicher umgewandelt werden (in c#) oder konvertieren Sie sie (in Visual Basic) von ganzen Zahlen in Byte.</span><span class="sxs-lookup"><span data-stu-id="bafcc-270">Because we are sure that the integer values returned by the <xref:System.Random.Next%2A> method are within the range of the <xref:System.Byte> data type, we can safely cast them (in C#) or convert them (in Visual Basic) from integers to bytes.</span></span>  
  
<a name="Array"></a>   
### <a name="retrieve-an-element-from-an-array-or-collection-at-random"></a><span data-ttu-id="bafcc-271">Nach dem Zufallsprinzip ein Element aus einem Array oder einer Auflistung abrufen</span><span class="sxs-lookup"><span data-stu-id="bafcc-271">Retrieve an element from an array or collection at random</span></span>  
 <span data-ttu-id="bafcc-272">Zufallszahlen dienen häufig als Indizes, um Werte aus Arrays oder Auflistungen abzurufen.</span><span class="sxs-lookup"><span data-stu-id="bafcc-272">Random numbers often serve as indexes to retrieve values from arrays or collections.</span></span> <span data-ttu-id="bafcc-273">Um einen zufälligen Indexwert abzurufen, rufen Sie die <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> -Methode, und verwenden Sie die untere Grenze des Arrays als Wert für die `minValue` Argument und der eins größer als die obere Grenze des Arrays als Wert des seine `maxValue` Argument.</span><span class="sxs-lookup"><span data-stu-id="bafcc-273">To retrieve a random index value, you can call the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method, and use the lower bound of the array as the value of its `minValue` argument and one greater than the upper bound of the array as the value of its `maxValue` argument.</span></span> <span data-ttu-id="bafcc-274">Für ein nullbasiertes Array entspricht dies dem seine <xref:System.Array.Length%2A> Eigenschaft oder eins größer als der Rückgabewert von der <xref:System.Array.GetUpperBound%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="bafcc-274">For a zero-based array, this is equivalent to its <xref:System.Array.Length%2A> property, or one greater than the value returned by the <xref:System.Array.GetUpperBound%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="bafcc-275">Das folgende Beispiel ruft den Namen eines Orts in den USA nach dem Zufallsprinzip aus einem Array aus Städten ab.</span><span class="sxs-lookup"><span data-stu-id="bafcc-275">The following example randomly retrieves the name of a city in the United States from an array of cities.</span></span>  
  
 [!code-cpp[System.Random#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/array1.cpp#10)]
 [!code-csharp[System.Random#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/array1.cs#10)]
 [!code-vb[System.Random#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/array1.vb#10)]  
  
<a name="UniqueArray"></a>   
### <a name="retrieve-a-unique-element-from-an-array-or-collection"></a><span data-ttu-id="bafcc-276">Ein eindeutiges Element aus einem Array oder einer Auflistung abrufen</span><span class="sxs-lookup"><span data-stu-id="bafcc-276">Retrieve a unique element from an array or collection</span></span>  
 <span data-ttu-id="bafcc-277">Eine Zufallszahlen-Generators kann immer doppelte Werte zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="bafcc-277">A random number generator can always return duplicate values.</span></span> <span data-ttu-id="bafcc-278">Der Bereich von Zahlen wird kleiner, oder die Anzahl der generierten Werte größer wird, wächst die Wahrscheinlichkeit von Duplikaten.</span><span class="sxs-lookup"><span data-stu-id="bafcc-278">As the range of numbers becomes smaller or the number of values generated becomes larger, the probability of duplicates grows.</span></span> <span data-ttu-id="bafcc-279">Wenn Zufallswerte eindeutig sein müssen, werden weitere Zahlen generiert, um Duplikate zu kompensieren zunehmend eine schlechte Leistung.</span><span class="sxs-lookup"><span data-stu-id="bafcc-279">If random values must be unique, more numbers are generated to compensate for duplicates, resulting in increasingly poor performance.</span></span>  
  
 <span data-ttu-id="bafcc-280">Es gibt eine Reihe von Techniken, dieses Szenario zu behandeln.</span><span class="sxs-lookup"><span data-stu-id="bafcc-280">There are a number of techniques to handle this scenario.</span></span> <span data-ttu-id="bafcc-281">Eine allgemeine Lösung besteht darin, erstellen Sie ein Array oder Auflistung mit den Werten abgerufen werden sollen und ein paralleles Array, das zufällige Gleitkommazahlen enthält.</span><span class="sxs-lookup"><span data-stu-id="bafcc-281">One common solution is to create an array or collection that contains the values to be retrieved, and a parallel array that contains random floating-point numbers.</span></span> <span data-ttu-id="bafcc-282">Das zweite Array wird mit Zufallszahlen aufgefüllt, die zum Zeitpunkt der erste Array erstellt wird, und die <xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=nameWithType> Methode wird verwendet, um das erste Array zu sortieren, indem Sie mithilfe der Werte in den parallelen Arrays.</span><span class="sxs-lookup"><span data-stu-id="bafcc-282">The second array is populated with random numbers at the time the first array is created, and the <xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=nameWithType> method is used to sort the first array by using the values in the parallel array.</span></span>  
  
 <span data-ttu-id="bafcc-283">Z. B. Wenn Sie ein Solitärspiel entwickeln, möchten Sie sicherstellen, dass jede Karte nur einmal verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="bafcc-283">For example, if you're developing a Solitaire game, you want to ensure that each card is used only once.</span></span> <span data-ttu-id="bafcc-284">Anstatt das Generieren von Zufallszahlen zum Abrufen einer Karte und nachverfolgen, ob diese Karte bereits behandelt wurde, können Sie ein paralleles Array von Zufallszahlen erstellen, die zum Sortieren der Deckblatt verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="bafcc-284">Instead of generating random numbers to retrieve a card and tracking whether that card has already been dealt, you can create a parallel array of random numbers that can be used to sort the deck.</span></span> <span data-ttu-id="bafcc-285">Sobald die Deckblatt sortiert ist, kann Ihre app einen Zeiger, um den Index des nächsten Karte auf der Deckblatt anzugeben verwalten.</span><span class="sxs-lookup"><span data-stu-id="bafcc-285">Once the deck is sorted, your app can maintain a pointer to indicate the index of the next card on the deck.</span></span>  
  
 <span data-ttu-id="bafcc-286">Dieser Ansatz wird anhand des folgenden Beispiels veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="bafcc-286">The following example illustrates this approach.</span></span> <span data-ttu-id="bafcc-287">Definiert eine `Card` -Klasse, stellt ein Playing Karte und `Dealer` -Klasse, die eine falsch platzierte Kartenstapel behandelt.</span><span class="sxs-lookup"><span data-stu-id="bafcc-287">It defines a `Card` class that represents a playing card and a `Dealer` class that deals a deck of shuffled cards.</span></span> <span data-ttu-id="bafcc-288">Die `Dealer` Klassenkonstruktor füllt zwei Arrays: eine `deck` Array, das über einen Klassenbereich und, die alle Karten Deckblatt; und einem lokalen darstellt `order` Array, das die gleiche von Elementen als Anzahl die `deck` array erstellt und gefüllt ist mit nach dem Zufallsprinzip generiert <xref:System.Double> Werte.</span><span class="sxs-lookup"><span data-stu-id="bafcc-288">The `Dealer` class constructor populates two arrays: a `deck` array that has class scope and that represents all the cards in the deck; and a local `order` array that has the same number of elements as the `deck` array and is populated with randomly generated <xref:System.Double> values.</span></span>  <span data-ttu-id="bafcc-289">Die <xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=nameWithType> Methode wird aufgerufen, um das Sortieren der `deck` Array basierend auf den Werten in der `order` Array.</span><span class="sxs-lookup"><span data-stu-id="bafcc-289">The <xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=nameWithType> method is then called to sort the `deck` array based on the values in the `order` array.</span></span>  
  
 [!code-cpp[System.Random#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/uniquearray1.cpp#11)]
 [!code-csharp[System.Random#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/uniquearray1.cs#11)]
 [!code-vb[System.Random#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/uniquearray1.vb#11)]  
  
   
  
## Examples  
 <span data-ttu-id="bafcc-290">Das folgende Beispiel erstellt eine einzelne Zufallszahlen-Generators und ruft seine <xref:System.Random.NextBytes%2A>, <xref:System.Random.Next%2A>, und <xref:System.Random.NextDouble%2A> Methoden zum Generieren von Sequenzen von Zufallszahlen in verschiedenen Bereichen.</span><span class="sxs-lookup"><span data-stu-id="bafcc-290">The following example creates a single random number generator and calls its <xref:System.Random.NextBytes%2A>, <xref:System.Random.Next%2A>, and <xref:System.Random.NextDouble%2A> methods to generate sequences of random numbers within different ranges.</span></span>  
  
 [!code-cpp[System.Random#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/random2.cpp#2)]
 [!code-csharp[System.Random#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/Random2.cs#2)]
 [!code-vb[System.Random#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/Random2.vb#2)]  
  
 <span data-ttu-id="bafcc-291">Das folgende Beispiel generiert eine zufällige ganze Zahl, die als Index verwendet einen Zeichenfolgenwert aus einem Array abgerufen.</span><span class="sxs-lookup"><span data-stu-id="bafcc-291">The following example generates a random integer that it uses as an index to retrieve a string value from an array.</span></span>  
  
 [!code-cpp[System.Random.Next#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Next/CPP/next1.cpp#3)]
 [!code-csharp[System.Random.Next#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Next/CS/next1.cs#3)]
 [!code-vb[System.Random.Next#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Next/VB/next1.vb#3)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="bafcc-292">In .NET Framework 1.0 und 1.1, eine minimale Implementierung einer Klasse abgeleitet <see cref="T:System.Random" /> erforderlich sind, überschreiben die <see cref="M:System.Random.Sample" /> Methode, um einen neuen oder geänderten Algorithmus zum Generieren von Zufallszahlen zu definieren.</span><span class="sxs-lookup"><span data-stu-id="bafcc-292">In the .NET Framework 1.0 and 1.1, a minimum implementation of a class derived from <see cref="T:System.Random" /> required overriding the <see cref="M:System.Random.Sample" /> method to define a new or modified algorithm for generating random numbers.</span></span> <span data-ttu-id="bafcc-293">Die abgeleitete Klasse konnten klicken Sie dann auf die Implementierung der Basisklasse der Verlassen der <see cref="M:System.Random.Next" />, <see cref="M:System.Random.Next(System.Int32)" />, <see cref="M:System.Random.Next(System.Int32,System.Int32)" />, <see cref="M:System.Random.NextBytes(System.Byte[])" />, und <see cref="M:System.Random.NextDouble" /> Methoden zur Implementierung der abgeleiteten Klasse Aufrufen der <see cref="M:System.Random.Sample" /> Methode.</span><span class="sxs-lookup"><span data-stu-id="bafcc-293">The derived class could then rely on the base class implementation of the <see cref="M:System.Random.Next" />, <see cref="M:System.Random.Next(System.Int32)" />, <see cref="M:System.Random.Next(System.Int32,System.Int32)" />, <see cref="M:System.Random.NextBytes(System.Byte[])" />, and <see cref="M:System.Random.NextDouble" /> methods to call the derived class implementation of the <see cref="M:System.Random.Sample" /> method.</span></span>  
  
 <span data-ttu-id="bafcc-294">In .NET Framework 2.0 und höher, das Verhalten der <see cref="M:System.Random.Next" />, <see cref="M:System.Random.Next(System.Int32,System.Int32)" />, und <see cref="M:System.Random.NextBytes(System.Byte[])" /> Methoden wurden geändert, sodass diese Methoden nicht unbedingt Implementierung der abgeleiteten Klasse Aufrufen der <see cref="M:System.Random.Sample" /> Methode.</span><span class="sxs-lookup"><span data-stu-id="bafcc-294">In the .NET Framework 2.0 and later, the behavior of the <see cref="M:System.Random.Next" />, <see cref="M:System.Random.Next(System.Int32,System.Int32)" />, and <see cref="M:System.Random.NextBytes(System.Byte[])" /> methods have changed so that these methods do not necessarily call the derived class implementation of the <see cref="M:System.Random.Sample" /> method.</span></span> <span data-ttu-id="bafcc-295">Folglich von abgeleiteten Klassen <see cref="T:System.Random" /> , die als Ziel .NET Framework 2.0 und höher sollten auch diese drei Methoden überschreiben.</span><span class="sxs-lookup"><span data-stu-id="bafcc-295">As a result, classes derived from <see cref="T:System.Random" /> that target the .NET Framework 2.0 and later should also override these three methods.</span></span></para>
    </block>
    <block subset="none" type="usage">
      <para><span data-ttu-id="bafcc-296">Die Implementierung des Zufallszahlen-Generator in der <see cref="T:System.Random" /> Klasse ist nicht unbedingt Hauptversionen von .NET Framework unverändert.</span><span class="sxs-lookup"><span data-stu-id="bafcc-296">The implementation of the random number generator in the <see cref="T:System.Random" /> class isn't guaranteed to remain the same across major versions of the .NET Framework.</span></span> <span data-ttu-id="bafcc-297">Daher sollte nicht Sie davon ausgehen, dass der gleiche Ausgangswert in derselben Reihenfolge an pseudozufälligen Schlüsselbytes in verschiedenen Versionen von .NET Framework führt.</span><span class="sxs-lookup"><span data-stu-id="bafcc-297">As a result, you shouldn't assume that the same seed will result in the same pseudo-random sequence in different versions of the .NET Framework.</span></span></para>
    </block>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bafcc-298">Initialisiert eine neue Instanz der <see cref="T:System.Random" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="bafcc-298">Initializes a new instance of the <see cref="T:System.Random" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Random ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Random();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bafcc-299">Initialisiert eine neue Instanz der <see cref="T:System.Random" />-Klasse unter Verwendung eines zeitabhängigen Standardstartwerts.</span><span class="sxs-lookup"><span data-stu-id="bafcc-299">Initializes a new instance of the <see cref="T:System.Random" /> class, using a time-dependent default seed value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bafcc-300">Der Standardstartwert wird aus der Systemuhr abgeleitet und verfügt über begrenzte Auflösung.</span><span class="sxs-lookup"><span data-stu-id="bafcc-300">The default seed value is derived from the system clock and has finite resolution.</span></span> <span data-ttu-id="bafcc-301">Als Ergebnis unterschiedliche <xref:System.Random> durch einen Aufruf des Standardkonstruktors in Zufallszahlengeneratoren erstellten Objekte müssen identische Ausgangswert Standardwerte, und daher entsteht identische Sätze von Zufallszahlen.</span><span class="sxs-lookup"><span data-stu-id="bafcc-301">As a result, different <xref:System.Random> objects that are created in close succession by a call to the default constructor will have identical default seed values and, therefore, will produce identical sets of random numbers.</span></span> <span data-ttu-id="bafcc-302">Dieses Problem kann vermieden werden, mithilfe einer einzelnes <xref:System.Random> Objekt, das alle Zufallszahlen generiert.</span><span class="sxs-lookup"><span data-stu-id="bafcc-302">This problem can be avoided by using a single <xref:System.Random> object to generate all random numbers.</span></span> <span data-ttu-id="bafcc-303">Sie können auch umgehen, es durch Ändern der Startwert der Systemuhr zurückgegebenes und klicken Sie dann auf diese neuen Ausgangswerts explizite Angabe der <xref:System.Random.%23ctor%28System.Int32%29> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="bafcc-303">You can also work around it by modifying the seed value returned by the system clock and then explicitly providing this new seed value to the <xref:System.Random.%23ctor%28System.Int32%29> constructor.</span></span> <span data-ttu-id="bafcc-304">Weitere Informationen finden Sie unter der <xref:System.Random.%23ctor%28System.Int32%29> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="bafcc-304">For more information, see the <xref:System.Random.%23ctor%28System.Int32%29> constructor.</span></span>  
  
 <span data-ttu-id="bafcc-305">Rufen Sie diesen Konstruktor, gegebenenfalls Ihre Zufallszahlen-Generators eine zufällige Sequenz von Zahlen zu generieren.</span><span class="sxs-lookup"><span data-stu-id="bafcc-305">Call this constructor if you want your random number generator to generate a random sequence of numbers.</span></span> <span data-ttu-id="bafcc-306">Um einer festen Reihenfolge von Zufallszahlen generieren, die für verschiedene Zufallszahlengeneratoren identisch sind, rufen Sie die <xref:System.Random.%23ctor%28System.Int32%29> Konstruktor mit einem festen Ausgangswert.</span><span class="sxs-lookup"><span data-stu-id="bafcc-306">To generate a fixed  sequence of random numbers that will be the same for different random number generators, call the <xref:System.Random.%23ctor%28System.Int32%29> constructor with a fixed seed value .</span></span> <span data-ttu-id="bafcc-307">Dies <xref:System.Random> Konstruktorüberladung wird häufig verwendet, beim Testen von apps, die Zufallszahlen verwenden.</span><span class="sxs-lookup"><span data-stu-id="bafcc-307">This <xref:System.Random> constructor overload is frequently used when testing apps that use random numbers.</span></span>  
  
 <span data-ttu-id="bafcc-308">Nachdem Sie den Zufallszahlen-Generator instanziiert haben, rufen Sie einzelne <xref:System.Random> Methoden, wie z. B. <xref:System.Random.Next> oder <xref:System.Random.NextDouble>, um zufällige Zahlen zu generieren.</span><span class="sxs-lookup"><span data-stu-id="bafcc-308">Once you've instantiated the random number generator, you call individual <xref:System.Random> methods, such as <xref:System.Random.Next> or <xref:System.Random.NextDouble>, to generate random numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bafcc-309">Im folgenden Beispiel wird den Standardkonstruktor drei instanziieren <xref:System.Random> Objekte und eine Sequenz von fünf zufällige ganze Zahlen enthält, für die einzelnen.</span><span class="sxs-lookup"><span data-stu-id="bafcc-309">The following example uses the default constructor to instantiate three <xref:System.Random> objects and displays a sequence of five random integers for each.</span></span> <span data-ttu-id="bafcc-310">Da die ersten beiden <xref:System.Random> Objekte schließen nacheinander erstellt werden, sie mit identischen Startwerten basierend auf der Systemzeit instanziiert werden und daher eine identische Folge von zufälligen Zahlen hervorrufen.</span><span class="sxs-lookup"><span data-stu-id="bafcc-310">Because the first two <xref:System.Random> objects are created in close succession, they are instantiated using identical seed values based on the system clock and, therefore, they produce an identical sequence of random numbers.</span></span> <span data-ttu-id="bafcc-311">Auf der anderen Seite der Standardkonstruktor des dritten <xref:System.Random> Objekt wird aufgerufen, nachdem eine Verzögerung von zwei Sekunden durch einen Aufruf verursacht die <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="bafcc-311">On the other hand, the default constructor of the third <xref:System.Random> object is called after a two-second delay caused by calling the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="bafcc-312">Da dies einen anderer Startwert für die dritte erzeugt <xref:System.Random> -Objekt, es wird eine andere Sequenz von Zufallszahlen generiert.</span><span class="sxs-lookup"><span data-stu-id="bafcc-312">Because this produces a different seed value for the third <xref:System.Random> object, it produces a different sequence of random numbers.</span></span>  
  
 [!code-csharp[System.Random.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Ctor/CS/ctor1.cs#2)]
 [!code-vb[System.Random.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Ctor/VB/ctor1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Random (int Seed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 Seed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Seed As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Random(int Seed);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="Seed" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Seed"><span data-ttu-id="bafcc-313">Eine Zahl, mit der ein Startwert für Folgen von Pseudozufallszahlen berechnet wird.</span><span class="sxs-lookup"><span data-stu-id="bafcc-313">A number used to calculate a starting value for the pseudo-random number sequence.</span></span> <span data-ttu-id="bafcc-314">Wenn eine negative Zahl angegeben wird, wird der absolute Wert der Zahl verwendet.</span><span class="sxs-lookup"><span data-stu-id="bafcc-314">If a negative number is specified, the absolute value of the number is used.</span></span></param>
        <summary><span data-ttu-id="bafcc-315">Initialisiert eine neue Instanz der <see cref="T:System.Random" />-Klasse unter Verwendung des angegebenen Startwerts.</span><span class="sxs-lookup"><span data-stu-id="bafcc-315">Initializes a new instance of the <see cref="T:System.Random" /> class, using the specified seed value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bafcc-316">Bereitstellen eines identischen Startwerts zu anderen <xref:System.Random> Objekte bewirkt, dass jede Instanz identische Sequenzen von Zufallszahlen erzeugen.</span><span class="sxs-lookup"><span data-stu-id="bafcc-316">Providing an identical seed value to different <xref:System.Random> objects causes each instance to produce identical sequences of random numbers.</span></span> <span data-ttu-id="bafcc-317">Dies erfolgt häufig beim Testen von apps, die auf Zufallszahlen-Generatoren abhängig sind.</span><span class="sxs-lookup"><span data-stu-id="bafcc-317">This is often done when testing apps that rely on random number generators.</span></span>  
  
 <span data-ttu-id="bafcc-318">Wenn Ihre Anwendung verschiedene Folgen von Zufallszahlen erfordert, rufen Sie diesen Konstruktor wiederholt mit verschiedenen Ausgangswerte.</span><span class="sxs-lookup"><span data-stu-id="bafcc-318">If your application requires different random number sequences, invoke this constructor repeatedly with different seed values.</span></span> <span data-ttu-id="bafcc-319">Eine Möglichkeit zur Erzeugung eines Werts eindeutige Ausgangswert ist zum erleichtern der zeitabhängige.</span><span class="sxs-lookup"><span data-stu-id="bafcc-319">One way to produce a unique seed value is to make it time-dependent.</span></span> <span data-ttu-id="bafcc-320">Die Systemuhr, z. B. den Ausgangswert abgeleitet werden, als die <xref:System.Random.%23ctor> Überladung ist.</span><span class="sxs-lookup"><span data-stu-id="bafcc-320">For example, derive the seed value from the system clock, as the <xref:System.Random.%23ctor> overload does.</span></span> <span data-ttu-id="bafcc-321">Die Systemuhr möglicherweise jedoch nicht ausreichend Auflösung verschiedene Aufrufen dieses Konstruktors mit einem anderen Ausgangswert angeben.</span><span class="sxs-lookup"><span data-stu-id="bafcc-321">However, the system clock might not have sufficient resolution to provide different invocations of this constructor with a different seed value.</span></span> <span data-ttu-id="bafcc-322">Dies führt in random Number-Generatoren, die identische Sequenzen von pseudozufälligen Zahlen zu generieren, wie die ersten beiden veranschaulicht <xref:System.Random> Objekte im folgenden Beispiel.</span><span class="sxs-lookup"><span data-stu-id="bafcc-322">This results in random number generators that generate identical sequences of pseudo-random numbers, as illustrated by the first two <xref:System.Random> objects in the following example.</span></span> <span data-ttu-id="bafcc-323">Um dies zu verhindern, wenden Sie einen Algorithmus zum unterscheiden des Seed-Werts in jeder Aufruf oder ein Aufruf der <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> Methode, um sicherzustellen, dass Sie jeder Konstruktor mit einem anderen Ausgangswert angeben.</span><span class="sxs-lookup"><span data-stu-id="bafcc-323">To prevent this, apply an algorithm to differentiate the seed value in each invocation, or call the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method to ensure that you provide each constructor with a different seed value.</span></span>  
  
 [!code-csharp[System.Random.Ctor#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Ctor/CS/ctor4.cs#4)]
 [!code-vb[System.Random.Ctor#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Ctor/VB/ctor4.vb#4)]  
  
 <span data-ttu-id="bafcc-324">Eine weitere Möglichkeit besteht, instanziieren Sie ein einzelnes <xref:System.Random> Objekt, das Sie verwenden, um die Zufallszahlen in Ihrer Anwendung zu generieren.</span><span class="sxs-lookup"><span data-stu-id="bafcc-324">Another option is to instantiate a single <xref:System.Random> object that you use to generate all the random numbers in your application.</span></span> <span data-ttu-id="bafcc-325">Dies ergibt eine etwas bessere Leistung, da Instanziieren eines Zufallszahlen-Generators relativ teuer ist.</span><span class="sxs-lookup"><span data-stu-id="bafcc-325">This yields slightly better performance, since instantiating a random number generator is fairly expensive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bafcc-326">Das folgende Beispiel erstellt <xref:System.Random> Objekte mit dem Konstruktor der Klasse, die nimmt einen ausgangswertparameter und generiert eine Sequenz von Zufallszahlen und Double-Werte.</span><span class="sxs-lookup"><span data-stu-id="bafcc-326">The following example creates <xref:System.Random> objects with the class constructor that takes a seed parameter and generates a sequence of random integers and doubles.</span></span> <span data-ttu-id="bafcc-327">Im Beispiel wird veranschaulicht, dass die gleiche Sequenz generiert, wird bei der <xref:System.Random> Objekt erneut mit dem Konstruktor und einem Startwert Parameter erstellt.</span><span class="sxs-lookup"><span data-stu-id="bafcc-327">The example illustrates that the same sequence is generated when the <xref:System.Random> object is created again with the constructor and seed parameter.</span></span>  
  
 [!code-cpp[System.Random.Ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Ctor/CPP/ctor.cpp#1)]
 [!code-csharp[System.Random.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Ctor/CS/ctor.cs#1)]
 [!code-vb[System.Random.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Ctor/VB/ctor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Next">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bafcc-328">Gibt eine Zufallsganzzahl zurück.</span><span class="sxs-lookup"><span data-stu-id="bafcc-328">Returns a random integer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public virtual int Next ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Next() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.Next" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Next () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Next();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bafcc-329">Gibt eine nicht negative Zufallsganzzahl zurück.</span><span class="sxs-lookup"><span data-stu-id="bafcc-329">Returns a non-negative random integer.</span></span></summary>
        <returns><span data-ttu-id="bafcc-330">Eine ganze 32-Bit-Zahl mit Vorzeichen, die größer oder gleich 0 (null) und kleiner als <see cref="F:System.Int32.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="bafcc-330">A 32-bit signed integer that is greater than or equal to 0 and less than <see cref="F:System.Int32.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bafcc-331"><xref:System.Random.Next%2A?displayProperty=nameWithType> generiert eine zufällige Zahl, deren Wert liegt, zwischen 0 und kleiner als <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="bafcc-331"><xref:System.Random.Next%2A?displayProperty=nameWithType> generates a random number whose value ranges from 0 to less than <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="bafcc-332">Verwenden Sie zum Generieren einer zufälligen Zahl, deren Wert im Bereich, von 0 zu einer anderen positive Zahl der <xref:System.Random.Next%28System.Int32%29?displayProperty=nameWithType> -methodenüberladung.</span><span class="sxs-lookup"><span data-stu-id="bafcc-332">To generate a random number whose value ranges from 0 to some other positive number, use the <xref:System.Random.Next%28System.Int32%29?displayProperty=nameWithType> method overload.</span></span> <span data-ttu-id="bafcc-333">Verwenden Sie zum Generieren einer Zufallszahl in einen anderen Bereich der <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> -methodenüberladung.</span><span class="sxs-lookup"><span data-stu-id="bafcc-333">To generate a random number within a different range, use the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bafcc-334">Im folgenden Beispiel wird die wiederholte Aufrufe an die <xref:System.Random.Next%2A> Methode zum Generieren einer bestimmten Anzahl von zufälligen Zahlen, die vom Benutzer angefordert wird.</span><span class="sxs-lookup"><span data-stu-id="bafcc-334">The following example makes repeated calls to the <xref:System.Random.Next%2A> method to generate a specific number of random numbers requested by the user.</span></span> <span data-ttu-id="bafcc-335">Die <xref:System.Console.ReadLine%2A?displayProperty=nameWithType> Methode wird verwendet, um Kundeninformationen zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="bafcc-335">The <xref:System.Console.ReadLine%2A?displayProperty=nameWithType> method is used to get customer input.</span></span>  
  
 [!code-cpp[System.Random.Next#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Next/CPP/next3.cpp#5)]
 [!code-csharp[System.Random.Next#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Next/CS/next3.cs#5)]
 [!code-vb[System.Random.Next#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Next/VB/next3.vb#5)]  
  
 <span data-ttu-id="bafcc-336">Im folgende Beispiel wird eine Klasse von abgeleitet <xref:System.Random> zum Generieren von zufälligen Zahlenfolge, deren Verteilung unterscheidet sich, von der einheitlichen Verteilung von generiert die <xref:System.Random.Sample%2A> Methode der Basisklasse.</span><span class="sxs-lookup"><span data-stu-id="bafcc-336">The following example derives a class from <xref:System.Random> to generate a sequence of random numbers whose distribution differs from the uniform distribution generated by the <xref:System.Random.Sample%2A> method of the base class.</span></span> <span data-ttu-id="bafcc-337">Es überschreibt die <xref:System.Random.Sample%2A> Methode, um die Verteilung von Zufallszahlen und überschreibt bereitzustellen die <xref:System.Random.Next%2A?displayProperty=nameWithType> Methode, um eine Reihe von Zufallszahlen verwenden.</span><span class="sxs-lookup"><span data-stu-id="bafcc-337">It overrides the <xref:System.Random.Sample%2A> method to provide the distribution of random numbers, and overrides the <xref:System.Random.Next%2A?displayProperty=nameWithType> method to use series of random numbers.</span></span>  
  
 [!code-cpp[System.Random.Sample#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Sample/cpp/sampleex.cpp#1)]
 [!code-csharp[System.Random.Sample#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Sample/CS/sample.cs#1)]
 [!code-vb[System.Random.Sample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Sample/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="bafcc-338">Ab .NET Framework, Version 2.0, wenn Sie beim Ableiten einer Klasse von <see cref="T:System.Random" /> und überschreiben die <see cref="M:System.Random.Sample" /> -Methode, die durch die Implementierung der abgeleiteten Klasse zur Verfügung gestellte Verteilung der <see cref="M:System.Random.Sample" /> Methode wird nicht verwendet, in der Basisklasse aufrufen Implementierung der <see cref="M:System.Random.Next" /> Methode.</span><span class="sxs-lookup"><span data-stu-id="bafcc-338">Starting with the .NET Framework version 2.0, if you derive a class from <see cref="T:System.Random" /> and override the <see cref="M:System.Random.Sample" /> method, the distribution provided by the derived class implementation of the <see cref="M:System.Random.Sample" /> method is not used in calls to the base class implementation of the <see cref="M:System.Random.Next" /> method.</span></span> <span data-ttu-id="bafcc-339">Die gleichverteilung stattdessen zurückgegeben, der vom Basistyp <see cref="T:System.Random" /> Klasse dient.</span><span class="sxs-lookup"><span data-stu-id="bafcc-339">Instead, the uniform distribution returned by the base <see cref="T:System.Random" /> class is used.</span></span> <span data-ttu-id="bafcc-340">Dieses Verhalten verbessert die gesamtleistung der <see cref="T:System.Random" /> Klasse.</span><span class="sxs-lookup"><span data-stu-id="bafcc-340">This behavior improves the overall performance of the <see cref="T:System.Random" /> class.</span></span> <span data-ttu-id="bafcc-341">So ändern Sie dieses Verhalten so rufen Sie die <see cref="M:System.Random.Sample" /> Methode in der abgeleiteten Klasse, müssen Sie auch überschreiben die <see cref="M:System.Random.Next" /> Methode.</span><span class="sxs-lookup"><span data-stu-id="bafcc-341">To modify this behavior to call the <see cref="M:System.Random.Sample" /> method in the derived class, you must also override the <see cref="M:System.Random.Next" /> method.</span></span></para>
        </block>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public virtual int Next (int maxValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Next(int32 maxValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.Next(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Next (maxValue As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Next(int maxValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxValue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="maxValue"><span data-ttu-id="bafcc-342">Die exklusive obere Grenze der Zufallszahl, die generiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="bafcc-342">The exclusive upper bound of the random number to be generated.</span></span> <span data-ttu-id="bafcc-343"><c>maxValue</c> muss größer oder gleich 0 (null) sein.</span><span class="sxs-lookup"><span data-stu-id="bafcc-343"><c>maxValue</c> must be greater than or equal to 0.</span></span></param>
        <summary><span data-ttu-id="bafcc-344">Gibt eine nicht negative Zufallsganzzahl zurück, die kleiner als das angegebene Maximum ist.</span><span class="sxs-lookup"><span data-stu-id="bafcc-344">Returns a non-negative random integer that is less than the specified maximum.</span></span></summary>
        <returns><span data-ttu-id="bafcc-345">Eine ganze 32-Bit-Zahl mit Vorzeichen, die größer oder gleich 0 (null) und kleiner als <paramref name="maxValue" /> ist, d.h., der Bereich der Rückgabewerte umfasst in der Regel 0 (null), aber nicht <paramref name="maxValue" />.</span><span class="sxs-lookup"><span data-stu-id="bafcc-345">A 32-bit signed integer that is greater than or equal to 0, and less than <paramref name="maxValue" />; that is, the range of return values ordinarily includes 0 but not <paramref name="maxValue" />.</span></span> <span data-ttu-id="bafcc-346">Wenn jedoch <paramref name="maxValue" /> 0 (null) entspricht, wird <paramref name="maxValue" /> zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="bafcc-346">However, if <paramref name="maxValue" /> equals 0, <paramref name="maxValue" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bafcc-347">Die <xref:System.Random.Next%28System.Int32%29> Überladung gibt zufälligen ganze Zahlen dieses Bereichs von 0 bis `maxValue` – 1.</span><span class="sxs-lookup"><span data-stu-id="bafcc-347">The <xref:System.Random.Next%28System.Int32%29> overload returns random integers that range from 0 to `maxValue` – 1.</span></span> <span data-ttu-id="bafcc-348">Jedoch wenn `maxValue` gleich 0 ist, die Methode gibt 0 zurück.</span><span class="sxs-lookup"><span data-stu-id="bafcc-348">However, if `maxValue` is 0, the method returns 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bafcc-349">Im folgenden Beispiel wird die zufällige ganze Zahlen mit verschiedenen Überladungen der <xref:System.Random.Next%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="bafcc-349">The following example generates random integers with various overloads of the <xref:System.Random.Next%2A> method.</span></span>  
  
 [!code-cpp[System.Random.Next#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Next/CPP/next.cpp#1)]
 [!code-csharp[System.Random.Next#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Next/CS/next.cs#1)]
 [!code-vb[System.Random.Next#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Next/VB/next.vb#1)]  
  
 <span data-ttu-id="bafcc-350">Das folgende Beispiel generiert eine zufällige ganze Zahl, die als Index verwendet einen Zeichenfolgenwert aus einem Array abgerufen.</span><span class="sxs-lookup"><span data-stu-id="bafcc-350">The following example generates a random integer that it uses as an index to retrieve a string value from an array.</span></span> <span data-ttu-id="bafcc-351">Da der höchste Index des Arrays 1 kleiner als die Länge ist, den Wert des ist der <xref:System.Array.Length%2A?displayProperty=nameWithType> -Eigenschaft angegeben ist, als eine der `maxValue` Parameter.</span><span class="sxs-lookup"><span data-stu-id="bafcc-351">Because the highest index of the array is one less than its length, the value of the <xref:System.Array.Length%2A?displayProperty=nameWithType> property is supplied as a the `maxValue` parameter.</span></span>  
  
 [!code-cpp[System.Random.Next#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Next/CPP/next1.cpp#3)]
 [!code-csharp[System.Random.Next#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Next/CS/next1.cs#3)]
 [!code-vb[System.Random.Next#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Next/VB/next1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bafcc-352"><paramref name="maxValue" /> ist kleiner als 0.</span><span class="sxs-lookup"><span data-stu-id="bafcc-352"><paramref name="maxValue" /> is less than 0.</span></span></exception>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public virtual int Next (int minValue, int maxValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Next(int32 minValue, int32 maxValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.Next(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Next (minValue As Integer, maxValue As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Next(int minValue, int maxValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minValue" Type="System.Int32" />
        <Parameter Name="maxValue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minValue"><span data-ttu-id="bafcc-353">Die inklusive untere Grenze der zurückgegebenen Zufallszahl.</span><span class="sxs-lookup"><span data-stu-id="bafcc-353">The inclusive lower bound of the random number returned.</span></span></param>
        <param name="maxValue"><span data-ttu-id="bafcc-354">Die exklusive obere Grenze der zurückgegebenen Zufallszahl.</span><span class="sxs-lookup"><span data-stu-id="bafcc-354">The exclusive upper bound of the random number returned.</span></span> <span data-ttu-id="bafcc-355"><c>maxValue</c> muss größer oder gleich <c>minValue</c> sein.</span><span class="sxs-lookup"><span data-stu-id="bafcc-355"><c>maxValue</c> must be greater than or equal to <c>minValue</c>.</span></span></param>
        <summary><span data-ttu-id="bafcc-356">Gibt eine Zufallsganzzahl zurück, die in einem angegebenen Bereich liegt.</span><span class="sxs-lookup"><span data-stu-id="bafcc-356">Returns a random integer that is within a specified range.</span></span></summary>
        <returns><span data-ttu-id="bafcc-357">Eine 32-Bit-Ganzzahl mit Vorzeichen, die größer oder gleich <paramref name="minValue" /> und kleiner als <paramref name="maxValue" /> ist, d. h., der Bereich der Rückgabewerte umfasst <paramref name="minValue" />, aber nicht <paramref name="maxValue" />.</span><span class="sxs-lookup"><span data-stu-id="bafcc-357">A 32-bit signed integer greater than or equal to <paramref name="minValue" /> and less than <paramref name="maxValue" />; that is, the range of return values includes <paramref name="minValue" /> but not <paramref name="maxValue" />.</span></span> <span data-ttu-id="bafcc-358">Wenn <paramref name="minValue" /> gleich <paramref name="maxValue" /> ist, wird <paramref name="minValue" /> zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="bafcc-358">If <paramref name="minValue" /> equals <paramref name="maxValue" />, <paramref name="minValue" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bafcc-359">Die <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> Überladung gibt eine zufälligen ganze Zahlen zwischen `minValue` auf `maxValue` – 1.</span><span class="sxs-lookup"><span data-stu-id="bafcc-359">The <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> overload returns random integers that range from `minValue` to `maxValue` – 1.</span></span> <span data-ttu-id="bafcc-360">Jedoch wenn `maxValue` gleich `minValue`, gibt die Methode `minValue`.</span><span class="sxs-lookup"><span data-stu-id="bafcc-360">However, if `maxValue` equals `minValue`, the method returns `minValue`.</span></span>  
  
 <span data-ttu-id="bafcc-361">Im Gegensatz zu anderen Überladungen auf der die <xref:System.Random.Next%2A> -Methode, die nur positive Werte zurückzugeben, kann diese Methode eine negative Zufallsganzzahl zurück.</span><span class="sxs-lookup"><span data-stu-id="bafcc-361">Unlike the other overloads of the <xref:System.Random.Next%2A> method, which return only non-negative values, this method can return a negative random integer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bafcc-362">Im folgenden Beispiel wird die <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> Methode zum Generieren von Zufallszahlen mit drei verschiedenen Wertebereichen.</span><span class="sxs-lookup"><span data-stu-id="bafcc-362">The following example uses the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method to generate random integers with three distinct ranges.</span></span> <span data-ttu-id="bafcc-363">Beachten Sie, dass der vom System bereitgestellten Ausgangswert übergeben, um die genaue Ausgabe des Beispiels hängt die <xref:System.Random> Klassenkonstruktor.</span><span class="sxs-lookup"><span data-stu-id="bafcc-363">Note that the exact output from the example depends on the system-supplied seed value passed to the <xref:System.Random> class constructor.</span></span>  
  
 [!code-cpp[System.Random.Next#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Next/CPP/next2.cpp#2)]
 [!code-csharp[System.Random.Next#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Next/CS/Next2.cs#2)]
 [!code-vb[System.Random.Next#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Next/VB/next2.vb#2)]  
  
 <span data-ttu-id="bafcc-364">Das folgende Beispiel generiert eine zufällige ganze Zahl, die als Index verwendet einen Zeichenfolgenwert aus einem Array abgerufen.</span><span class="sxs-lookup"><span data-stu-id="bafcc-364">The following example generates a random integer that it uses as an index to retrieve a string value from an array.</span></span> <span data-ttu-id="bafcc-365">Da der höchste Index des Arrays 1 kleiner als die Länge ist, den Wert des ist der <xref:System.Array.Length%2A?displayProperty=nameWithType> -Eigenschaft angegeben ist, als eine der `maxValue` Parameter.</span><span class="sxs-lookup"><span data-stu-id="bafcc-365">Because the highest index of the array is one less than its length, the value of the <xref:System.Array.Length%2A?displayProperty=nameWithType> property is supplied as a the `maxValue` parameter.</span></span>  
  
 [!code-cpp[System.Random.Next#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Next/CPP/next4.cpp#4)]
 [!code-csharp[System.Random.Next#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Next/CS/next4.cs#4)]
 [!code-vb[System.Random.Next#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Next/VB/next4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bafcc-366"><paramref name="minValue" /> ist größer als <paramref name="maxValue" />.</span><span class="sxs-lookup"><span data-stu-id="bafcc-366"><paramref name="minValue" /> is greater than <paramref name="maxValue" />.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="bafcc-367">Ab .NET Framework, Version 2.0, wenn Sie beim Ableiten einer Klasse von <see cref="T:System.Random" /> und überschreiben die <see cref="M:System.Random.Sample" /> -Methode, die durch die Implementierung der abgeleiteten Klasse zur Verfügung gestellte Verteilung der <see cref="M:System.Random.Sample" /> Methode wird nicht verwendet, in der Basisklasse aufrufen Implementierung von der <see cref="M:System.Random.Next(System.Int32,System.Int32)" /> Methode zu überladen, wenn der Unterschied zwischen der <paramref name="minValue" /> und <paramref name="maxValue" /> Parameter ist größer als <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="bafcc-367">Starting with the .NET Framework version 2.0, if you derive a class from <see cref="T:System.Random" /> and override the <see cref="M:System.Random.Sample" /> method, the distribution provided by the derived class implementation of the <see cref="M:System.Random.Sample" /> method is not used in calls to the base class implementation of the <see cref="M:System.Random.Next(System.Int32,System.Int32)" /> method overload if the difference between the <paramref name="minValue" /> and <paramref name="maxValue" /> parameters is greater than <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="bafcc-368">Die gleichverteilung stattdessen zurückgegeben, der vom Basistyp <see cref="T:System.Random" /> Klasse dient.</span><span class="sxs-lookup"><span data-stu-id="bafcc-368">Instead, the uniform distribution returned by the base <see cref="T:System.Random" /> class is used.</span></span> <span data-ttu-id="bafcc-369">Dieses Verhalten verbessert die gesamtleistung der <see cref="T:System.Random" /> Klasse.</span><span class="sxs-lookup"><span data-stu-id="bafcc-369">This behavior improves the overall performance of the <see cref="T:System.Random" /> class.</span></span> <span data-ttu-id="bafcc-370">So ändern Sie dieses Verhalten so rufen Sie die <see cref="M:System.Random.Sample" /> Methode in der abgeleiteten Klasse, müssen Sie auch überschreiben die <see cref="M:System.Random.Next(System.Int32,System.Int32)" /> -methodenüberladung.</span><span class="sxs-lookup"><span data-stu-id="bafcc-370">To modify this behavior to call the <see cref="M:System.Random.Sample" /> method in the derived class, you must also override the <see cref="M:System.Random.Next(System.Int32,System.Int32)" /> method overload.</span></span></para>
        </block>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="NextBytes">
      <MemberSignature Language="C#" Value="public virtual void NextBytes (byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NextBytes(unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.NextBytes(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub NextBytes (buffer As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void NextBytes(cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="bafcc-371">Ein Bytearray, das für Zufallszahlen vorgesehen ist.</span><span class="sxs-lookup"><span data-stu-id="bafcc-371">An array of bytes to contain random numbers.</span></span></param>
        <summary><span data-ttu-id="bafcc-372">Füllt die Elemente eines angegebenen Bytearrays mit Zufallszahlen.</span><span class="sxs-lookup"><span data-stu-id="bafcc-372">Fills the elements of a specified array of bytes with random numbers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bafcc-373">Jedes Element des Arrays von Bytes in eine Zufallszahl größer oder gleich 0 (null) festgelegt ist und kleiner als oder gleich <xref:System.Byte.MaxValue>.</span><span class="sxs-lookup"><span data-stu-id="bafcc-373">Each element of the array of bytes is set to a random number greater than or equal to 0, and less than or equal to <xref:System.Byte.MaxValue>.</span></span>  
  
 <span data-ttu-id="bafcc-374">Beispielsweise um eine kryptografisch sicheren Zufallszahl, die für das Erstellen eines zufälligen Kennworts generieren möchten, verwenden Sie eine Methode wie z. B. <xref:System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="bafcc-374">For example, to generate a cryptographically secured random number suitable for creating a random password, use a method such as <xref:System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bafcc-375">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Random.NextBytes%2A> Methode, um ein Array von Bytes mit zufälliger Bytewerte zu füllen.</span><span class="sxs-lookup"><span data-stu-id="bafcc-375">The following example demonstrates how to use the <xref:System.Random.NextBytes%2A> method to fill an array of bytes with random byte values.</span></span>  
  
 [!code-cpp[Classic Random.NextBytes Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Random.NextBytes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Random.NextBytes Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Random.NextBytes Example/CS/source.cs#1)]
 [!code-vb[Classic Random.NextBytes Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Random.NextBytes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bafcc-376"><paramref name="buffer" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="bafcc-376"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="bafcc-377">Ab .NET Framework, Version 2.0, wenn Sie beim Ableiten einer Klasse von <see cref="T:System.Random" /> und überschreiben die <see cref="M:System.Random.Sample" /> -Methode, die durch die Implementierung der abgeleiteten Klasse zur Verfügung gestellte Verteilung der <see cref="M:System.Random.Sample" /> Methode wird nicht verwendet, in der Basisklasse aufrufen Implementierung der <see cref="M:System.Random.NextBytes(System.Byte[])" /> Methode.</span><span class="sxs-lookup"><span data-stu-id="bafcc-377">Starting with the .NET Framework version 2.0, if you derive a class from <see cref="T:System.Random" /> and override the <see cref="M:System.Random.Sample" /> method, the distribution provided by the derived class implementation of the <see cref="M:System.Random.Sample" /> method is not used in calls to the base class implementation of the <see cref="M:System.Random.NextBytes(System.Byte[])" /> method.</span></span> <span data-ttu-id="bafcc-378">Die gleichverteilung stattdessen zurückgegeben, der vom Basistyp <see cref="T:System.Random" /> Klasse dient.</span><span class="sxs-lookup"><span data-stu-id="bafcc-378">Instead, the uniform distribution returned by the base <see cref="T:System.Random" /> class is used.</span></span> <span data-ttu-id="bafcc-379">Dieses Verhalten verbessert die gesamtleistung der <see cref="T:System.Random" /> Klasse.</span><span class="sxs-lookup"><span data-stu-id="bafcc-379">This behavior improves the overall performance of the <see cref="T:System.Random" /> class.</span></span> <span data-ttu-id="bafcc-380">So ändern Sie dieses Verhalten so rufen Sie die <see cref="M:System.Random.Sample" /> Methode in der abgeleiteten Klasse, müssen Sie auch überschreiben die <see cref="M:System.Random.NextBytes(System.Byte[])" /> Methode.</span><span class="sxs-lookup"><span data-stu-id="bafcc-380">To modify this behavior to call the <see cref="M:System.Random.Sample" /> method in the derived class, you must also override the <see cref="M:System.Random.NextBytes(System.Byte[])" /> method.</span></span></para>
        </block>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="NextBytes">
      <MemberSignature Language="C#" Value="public virtual void NextBytes (Span&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NextBytes(valuetype System.Span`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.NextBytes(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub NextBytes (buffer As Span(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void NextBytes(Span&lt;System::Byte&gt; buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextDouble">
      <MemberSignature Language="C#" Value="public virtual double NextDouble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 NextDouble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.NextDouble" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function NextDouble () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual double NextDouble();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bafcc-381">Gibt eine zufällige Gleitkommazahl zurück, die größer oder gleich 0,0 und kleiner als 1,0 ist.</span><span class="sxs-lookup"><span data-stu-id="bafcc-381">Returns a random floating-point number that is greater than or equal to 0.0, and less than 1.0.</span></span></summary>
        <returns><span data-ttu-id="bafcc-382">Eine Gleitkommazahl mit doppelter Genauigkeit, die größer oder gleich 0,0 und kleiner als 1,0 ist.</span><span class="sxs-lookup"><span data-stu-id="bafcc-382">A double-precision floating point number that is greater than or equal to 0.0, and less than 1.0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bafcc-383">Die tatsächliche Obergrenze für die von dieser Methode zurückgegebene Zufallszahl ist 0.99999999999999978.</span><span class="sxs-lookup"><span data-stu-id="bafcc-383">The actual upper bound of the random number returned by this method is 0.99999999999999978.</span></span>  
  
 <span data-ttu-id="bafcc-384">Um zufällige Gleitkommazahlen-Punktwerte innerhalb eines Bereichs als 0,0 und 1,0 abzurufen, finden Sie im Abschnitt "Werte für Gleitkommazahlen in einem angegebenen Bereich abgerufen werden" von der <xref:System.Random> klassenthema.</span><span class="sxs-lookup"><span data-stu-id="bafcc-384">To retrieve random floating-point values within a range other than 0.0 and 1.0, see the "Retrieve floating-point values in a specified range" section of the <xref:System.Random> class topic.</span></span>  
  
 <span data-ttu-id="bafcc-385">Diese Methode ist die öffentliche Version der geschützten Methode <xref:System.Random.Sample%2A>.</span><span class="sxs-lookup"><span data-stu-id="bafcc-385">This method is the public version of the protected method, <xref:System.Random.Sample%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bafcc-386">Im folgenden Beispiel wird die <xref:System.Random.NextDouble%2A> Methode zum Generieren von Sequenzen von Double.</span><span class="sxs-lookup"><span data-stu-id="bafcc-386">The following example uses the <xref:System.Random.NextDouble%2A> method to generate sequences of random doubles.</span></span>  
  
 [!code-cpp[System.Random.Ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Ctor/CPP/ctor.cpp#1)]
 [!code-csharp[System.Random.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Ctor/CS/ctor.cs#1)]
 [!code-vb[System.Random.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Ctor/VB/ctor.vb#1)]  
  
 <span data-ttu-id="bafcc-387">Im folgenden Beispiel wird die <xref:System.Random.NextDouble%2A> Methode zum Generieren von 100 zufällige Zahlen und zeigt deren Häufigkeit-Verteilung.</span><span class="sxs-lookup"><span data-stu-id="bafcc-387">The following example calls the <xref:System.Random.NextDouble%2A> method to generate 100 random numbers and displays their frequency distribution.</span></span>  
  
 [!code-csharp[System.Random.NextDouble#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.random.nextdouble/cs/nextdouble1.cs#2)]
 [!code-vb[System.Random.NextDouble#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.random.nextdouble/vb/nextdouble1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sample">
      <MemberSignature Language="C#" Value="protected virtual double Sample ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance float64 Sample() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.Sample" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Sample () As Double" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual double Sample();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bafcc-388">Gibt eine zufällige Gleitkommazahl zwischen 0,0 und 1,0 zurück.</span><span class="sxs-lookup"><span data-stu-id="bafcc-388">Returns a random floating-point number between 0.0 and 1.0.</span></span></summary>
        <returns><span data-ttu-id="bafcc-389">Eine Gleitkommazahl mit doppelter Genauigkeit, die größer oder gleich 0,0 und kleiner als 1,0 ist.</span><span class="sxs-lookup"><span data-stu-id="bafcc-389">A double-precision floating point number that is greater than or equal to 0.0, and less than 1.0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bafcc-390">Eine andere zufällige Verteilung oder ein unterschiedliche random Number Generatorprinzip erzeugt werden, leiten Sie eine Klasse von der <xref:System.Random> Klasse, und überschreiben die <xref:System.Random.Sample%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="bafcc-390">To produce a different random distribution or a different random number generator principle, derive a class from the <xref:System.Random> class and override the <xref:System.Random.Sample%2A> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="bafcc-391">Die <xref:System.Random.Sample%2A> Methode ist `protected`, was bedeutet, dass darauf zugreifen können, nur innerhalb der <xref:System.Random> Klasse und abgeleitete Klassen.</span><span class="sxs-lookup"><span data-stu-id="bafcc-391">The <xref:System.Random.Sample%2A> method is `protected`, which means that it is accessible only within the <xref:System.Random> class and its derived classes.</span></span> <span data-ttu-id="bafcc-392">Generiert eine Zufallszahl zwischen 0 und 1 aus einer <xref:System.Random> Instanz ist, rufen Sie die <xref:System.Random.NextDouble%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="bafcc-392">To generate a random number between 0 and 1 from a <xref:System.Random> instance, call the <xref:System.Random.NextDouble%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bafcc-393">Im folgende Beispiel wird eine Klasse von abgeleitet <xref:System.Random> und überschreibt die <xref:System.Random.Sample%2A> Methode, um eine Verteilung von Zufallszahlen generieren.</span><span class="sxs-lookup"><span data-stu-id="bafcc-393">The following example derives a class from <xref:System.Random> and overrides the <xref:System.Random.Sample%2A> method to generate a distribution of random numbers.</span></span> <span data-ttu-id="bafcc-394">Diese Verteilung unterscheidet sich von der einheitlichen Verteilung von generiert die <xref:System.Random.Sample%2A> Methode der Basisklasse.</span><span class="sxs-lookup"><span data-stu-id="bafcc-394">This distribution is different than the uniform distribution generated by the <xref:System.Random.Sample%2A> method of the base class.</span></span>  
  
 [!code-cpp[System.Random.Sample#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Sample/cpp/sampleex.cpp#1)]
 [!code-csharp[System.Random.Sample#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Sample/CS/sample.cs#1)]
 [!code-vb[System.Random.Sample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Sample/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="bafcc-395">Ab .NET Framework, Version 2.0, wenn Sie beim Ableiten einer Klasse von <see cref="T:System.Random" /> und überschreiben die <see cref="M:System.Random.Sample" /> -Methode, die durch die Implementierung der abgeleiteten Klasse zur Verfügung gestellte Verteilung der <see cref="M:System.Random.Sample" /> Methode wird nicht verwendet, in der Basisklasse aufrufen die Implementierung der folgenden Methoden:</span><span class="sxs-lookup"><span data-stu-id="bafcc-395">Starting with the .NET Framework version 2.0, if you derive a class from <see cref="T:System.Random" /> and override the <see cref="M:System.Random.Sample" /> method, the distribution provided by the derived class implementation of the <see cref="M:System.Random.Sample" /> method is not used in calls to the base class implementation of the following methods:</span></span>  
  
-   <span data-ttu-id="bafcc-396">Die <see cref="M:System.Random.NextBytes(System.Byte[])" />-Methode.</span><span class="sxs-lookup"><span data-stu-id="bafcc-396">The <see cref="M:System.Random.NextBytes(System.Byte[])" /> method.</span></span>  
  
-   <span data-ttu-id="bafcc-397">Die <see cref="M:System.Random.Next" />-Methode.</span><span class="sxs-lookup"><span data-stu-id="bafcc-397">The <see cref="M:System.Random.Next" /> method.</span></span>  
  
-   <span data-ttu-id="bafcc-398">Die <see cref="M:System.Random.Next(System.Int32,System.Int32)" /> -Methode, wenn (<paramref name="maxValue" /> - <paramref name="minValue" />) ist größer als <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="bafcc-398">The <see cref="M:System.Random.Next(System.Int32,System.Int32)" /> method, if (<paramref name="maxValue" /> - <paramref name="minValue" />) is greater than <see cref="F:System.Int32.MaxValue" />.</span></span>  
  
 <span data-ttu-id="bafcc-399">Stattdessen die Basis der gleichverteilung gebotenen <see cref="T:System.Random" /> Klasse dient.</span><span class="sxs-lookup"><span data-stu-id="bafcc-399">Instead, the uniform distribution provided by the base <see cref="T:System.Random" /> class is used.</span></span> <span data-ttu-id="bafcc-400">Dieses Verhalten verbessert die gesamtleistung der <see cref="T:System.Random" /> Klasse.</span><span class="sxs-lookup"><span data-stu-id="bafcc-400">This behavior improves the overall performance of the <see cref="T:System.Random" /> class.</span></span> <span data-ttu-id="bafcc-401">So ändern Sie das Verhalten, dass die Implementierung von Aufrufen der <see cref="M:System.Random.Sample" /> Methode in der abgeleiteten Klasse, müssen Sie auch das Verhalten dieser drei Member überschreiben.</span><span class="sxs-lookup"><span data-stu-id="bafcc-401">To modify this behavior to call the implementation of the <see cref="M:System.Random.Sample" /> method in the derived class, you must also override the behavior of these three members.</span></span> <span data-ttu-id="bafcc-402">Dies wird im Beispiel veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="bafcc-402">The example provides an illustration.</span></span></para>
        </block>
        <altmember cref="M:System.Random.NextDouble" />
      </Docs>
    </Member>
  </Members>
</Type>