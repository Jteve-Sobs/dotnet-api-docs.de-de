<Type Name="Convert" FullName="System.Convert">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9a9b8afa0d7f3bbd644b151836b5d74ce9bf54a6" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36434419" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Convert" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Convert extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Convert" />
  <TypeSignature Language="VB.NET" Value="Public Class Convert" />
  <TypeSignature Language="C++ CLI" Value="public ref class Convert abstract sealed" />
  <TypeSignature Language="F#" Value="type Convert = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="278a5-101">Converts a base data type to another base data type.</span>
      <span class="sxs-lookup">
        <span data-stu-id="278a5-101">Converts a base data type to another base data type.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-102">Die statischen Methoden von der <xref:System.Convert> Klasse werden vorwiegend zur Unterstützung der Konvertierung in und aus den Basisdatentypen in .NET Framework verwendet.</span><span class="sxs-lookup"><span data-stu-id="278a5-102">The static methods of the <xref:System.Convert> class are primarily used to support conversion to and from the base data types in the .NET Framework.</span></span> <span data-ttu-id="278a5-103">Sind die unterstützten Basistypen <xref:System.Boolean>, <xref:System.Char>, <xref:System.SByte>, <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>, <xref:System.Single>, <xref:System.Double>, <xref:System.Decimal>, <xref:System.DateTime> und <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="278a5-103">The supported base types are <xref:System.Boolean>, <xref:System.Char>, <xref:System.SByte>, <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>, <xref:System.Single>, <xref:System.Double>, <xref:System.Decimal>, <xref:System.DateTime> and <xref:System.String>.</span></span> <span data-ttu-id="278a5-104">Darüber hinaus die <xref:System.Convert> Klasse enthält Methoden, um andere Arten von Umwandlungen zu unterstützen.</span><span class="sxs-lookup"><span data-stu-id="278a5-104">In addition, the <xref:System.Convert> class includes methods to support  other kinds of conversions.</span></span>  
  
 <span data-ttu-id="278a5-105">Dieses Thema enthält folgende Abschnitte:</span><span class="sxs-lookup"><span data-stu-id="278a5-105">This topic consists of the following sections:</span></span>  
  
 <span data-ttu-id="278a5-106">[Konvertierungen zu und von Basistypen](#Base) </span><span class="sxs-lookup"><span data-stu-id="278a5-106">[Conversions to and from Base Types](#Base) </span></span>  
 <span data-ttu-id="278a5-107">[Zahlen ohne Dezimalstellen](#NonDecimal) </span><span class="sxs-lookup"><span data-stu-id="278a5-107">[Non-Decimal Numbers](#NonDecimal) </span></span>  
 <span data-ttu-id="278a5-108">[Konvertierungen von benutzerdefinierten Objekten in Basistypen](#Custom) </span><span class="sxs-lookup"><span data-stu-id="278a5-108">[Conversions from Custom Objects to Base Types](#Custom) </span></span>  
 <span data-ttu-id="278a5-109">[Kulturspezifische Formatierungsinformationen](#Culture) </span><span class="sxs-lookup"><span data-stu-id="278a5-109">[Culture-Specific Formatting Information](#Culture) </span></span>  
 <span data-ttu-id="278a5-110">[Base64-Codierung](#Base64) </span><span class="sxs-lookup"><span data-stu-id="278a5-110">[Base64 Encoding](#Base64) </span></span>  
 [<span data-ttu-id="278a5-111">Andere allgemeine Konvertierungen</span><span class="sxs-lookup"><span data-stu-id="278a5-111">Other Common Conversions</span></span>](#Other)  
  
<a name="Base"></a>   
## <a name="conversions-to-and-from-base-types"></a><span data-ttu-id="278a5-112">Konvertierungen zu und von Basistypen</span><span class="sxs-lookup"><span data-stu-id="278a5-112">Conversions to and from Base Types</span></span>  
 <span data-ttu-id="278a5-113">Eine Konvertierungsmethode, die zum Konvertieren von jedem Basistyp in jeden anderen Basistyp vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="278a5-113">A conversion method exists to convert every base type to every other base type.</span></span> <span data-ttu-id="278a5-114">Allerdings kann der eigentliche Aufruf an eine bestimmte Konvertierung-Methode eines von fünf Ergebnissen, abhängig vom Wert des Basistyps zur Laufzeit und den erzeugen.</span><span class="sxs-lookup"><span data-stu-id="278a5-114">However, the actual call to a particular conversion method can produce one of five outcomes, depending on the value of the base type at run time and the target base type.</span></span> <span data-ttu-id="278a5-115">Diese Ergebnisse werden fünf sind:</span><span class="sxs-lookup"><span data-stu-id="278a5-115">These five outcomes are:</span></span>  
  
-   <span data-ttu-id="278a5-116">Keine Konvertierung.</span><span class="sxs-lookup"><span data-stu-id="278a5-116">No conversion.</span></span> <span data-ttu-id="278a5-117">Dies geschieht, wenn versucht wird, von einem Typ in sich selbst zu konvertieren (z. B. durch Aufrufen von <xref:System.Convert.ToInt32%28System.Int32%29?displayProperty=nameWithType> durch ein Argument des Typs <xref:System.Int32>).</span><span class="sxs-lookup"><span data-stu-id="278a5-117">This occurs when an attempt is made to convert from a type to itself (for example, by calling <xref:System.Convert.ToInt32%28System.Int32%29?displayProperty=nameWithType> with an argument of type <xref:System.Int32>).</span></span> <span data-ttu-id="278a5-118">In diesem Fall gibt die Methode einfach eine Instanz des ursprünglichen Typs zurück.</span><span class="sxs-lookup"><span data-stu-id="278a5-118">In this case, the method simply returns an instance of the original type.</span></span>  
  
-   <span data-ttu-id="278a5-119">Eine <xref:System.InvalidCastException>.</span><span class="sxs-lookup"><span data-stu-id="278a5-119">An <xref:System.InvalidCastException>.</span></span> <span data-ttu-id="278a5-120">Dies tritt auf, wenn eine bestimmte Konvertierung nicht unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="278a5-120">This occurs when a particular conversion is not supported.</span></span> <span data-ttu-id="278a5-121">Ein <xref:System.InvalidCastException> wird für die folgenden Konvertierungen ausgelöst:</span><span class="sxs-lookup"><span data-stu-id="278a5-121">An <xref:System.InvalidCastException> is thrown for the following conversions:</span></span>  
  
    -   <span data-ttu-id="278a5-122">Konvertierungen von <xref:System.Char> auf <xref:System.Boolean>, <xref:System.Single>, <xref:System.Double>, <xref:System.Decimal>, oder <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="278a5-122">Conversions from <xref:System.Char> to <xref:System.Boolean>, <xref:System.Single>, <xref:System.Double>, <xref:System.Decimal>, or <xref:System.DateTime>.</span></span>  
  
    -   <span data-ttu-id="278a5-123">Konvertierungen von <xref:System.Boolean>, <xref:System.Single>, <xref:System.Double>, <xref:System.Decimal>, oder <xref:System.DateTime> auf <xref:System.Char>.</span><span class="sxs-lookup"><span data-stu-id="278a5-123">Conversions from <xref:System.Boolean>, <xref:System.Single>, <xref:System.Double>, <xref:System.Decimal>, or <xref:System.DateTime> to <xref:System.Char>.</span></span>  
  
    -   <span data-ttu-id="278a5-124">Konvertierungen von <xref:System.DateTime> in einen anderen Typ außer <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="278a5-124">Conversions from <xref:System.DateTime> to any other type except <xref:System.String>.</span></span>  
  
    -   <span data-ttu-id="278a5-125">Konvertierungen von anderen Typen außer <xref:System.String>in <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="278a5-125">Conversions from any other type, except <xref:System.String>, to <xref:System.DateTime>.</span></span>  
  
-   <span data-ttu-id="278a5-126">Ein <xref:System.FormatException>.</span><span class="sxs-lookup"><span data-stu-id="278a5-126">A <xref:System.FormatException>.</span></span> <span data-ttu-id="278a5-127">Dies tritt auf, wenn der Versuch, einen String-Wert in einen beliebigen anderen Basistyp konvertieren fehlschlägt, da die Zeichenfolge nicht das richtige Format ist.</span><span class="sxs-lookup"><span data-stu-id="278a5-127">This occurs when the attempt to convert a string value to any other base type fails because the string is not in the proper format.</span></span> <span data-ttu-id="278a5-128">Für die folgenden Konvertierungen wird die Ausnahme ausgelöst:</span><span class="sxs-lookup"><span data-stu-id="278a5-128">The exception is thrown for the following conversions:</span></span>  
  
    -   <span data-ttu-id="278a5-129">Eine Zeichenfolge zu konvertierenden eine <xref:System.Boolean> Wert entspricht nicht <xref:System.Boolean.TrueString?displayProperty=nameWithType> oder <xref:System.Boolean.FalseString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="278a5-129">A string to be converted to a <xref:System.Boolean> value does not equal <xref:System.Boolean.TrueString?displayProperty=nameWithType> or <xref:System.Boolean.FalseString?displayProperty=nameWithType>.</span></span>  
  
    -   <span data-ttu-id="278a5-130">Eine Zeichenfolge zu konvertierenden ein <xref:System.Char> Wert besteht aus mehreren Zeichen.</span><span class="sxs-lookup"><span data-stu-id="278a5-130">A string to be converted to a <xref:System.Char> value consists of multiple characters.</span></span>  
  
    -   <span data-ttu-id="278a5-131">Eine Zeichenfolge in einen numerischen Typ konvertiert werden, wird als eine gültige Zahl nicht erkannt.</span><span class="sxs-lookup"><span data-stu-id="278a5-131">A string to be converted to any numeric type is not recognized as a valid number.</span></span>  
  
    -   <span data-ttu-id="278a5-132">Eine Zeichenfolge zu konvertierenden eine <xref:System.DateTime> wird nicht als gültiger Datums- und Uhrzeitwert erkannt.</span><span class="sxs-lookup"><span data-stu-id="278a5-132">A string to be converted to a <xref:System.DateTime> is not recognized as a valid date and time value.</span></span>  
  
-   <span data-ttu-id="278a5-133">Eine erfolgreiche Konvertierung.</span><span class="sxs-lookup"><span data-stu-id="278a5-133">A successful conversion.</span></span> <span data-ttu-id="278a5-134">Für Konvertierungen zwischen zwei unterschiedliche Basistypen, die nicht in den vorherigen Ergebnissen aufgeführt alle erweiternde Konvertierungen sowie alle einschränkende Konvertierungen, die nicht zu einem Datenverlust führen werden erfolgreich ausgeführt, und die Methode gibt den Wert des entsprechenden Basistyps.</span><span class="sxs-lookup"><span data-stu-id="278a5-134">For conversions between two different base types not listed in the previous outcomes, all widening conversions as well as all narrowing conversions that do not result in a loss of data will succeed and the method will return a value of the targeted base type.</span></span>  
  
-   <span data-ttu-id="278a5-135">Eine <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="278a5-135">An <xref:System.OverflowException>.</span></span> <span data-ttu-id="278a5-136">Dies tritt auf, wenn eine einschränkende Konvertierungsergebnisse zu einem Verlust von Daten.</span><span class="sxs-lookup"><span data-stu-id="278a5-136">This occurs when a narrowing conversion results in a loss of data.</span></span> <span data-ttu-id="278a5-137">Beispielsweise konvertieren möchten eine <xref:System.Int32> Instanz, deren Wert 10000 beträgt, auf eine <xref:System.Byte> geben löst ein <xref:System.OverflowException> 10000 ist außerhalb des Bereichs der der <xref:System.Byte> -Datentyp.</span><span class="sxs-lookup"><span data-stu-id="278a5-137">For example, trying to convert a <xref:System.Int32> instance whose value is 10000 to a <xref:System.Byte> type throws an <xref:System.OverflowException> because 10000 is outside the range of the <xref:System.Byte> data type.</span></span>  
  
 <span data-ttu-id="278a5-138">Eine Ausnahme wird nicht ausgelöst werden, wenn die Konvertierung eines numerischen Typs zu einem Genauigkeitsverlust (d. h. den Verlust von einigen Ziffern) führt.</span><span class="sxs-lookup"><span data-stu-id="278a5-138">An exception will not be thrown if the conversion of a numeric type results in a loss of precision (that is, the loss of some least significant digits).</span></span> <span data-ttu-id="278a5-139">Allerdings wird eine Ausnahme ausgelöst werden, wenn das Ergebnis größer als der durch den Typ des Rückgabewerts der bestimmten Konvertierungsmethode dargestellt werden kann.</span><span class="sxs-lookup"><span data-stu-id="278a5-139">However, an exception will be thrown if the result is larger than can be represented by the particular conversion method's return value type.</span></span>  
  
 <span data-ttu-id="278a5-140">Beispielsweise, wenn eine <xref:System.Double> konvertiert eine <xref:System.Single>, ein Genauigkeitsverlust auftreten, aber keine Ausnahme ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="278a5-140">For example, when a <xref:System.Double> is converted to a <xref:System.Single>, a loss of precision might occur but no exception is thrown.</span></span> <span data-ttu-id="278a5-141">Jedoch wenn als Maßeinheit der <xref:System.Double> ist zu groß für den szenariobeschreibungen werden eine <xref:System.Single>, eine Pufferüberlauf-Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="278a5-141">However, if the magnitude of the <xref:System.Double> is too large to be represented by a <xref:System.Single>, an overflow exception is thrown.</span></span>  
  
<a name="NonDecimal"></a>   
## <a name="non-decimal-numbers"></a><span data-ttu-id="278a5-142">Zahlen ohne Dezimalstellen</span><span class="sxs-lookup"><span data-stu-id="278a5-142">Non-Decimal Numbers</span></span>  
 <span data-ttu-id="278a5-143">Die <xref:System.Convert> Klasse enthält statische Methoden, die Sie aufrufen können, um ganzzahlige Werte in zeichenfolgendarstellungen, die nicht-Dezimalzahlen zu konvertieren, und Konvertieren von Zeichenfolgen, nichtdezimal-Zahlen ganzzahlige Werte darstellen.</span><span class="sxs-lookup"><span data-stu-id="278a5-143">The <xref:System.Convert> class includes static methods that you can call to convert integral values to non-decimal string representations, and to convert strings that represent non-decimal numbers to integral values.</span></span> <span data-ttu-id="278a5-144">Jede dieser Methoden für die Konvertierung umfasst eine `base` Argument, das Sie das System die Zahlen; Binärdatei (Basis 2), oktale (Basis 8) und Hexadezimalformat (Basis 16) angeben sowie Dezimalzahl (Basis 10) kann.</span><span class="sxs-lookup"><span data-stu-id="278a5-144">Each of these conversion methods includes a `base` argument  that lets you specify  the number system; binary (base 2), octal (base 8), and hexadecimal (base 16), as well as decimal (base 10).</span></span> <span data-ttu-id="278a5-145">Es ist ein Satz von Methoden, um jedes primitiven CLS-kompatiblen ganzzahligen Typen in einer Zeichenfolge und eine zum Konvertieren einer Zeichenfolge in alle primitiven ganzzahligen Typen zu konvertieren:</span><span class="sxs-lookup"><span data-stu-id="278a5-145">There is a set of methods to convert each of the CLS-compliant primitive integral types to a string, and one to convert a string to each of the primitive integral types:</span></span>  
  
-   <span data-ttu-id="278a5-146"><xref:System.Convert.ToString%28System.Byte%2CSystem.Int32%29> und <xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29>, um ein Byte-Wert konvertieren in andere und aus einer Zeichenfolge in einer angegebenen Basis.</span><span class="sxs-lookup"><span data-stu-id="278a5-146"><xref:System.Convert.ToString%28System.Byte%2CSystem.Int32%29> and <xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29>, to convert a byte value to and from a string in a specified base.</span></span>  
  
-   <span data-ttu-id="278a5-147"><xref:System.Convert.ToString%28System.Int16%2CSystem.Int32%29> und <xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29>, um eine 16-Bit-Ganzzahl mit Vorzeichen zu konvertieren, in andere und aus einer Zeichenfolge in einer angegebenen Basis.</span><span class="sxs-lookup"><span data-stu-id="278a5-147"><xref:System.Convert.ToString%28System.Int16%2CSystem.Int32%29> and <xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29>, to convert a 16-bit signed integer to and from a string in a specified base.</span></span>  
  
-   <span data-ttu-id="278a5-148"><xref:System.Convert.ToString%28System.Int32%2CSystem.Int32%29> und <xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29>, um eine 32-Bit-Ganzzahl mit Vorzeichen zu konvertieren, in andere und aus einer Zeichenfolge in einer angegebenen Basis.</span><span class="sxs-lookup"><span data-stu-id="278a5-148"><xref:System.Convert.ToString%28System.Int32%2CSystem.Int32%29> and <xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29>, to convert a 32-bit signed integer to and from a string in a specified base.</span></span>  
  
-   <span data-ttu-id="278a5-149"><xref:System.Convert.ToString%28System.Int64%2CSystem.Int32%29> und <xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29>, um eine 64-Bit-Ganzzahl mit Vorzeichen zu konvertieren, in andere und aus einer Zeichenfolge in einer angegebenen Basis.</span><span class="sxs-lookup"><span data-stu-id="278a5-149"><xref:System.Convert.ToString%28System.Int64%2CSystem.Int32%29> and <xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29>, to convert a 64-bit signed integer to and from a string in a specified base.</span></span>  
  
-   <span data-ttu-id="278a5-150"><xref:System.Convert.ToSByte%28System.String%2CSystem.Int32%29>, um die angegebene Zeichenfolgendarstellung ein Byte-Wert in einem angegebenen Format in einen Bytewert mit Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-150"><xref:System.Convert.ToSByte%28System.String%2CSystem.Int32%29>, to convert the string representation of a byte value in a specified format to a signed byte.</span></span>  
  
-   <span data-ttu-id="278a5-151"><xref:System.Convert.ToUInt16%28System.String%2CSystem.Int32%29>, um die Darstellung einer ganzen Zahl in einem angegebenen Format in eine 16-Bit-Ganzzahl ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-151"><xref:System.Convert.ToUInt16%28System.String%2CSystem.Int32%29>, to convert the string representation of an integer in a specified format to an unsigned 16-bit integer.</span></span>  
  
-   <span data-ttu-id="278a5-152"><xref:System.Convert.ToUInt32%28System.String%2CSystem.Int32%29>, um die Darstellung einer ganzen Zahl in einem angegebenen Format in eine 32-Bit-Ganzzahl ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-152"><xref:System.Convert.ToUInt32%28System.String%2CSystem.Int32%29>, to convert the string representation of an integer in a specified format to an unsigned 32-bit integer.</span></span>  
  
-   <span data-ttu-id="278a5-153"><xref:System.Convert.ToUInt64%28System.String%2CSystem.Int32%29>, um die Darstellung einer ganzen Zahl in einem angegebenen Format in eine 64-Bit-Ganzzahl ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-153"><xref:System.Convert.ToUInt64%28System.String%2CSystem.Int32%29>, to convert the string representation of an integer in a specified format to an unsigned 64-bit integer.</span></span>  
  
 <span data-ttu-id="278a5-154">Das folgende Beispiel konvertiert den Wert der <xref:System.Int16.MaxValue?displayProperty=nameWithType> in eine Zeichenfolge in allen unterstützten numerische Formate.</span><span class="sxs-lookup"><span data-stu-id="278a5-154">The following example converts the value of <xref:System.Int16.MaxValue?displayProperty=nameWithType> to a string in all supported numeric formats.</span></span> <span data-ttu-id="278a5-155">Es wird dann an der Zeichenfolgenwert konvertiert eine <xref:System.Int16> Wert.</span><span class="sxs-lookup"><span data-stu-id="278a5-155">It then converts the string value back to a <xref:System.Int16> value.</span></span>  
  
 [!code-cpp[System.Convert#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert/CPP/NonDecimal1.cpp#2)]
 [!code-csharp[System.Convert#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert/CS/NonDecimal1.cs#2)]
 [!code-vb[System.Convert#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert/VB/NonDecimal1.vb#2)]  
  
<a name="Custom"></a>   
## <a name="conversions-from-custom-objects-to-base-types"></a><span data-ttu-id="278a5-156">Konvertierungen von benutzerdefinierten Objekten in Basistypen</span><span class="sxs-lookup"><span data-stu-id="278a5-156">Conversions from Custom Objects to Base Types</span></span>  
 <span data-ttu-id="278a5-157">Zusätzlich zur Unterstützung von Konvertierungen zwischen Basistypen kann die <xref:System.Convert> Methode unterstützt die Konvertierung eines beliebigen benutzerdefinierten Typs in einem Basistyp.</span><span class="sxs-lookup"><span data-stu-id="278a5-157">In addition to supporting conversions between the base types, the <xref:System.Convert> method supports conversion of any custom type to any base type.</span></span> <span data-ttu-id="278a5-158">Zu diesem Zweck muss der benutzerdefinierte Typ implementieren die <xref:System.IConvertible> -Schnittstelle, die Methoden zum Konvertieren von den Implementierungstyp auf die einzelnen Basistypen definiert.</span><span class="sxs-lookup"><span data-stu-id="278a5-158">To do this, the custom type must implement the <xref:System.IConvertible> interface, which defines methods for converting the implementing type to each of the base types.</span></span> <span data-ttu-id="278a5-159">Konvertierungen, die von einem bestimmten Typ nicht unterstützt werden, sollte Auslösen einer <xref:System.InvalidCastException>.</span><span class="sxs-lookup"><span data-stu-id="278a5-159">Conversions that are not supported by a particular type should throw an <xref:System.InvalidCastException>.</span></span>  
  
 <span data-ttu-id="278a5-160">Wenn die <xref:System.Convert.ChangeType%2A> Methode ein benutzerdefiniertes Typs als der erste Parameter übergeben wird oder wenn die `Convert.To` *Typ* Methode (z. B. <xref:System.Convert.ToInt32%28System.Object%29?displayProperty=nameWithType> oder <xref:System.Convert.ToDouble%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> aufgerufen wird, und übergeben Sie eine Instanz eines benutzerdefinierten Typs als ersten Parameter, die <xref:System.Convert> Methode wiederum des benutzerdefinierten Typs <xref:System.IConvertible> Implementierung zum Durchführen der Konvertierung.</span><span class="sxs-lookup"><span data-stu-id="278a5-160">When the <xref:System.Convert.ChangeType%2A> method is passed a custom type as its first parameter, or when the `Convert.To`*Type* method (such as <xref:System.Convert.ToInt32%28System.Object%29?displayProperty=nameWithType> or <xref:System.Convert.ToDouble%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> is called and passed an instance of a custom type as its first parameter, the <xref:System.Convert> method, in turn, calls the custom type's <xref:System.IConvertible> implementation to perform the conversion.</span></span> <span data-ttu-id="278a5-161">Weitere Informationen finden Sie unter [Typkonvertierung in .NET Framework](~/docs/standard/base-types/type-conversion.md).</span><span class="sxs-lookup"><span data-stu-id="278a5-161">For more information, see [Type Conversion in the .NET Framework](~/docs/standard/base-types/type-conversion.md).</span></span>  
  
<a name="Culture"></a>   
## <a name="culture-specific-formatting-information"></a><span data-ttu-id="278a5-162">Kulturspezifische Formatierungsinformationen</span><span class="sxs-lookup"><span data-stu-id="278a5-162">Culture-Specific Formatting Information</span></span>  
 <span data-ttu-id="278a5-163">Alle Methoden der Konvertierung der Basistyp und der <xref:System.Convert.ChangeType%2A> -Methode enthalten Überladungen, die über einen Parameter vom Typ <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="278a5-163">All the base type conversion methods and the <xref:System.Convert.ChangeType%2A> method include overloads that have a parameter of type <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="278a5-164">Z. B. die <xref:System.Convert.ToBoolean%2A?displayProperty=nameWithType> Methode verfügt über die folgenden zwei Überladungen:</span><span class="sxs-lookup"><span data-stu-id="278a5-164">For example, the <xref:System.Convert.ToBoolean%2A?displayProperty=nameWithType> method has the following two overloads:</span></span>  
  
-   <xref:System.Convert.ToBoolean%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType>  
  
-   <xref:System.Convert.ToBoolean%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>  
  
 <span data-ttu-id="278a5-165">Die <xref:System.IFormatProvider> Parameter kulturspezifische Formatierungsinformationen zur Unterstützung der Konvertierung angeben kann.</span><span class="sxs-lookup"><span data-stu-id="278a5-165">The <xref:System.IFormatProvider> parameter can supply culture-specific formatting information to assist the conversion process.</span></span> <span data-ttu-id="278a5-166">Es wird jedoch von den meisten Methoden für die Konvertierung der Basistyp ignoriert.</span><span class="sxs-lookup"><span data-stu-id="278a5-166">However, it is ignored by most of the base type conversion methods.</span></span> <span data-ttu-id="278a5-167">Es wird nur von den folgenden Methoden für die Konvertierung von Basistyp verwendet. Wenn eine `null` <xref:System.IFormatProvider> Argument wird an diese Methoden übergeben der <xref:System.Globalization.CultureInfo> Objekt, das die aktuelle Threadkultur darstellt, wird verwendet.</span><span class="sxs-lookup"><span data-stu-id="278a5-167">It is used only by the following base type conversion methods.If a `null`<xref:System.IFormatProvider> argument is passed to these methods, the <xref:System.Globalization.CultureInfo> object that represents the current thread culture is used.</span></span>  
  
-   <span data-ttu-id="278a5-168">Durch die Methoden, die einen Wert in einen numerischen Typ konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-168">By methods that convert a value to a numeric type.</span></span> <span data-ttu-id="278a5-169">Die <xref:System.IFormatProvider> Parameter wird verwendet, indem Sie die Überladung, die Parameter des Typs hat <xref:System.String> und <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="278a5-169">The <xref:System.IFormatProvider> parameter is used by the overload that has parameters of type <xref:System.String> and <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="278a5-170">Sie dient auch durch die Überladung, die Parameter des Typs hat <xref:System.Object> und <xref:System.IFormatProvider> , wenn der zur Laufzeit des Objekts ist ein <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="278a5-170">It is also used by the overload that has parameters of type <xref:System.Object> and <xref:System.IFormatProvider> if the object's run-time type is a <xref:System.String>.</span></span>  
  
-   <span data-ttu-id="278a5-171">Durch die Methoden, die einen Wert in ein Datum und eine Uhrzeit zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-171">By methods that convert a value to a date and time.</span></span> <span data-ttu-id="278a5-172">Die <xref:System.IFormatProvider> Parameter wird verwendet, indem Sie die Überladung, die Parameter des Typs hat <xref:System.String> und <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="278a5-172">The <xref:System.IFormatProvider> parameter is used by the overload that has parameters of type <xref:System.String> and <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="278a5-173">Sie dient auch durch die Überladung, die Parameter des Typs hat <xref:System.Object> und <xref:System.IFormatProvider> , wenn der zur Laufzeit des Objekts ist ein <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="278a5-173">It is also used by the overload that has parameters of type <xref:System.Object> and <xref:System.IFormatProvider> if the object's run-time type is a <xref:System.String>.</span></span>  
  
-   <span data-ttu-id="278a5-174">Durch die <xref:System.Convert.ToString%2A?displayProperty=nameWithType> Überladungen, die eine <xref:System.IFormatProvider> und konvertieren Sie entweder einen numerischen Wert in eine Zeichenfolge oder ein <xref:System.DateTime> Wert in eine Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="278a5-174">By the <xref:System.Convert.ToString%2A?displayProperty=nameWithType> overloads that include an <xref:System.IFormatProvider> parameter and that convert either a numeric value to a string or a <xref:System.DateTime> value to a string.</span></span>  
  
 <span data-ttu-id="278a5-175">Allerdings benutzerdefinierten Typ implementiert <xref:System.IConvertible> können nutzen die <xref:System.IFormatProvider> Parameter.</span><span class="sxs-lookup"><span data-stu-id="278a5-175">However, any user-defined type that implements <xref:System.IConvertible> can make use of the <xref:System.IFormatProvider> parameter.</span></span>  
  
<a name="Base64"></a>   
## <a name="base64-encoding"></a><span data-ttu-id="278a5-176">Base64-Codierung</span><span class="sxs-lookup"><span data-stu-id="278a5-176">Base64 Encoding</span></span>  
 <span data-ttu-id="278a5-177">Binärdaten Base64-Codierung in eine Zeichenfolge konvertiert werden.</span><span class="sxs-lookup"><span data-stu-id="278a5-177">Base64 encoding converts binary data to a string.</span></span> <span data-ttu-id="278a5-178">Daten, ausgedrückt als Base-64-Ziffern können problemlos über Datenkanäle festgelegt werden, die nur 7-Bit-Zeichen übertragen können.</span><span class="sxs-lookup"><span data-stu-id="278a5-178">Data expressed as base-64 digits can be easily conveyed over data channels that can only transmit 7-bit characters.</span></span> <span data-ttu-id="278a5-179">Die <xref:System.Convert> Klasse enthält die folgenden Methoden zur Unterstützung von base64-Codierung: eine Reihe von Methoden unterstützt das Konvertieren eines Bytearrays in und aus einem <xref:System.String> or auf and aus einem Array von Unicode-Zeichen, bestehend aus Base-64-Ziffernzeichen.</span><span class="sxs-lookup"><span data-stu-id="278a5-179">The <xref:System.Convert> class includes the following methods to support base64 encoding: A set of methods support converting an array of bytes to and from a <xref:System.String> or to and from an array of Unicode characters consisting of base-64 digit characters.</span></span>  
  
-   <span data-ttu-id="278a5-180"><xref:System.Convert.ToBase64String%2A>, die ein Bytearray in eine base64-codierte Zeichenfolge konvertiert.</span><span class="sxs-lookup"><span data-stu-id="278a5-180"><xref:System.Convert.ToBase64String%2A>, which converts a byte array to a base64-encoded string.</span></span>  
  
-   <span data-ttu-id="278a5-181"><xref:System.Convert.ToBase64CharArray%2A>, die ein Bytearray in ein Array von base64-codierte Zeichen konvertiert.</span><span class="sxs-lookup"><span data-stu-id="278a5-181"><xref:System.Convert.ToBase64CharArray%2A>, which converts a byte array to a base64-encoded character array.</span></span>  
  
-   <span data-ttu-id="278a5-182"><xref:System.Convert.FromBase64String%2A>, die eine base64-codierte Zeichenfolge in ein Bytearray konvertiert.</span><span class="sxs-lookup"><span data-stu-id="278a5-182"><xref:System.Convert.FromBase64String%2A>, which converts a base64-encoded string to a byte array.</span></span>  
  
-   <span data-ttu-id="278a5-183"><xref:System.Convert.FromBase64CharArray%2A>, die ein Array von base64-codierte Zeichen in ein Bytearray konvertiert.</span><span class="sxs-lookup"><span data-stu-id="278a5-183"><xref:System.Convert.FromBase64CharArray%2A>, which converts a base64-encoded character array to a byte array.</span></span>  
  
<a name="Other"></a>   
## <a name="other-common-conversions"></a><span data-ttu-id="278a5-184">Andere allgemeine Konvertierungen</span><span class="sxs-lookup"><span data-stu-id="278a5-184">Other Common Conversions</span></span>  
 <span data-ttu-id="278a5-185">Verwenden Sie andere Klassen in .NET Framework, für einige Konvertierungen, die nicht von der statischen Methoden der unterstützt werden die <xref:System.Convert> Klasse.</span><span class="sxs-lookup"><span data-stu-id="278a5-185">You can use other classes in the NET Framework to perform some conversions that are not supported by the static methods of the <xref:System.Convert> class.</span></span>  <span data-ttu-id="278a5-186">Dazu gehören:</span><span class="sxs-lookup"><span data-stu-id="278a5-186">These include:</span></span>  
  
 <span data-ttu-id="278a5-187">Die Konvertierung in Bytearrays</span><span class="sxs-lookup"><span data-stu-id="278a5-187">Conversion to byte arrays</span></span>  
 <span data-ttu-id="278a5-188">Die <xref:System.BitConverter> Klasse enthält Methoden, die die primitiven numerischen Typen konvertiert (einschließlich <xref:System.Boolean>) in Bytearrays hinein und aus Byte sichern Arrays primitiven Datentypen.</span><span class="sxs-lookup"><span data-stu-id="278a5-188">The <xref:System.BitConverter> class  provides methods that convert the primitive numeric types (including <xref:System.Boolean>) to byte arrays and from byte arrays back to primitive data types.</span></span>  
  
 <span data-ttu-id="278a5-189">Zeichen zu codieren und Decodieren</span><span class="sxs-lookup"><span data-stu-id="278a5-189">Character encoding and decoding</span></span>  
 <span data-ttu-id="278a5-190">Die <xref:System.Text.Encoding> Klasse und abgeleitete Klassen (z. B. <xref:System.Text.UnicodeEncoding> und <xref:System.Text.UTF8Encoding>) bieten Ihnen Methoden, um ein Array von Zeichen oder eine Zeichenfolge zu codieren (d. h. Konvertierung in ein Bytearray in einer bestimmten Codierung) und um die zu decodierende ein codiertes Bytearray (d. h. Konvertiert ein Bytearray zurück auf UTF16-Format codierte Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="278a5-190">The <xref:System.Text.Encoding> class and its derived classes (such as <xref:System.Text.UnicodeEncoding> and <xref:System.Text.UTF8Encoding>) provide methods to encode a character array or a string (that is, to convert them to a byte array in a particular encoding) and to decode an encoded byte array (that is, convert a byte array back to UTF16-encoded Unicode characters.</span></span> <span data-ttu-id="278a5-191">Weitere Informationen finden Sie unter [Zeichencodierung in .NET Framework](~/docs/standard/base-types/character-encoding.md)</span><span class="sxs-lookup"><span data-stu-id="278a5-191">For more information, see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-192">Das folgende Beispiel veranschaulicht einige der Methoden für die Konvertierung in den <xref:System.Convert> Klasse, einschließlich <xref:System.Convert.ToInt32%2A>, <xref:System.Convert.ToBoolean%2A>, und <xref:System.Convert.ToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="278a5-192">The following example demonstrates some of the conversion methods in the <xref:System.Convert> class, including <xref:System.Convert.ToInt32%2A>, <xref:System.Convert.ToBoolean%2A>, and <xref:System.Convert.ToString%2A>.</span></span>  
  
 [!code-cpp[System.Convert#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert/CPP/converter.cpp#1)]
 [!code-csharp[System.Convert#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert/CS/converter.cs#1)]
 [!code-vb[System.Convert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert/VB/converter.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IConvertible" />
    <altmember cref="T:System.Object" />
    <altmember cref="T:System.SByte" />
    <altmember cref="T:System.Int16" />
    <altmember cref="T:System.Int32" />
    <altmember cref="T:System.Int64" />
    <altmember cref="T:System.Byte" />
    <altmember cref="T:System.UInt16" />
    <altmember cref="T:System.UInt32" />
    <altmember cref="T:System.UInt64" />
    <altmember cref="T:System.Single" />
    <altmember cref="T:System.Double" />
    <altmember cref="T:System.Decimal" />
    <altmember cref="T:System.Boolean" />
    <altmember cref="T:System.Char" />
    <altmember cref="T:System.String" />
  </Docs>
  <Members>
    <MemberGroup MemberName="ChangeType">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="278a5-193">Returns an object of a specified type whose value is equivalent to a specified object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-193">Returns an object of a specified type whose value is equivalent to a specified object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ChangeType">
      <MemberSignature Language="C#" Value="public static object ChangeType (object value, Type conversionType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ChangeType(object value, class System.Type conversionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ChangeType(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ChangeType (value As Object, conversionType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ChangeType(System::Object ^ value, Type ^ conversionType);" />
      <MemberSignature Language="F#" Value="static member ChangeType : obj * Type -&gt; obj" Usage="System.Convert.ChangeType (value, conversionType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="conversionType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-194">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-194">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="conversionType">
          <span data-ttu-id="278a5-195">The type of object to return.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-195">The type of object to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-196">Returns an object of the specified type and whose value is equivalent to the specified object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-196">Returns an object of the specified type and whose value is equivalent to the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-197">An object whose type is <paramref name="conversionType" /> and whose value is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-197">An object whose type is <paramref name="conversionType" /> and whose value is equivalent to <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="278a5-198">-or-  A null reference (<see langword="Nothing" /> in Visual Basic), if <paramref name="value" /> is <see langword="null" /> and <paramref name="conversionType" /> is not a value type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-198">-or-  A null reference (<see langword="Nothing" /> in Visual Basic), if <paramref name="value" /> is <see langword="null" /> and <paramref name="conversionType" /> is not a value type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-199"><xref:System.Convert.ChangeType%2A> ist eine allgemeine Konvertierungsmethode, die das Objekt vom angegebenen konvertiert `value` auf `conversionType`.</span><span class="sxs-lookup"><span data-stu-id="278a5-199"><xref:System.Convert.ChangeType%2A> is a general-purpose conversion method that converts the object specified by `value` to `conversionType`.</span></span> <span data-ttu-id="278a5-200">Die `value` Parameter kann ein Objekt eines beliebigen Typs sein und `conversionType` kann auch ein <xref:System.Type> Objekt, das einen beliebigen Basistyp oder benutzerdefinierten Typ darstellt.</span><span class="sxs-lookup"><span data-stu-id="278a5-200">The `value` parameter can be an object of any type, and `conversionType` can also be a <xref:System.Type> object that represents any base or custom type.</span></span> <span data-ttu-id="278a5-201">Für die Konvertierung erfolgreich ausgeführt werden kann `value` implementieren müssen die <xref:System.IConvertible> Schnittstelle, da die Methode einfach ein Wrapper um einen Aufruf an eine entsprechende <xref:System.IConvertible> Methode.</span><span class="sxs-lookup"><span data-stu-id="278a5-201">For the conversion to succeed, `value` must implement the <xref:System.IConvertible> interface, because the method simply wraps a call to an appropriate <xref:System.IConvertible> method.</span></span> <span data-ttu-id="278a5-202">Die Methode benötigt, Konvertierung von `value` auf `conversionType` unterstützt werden.</span><span class="sxs-lookup"><span data-stu-id="278a5-202">The method requires that conversion of `value` to `conversionType` be supported.</span></span>  
  
 <span data-ttu-id="278a5-203">Diese Methode verwendet die aktuelle Threadkultur für die Konvertierung.</span><span class="sxs-lookup"><span data-stu-id="278a5-203">This method uses the current thread's culture for the conversion.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-204">Im folgenden Beispiel wird die Verwendung der <xref:System.Convert.ChangeType%2A>-Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="278a5-204">The following example illustrates the use of the <xref:System.Convert.ChangeType%2A> method.</span></span>  
  
 [!code-cpp[convertchangetype#1](~/samples/snippets/cpp/VS_Snippets_CLR/convertchangetype/CPP/convertchangetype.cpp#1)]
 [!code-csharp[convertchangetype#1](~/samples/snippets/csharp/VS_Snippets_CLR/convertchangetype/CS/convertchangetype.cs#1)]
 [!code-vb[convertchangetype#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/convertchangetype/VB/convertchangetype.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-205">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-205">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="278a5-206">-or-  <paramref name="value" /> is <see langword="null" /> and <paramref name="conversionType" /> is a value type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-206">-or-  <paramref name="value" /> is <see langword="null" /> and <paramref name="conversionType" /> is a value type.</span>
          </span>
          <span data-ttu-id="278a5-207">-or-  <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-207">-or-  <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-208">
            <paramref name="value" /> is not in a format recognized by <paramref name="conversionType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-208">
              <paramref name="value" /> is not in a format recognized by <paramref name="conversionType" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-209">
            <paramref name="value" /> represents a number that is out of the range of <paramref name="conversionType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-209">
              <paramref name="value" /> represents a number that is out of the range of <paramref name="conversionType" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="278a5-210">
            <paramref name="conversionType" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-210">
              <paramref name="conversionType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="278a5-211">
            <para>Die <see cref="M:System.Convert.ChangeType(System.Object,System.Type)" /> Methode kann einen Enumerationswert in einen anderen Typ konvertieren. Es kann nicht jedoch einen anderen Typ in einen Enumerationswert konvertiert, auch wenn der Quelltyp der zugrunde liegende Typ der Enumeration ist. Verwenden Sie zum Konvertieren eines Typs in einen Enumerationswert einen Typumwandlungsoperator (in c#) oder eine Konvertierungsfunktion (in Visual Basic). Das folgende Beispiel veranschaulicht die Konvertierung in und aus einem <c>Kontinent</c> -Enumerationswert.  [! code-csharp[System.Convert.ChangeType#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype_enum2.cs#5)] [! code-vb[System.Convert.ChangeType#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype_enum2.vb#5)]  Die <see cref="M:System.Convert.ChangeType(System.Object,System.Type)" /> Methode kann den nullable-Typ in einen anderen Typ konvertieren. Es kann nicht jedoch einen anderen Typ konvertieren, auf einen Wert, der dem nullable-Typ, selbst wenn <paramref name="conversionType" /> ist der zugrunde liegenden Typ des der <see cref="T:System.Nullable`1" />. Um die Konvertierung auszuführen, können Sie einen Typumwandlungsoperator (in c#) oder eine Konvertierungsfunktion (in Visual Basic). Das folgende Beispiel veranschaulicht die Konvertierung in und aus dem nullable-Typ.  [! code-csharp[System.Convert.ChangeType#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype_nullable.cs#7)] [! code-vb[System.Convert.ChangeType#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype_nullable.vb#7)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-211">
              <para>The <see cref="M:System.Convert.ChangeType(System.Object,System.Type)" /> method can convert an enumeration value to another type. However, it cannot convert another type to an enumeration value, even if the source type is the underlying type of the enumeration. To convert a type to an enumeration value, use a casting operator (in C#) or a conversion function (in Visual Basic). The following example illustrates the conversion to and from a <c>Continent</c> enumeration value.  [!code-csharp[System.Convert.ChangeType#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype_enum2.cs#5)] [!code-vb[System.Convert.ChangeType#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype_enum2.vb#5)]  The <see cref="M:System.Convert.ChangeType(System.Object,System.Type)" /> method can convert a nullable type to another type. However, it cannot convert another type to a value of a nullable type, even if <paramref name="conversionType" /> is the underlying type of the <see cref="T:System.Nullable`1" />.To perform the conversion, you can use a casting operator (in C#) or a conversion function (in Visual Basic). The following example illustrates the conversion to and from a nullable type.  [!code-csharp[System.Convert.ChangeType#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype_nullable.cs#7)] [!code-vb[System.Convert.ChangeType#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype_nullable.vb#7)]</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ChangeType">
      <MemberSignature Language="C#" Value="public static object ChangeType (object value, TypeCode typeCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ChangeType(object value, valuetype System.TypeCode typeCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ChangeType(System.Object,System.TypeCode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ChangeType(System::Object ^ value, TypeCode typeCode);" />
      <MemberSignature Language="F#" Value="static member ChangeType : obj * TypeCode -&gt; obj" Usage="System.Convert.ChangeType (value, typeCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="typeCode" Type="System.TypeCode" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-212">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-212">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="typeCode">
          <span data-ttu-id="278a5-213">The type of object to return.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-213">The type of object to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-214">Returns an object of the specified type whose value is equivalent to the specified object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-214">Returns an object of the specified type whose value is equivalent to the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-215">An object whose underlying type is <paramref name="typeCode" /> and whose value is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-215">An object whose underlying type is <paramref name="typeCode" /> and whose value is equivalent to <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="278a5-216">-or-  A null reference (<see langword="Nothing" /> in Visual Basic), if <paramref name="value" /> is <see langword="null" /> and <paramref name="typeCode" /> is <see cref="F:System.TypeCode.Empty" />, <see cref="F:System.TypeCode.String" />, or <see cref="F:System.TypeCode.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-216">-or-  A null reference (<see langword="Nothing" /> in Visual Basic), if <paramref name="value" /> is <see langword="null" /> and <paramref name="typeCode" /> is <see cref="F:System.TypeCode.Empty" />, <see cref="F:System.TypeCode.String" />, or <see cref="F:System.TypeCode.Object" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-217"><xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%29> ist eine allgemeine Konvertierungsmethode, die das Objekt vom angegebenen konvertiert `value` in einer vordefinierten vom angegebenen Typ `typeCode`.</span><span class="sxs-lookup"><span data-stu-id="278a5-217"><xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%29> is a general-purpose conversion method that converts the object specified by `value` to a predefined type specified by `typeCode`.</span></span> <span data-ttu-id="278a5-218">Die `value` Parameter kann ein Objekt eines beliebigen Typs sein.</span><span class="sxs-lookup"><span data-stu-id="278a5-218">The `value` parameter can be an object of any type.</span></span> <span data-ttu-id="278a5-219">Für die Konvertierung erfolgreich ausgeführt werden kann `value` implementieren müssen die <xref:System.IConvertible> Schnittstelle, da die Methode einfach ein Wrapper um einen Aufruf an eine entsprechende <xref:System.IConvertible> Methode.</span><span class="sxs-lookup"><span data-stu-id="278a5-219">For the conversion to succeed, `value` must implement the <xref:System.IConvertible> interface, because the method simply wraps a call to an appropriate <xref:System.IConvertible> method.</span></span> <span data-ttu-id="278a5-220">Die Methode benötigt auch diese Konvertierung von `value` auf `typeCode` unterstützt werden.</span><span class="sxs-lookup"><span data-stu-id="278a5-220">The method also requires that conversion of `value` to `typeCode` be supported.</span></span>  
  
 <span data-ttu-id="278a5-221">Die <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%29> Methode unterstützt nicht die Konvertierung von `value` an einen benutzerdefinierten Typ.</span><span class="sxs-lookup"><span data-stu-id="278a5-221">The <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%29> method does not support the conversion of `value` to a custom type.</span></span> <span data-ttu-id="278a5-222">Um eine solche Konvertierung auszuführen, rufen die <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%29> Methode.</span><span class="sxs-lookup"><span data-stu-id="278a5-222">To perform such a conversion, call the <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-223">Das folgende Beispiel zeigt, wie die <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%29> Methode so ändern Sie eine <xref:System.Object> in den vom angegebenen Typ der <xref:System.TypeCode> Parameter, wenn möglich.</span><span class="sxs-lookup"><span data-stu-id="278a5-223">The following example illustrates how to use the <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%29> method to change an <xref:System.Object> to the type specified by the <xref:System.TypeCode> parameter, if possible.</span></span>  
  
 [!code-cpp[System.Convert.ChangeType#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.convert.changetype/cpp/changetype_01.cpp#2)]
 [!code-csharp[System.Convert.ChangeType#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype01.cs#2)]
 [!code-vb[System.Convert.ChangeType#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype01.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-224">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-224">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="278a5-225">-or-  <paramref name="value" /> is <see langword="null" /> and <paramref name="typeCode" /> specifies a value type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-225">-or-  <paramref name="value" /> is <see langword="null" /> and <paramref name="typeCode" /> specifies a value type.</span>
          </span>
          <span data-ttu-id="278a5-226">-or-  <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-226">-or-  <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-227">
            <paramref name="value" /> is not in a format recognized by the <paramref name="typeCode" /> type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-227">
              <paramref name="value" /> is not in a format recognized by the <paramref name="typeCode" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-228">
            <paramref name="value" /> represents a number that is out of the range of the <paramref name="typeCode" /> type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-228">
              <paramref name="value" /> represents a number that is out of the range of the <paramref name="typeCode" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="278a5-229">
            <paramref name="typeCode" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-229">
              <paramref name="typeCode" /> is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ChangeType">
      <MemberSignature Language="C#" Value="public static object ChangeType (object value, Type conversionType, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ChangeType(object value, class System.Type conversionType, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ChangeType (value As Object, conversionType As Type, provider As IFormatProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ChangeType(System::Object ^ value, Type ^ conversionType, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ChangeType : obj * Type * IFormatProvider -&gt; obj" Usage="System.Convert.ChangeType (value, conversionType, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="conversionType" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-230">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-230">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="conversionType">
          <span data-ttu-id="278a5-231">The type of object to return.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-231">The type of object to return.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="278a5-232">An object that supplies culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-232">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-233">Returns an object of the specified type whose value is equivalent to the specified object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-233">Returns an object of the specified type whose value is equivalent to the specified object.</span>
          </span>
          <span data-ttu-id="278a5-234">A parameter supplies culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-234">A parameter supplies culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-235">An object whose type is <paramref name="conversionType" /> and whose value is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-235">An object whose type is <paramref name="conversionType" /> and whose value is equivalent to <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="278a5-236">-or-  <paramref name="value" />, if the <see cref="T:System.Type" /> of <paramref name="value" /> and <paramref name="conversionType" /> are equal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-236">-or-  <paramref name="value" />, if the <see cref="T:System.Type" /> of <paramref name="value" /> and <paramref name="conversionType" /> are equal.</span>
          </span>
          <span data-ttu-id="278a5-237">-or-  A null reference (<see langword="Nothing" /> in Visual Basic), if <paramref name="value" /> is <see langword="null" /> and <paramref name="conversionType" /> is not a value type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-237">-or-  A null reference (<see langword="Nothing" /> in Visual Basic), if <paramref name="value" /> is <see langword="null" /> and <paramref name="conversionType" /> is not a value type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-238"><xref:System.Convert.ChangeType%2A> ist eine allgemeine Konvertierungsmethode, die das Objekt vom angegebenen konvertiert `value` auf `conversionType`.</span><span class="sxs-lookup"><span data-stu-id="278a5-238"><xref:System.Convert.ChangeType%2A> is a general-purpose conversion method that converts the object specified by `value` to `conversionType`.</span></span> <span data-ttu-id="278a5-239">Die `value` Parameter kann ein Objekt eines beliebigen Typs sein und `conversionType` kann auch ein <xref:System.Type> Objekt, das einen beliebigen Basistyp oder benutzerdefinierten Typ darstellt.</span><span class="sxs-lookup"><span data-stu-id="278a5-239">The `value` parameter can be an object of any type, and `conversionType` can also be a <xref:System.Type> object that represents any base or custom type.</span></span> <span data-ttu-id="278a5-240">Für die Konvertierung erfolgreich ausgeführt werden kann `value` implementieren müssen die <xref:System.IConvertible> Schnittstelle, da die Methode einfach ein Wrapper um einen Aufruf an eine entsprechende <xref:System.IConvertible> Methode.</span><span class="sxs-lookup"><span data-stu-id="278a5-240">For the conversion to succeed, `value` must implement the <xref:System.IConvertible> interface, because the method simply wraps a call to an appropriate <xref:System.IConvertible> method.</span></span> <span data-ttu-id="278a5-241">Die Methode benötigt, Konvertierung von `value` auf `conversionType` unterstützt werden.</span><span class="sxs-lookup"><span data-stu-id="278a5-241">The method requires that conversion of `value` to `conversionType` be supported.</span></span>  
  
 <span data-ttu-id="278a5-242">Die `provider` Parameter ist ein <xref:System.IFormatProvider> Implementierung, die Formatierungsinformationen für die Konvertierung bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="278a5-242">The `provider` parameter is an <xref:System.IFormatProvider> implementation that supplies formatting information for the conversion.</span></span> <span data-ttu-id="278a5-243">Gibt an, ob und wie diese Parameter verwendet wird hängt von den zugrunde liegenden <xref:System.IConvertible> Implementierung.</span><span class="sxs-lookup"><span data-stu-id="278a5-243">Whether and how this parameter is used depends on the underlying <xref:System.IConvertible> implementation.</span></span> <span data-ttu-id="278a5-244">Wenn `value` ist ein Basisdatentyp `provider` wird nur für die folgenden Konvertierungen verwendet:</span><span class="sxs-lookup"><span data-stu-id="278a5-244">If `value` is a base data type, `provider` is used only for the following conversions:</span></span>  
  
-   <span data-ttu-id="278a5-245">Konvertierung aus einer Zahl in eine Zeichenfolge oder aus einer Zeichenfolge in eine Zahl.</span><span class="sxs-lookup"><span data-stu-id="278a5-245">Conversion from a number to a string, or from a string to a number.</span></span> <span data-ttu-id="278a5-246">`provider` muss ein <xref:System.Globalization.CultureInfo> -Objekt, eine <xref:System.Globalization.NumberFormatInfo> Objekt oder eine benutzerdefinierte <xref:System.IFormatProvider> Implementierung, die zurückgibt ein <xref:System.Globalization.NumberFormatInfo> Objekt.</span><span class="sxs-lookup"><span data-stu-id="278a5-246">`provider` must be a <xref:System.Globalization.CultureInfo> object, a <xref:System.Globalization.NumberFormatInfo> object, or a custom <xref:System.IFormatProvider> implementation that returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="278a5-247">Jedoch, da die <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> -Methode führt die Konvertierung mit dem Standardwert "G"-Formatbezeichner die `provider` Parameter hat keine Auswirkung, wenn `value` oder der Zieltyp ist eine Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="278a5-247">However, because the <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> method performs the conversion using the default "G" format specifier, the `provider` parameter has no effect if `value` or the target type is an unsigned integer.</span></span> <span data-ttu-id="278a5-248">Wenn `provider` ist `null`die <xref:System.Globalization.CultureInfo> Objekt, das die aktuelle Threadkultur darstellt, wird verwendet.</span><span class="sxs-lookup"><span data-stu-id="278a5-248">If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that represents the current thread culture is used.</span></span>  
  
-   <span data-ttu-id="278a5-249">Konvertierung von einem <xref:System.DateTime> Wert in eine Zeichenfolge oder aus einer Zeichenfolge in eine <xref:System.DateTime> Wert.</span><span class="sxs-lookup"><span data-stu-id="278a5-249">Conversion from a <xref:System.DateTime> value to a string, or from a string to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="278a5-250">`provider` muss ein <xref:System.Globalization.CultureInfo> oder <xref:System.Globalization.DateTimeFormatInfo> Objekt.</span><span class="sxs-lookup"><span data-stu-id="278a5-250">`provider` must be a <xref:System.Globalization.CultureInfo> or <xref:System.Globalization.DateTimeFormatInfo> object.</span></span> <span data-ttu-id="278a5-251">Wenn `provider` ist `null`die <xref:System.Globalization.CultureInfo> Objekt, das die aktuelle Threadkultur darstellt, wird verwendet.</span><span class="sxs-lookup"><span data-stu-id="278a5-251">If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that represents the current thread culture is used.</span></span>  
  
 <span data-ttu-id="278a5-252">Wenn `value` ein anwendungsdefinierten Typ, dessen <xref:System.IConvertible> Implementierung möglicherweise verwenden Sie die `provider` Parameter.</span><span class="sxs-lookup"><span data-stu-id="278a5-252">If `value` is an application-defined type, its <xref:System.IConvertible> implementation may use the `provider` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-253">Im folgenden Beispiel wird eine `Temperature`-Klasse definiert, die die <xref:System.IConvertible>-Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="278a5-253">The following example defines a `Temperature` class that implements the <xref:System.IConvertible> interface.</span></span>  
  
 [!code-cpp[System.Convert.ChangeType#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.convert.changetype/cpp/changetype03.cpp#3)]
 [!code-csharp[System.Convert.ChangeType#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype03.cs#3)]
 [!code-vb[System.Convert.ChangeType#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype03.vb#3)]  
  
 <span data-ttu-id="278a5-254">Das folgende Beispiel erstellt eine Instanz von der `Temperature` Klasse und ruft die <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29> Methode für die Konvertierung in die grundlegenden numerischen Typen unterstützt, die von .NET Framework und zu einer <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="278a5-254">The following example creates an instance of the `Temperature` class and calls the <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29> method to convert it to the basic numeric types supported by the .NET Framework and to a <xref:System.String>.</span></span> <span data-ttu-id="278a5-255">Es wird veranschaulicht, dass die <xref:System.Convert.ChangeType%2A> Methode bindet einen Aufruf des Quelltyps <xref:System.IConvertible> Implementierung.</span><span class="sxs-lookup"><span data-stu-id="278a5-255">It illustrates that the <xref:System.Convert.ChangeType%2A> method wraps a call to the source type's <xref:System.IConvertible> implementation.</span></span>  
  
 [!code-cpp[System.Convert.ChangeType#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.convert.changetype/cpp/changetype03.cpp#4)]
 [!code-csharp[System.Convert.ChangeType#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype03.cs#4)]
 [!code-vb[System.Convert.ChangeType#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype03.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-256">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-256">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="278a5-257">-or-  <paramref name="value" /> is <see langword="null" /> and <paramref name="conversionType" /> is a value type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-257">-or-  <paramref name="value" /> is <see langword="null" /> and <paramref name="conversionType" /> is a value type.</span>
          </span>
          <span data-ttu-id="278a5-258">-or-  <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-258">-or-  <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-259">
            <paramref name="value" /> is not in a format for <paramref name="conversionType" /> recognized by <paramref name="provider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-259">
              <paramref name="value" /> is not in a format for <paramref name="conversionType" /> recognized by <paramref name="provider" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-260">
            <paramref name="value" /> represents a number that is out of the range of <paramref name="conversionType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-260">
              <paramref name="value" /> represents a number that is out of the range of <paramref name="conversionType" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="278a5-261">
            <paramref name="conversionType" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-261">
              <paramref name="conversionType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="278a5-262">
            <para>Die <see cref="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)" /> Methode kann einen Enumerationswert in einen anderen Typ konvertieren. Es kann nicht jedoch einen anderen Typ in einen Enumerationswert konvertiert, auch wenn der Quelltyp der zugrunde liegende Typ der Enumeration ist. Verwenden Sie zum Konvertieren eines Typs in einen Enumerationswert einen Typumwandlungsoperator (in c#) oder eine Konvertierungsfunktion (in Visual Basic). Das folgende Beispiel veranschaulicht die Konvertierung in und aus einem <c>Kontinent</c> -Enumerationswert.  [! code-csharp[System.Convert.ChangeType#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype_enum2.cs#5)] [! code-vb[System.Convert.ChangeType#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype_enum2.vb#5)]  Die <see cref="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)" /> Methode kann den nullable-Typ in einen anderen Typ konvertieren. Es kann nicht jedoch einen anderen Typ konvertieren, auf einen Wert, der dem nullable-Typ, selbst wenn <paramref name="conversionType" /> ist der zugrunde liegenden Typ des der <see cref="T:System.Nullable`1" />. Um die Konvertierung auszuführen, können Sie einen Typumwandlungsoperator (in c#) oder eine Konvertierungsfunktion (in Visual Basic). Das folgende Beispiel veranschaulicht die Konvertierung in und aus dem nullable-Typ.  [! code-csharp[System.Convert.ChangeType#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype_nullable_1.cs#8)] [! code-vb[System.Convert.ChangeType#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype_nullable_1.vb#8)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-262">
              <para>The <see cref="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)" /> method can convert an enumeration value to another type. However, it cannot convert another type to an enumeration value, even if the source type is the underlying type of the enumeration. To convert a type to an enumeration value, use a casting operator (in C#) or a conversion function (in Visual Basic). The following example illustrates the conversion to and from a <c>Continent</c> enumeration value.  [!code-csharp[System.Convert.ChangeType#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype_enum2.cs#5)] [!code-vb[System.Convert.ChangeType#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype_enum2.vb#5)]  The <see cref="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)" /> method can convert a nullable type to another type. However, it cannot convert another type to a value of a nullable type, even if <paramref name="conversionType" /> is the underlying type of the <see cref="T:System.Nullable`1" />. To perform the conversion, you can use a casting operator (in C#) or a conversion function (in Visual Basic). The following example illustrates the conversion to and from a nullable type.  [!code-csharp[System.Convert.ChangeType#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype_nullable_1.cs#8)] [!code-vb[System.Convert.ChangeType#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype_nullable_1.vb#8)]</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ChangeType">
      <MemberSignature Language="C#" Value="public static object ChangeType (object value, TypeCode typeCode, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ChangeType(object value, valuetype System.TypeCode typeCode, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ChangeType(System.Object,System.TypeCode,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ChangeType(System::Object ^ value, TypeCode typeCode, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ChangeType : obj * TypeCode * IFormatProvider -&gt; obj" Usage="System.Convert.ChangeType (value, typeCode, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="typeCode" Type="System.TypeCode" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-263">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-263">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="typeCode">
          <span data-ttu-id="278a5-264">The type of object to return.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-264">The type of object to return.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="278a5-265">An object that supplies culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-265">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-266">Returns an object of the specified type whose value is equivalent to the specified object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-266">Returns an object of the specified type whose value is equivalent to the specified object.</span>
          </span>
          <span data-ttu-id="278a5-267">A parameter supplies culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-267">A parameter supplies culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-268">An object whose underlying type is <paramref name="typeCode" /> and whose value is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-268">An object whose underlying type is <paramref name="typeCode" /> and whose value is equivalent to <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="278a5-269">-or-  A null reference (<see langword="Nothing" /> in Visual Basic), if <paramref name="value" /> is <see langword="null" /> and <paramref name="typeCode" /> is <see cref="F:System.TypeCode.Empty" />, <see cref="F:System.TypeCode.String" />, or <see cref="F:System.TypeCode.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-269">-or-  A null reference (<see langword="Nothing" /> in Visual Basic), if <paramref name="value" /> is <see langword="null" /> and <paramref name="typeCode" /> is <see cref="F:System.TypeCode.Empty" />, <see cref="F:System.TypeCode.String" />, or <see cref="F:System.TypeCode.Object" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-270"><xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> ist eine allgemeine Konvertierungsmethode, die das Objekt vom angegebenen konvertiert `value` in einer vordefinierten vom angegebenen Typ `typeCode`.</span><span class="sxs-lookup"><span data-stu-id="278a5-270"><xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> is a general-purpose conversion method that converts the object specified by `value` to a predefined type specified by `typeCode`.</span></span> <span data-ttu-id="278a5-271">Die `value` Parameter kann ein Objekt eines beliebigen Typs sein.</span><span class="sxs-lookup"><span data-stu-id="278a5-271">The `value` parameter can be an object of any type.</span></span> <span data-ttu-id="278a5-272">Für die Konvertierung erfolgreich ausgeführt werden kann `value` implementieren müssen die <xref:System.IConvertible> Schnittstelle, da die Methode einfach ein Wrapper um einen Aufruf an eine entsprechende <xref:System.IConvertible> Methode.</span><span class="sxs-lookup"><span data-stu-id="278a5-272">For the conversion to succeed, `value` must implement the <xref:System.IConvertible> interface, because the method simply wraps a call to an appropriate <xref:System.IConvertible> method.</span></span> <span data-ttu-id="278a5-273">Die Methode benötigt auch diese Konvertierung von `value` auf `typeCode` unterstützt werden.</span><span class="sxs-lookup"><span data-stu-id="278a5-273">The method also requires that conversion of `value` to `typeCode` be supported.</span></span>  
  
 <span data-ttu-id="278a5-274">Die <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> Methode unterstützt nicht die Konvertierung von `value` an einen benutzerdefinierten Typ.</span><span class="sxs-lookup"><span data-stu-id="278a5-274">The <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> method does not support the conversion of `value` to a custom type.</span></span> <span data-ttu-id="278a5-275">Um eine solche Konvertierung auszuführen, rufen die <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29> Methode.</span><span class="sxs-lookup"><span data-stu-id="278a5-275">To perform such a conversion, call the <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29> method.</span></span>  
  
 <span data-ttu-id="278a5-276">Die `provider` Parameter ist ein <xref:System.IFormatProvider> Implementierung, die Formatierungsinformationen für die Konvertierung bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="278a5-276">The `provider` parameter is an <xref:System.IFormatProvider> implementation that supplies formatting information for the conversion.</span></span> <span data-ttu-id="278a5-277">Gibt an, ob und wie diese Parameter verwendet wird hängt von den zugrunde liegenden <xref:System.IConvertible> Implementierung.</span><span class="sxs-lookup"><span data-stu-id="278a5-277">Whether and how this parameter is used depends on the underlying <xref:System.IConvertible> implementation.</span></span> <span data-ttu-id="278a5-278">Wenn `value` ist ein Basisdatentyp `provider` wird nur für die folgenden Konvertierungen verwendet.</span><span class="sxs-lookup"><span data-stu-id="278a5-278">If `value` is a base data type, `provider` is used only for the following conversions.</span></span> <span data-ttu-id="278a5-279">Wenn eine `null` <xref:System.IFormatProvider> Argument wird an diese Methoden übergeben der <xref:System.Globalization.CultureInfo> Objekt, das die aktuelle Threadkultur darstellt, wird verwendet.</span><span class="sxs-lookup"><span data-stu-id="278a5-279">If a `null`<xref:System.IFormatProvider> argument is passed to these methods, the <xref:System.Globalization.CultureInfo> object that represents the current thread culture is used.</span></span>  
  
-   <span data-ttu-id="278a5-280">Konvertierung aus einer Zahl in eine Zeichenfolge oder aus einer Zeichenfolge in eine Zahl.</span><span class="sxs-lookup"><span data-stu-id="278a5-280">Conversion from a number to a string, or from a string to a number.</span></span> <span data-ttu-id="278a5-281">`provider` muss ein <xref:System.Globalization.CultureInfo> -Objekt, eine <xref:System.Globalization.NumberFormatInfo> Objekt oder eine benutzerdefinierte <xref:System.IFormatProvider> Implementierung, die zurückgibt ein <xref:System.Globalization.NumberFormatInfo> Objekt.</span><span class="sxs-lookup"><span data-stu-id="278a5-281">`provider` must be a <xref:System.Globalization.CultureInfo> object, a <xref:System.Globalization.NumberFormatInfo> object, or a custom <xref:System.IFormatProvider> implementation that returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="278a5-282">Jedoch, da die <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> -Methode führt die Konvertierung mit dem Standardwert "G"-Formatbezeichner die `provider` Parameter hat keine Auswirkung, wenn `value` oder der Zieltyp ist eine Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="278a5-282">However, because the <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> method performs the conversion using the default "G" format specifier, the `provider` parameter has no effect if `value` or the target type is an unsigned integer.</span></span>  
  
-   <span data-ttu-id="278a5-283">Konvertierung von einem <xref:System.DateTime> Wert in eine Zeichenfolge oder aus einer Zeichenfolge in eine <xref:System.DateTime> Wert.</span><span class="sxs-lookup"><span data-stu-id="278a5-283">Conversion from a <xref:System.DateTime> value to a string, or from a string to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="278a5-284">`provider` muss ein <xref:System.Globalization.CultureInfo> oder <xref:System.Globalization.DateTimeFormatInfo> Objekt.</span><span class="sxs-lookup"><span data-stu-id="278a5-284">`provider` must be a <xref:System.Globalization.CultureInfo> or <xref:System.Globalization.DateTimeFormatInfo> object.</span></span>  
  
 <span data-ttu-id="278a5-285">Wenn `value` ein anwendungsdefinierten Typ, dessen <xref:System.IConvertible> Implementierung möglicherweise verwenden Sie die `provider` Parameter.</span><span class="sxs-lookup"><span data-stu-id="278a5-285">If `value` is an application-defined type, its <xref:System.IConvertible> implementation may use the `provider` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-286">Das folgende Beispiel definiert einen benutzerdefinierten Formatanbieter, der mit dem Namen `InterceptProvider` , der gibt an, wann die <xref:System.IFormatProvider.GetFormat%2A> Methode wird aufgerufen, und gibt eine <xref:System.Globalization.NumberFormatInfo> für die Kultur fr-FR und ein <xref:System.Globalization.DateTimeFormatInfo> Objekt für die Kultur En-US.</span><span class="sxs-lookup"><span data-stu-id="278a5-286">The following example defines a custom format provider named `InterceptProvider` that indicates when its <xref:System.IFormatProvider.GetFormat%2A> method is called and returns a <xref:System.Globalization.NumberFormatInfo> for the fr-FR culture and a <xref:System.Globalization.DateTimeFormatInfo> object for the en-US culture.</span></span> <span data-ttu-id="278a5-287">Dieser Formatanbieter wird verwendet, in allen Aufrufen an die <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> Methode.</span><span class="sxs-lookup"><span data-stu-id="278a5-287">This format provider is used in all calls to the <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> method.</span></span> <span data-ttu-id="278a5-288">Im Beispiel wird ein Array mit erstellt eine <xref:System.Double> und ein <xref:System.DateTime> Wert und macht Sie wiederholte Aufrufe von <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> mit einzelnen Werten und jedes Mitglied der <xref:System.TypeCode> Enumeration.</span><span class="sxs-lookup"><span data-stu-id="278a5-288">The example then creates an array with a <xref:System.Double> and a <xref:System.DateTime> value and makes repeated calls to <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> with each value and each member of the <xref:System.TypeCode> enumeration.</span></span> <span data-ttu-id="278a5-289">Im Beispiel wird veranschaulicht, wenn die Methode verwendet die <xref:System.IFormatProvider> Parameter und veranschaulicht die Verwendung von der `provider` Parameter, um kulturabhängige Formatierung auszuführen.</span><span class="sxs-lookup"><span data-stu-id="278a5-289">The example illustrates when the method uses the <xref:System.IFormatProvider> parameter and also illustrates the use of the `provider` parameter to perform culture-sensitive formatting.</span></span>  
  
 [!code-cpp[System.Convert.ChangeType#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.convert.changetype/cpp/changetype00.cpp#1)]
 [!code-csharp[System.Convert.ChangeType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype00.cs#1)]
 [!code-vb[System.Convert.ChangeType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype00.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-290">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-290">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="278a5-291">-or-  <paramref name="value" /> is <see langword="null" /> and <paramref name="typeCode" /> specifies a value type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-291">-or-  <paramref name="value" /> is <see langword="null" /> and <paramref name="typeCode" /> specifies a value type.</span>
          </span>
          <span data-ttu-id="278a5-292">-or-  <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-292">-or-  <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-293">
            <paramref name="value" /> is not in a format for the <paramref name="typeCode" /> type recognized by <paramref name="provider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-293">
              <paramref name="value" /> is not in a format for the <paramref name="typeCode" /> type recognized by <paramref name="provider" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-294">
            <paramref name="value" /> represents a number that is out of the range of the <paramref name="typeCode" /> type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-294">
              <paramref name="value" /> represents a number that is out of the range of the <paramref name="typeCode" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="278a5-295">
            <paramref name="typeCode" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-295">
              <paramref name="typeCode" /> is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DBNull">
      <MemberSignature Language="C#" Value="public static readonly object DBNull;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly object DBNull" />
      <MemberSignature Language="DocId" Value="F:System.Convert.DBNull" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DBNull As Object " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Object ^ DBNull;" />
      <MemberSignature Language="F#" Value=" staticval mutable DBNull : obj" Usage="System.Convert.DBNull" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="278a5-296">A constant that represents a database column that is absent of data; that is, database null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-296">A constant that represents a database column that is absent of data; that is, database null.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-297">Die <xref:System.Convert.DBNull> Feld entspricht <xref:System.DBNull.Value?displayProperty=nameWithType>, wie im folgende Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="278a5-297">The <xref:System.Convert.DBNull> field is equivalent to <xref:System.DBNull.Value?displayProperty=nameWithType>, as the following example shows.</span></span>  
  
 [!code-csharp[System.Convert.DBNull#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.dbnull/cs/dbnull1.cs#1)]
 [!code-vb[System.Convert.DBNull#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.dbnull/vb/dbnull1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DBNull" />
        <altmember cref="F:System.DBNull.Value" />
      </Docs>
    </Member>
    <Member MemberName="FromBase64CharArray">
      <MemberSignature Language="C#" Value="public static byte[] FromBase64CharArray (char[] inArray, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] FromBase64CharArray(char[] inArray, int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromBase64CharArray (inArray As Char(), offset As Integer, length As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ FromBase64CharArray(cli::array &lt;char&gt; ^ inArray, int offset, int length);" />
      <MemberSignature Language="F#" Value="static member FromBase64CharArray : char[] * int * int -&gt; byte[]" Usage="System.Convert.FromBase64CharArray (inArray, offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inArray" Type="System.Char[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inArray">
          <span data-ttu-id="278a5-298">A Unicode character array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-298">A Unicode character array.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="278a5-299">A position within <c>inArray</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-299">A position within <c>inArray</c>.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="278a5-300">The number of elements in <c>inArray</c> to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-300">The number of elements in <c>inArray</c> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-301">Converts a subset of a Unicode character array, which encodes binary data as base-64 digits, to an equivalent 8-bit unsigned integer array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-301">Converts a subset of a Unicode character array, which encodes binary data as base-64 digits, to an equivalent 8-bit unsigned integer array.</span>
          </span>
          <span data-ttu-id="278a5-302">Parameters specify the subset in the input array and the number of elements to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-302">Parameters specify the subset in the input array and the number of elements to convert.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-303">An array of 8-bit unsigned integers equivalent to <paramref name="length" /> elements at position <paramref name="offset" /> in <paramref name="inArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-303">An array of 8-bit unsigned integers equivalent to <paramref name="length" /> elements at position <paramref name="offset" /> in <paramref name="inArray" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-304">`inArray` besteht aus Base-64-Ziffern, Leerzeichen und nachfolgende Füllzeichen.</span><span class="sxs-lookup"><span data-stu-id="278a5-304">`inArray` is composed of base-64 digits, white-space characters, and trailing padding characters.</span></span> <span data-ttu-id="278a5-305">Die Base-64-Ziffern von 0 (null) in aufsteigender Reihenfolge werden die Großbuchstaben "A" bis "Z", die Kleinbuchstaben "a" bis "Z", die Ziffern "0" bis "9", und die Symbole "+" und "/".</span><span class="sxs-lookup"><span data-stu-id="278a5-305">The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", lowercase characters "a" to "z", numerals "0" to "9", and the symbols "+" and "/".</span></span>  
  
 <span data-ttu-id="278a5-306">Die Leerzeichen, Unicode-Namen und Hexadezimalcode-Punkte sind Registerkarte (Zeichentabelle, U + 0009), Zeilenumbruch (LINE FEED, U + 000A), Wagenrücklaufzeichen (CARRIAGE RETURN, U + 000D) und Leerzeichen (Leerzeichen, U + 0020).</span><span class="sxs-lookup"><span data-stu-id="278a5-306">The white-space characters, and their Unicode names and hexadecimal code points, are tab (CHARACTER TABULATION, U+0009), newline (LINE FEED, U+000A), carriage return (CARRIAGE RETURN, U+000D), and blank (SPACE, U+0020).</span></span> <span data-ttu-id="278a5-307">Eine beliebige Anzahl von Leerzeichen stehen `inArray` da alle Leerzeichen ignoriert werden.</span><span class="sxs-lookup"><span data-stu-id="278a5-307">An arbitrary number of white-space characters can appear in `inArray` because all white-space characters are ignored.</span></span>  
  
 <span data-ttu-id="278a5-308">Die nutzlos Zeichen, "=" wird für nachfolgende Füllzeichen verwendet.</span><span class="sxs-lookup"><span data-stu-id="278a5-308">The valueless character, "=", is used for trailing padding.</span></span> <span data-ttu-id="278a5-309">Das Ende des `inArray` kann 0 (null), ein oder zwei Füllzeichen ein Zeichen bestehen.</span><span class="sxs-lookup"><span data-stu-id="278a5-309">The end of `inArray` can consist of zero, one, or two padding characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="278a5-310">Die <xref:System.Convert.FromBase64CharArray%2A> -Methode entwickelt, um ein Array von einzelnen Zeichen zu verarbeiten, die alle Daten, die zu decodierende enthält.</span><span class="sxs-lookup"><span data-stu-id="278a5-310">The <xref:System.Convert.FromBase64CharArray%2A> method is designed to process a single character array that contains all the data to be decoded.</span></span> <span data-ttu-id="278a5-311">Um Base64-Zeichendaten aus einem Stream zu decodieren, verwenden die <xref:System.Security.Cryptography.FromBase64Transform?displayProperty=nameWithType> Klasse.</span><span class="sxs-lookup"><span data-stu-id="278a5-311">To decode base-64 character data from a stream, use the <xref:System.Security.Cryptography.FromBase64Transform?displayProperty=nameWithType> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-312">Das folgende Beispiel veranschaulicht die Verwendung von der <xref:System.Convert.FromBase64CharArray%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> -Methode zum Decodieren von Daten UUencoded (Base-64), und speichern Sie sie als binäre Ausgabe.</span><span class="sxs-lookup"><span data-stu-id="278a5-312">The following example demonstrates the use of the <xref:System.Convert.FromBase64CharArray%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method to decode UUencoded (base-64) data and save it as binary output.</span></span>  
  
 [!code-cpp[System.Convert UUEncodeDecode functions#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Convert UUEncodeDecode functions/CPP/class1.cpp#3)]
 [!code-csharp[System.Convert UUEncodeDecode functions#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Convert UUEncodeDecode functions/CS/class1.cs#3)]
 [!code-vb[System.Convert UUEncodeDecode functions#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Convert UUEncodeDecode functions/VB/class1.vb#3)]  
  
 <span data-ttu-id="278a5-313">Das folgende Beispiel veranschaulicht die <xref:System.Convert.ToBase64CharArray%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%2CSystem.Base64FormattingOptions%29> und <xref:System.Convert.FromBase64CharArray%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> Methoden.</span><span class="sxs-lookup"><span data-stu-id="278a5-313">The following example demonstrates the <xref:System.Convert.ToBase64CharArray%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%2CSystem.Base64FormattingOptions%29> and <xref:System.Convert.FromBase64CharArray%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> methods.</span></span> <span data-ttu-id="278a5-314">Die Eingabe wird in Gruppen von drei Bytes (24 Bits) unterteilt.</span><span class="sxs-lookup"><span data-stu-id="278a5-314">The input is divided into groups of three bytes (24 bits) each.</span></span> <span data-ttu-id="278a5-315">Folglich besteht aus jeder Gruppe vier 6-Bit-Zahlen, wobei jede Zahl von 0 bis 63 reicht.</span><span class="sxs-lookup"><span data-stu-id="278a5-315">Consequently, each group consists of four 6-bit numbers where each number ranges from decimal 0 to 63.</span></span> <span data-ttu-id="278a5-316">In diesem Beispiel befinden sich 85 3 Bytes bestehende Gruppen mit einem Byte Rest.</span><span class="sxs-lookup"><span data-stu-id="278a5-316">In this example, there are 85 3-byte groups with one byte remaining.</span></span> <span data-ttu-id="278a5-317">Die erste Gruppe besteht aus den Hexadezimalwerten 00, 01 und 02, die vier 6-Bit-Werte gleich decimal 0, 0, 4 und 2 ergeben.</span><span class="sxs-lookup"><span data-stu-id="278a5-317">The first group consists of the hexadecimal values 00, 01, and 02, which yield four 6-bit values equal to decimal 0, 0, 4, and 2.</span></span> <span data-ttu-id="278a5-318">Diese vier Werte entsprechen den Base-64-Ziffern "A", "A", "E" und "C", am Anfang der Ausgabe.</span><span class="sxs-lookup"><span data-stu-id="278a5-318">Those four values correspond to the base-64 digits, "A", "A", "E", and "C", at the beginning of the output.</span></span>  
  
 <span data-ttu-id="278a5-319">Wenn eine ganze Zahl 3 Bytes bestehende Gruppen nicht vorhanden ist, werden die restlichen Bytes mit Nullen zu einer vollständigen Gruppe effektiv aufgefüllt.</span><span class="sxs-lookup"><span data-stu-id="278a5-319">If an integral number of 3-byte groups does not exist, the remaining bytes are effectively padded with zeros to form a complete group.</span></span> <span data-ttu-id="278a5-320">In diesem Beispiel ist der Wert des letzten Bytes hexadezimal FF.</span><span class="sxs-lookup"><span data-stu-id="278a5-320">In this example, the value of the last byte is hexadecimal FF.</span></span> <span data-ttu-id="278a5-321">Die ersten 6 Bits sind gleich dem Dezimalwert 63, die entspricht der Base64-Ziffern "/" am Ende der Ausgabe, und die nächsten 2 Bits mit Nullen decimal 48 ergeben, der Base-64-Ziffern, "w" entspricht aufgefüllt.</span><span class="sxs-lookup"><span data-stu-id="278a5-321">The first 6 bits are equal to decimal 63, which corresponds to the base-64 digit "/" at the end of the output, and the next 2 bits are padded with zeros to yield decimal 48, which corresponds to the base-64 digit, "w".</span></span> <span data-ttu-id="278a5-322">Die beiden letzten 6-Bit-Werte werden aufgefüllt und entsprechen dem nutzlos Füllzeichen "=".</span><span class="sxs-lookup"><span data-stu-id="278a5-322">The last two 6-bit values are padding and correspond to the valueless padding character, "=".</span></span>  
  
 [!code-cpp[convert.tobase64chararray#1](~/samples/snippets/cpp/VS_Snippets_CLR/convert.tobase64chararray/CPP/tb64ca.cpp#1)]
 [!code-csharp[convert.tobase64chararray#1](~/samples/snippets/csharp/VS_Snippets_CLR/convert.tobase64chararray/CS/tb64ca.cs#1)]
 [!code-vb[convert.tobase64chararray#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/convert.tobase64chararray/VB/tb64ca.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="278a5-323">
            <paramref name="inArray" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-323">
              <paramref name="inArray" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="278a5-324">
            <paramref name="offset" /> or <paramref name="length" /> is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-324">
              <paramref name="offset" /> or <paramref name="length" /> is less than 0.</span>
          </span>
          <span data-ttu-id="278a5-325">-or-  <paramref name="offset" /> plus <paramref name="length" /> indicates a position not within <paramref name="inArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-325">-or-  <paramref name="offset" /> plus <paramref name="length" /> indicates a position not within <paramref name="inArray" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-326">The length of <paramref name="inArray" />, ignoring white-space characters, is not zero or a multiple of 4.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-326">The length of <paramref name="inArray" />, ignoring white-space characters, is not zero or a multiple of 4.</span>
          </span>
          <span data-ttu-id="278a5-327">-or-  The format of <paramref name="inArray" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-327">-or-  The format of <paramref name="inArray" /> is invalid.</span>
          </span>
          <span data-ttu-id="278a5-328">
            <paramref name="inArray" /> contains a non-base-64 character, more than two padding characters, or a non-white-space character among the padding characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-328">
              <paramref name="inArray" /> contains a non-base-64 character, more than two padding characters, or a non-white-space character among the padding characters.</span>
          </span>
        </exception>
        <altmember cref="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="T:System.Security.Cryptography.FromBase64Transform" />
      </Docs>
    </Member>
    <Member MemberName="FromBase64String">
      <MemberSignature Language="C#" Value="public static byte[] FromBase64String (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] FromBase64String(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.FromBase64String(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromBase64String (s As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ FromBase64String(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member FromBase64String : string -&gt; byte[]" Usage="System.Convert.FromBase64String s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="278a5-329">The string to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-329">The string to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-330">Converts the specified string, which encodes binary data as base-64 digits, to an equivalent 8-bit unsigned integer array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-330">Converts the specified string, which encodes binary data as base-64 digits, to an equivalent 8-bit unsigned integer array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-331">An array of 8-bit unsigned integers that is equivalent to <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-331">An array of 8-bit unsigned integers that is equivalent to <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-332">`s` besteht aus Base-64-Ziffern, Leerzeichen und nachfolgende Füllzeichen.</span><span class="sxs-lookup"><span data-stu-id="278a5-332">`s` is composed of base-64 digits, white-space characters, and trailing padding characters.</span></span> <span data-ttu-id="278a5-333">Die Base-64-Ziffern von 0 (null) in aufsteigender Reihenfolge werden die Großbuchstaben "A" bis "Z", die Kleinbuchstaben "a" bis "Z", die Ziffern "0" bis "9", und die Symbole "+" und "/".</span><span class="sxs-lookup"><span data-stu-id="278a5-333">The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", lowercase characters "a" to "z", numerals "0" to "9", and the symbols "+" and "/".</span></span>  
  
 <span data-ttu-id="278a5-334">Die Leerzeichen, Unicode-Namen und Hexadezimalcode-Punkte sind Registerkarte (Zeichentabelle, U + 0009), Zeilenumbruch (LINE FEED, U + 000A), Wagenrücklaufzeichen (CARRIAGE RETURN, U + 000D) und Leerzeichen (Leerzeichen, U + 0020).</span><span class="sxs-lookup"><span data-stu-id="278a5-334">The white-space characters, and their Unicode names and hexadecimal code points, are tab (CHARACTER TABULATION, U+0009), newline (LINE FEED, U+000A), carriage return (CARRIAGE RETURN, U+000D), and blank (SPACE, U+0020).</span></span> <span data-ttu-id="278a5-335">Eine beliebige Anzahl von Leerzeichen stehen `s` da alle Leerzeichen ignoriert werden.</span><span class="sxs-lookup"><span data-stu-id="278a5-335">An arbitrary number of white-space characters can appear in `s` because all white-space characters are ignored.</span></span>  
  
 <span data-ttu-id="278a5-336">Die nutzlos Zeichen, "=" wird für nachfolgende Füllzeichen verwendet.</span><span class="sxs-lookup"><span data-stu-id="278a5-336">The valueless character, "=", is used for trailing padding.</span></span> <span data-ttu-id="278a5-337">Das Ende des `s` kann 0 (null), ein oder zwei Füllzeichen ein Zeichen bestehen.</span><span class="sxs-lookup"><span data-stu-id="278a5-337">The end of `s` can consist of zero, one, or two padding characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="278a5-338">Die <xref:System.Convert.FromBase64String%2A> -Methode entwickelt, um eine einzelne Zeichenfolge zu verarbeiten, die alle Daten, die zu decodierende enthält.</span><span class="sxs-lookup"><span data-stu-id="278a5-338">The <xref:System.Convert.FromBase64String%2A> method is designed to process a single string that contains all the data to be decoded.</span></span> <span data-ttu-id="278a5-339">Um Base64-Zeichendaten aus einem Stream zu decodieren, verwenden die <xref:System.Security.Cryptography.FromBase64Transform?displayProperty=nameWithType> Klasse.</span><span class="sxs-lookup"><span data-stu-id="278a5-339">To decode base-64 character data from a stream, use the <xref:System.Security.Cryptography.FromBase64Transform?displayProperty=nameWithType> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-340">Im folgenden Beispiel wird die <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29> -Methode zum Konvertieren von einem Bytearray in eine Zeichenfolge UUencoded (Base-64), und ruft dann die <xref:System.Convert.FromBase64String%28System.String%29> Verfahren zum Wiederherstellen der ursprünglichen Bytearray.</span><span class="sxs-lookup"><span data-stu-id="278a5-340">The following example uses the <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29> method to convert a byte array to a UUencoded (base-64) string, and then calls the <xref:System.Convert.FromBase64String%28System.String%29> method to restore the original byte array.</span></span>  
  
 [!code-csharp[System.Convert.ToBase64String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Convert.ToBase64String/cs/ToBase64String2.cs#1)]
 [!code-vb[System.Convert.ToBase64String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Convert.ToBase64String/vb/ToBase64String2.vb#1)]  
  
 <span data-ttu-id="278a5-341">Im folgenden finden ein komplexeres Beispiel, das ein Array von 32-Bit-Ganzzahlen mit 20 Elementen erstellt.</span><span class="sxs-lookup"><span data-stu-id="278a5-341">The following is a more complex example that creates a 20-element array of 32-bit integers.</span></span> <span data-ttu-id="278a5-342">Es verwendet dann die <xref:System.BitConverter.GetBytes%28System.Int32%29?displayProperty=nameWithType> Methode, um jedes Element in ein Bytearray zu konvertieren, die durch den Aufruf in der entsprechenden Position in einem Puffer gespeichert die <xref:System.Array.Copy%28System.Array%2CSystem.Int32%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="278a5-342">It then uses the <xref:System.BitConverter.GetBytes%28System.Int32%29?displayProperty=nameWithType> method to convert each element into a byte array, which it stores in the appropriate position in a buffer by calling the <xref:System.Array.Copy%28System.Array%2CSystem.Int32%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="278a5-343">Dieser Puffer wird dann zum Übergeben der <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29> Methode, um eine Zeichenfolge UUencoded (base64) zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="278a5-343">This buffer is then passed to the <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29> method to create a UUencoded (base-64) string.</span></span>  <span data-ttu-id="278a5-344">Er ruft dann die <xref:System.Convert.FromBase64String%28System.String%29> Methode zum Decodieren UUencoded-Zeichenfolge ein, und ruft die <xref:System.BitConverter.ToInt32%2A?displayProperty=nameWithType> Methode, um jeden Satz von vier Bytes (die Größe einer 32-Bit-Ganzzahl) in eine ganze Zahl zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-344">It then calls the <xref:System.Convert.FromBase64String%28System.String%29> method to decode the UUencoded string, and calls the <xref:System.BitConverter.ToInt32%2A?displayProperty=nameWithType> method to convert each set of four bytes (the size of a 32-bit integer) to an integer.</span></span> <span data-ttu-id="278a5-345">Die Ausgabe des Beispiels zeigt, dass das ursprüngliche Array erfolgreich wiederhergestellt wurde.</span><span class="sxs-lookup"><span data-stu-id="278a5-345">The output from the example shows that the original array has been successfully restored.</span></span>  
  
 [!code-csharp[System.Convert.ToBase64String#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Convert.ToBase64String/cs/ToBase64String.cs#2)]
 [!code-vb[System.Convert.ToBase64String#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Convert.ToBase64String/vb/ToBase64String.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="278a5-346">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-346">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-347">The length of <paramref name="s" />, ignoring white-space characters, is not zero or a multiple of 4.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-347">The length of <paramref name="s" />, ignoring white-space characters, is not zero or a multiple of 4.</span>
          </span>
          <span data-ttu-id="278a5-348">-or-  The format of <paramref name="s" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-348">-or-  The format of <paramref name="s" /> is invalid.</span>
          </span>
          <span data-ttu-id="278a5-349">
            <paramref name="s" /> contains a non-base-64 character, more than two padding characters, or a non-white space-character among the padding characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-349">
              <paramref name="s" /> contains a non-base-64 character, more than two padding characters, or a non-white space-character among the padding characters.</span>
          </span>
        </exception>
        <altmember cref="M:System.Convert.ToBase64String(System.Byte[])" />
        <altmember cref="T:System.Security.Cryptography.FromBase64Transform" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public static TypeCode GetTypeCode (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TypeCode GetTypeCode(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.GetTypeCode(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeCode (value As Object) As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TypeCode GetTypeCode(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member GetTypeCode : obj -&gt; TypeCode" Usage="System.Convert.GetTypeCode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-350">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-350">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-351">Returns the <see cref="T:System.TypeCode" /> for the specified object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-351">Returns the <see cref="T:System.TypeCode" /> for the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-352">The <see cref="T:System.TypeCode" /> for <paramref name="value" />, or <see cref="F:System.TypeCode.Empty" /> if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-352">The <see cref="T:System.TypeCode" /> for <paramref name="value" />, or <see cref="F:System.TypeCode.Empty" /> if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public static bool IsDBNull (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDBNull(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.IsDBNull(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDBNull (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDBNull(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member IsDBNull : obj -&gt; bool" Usage="System.Convert.IsDBNull value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-353">An object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-353">An object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-354">Returns an indication whether the specified object is of type <see cref="T:System.DBNull" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-354">Returns an indication whether the specified object is of type <see cref="T:System.DBNull" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-355">
            <see langword="true" /> if <paramref name="value" /> is of type <see cref="T:System.DBNull" />; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-355">
              <see langword="true" /> if <paramref name="value" /> is of type <see cref="T:System.DBNull" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-356">Die <xref:System.Convert.IsDBNull%2A> -Methode testet, ob die `value` -Parameters <xref:System.DBNull.Value?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="278a5-356">The <xref:System.Convert.IsDBNull%2A> method tests whether the `value` parameter is equal to <xref:System.DBNull.Value?displayProperty=nameWithType>.</span></span> <span data-ttu-id="278a5-357">Dies entspricht dem folgenden Code:</span><span class="sxs-lookup"><span data-stu-id="278a5-357">It is equivalent to the following code:</span></span>  
  
 [!code-csharp[System.Convert.IsDBNull#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.IsDBNull/cs/Form1.cs#1)]
 [!code-vb[System.Convert.IsDBNull#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.IsDBNull/vb/Form1.vb#1)]  
  
> [!NOTE]
>  <span data-ttu-id="278a5-358"><xref:System.DBNull.Value?displayProperty=nameWithType> Dient zum Angeben eines Werts, das nicht vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="278a5-358"><xref:System.DBNull.Value?displayProperty=nameWithType> is used to indicate a value that is missing.</span></span> <span data-ttu-id="278a5-359">Es ist nicht gleichbedeutend mit `null` oder <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="278a5-359">It is not equivalent to `null` or to <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="278a5-360">Aus diesem Grund code wie z. B. `Convert.IsDBNull(null)` in c# oder `Convert.IsDBNull(Nothing)` in Visual Basic gibt`false`.</span><span class="sxs-lookup"><span data-stu-id="278a5-360">Therefore, code such as `Convert.IsDBNull(null)` in C# or `Convert.IsDBNull(Nothing)` in Visual Basic returns`false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-361">Im folgenden Beispiel wird eine <xref:System.Data.SqlClient.SqlDataReader> Objekt Survey-Daten aus einer Datenbank abgerufen.</span><span class="sxs-lookup"><span data-stu-id="278a5-361">The following example uses a <xref:System.Data.SqlClient.SqlDataReader> object to retrieve survey data from a database.</span></span> <span data-ttu-id="278a5-362">Ein Array Feldwerte für jede Zeile zugewiesen werden soll, und dann übergibt jedes Arrayelement an der <xref:System.Convert.IsDBNull%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="278a5-362">It assigns each row's field values to an array, and then passes each array element to the <xref:System.Convert.IsDBNull%2A> method.</span></span> <span data-ttu-id="278a5-363">Wenn die-Methode zurückgibt `true`, im Beispiel wird die Zeichenfolge "NA" auf das Arrayelement zugewiesen.</span><span class="sxs-lookup"><span data-stu-id="278a5-363">If the method returns `true`, the example assigns the string "NA" to the array element.</span></span> <span data-ttu-id="278a5-364">Das Array wird dann hinzugefügt, auf die <xref:System.Windows.Forms.DataGridView.Rows%2A> Auflistung von ein <xref:System.Windows.Forms.DataGridView?displayProperty=nameWithType> Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="278a5-364">The array is then added to the <xref:System.Windows.Forms.DataGridView.Rows%2A> collection of a <xref:System.Windows.Forms.DataGridView?displayProperty=nameWithType> control.</span></span>  
  
 [!code-csharp[System.Convert.IsDBNull#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.IsDBNull/cs/Form1.cs#2)]
 [!code-vb[System.Convert.IsDBNull#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.IsDBNull/vb/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DBNull" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToBase64CharArray">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="278a5-365">Converts a subset of an 8-bit unsigned integer array to an equivalent subset of a Unicode character array encoded with base-64 digits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-365">Converts a subset of an 8-bit unsigned integer array to an equivalent subset of a Unicode character array encoded with base-64 digits.</span>
          </span>
        </summary>
        <altmember cref="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Security.Cryptography.ToBase64Transform" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ToBase64CharArray">
      <MemberSignature Language="C#" Value="public static int ToBase64CharArray (byte[] inArray, int offsetIn, int length, char[] outArray, int offsetOut);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToBase64CharArray(unsigned int8[] inArray, int32 offsetIn, int32 length, char[] outArray, int32 offsetOut) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBase64CharArray (inArray As Byte(), offsetIn As Integer, length As Integer, outArray As Char(), offsetOut As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToBase64CharArray(cli::array &lt;System::Byte&gt; ^ inArray, int offsetIn, int length, cli::array &lt;char&gt; ^ outArray, int offsetOut);" />
      <MemberSignature Language="F#" Value="static member ToBase64CharArray : byte[] * int * int * char[] * int -&gt; int" Usage="System.Convert.ToBase64CharArray (inArray, offsetIn, length, outArray, offsetOut)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inArray" Type="System.Byte[]" />
        <Parameter Name="offsetIn" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="outArray" Type="System.Char[]" />
        <Parameter Name="offsetOut" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inArray">
          <span data-ttu-id="278a5-366">An input array of 8-bit unsigned integers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-366">An input array of 8-bit unsigned integers.</span>
          </span>
        </param>
        <param name="offsetIn">
          <span data-ttu-id="278a5-367">A position within <c>inArray</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-367">A position within <c>inArray</c>.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="278a5-368">The number of elements of <c>inArray</c> to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-368">The number of elements of <c>inArray</c> to convert.</span>
          </span>
        </param>
        <param name="outArray">
          <span data-ttu-id="278a5-369">An output array of Unicode characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-369">An output array of Unicode characters.</span>
          </span>
        </param>
        <param name="offsetOut">
          <span data-ttu-id="278a5-370">A position within <c>outArray</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-370">A position within <c>outArray</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-371">Converts a subset of an 8-bit unsigned integer array to an equivalent subset of a Unicode character array encoded with base-64 digits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-371">Converts a subset of an 8-bit unsigned integer array to an equivalent subset of a Unicode character array encoded with base-64 digits.</span>
          </span>
          <span data-ttu-id="278a5-372">Parameters specify the subsets as offsets in the input and output arrays, and the number of elements in the input array to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-372">Parameters specify the subsets as offsets in the input and output arrays, and the number of elements in the input array to convert.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-373">A 32-bit signed integer containing the number of bytes in <paramref name="outArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-373">A 32-bit signed integer containing the number of bytes in <paramref name="outArray" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-374">Die Teilmenge der `length` Elemente `inArray` ab Position `offsetIn`, als numerische Werte und konvertiert eine Teilmenge von Elementen in `outArray` ab Position `offsetOut`.</span><span class="sxs-lookup"><span data-stu-id="278a5-374">The subset of `length` elements of `inArray` starting at position `offsetIn`, are taken as a numeric value and converted to a subset of elements in `outArray` starting at position `offsetOut`.</span></span> <span data-ttu-id="278a5-375">Der Rückgabewert gibt an, die Anzahl der konvertierten Elemente in `outArray`.</span><span class="sxs-lookup"><span data-stu-id="278a5-375">The return value indicates the number of converted elements in `outArray`.</span></span> <span data-ttu-id="278a5-376">Die Teilmenge der `outArray` Base-64-Ziffern besteht.</span><span class="sxs-lookup"><span data-stu-id="278a5-376">The subset of `outArray` consists of base-64 digits.</span></span>  
  
 <span data-ttu-id="278a5-377">Die Base-64-Ziffern von 0 (null) in aufsteigender Reihenfolge werden die Großbuchstaben "A" bis "Z", die Kleinbuchstaben "a" bis "Z", die Ziffern "0" bis "9", und die Symbole "+" und "/".</span><span class="sxs-lookup"><span data-stu-id="278a5-377">The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", the lowercase characters "a" to "z", the numerals "0" to "9", and the symbols "+" and "/".</span></span> <span data-ttu-id="278a5-378">Die nutzlos Zeichen, "=" wird für nachfolgende Füllzeichen verwendet.</span><span class="sxs-lookup"><span data-stu-id="278a5-378">The valueless character, "=", is used for trailing padding.</span></span>  
  
 <span data-ttu-id="278a5-379">Die `offset` und `length` Parameter sind 32-Bit-Ganzzahlen mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="278a5-379">The `offset` and `length` parameters are 32-bit signed numbers.</span></span> <span data-ttu-id="278a5-380">Die `offsetIn` und `offsetOut` Parameter sind nullbasierte Arraypositionen.</span><span class="sxs-lookup"><span data-stu-id="278a5-380">The `offsetIn` and `offsetOut` parameters are zero-based array positions.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="278a5-381">Die <xref:System.Convert.ToBase64CharArray%2A> -Methode entwickelt, um ein einzelnes Bytearray zu verarbeiten, die alle Daten, die zu codierende enthält.</span><span class="sxs-lookup"><span data-stu-id="278a5-381">The <xref:System.Convert.ToBase64CharArray%2A> method is designed to process a single byte array that contains all the data to be encoded.</span></span> <span data-ttu-id="278a5-382">Um ein Base-64-Zeichenarray aus einem Bytestream zu erstellen, verwenden die <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> Klasse.</span><span class="sxs-lookup"><span data-stu-id="278a5-382">To create a base-64 character array from a byte stream, use the <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-383">Das folgende Beispiel veranschaulicht die Verwendung der <xref:System.Convert.ToBase64CharArray%2A> Methode, um UUencode (base-64 codieren) einen binären Datenstrom, und speichern Sie die Codierung in eine Datei.</span><span class="sxs-lookup"><span data-stu-id="278a5-383">The following example demonstrates using the <xref:System.Convert.ToBase64CharArray%2A> method to UUencode (encode in base 64) a binary stream, then save the encoding to a file.</span></span>  
  
 [!code-cpp[System.Convert UUEncodeDecode functions#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Convert UUEncodeDecode functions/CPP/class1.cpp#2)]
 [!code-csharp[System.Convert UUEncodeDecode functions#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Convert UUEncodeDecode functions/CS/class1.cs#2)]
 [!code-vb[System.Convert UUEncodeDecode functions#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Convert UUEncodeDecode functions/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="278a5-384">
            <paramref name="inArray" /> or <paramref name="outArray" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-384">
              <paramref name="inArray" /> or <paramref name="outArray" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="278a5-385">
            <paramref name="offsetIn" />, <paramref name="offsetOut" />, or <paramref name="length" /> is negative.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-385">
              <paramref name="offsetIn" />, <paramref name="offsetOut" />, or <paramref name="length" /> is negative.</span>
          </span>
          <span data-ttu-id="278a5-386">-or-  <paramref name="offsetIn" /> plus <paramref name="length" /> is greater than the length of <paramref name="inArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-386">-or-  <paramref name="offsetIn" /> plus <paramref name="length" /> is greater than the length of <paramref name="inArray" />.</span>
          </span>
          <span data-ttu-id="278a5-387">-or-  <paramref name="offsetOut" /> plus the number of elements to return is greater than the length of <paramref name="outArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-387">-or-  <paramref name="offsetOut" /> plus the number of elements to return is greater than the length of <paramref name="outArray" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Security.Cryptography.ToBase64Transform" />
      </Docs>
    </Member>
    <Member MemberName="ToBase64CharArray">
      <MemberSignature Language="C#" Value="public static int ToBase64CharArray (byte[] inArray, int offsetIn, int length, char[] outArray, int offsetOut, Base64FormattingOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToBase64CharArray(unsigned int8[] inArray, int32 offsetIn, int32 length, char[] outArray, int32 offsetOut, valuetype System.Base64FormattingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Base64FormattingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBase64CharArray (inArray As Byte(), offsetIn As Integer, length As Integer, outArray As Char(), offsetOut As Integer, options As Base64FormattingOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToBase64CharArray(cli::array &lt;System::Byte&gt; ^ inArray, int offsetIn, int length, cli::array &lt;char&gt; ^ outArray, int offsetOut, Base64FormattingOptions options);" />
      <MemberSignature Language="F#" Value="static member ToBase64CharArray : byte[] * int * int * char[] * int * Base64FormattingOptions -&gt; int" Usage="System.Convert.ToBase64CharArray (inArray, offsetIn, length, outArray, offsetOut, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inArray" Type="System.Byte[]" />
        <Parameter Name="offsetIn" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="outArray" Type="System.Char[]" />
        <Parameter Name="offsetOut" Type="System.Int32" />
        <Parameter Name="options" Type="System.Base64FormattingOptions" />
      </Parameters>
      <Docs>
        <param name="inArray">
          <span data-ttu-id="278a5-388">An input array of 8-bit unsigned integers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-388">An input array of 8-bit unsigned integers.</span>
          </span>
        </param>
        <param name="offsetIn">
          <span data-ttu-id="278a5-389">A position within <c>inArray</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-389">A position within <c>inArray</c>.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="278a5-390">The number of elements of <c>inArray</c> to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-390">The number of elements of <c>inArray</c> to convert.</span>
          </span>
        </param>
        <param name="outArray">
          <span data-ttu-id="278a5-391">An output array of Unicode characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-391">An output array of Unicode characters.</span>
          </span>
        </param>
        <param name="offsetOut">
          <span data-ttu-id="278a5-392">A position within <c>outArray</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-392">A position within <c>outArray</c>.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="278a5-393">
            <see cref="F:System.Base64FormattingOptions.InsertLineBreaks" /> to insert a line break every 76 characters, or <see cref="F:System.Base64FormattingOptions.None" /> to not insert line breaks.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-393">
              <see cref="F:System.Base64FormattingOptions.InsertLineBreaks" /> to insert a line break every 76 characters, or <see cref="F:System.Base64FormattingOptions.None" /> to not insert line breaks.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-394">Converts a subset of an 8-bit unsigned integer array to an equivalent subset of a Unicode character array encoded with base-64 digits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-394">Converts a subset of an 8-bit unsigned integer array to an equivalent subset of a Unicode character array encoded with base-64 digits.</span>
          </span>
          <span data-ttu-id="278a5-395">Parameters specify the subsets as offsets in the input and output arrays, the number of elements in the input array to convert, and whether line breaks are inserted in the output array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-395">Parameters specify the subsets as offsets in the input and output arrays, the number of elements in the input array to convert, and whether line breaks are inserted in the output array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-396">A 32-bit signed integer containing the number of bytes in <paramref name="outArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-396">A 32-bit signed integer containing the number of bytes in <paramref name="outArray" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-397">Die Teilmenge der `length` Elemente der `inArray` Parameters, beginnend an der Position `offsetIn`, als numerische Werte und konvertiert eine Teilmenge von Elementen in der `outArray` Parameters, beginnend an der Position `offsetOut`.</span><span class="sxs-lookup"><span data-stu-id="278a5-397">The subset of `length` elements of the `inArray` parameter starting at position `offsetIn`, are taken as a numeric value and converted to a subset of elements in the `outArray` parameter starting at position `offsetOut`.</span></span> <span data-ttu-id="278a5-398">Der Rückgabewert gibt an, die Anzahl der konvertierten Elemente in `outArray`.</span><span class="sxs-lookup"><span data-stu-id="278a5-398">The return value indicates the number of converted elements in `outArray`.</span></span> <span data-ttu-id="278a5-399">Die Teilmenge der `outArray` Base-64-Ziffern besteht.</span><span class="sxs-lookup"><span data-stu-id="278a5-399">The subset of `outArray` consists of base-64 digits.</span></span>  
  
 <span data-ttu-id="278a5-400">Die Base-64-Ziffern von 0 (null) in aufsteigender Reihenfolge werden die Großbuchstaben "A" bis "Z", die Kleinbuchstaben "a" bis "Z", die Ziffern "0" bis "9", und die Symbole "+" und "/".</span><span class="sxs-lookup"><span data-stu-id="278a5-400">The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", the lowercase characters "a" to "z", the numerals "0" to "9", and the symbols "+" and "/".</span></span> <span data-ttu-id="278a5-401">Die nutzlos Zeichen "=" wird für nachfolgende Füllzeichen verwendet.</span><span class="sxs-lookup"><span data-stu-id="278a5-401">The valueless character "=" is used for trailing padding.</span></span>  
  
 <span data-ttu-id="278a5-402">Die `offset` und `length` Parameter sind 32-Bit-Ganzzahlen mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="278a5-402">The `offset` and `length` parameters are 32-bit signed numbers.</span></span> <span data-ttu-id="278a5-403">Die `offsetIn` und `offsetOut` Parameter sind nullbasierte Arraypositionen.</span><span class="sxs-lookup"><span data-stu-id="278a5-403">The `offsetIn` and `offsetOut` parameters are zero-based array positions.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="278a5-404">Die <xref:System.Convert.ToBase64CharArray%2A> -Methode entwickelt, um ein einzelnes Bytearray zu verarbeiten, die alle Daten, die zu codierende enthält.</span><span class="sxs-lookup"><span data-stu-id="278a5-404">The <xref:System.Convert.ToBase64CharArray%2A> method is designed to process a single byte array that contains all the data to be encoded.</span></span> <span data-ttu-id="278a5-405">Um ein Base-64-Zeichenarray aus einem Bytestream zu erstellen, verwenden die <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> Klasse.</span><span class="sxs-lookup"><span data-stu-id="278a5-405">To create a base-64 character array from a byte stream, use the <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="278a5-406">Wenn die `options` Parametersatz auf <xref:System.Base64FormattingOptions.InsertLineBreaks> und die Ausgabe der Konvertierung ist länger als 76 Zeichen, ein Zeilenumbruch eingefügt je 76 Zeichen.</span><span class="sxs-lookup"><span data-stu-id="278a5-406">If the `options` parameter is set to <xref:System.Base64FormattingOptions.InsertLineBreaks> and the output of the conversion is longer than 76 characters, a line break is inserted every 76 characters.</span></span> <span data-ttu-id="278a5-407">Ein Zeilenumbruch eingefügt wird definiert, wie ein Wagenrücklaufzeichen (U + 000D), der gefolgt von einer Zeile-Zeichen (U + 000A) feed.</span><span class="sxs-lookup"><span data-stu-id="278a5-407">A line break is defined as a carriage return character (U+000D) followed by a line feed character (U+000A).</span></span> <span data-ttu-id="278a5-408">Weitere Informationen finden Sie in RFC 2045, "Multipurpose Internet Mail Extensions" unter [ https://www.rfc-editor.org/ ](https://www.rfc-editor.org/).</span><span class="sxs-lookup"><span data-stu-id="278a5-408">For more information, see RFC 2045, "Multipurpose Internet Mail Extensions", at [https://www.rfc-editor.org/](https://www.rfc-editor.org/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-409">Das folgende Beispiel veranschaulicht die <xref:System.Convert.ToBase64CharArray%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="278a5-409">The following example demonstrates the <xref:System.Convert.ToBase64CharArray%2A> method.</span></span> <span data-ttu-id="278a5-410">Die Eingabe wird in Gruppen von drei Bytes (24 Bits) unterteilt.</span><span class="sxs-lookup"><span data-stu-id="278a5-410">The input is divided into groups of three bytes (24 bits) each.</span></span> <span data-ttu-id="278a5-411">Folglich besteht aus jeder Gruppe vier 6-Bit-Zahlen, wobei jede Zahl von 0 bis 63 reicht.</span><span class="sxs-lookup"><span data-stu-id="278a5-411">Consequently, each group consists of four 6-bit numbers where each number ranges from decimal 0 to 63.</span></span> <span data-ttu-id="278a5-412">In diesem Beispiel befinden sich 85 3 Bytes bestehende Gruppen mit einem Byte Rest.</span><span class="sxs-lookup"><span data-stu-id="278a5-412">In this example, there are 85 3-byte groups with one byte remaining.</span></span> <span data-ttu-id="278a5-413">Die erste Gruppe besteht aus den Hexadezimalwerten 00, 01 und 02, die vier 6-Bit-Werte gleich decimal 0, 0, 4 und 2 ergeben.</span><span class="sxs-lookup"><span data-stu-id="278a5-413">The first group consists of the hexadecimal values 00, 01, and 02, which yield four 6-bit values equal to decimal 0, 0, 4, and 2.</span></span> <span data-ttu-id="278a5-414">Diese vier Werte entsprechen den Base-64-Ziffern "A", "A", "E" und "C" am Anfang der Ausgabe.</span><span class="sxs-lookup"><span data-stu-id="278a5-414">Those four values correspond to the base-64 digits "A", "A", "E", and "C" at the beginning of the output.</span></span>  
  
 <span data-ttu-id="278a5-415">Wenn eine ganze Zahl 3 Bytes bestehende Gruppen nicht vorhanden ist, werden die restlichen Bytes mit Nullen zu einer vollständigen Gruppe effektiv aufgefüllt.</span><span class="sxs-lookup"><span data-stu-id="278a5-415">If an integral number of 3-byte groups does not exist, the remaining bytes are effectively padded with zeros to form a complete group.</span></span> <span data-ttu-id="278a5-416">In diesem Beispiel ist der Wert des letzten Bytes hexadezimal FF.</span><span class="sxs-lookup"><span data-stu-id="278a5-416">In this example, the value of the last byte is hexadecimal FF.</span></span> <span data-ttu-id="278a5-417">Die ersten 6 Bits sind gleich dem Dezimalwert 63, die entspricht der Base64-Ziffern "/" am Ende der Ausgabe, und die nächsten 2 Bits mit Nullen decimal 48 ergeben, der Base-64-Ziffern, "w" entspricht aufgefüllt.</span><span class="sxs-lookup"><span data-stu-id="278a5-417">The first 6 bits are equal to decimal 63, which corresponds to the base-64 digit "/" at the end of the output, and the next 2 bits are padded with zeros to yield decimal 48, which corresponds to the base-64 digit, "w".</span></span> <span data-ttu-id="278a5-418">Die beiden letzten 6-Bit-Werte werden aufgefüllt und entsprechen dem nutzlos Füllzeichen "=".</span><span class="sxs-lookup"><span data-stu-id="278a5-418">The last two 6-bit values are padding and correspond to the valueless padding character, "=".</span></span>  
  
 [!code-cpp[convert.tobase64chararray#1](~/samples/snippets/cpp/VS_Snippets_CLR/convert.tobase64chararray/CPP/tb64ca.cpp#1)]
 [!code-csharp[convert.tobase64chararray#1](~/samples/snippets/csharp/VS_Snippets_CLR/convert.tobase64chararray/CS/tb64ca.cs#1)]
 [!code-vb[convert.tobase64chararray#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/convert.tobase64chararray/VB/tb64ca.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="278a5-419">
            <paramref name="inArray" /> or <paramref name="outArray" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-419">
              <paramref name="inArray" /> or <paramref name="outArray" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="278a5-420">
            <paramref name="offsetIn" />, <paramref name="offsetOut" />, or <paramref name="length" /> is negative.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-420">
              <paramref name="offsetIn" />, <paramref name="offsetOut" />, or <paramref name="length" /> is negative.</span>
          </span>
          <span data-ttu-id="278a5-421">-or-  <paramref name="offsetIn" /> plus <paramref name="length" /> is greater than the length of <paramref name="inArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-421">-or-  <paramref name="offsetIn" /> plus <paramref name="length" /> is greater than the length of <paramref name="inArray" />.</span>
          </span>
          <span data-ttu-id="278a5-422">-or-  <paramref name="offsetOut" /> plus the number of elements to return is greater than the length of <paramref name="outArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-422">-or-  <paramref name="offsetOut" /> plus the number of elements to return is greater than the length of <paramref name="outArray" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="278a5-423">
            <paramref name="options" /> is not a valid <see cref="T:System.Base64FormattingOptions" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-423">
              <paramref name="options" /> is not a valid <see cref="T:System.Base64FormattingOptions" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Security.Cryptography.ToBase64Transform" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToBase64String">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="278a5-424">Converts the value of an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64 digits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-424">Converts the value of an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64 digits.</span>
          </span>
        </summary>
        <altmember cref="M:System.Convert.FromBase64String(System.String)" />
        <altmember cref="T:System.Security.Cryptography.ToBase64Transform" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ToBase64String">
      <MemberSignature Language="C#" Value="public static string ToBase64String (byte[] inArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToBase64String(unsigned int8[] inArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBase64String(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBase64String (inArray As Byte()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToBase64String(cli::array &lt;System::Byte&gt; ^ inArray);" />
      <MemberSignature Language="F#" Value="static member ToBase64String : byte[] -&gt; string" Usage="System.Convert.ToBase64String inArray" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inArray" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="inArray">
          <span data-ttu-id="278a5-425">An array of 8-bit unsigned integers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-425">An array of 8-bit unsigned integers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-426">Converts an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64 digits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-426">Converts an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64 digits.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-427">The string representation, in base 64, of the contents of <paramref name="inArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-427">The string representation, in base 64, of the contents of <paramref name="inArray" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-428">Die Elemente eines `inArray` als numerische Werte und in eine, die mit Base-64-Ziffern codierte Zeichenfolgendarstellung konvertiert werden.</span><span class="sxs-lookup"><span data-stu-id="278a5-428">The elements of `inArray` are taken as a numeric value and converted to a string representation that is encoded with base-64 digits.</span></span>  
  
 <span data-ttu-id="278a5-429">Die Base-64-Ziffern von 0 (null) in aufsteigender Reihenfolge werden die Großbuchstaben "A" bis "Z", die Kleinbuchstaben "a" bis "Z", die Ziffern "0" bis "9", und die Symbole "+" und "/".</span><span class="sxs-lookup"><span data-stu-id="278a5-429">The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", the lowercase characters "a" to "z", the numerals "0" to "9", and the symbols "+" and "/".</span></span> <span data-ttu-id="278a5-430">Die nutzlos Zeichen, "=" wird für nachfolgende Füllzeichen verwendet.</span><span class="sxs-lookup"><span data-stu-id="278a5-430">The valueless character, "=", is used for trailing padding.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="278a5-431">Die <xref:System.Convert.ToBase64String%2A> -Methode entwickelt, um ein einzelnes Bytearray zu verarbeiten, die alle Daten, die zu codierende enthält.</span><span class="sxs-lookup"><span data-stu-id="278a5-431">The <xref:System.Convert.ToBase64String%2A> method is designed to process a single byte array that contains all the data to be encoded.</span></span> <span data-ttu-id="278a5-432">Um Daten aus einem Stream zu codieren, verwenden Sie die <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> Klasse.</span><span class="sxs-lookup"><span data-stu-id="278a5-432">To encode data from a stream, use the <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="278a5-433">Normalerweise die <xref:System.Convert.ToBase64String%2A> Methode ist nicht verwendet, um einen Roundtrip eine UUEncoded (Base64-codiert) Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="278a5-433">Ordinarily, the <xref:System.Convert.ToBase64String%2A> method is not used to round-trip a  UUEncoded (base-64 encoded) string.</span></span>  <span data-ttu-id="278a5-434">D. h. Wenn Sie eine Zeichenfolge decodiert werden durch Aufrufen der <xref:System.Convert.FromBase64String%2A> -Methode, klicken Sie dann das Array zurückgegebenen Bytes zu codieren, durch Aufrufen der <xref:System.Convert.ToBase64String%2A> -Methode, die sich ergebende Zeichenfolge wird nicht unbedingt identisch mit der ursprünglichen Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="278a5-434">That is, if you decode a string by calling the <xref:System.Convert.FromBase64String%2A> method, then encode the returned byte array by calling the <xref:System.Convert.ToBase64String%2A> method, the resulting string will not necessarily be identical to the original string.</span></span> <span data-ttu-id="278a5-435">Die Zeichenfolge wird der Roundtrip nur, wenn die ursprüngliche Zeichenfolge eine gültige Base64-codierte Zeichenfolge ist.</span><span class="sxs-lookup"><span data-stu-id="278a5-435">The string will round-trip only if the original string is a valid base-64 encoded string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-436">Im folgenden Beispiel wird die <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29> -Methode zum Konvertieren von einem Bytearray in eine Zeichenfolge UUencoded (Base-64), und ruft dann die <xref:System.Convert.FromBase64String%28System.String%29> Verfahren zum Wiederherstellen der ursprünglichen Bytearray.</span><span class="sxs-lookup"><span data-stu-id="278a5-436">The following example uses the <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29> method to convert a byte array to a UUencoded (base-64) string, and then calls the <xref:System.Convert.FromBase64String%28System.String%29> method to restore the original byte array.</span></span>  
  
 [!code-csharp[System.Convert.ToBase64String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Convert.ToBase64String/cs/ToBase64String2.cs#1)]
 [!code-vb[System.Convert.ToBase64String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Convert.ToBase64String/vb/ToBase64String2.vb#1)]  
  
 <span data-ttu-id="278a5-437">Im folgenden finden ein komplexeres Beispiel, das ein Array von 32-Bit-Ganzzahlen mit 20 Elementen erstellt.</span><span class="sxs-lookup"><span data-stu-id="278a5-437">The following is a more complex example that creates a 20-element array of 32-bit integers.</span></span> <span data-ttu-id="278a5-438">Es verwendet dann die <xref:System.BitConverter.GetBytes%28System.Int32%29?displayProperty=nameWithType> Methode, um jedes Element in ein Bytearray zu konvertieren, die durch den Aufruf in der entsprechenden Position in einem Puffer gespeichert die <xref:System.Array.Copy%28System.Array%2CSystem.Int32%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="278a5-438">It then uses the <xref:System.BitConverter.GetBytes%28System.Int32%29?displayProperty=nameWithType> method to convert each element into a byte array, which it stores in the appropriate position in a buffer by calling the <xref:System.Array.Copy%28System.Array%2CSystem.Int32%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="278a5-439">Dieser Puffer wird dann zum Übergeben der <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29> Methode, um eine Zeichenfolge UUencoded (base64) zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="278a5-439">This buffer is then passed to the <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29> method to create a UUencoded (base-64) string.</span></span>  <span data-ttu-id="278a5-440">Er ruft dann die <xref:System.Convert.FromBase64String%28System.String%29> Methode zum Decodieren UUencoded-Zeichenfolge ein, und ruft die <xref:System.BitConverter.ToInt32%2A?displayProperty=nameWithType> Methode, um jeden Satz von vier Bytes (die Größe einer 32-Bit-Ganzzahl) in eine ganze Zahl zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-440">It then calls the <xref:System.Convert.FromBase64String%28System.String%29> method to decode the UUencoded string, and calls the <xref:System.BitConverter.ToInt32%2A?displayProperty=nameWithType> method to convert each set of four bytes (the size of a 32-bit integer) to an integer.</span></span> <span data-ttu-id="278a5-441">Die Ausgabe des Beispiels zeigt, dass das ursprüngliche Array erfolgreich wiederhergestellt wurde.</span><span class="sxs-lookup"><span data-stu-id="278a5-441">The output from the example shows that the original array has been successfully restored.</span></span>  
  
 [!code-csharp[System.Convert.ToBase64String#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Convert.ToBase64String/cs/ToBase64String.cs#2)]
 [!code-vb[System.Convert.ToBase64String#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Convert.ToBase64String/vb/ToBase64String.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="278a5-442">
            <paramref name="inArray" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-442">
              <paramref name="inArray" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Convert.FromBase64String(System.String)" />
        <altmember cref="T:System.Security.Cryptography.ToBase64Transform" />
      </Docs>
    </Member>
    <Member MemberName="ToBase64String">
      <MemberSignature Language="C#" Value="public static string ToBase64String (byte[] inArray, Base64FormattingOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToBase64String(unsigned int8[] inArray, valuetype System.Base64FormattingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBase64String(System.Byte[],System.Base64FormattingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBase64String (inArray As Byte(), options As Base64FormattingOptions) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToBase64String(cli::array &lt;System::Byte&gt; ^ inArray, Base64FormattingOptions options);" />
      <MemberSignature Language="F#" Value="static member ToBase64String : byte[] * Base64FormattingOptions -&gt; string" Usage="System.Convert.ToBase64String (inArray, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inArray" Type="System.Byte[]" />
        <Parameter Name="options" Type="System.Base64FormattingOptions" />
      </Parameters>
      <Docs>
        <param name="inArray">
          <span data-ttu-id="278a5-443">An array of 8-bit unsigned integers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-443">An array of 8-bit unsigned integers.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="278a5-444">
            <see cref="F:System.Base64FormattingOptions.InsertLineBreaks" /> to insert a line break every 76 characters, or <see cref="F:System.Base64FormattingOptions.None" /> to not insert line breaks.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-444">
              <see cref="F:System.Base64FormattingOptions.InsertLineBreaks" /> to insert a line break every 76 characters, or <see cref="F:System.Base64FormattingOptions.None" /> to not insert line breaks.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-445">Converts an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64 digits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-445">Converts an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64 digits.</span>
          </span>
          <span data-ttu-id="278a5-446">A parameter specifies whether to insert line breaks in the return value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-446">A parameter specifies whether to insert line breaks in the return value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-447">The string representation in base 64 of the elements in <paramref name="inArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-447">The string representation in base 64 of the elements in <paramref name="inArray" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-448">Die Elemente der `inArray` Parameter als einen numerischen Wert durchgeführt und in eine Zeichenfolgendarstellung in Base64 konvertiert werden.</span><span class="sxs-lookup"><span data-stu-id="278a5-448">The elements of the `inArray` parameter are taken as a numeric value and converted to a string representation in base 64.</span></span>  
  
 <span data-ttu-id="278a5-449">Die Base-64-Ziffern von 0 (null) in aufsteigender Reihenfolge werden die Großbuchstaben "A" bis "Z", die Kleinbuchstaben "a" bis "Z", die Ziffern "0" bis "9", und die Symbole "+" und "/".</span><span class="sxs-lookup"><span data-stu-id="278a5-449">The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", the lowercase characters "a" to "z", the numerals "0" to "9", and the symbols "+" and "/".</span></span> <span data-ttu-id="278a5-450">Die nutzlos Zeichen "=" wird für nachfolgende Füllzeichen verwendet.</span><span class="sxs-lookup"><span data-stu-id="278a5-450">The valueless character "=" is used for trailing padding.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="278a5-451">Die <xref:System.Convert.ToBase64String%2A> -Methode entwickelt, um ein einzelnes Bytearray zu verarbeiten, die alle Daten, die zu codierende enthält.</span><span class="sxs-lookup"><span data-stu-id="278a5-451">The <xref:System.Convert.ToBase64String%2A> method is designed to process a single byte array that contains all the data to be encoded.</span></span> <span data-ttu-id="278a5-452">Um Daten aus einem Stream zu codieren, verwenden Sie die <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> Klasse.</span><span class="sxs-lookup"><span data-stu-id="278a5-452">To encode data from a stream, use the <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="278a5-453">Wenn die `options` Parametersatz auf <xref:System.Base64FormattingOptions.InsertLineBreaks> und die Ausgabe der Konvertierung ist länger als 76 Zeichen, ein Zeilenumbruch eingefügt je 76 Zeichen.</span><span class="sxs-lookup"><span data-stu-id="278a5-453">If the `options` parameter is set to <xref:System.Base64FormattingOptions.InsertLineBreaks> and the output of the conversion is longer than 76 characters, a line break is inserted every 76 characters.</span></span> <span data-ttu-id="278a5-454">Ein Zeilenumbruch eingefügt wird definiert, wie ein Wagenrücklaufzeichen (U + 000D), der gefolgt von einer Zeile-Zeichen (U + 000A) feed.</span><span class="sxs-lookup"><span data-stu-id="278a5-454">A line break is defined as a carriage return character (U+000D) followed by a line feed character (U+000A).</span></span> <span data-ttu-id="278a5-455">Da Zeilenumbrüche Leerzeichen in einer Base64-Codierung betrachtet werden, werden sie ignoriert, wenn konvertieren eine Base64-Zeichenfolge zurück in ein Bytearray codiert.</span><span class="sxs-lookup"><span data-stu-id="278a5-455">Because line breaks are considered whitespace characters in a base-64 encoding, they are ignored when converting a base-64 encoded string back to a byte array.</span></span> <span data-ttu-id="278a5-456">Die Zeilenumbrüche sind einfach praktisch, wenn die codierte Zeichenfolge an ein Steuerelement oder ein Gerät, z. B. einem Konsolenfenster angezeigt.</span><span class="sxs-lookup"><span data-stu-id="278a5-456">The line breaks are simply convenient when displaying the encoded string to a control or a device such as a console window.</span></span> <span data-ttu-id="278a5-457">Weitere Informationen finden Sie in RFC 2045, "Multipurpose Internet Mail Extensions" unter [ https://www.rfc-editor.org/ ](https://www.rfc-editor.org/).</span><span class="sxs-lookup"><span data-stu-id="278a5-457">For more information, see RFC 2045, "Multipurpose Internet Mail Extensions", at [https://www.rfc-editor.org/](https://www.rfc-editor.org/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-458">Im folgenden Beispiel wird die <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%2CSystem.Base64FormattingOptions%29?displayProperty=nameWithType> mit einem <xref:System.Base64FormattingOptions.InsertLineBreaks?displayProperty=nameWithType> Argument einzufügende Zeile unterbrochen wird, in der Zeichenfolge, die beim Codieren einer 100 Elementen bestehendes Bytearray erzeugt wird.</span><span class="sxs-lookup"><span data-stu-id="278a5-458">The following example calls the <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%2CSystem.Base64FormattingOptions%29?displayProperty=nameWithType> with a <xref:System.Base64FormattingOptions.InsertLineBreaks?displayProperty=nameWithType> argument to insert line breaks in the string that is produced by encoding a 100-element byte array.</span></span>  
  
 [!code-csharp[System.Convert.ToBase64String#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Convert.ToBase64String/cs/ToBase64String3.cs#3)]
 [!code-vb[System.Convert.ToBase64String#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Convert.ToBase64String/vb/ToBase64String3.vb#3)]  
  
 <span data-ttu-id="278a5-459">Wie die Ausgabe im Beispiel gezeigt die <xref:System.Convert.FromBase64String%2A?displayProperty=nameWithType> erfolgreich ausgeführt wird, bei der Wiederherstellung der ursprünglichen Bytearray; die Zeilenumbruchzeichen werden bei der Konvertierung ignoriert.</span><span class="sxs-lookup"><span data-stu-id="278a5-459">As the output from the example shows, the <xref:System.Convert.FromBase64String%2A?displayProperty=nameWithType> succeeds in restoring the original byte array; the line break characters are ignored during the conversion.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="278a5-460">
            <paramref name="inArray" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-460">
              <paramref name="inArray" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="278a5-461">
            <paramref name="options" /> is not a valid <see cref="T:System.Base64FormattingOptions" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-461">
              <paramref name="options" /> is not a valid <see cref="T:System.Base64FormattingOptions" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Convert.FromBase64String(System.String)" />
        <altmember cref="T:System.Security.Cryptography.ToBase64Transform" />
      </Docs>
    </Member>
    <Member MemberName="ToBase64String">
      <MemberSignature Language="C#" Value="public static string ToBase64String (ReadOnlySpan&lt;byte&gt; bytes, Base64FormattingOptions options = System.Base64FormattingOptions.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToBase64String(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes, valuetype System.Base64FormattingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBase64String(System.ReadOnlySpan{System.Byte},System.Base64FormattingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBase64String (bytes As ReadOnlySpan(Of Byte), Optional options As Base64FormattingOptions = System.Base64FormattingOptions.None) As String" />
      <MemberSignature Language="F#" Value="static member ToBase64String : ReadOnlySpan&lt;byte&gt; * Base64FormattingOptions -&gt; string" Usage="System.Convert.ToBase64String (bytes, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="options" Type="System.Base64FormattingOptions" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToBase64String">
      <MemberSignature Language="C#" Value="public static string ToBase64String (byte[] inArray, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToBase64String(unsigned int8[] inArray, int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBase64String (inArray As Byte(), offset As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToBase64String(cli::array &lt;System::Byte&gt; ^ inArray, int offset, int length);" />
      <MemberSignature Language="F#" Value="static member ToBase64String : byte[] * int * int -&gt; string" Usage="System.Convert.ToBase64String (inArray, offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inArray" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inArray">
          <span data-ttu-id="278a5-462">An array of 8-bit unsigned integers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-462">An array of 8-bit unsigned integers.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="278a5-463">An offset in <c>inArray</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-463">An offset in <c>inArray</c>.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="278a5-464">The number of elements of <c>inArray</c> to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-464">The number of elements of <c>inArray</c> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-465">Converts a subset of an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64 digits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-465">Converts a subset of an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64 digits.</span>
          </span>
          <span data-ttu-id="278a5-466">Parameters specify the subset as an offset in the input array, and the number of elements in the array to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-466">Parameters specify the subset as an offset in the input array, and the number of elements in the array to convert.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-467">The string representation in base 64 of <paramref name="length" /> elements of <paramref name="inArray" />, starting at position <paramref name="offset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-467">The string representation in base 64 of <paramref name="length" /> elements of <paramref name="inArray" />, starting at position <paramref name="offset" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-468">Die Elemente eines `inArray` als numerische Werte und in eine Zeichenfolgendarstellung in Base64 konvertiert werden.</span><span class="sxs-lookup"><span data-stu-id="278a5-468">The elements of `inArray` are taken as a numeric value and converted to a string representation in base 64.</span></span>  
  
 <span data-ttu-id="278a5-469">Die Base-64-Ziffern von 0 (null) in aufsteigender Reihenfolge werden die Großbuchstaben "A" bis "Z", die Kleinbuchstaben "a" bis "Z", die Ziffern "0" bis "9", und die Symbole "+" und "/".</span><span class="sxs-lookup"><span data-stu-id="278a5-469">The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", the lowercase characters "a" to "z", the numerals "0" to "9", and the symbols "+" and "/".</span></span> <span data-ttu-id="278a5-470">Die nutzlos Zeichen, "=" wird für nachfolgende Füllzeichen verwendet.</span><span class="sxs-lookup"><span data-stu-id="278a5-470">The valueless character, "=", is used for trailing padding.</span></span>  
  
 <span data-ttu-id="278a5-471">Die `offset` und `length` Parameter sind 32-Bit-Ganzzahlen mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="278a5-471">The `offset` and `length` parameters are 32-bit signed numbers.</span></span> <span data-ttu-id="278a5-472">Die `offset` Parameter ist nullbasiert.</span><span class="sxs-lookup"><span data-stu-id="278a5-472">The `offset` parameter is zero-based.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="278a5-473">Die <xref:System.Convert.ToBase64String%2A> -Methode entwickelt, um ein einzelnes Bytearray zu verarbeiten, die alle Daten, die zu codierende enthält.</span><span class="sxs-lookup"><span data-stu-id="278a5-473">The <xref:System.Convert.ToBase64String%2A> method is designed to process a single byte array that contains all the data to be encoded.</span></span> <span data-ttu-id="278a5-474">Um Daten aus einem Stream zu codieren, verwenden Sie die <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> Klasse.</span><span class="sxs-lookup"><span data-stu-id="278a5-474">To encode data from a stream, use the <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="278a5-475">
            <paramref name="inArray" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-475">
              <paramref name="inArray" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="278a5-476">
            <paramref name="offset" /> or <paramref name="length" /> is negative.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-476">
              <paramref name="offset" /> or <paramref name="length" /> is negative.</span>
          </span>
          <span data-ttu-id="278a5-477">-or-  <paramref name="offset" /> plus <paramref name="length" /> is greater than the length of <paramref name="inArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-477">-or-  <paramref name="offset" /> plus <paramref name="length" /> is greater than the length of <paramref name="inArray" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Convert.FromBase64String(System.String)" />
        <altmember cref="T:System.Security.Cryptography.ToBase64Transform" />
      </Docs>
    </Member>
    <Member MemberName="ToBase64String">
      <MemberSignature Language="C#" Value="public static string ToBase64String (byte[] inArray, int offset, int length, Base64FormattingOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToBase64String(unsigned int8[] inArray, int32 offset, int32 length, valuetype System.Base64FormattingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32,System.Base64FormattingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBase64String (inArray As Byte(), offset As Integer, length As Integer, options As Base64FormattingOptions) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToBase64String(cli::array &lt;System::Byte&gt; ^ inArray, int offset, int length, Base64FormattingOptions options);" />
      <MemberSignature Language="F#" Value="static member ToBase64String : byte[] * int * int * Base64FormattingOptions -&gt; string" Usage="System.Convert.ToBase64String (inArray, offset, length, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inArray" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="options" Type="System.Base64FormattingOptions" />
      </Parameters>
      <Docs>
        <param name="inArray">
          <span data-ttu-id="278a5-478">An array of 8-bit unsigned integers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-478">An array of 8-bit unsigned integers.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="278a5-479">An offset in <c>inArray</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-479">An offset in <c>inArray</c>.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="278a5-480">The number of elements of <c>inArray</c> to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-480">The number of elements of <c>inArray</c> to convert.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="278a5-481">
            <see cref="F:System.Base64FormattingOptions.InsertLineBreaks" /> to insert a line break every 76 characters, or <see cref="F:System.Base64FormattingOptions.None" /> to not insert line breaks.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-481">
              <see cref="F:System.Base64FormattingOptions.InsertLineBreaks" /> to insert a line break every 76 characters, or <see cref="F:System.Base64FormattingOptions.None" /> to not insert line breaks.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-482">Converts a subset of an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64 digits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-482">Converts a subset of an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64 digits.</span>
          </span>
          <span data-ttu-id="278a5-483">Parameters specify the subset as an offset in the input array, the number of elements in the array to convert, and whether to insert line breaks in the return value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-483">Parameters specify the subset as an offset in the input array, the number of elements in the array to convert, and whether to insert line breaks in the return value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-484">The string representation in base 64 of <paramref name="length" /> elements of <paramref name="inArray" />, starting at position <paramref name="offset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-484">The string representation in base 64 of <paramref name="length" /> elements of <paramref name="inArray" />, starting at position <paramref name="offset" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-485">Die Elemente der `inArray` Parameter als einen numerischen Wert durchgeführt und in eine Zeichenfolgendarstellung in Base64 konvertiert werden.</span><span class="sxs-lookup"><span data-stu-id="278a5-485">The elements of the `inArray` parameter are taken as a numeric value and converted to a string representation in base 64.</span></span>  
  
 <span data-ttu-id="278a5-486">Die Base-64-Ziffern von 0 (null) in aufsteigender Reihenfolge werden die Großbuchstaben "A" bis "Z", die Kleinbuchstaben "a" bis "Z", die Ziffern "0" bis "9", und die Symbole "+" und "/".</span><span class="sxs-lookup"><span data-stu-id="278a5-486">The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", the lowercase characters "a" to "z", the numerals "0" to "9", and the symbols "+" and "/".</span></span> <span data-ttu-id="278a5-487">Die nutzlos Zeichen "=" wird für nachfolgende Füllzeichen verwendet.</span><span class="sxs-lookup"><span data-stu-id="278a5-487">The valueless character "=" is used for trailing padding.</span></span>  
  
 <span data-ttu-id="278a5-488">Die `offset` und `length` Parameter sind 32-Bit-Ganzzahlen mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="278a5-488">The `offset` and `length` parameters are 32-bit signed numbers.</span></span> <span data-ttu-id="278a5-489">Die `offset` Parameter ist nullbasiert.</span><span class="sxs-lookup"><span data-stu-id="278a5-489">The `offset` parameter is zero-based.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="278a5-490">Die <xref:System.Convert.ToBase64String%2A> -Methode entwickelt, um ein einzelnes Bytearray zu verarbeiten, die alle Daten, die zu codierende enthält.</span><span class="sxs-lookup"><span data-stu-id="278a5-490">The <xref:System.Convert.ToBase64String%2A> method is designed to process a single byte array that contains all the data to be encoded.</span></span> <span data-ttu-id="278a5-491">Um Daten aus einem Stream zu codieren, verwenden Sie die <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> Klasse.</span><span class="sxs-lookup"><span data-stu-id="278a5-491">To encode data from a stream, use the <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="278a5-492">Wenn die `options` Parametersatz auf <xref:System.Base64FormattingOptions.InsertLineBreaks> und die Ausgabe der Konvertierung ist länger als 76 Zeichen, ein Zeilenumbruch eingefügt je 76 Zeichen.</span><span class="sxs-lookup"><span data-stu-id="278a5-492">If the `options` parameter is set to <xref:System.Base64FormattingOptions.InsertLineBreaks> and the output of the conversion is longer than 76 characters, a line break is inserted every 76 characters.</span></span> <span data-ttu-id="278a5-493">Ein Zeilenumbruch eingefügt wird definiert, wie ein Wagenrücklaufzeichen (U + 000D), der gefolgt von einer Zeile-Zeichen (U + 000A) feed.</span><span class="sxs-lookup"><span data-stu-id="278a5-493">A line break is defined as a carriage return character (U+000D) followed by a line feed character (U+000A).</span></span> <span data-ttu-id="278a5-494">Weitere Informationen finden Sie in RFC 2045, "Multipurpose Internet Mail Extensions" unter [ https://www.rfc-editor.org/ ](https://www.rfc-editor.org/).</span><span class="sxs-lookup"><span data-stu-id="278a5-494">For more information, see RFC 2045, "Multipurpose Internet Mail Extensions", at [https://www.rfc-editor.org/](https://www.rfc-editor.org/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-495">Das folgende Beispiel veranschaulicht die <xref:System.Convert.ToBase64String%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="278a5-495">The following example demonstrates the <xref:System.Convert.ToBase64String%2A> method.</span></span> <span data-ttu-id="278a5-496">Die Eingabe wird in Gruppen von drei Bytes (24 Bits) unterteilt.</span><span class="sxs-lookup"><span data-stu-id="278a5-496">The input is divided into groups of three bytes (24 bits) each.</span></span> <span data-ttu-id="278a5-497">Folglich besteht aus jeder Gruppe vier 6-Bit-Zahlen, wobei jede Zahl von 0 bis 63 reicht.</span><span class="sxs-lookup"><span data-stu-id="278a5-497">Consequently, each group consists of four 6-bit numbers where each number ranges from decimal 0 to 63.</span></span> <span data-ttu-id="278a5-498">In diesem Beispiel befinden sich 85 3 Bytes bestehende Gruppen mit einem Byte Rest.</span><span class="sxs-lookup"><span data-stu-id="278a5-498">In this example, there are 85 3-byte groups with one byte remaining.</span></span> <span data-ttu-id="278a5-499">Die erste Gruppe besteht aus den Hexadezimalwerten 00, 01 und 02, die vier 6-Bit-Werte gleich decimal 0, 0, 4 und 2 ergeben.</span><span class="sxs-lookup"><span data-stu-id="278a5-499">The first group consists of the hexadecimal values 00, 01, and 02, which yield four 6-bit values equal to decimal 0, 0, 4, and 2.</span></span> <span data-ttu-id="278a5-500">Diese vier Werte entsprechen den Base-64-Ziffern "A", "A", "E" und "C" am Anfang der Ausgabe.</span><span class="sxs-lookup"><span data-stu-id="278a5-500">Those four values correspond to the base-64 digits "A", "A", "E", and "C" at the beginning of the output.</span></span>  
  
 <span data-ttu-id="278a5-501">Wenn eine ganze Zahl 3 Bytes bestehende Gruppen nicht vorhanden ist, werden die restlichen Bytes mit Nullen zu einer vollständigen Gruppe effektiv aufgefüllt.</span><span class="sxs-lookup"><span data-stu-id="278a5-501">If an integral number of 3-byte groups does not exist, the remaining bytes are effectively padded with zeros to form a complete group.</span></span> <span data-ttu-id="278a5-502">In diesem Beispiel ist der Wert des letzten Bytes hexadezimal FF.</span><span class="sxs-lookup"><span data-stu-id="278a5-502">In this example, the value of the last byte is hexadecimal FF.</span></span> <span data-ttu-id="278a5-503">Die ersten 6 Bits sind gleich dem Dezimalwert 63, die entspricht der Base64-Ziffern "/" am Ende der Ausgabe, und die nächsten 2 Bits mit Nullen decimal 48 ergeben, der Base-64-Ziffern, "w" entspricht aufgefüllt.</span><span class="sxs-lookup"><span data-stu-id="278a5-503">The first 6 bits are equal to decimal 63, which corresponds to the base-64 digit "/" at the end of the output, and the next 2 bits are padded with zeros to yield decimal 48, which corresponds to the base-64 digit, "w".</span></span> <span data-ttu-id="278a5-504">Die beiden letzten 6-Bit-Werte werden aufgefüllt und entsprechen dem nutzlos Füllzeichen "=".</span><span class="sxs-lookup"><span data-stu-id="278a5-504">The last two 6-bit values are padding and correspond to the valueless padding character, "=".</span></span>  
  
 [!code-cpp[convert.tobase64string#1](~/samples/snippets/cpp/VS_Snippets_CLR/convert.tobase64string/CPP/tb64s.cpp#1)]
 [!code-csharp[convert.tobase64string#1](~/samples/snippets/csharp/VS_Snippets_CLR/convert.tobase64string/CS/tb64s.cs#1)]
 [!code-vb[convert.tobase64string#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/convert.tobase64string/VB/tb64s.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="278a5-505">
            <paramref name="inArray" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-505">
              <paramref name="inArray" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="278a5-506">
            <paramref name="offset" /> or <paramref name="length" /> is negative.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-506">
              <paramref name="offset" /> or <paramref name="length" /> is negative.</span>
          </span>
          <span data-ttu-id="278a5-507">-or-  <paramref name="offset" /> plus <paramref name="length" /> is greater than the length of <paramref name="inArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-507">-or-  <paramref name="offset" /> plus <paramref name="length" /> is greater than the length of <paramref name="inArray" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="278a5-508">
            <paramref name="options" /> is not a valid <see cref="T:System.Base64FormattingOptions" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-508">
              <paramref name="options" /> is not a valid <see cref="T:System.Base64FormattingOptions" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Convert.FromBase64String(System.String)" />
        <altmember cref="T:System.Security.Cryptography.ToBase64Transform" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToBoolean">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="278a5-509">Converts a specified value to an equivalent Boolean value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-509">Converts a specified value to an equivalent Boolean value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(bool value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : bool -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-510">The Boolean value to return.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-510">The Boolean value to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-511">Returns the specified Boolean value; no actual conversion is performed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-511">Returns the specified Boolean value; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-512">
            <paramref name="value" /> is returned unchanged.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-512">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Byte) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : byte -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-513">The 8-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-513">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-514">Converts the value of the specified 8-bit unsigned integer to an equivalent Boolean value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-514">Converts the value of the specified 8-bit unsigned integer to an equivalent Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-515">
            <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-515">
              <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-516">Das folgende Beispiel konvertiert ein Array von <xref:System.Byte> Werte <xref:System.Boolean> Werte.</span><span class="sxs-lookup"><span data-stu-id="278a5-516">The following example converts an array of <xref:System.Byte> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#12)]
 [!code-csharp[System.Convert.ToBoolean#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#12)]
 [!code-vb[System.Convert.ToBoolean#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(char value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : char -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-517">The Unicode character to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-517">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-518">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-518">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-519">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-519">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="278a5-520">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-520">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-521">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-521">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : DateTime -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-522">The date and time value to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-522">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-523">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-523">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-524">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-524">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="278a5-525">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-525">No value is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-526">Das folgende Beispiel zeigt, dass ein Versuch, Konvertieren einer <xref:System.DateTime> Wert in einen booleschen Typ löst <xref:System.InvalidCastException>.</span><span class="sxs-lookup"><span data-stu-id="278a5-526">The following example demonstrates that an attempt to convert a <xref:System.DateTime> value to a Boolean type throws <xref:System.InvalidCastException>.</span></span>  
  
 [!code-cpp[System.Convert Snippets#20](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#20)]
 [!code-csharp[System.Convert Snippets#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#20)]
 [!code-vb[System.Convert Snippets#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-527">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-527">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : decimal -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-528">The number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-528">The number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-529">Converts the value of the specified decimal number to an equivalent Boolean value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-529">Converts the value of the specified decimal number to an equivalent Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-530">
            <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-530">
              <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-531">Das folgende Beispiel konvertiert ein Array von <xref:System.Decimal> Werte <xref:System.Boolean> Werte.</span><span class="sxs-lookup"><span data-stu-id="278a5-531">The following example converts an array of <xref:System.Decimal> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#2)]
 [!code-csharp[System.Convert.ToBoolean#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#2)]
 [!code-vb[System.Convert.ToBoolean#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(double value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : double -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-532">The double-precision floating-point number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-532">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-533">Converts the value of the specified double-precision floating-point number to an equivalent Boolean value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-533">Converts the value of the specified double-precision floating-point number to an equivalent Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-534">
            <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-534">
              <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-535">Das folgende Beispiel konvertiert einen booleschen Wert an eine <xref:System.Double> und ein <xref:System.Double> zu einem booleschen Wert.</span><span class="sxs-lookup"><span data-stu-id="278a5-535">The following example converts a Boolean to a <xref:System.Double> and a <xref:System.Double> to a Boolean value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#1)]
 [!code-csharp[System.Convert Snippets#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#1)]
 [!code-vb[System.Convert Snippets#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(short value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : int16 -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-536">The 16-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-536">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-537">Converts the value of the specified 16-bit signed integer to an equivalent Boolean value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-537">Converts the value of the specified 16-bit signed integer to an equivalent Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-538">
            <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-538">
              <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-539">Das folgende Beispiel konvertiert ein Array von <xref:System.Int16> Werte <xref:System.Boolean> Werte.</span><span class="sxs-lookup"><span data-stu-id="278a5-539">The following example converts an array of <xref:System.Int16> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#3)]
 [!code-csharp[System.Convert.ToBoolean#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#3)]
 [!code-vb[System.Convert.ToBoolean#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int16" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(int value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : int -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-540">The 32-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-540">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-541">Converts the value of the specified 32-bit signed integer to an equivalent Boolean value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-541">Converts the value of the specified 32-bit signed integer to an equivalent Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-542">
            <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-542">
              <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-543">Das folgende Beispiel konvertiert ein Array von <xref:System.Int32> Werte <xref:System.Boolean> Werte.</span><span class="sxs-lookup"><span data-stu-id="278a5-543">The following example converts an array of <xref:System.Int32> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#4)]
 [!code-csharp[System.Convert.ToBoolean#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#4)]
 [!code-vb[System.Convert.ToBoolean#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(long value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : int64 -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-544">The 64-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-544">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-545">Converts the value of the specified 64-bit signed integer to an equivalent Boolean value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-545">Converts the value of the specified 64-bit signed integer to an equivalent Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-546">
            <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-546">
              <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-547">Das folgende Beispiel konvertiert ein Array von <xref:System.Int64> Werte <xref:System.Boolean> Werte.</span><span class="sxs-lookup"><span data-stu-id="278a5-547">The following example converts an array of <xref:System.Int64> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#5)]
 [!code-csharp[System.Convert.ToBoolean#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#5)]
 [!code-vb[System.Convert.ToBoolean#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : obj -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-548">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-548">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-549">Converts the value of a specified object to an equivalent Boolean value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-549">Converts the value of a specified object to an equivalent Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-550">
            <see langword="true" /> or <see langword="false" />, which reflects the value returned by invoking the <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /> method for the underlying type of <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-550">
              <see langword="true" /> or <see langword="false" />, which reflects the value returned by invoking the <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /> method for the underlying type of <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="278a5-551">If <paramref name="value" /> is <see langword="null" />, the method returns <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-551">If <paramref name="value" /> is <see langword="null" />, the method returns <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-552">Das folgende Beispiel konvertiert ein Array von Objektwerten, <xref:System.Boolean> Werte.</span><span class="sxs-lookup"><span data-stu-id="278a5-552">The following example converts an array of object values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#11)]
 [!code-csharp[System.Convert.ToBoolean#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#11)]
 [!code-vb[System.Convert.ToBoolean#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-553">
            <paramref name="value" /> is a string that does not equal <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-553">
              <paramref name="value" /> is a string that does not equal <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-554">
            <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-554">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="278a5-555">-or-  The conversion of <paramref name="value" /> to a <see cref="T:System.Boolean" /> is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-555">-or-  The conversion of <paramref name="value" /> to a <see cref="T:System.Boolean" /> is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As SByte) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : sbyte -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-556">The 8-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-556">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-557">Converts the value of the specified 8-bit signed integer to an equivalent Boolean value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-557">Converts the value of the specified 8-bit signed integer to an equivalent Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-558">
            <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-558">
              <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-559">Das folgende Beispiel konvertiert ein Array von <xref:System.SByte> Werte <xref:System.Boolean> Werte.</span><span class="sxs-lookup"><span data-stu-id="278a5-559">The following example converts an array of <xref:System.SByte> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#6)]
 [!code-csharp[System.Convert.ToBoolean#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#6)]
 [!code-vb[System.Convert.ToBoolean#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.SByte" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(float value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : single -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-560">The single-precision floating-point number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-560">The single-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-561">Converts the value of the specified single-precision floating-point number to an equivalent Boolean value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-561">Converts the value of the specified single-precision floating-point number to an equivalent Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-562">
            <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-562">
              <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-563">Das folgende Beispiel konvertiert ein Array von <xref:System.Single> Werte <xref:System.Boolean> Werte.</span><span class="sxs-lookup"><span data-stu-id="278a5-563">The following example converts an array of <xref:System.Single> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#7)]
 [!code-csharp[System.Convert.ToBoolean#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#7)]
 [!code-vb[System.Convert.ToBoolean#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : string -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-564">A string that contains the value of either <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-564">A string that contains the value of either <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-565">Converts the specified string representation of a logical value to its Boolean equivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-565">Converts the specified string representation of a logical value to its Boolean equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-566">
            <see langword="true" /> if <paramref name="value" /> equals <see cref="F:System.Boolean.TrueString" />, or <see langword="false" /> if <paramref name="value" /> equals <see cref="F:System.Boolean.FalseString" /> or <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-566">
              <see langword="true" /> if <paramref name="value" /> equals <see cref="F:System.Boolean.TrueString" />, or <see langword="false" /> if <paramref name="value" /> equals <see cref="F:System.Boolean.FalseString" /> or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-567">Für eine erfolgreiche Konvertierung ausgeführt werden die `value` Parameter muss entweder gleich <xref:System.Boolean.TrueString?displayProperty=nameWithType>, eine Konstante, deren Wert `True`, <xref:System.Boolean.FalseString?displayProperty=nameWithType>, eine Konstante, deren Wert `False`, oder es muss `null`.</span><span class="sxs-lookup"><span data-stu-id="278a5-567">For a successful conversion to occur, the `value` parameter must equal either <xref:System.Boolean.TrueString?displayProperty=nameWithType>, a constant whose value is `True`, <xref:System.Boolean.FalseString?displayProperty=nameWithType>, a constant whose value is `False`, or it must be `null`.</span></span> <span data-ttu-id="278a5-568">Beim Vergleichen `value` mit <xref:System.Boolean.TrueString?displayProperty=nameWithType> und <xref:System.Boolean.FalseString?displayProperty=nameWithType>, die-Methode ignoriert die Groß-/Kleinschreibung führende und nachfolgende Leerzeichen.</span><span class="sxs-lookup"><span data-stu-id="278a5-568">In comparing `value` with <xref:System.Boolean.TrueString?displayProperty=nameWithType> and <xref:System.Boolean.FalseString?displayProperty=nameWithType>, the method ignores case as well as leading and trailing white space.</span></span>  
  
 <span data-ttu-id="278a5-569">Falls gewünscht, nicht um eine Ausnahme zu behandeln, wenn die Konvertierung fehlschlägt, können Sie rufen die <xref:System.Boolean.TryParse%2A?displayProperty=nameWithType> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="278a5-569">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Boolean.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="278a5-570">Es gibt eine <xref:System.Boolean> Wert, der angibt, ob die Konvertierung erfolgreich war oder nicht.</span><span class="sxs-lookup"><span data-stu-id="278a5-570">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-571">Im folgenden Beispiel wird die <xref:System.Convert.ToBoolean%28System.String%29?displayProperty=nameWithType> Methode, um verschiedene Zeichenfolgen in boolesche Werte zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-571">The following example uses the <xref:System.Convert.ToBoolean%28System.String%29?displayProperty=nameWithType> method to convert various strings to Boolean values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean1.cpp#1)]
 [!code-csharp[System.Convert.ToBoolean#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/ToBoolean1.cs#1)]
 [!code-vb[System.Convert.ToBoolean#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/ToBoolean1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-572">
            <paramref name="value" /> is not equal to <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-572">
              <paramref name="value" /> is not equal to <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As UShort) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : uint16 -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-573">The 16-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-573">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-574">Converts the value of the specified 16-bit unsigned integer to an equivalent Boolean value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-574">Converts the value of the specified 16-bit unsigned integer to an equivalent Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-575">
            <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-575">
              <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-576">Das folgende Beispiel konvertiert ein Array von <xref:System.UInt16> Werte <xref:System.Boolean> Werte.</span><span class="sxs-lookup"><span data-stu-id="278a5-576">The following example converts an array of <xref:System.UInt16> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#8)]
 [!code-csharp[System.Convert.ToBoolean#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#8)]
 [!code-vb[System.Convert.ToBoolean#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt16" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As UInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : uint32 -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-577">The 32-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-577">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-578">Converts the value of the specified 32-bit unsigned integer to an equivalent Boolean value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-578">Converts the value of the specified 32-bit unsigned integer to an equivalent Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-579">
            <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-579">
              <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-580">Das folgende Beispiel konvertiert ein Array von <xref:System.Int32> Werte <xref:System.Boolean> Werte.</span><span class="sxs-lookup"><span data-stu-id="278a5-580">The following example converts an array of <xref:System.Int32> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#9)]
 [!code-csharp[System.Convert.ToBoolean#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#9)]
 [!code-vb[System.Convert.ToBoolean#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt32" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : uint64 -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-581">The 64-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-581">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-582">Converts the value of the specified 64-bit unsigned integer to an equivalent Boolean value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-582">Converts the value of the specified 64-bit unsigned integer to an equivalent Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-583">
            <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-583">
              <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-584">Das folgende Beispiel konvertiert ein Array von <xref:System.UInt64> Werte <xref:System.Boolean> Werte.</span><span class="sxs-lookup"><span data-stu-id="278a5-584">The following example converts an array of <xref:System.UInt64> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#10)]
 [!code-csharp[System.Convert.ToBoolean#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#10)]
 [!code-vb[System.Convert.ToBoolean#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt64" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Object, provider As IFormatProvider) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : obj * IFormatProvider -&gt; bool" Usage="System.Convert.ToBoolean (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-585">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-585">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="278a5-586">An object that supplies culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-586">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-587">Converts the value of the specified object to an equivalent Boolean value, using the specified culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-587">Converts the value of the specified object to an equivalent Boolean value, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-588">
            <see langword="true" /> or <see langword="false" />, which reflects the value returned by invoking the <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /> method for the underlying type of <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-588">
              <see langword="true" /> or <see langword="false" />, which reflects the value returned by invoking the <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /> method for the underlying type of <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="278a5-589">If <paramref name="value" /> is <see langword="null" />, the method returns <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-589">If <paramref name="value" /> is <see langword="null" />, the method returns <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-590">`provider` ermöglicht es dem Benutzer an kulturspezifische Konvertierungsinformationen für den Inhalt des `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-590">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="278a5-591">Die Basistypen ignorieren die `provider` Parameter; der Parameter kann jedoch verwendet werden, wenn `value` ist ein benutzerdefinierten Typ, der implementiert die <xref:System.IConvertible> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="278a5-591">The base types ignore the `provider` parameter; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-592">Das folgende Beispiel definiert eine Klasse, die implementiert <xref:System.IConvertible> und eine Klasse, die implementiert <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="278a5-592">The following example defines a class that implements <xref:System.IConvertible> and a class that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="278a5-593">Objekte der Klasse, die implementiert <xref:System.IConvertible> enthalten ein Array von <xref:System.Double> Werte.</span><span class="sxs-lookup"><span data-stu-id="278a5-593">Objects of the class that implements <xref:System.IConvertible> hold an array of <xref:System.Double> values.</span></span> <span data-ttu-id="278a5-594">Ein Objekt einer jeden Klasse übergeben wird, um die <xref:System.Convert.ToBoolean%28System.Object%2CSystem.IFormatProvider%29> Methode.</span><span class="sxs-lookup"><span data-stu-id="278a5-594">An object of each class is passed to the <xref:System.Convert.ToBoolean%28System.Object%2CSystem.IFormatProvider%29> method.</span></span> <span data-ttu-id="278a5-595">Diese Methode gibt `true` , wenn das Array nicht verworfen Werte ungleich NULL sind.</span><span class="sxs-lookup"><span data-stu-id="278a5-595">This method returns `true` if any of the non-discarded array values are non-zero.</span></span> <span data-ttu-id="278a5-596">Die <xref:System.IFormatProvider> Objekt bestimmt, wie die Elemente für diese Berechnung verworfen werden.</span><span class="sxs-lookup"><span data-stu-id="278a5-596">The <xref:System.IFormatProvider> object determines how elements are discarded for this calculation.</span></span>  
  
 [!code-cpp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CPP/objectifp.cpp#1)]
 [!code-csharp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CS/objectifp.cs#1)]
 [!code-vb[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/VB/objectifp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-597">
            <paramref name="value" /> is a string that does not equal <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-597">
              <paramref name="value" /> is a string that does not equal <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-598">
            <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-598">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="278a5-599">-or-  The conversion of <paramref name="value" /> to a <see cref="T:System.Boolean" /> is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-599">-or-  The conversion of <paramref name="value" /> to a <see cref="T:System.Boolean" /> is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As String, provider As IFormatProvider) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : string * IFormatProvider -&gt; bool" Usage="System.Convert.ToBoolean (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-600">A string that contains the value of either <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-600">A string that contains the value of either <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="278a5-601">An object that supplies culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-601">An object that supplies culture-specific formatting information.</span>
          </span>
          <span data-ttu-id="278a5-602">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-602">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-603">Converts the specified string representation of a logical value to its Boolean equivalent, using the specified culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-603">Converts the specified string representation of a logical value to its Boolean equivalent, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-604">
            <see langword="true" /> if <paramref name="value" /> equals <see cref="F:System.Boolean.TrueString" />, or <see langword="false" /> if <paramref name="value" /> equals <see cref="F:System.Boolean.FalseString" /> or <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-604">
              <see langword="true" /> if <paramref name="value" /> equals <see cref="F:System.Boolean.TrueString" />, or <see langword="false" /> if <paramref name="value" /> equals <see cref="F:System.Boolean.FalseString" /> or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-605">Falls gewünscht, nicht um eine Ausnahme zu behandeln, wenn die Konvertierung fehlschlägt, können Sie rufen die <xref:System.Boolean.TryParse%2A?displayProperty=nameWithType> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="278a5-605">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Boolean.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="278a5-606">Es gibt eine <xref:System.Boolean> Wert, der angibt, ob die Konvertierung erfolgreich war oder nicht.</span><span class="sxs-lookup"><span data-stu-id="278a5-606">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-607">
            <paramref name="value" /> is not equal to <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-607">
              <paramref name="value" /> is not equal to <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToByte">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="278a5-608">Converts a specified value to an 8-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-608">Converts a specified value to an 8-bit unsigned integer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Boolean) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(bool value);" />
      <MemberSignature Language="F#" Value="static member ToByte : bool -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-609">The Boolean value to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-609">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-610">Converts the specified Boolean value to the equivalent 8-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-610">Converts the specified Boolean value to the equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-611">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-611">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-612">Das folgende Beispiel veranschaulicht die Konvertierung von <xref:System.Boolean> zu <xref:System.Byte> Werte.</span><span class="sxs-lookup"><span data-stu-id="278a5-612">The following example illustrates the conversion of <xref:System.Boolean> to <xref:System.Byte> values.</span></span>  
  
 [!code-cpp[System.Convert.ToByte#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.convert.tobyte/cpp/tobyte1.cpp#1)]
 [!code-csharp[System.Convert.ToByte#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#1)]
 [!code-vb[System.Convert.ToByte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToByte : byte -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-613">The 8-bit unsigned integer to return.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-613">The 8-bit unsigned integer to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-614">Returns the specified 8-bit unsigned integer; no actual conversion is performed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-614">Returns the specified 8-bit unsigned integer; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-615">
            <paramref name="value" /> is returned unchanged.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-615">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Char) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(char value);" />
      <MemberSignature Language="F#" Value="static member ToByte : char -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-616">The Unicode character to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-616">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-617">Converts the value of the specified Unicode character to the equivalent 8-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-617">Converts the value of the specified Unicode character to the equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-618">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-618">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-619">Diese Methode gibt einen Byte ohne Vorzeichen-Wert, der den numerischen Code stellt die <xref:System.Char> Objekt übergeben.</span><span class="sxs-lookup"><span data-stu-id="278a5-619">This method returns an unsigned byte value that represents the numeric code of the <xref:System.Char> object passed to it.</span></span> <span data-ttu-id="278a5-620">In .NET Framework ein <xref:System.Char> Objekt ist ein 16-Bit-Wert.</span><span class="sxs-lookup"><span data-stu-id="278a5-620">In the .NET Framework, a <xref:System.Char> object is a 16-bit value.</span></span> <span data-ttu-id="278a5-621">Dies bedeutet, dass die Methode für die Rückgabe der numerischen Codes von Zeichen im ASCII-Zeichenbereich oder in den Unicode-C0 Steuerelemente und lateinischen, C1 und Steuerelemente Latein-1, Ergänzung-Bereichen von U + 0000 bis U + 00FF geeignet ist.</span><span class="sxs-lookup"><span data-stu-id="278a5-621">This means that the method is suitable for returning the numeric codes of characters in the ASCII character range or in the Unicode C0 Controls and Basic Latin, and C1 Controls and Latin-1 Supplement ranges, from U+0000 to U+00FF.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-622">Das folgende Beispiel konvertiert ein Array von <xref:System.Char> Werte <xref:System.Byte> Werte.</span><span class="sxs-lookup"><span data-stu-id="278a5-622">The following example converts an array of <xref:System.Char> values to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#2)]
 [!code-vb[System.Convert.ToByte#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-623">
            <paramref name="value" /> represents a number that is greater than <see cref="F:System.Byte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-623">
              <paramref name="value" /> represents a number that is greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As DateTime) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToByte : DateTime -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-624">The date and time value to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-624">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-625">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-625">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-626">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-626">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="278a5-627">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-627">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-628">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-628">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Decimal) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToByte : decimal -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-629">The number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-629">The number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-630">Converts the value of the specified decimal number to an equivalent 8-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-630">Converts the value of the specified decimal number to an equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-631">
            <paramref name="value" />, rounded to the nearest 8-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-631">
              <paramref name="value" />, rounded to the nearest 8-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="278a5-632">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-632">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-633">Im folgenden Beispiel wird eine <xref:System.Byte> -Wert an ein <xref:System.Decimal> und ein <xref:System.Decimal> -Wert an ein <xref:System.Byte>.</span><span class="sxs-lookup"><span data-stu-id="278a5-633">The following example converts a <xref:System.Byte> value to a <xref:System.Decimal> and a <xref:System.Decimal> value to a <xref:System.Byte>.</span></span>  
  
 [!code-cpp[System.Convert Snippets#18](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#18)]
 [!code-csharp[System.Convert Snippets#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#18)]
 [!code-vb[System.Convert Snippets#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-634">
            <paramref name="value" /> is greater than <see cref="F:System.Byte.MaxValue" /> or less than <see cref="F:System.Byte.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-634">
              <paramref name="value" /> is greater than <see cref="F:System.Byte.MaxValue" /> or less than <see cref="F:System.Byte.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Double) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(double value);" />
      <MemberSignature Language="F#" Value="static member ToByte : double -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-635">The double-precision floating-point number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-635">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-636">Converts the value of the specified double-precision floating-point number to an equivalent 8-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-636">Converts the value of the specified double-precision floating-point number to an equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-637">
            <paramref name="value" />, rounded to the nearest 8-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-637">
              <paramref name="value" />, rounded to the nearest 8-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="278a5-638">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-638">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-639">Im folgenden Beispiel wird eine <xref:System.Byte> -Wert an ein <xref:System.Double> und ein <xref:System.Double> -Wert an ein <xref:System.Byte>.</span><span class="sxs-lookup"><span data-stu-id="278a5-639">The following example converts a <xref:System.Byte> value to a <xref:System.Double> and a <xref:System.Double> value to a <xref:System.Byte>.</span></span>  
  
 [!code-cpp[System.Convert Snippets#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#2)]
 [!code-csharp[System.Convert Snippets#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#2)]
 [!code-vb[System.Convert Snippets#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-640">
            <paramref name="value" /> is greater than <see cref="F:System.Byte.MaxValue" /> or less than <see cref="F:System.Byte.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-640">
              <paramref name="value" /> is greater than <see cref="F:System.Byte.MaxValue" /> or less than <see cref="F:System.Byte.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Short) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(short value);" />
      <MemberSignature Language="F#" Value="static member ToByte : int16 -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-641">The 16-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-641">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-642">Converts the value of the specified 16-bit signed integer to an equivalent 8-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-642">Converts the value of the specified 16-bit signed integer to an equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-643">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-643">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-644">Das folgende Beispiel konvertiert ein Array von <xref:System.Int16> Werte <xref:System.Byte> Werte.</span><span class="sxs-lookup"><span data-stu-id="278a5-644">The following example converts an array of <xref:System.Int16> values to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#3)]
 [!code-vb[System.Convert.ToByte#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-645">
            <paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-645">
              <paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(int value);" />
      <MemberSignature Language="F#" Value="static member ToByte : int -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-646">The 32-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-646">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-647">Converts the value of the specified 32-bit signed integer to an equivalent 8-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-647">Converts the value of the specified 32-bit signed integer to an equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-648">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-648">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-649">Das folgende Beispiel konvertiert ein Array von <xref:System.Int32> Werte <xref:System.Byte> Werte.</span><span class="sxs-lookup"><span data-stu-id="278a5-649">The following example converts an array of <xref:System.Int32> values to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#4)]
 [!code-vb[System.Convert.ToByte#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-650">
            <paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-650">
              <paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Long) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(long value);" />
      <MemberSignature Language="F#" Value="static member ToByte : int64 -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-651">The 64-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-651">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-652">Converts the value of the specified 64-bit signed integer to an equivalent 8-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-652">Converts the value of the specified 64-bit signed integer to an equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-653">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-653">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-654">Das folgende Beispiel konvertiert ein Array von <xref:System.Int64> Werte <xref:System.Byte> Werte.</span><span class="sxs-lookup"><span data-stu-id="278a5-654">The following example converts an array of <xref:System.Int64> values to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#5)]
 [!code-vb[System.Convert.ToByte#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-655">
            <paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-655">
              <paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Object) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToByte : obj -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-656">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-656">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-657">Converts the value of the specified object to an 8-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-657">Converts the value of the specified object to an 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-658">An 8-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-658">An 8-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-659">Wenn `value` nicht `null`, diese Methode dient als Wrapper für einen Aufruf der <xref:System.IConvertible.ToByte%2A?displayProperty=nameWithType> Implementierung des zugrunde liegenden Typs von `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-659">If `value` is not `null`, this method wraps a call to the <xref:System.IConvertible.ToByte%2A?displayProperty=nameWithType> implementation of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-660">Im folgenden Beispiel wird die <xref:System.Convert.ToByte%28System.Object%29> Methode, um ein Array von Objekten, die zu konvertierende <xref:System.Byte> Werte.</span><span class="sxs-lookup"><span data-stu-id="278a5-660">The following example uses the <xref:System.Convert.ToByte%28System.Object%29> method to convert an array of objects to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#6)]
 [!code-vb[System.Convert.ToByte#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-661">
            <paramref name="value" /> is not in the property format for a <see cref="T:System.Byte" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-661">
              <paramref name="value" /> is not in the property format for a <see cref="T:System.Byte" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-662">
            <paramref name="value" /> does not implement <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-662">
              <paramref name="value" /> does not implement <see cref="T:System.IConvertible" />.</span>
          </span>
          <span data-ttu-id="278a5-663">-or-  Conversion from <paramref name="value" /> to the <see cref="T:System.Byte" /> type is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-663">-or-  Conversion from <paramref name="value" /> to the <see cref="T:System.Byte" /> type is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-664">
            <paramref name="value" /> represents a number that is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-664">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As SByte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToByte : sbyte -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-665">The 8-bit signed integer to be converted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-665">The 8-bit signed integer to be converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-666">Converts the value of the specified 8-bit signed integer to an equivalent 8-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-666">Converts the value of the specified 8-bit signed integer to an equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-667">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-667">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-668">Das folgende Beispiel konvertiert ein Array von <xref:System.SByte> Werte <xref:System.Byte> Werte.</span><span class="sxs-lookup"><span data-stu-id="278a5-668">The following example converts an array of <xref:System.SByte> values to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#7)]
 [!code-vb[System.Convert.ToByte#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-669">
            <paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-669">
              <paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Single) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(float value);" />
      <MemberSignature Language="F#" Value="static member ToByte : single -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-670">A single-precision floating-point number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-670">A single-precision floating-point number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-671">Converts the value of the specified single-precision floating-point number to an equivalent 8-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-671">Converts the value of the specified single-precision floating-point number to an equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-672">
            <paramref name="value" />, rounded to the nearest 8-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-672">
              <paramref name="value" />, rounded to the nearest 8-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="278a5-673">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-673">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-674">Im folgenden Beispiel wird eine <xref:System.Single> -Wert in einen <xref:System.Byte>.</span><span class="sxs-lookup"><span data-stu-id="278a5-674">The following example converts a <xref:System.Single> value to a <xref:System.Byte>.</span></span>  
  
 [!code-cpp[System.Convert Snippets#19](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#19)]
 [!code-csharp[System.Convert Snippets#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#19)]
 [!code-vb[System.Convert Snippets#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-675">
            <paramref name="value" /> is greater than <see cref="F:System.Byte.MaxValue" /> or less than <see cref="F:System.Byte.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-675">
              <paramref name="value" /> is greater than <see cref="F:System.Byte.MaxValue" /> or less than <see cref="F:System.Byte.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As String) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToByte : string -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-676">A string that contains the number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-676">A string that contains the number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-677">Converts the specified string representation of a number to an equivalent 8-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-677">Converts the specified string representation of a number to an equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-678">An 8-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-678">An 8-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-679">Mithilfe der <xref:System.Convert.ToByte%28System.String%29> Methode entspricht dem übergeben `value` auf die <xref:System.Byte.Parse%28System.String%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="278a5-679">Using the <xref:System.Convert.ToByte%28System.String%29> method is equivalent to passing `value` to the <xref:System.Byte.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="278a5-680">`value` wird mithilfe der Formatierungskonventionen der aktuellen Threadkultur interpretiert.</span><span class="sxs-lookup"><span data-stu-id="278a5-680">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="278a5-681">Falls gewünscht, nicht um eine Ausnahme zu behandeln, wenn die Konvertierung fehlschlägt, können Sie rufen die <xref:System.Byte.TryParse%2A?displayProperty=nameWithType> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="278a5-681">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Byte.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="278a5-682">Es gibt eine <xref:System.Boolean> Wert, der angibt, ob die Konvertierung erfolgreich war oder nicht.</span><span class="sxs-lookup"><span data-stu-id="278a5-682">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-683">Im folgenden Beispiel definiert ein Array von Zeichenfolgen und versucht, jede Zeichenfolge zum Konvertieren einer <xref:System.Byte>.</span><span class="sxs-lookup"><span data-stu-id="278a5-683">The following example defines a string array and attempts to convert each string to a <xref:System.Byte>.</span></span>  <span data-ttu-id="278a5-684">Beachten Sie, dass eine `null` Zeichenfolge analysiert wird, um 0 (null), <xref:System.String.Empty?displayProperty=nameWithType> löst eine <xref:System.FormatException>.</span><span class="sxs-lookup"><span data-stu-id="278a5-684">Note that while a `null` string parses to zero, <xref:System.String.Empty?displayProperty=nameWithType> throws a <xref:System.FormatException>.</span></span> <span data-ttu-id="278a5-685">Beachten Sie außerdem, dass während der führende und nachfolgende Leerzeichen erfolgreich analysiert Formatierung von Symbolen, z. B. Währungssymbole, Gruppentrennzeichen oder Dezimaltrennzeichen, nicht der Fall.</span><span class="sxs-lookup"><span data-stu-id="278a5-685">Also note that while leading and trailing spaces parse successfully, formatting symbols, such as currency symbols, group separators, or decimal separators, do not.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/ToByte5.cs#15)]
 [!code-vb[System.Convert.ToByte#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte5.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-686">
            <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-686">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-687">
            <paramref name="value" /> represents a number that is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-687">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Byte.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As UShort) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToByte : uint16 -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-688">The 16-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-688">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-689">Converts the value of the specified 16-bit unsigned integer to an equivalent 8-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-689">Converts the value of the specified 16-bit unsigned integer to an equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-690">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-690">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-691">Das folgende Beispiel konvertiert ein Array von 16-Bit-Ganzzahlen ohne Vorzeichen um <xref:System.Byte> Werte.</span><span class="sxs-lookup"><span data-stu-id="278a5-691">The following example converts an array of unsigned 16-bit integers to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#8)]
 [!code-vb[System.Convert.ToByte#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-692">
            <paramref name="value" /> is greater than <see cref="F:System.Byte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-692">
              <paramref name="value" /> is greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As UInteger) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToByte : uint32 -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-693">The 32-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-693">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-694">Converts the value of the specified 32-bit unsigned integer to an equivalent 8-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-694">Converts the value of the specified 32-bit unsigned integer to an equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-695">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-695">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-696">Das folgende Beispiel konvertiert ein Array von Ganzzahlen ohne Vorzeichen in <xref:System.Byte> Werte.</span><span class="sxs-lookup"><span data-stu-id="278a5-696">The following example converts an array of unsigned integers to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#9)]
 [!code-vb[System.Convert.ToByte#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-697">
            <paramref name="value" /> is greater than <see cref="F:System.Byte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-697">
              <paramref name="value" /> is greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As ULong) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToByte : uint64 -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-698">The 64-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-698">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-699">Converts the value of the specified 64-bit unsigned integer to an equivalent 8-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-699">Converts the value of the specified 64-bit unsigned integer to an equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-700">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-700">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-701">Im folgenden Beispiel wird ein Array von zu lange Ganzzahlen ohne Vorzeichen konvertiert <xref:System.Byte> Werte.</span><span class="sxs-lookup"><span data-stu-id="278a5-701">The following example converts an array of unsigned long integers to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#10)]
 [!code-vb[System.Convert.ToByte#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-702">
            <paramref name="value" /> is greater than <see cref="F:System.Byte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-702">
              <paramref name="value" /> is greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Object, provider As IFormatProvider) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToByte : obj * IFormatProvider -&gt; byte" Usage="System.Convert.ToByte (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-703">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-703">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="278a5-704">An object that supplies culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-704">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-705">Converts the value of the specified object to an 8-bit unsigned integer, using the specified culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-705">Converts the value of the specified object to an 8-bit unsigned integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-706">An 8-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-706">An 8-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-707">`provider` ermöglicht es dem Benutzer an kulturspezifische Konvertierungsinformationen für den Inhalt des `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-707">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="278a5-708">Ignorieren Sie die Basistypen `provider`jedoch der Parameter kann verwendet werden, wenn `value` ist ein benutzerdefinierten Typ, der implementiert die <xref:System.IConvertible> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="278a5-708">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-709">Im folgenden Beispiel wird eine `ByteString`-Klasse definiert, die die <xref:System.IConvertible>-Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="278a5-709">The following example defines a `ByteString` class that implements the <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="278a5-710">Die Klasse speichert die angegebene Zeichenfolgendarstellung ein Byte-Wert zusammen mit einem Feld anmelden, damit beide Bytewerten mit und ohne Vorzeichen darstellen kann.</span><span class="sxs-lookup"><span data-stu-id="278a5-710">The class stores the string representation of a byte value along with a sign field, so that it is able to represent both signed and unsigned byte values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte3.cs#12)]
 [!code-vb[System.Convert.ToByte#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte3.vb#12)]  
  
 <span data-ttu-id="278a5-711">Das folgende Beispiel instanziiert mehrere `ByteString` Objekte und ruft die <xref:System.Convert.ToByte%28System.Object%2CSystem.IFormatProvider%29> Methode, um sie in Byte-Werte zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-711">The following example instantiates several `ByteString` objects and calls the <xref:System.Convert.ToByte%28System.Object%2CSystem.IFormatProvider%29> method to convert them to byte values.</span></span> <span data-ttu-id="278a5-712">Es veranschaulicht, dass die <xref:System.Convert.ToByte%28System.Object%2CSystem.IFormatProvider%29> Methode bindet einen Aufruf der <xref:System.IConvertible.ToByte%2A?displayProperty=nameWithType> -Methode des Objekts konvertiert werden.</span><span class="sxs-lookup"><span data-stu-id="278a5-712">It illustrates that the <xref:System.Convert.ToByte%28System.Object%2CSystem.IFormatProvider%29> method wraps a call to the <xref:System.IConvertible.ToByte%2A?displayProperty=nameWithType> method of the object to be converted.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte3.cs#13)]
 [!code-vb[System.Convert.ToByte#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte3.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-713">
            <paramref name="value" /> is not in the property format for a <see cref="T:System.Byte" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-713">
              <paramref name="value" /> is not in the property format for a <see cref="T:System.Byte" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-714">
            <paramref name="value" /> does not implement <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-714">
              <paramref name="value" /> does not implement <see cref="T:System.IConvertible" />.</span>
          </span>
          <span data-ttu-id="278a5-715">-or-  Conversion from <paramref name="value" /> to the <see cref="T:System.Byte" /> type is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-715">-or-  Conversion from <paramref name="value" /> to the <see cref="T:System.Byte" /> type is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-716">
            <paramref name="value" /> represents a number that is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-716">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As String, provider As IFormatProvider) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToByte : string * IFormatProvider -&gt; byte" Usage="System.Convert.ToByte (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-717">A string that contains the number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-717">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="278a5-718">An object that supplies culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-718">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-719">Converts the specified string representation of a number to an equivalent 8-bit unsigned integer, using specified culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-719">Converts the specified string representation of a number to an equivalent 8-bit unsigned integer, using specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-720">An 8-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-720">An 8-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-721">`provider` ist ein <xref:System.IFormatProvider> -Instanz, die erhält eine <xref:System.Globalization.NumberFormatInfo> Objekt.</span><span class="sxs-lookup"><span data-stu-id="278a5-721">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="278a5-722">Die <xref:System.Globalization.NumberFormatInfo> Objekt stellt kulturspezifische Informationen zum Format von `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-722">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="278a5-723">Wenn `provider` ist `null`die <xref:System.Globalization.NumberFormatInfo> -Objekt für die aktuelle Kultur verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="278a5-723">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
 <span data-ttu-id="278a5-724">Falls gewünscht, nicht um eine Ausnahme zu behandeln, wenn die Konvertierung fehlschlägt, können Sie rufen die <xref:System.Byte.TryParse%2A?displayProperty=nameWithType> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="278a5-724">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Byte.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="278a5-725">Es gibt eine <xref:System.Boolean> Wert, der angibt, ob die Konvertierung erfolgreich war oder nicht.</span><span class="sxs-lookup"><span data-stu-id="278a5-725">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-726">Das folgende Beispiel erstellt eine benutzerdefinierte <xref:System.Globalization.NumberFormatInfo> -Objekt, das die positiven Vorzeichen als "pos" und das Minuszeichen als "Neg", die in Aufrufen verwendet definiert die <xref:System.Convert.ToByte%28System.String%2CSystem.IFormatProvider%29> Methode.</span><span class="sxs-lookup"><span data-stu-id="278a5-726">The following example creates a custom <xref:System.Globalization.NumberFormatInfo> object that defines the positive sign as "pos" and the negative sign as "neg", which it uses in calls to the <xref:System.Convert.ToByte%28System.String%2CSystem.IFormatProvider%29> method.</span></span> <span data-ttu-id="278a5-727">Er ruft dann die <xref:System.Convert.ToByte%28System.String%2CSystem.IFormatProvider%29> Methode wiederholt, um jedes Element in ein Array von Zeichenfolgen zu konvertieren einer <xref:System.Byte> Wert.</span><span class="sxs-lookup"><span data-stu-id="278a5-727">It then calls the <xref:System.Convert.ToByte%28System.String%2CSystem.IFormatProvider%29> method repeatedly to convert each element in a string array to a <xref:System.Byte> value.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte4.cs#14)]
 [!code-vb[System.Convert.ToByte#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte4.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-728">
            <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-728">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-729">
            <paramref name="value" /> represents a number that is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-729">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Byte.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (string value, int fromBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(string value, int32 fromBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As String, fromBase As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::String ^ value, int fromBase);" />
      <MemberSignature Language="F#" Value="static member ToByte : string * int -&gt; byte" Usage="System.Convert.ToByte (value, fromBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-730">A string that contains the number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-730">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="fromBase">
          <span data-ttu-id="278a5-731">The base of the number in <c>value</c>, which must be 2, 8, 10, or 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-731">The base of the number in <c>value</c>, which must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-732">Converts the string representation of a number in a specified base to an equivalent 8-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-732">Converts the string representation of a number in a specified base to an equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-733">An 8-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-733">An 8-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-734">Wenn `fromBase` 16 ist, können Sie die Anzahl von angegebenen Präfix der `value` Parameter mit "0 X" oder "0 X".</span><span class="sxs-lookup"><span data-stu-id="278a5-734">If `fromBase` is 16, you can prefix the number specified by the `value` parameter with "0x" or "0X".</span></span>  
  
 <span data-ttu-id="278a5-735">Da die <xref:System.Byte> -Datentyp unterstützt nur Werte ohne Vorzeichen der <xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29> Methode setzt voraus, dass `value` wird mithilfe von nicht signierten binärdarstellung ausgedrückt.</span><span class="sxs-lookup"><span data-stu-id="278a5-735">Because the <xref:System.Byte> data type supports unsigned values only, the <xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29> method assumes that `value` is expressed using unsigned binary representation.</span></span> <span data-ttu-id="278a5-736">Das heißt, alle acht Bits werden verwendet, um den numerischen Wert darstellen, und Vorzeichenbit ist nicht vorhanden.</span><span class="sxs-lookup"><span data-stu-id="278a5-736">In other words, all eight bits are used to represent the numeric value, and a sign bit is absent.</span></span> <span data-ttu-id="278a5-737">Daher ist es möglich, Schreiben Code in der einen Bytewert mit Vorzeichen ist außerhalb des Bereichs der <xref:System.Byte> -Datentyp in konvertiert eine <xref:System.Byte> Wert ohne die Methode eine Ausnahme auszulösen.</span><span class="sxs-lookup"><span data-stu-id="278a5-737">As a result, it is possible to write code in which a signed byte value that is out of the range of the <xref:System.Byte> data type is converted to a <xref:System.Byte> value without the method throwing an exception.</span></span> <span data-ttu-id="278a5-738">Das folgende Beispiel konvertiert <xref:System.SByte.MinValue> auf die hexadezimale Darstellung, und ruft dann die <xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29> Methode.</span><span class="sxs-lookup"><span data-stu-id="278a5-738">The following example converts <xref:System.SByte.MinValue> to its hexadecimal string representation, and then calls the <xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="278a5-739">Anstatt eine Ausnahme auszulösen, die Methode zeigt die Meldung "0 x 80 konvertiert 128 sein."</span><span class="sxs-lookup"><span data-stu-id="278a5-739">Instead of throwing an exception, the method displays the message, "0x80 converts to 128."</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#3)]
 [!code-vb[System.Convert.BaseConversion#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#3)]  
  
 <span data-ttu-id="278a5-740">Wenn Sie binäre Operationen oder numerische Konvertierungen durchführen zu können, ist es immer der Verantwortung des Entwicklers, um sicherzustellen, dass eine Methode oder der Operator die entsprechenden numerische Darstellung verwendet, um einen bestimmten Wert zu interpretieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-740">When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method or operator is using the appropriate numeric representation to interpret a particular value.</span></span> <span data-ttu-id="278a5-741">Das folgende Beispiel veranschaulicht eine Technik für nicht binäre Darstellung sicherstellen, dass die Methode nicht nicht ordnungsgemäß verwendet wird, signierte Wenn konvertiert eine hexadezimale Zeichenfolgendarstellung zu einem <xref:System.Byte> Wert.</span><span class="sxs-lookup"><span data-stu-id="278a5-741">The following example illustrates one technique for ensuring that the method does not inappropriately use unsigned binary representation when it converts a hexadecimal string representation to a <xref:System.Byte> value.</span></span> <span data-ttu-id="278a5-742">Im Beispiel wird ermittelt, ob ein Wert mit Vorzeichen oder ganze Zahl ohne Vorzeichen darstellt, während sie diesen Wert in seine Zeichenfolgendarstellung konvertiert.</span><span class="sxs-lookup"><span data-stu-id="278a5-742">The example determines whether a value represents a signed or an unsigned integer while it is converting that value to its string representation.</span></span> <span data-ttu-id="278a5-743">Wenn das Beispiel konvertiert den Wert zurück, um eine <xref:System.Byte> Wert, es wird überprüft, ob der ursprüngliche Wert eine Ganzzahl mit Vorzeichen war.</span><span class="sxs-lookup"><span data-stu-id="278a5-743">When the example converts the value back to a <xref:System.Byte> value, it checks whether the original value was a signed integer.</span></span> <span data-ttu-id="278a5-744">Wenn Sie damit und dessen höherwertiges Bit festgelegt ist (das heißt, dass der Wert negativ ist und, jedoch zwei verwendet Komplement anstelle von Binärdaten ohne Vorzeichen), die Methode eine Ausnahme auslöst.</span><span class="sxs-lookup"><span data-stu-id="278a5-744">If so, and if its high-order bit is set (which indicates that the value is negative and that it uses two's complement instead of unsigned binary representation), the method throws an exception.</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#4)]
 [!code-vb[System.Convert.BaseConversion#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#4)]  
  
   
  
## Examples  
 <span data-ttu-id="278a5-745">Im folgenden Beispiel wird versucht, klicken Sie alternativ ein Array von Zeichenfolgen als Darstellung des binäre, oktale, decimal und hexadezimale Werte interpretiert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="278a5-745">The following example alternately attempts to interpret an array of strings as the representation of binary, octal, decimal, and hexadecimal values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte2.cs#11)]
 [!code-vb[System.Convert.ToByte#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte2.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="278a5-746">
            <paramref name="fromBase" /> is not 2, 8, 10, or 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-746">
              <paramref name="fromBase" /> is not 2, 8, 10, or 16.</span>
          </span>
          <span data-ttu-id="278a5-747">-or-  <paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-747">-or-  <paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="278a5-748">
            <paramref name="value" /> is <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-748">
              <paramref name="value" /> is <see cref="F:System.String.Empty" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-749">
            <paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-749">
              <paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span>
          </span>
          <span data-ttu-id="278a5-750">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-750">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-751">
            <paramref name="value" />, which represents a base 10 unsigned number, is prefixed with a negative sign.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-751">
              <paramref name="value" />, which represents a base 10 unsigned number, is prefixed with a negative sign.</span>
          </span>
          <span data-ttu-id="278a5-752">-or-  <paramref name="value" /> represents a number that is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-752">-or-  <paramref name="value" /> represents a number that is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToChar">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="278a5-753">Converts a specified value to a Unicode character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-753">Converts a specified value to a Unicode character.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Boolean) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(bool value);" />
      <MemberSignature Language="F#" Value="static member ToChar : bool -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-754">The Boolean value to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-754">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-755">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-755">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-756">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-756">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="278a5-757">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-757">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-758">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-758">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Byte) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToChar : byte -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-759">The 8-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-759">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-760">Converts the value of the specified 8-bit unsigned integer to its equivalent Unicode character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-760">Converts the value of the specified 8-bit unsigned integer to its equivalent Unicode character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-761">A Unicode character that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-761">A Unicode character that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-762">Das folgende Beispiel konvertiert ein Array von Bytes ohne Vorzeichen in <xref:System.Char> Werte.</span><span class="sxs-lookup"><span data-stu-id="278a5-762">The following example converts an array of unsigned bytes to <xref:System.Char> values.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#1)]
 [!code-vb[System.Convert.ToChar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(char value);" />
      <MemberSignature Language="F#" Value="static member ToChar : char -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-763">The Unicode character to return.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-763">The Unicode character to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-764">Returns the specified Unicode character value; no actual conversion is performed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-764">Returns the specified Unicode character value; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-765">
            <paramref name="value" /> is returned unchanged.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-765">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As DateTime) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToChar : DateTime -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-766">The date and time value to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-766">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-767">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-767">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-768">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-768">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="278a5-769">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-769">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-770">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-770">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Decimal) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToChar : decimal -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-771">The decimal number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-771">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-772">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-772">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-773">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-773">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="278a5-774">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-774">No value is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-775">Im folgenden Beispiel wird versucht, Konvertieren einer <xref:System.Decimal> auf <xref:System.Char>, und löst <xref:System.InvalidCastException> bei einem Fehler.</span><span class="sxs-lookup"><span data-stu-id="278a5-775">The following example attempts to convert a <xref:System.Decimal> to <xref:System.Char>, and throws <xref:System.InvalidCastException> on failure.</span></span>  
  
 [!code-cpp[System.Convert Snippets#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#17)]
 [!code-csharp[System.Convert Snippets#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#17)]
 [!code-vb[System.Convert Snippets#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-776">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-776">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Double) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(double value);" />
      <MemberSignature Language="F#" Value="static member ToChar : double -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-777">The double-precision floating-point number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-777">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-778">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-778">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-779">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-779">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="278a5-780">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-780">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-781">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-781">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Short) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(short value);" />
      <MemberSignature Language="F#" Value="static member ToChar : int16 -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-782">The 16-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-782">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-783">Converts the value of the specified 16-bit signed integer to its equivalent Unicode character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-783">Converts the value of the specified 16-bit signed integer to its equivalent Unicode character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-784">A Unicode character that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-784">A Unicode character that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-785">Das folgende Beispiel konvertiert ein Array von 16-Bit-Ganzzahlen mit Vorzeichen um <xref:System.Char> Werte.</span><span class="sxs-lookup"><span data-stu-id="278a5-785">The following example converts an array of signed 16-bit integers to <xref:System.Char> values.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#2)]
 [!code-vb[System.Convert.ToChar#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-786">
            <paramref name="value" /> is less than <see cref="F:System.Char.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-786">
              <paramref name="value" /> is less than <see cref="F:System.Char.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(int value);" />
      <MemberSignature Language="F#" Value="static member ToChar : int -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-787">The 32-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-787">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-788">Converts the value of the specified 32-bit signed integer to its equivalent Unicode character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-788">Converts the value of the specified 32-bit signed integer to its equivalent Unicode character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-789">A Unicode character that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-789">A Unicode character that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-790">Das folgende Beispiel konvertiert ein Array von Ganzzahlen mit Vorzeichen um <xref:System.Char> Werte.</span><span class="sxs-lookup"><span data-stu-id="278a5-790">The following example converts an array of signed integers to <xref:System.Char> values.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#3)]
 [!code-vb[System.Convert.ToChar#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-791">
            <paramref name="value" /> is less than <see cref="F:System.Char.MinValue" /> or greater than <see cref="F:System.Char.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-791">
              <paramref name="value" /> is less than <see cref="F:System.Char.MinValue" /> or greater than <see cref="F:System.Char.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Long) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(long value);" />
      <MemberSignature Language="F#" Value="static member ToChar : int64 -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-792">The 64-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-792">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-793">Converts the value of the specified 64-bit signed integer to its equivalent Unicode character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-793">Converts the value of the specified 64-bit signed integer to its equivalent Unicode character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-794">A Unicode character that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-794">A Unicode character that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-795">Im folgenden Beispiel wird versucht, eine lange ganze Zahl zu konvertieren einer <xref:System.Char>, und löst eine <xref:System.OverflowException> bei einem Fehler.</span><span class="sxs-lookup"><span data-stu-id="278a5-795">The following example attempts to convert a long integer to a <xref:System.Char>, and throws a <xref:System.OverflowException> on failure.</span></span>  
  
 [!code-cpp[System.Convert Snippets#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#8)]
 [!code-csharp[System.Convert Snippets#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#8)]
 [!code-vb[System.Convert Snippets#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-796">
            <paramref name="value" /> is less than <see cref="F:System.Char.MinValue" /> or greater than <see cref="F:System.Char.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-796">
              <paramref name="value" /> is less than <see cref="F:System.Char.MinValue" /> or greater than <see cref="F:System.Char.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Object) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToChar : obj -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-797">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-797">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-798">Converts the value of the specified object to a Unicode character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-798">Converts the value of the specified object to a Unicode character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-799">A Unicode character that is equivalent to value, or <see cref="F:System.Char.MinValue" /> if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-799">A Unicode character that is equivalent to value, or <see cref="F:System.Char.MinValue" /> if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-800">Wenn `value` nicht `null`, diese Methode dient als Wrapper für einen Aufruf der <xref:System.IConvertible.ToChar%2A?displayProperty=nameWithType> Implementierung des zugrunde liegenden Typs von `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-800">If `value` is not `null`, this method wraps a call to the <xref:System.IConvertible.ToChar%2A?displayProperty=nameWithType> implementation of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-801">Im folgenden Beispiel wird versucht, um jedes Element in einem Objektarray zum Konvertieren einer <xref:System.Char> Wert.</span><span class="sxs-lookup"><span data-stu-id="278a5-801">The following example attempts to convert each element in an object array to a <xref:System.Char> value.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#9)]
 [!code-vb[System.Convert.ToChar#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="278a5-802">
            <paramref name="value" /> is a null string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-802">
              <paramref name="value" /> is a null string.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-803">
            <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-803">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="278a5-804">-or-  The conversion of <paramref name="value" /> to a <see cref="T:System.Char" /> is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-804">-or-  The conversion of <paramref name="value" /> to a <see cref="T:System.Char" /> is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-805">
            <paramref name="value" /> is less than <see cref="F:System.Char.MinValue" /> or greater than <see cref="F:System.Char.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-805">
              <paramref name="value" /> is less than <see cref="F:System.Char.MinValue" /> or greater than <see cref="F:System.Char.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As SByte) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToChar : sbyte -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-806">The 8-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-806">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-807">Converts the value of the specified 8-bit signed integer to its equivalent Unicode character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-807">Converts the value of the specified 8-bit signed integer to its equivalent Unicode character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-808">A Unicode character that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-808">A Unicode character that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-809">Das folgende Beispiel konvertiert ein Array von Bytes mit Vorzeichen in <xref:System.Char> Werte.</span><span class="sxs-lookup"><span data-stu-id="278a5-809">The following example converts an array of signed bytes to <xref:System.Char> values.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#4)]
 [!code-vb[System.Convert.ToChar#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-810">
            <paramref name="value" /> is less than <see cref="F:System.Char.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-810">
              <paramref name="value" /> is less than <see cref="F:System.Char.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Single) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(float value);" />
      <MemberSignature Language="F#" Value="static member ToChar : single -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-811">The single-precision floating-point number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-811">The single-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-812">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-812">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-813">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-813">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="278a5-814">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-814">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-815">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-815">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As String) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToChar : string -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-816">A string of length 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-816">A string of length 1.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-817">Converts the first character of a specified string to a Unicode character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-817">Converts the first character of a specified string to a Unicode character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-818">A Unicode character that is equivalent to the first and only character in <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-818">A Unicode character that is equivalent to the first and only character in <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-819">`value` muss eine Zeichenfolge, die ein einzelnes Zeichen enthält.</span><span class="sxs-lookup"><span data-stu-id="278a5-819">`value` must be a string that contains a single character.</span></span>  
  
 <span data-ttu-id="278a5-820">Falls gewünscht, nicht um eine Ausnahme zu behandeln, wenn die Konvertierung fehlschlägt, können Sie rufen die <xref:System.Char.TryParse%2A?displayProperty=nameWithType> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="278a5-820">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Char.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="278a5-821">Es gibt eine <xref:System.Boolean> Wert, der angibt, ob die Konvertierung erfolgreich war oder nicht.</span><span class="sxs-lookup"><span data-stu-id="278a5-821">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-822">Das folgende Beispiel konvertiert jedes Element in ein Zeichenfolgenarray, das eine <xref:System.Char> Wert.</span><span class="sxs-lookup"><span data-stu-id="278a5-822">The following example converts each element in a string array to a <xref:System.Char> value.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#5)]
 [!code-vb[System.Convert.ToChar#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="278a5-823">
            <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-823">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-824">The length of <paramref name="value" /> is not 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-824">The length of <paramref name="value" /> is not 1.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As UShort) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToChar : uint16 -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-825">The 16-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-825">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-826">Converts the value of the specified 16-bit unsigned integer to its equivalent Unicode character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-826">Converts the value of the specified 16-bit unsigned integer to its equivalent Unicode character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-827">A Unicode character that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-827">A Unicode character that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-828">Das folgende Beispiel konvertiert jedes Element in einem Array von 16-Bit-Ganzzahlen ohne Vorzeichen zu einem <xref:System.Char> Wert.</span><span class="sxs-lookup"><span data-stu-id="278a5-828">The following example converts each element in an array of unsigned 16-bit integers to a <xref:System.Char> value.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#6)]
 [!code-vb[System.Convert.ToChar#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As UInteger) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToChar : uint32 -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-829">The 32-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-829">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-830">Converts the value of the specified 32-bit unsigned integer to its equivalent Unicode character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-830">Converts the value of the specified 32-bit unsigned integer to its equivalent Unicode character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-831">A Unicode character that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-831">A Unicode character that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-832">Das folgende Beispiel konvertiert jedes Element in einem Array von Ganzzahlen ohne Vorzeichen in eine <xref:System.Char> Wert.</span><span class="sxs-lookup"><span data-stu-id="278a5-832">The following example converts each element in an array of unsigned integers to a <xref:System.Char> value.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#7)]
 [!code-vb[System.Convert.ToChar#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-833">
            <paramref name="value" /> is greater than <see cref="F:System.Char.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-833">
              <paramref name="value" /> is greater than <see cref="F:System.Char.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As ULong) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToChar : uint64 -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-834">The 64-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-834">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-835">Converts the value of the specified 64-bit unsigned integer to its equivalent Unicode character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-835">Converts the value of the specified 64-bit unsigned integer to its equivalent Unicode character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-836">A Unicode character that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-836">A Unicode character that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-837">Im folgenden Beispiel wird jedes Element in ein Array von zu lange Ganzzahlen ohne Vorzeichen konvertiert eine <xref:System.Char> Wert.</span><span class="sxs-lookup"><span data-stu-id="278a5-837">The following example converts each element in an array of unsigned long integers to a <xref:System.Char> value.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#8)]
 [!code-vb[System.Convert.ToChar#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-838">
            <paramref name="value" /> is greater than <see cref="F:System.Char.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-838">
              <paramref name="value" /> is greater than <see cref="F:System.Char.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Object, provider As IFormatProvider) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToChar : obj * IFormatProvider -&gt; char" Usage="System.Convert.ToChar (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-839">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-839">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="278a5-840">An object that supplies culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-840">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-841">Converts the value of the specified object to its equivalent Unicode character, using the specified culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-841">Converts the value of the specified object to its equivalent Unicode character, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-842">A Unicode character that is equivalent to <paramref name="value" />, or <see cref="F:System.Char.MinValue" /> if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-842">A Unicode character that is equivalent to <paramref name="value" />, or <see cref="F:System.Char.MinValue" /> if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-843">Der Rückgabewert ist das Ergebnis eines Aufrufs der <xref:System.IConvertible.ToChar%2A?displayProperty=nameWithType> Methode des zugrunde liegenden Typs von `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-843">The return value is the result of invoking the <xref:System.IConvertible.ToChar%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="278a5-844">`provider` ermöglicht es dem Benutzer an kulturspezifische Konvertierungsinformationen für den Inhalt des `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-844">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="278a5-845">Ignorieren Sie die Basistypen `provider`jedoch der Parameter kann verwendet werden, wenn `value` ist ein benutzerdefinierten Typ, der implementiert die <xref:System.IConvertible> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="278a5-845">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-846">Das folgende Beispiel definiert eine Klasse, die implementiert <xref:System.IConvertible> und eine Klasse, die implementiert <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="278a5-846">The following example defines a class that implements <xref:System.IConvertible> and a class that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="278a5-847">Objekte der Klasse, die implementiert <xref:System.IConvertible> enthalten ein Array von <xref:System.Double> Werte.</span><span class="sxs-lookup"><span data-stu-id="278a5-847">Objects of the class that implements <xref:System.IConvertible> hold an array of <xref:System.Double> values.</span></span> <span data-ttu-id="278a5-848">Ein Objekt einer jeden Klasse übergeben wird, um die `ToChar` Methode.</span><span class="sxs-lookup"><span data-stu-id="278a5-848">An object of each class is passed to the `ToChar` method.</span></span> <span data-ttu-id="278a5-849">Diese Methode gibt ein Zeichen zurück, dessen Unicode Wert ist der Durchschnitt des Arrays mit <xref:System.Double> Werte, mit dem Objekt, das implementiert <xref:System.IFormatProvider> bestimmen, wie den Durchschnitt berechnet.</span><span class="sxs-lookup"><span data-stu-id="278a5-849">This method returns a character whose Unicode value is the average of the array of <xref:System.Double> values, using the object that implements <xref:System.IFormatProvider> to determine how to calculate the average.</span></span>  
  
 [!code-cpp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CPP/objectifp.cpp#1)]
 [!code-csharp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CS/objectifp.cs#1)]
 [!code-vb[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/VB/objectifp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="278a5-850">
            <paramref name="value" /> is a null string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-850">
              <paramref name="value" /> is a null string.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-851">
            <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-851">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="278a5-852">-or-  The conversion of <paramref name="value" /> to a <see cref="T:System.Char" /> is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-852">-or-  The conversion of <paramref name="value" /> to a <see cref="T:System.Char" /> is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-853">
            <paramref name="value" /> is less than <see cref="F:System.Char.MinValue" /> or greater than <see cref="F:System.Char.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-853">
              <paramref name="value" /> is less than <see cref="F:System.Char.MinValue" /> or greater than <see cref="F:System.Char.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As String, provider As IFormatProvider) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToChar : string * IFormatProvider -&gt; char" Usage="System.Convert.ToChar (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-854">A string of length 1 or <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-854">A string of length 1 or <see langword="null" />.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="278a5-855">An object that supplies culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-855">An object that supplies culture-specific formatting information.</span>
          </span>
          <span data-ttu-id="278a5-856">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-856">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-857">Converts the first character of a specified string to a Unicode character, using specified culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-857">Converts the first character of a specified string to a Unicode character, using specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-858">A Unicode character that is equivalent to the first and only character in <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-858">A Unicode character that is equivalent to the first and only character in <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-859">`value` muss eine Zeichenfolge, die ein einzelnes Zeichen enthält.</span><span class="sxs-lookup"><span data-stu-id="278a5-859">`value` must be a string that contains a single character.</span></span>  
  
 <span data-ttu-id="278a5-860">Falls gewünscht, nicht um eine Ausnahme zu behandeln, wenn die Konvertierung fehlschlägt, können Sie rufen die <xref:System.Char.TryParse%2A?displayProperty=nameWithType> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="278a5-860">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Char.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="278a5-861">Es gibt eine <xref:System.Boolean> Wert, der angibt, ob die Konvertierung erfolgreich war oder nicht.</span><span class="sxs-lookup"><span data-stu-id="278a5-861">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-862">Das folgende Beispiel konvertiert die Zeichenfolgendarstellung des eine <xref:System.Char> Wert mit der `ToChar` -Methode, mit einer <xref:System.IFormatProvider> -Objekt, das den Typ der Formatanbieter zeigt an, für den sie aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="278a5-862">The following example converts a string representation of a <xref:System.Char> value with the `ToChar` method, using an <xref:System.IFormatProvider> object that displays the type of the format provider for which it is called.</span></span> <span data-ttu-id="278a5-863">Das Beispiel zeigt, dass der Formatanbieter nicht verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="278a5-863">The example shows that the format provider is not referenced.</span></span>  
  
 [!code-cpp[System.Convert.ToNonNum_String#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToNonNum_String/CPP/stringnonnum.cpp#2)]
 [!code-csharp[System.Convert.ToNonNum_String#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToNonNum_String/CS/stringnonnum.cs#2)]
 [!code-vb[System.Convert.ToNonNum_String#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToNonNum_String/VB/stringnonnum.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="278a5-864">
            <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-864">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-865">The length of <paramref name="value" /> is not 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-865">The length of <paramref name="value" /> is not 1.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToDateTime">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="278a5-866">Converts a specified value to a <see cref="T:System.DateTime" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-866">Converts a specified value to a <see cref="T:System.DateTime" /> value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Boolean) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(bool value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : bool -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-867">The Boolean value to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-867">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-868">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-868">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-869">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-869">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="278a5-870">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-870">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-871">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-871">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Byte) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : byte -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-872">The 8-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-872">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-873">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-873">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-874">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-874">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="278a5-875">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-875">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-876">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-876">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Char) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(char value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : char -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-877">The Unicode character to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-877">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-878">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-878">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-879">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-879">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="278a5-880">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-880">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-881">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-881">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As DateTime) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : DateTime -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-882">A date and time value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-882">A date and time value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-883">Returns the specified <see cref="T:System.DateTime" /> object; no actual conversion is performed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-883">Returns the specified <see cref="T:System.DateTime" /> object; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-884">
            <paramref name="value" /> is returned unchanged.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-884">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Decimal) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : decimal -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-885">The number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-885">The number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-886">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-886">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-887">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-887">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="278a5-888">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-888">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-889">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-889">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Double) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(double value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : double -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-890">The double-precision floating-point value to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-890">The double-precision floating-point value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-891">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-891">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-892">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-892">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="278a5-893">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-893">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-894">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-894">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Short) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(short value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : int16 -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-895">The 16-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-895">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-896">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-896">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-897">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-897">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="278a5-898">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-898">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-899">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-899">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Int16" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(int value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : int -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-900">The 32-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-900">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-901">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-901">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-902">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-902">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="278a5-903">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-903">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-904">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-904">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Long) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(long value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : int64 -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-905">The 64-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-905">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-906">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-906">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-907">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-907">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="278a5-908">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-908">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-909">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-909">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Object) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : obj -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-910">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-910">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-911">Converts the value of the specified object to a <see cref="T:System.DateTime" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-911">Converts the value of the specified object to a <see cref="T:System.DateTime" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-912">The date and time equivalent of the value of <paramref name="value" />, or a date and time equivalent of <see cref="F:System.DateTime.MinValue" /> if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-912">The date and time equivalent of the value of <paramref name="value" />, or a date and time equivalent of <see cref="F:System.DateTime.MinValue" /> if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-913">Für die Konvertierung erfolgreich ist, handelt es sich bei den Laufzeittyp der `value` Parameter muss entweder eine <xref:System.DateTime> oder ein <xref:System.String>, oder `value` muss `null`.</span><span class="sxs-lookup"><span data-stu-id="278a5-913">For the conversion to succeed, the runtime type of the `value` parameter must be either a <xref:System.DateTime> or a <xref:System.String>, or `value` must be `null`.</span></span> <span data-ttu-id="278a5-914">Andernfalls löst die Methode eine <xref:System.InvalidCastException>.</span><span class="sxs-lookup"><span data-stu-id="278a5-914">Otherwise, the method throws an <xref:System.InvalidCastException>.</span></span> <span data-ttu-id="278a5-915">Darüber hinaus, wenn `value` ist eine Zeichenfolge, es muss eine gültige Darstellung eines Werts für Datum und Uhrzeit in der aktuellen Kultur enthalten oder eine <xref:System.FormatException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="278a5-915">In addition, if `value` is a string, it must contain a valid representation of a date and time value in the current culture or a <xref:System.FormatException> is thrown.</span></span>  
  
 <span data-ttu-id="278a5-916">Der Rückgabewert ist das Ergebnis eines Aufrufs der <xref:System.IConvertible.ToDateTime%2A?displayProperty=nameWithType> Methode des zugrunde liegenden Typs von `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-916">The return value is the result of invoking the <xref:System.IConvertible.ToDateTime%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-917">Im folgenden Beispiel wird die <xref:System.Convert.ToDateTime%28System.Object%29> Methode mit einer Vielzahl von <xref:System.Object> Variablen.</span><span class="sxs-lookup"><span data-stu-id="278a5-917">The following example calls the <xref:System.Convert.ToDateTime%28System.Object%29> method with a variety of <xref:System.Object> variables.</span></span>  
  
 [!code-csharp[System.Convert.ToDateTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToDateTime/cs/ToDateTime1.cs#1)]
 [!code-vb[System.Convert.ToDateTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToDateTime/vb/ToDateTime1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-918">
            <paramref name="value" /> is not a valid date and time value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-918">
              <paramref name="value" /> is not a valid date and time value.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-919">
            <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-919">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="278a5-920">-or-  The conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-920">-or-  The conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As SByte) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : sbyte -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-921">The 8-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-921">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-922">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-922">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-923">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-923">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="278a5-924">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-924">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-925">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-925">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Single) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(float value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : single -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-926">The single-precision floating-point value to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-926">The single-precision floating-point value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-927">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-927">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-928">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-928">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="278a5-929">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-929">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-930">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-930">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : string -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-931">The string representation of a date and time.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-931">The string representation of a date and time.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-932">Converts the specified string representation of a date and time to an equivalent date and time value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-932">Converts the specified string representation of a date and time to an equivalent date and time value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-933">The date and time equivalent of the value of <paramref name="value" />, or the date and time equivalent of <see cref="F:System.DateTime.MinValue" /> if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-933">The date and time equivalent of the value of <paramref name="value" />, or the date and time equivalent of <see cref="F:System.DateTime.MinValue" /> if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-934">Wenn `value` nicht `null`, der Rückgabewert ist das Ergebnis eines Aufrufs der <xref:System.DateTime.Parse%2A?displayProperty=nameWithType> Methode auf `value` unter Verwendung der Formatierungsinformationen in eine <xref:System.Globalization.DateTimeFormatInfo> -Objekt, das für die aktuelle Kultur initialisiert wird.</span><span class="sxs-lookup"><span data-stu-id="278a5-934">If `value` is not `null`, the return value is the result of invoking the <xref:System.DateTime.Parse%2A?displayProperty=nameWithType> method on `value` using the formatting information in a <xref:System.Globalization.DateTimeFormatInfo> object that is initialized for the current culture.</span></span> <span data-ttu-id="278a5-935">Die `value` Argument darf die Darstellung eines Datums und die Zeit in einem der Formate beschrieben, der <xref:System.Globalization.DateTimeFormatInfo> Thema.</span><span class="sxs-lookup"><span data-stu-id="278a5-935">The `value` argument must contain the representation of a date and time in one of the formats described in the <xref:System.Globalization.DateTimeFormatInfo> topic.</span></span> <span data-ttu-id="278a5-936">Wenn `value` gleich `null` ist, gibt die Methode <xref:System.DateTime.MinValue?displayProperty=nameWithType> zurück.</span><span class="sxs-lookup"><span data-stu-id="278a5-936">If `value` is `null`, the method returns <xref:System.DateTime.MinValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="278a5-937">Diese Methode versucht, zu analysieren `value` vollständig, und vermeiden Sie Auslösen einer <xref:System.FormatException>.</span><span class="sxs-lookup"><span data-stu-id="278a5-937">This method tries to parse `value` completely and avoid throwing a <xref:System.FormatException>.</span></span> <span data-ttu-id="278a5-938">Es schließt fehlende Monat, Tag und Jahr Informationen mit dem aktuellen Datum.</span><span class="sxs-lookup"><span data-stu-id="278a5-938">It completes missing month, day, and year information with the current date.</span></span> <span data-ttu-id="278a5-939">Wenn `value` enthält nur ein Datum und keine Zeit, diese Methode setzt voraus, eine Zeit von Mitternacht.</span><span class="sxs-lookup"><span data-stu-id="278a5-939">If `value` contains only a date and no time, this method assumes a time of midnight.</span></span> <span data-ttu-id="278a5-940">Alle führenden, inneren oder nachfolgende Leerzeichen in `value` werden ignoriert.</span><span class="sxs-lookup"><span data-stu-id="278a5-940">Any leading, inner, or trailing white-space characters in `value` are ignored.</span></span>  
  
 <span data-ttu-id="278a5-941">Falls gewünscht, nicht um eine Ausnahme zu behandeln, wenn die Konvertierung fehlschlägt, können Sie rufen die <xref:System.DateTime.TryParse%2A?displayProperty=nameWithType> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="278a5-941">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.DateTime.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="278a5-942">Es gibt eine <xref:System.Boolean> Wert, der angibt, ob die Konvertierung erfolgreich war oder nicht.</span><span class="sxs-lookup"><span data-stu-id="278a5-942">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-943">Im folgenden Beispiel wird die <xref:System.Convert.ToDateTime%2A> Methode, um verschiedene zeichenfolgenentsprechungen von Datums- und Zeitangaben zu konvertieren <xref:System.DateTime> Werte.</span><span class="sxs-lookup"><span data-stu-id="278a5-943">The following example uses the <xref:System.Convert.ToDateTime%2A> method to convert various string representations of dates and times to <xref:System.DateTime> values.</span></span>  
  
 [!code-csharp[System.Convert.ToDateTime#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToDateTime/cs/ToDateTime2.cs#2)]
 [!code-vb[System.Convert.ToDateTime#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToDateTime/vb/ToDateTime2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-944">
            <paramref name="value" /> is not a properly formatted date and time string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-944">
              <paramref name="value" /> is not a properly formatted date and time string.</span>
          </span>
        </exception>
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As UShort) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : uint16 -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-945">The 16-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-945">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-946">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-946">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-947">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-947">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="278a5-948">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-948">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-949">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-949">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.UInt16" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As UInteger) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : uint32 -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-950">The 32-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-950">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-951">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-951">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-952">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-952">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="278a5-953">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-953">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-954">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-954">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.UInt32" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As ULong) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : uint64 -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-955">The 64-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-955">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-956">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-956">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-957">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-957">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="278a5-958">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-958">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-959">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-959">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.UInt64" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Object, provider As IFormatProvider) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : obj * IFormatProvider -&gt; DateTime" Usage="System.Convert.ToDateTime (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-960">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-960">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="278a5-961">An object that supplies culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-961">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-962">Converts the value of the specified object to a <see cref="T:System.DateTime" /> object, using the specified culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-962">Converts the value of the specified object to a <see cref="T:System.DateTime" /> object, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-963">The date and time equivalent of the value of <paramref name="value" />, or the date and time equivalent of <see cref="F:System.DateTime.MinValue" /> if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-963">The date and time equivalent of the value of <paramref name="value" />, or the date and time equivalent of <see cref="F:System.DateTime.MinValue" /> if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-964">Der Rückgabewert ist das Ergebnis eines Aufrufs der <xref:System.IConvertible.ToDateTime%2A?displayProperty=nameWithType> Methode des zugrunde liegenden Typs von `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-964">The return value is the result of invoking the <xref:System.IConvertible.ToDateTime%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="278a5-965">`provider` ermöglicht es dem Benutzer an kulturspezifische Konvertierungsinformationen für den Inhalt des `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-965">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="278a5-966">Z. B. wenn `value` ist ein <xref:System.String> , die ein Datum darstellt `provider` kulturspezifische Informationen über die Notation zur Darstellung dieses Datums bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="278a5-966">For example, if `value` is a <xref:System.String> that represents a date, `provider` could supply culture-specific information about the notation used to represent that date.</span></span> <span data-ttu-id="278a5-967">`provider` Stellt die Konvertierung von `value` , wenn der Laufzeittyp von `value` ist ein <xref:System.String>, oder wenn `value` ist ein benutzerdefinierter Typ ist, dessen <xref:System.IConvertible.ToDateTime%2A?displayProperty=nameWithType> Implementierung nutzt `provider`.</span><span class="sxs-lookup"><span data-stu-id="278a5-967">`provider` is involved in the conversion of `value` if the runtime type of `value` is a <xref:System.String>, or if `value` is a user-defined type whose <xref:System.IConvertible.ToDateTime%2A?displayProperty=nameWithType> implementation makes use of `provider`.</span></span> <span data-ttu-id="278a5-968">Wenn der Laufzeittyp von `value` ist <xref:System.String> und `provider` ist `null`die <xref:System.Globalization.CultureInfo> Objekt, das die aktuelle Threadkultur darstellt, wird verwendet.</span><span class="sxs-lookup"><span data-stu-id="278a5-968">If the runtime type of `value` is <xref:System.String> and `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that represents the current thread culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-969">Das folgende Beispiel definiert einen benutzerdefinierten Formatanbieter `CustomProvider`, deren <xref:System.IFormatProvider.GetFormat%2A> Methode gibt eine Meldung an die Konsole, die er aufgerufen wurde, und gibt anschließend die <xref:System.Globalization.DateTimeFormatInfo> -Objekt der Kultur, deren Name als Parameter, in die zugehörige Klasse übergeben wurde, der Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="278a5-969">The following example defines a custom format provider, `CustomProvider`, whose <xref:System.IFormatProvider.GetFormat%2A> method outputs a message to the console that it has been invoked, and then returns the <xref:System.Globalization.DateTimeFormatInfo> object of the culture whose name was passed as a parameter to its class constructor.</span></span> <span data-ttu-id="278a5-970">Jede dieser `CustomProvider` Objekte wird verwendet, um die Elemente in einem Objektarray in Datums-und Uhrzeitwerte zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-970">Each of these `CustomProvider` objects is used to convert the elements in an object array to date and time values.</span></span> <span data-ttu-id="278a5-971">Die Ausgabe zeigt an, dass die `CustomProvider` Objekt wird bei der Konvertierung verwendet nur, wenn der Typ des der `value` Parameter ist ein <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="278a5-971">The output indicates that the `CustomProvider` object is used in the conversion only when the type of the `value` parameter is a <xref:System.String>.</span></span>  
  
 [!code-csharp[System.Convert.ToDateTime#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToDateTime/cs/todatetime4.cs#4)]
 [!code-vb[System.Convert.ToDateTime#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToDateTime/vb/todatetime4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-972">
            <paramref name="value" /> is not a valid date and time value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-972">
              <paramref name="value" /> is not a valid date and time value.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-973">
            <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-973">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="278a5-974">-or-  The conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-974">-or-  The conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As String, provider As IFormatProvider) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : string * IFormatProvider -&gt; DateTime" Usage="System.Convert.ToDateTime (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-975">A string that contains a date and time to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-975">A string that contains a date and time to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="278a5-976">An object that supplies culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-976">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-977">Converts the specified string representation of a number to an equivalent date and time, using the specified culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-977">Converts the specified string representation of a number to an equivalent date and time, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-978">The date and time equivalent of the value of <paramref name="value" />, or the date and time equivalent of <see cref="F:System.DateTime.MinValue" /> if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-978">The date and time equivalent of the value of <paramref name="value" />, or the date and time equivalent of <see cref="F:System.DateTime.MinValue" /> if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-979">Der Rückgabewert ist das Ergebnis eines Aufrufs der <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> Methode `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-979">The return value is the result of invoking the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method on `value`.</span></span>  
  
 <span data-ttu-id="278a5-980">`provider` ist ein <xref:System.IFormatProvider> -Instanz, die erhält eine <xref:System.Globalization.DateTimeFormatInfo> Objekt.</span><span class="sxs-lookup"><span data-stu-id="278a5-980">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.DateTimeFormatInfo> object.</span></span> <span data-ttu-id="278a5-981">Die <xref:System.Globalization.DateTimeFormatInfo> Objekt stellt kulturspezifische Informationen zum Format von `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-981">The <xref:System.Globalization.DateTimeFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="278a5-982">Wenn `provider` ist `null`die <xref:System.Globalization.DateTimeFormatInfo> für die aktuelle Kultur verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="278a5-982">If `provider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="278a5-983">Falls gewünscht, nicht um eine Ausnahme zu behandeln, wenn die Konvertierung fehlschlägt, können Sie rufen die <xref:System.DateTime.TryParse%2A?displayProperty=nameWithType> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="278a5-983">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.DateTime.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="278a5-984">Es gibt eine <xref:System.Boolean> Wert, der angibt, ob die Konvertierung erfolgreich war oder nicht.</span><span class="sxs-lookup"><span data-stu-id="278a5-984">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-985">Das folgende Beispiel konvertiert die zeichenfolgendarstellungen von Datumswerten mit der `ToDateTime` -Methode, mit einer <xref:System.IFormatProvider> Objekt.</span><span class="sxs-lookup"><span data-stu-id="278a5-985">The following example converts string representations of date values with the `ToDateTime` method, using an <xref:System.IFormatProvider> object.</span></span>  
  
 [!code-csharp[System.Convert.ToDateTime#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToDateTime/cs/ToDateTime3.cs#3)]
 [!code-vb[System.Convert.ToDateTime#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToDateTime/vb/ToDateTime3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-986">
            <paramref name="value" /> is not a properly formatted date and time string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-986">
              <paramref name="value" /> is not a properly formatted date and time string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToDecimal">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="278a5-987">Converts a specified value to a decimal number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-987">Converts a specified value to a decimal number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Boolean) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(bool value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : bool -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-988">The Boolean value to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-988">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-989">Converts the specified Boolean value to the equivalent decimal number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-989">Converts the specified Boolean value to the equivalent decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-990">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-990">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-991">Das folgende Beispiel veranschaulicht die Konvertierung von <xref:System.Boolean> zu <xref:System.Decimal> Werte.</span><span class="sxs-lookup"><span data-stu-id="278a5-991">The following example illustrates the conversion of <xref:System.Boolean> to <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#1)]
 [!code-vb[System.Convert.ToDecimal2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Byte) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : byte -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-992">The 8-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-992">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-993">Converts the value of the specified 8-bit unsigned integer to the equivalent decimal number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-993">Converts the value of the specified 8-bit unsigned integer to the equivalent decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-994">The decimal number that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-994">The decimal number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-995">Im folgenden Beispiel wird eine <xref:System.Byte> -Wert in einen <xref:System.Decimal> Wert.</span><span class="sxs-lookup"><span data-stu-id="278a5-995">The following example converts a <xref:System.Byte> value to a <xref:System.Decimal> value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#18](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#18)]
 [!code-csharp[System.Convert Snippets#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#18)]
 [!code-vb[System.Convert Snippets#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#18)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Char) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(char value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : char -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-996">The Unicode character to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-996">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-997">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-997">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-998">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-998">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="278a5-999">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-999">No value is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1000">Im folgenden Beispiel wird versucht, Konvertieren einer <xref:System.Char> Wert <xref:System.Decimal>, und löst <xref:System.InvalidCastException> bei einem Fehler.</span><span class="sxs-lookup"><span data-stu-id="278a5-1000">The following example attempts to convert a <xref:System.Char> value to <xref:System.Decimal>, and throws <xref:System.InvalidCastException> upon failure.</span></span>  
  
 [!code-cpp[System.Convert Snippets#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#17)]
 [!code-csharp[System.Convert Snippets#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#17)]
 [!code-vb[System.Convert Snippets#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-1001">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1001">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As DateTime) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : DateTime -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1002">The date and time value to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1002">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1003">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1003">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1004">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1004">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="278a5-1005">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1005">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-1006">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1006">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : decimal -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1007">A decimal number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1007">A decimal number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1008">Returns the specified decimal number; no actual conversion is performed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1008">Returns the specified decimal number; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1009">
            <paramref name="value" /> is returned unchanged.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1009">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Double) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(double value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : double -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1010">The double-precision floating-point number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1010">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1011">Converts the value of the specified double-precision floating-point number to an equivalent decimal number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1011">Converts the value of the specified double-precision floating-point number to an equivalent decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1012">A decimal number that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1012">A decimal number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1013">Die <xref:System.Decimal> von dieser Methode zurückgegebene Wert enthält maximal 15 signifikante Ziffern.</span><span class="sxs-lookup"><span data-stu-id="278a5-1013">The <xref:System.Decimal> value returned by this method contains a maximum of 15 significant digits.</span></span> <span data-ttu-id="278a5-1014">Wenn die `value` -Parameter enthält mehr als 15 signifikante Ziffern, wird auf den nächsten Wert.</span><span class="sxs-lookup"><span data-stu-id="278a5-1014">If the `value` parameter contains more than 15 significant digits, it is rounded using rounding to nearest.</span></span> <span data-ttu-id="278a5-1015">Im folgende Beispiel wird veranschaulicht, wie die <xref:System.Convert.ToDecimal%28System.Double%29?displayProperty=nameWithType> Methode verwendet Rundung auf den nächsten Rückgabe einer <xref:System.Decimal> Wert mit 15 signifikante Ziffern.</span><span class="sxs-lookup"><span data-stu-id="278a5-1015">The following example illustrates how the <xref:System.Convert.ToDecimal%28System.Double%29?displayProperty=nameWithType> method uses rounding to nearest to return a <xref:System.Decimal> value with 15 significant digits.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToDecimal/cs/ToDecimal1.cs#2)]
 [!code-vb[System.Convert.ToDecimal#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToDecimal/vb/ToDecimal1.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1016">Im folgenden Beispiel wird eine <xref:System.Double> -Wert in einen <xref:System.Decimal> Wert.</span><span class="sxs-lookup"><span data-stu-id="278a5-1016">The following example converts a <xref:System.Double> value to a <xref:System.Decimal> value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#5)]
 [!code-csharp[System.Convert Snippets#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#5)]
 [!code-vb[System.Convert Snippets#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1017">
            <paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1017">
              <paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Short) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(short value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : int16 -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1018">The 16-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1018">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1019">Converts the value of the specified 16-bit signed integer to an equivalent decimal number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1019">Converts the value of the specified 16-bit signed integer to an equivalent decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1020">A decimal number that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1020">A decimal number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1021">Im folgenden Beispiel wird ein Array von 16-Bit, die zu Ganzzahlen mit Vorzeichen konvertiert <xref:System.Decimal> Werte.</span><span class="sxs-lookup"><span data-stu-id="278a5-1021">The following example converts an array of 16-bit signed integers to <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#2)]
 [!code-vb[System.Convert.ToDecimal2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(int value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : int -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1022">The 32-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1022">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1023">Converts the value of the specified 32-bit signed integer to an equivalent decimal number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1023">Converts the value of the specified 32-bit signed integer to an equivalent decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1024">A decimal number that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1024">A decimal number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1025">Das folgende Beispiel konvertiert ein Array von Ganzzahlen mit Vorzeichen um <xref:System.Decimal> Werte.</span><span class="sxs-lookup"><span data-stu-id="278a5-1025">The following example converts an array of signed integers to <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#3)]
 [!code-vb[System.Convert.ToDecimal2#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Long) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(long value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : int64 -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1026">The 64-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1026">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1027">Converts the value of the specified 64-bit signed integer to an equivalent decimal number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1027">Converts the value of the specified 64-bit signed integer to an equivalent decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1028">A decimal number that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1028">A decimal number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1029">Im folgenden Beispiel wird ein <xref:System.Int64> -Wert in einen <xref:System.Decimal> Wert.</span><span class="sxs-lookup"><span data-stu-id="278a5-1029">The following example converts an <xref:System.Int64> value to a <xref:System.Decimal> value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#10)]
 [!code-csharp[System.Convert Snippets#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#10)]
 [!code-vb[System.Convert Snippets#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Object) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : obj -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1030">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1030">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1031">Converts the value of the specified object to an equivalent decimal number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1031">Converts the value of the specified object to an equivalent decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1032">A decimal number that is equivalent to <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1032">A decimal number that is equivalent to <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1033">Der Rückgabewert ist das Ergebnis eines Aufrufs der <xref:System.IConvertible.ToDecimal%2A?displayProperty=nameWithType> Methode des zugrunde liegenden Typs von `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-1033">The return value is the result of invoking the <xref:System.IConvertible.ToDecimal%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1034">Im folgenden Beispiel wird versucht, um jedes Element in einem Objektarray zum Konvertieren einer <xref:System.Decimal> Wert.</span><span class="sxs-lookup"><span data-stu-id="278a5-1034">The following example tries to convert each element in an object array to a <xref:System.Decimal> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#4)]
 [!code-vb[System.Convert.ToDecimal2#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-1035">
            <paramref name="value" /> is not in an appropriate format for a <see cref="T:System.Decimal" /> type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1035">
              <paramref name="value" /> is not in an appropriate format for a <see cref="T:System.Decimal" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-1036">
            <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1036">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="278a5-1037">-or-  The conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1037">-or-  The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1038">
            <paramref name="value" /> represents a number that is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1038">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As SByte) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : sbyte -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1039">The 8-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1039">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1040">Converts the value of the specified 8-bit signed integer to the equivalent decimal number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1040">Converts the value of the specified 8-bit signed integer to the equivalent decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1041">A decimal number that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1041">A decimal number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1042">Das folgende Beispiel konvertiert jedes Element in einem Array von Bytes mit Vorzeichen in eine <xref:System.Decimal> Wert.</span><span class="sxs-lookup"><span data-stu-id="278a5-1042">The following example converts each element in an array of signed bytes to a <xref:System.Decimal> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#5)]
 [!code-vb[System.Convert.ToDecimal2#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Single) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(float value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : single -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1043">The single-precision floating-point number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1043">The single-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1044">Converts the value of the specified single-precision floating-point number to the equivalent decimal number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1044">Converts the value of the specified single-precision floating-point number to the equivalent decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1045">A decimal number that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1045">A decimal number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1046">Die <xref:System.Decimal> von dieser Methode zurückgegebene Wert enthält maximal sieben signifikantesten Ziffern.</span><span class="sxs-lookup"><span data-stu-id="278a5-1046">The <xref:System.Decimal> value returned by this method contains a maximum of seven significant digits.</span></span> <span data-ttu-id="278a5-1047">Wenn die `value` -Parameter enthält mehr als sieben signifikante Ziffern, wird auf den nächsten Wert.</span><span class="sxs-lookup"><span data-stu-id="278a5-1047">If the `value` parameter contains more than seven significant digits, it is rounded using rounding to nearest.</span></span> <span data-ttu-id="278a5-1048">Im folgende Beispiel wird veranschaulicht, wie die <xref:System.Convert.ToDecimal%28System.Single%29> Methode verwendet Rundung auf den nächsten Rückgabe einer <xref:System.Decimal> Wert mit sieben signifikantesten Ziffern.</span><span class="sxs-lookup"><span data-stu-id="278a5-1048">The following example illustrates how the <xref:System.Convert.ToDecimal%28System.Single%29> method uses rounding to nearest to return a <xref:System.Decimal> value with seven significant digits.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToDecimal/cs/ToDecimal1.cs#1)]
 [!code-vb[System.Convert.ToDecimal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToDecimal/vb/ToDecimal1.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1049">Im folgenden Beispiel wird versucht, jedes Element in einem Array zu konvertieren <xref:System.Single> -Werte an ein <xref:System.Decimal> Wert.</span><span class="sxs-lookup"><span data-stu-id="278a5-1049">The following example tries to convert each element in an array of <xref:System.Single> values to a <xref:System.Decimal> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#6)]
 [!code-vb[System.Convert.ToDecimal2#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1050">
            <paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1050">
              <paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As String) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : string -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1051">A string that contains a number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1051">A string that contains a number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1052">Converts the specified string representation of a number to an equivalent decimal number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1052">Converts the specified string representation of a number to an equivalent decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1053">A decimal number that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1053">A decimal number that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1054">Mithilfe der <xref:System.Convert.ToDecimal%28System.String%29> Methode entspricht dem übergeben `value` auf die <xref:System.Decimal.Parse%28System.String%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="278a5-1054">Using the <xref:System.Convert.ToDecimal%28System.String%29> method is equivalent to passing `value` to the <xref:System.Decimal.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="278a5-1055">`value` wird mithilfe der Formatierungskonventionen der aktuellen Threadkultur interpretiert.</span><span class="sxs-lookup"><span data-stu-id="278a5-1055">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="278a5-1056">Falls gewünscht, nicht um eine Ausnahme zu behandeln, wenn die Konvertierung fehlschlägt, können Sie rufen die <xref:System.Decimal.TryParse%2A?displayProperty=nameWithType> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="278a5-1056">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Decimal.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="278a5-1057">Es gibt eine <xref:System.Boolean> Wert, der angibt, ob die Konvertierung erfolgreich war oder nicht.</span><span class="sxs-lookup"><span data-stu-id="278a5-1057">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1058">Das folgende Beispiel veranschaulicht die Verwendung von `ToDecimal`.</span><span class="sxs-lookup"><span data-stu-id="278a5-1058">The following example illustrates the use of `ToDecimal`.</span></span> <span data-ttu-id="278a5-1059">Es versucht, Konvertieren einer <xref:System.String> auf eine <xref:System.Decimal>, und löst die möglichen Ausnahmen, die bei der Konvertierung auftreten können.</span><span class="sxs-lookup"><span data-stu-id="278a5-1059">It attempts to convert a <xref:System.String> to a <xref:System.Decimal>, and throws the possible exceptions that may arise during the conversion.</span></span>  
  
 [!code-cpp[System.Convert Snippets#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#15)]
 [!code-csharp[System.Convert Snippets#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#15)]
 [!code-vb[System.Convert Snippets#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-1060">
            <paramref name="value" /> is not a number in a valid format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1060">
              <paramref name="value" /> is not a number in a valid format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1061">
            <paramref name="value" /> represents a number that is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1061">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As UShort) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : uint16 -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1062">The 16-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1062">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1063">Converts the value of the specified 16-bit unsigned integer to an equivalent decimal number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1063">Converts the value of the specified 16-bit unsigned integer to an equivalent decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1064">The decimal number that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1064">The decimal number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1065">Im folgenden Beispiel wird ein Array von 16-Bit, die zu Ganzzahlen ohne Vorzeichen konvertiert <xref:System.Decimal> Werte.</span><span class="sxs-lookup"><span data-stu-id="278a5-1065">The following example converts an array of 16-bit unsigned integers to <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#7)]
 [!code-vb[System.Convert.ToDecimal2#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As UInteger) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : uint32 -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1066">The 32-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1066">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1067">Converts the value of the specified 32-bit unsigned integer to an equivalent decimal number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1067">Converts the value of the specified 32-bit unsigned integer to an equivalent decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1068">A decimal number that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1068">A decimal number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1069">Das folgende Beispiel konvertiert ein Array von Ganzzahlen ohne Vorzeichen in <xref:System.Decimal> Werte.</span><span class="sxs-lookup"><span data-stu-id="278a5-1069">The following example converts an array of unsigned integers to <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#8)]
 [!code-vb[System.Convert.ToDecimal2#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As ULong) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : uint64 -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1070">The 64-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1070">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1071">Converts the value of the specified 64-bit unsigned integer to an equivalent decimal number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1071">Converts the value of the specified 64-bit unsigned integer to an equivalent decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1072">A decimal number that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1072">A decimal number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1073">Im folgenden Beispiel wird ein Array von zu lange Ganzzahlen ohne Vorzeichen konvertiert <xref:System.Decimal> Werte.</span><span class="sxs-lookup"><span data-stu-id="278a5-1073">The following example converts an array of unsigned long integers to <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#9)]
 [!code-vb[System.Convert.ToDecimal2#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Object, provider As IFormatProvider) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : obj * IFormatProvider -&gt; decimal" Usage="System.Convert.ToDecimal (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1074">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1074">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="278a5-1075">An object that supplies culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1075">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1076">Converts the value of the specified object to an equivalent decimal number, using the specified culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1076">Converts the value of the specified object to an equivalent decimal number, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1077">A decimal number that is equivalent to <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1077">A decimal number that is equivalent to <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1078">Der Rückgabewert ist das Ergebnis eines Aufrufs der <xref:System.IConvertible.ToDecimal%2A?displayProperty=nameWithType> Methode des zugrunde liegenden Typs von `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-1078">The return value is the result of invoking the <xref:System.IConvertible.ToDecimal%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="278a5-1079">`provider` ermöglicht es dem Benutzer an kulturspezifische Konvertierungsinformationen für den Inhalt des `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-1079">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="278a5-1080">Ignorieren Sie die Basistypen `provider`jedoch der Parameter kann verwendet werden, wenn `value` ist ein benutzerdefinierten Typ, der implementiert die <xref:System.IConvertible> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="278a5-1080">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1081">Im folgenden Beispiel wird eine `Temperature`-Klasse definiert, die die <xref:System.IConvertible>-Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="278a5-1081">The following example defines a `Temperature` class that implements the <xref:System.IConvertible> interface.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal2.cs#10)]
 [!code-vb[System.Convert.ToDecimal2#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal2.vb#10)]  
  
 <span data-ttu-id="278a5-1082">Im folgenden Beispiel wird gezeigt, die beim eine `Temperature` Objekt als Parameter übergeben der <xref:System.Convert.ToDecimal%28System.Object%2CSystem.IFormatProvider%29> -Methode, die <xref:System.IConvertible.ToDecimal%2A?displayProperty=nameWithType> Implementierung von der `Temperature` Klasse aufgerufen, um die Konvertierung auszuführen.</span><span class="sxs-lookup"><span data-stu-id="278a5-1082">The following example shows that when a `Temperature` object is passed as a parameter to the <xref:System.Convert.ToDecimal%28System.Object%2CSystem.IFormatProvider%29> method, the <xref:System.IConvertible.ToDecimal%2A?displayProperty=nameWithType> implementation of the `Temperature` class is called to perform the conversion.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal2.cs#11)]
 [!code-vb[System.Convert.ToDecimal2#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal2.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-1083">
            <paramref name="value" /> is not in an appropriate format for a <see cref="T:System.Decimal" /> type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1083">
              <paramref name="value" /> is not in an appropriate format for a <see cref="T:System.Decimal" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-1084">
            <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1084">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="278a5-1085">-or-  The conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1085">-or-  The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1086">
            <paramref name="value" /> represents a number that is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1086">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As String, provider As IFormatProvider) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : string * IFormatProvider -&gt; decimal" Usage="System.Convert.ToDecimal (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1087">A string that contains a number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1087">A string that contains a number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="278a5-1088">An object that supplies culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1088">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1089">Converts the specified string representation of a number to an equivalent decimal number, using the specified culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1089">Converts the specified string representation of a number to an equivalent decimal number, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1090">A decimal number that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1090">A decimal number that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1091">Der Rückgabewert ist das Ergebnis eines Aufrufs der <xref:System.Decimal.Parse%2A?displayProperty=nameWithType> Methode `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-1091">The return value is the result of invoking the <xref:System.Decimal.Parse%2A?displayProperty=nameWithType> method on `value`.</span></span>  
  
 <span data-ttu-id="278a5-1092">`provider` ist ein <xref:System.IFormatProvider> -Instanz, die erhält eine <xref:System.Globalization.NumberFormatInfo> Objekt.</span><span class="sxs-lookup"><span data-stu-id="278a5-1092">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="278a5-1093">Die <xref:System.Globalization.NumberFormatInfo> Objekt stellt kulturspezifische Informationen zum Format von `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-1093">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="278a5-1094">Wenn `provider` ist `null`die <xref:System.Globalization.NumberFormatInfo> für die aktuelle Kultur verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="278a5-1094">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="278a5-1095">Falls gewünscht, nicht um eine Ausnahme zu behandeln, wenn die Konvertierung fehlschlägt, können Sie rufen die <xref:System.Decimal.TryParse%2A?displayProperty=nameWithType> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="278a5-1095">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Decimal.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="278a5-1096">Es gibt eine <xref:System.Boolean> Wert, der angibt, ob die Konvertierung erfolgreich war oder nicht.</span><span class="sxs-lookup"><span data-stu-id="278a5-1096">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1097">Im folgenden Beispiel wird versucht, ein Array von Zeichenfolgen zu konvertieren <xref:System.Decimal> Werte mit <xref:System.Globalization.NumberFormatInfo> Objekte, die zwei verschiedene Kulturen darstellen.</span><span class="sxs-lookup"><span data-stu-id="278a5-1097">The following example attempts to convert an array of strings to <xref:System.Decimal> values by using <xref:System.Globalization.NumberFormatInfo> objects that represent two different cultures.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal3.cs#12)]
 [!code-vb[System.Convert.ToDecimal2#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal3.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-1098">
            <paramref name="value" /> is not a number in a valid format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1098">
              <paramref name="value" /> is not a number in a valid format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1099">
            <paramref name="value" /> represents a number that is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1099">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToDouble">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="278a5-1100">Converts a specified value to a double-precision floating-point number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1100">Converts a specified value to a double-precision floating-point number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(bool value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : bool -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1101">The Boolean value to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1101">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1102">Converts the specified Boolean value to the equivalent double-precision floating-point number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1102">Converts the specified Boolean value to the equivalent double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1103">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1103">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1104">Im folgenden Beispiel wird eine <xref:System.Boolean> -Wert in einen <xref:System.Double> Wert.</span><span class="sxs-lookup"><span data-stu-id="278a5-1104">The following example converts a <xref:System.Boolean> value to a <xref:System.Double> value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#1)]
 [!code-csharp[System.Convert Snippets#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#1)]
 [!code-vb[System.Convert Snippets#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Byte) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : byte -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1105">The 8-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1105">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1106">Converts the value of the specified 8-bit unsigned integer to the equivalent double-precision floating-point number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1106">Converts the value of the specified 8-bit unsigned integer to the equivalent double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1107">The double-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1107">The double-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1108">Im folgenden Beispiel wird eine <xref:System.Byte> -Wert in einen <xref:System.Double> Wert.</span><span class="sxs-lookup"><span data-stu-id="278a5-1108">The following example converts a <xref:System.Byte> value to a <xref:System.Double> value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#2)]
 [!code-csharp[System.Convert Snippets#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#2)]
 [!code-vb[System.Convert Snippets#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Char) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(char value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : char -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1109">The Unicode character to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1109">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1110">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1110">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1111">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1111">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="278a5-1112">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1112">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-1113">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1113">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As DateTime) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : DateTime -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1114">The date and time value to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1114">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1115">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1115">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1116">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1116">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="278a5-1117">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1117">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-1118">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1118">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Decimal) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : decimal -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1119">The decimal number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1119">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1120">Converts the value of the specified decimal number to an equivalent double-precision floating-point number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1120">Converts the value of the specified decimal number to an equivalent double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1121">A double-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1121">A double-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1122">Im folgenden Beispiel wird eine <xref:System.Decimal> -Wert in einen <xref:System.Double> Wert.</span><span class="sxs-lookup"><span data-stu-id="278a5-1122">The following example converts a <xref:System.Decimal> value to a <xref:System.Double> value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#5)]
 [!code-csharp[System.Convert Snippets#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#5)]
 [!code-vb[System.Convert Snippets#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(double value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : double -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1123">The double-precision floating-point number to return.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1123">The double-precision floating-point number to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1124">Returns the specified double-precision floating-point number; no actual conversion is performed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1124">Returns the specified double-precision floating-point number; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1125">
            <paramref name="value" /> is returned unchanged.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1125">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Short) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(short value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : int16 -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1126">The 16-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1126">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1127">Converts the value of the specified 16-bit signed integer to an equivalent double-precision floating-point number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1127">Converts the value of the specified 16-bit signed integer to an equivalent double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1128">A double-precision floating-point number equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1128">A double-precision floating-point number equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1129">Im folgenden Beispiel wird jedes Element in einem Array von 16-Bit, die zu Ganzzahlen mit Vorzeichen konvertiert eine <xref:System.Double> Wert.</span><span class="sxs-lookup"><span data-stu-id="278a5-1129">The following example converts each element in an array of 16-bit signed integers to a <xref:System.Double> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDouble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todouble/cs/todouble1.cs#1)]
 [!code-vb[System.Convert.ToDouble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todouble/vb/todouble1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(int value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : int -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1130">The 32-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1130">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1131">Converts the value of the specified 32-bit signed integer to an equivalent double-precision floating-point number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1131">Converts the value of the specified 32-bit signed integer to an equivalent double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1132">A double-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1132">A double-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1133">Im folgenden Beispiel wird ein <xref:System.Int32> -Wert in einen <xref:System.Double> Wert.</span><span class="sxs-lookup"><span data-stu-id="278a5-1133">The following example converts an <xref:System.Int32> value to a <xref:System.Double> value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#3)]
 [!code-csharp[System.Convert Snippets#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#3)]
 [!code-vb[System.Convert Snippets#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Long) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(long value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : int64 -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1134">The 64-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1134">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1135">Converts the value of the specified 64-bit signed integer to an equivalent double-precision floating-point number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1135">Converts the value of the specified 64-bit signed integer to an equivalent double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1136">A double-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1136">A double-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1137">Im folgenden Beispiel wird jedes Element in ein Array von zu lange Ganzzahlen mit Vorzeichen konvertiert eine <xref:System.Double> Wert.</span><span class="sxs-lookup"><span data-stu-id="278a5-1137">The following example converts each element in an array of signed long integers to a <xref:System.Double> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDouble#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todouble/cs/todouble1.cs#2)]
 [!code-vb[System.Convert.ToDouble#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todouble/vb/todouble1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : obj -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1138">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1138">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1139">Converts the value of the specified object to a double-precision floating-point number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1139">Converts the value of the specified object to a double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1140">A double-precision floating-point number that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1140">A double-precision floating-point number that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1141">Wenn `value` nicht `null`, diese Methode dient als Wrapper für einen Aufruf der <xref:System.IConvertible.ToDouble%2A?displayProperty=nameWithType> Implementierung des zugrunde liegenden Typs von `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-1141">If `value` is not `null`, this method wraps a call to the <xref:System.IConvertible.ToDouble%2A?displayProperty=nameWithType> implementation of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1142">Im folgenden Beispiel wird versucht, jeden Wert in einem Objektarray zum Konvertieren einer <xref:System.Double>.</span><span class="sxs-lookup"><span data-stu-id="278a5-1142">The following example attempts to convert each value in an object array to a <xref:System.Double>.</span></span>  
  
 [!code-csharp[System.Convert.ToDouble#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todouble/cs/todouble1.cs#3)]
 [!code-vb[System.Convert.ToDouble#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todouble/vb/todouble1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-1143">
            <paramref name="value" /> is not in an appropriate format for a <see cref="T:System.Double" /> type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1143">
              <paramref name="value" /> is not in an appropriate format for a <see cref="T:System.Double" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-1144">
            <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1144">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="278a5-1145">-or-  The conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1145">-or-  The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1146">
            <paramref name="value" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1146">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As SByte) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : sbyte -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1147">The 8-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1147">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1148">Converts the value of the specified 8-bit signed integer to the equivalent double-precision floating-point number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1148">Converts the value of the specified 8-bit signed integer to the equivalent double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1149">The 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1149">The 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1150">Das folgende Beispiel konvertiert jedes Element in einem Array von <xref:System.SByte> -Werte an ein <xref:System.Double> Wert.</span><span class="sxs-lookup"><span data-stu-id="278a5-1150">The following example converts each element in an array of <xref:System.SByte> values to a <xref:System.Double> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDouble#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todouble/cs/todouble1.cs#4)]
 [!code-vb[System.Convert.ToDouble#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todouble/vb/todouble1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Single) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(float value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : single -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1151">The single-precision floating-point number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1151">The single-precision floating-point number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1152">Converts the value of the specified single-precision floating-point number to an equivalent double-precision floating-point number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1152">Converts the value of the specified single-precision floating-point number to an equivalent double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1153">A double-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1153">A double-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1154">Im folgenden Beispiel wird eine <xref:System.Single> -Wert in einen <xref:System.Double> Wert.</span><span class="sxs-lookup"><span data-stu-id="278a5-1154">The following example converts a <xref:System.Single> value to a <xref:System.Double> value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#6)]
 [!code-csharp[System.Convert Snippets#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#6)]
 [!code-vb[System.Convert Snippets#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : string -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1155">A string that contains the number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1155">A string that contains the number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1156">Converts the specified string representation of a number to an equivalent double-precision floating-point number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1156">Converts the specified string representation of a number to an equivalent double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1157">A double-precision floating-point number that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1157">A double-precision floating-point number that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1158">Mithilfe der <xref:System.Convert.ToDouble%28System.String%29> Methode entspricht dem übergeben `value` auf die <xref:System.Double.Parse%28System.String%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="278a5-1158">Using the <xref:System.Convert.ToDouble%28System.String%29> method is equivalent to passing `value` to the <xref:System.Double.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="278a5-1159">`value` wird mithilfe der Formatierungskonventionen der aktuellen Threadkultur interpretiert.</span><span class="sxs-lookup"><span data-stu-id="278a5-1159">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="278a5-1160">Falls gewünscht, nicht um eine Ausnahme zu behandeln, wenn die Konvertierung fehlschlägt, können Sie rufen die <xref:System.Double.TryParse%2A?displayProperty=nameWithType> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="278a5-1160">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Double.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="278a5-1161">Es gibt eine <xref:System.Boolean> Wert, der angibt, ob die Konvertierung erfolgreich war oder nicht.</span><span class="sxs-lookup"><span data-stu-id="278a5-1161">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1162">Im folgenden Beispiel wird versucht, jedes Element in einem Array von numerischen Zeichenfolgen zu konvertieren einer <xref:System.Double>.</span><span class="sxs-lookup"><span data-stu-id="278a5-1162">The following example attempts to convert each element in an array of numeric strings to a <xref:System.Double>.</span></span> <span data-ttu-id="278a5-1163">Die Ausgabe des Beispiels wird von einem System, dessen aktuelle Kultur "En-US".</span><span class="sxs-lookup"><span data-stu-id="278a5-1163">The example's output is from a system whose current culture is en-US.</span></span>  
  
 [!code-csharp[System.Convert.ToDouble#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todouble/cs/example8.cs#8)]
 [!code-vb[System.Convert.ToDouble#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todouble/vb/example8.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-1164">
            <paramref name="value" /> is not a number in a valid format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1164">
              <paramref name="value" /> is not a number in a valid format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1165">
            <paramref name="value" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1165">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As UShort) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : uint16 -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1166">The 16-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1166">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1167">Converts the value of the specified 16-bit unsigned integer to the equivalent double-precision floating-point number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1167">Converts the value of the specified 16-bit unsigned integer to the equivalent double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1168">A double-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1168">A double-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1169">Das folgende Beispiel konvertiert jedes Element in einem Array von <xref:System.UInt16> -Werte an ein <xref:System.Double> Wert.</span><span class="sxs-lookup"><span data-stu-id="278a5-1169">The following example converts each element in an array of <xref:System.UInt16> values to a <xref:System.Double> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDouble#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todouble/cs/todouble1.cs#5)]
 [!code-vb[System.Convert.ToDouble#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todouble/vb/todouble1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As UInteger) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : uint32 -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1170">The 32-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1170">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1171">Converts the value of the specified 32-bit unsigned integer to an equivalent double-precision floating-point number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1171">Converts the value of the specified 32-bit unsigned integer to an equivalent double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1172">A double-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1172">A double-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1173">Das folgende Beispiel konvertiert jedes Element in einem Array von <xref:System.UInt32> -Werte an ein <xref:System.Double> Wert.</span><span class="sxs-lookup"><span data-stu-id="278a5-1173">The following example converts each element in an array of <xref:System.UInt32> values to a <xref:System.Double> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDouble#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todouble/cs/todouble1.cs#6)]
 [!code-vb[System.Convert.ToDouble#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todouble/vb/todouble1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As ULong) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : uint64 -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1174">The 64-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1174">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1175">Converts the value of the specified 64-bit unsigned integer to an equivalent double-precision floating-point number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1175">Converts the value of the specified 64-bit unsigned integer to an equivalent double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1176">A double-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1176">A double-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1177">Das folgende Beispiel konvertiert jedes Element in einem Array von <xref:System.UInt64> -Werte an ein <xref:System.Double> Wert.</span><span class="sxs-lookup"><span data-stu-id="278a5-1177">The following example converts each element in an array of <xref:System.UInt64> values to a <xref:System.Double> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDouble#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todouble/cs/todouble1.cs#7)]
 [!code-vb[System.Convert.ToDouble#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todouble/vb/todouble1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Object, provider As IFormatProvider) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToDouble : obj * IFormatProvider -&gt; double" Usage="System.Convert.ToDouble (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1178">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1178">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="278a5-1179">An object that supplies culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1179">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1180">Converts the value of the specified object to an double-precision floating-point number, using the specified culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1180">Converts the value of the specified object to an double-precision floating-point number, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1181">A double-precision floating-point number that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1181">A double-precision floating-point number that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1182">Der Rückgabewert ist das Ergebnis eines Aufrufs der <xref:System.IConvertible.ToDouble%2A?displayProperty=nameWithType> Methode des zugrunde liegenden Typs von `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-1182">The return value is the result of invoking the <xref:System.IConvertible.ToDouble%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="278a5-1183">`provider` ermöglicht es dem Benutzer an kulturspezifische Konvertierungsinformationen für den Inhalt des `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-1183">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="278a5-1184">Z. B. wenn `value` ist ein <xref:System.String> , die eine Zahl, `provider` bereitgestellt kulturspezifische Informationen über die Notation verwendet, um diese Zahl darzustellen.</span><span class="sxs-lookup"><span data-stu-id="278a5-1184">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="278a5-1185">Ignorieren Sie die Basistypen `provider`jedoch der Parameter kann verwendet werden, wenn `value` ist ein benutzerdefinierten Typ, der implementiert die <xref:System.IConvertible> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="278a5-1185">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1186">Das folgende Beispiel definiert eine Klasse, die implementiert <xref:System.IConvertible> und eine Klasse, die implementiert <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="278a5-1186">The following example defines a class that implements <xref:System.IConvertible> and a class that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="278a5-1187">Objekte der Klasse, die implementiert <xref:System.IConvertible> enthalten ein Array von <xref:System.Double> Werte.</span><span class="sxs-lookup"><span data-stu-id="278a5-1187">Objects of the class that implements <xref:System.IConvertible> hold an array of <xref:System.Double> values.</span></span> <span data-ttu-id="278a5-1188">Ein Objekt einer jeden Klasse übergeben wird, um die `ToDouble` Methode.</span><span class="sxs-lookup"><span data-stu-id="278a5-1188">An object of each class is passed to the `ToDouble` method.</span></span> <span data-ttu-id="278a5-1189">Diese Methode gibt Durchschnitt des Arrays mit <xref:System.Double> Werte, mit dem Objekt, das implementiert <xref:System.IFormatProvider> bestimmen, wie den Durchschnitt berechnet.</span><span class="sxs-lookup"><span data-stu-id="278a5-1189">This method returns an average of the array of <xref:System.Double> values, using the object that implements <xref:System.IFormatProvider> to determine how to calculate the average.</span></span>  
  
 [!code-cpp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CPP/objectifp.cpp#1)]
 [!code-csharp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CS/objectifp.cs#1)]
 [!code-vb[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/VB/objectifp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-1190">
            <paramref name="value" /> is not in an appropriate format for a <see cref="T:System.Double" /> type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1190">
              <paramref name="value" /> is not in an appropriate format for a <see cref="T:System.Double" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-1191">
            <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1191">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1192">
            <paramref name="value" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1192">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As String, provider As IFormatProvider) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToDouble : string * IFormatProvider -&gt; double" Usage="System.Convert.ToDouble (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1193">A string that contains the number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1193">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="278a5-1194">An object that supplies culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1194">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1195">Converts the specified string representation of a number to an equivalent double-precision floating-point number, using the specified culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1195">Converts the specified string representation of a number to an equivalent double-precision floating-point number, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1196">A double-precision floating-point number that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1196">A double-precision floating-point number that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1197">Der Rückgabewert ist das Ergebnis eines Aufrufs der <xref:System.Double.Parse%2A?displayProperty=nameWithType> Methode `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-1197">The return value is the result of invoking the <xref:System.Double.Parse%2A?displayProperty=nameWithType> method on `value`.</span></span>  
  
 <span data-ttu-id="278a5-1198">`provider` ist ein <xref:System.IFormatProvider> -Instanz, die erhält eine <xref:System.Globalization.NumberFormatInfo> Objekt.</span><span class="sxs-lookup"><span data-stu-id="278a5-1198">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="278a5-1199">Die <xref:System.Globalization.NumberFormatInfo> Objekt stellt kulturspezifische Informationen zum Format von `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-1199">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="278a5-1200">Wenn `provider` ist `null`die <xref:System.Globalization.NumberFormatInfo> für die aktuelle Kultur verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="278a5-1200">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="278a5-1201">Falls gewünscht, nicht um eine Ausnahme zu behandeln, wenn die Konvertierung fehlschlägt, können Sie rufen die <xref:System.Double.TryParse%2A?displayProperty=nameWithType> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="278a5-1201">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Double.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="278a5-1202">Es gibt eine <xref:System.Boolean> Wert, der angibt, ob die Konvertierung erfolgreich war oder nicht.</span><span class="sxs-lookup"><span data-stu-id="278a5-1202">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1203">Das folgende Beispiel konvertiert die zeichenfolgendarstellungen <xref:System.Double> Werte mit den `ToDouble` -Methode, mit einer <xref:System.IFormatProvider> Objekt.</span><span class="sxs-lookup"><span data-stu-id="278a5-1203">The following example converts string representations of <xref:System.Double> values with the `ToDouble` method, using an <xref:System.IFormatProvider> object.</span></span>  
  
 [!code-csharp[System.Convert.ToReals_String#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToReals_String/CS/todouble.cs#2)]
 [!code-vb[System.Convert.ToReals_String#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToReals_String/VB/todouble.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-1204">
            <paramref name="value" /> is not a number in a valid format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1204">
              <paramref name="value" /> is not a number in a valid format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1205">
            <paramref name="value" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1205">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToInt16">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="278a5-1206">Converts a specified value to a 16-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1206">Converts a specified value to a 16-bit signed integer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Boolean) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(bool value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : bool -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1207">The Boolean value to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1207">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1208">Converts the specified Boolean value to the equivalent 16-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1208">Converts the specified Boolean value to the equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1209">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1209">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1210">Das folgende Beispiel konvertiert die booleschen Werte `true` und `false` zu <xref:System.Int16> Werte.</span><span class="sxs-lookup"><span data-stu-id="278a5-1210">The following example converts the Boolean values `true` and `false` to <xref:System.Int16> values.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#1)]
 [!code-vb[System.Convert.ToInt16#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Byte) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : byte -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1211">The 8-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1211">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1212">Converts the value of the specified 8-bit unsigned integer to the equivalent 16-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1212">Converts the value of the specified 8-bit unsigned integer to the equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1213">A 16-bit signed integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1213">A 16-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1214">Das folgende Beispiel konvertiert jedes Element in einem Array von <xref:System.Byte> Werte in eine 16-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="278a5-1214">The following example converts each element in an array of <xref:System.Byte> values to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#2)]
 [!code-vb[System.Convert.ToInt16#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Char) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(char value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : char -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1215">The Unicode character to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1215">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1216">Converts the value of the specified Unicode character to the equivalent 16-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1216">Converts the value of the specified Unicode character to the equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1217">A 16-bit signed integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1217">A 16-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1218">Im folgenden Beispiel wird versucht, jedes Element in einem Array von konvertieren <xref:System.Char> Werte in eine 16-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="278a5-1218">The following example attempts to convert each element in an array of <xref:System.Char> values to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#3)]
 [!code-vb[System.Convert.ToInt16#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1219">
            <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1219">
              <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As DateTime) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : DateTime -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1220">The date and time value to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1220">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1221">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1221">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1222">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1222">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="278a5-1223">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1223">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-1224">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1224">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Decimal) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : decimal -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1225">The decimal number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1225">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1226">Converts the value of the specified decimal number to an equivalent 16-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1226">Converts the value of the specified decimal number to an equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1227">
            <paramref name="value" />, rounded to the nearest 16-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1227">
              <paramref name="value" />, rounded to the nearest 16-bit signed integer.</span>
          </span>
          <span data-ttu-id="278a5-1228">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1228">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1229">Im folgenden Beispiel wird versucht, jedes Element in einem Array von konvertieren <xref:System.Decimal> Werte in eine 16-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="278a5-1229">The following example attempts to convert each element in an array of <xref:System.Decimal> values to a 16-bit signed integer.</span></span> <span data-ttu-id="278a5-1230">Im Beispiel wird veranschaulicht, dass jeder Bruchteil eine <xref:System.Decimal> Wert gerundet wird, wenn es sich bei der Konvertierung zu interpretieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-1230">The example illustrates that any fractional part of a <xref:System.Decimal> value is rounded when performing the conversion.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#4)]
 [!code-vb[System.Convert.ToInt16#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1231">
            <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" /> or less than <see cref="F:System.Int16.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1231">
              <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" /> or less than <see cref="F:System.Int16.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Double) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(double value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : double -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1232">The double-precision floating-point number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1232">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1233">Converts the value of the specified double-precision floating-point number to an equivalent 16-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1233">Converts the value of the specified double-precision floating-point number to an equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1234">
            <paramref name="value" />, rounded to the nearest 16-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1234">
              <paramref name="value" />, rounded to the nearest 16-bit signed integer.</span>
          </span>
          <span data-ttu-id="278a5-1235">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1235">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1236">Das folgende Beispiel konvertiert jedes Element in einem Array von <xref:System.Double> Werte in eine 16-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="278a5-1236">The following example converts each element in an array of <xref:System.Double> values to a 16-bit signed integer.</span></span> <span data-ttu-id="278a5-1237">Im Beispiel wird veranschaulicht, dass jeder Bruchteil eine <xref:System.Double> Wert wird gerundet, bevor Sie die Konvertierung durchführen.</span><span class="sxs-lookup"><span data-stu-id="278a5-1237">The example illustrates that any fractional part of a <xref:System.Double> value is rounded before performing the conversion.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#5)]
 [!code-vb[System.Convert.ToInt16#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1238">
            <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" /> or less than <see cref="F:System.Int16.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1238">
              <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" /> or less than <see cref="F:System.Int16.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(short value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : int16 -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1239">The 16-bit signed integer to return.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1239">The 16-bit signed integer to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1240">Returns the specified 16-bit signed integer; no actual conversion is performed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1240">Returns the specified 16-bit signed integer; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1241">
            <paramref name="value" /> is returned unchanged.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1241">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(int value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : int -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1242">The 32-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1242">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1243">Converts the value of the specified 32-bit signed integer to an equivalent 16-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1243">Converts the value of the specified 32-bit signed integer to an equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1244">The 16-bit signed integer equivalent of <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1244">The 16-bit signed integer equivalent of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1245">Im folgenden Beispiel wird versucht, die jedes Element in einem Array von ganzen Zahlen in eine 16-Bit-Ganzzahl mit Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-1245">The following example attempts to convert each element in an array of integers to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#6)]
 [!code-vb[System.Convert.ToInt16#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1246">
            <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" /> or less than <see cref="F:System.Int16.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1246">
              <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" /> or less than <see cref="F:System.Int16.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Long) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(long value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : int64 -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1247">The 64-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1247">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1248">Converts the value of the specified 64-bit signed integer to an equivalent 16-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1248">Converts the value of the specified 64-bit signed integer to an equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1249">A 16-bit signed integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1249">A 16-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1250">Im folgenden Beispiel wird versucht, die jedes Element in einem Array von langen ganzen Zahlen in eine 16-Bit-Ganzzahl mit Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-1250">The following example attempts to convert each element in an array of long integers to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#7)]
 [!code-vb[System.Convert.ToInt16#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1251">
            <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" /> or less than <see cref="F:System.Int16.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1251">
              <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" /> or less than <see cref="F:System.Int16.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Object) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : obj -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1252">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1252">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1253">Converts the value of the specified object to a 16-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1253">Converts the value of the specified object to a 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1254">A 16-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1254">A 16-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1255">Wenn `value` nicht `null`, diese Methode dient als Wrapper für einen Aufruf der <xref:System.IConvertible.ToInt16%2A?displayProperty=nameWithType> Implementierung des zugrunde liegenden Typs von `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-1255">If `value` is not `null`, this method wraps a call to the <xref:System.IConvertible.ToInt16%2A?displayProperty=nameWithType> implementation of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1256">Im folgenden Beispiel wird versucht, die jedes Element in einem Objektarray in eine 16-Bit-Ganzzahl mit Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-1256">The following example attempts to convert each element in an object array to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#8)]
 [!code-vb[System.Convert.ToInt16#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-1257">
            <paramref name="value" /> is not in an appropriate format for an <see cref="T:System.Int16" /> type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1257">
              <paramref name="value" /> is not in an appropriate format for an <see cref="T:System.Int16" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-1258">
            <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1258">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="278a5-1259">-or-  The conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1259">-or-  The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1260">
            <paramref name="value" /> represents a number that is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1260">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As SByte) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : sbyte -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1261">The 8-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1261">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1262">Converts the value of the specified 8-bit signed integer to the equivalent 16-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1262">Converts the value of the specified 8-bit signed integer to the equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1263">A 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1263">A 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1264">Das folgende Beispiel konvertiert jedes Element in einem Array von Bytes mit Vorzeichen in eine 16-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="278a5-1264">The following example converts each element in an array of signed bytes to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#9)]
 [!code-vb[System.Convert.ToInt16#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Single) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(float value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : single -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1265">The single-precision floating-point number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1265">The single-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1266">Converts the value of the specified single-precision floating-point number to an equivalent 16-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1266">Converts the value of the specified single-precision floating-point number to an equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1267">
            <paramref name="value" />, rounded to the nearest 16-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1267">
              <paramref name="value" />, rounded to the nearest 16-bit signed integer.</span>
          </span>
          <span data-ttu-id="278a5-1268">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1268">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1269">Im folgenden Beispiel wird versucht, jedes Element in einem Array von konvertieren <xref:System.Single> Werte in eine 16-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="278a5-1269">The following example attempts to convert each element in an array of <xref:System.Single> values to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#10)]
 [!code-vb[System.Convert.ToInt16#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1270">
            <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" /> or less than <see cref="F:System.Int16.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1270">
              <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" /> or less than <see cref="F:System.Int16.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Single" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As String) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : string -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1271">A string that contains the number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1271">A string that contains the number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1272">Converts the specified string representation of a number to an equivalent 16-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1272">Converts the specified string representation of a number to an equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1273">A 16-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1273">A 16-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1274">Mithilfe der <xref:System.Convert.ToInt16%28System.String%29> Methode entspricht dem übergeben `value` auf die <xref:System.Int16.Parse%28System.String%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="278a5-1274">Using the <xref:System.Convert.ToInt16%28System.String%29> method is equivalent to passing `value` to the <xref:System.Int16.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="278a5-1275">`value` wird mithilfe der Formatierungskonventionen der aktuellen Threadkultur interpretiert.</span><span class="sxs-lookup"><span data-stu-id="278a5-1275">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="278a5-1276">Falls gewünscht, nicht um eine Ausnahme zu behandeln, wenn die Konvertierung fehlschlägt, können Sie rufen die <xref:System.Int16.TryParse%2A?displayProperty=nameWithType> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="278a5-1276">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Int16.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="278a5-1277">Es gibt eine <xref:System.Boolean> Wert, der angibt, ob die Konvertierung erfolgreich war oder nicht.</span><span class="sxs-lookup"><span data-stu-id="278a5-1277">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1278">Das folgende Beispiel konvertiert die zeichenfolgendarstellungen von 16-Bit-Ganzzahlen mit der `ToInt16` Methode unter Verwendung der standardformatierung.</span><span class="sxs-lookup"><span data-stu-id="278a5-1278">The following example converts string representations of 16-bit integers with the `ToInt16` method, using default formatting.</span></span>  
  
 [!code-cpp[System.Convert.ToSInts_String#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToSInts_String/CPP/toint16.cpp#3)]
 [!code-csharp[System.Convert.ToSInts_String#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToSInts_String/CS/toint16.cs#3)]
 [!code-vb[System.Convert.ToSInts_String#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToSInts_String/VB/toint16.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-1279">
            <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1279">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1280">
            <paramref name="value" /> represents a number that is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1280">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Int16.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As UShort) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : uint16 -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1281">The 16-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1281">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1282">Converts the value of the specified 16-bit unsigned integer to the equivalent 16-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1282">Converts the value of the specified 16-bit unsigned integer to the equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1283">A 16-bit signed integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1283">A 16-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1284">Im folgenden Beispiel wird versucht, die jedes Element in einem Array von 16-Bit-Ganzzahlen ohne Vorzeichen in eine 16-Bit-Ganzzahl mit Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-1284">The following example attempts to convert each element in an array of unsigned 16-bit integers to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#11)]
 [!code-vb[System.Convert.ToInt16#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1285">
            <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1285">
              <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As UInteger) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : uint32 -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1286">The 32-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1286">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1287">Converts the value of the specified 32-bit unsigned integer to an equivalent 16-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1287">Converts the value of the specified 32-bit unsigned integer to an equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1288">A 16-bit signed integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1288">A 16-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1289">Im folgenden Beispiel wird versucht, die jedes Element in einem Array von Ganzzahlen ohne Vorzeichen in eine 16-Bit-Ganzzahl mit Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-1289">The following example attempts to convert each element in an array of unsigned integers to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#12)]
 [!code-vb[System.Convert.ToInt16#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1290">
            <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1290">
              <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As ULong) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : uint64 -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1291">The 64-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1291">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1292">Converts the value of the specified 64-bit unsigned integer to an equivalent 16-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1292">Converts the value of the specified 64-bit unsigned integer to an equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1293">A 16-bit signed integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1293">A 16-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1294">Im folgenden Beispiel wird versucht, die jedes Element in einem Array von Ganzzahlen ohne Vorzeichen in eine 16-Bit-Ganzzahl mit Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-1294">The following example attempts to convert each element in an array of unsigned long integers to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#13)]
 [!code-vb[System.Convert.ToInt16#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1295">
            <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1295">
              <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Object, provider As IFormatProvider) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : obj * IFormatProvider -&gt; int16" Usage="System.Convert.ToInt16 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1296">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1296">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="278a5-1297">An object that supplies culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1297">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1298">Converts the value of the specified object to a 16-bit signed integer, using the specified culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1298">Converts the value of the specified object to a 16-bit signed integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1299">A 16-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1299">A 16-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1300">`provider` ermöglicht es dem Benutzer an kulturspezifische Konvertierungsinformationen für den Inhalt des `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-1300">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="278a5-1301">Z. B. wenn `value` ist ein <xref:System.String> , die eine Zahl, `provider` bereitgestellt kulturspezifische Informationen über die Notation verwendet, um diese Zahl darzustellen.</span><span class="sxs-lookup"><span data-stu-id="278a5-1301">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="278a5-1302">Ignorieren Sie die Basistypen `provider`jedoch der Parameter kann verwendet werden, wenn `value` ist ein benutzerdefinierten Typ, der implementiert die <xref:System.IConvertible> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="278a5-1302">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1303">Das folgende Beispiel definiert eine Klasse, die implementiert <xref:System.IConvertible> und eine Klasse, die implementiert <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="278a5-1303">The following example defines a class that implements <xref:System.IConvertible> and a class that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="278a5-1304">Objekte der Klasse, die implementiert <xref:System.IConvertible> enthalten ein Array von <xref:System.Double> Werte.</span><span class="sxs-lookup"><span data-stu-id="278a5-1304">Objects of the class that implements <xref:System.IConvertible> hold an array of <xref:System.Double> values.</span></span> <span data-ttu-id="278a5-1305">Ein Objekt einer jeden Klasse übergeben wird, um die `ToInt16` Methode.</span><span class="sxs-lookup"><span data-stu-id="278a5-1305">An object of each class is passed to the `ToInt16` method.</span></span> <span data-ttu-id="278a5-1306">Diese Methode gibt Durchschnitt des Arrays mit <xref:System.Double> Werte, mit dem Objekt, das implementiert <xref:System.IFormatProvider> bestimmen, wie den Durchschnitt berechnet.</span><span class="sxs-lookup"><span data-stu-id="278a5-1306">This method returns an average of the array of <xref:System.Double> values, using the object that implements <xref:System.IFormatProvider> to determine how to calculate the average.</span></span>  
  
 [!code-cpp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CPP/objectifp.cpp#1)]
 [!code-csharp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CS/objectifp.cs#1)]
 [!code-vb[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/VB/objectifp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-1307">
            <paramref name="value" /> is not in an appropriate format for an <see cref="T:System.Int16" /> type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1307">
              <paramref name="value" /> is not in an appropriate format for an <see cref="T:System.Int16" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-1308">
            <paramref name="value" /> does not implement <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1308">
              <paramref name="value" /> does not implement <see cref="T:System.IConvertible" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1309">
            <paramref name="value" /> represents a number that is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1309">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As String, provider As IFormatProvider) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : string * IFormatProvider -&gt; int16" Usage="System.Convert.ToInt16 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1310">A string that contains the number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1310">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="278a5-1311">An object that supplies culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1311">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1312">Converts the specified string representation of a number to an equivalent 16-bit signed integer, using the specified culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1312">Converts the specified string representation of a number to an equivalent 16-bit signed integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1313">A 16-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1313">A 16-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1314">`provider` ist ein <xref:System.IFormatProvider> -Instanz, die erhält eine <xref:System.Globalization.NumberFormatInfo> Objekt.</span><span class="sxs-lookup"><span data-stu-id="278a5-1314">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="278a5-1315">Die <xref:System.Globalization.NumberFormatInfo> Objekt stellt kulturspezifische Informationen zum Format von `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-1315">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="278a5-1316">Wenn `provider` ist `null`die <xref:System.Globalization.NumberFormatInfo> für die aktuelle Kultur verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="278a5-1316">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="278a5-1317">Falls gewünscht, nicht um eine Ausnahme zu behandeln, wenn die Konvertierung fehlschlägt, können Sie rufen die <xref:System.Int16.TryParse%2A?displayProperty=nameWithType> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="278a5-1317">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Int16.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="278a5-1318">Es gibt eine <xref:System.Boolean> Wert, der angibt, ob die Konvertierung erfolgreich war oder nicht.</span><span class="sxs-lookup"><span data-stu-id="278a5-1318">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1319">Das folgende Beispiel konvertiert die zeichenfolgendarstellungen von 16-Bit-Ganzzahlen mit der `ToInt16` -Methode, mit einer <xref:System.IFormatProvider> Objekt.</span><span class="sxs-lookup"><span data-stu-id="278a5-1319">The following example converts string representations of 16-bit integers with the `ToInt16` method, using an <xref:System.IFormatProvider> object.</span></span>  
  
 [!code-cpp[System.Convert.ToSInts_String#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToSInts_String/CPP/toint16.cpp#3)]
 [!code-csharp[System.Convert.ToSInts_String#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToSInts_String/CS/toint16.cs#3)]
 [!code-vb[System.Convert.ToSInts_String#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToSInts_String/VB/toint16.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-1320">
            <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1320">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1321">
            <paramref name="value" /> represents a number that is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1321">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Int16.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (string value, int fromBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(string value, int32 fromBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As String, fromBase As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::String ^ value, int fromBase);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : string * int -&gt; int16" Usage="System.Convert.ToInt16 (value, fromBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1322">A string that contains the number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1322">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="fromBase">
          <span data-ttu-id="278a5-1323">The base of the number in <c>value</c>, which must be 2, 8, 10, or 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1323">The base of the number in <c>value</c>, which must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1324">Converts the string representation of a number in a specified base to an equivalent 16-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1324">Converts the string representation of a number in a specified base to an equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1325">A 16-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1325">A 16-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1326">Wenn `fromBase` 16 ist, können Sie die Anzahl von angegebenen Präfix der `value` Parameter mit "0 X" oder "0 X".</span><span class="sxs-lookup"><span data-stu-id="278a5-1326">If `fromBase` is 16, you can prefix the number specified by the `value` parameter with "0x" or "0X".</span></span>  
  
 <span data-ttu-id="278a5-1327">Da die negativen Vorzeichen nicht zur Basis 10 numerischen Darstellungen, nicht unterstützt werden die <xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29> Methode wird davon ausgegangen, dass negative Zahlen zwei des Komplement Darstellung verwenden.</span><span class="sxs-lookup"><span data-stu-id="278a5-1327">Because the negative sign is not supported for non-base 10 numeric representations, the <xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29> method assumes that negative numbers use two’s complement representation.</span></span> <span data-ttu-id="278a5-1328">Das heißt, interpretiert die Methode immer die binäre höchsten Bit einer ganzen Zahl (15-Bit) als Vorzeichenbit.</span><span class="sxs-lookup"><span data-stu-id="278a5-1328">In other words, the method always interprets the highest-order binary bit of an integer (bit 15) as its sign bit.</span></span> <span data-ttu-id="278a5-1329">Daher ist es möglich, Schreiben Code, in dem eine nicht zur Basis 10 gehörende Zahl, wird außerhalb des Bereichs der <xref:System.Int16> -Datentyp in konvertiert ein <xref:System.Int16> Wert ohne die Methode eine Ausnahme auslöst.</span><span class="sxs-lookup"><span data-stu-id="278a5-1329">As a result, it is possible to write code in which a non-base 10 number that is out of the range of the <xref:System.Int16> data type is converted to an <xref:System.Int16> value without the method throwing an exception.</span></span> <span data-ttu-id="278a5-1330">Das folgende Beispiel-Inkremente <xref:System.Int16.MaxValue?displayProperty=nameWithType> durch, die daraus resultierende Zahl in die hexadezimale Zeichenfolgendarstellung konvertiert, und ruft anschließend die <xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29> Methode.</span><span class="sxs-lookup"><span data-stu-id="278a5-1330">The following example increments <xref:System.Int16.MaxValue?displayProperty=nameWithType> by one, converts the resulting number to its hexadecimal string representation, and then calls the <xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="278a5-1331">Anstatt eine Ausnahme auszulösen, die Methode zeigt die Meldung "0 x 8000 konvertiert zwischen-32768."</span><span class="sxs-lookup"><span data-stu-id="278a5-1331">Instead of throwing an exception, the method displays the message, "0x8000 converts to -32768."</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#5)]
 [!code-vb[System.Convert.BaseConversion#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#5)]  
  
 <span data-ttu-id="278a5-1332">Wenn Sie binäre Operationen oder numerische Konvertierungen durchführen zu können, ist es immer der Verantwortung des Entwicklers, stellen Sie sicher, dass eine Methode die entsprechenden numerische Darstellung verwendet, um einen bestimmten Wert zu interpretieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-1332">When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method is using the appropriate numeric representation to interpret a particular value.</span></span> <span data-ttu-id="278a5-1333">Wie im folgenden Beispiel wird veranschaulicht, können Sie sicherstellen, dass die Methode verarbeitet entsprechend überläuft, indem zuerst die Vorzeichen des numerischen Werts vor der Konvertierung in die hexadezimale Zeichenfolgendarstellung abgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="278a5-1333">As the following example illustrates, you can ensure that the method handles overflows appropriately by first retrieving the sign of the numeric value before converting it to its hexadecimal string representation.</span></span> <span data-ttu-id="278a5-1334">Löst eine Ausnahme aus, wenn der ursprüngliche Wert positiv war, aber die Konvertierung zurück in eine ganze Zahl einen negativen Wert ergibt.</span><span class="sxs-lookup"><span data-stu-id="278a5-1334">Throw an exception if the original value was positive but the conversion back to an integer yields a negative value.</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#6)]
 [!code-vb[System.Convert.BaseConversion#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#6)]  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1335">Im folgenden Beispiel wird versucht, die jedes Element in einem Zeichenfolgenarray als hexadezimale Zeichenfolge zu interpretieren und es in eine 16-Bit-Ganzzahl mit Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-1335">The following example attempts to interpret each element in a string array as a hexadecimal string and to convert it to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_2.cs#14)]
 [!code-vb[System.Convert.ToInt16#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_2.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="278a5-1336">
            <paramref name="fromBase" /> is not 2, 8, 10, or 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1336">
              <paramref name="fromBase" /> is not 2, 8, 10, or 16.</span>
          </span>
          <span data-ttu-id="278a5-1337">-or-  <paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1337">-or-  <paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="278a5-1338">
            <paramref name="value" /> is <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1338">
              <paramref name="value" /> is <see cref="F:System.String.Empty" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-1339">
            <paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1339">
              <paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span>
          </span>
          <span data-ttu-id="278a5-1340">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1340">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1341">
            <paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1341">
              <paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span>
          </span>
          <span data-ttu-id="278a5-1342">-or-  <paramref name="value" /> represents a number that is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1342">-or-  <paramref name="value" /> represents a number that is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToInt32">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="278a5-1343">Converts a specified value to a 32-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1343">Converts a specified value to a 32-bit signed integer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(bool value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : bool -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1344">The Boolean value to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1344">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1345">Converts the specified Boolean value to the equivalent 32-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1345">Converts the specified Boolean value to the equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1346">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1346">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1347">Das folgende Beispiel konvertiert die <xref:System.Boolean> Werte `true` und `false` zu einer ganzen Zahl.</span><span class="sxs-lookup"><span data-stu-id="278a5-1347">The following example converts the <xref:System.Boolean> values `true` and `false` to integers.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#1)]
 [!code-vb[System.Convert.ToInt32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Byte) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : byte -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1348">The 8-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1348">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1349">Converts the value of the specified 8-bit unsigned integer to the equivalent 32-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1349">Converts the value of the specified 8-bit unsigned integer to the equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1350">A 32-bit signed integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1350">A 32-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1351">Das folgende Beispiel konvertiert jedes Element in einem Array von Bytes in eine ganze Zahl.</span><span class="sxs-lookup"><span data-stu-id="278a5-1351">The following example converts each element in an array of bytes to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#2)]
 [!code-vb[System.Convert.ToInt32#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(char value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : char -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1352">The Unicode character to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1352">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1353">Converts the value of the specified Unicode character to the equivalent 32-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1353">Converts the value of the specified Unicode character to the equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1354">A 32-bit signed integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1354">A 32-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1355">Die <xref:System.Convert.ToInt32%28System.Char%29> Methodenrückgabe eine 32-Bit-Ganzzahl mit Vorzeichen, die die UTF-16-codierte Codeeinheit des darstellt der `value` Argument.</span><span class="sxs-lookup"><span data-stu-id="278a5-1355">The <xref:System.Convert.ToInt32%28System.Char%29> method returns a 32-bit signed integer that represents the UTF-16 encoded code unit of the `value` argument.</span></span> <span data-ttu-id="278a5-1356">Wenn `value` ein niedriges Ersatzzeichen ist, oder ein hohes Ersatzzeichen ist, dieser Rückgabewert stellt auch den Unicode-Codepunkt des Werts.</span><span class="sxs-lookup"><span data-stu-id="278a5-1356">If `value` is not a low surrogate or a high surrogate, this return value also represents the Unicode code point of value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1357">Das folgende Beispiel konvertiert jedes Element in einem Array von <xref:System.Char> Werte in eine ganze Zahl.</span><span class="sxs-lookup"><span data-stu-id="278a5-1357">The following example converts each element in an array of <xref:System.Char> values to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#3)]
 [!code-vb[System.Convert.ToInt32#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : DateTime -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1358">The date and time value to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1358">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1359">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1359">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1360">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1360">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="278a5-1361">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1361">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-1362">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1362">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : decimal -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1363">The decimal number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1363">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1364">Converts the value of the specified decimal number to an equivalent 32-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1364">Converts the value of the specified decimal number to an equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1365">
            <paramref name="value" />, rounded to the nearest 32-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1365">
              <paramref name="value" />, rounded to the nearest 32-bit signed integer.</span>
          </span>
          <span data-ttu-id="278a5-1366">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1366">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1367">Im folgenden Beispiel wird versucht, jedes Element in einem Array von konvertieren <xref:System.Decimal> Werte in eine ganze Zahl.</span><span class="sxs-lookup"><span data-stu-id="278a5-1367">The following example attempts to convert each element in an array of <xref:System.Decimal> values to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#4)]
 [!code-vb[System.Convert.ToInt32#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1368">
            <paramref name="value" /> is greater than <see cref="F:System.Int32.MaxValue" /> or less than <see cref="F:System.Int32.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1368">
              <paramref name="value" /> is greater than <see cref="F:System.Int32.MaxValue" /> or less than <see cref="F:System.Int32.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Double) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(double value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : double -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1369">The double-precision floating-point number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1369">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1370">Converts the value of the specified double-precision floating-point number to an equivalent 32-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1370">Converts the value of the specified double-precision floating-point number to an equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1371">
            <paramref name="value" />, rounded to the nearest 32-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1371">
              <paramref name="value" />, rounded to the nearest 32-bit signed integer.</span>
          </span>
          <span data-ttu-id="278a5-1372">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1372">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1373">Im folgenden Beispiel wird versucht, jedes Element in einem Array von konvertieren <xref:System.Double> Werte anInteger.</span><span class="sxs-lookup"><span data-stu-id="278a5-1373">The following example attempts to convert each element in an array of <xref:System.Double> values to aninteger.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#5)]
 [!code-vb[System.Convert.ToInt32#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1374">
            <paramref name="value" /> is greater than <see cref="F:System.Int32.MaxValue" /> or less than <see cref="F:System.Int32.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1374">
              <paramref name="value" /> is greater than <see cref="F:System.Int32.MaxValue" /> or less than <see cref="F:System.Int32.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Short) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(short value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : int16 -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1375">The 16-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1375">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1376">Converts the value of the specified 16-bit signed integer to an equivalent 32-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1376">Converts the value of the specified 16-bit signed integer to an equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1377">A 32-bit signed integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1377">A 32-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1378">Das folgende Beispiel konvertiert jedes Element in einem Array von 16-Bit-Ganzzahlen mit Vorzeichen in eine ganze Zahl.</span><span class="sxs-lookup"><span data-stu-id="278a5-1378">The following example converts each element in an array of 16-bit signed integers to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#6)]
 [!code-vb[System.Convert.ToInt32#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(int value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : int -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1379">The 32-bit signed integer to return.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1379">The 32-bit signed integer to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1380">Returns the specified 32-bit signed integer; no actual conversion is performed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1380">Returns the specified 32-bit signed integer; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1381">
            <paramref name="value" /> is returned unchanged.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1381">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Long) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(long value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : int64 -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1382">The 64-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1382">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1383">Converts the value of the specified 64-bit signed integer to an equivalent 32-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1383">Converts the value of the specified 64-bit signed integer to an equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1384">A 32-bit signed integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1384">A 32-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1385">Im folgenden Beispiel wird versucht, die jedes Element in einem Array von langen ganzen Zahlen in eine ganze Zahl zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-1385">The following example attempts to convert each element in an array of long integers to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#7)]
 [!code-vb[System.Convert.ToInt32#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1386">
            <paramref name="value" /> is greater than <see cref="F:System.Int32.MaxValue" /> or less than <see cref="F:System.Int32.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1386">
              <paramref name="value" /> is greater than <see cref="F:System.Int32.MaxValue" /> or less than <see cref="F:System.Int32.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : obj -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1387">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1387">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1388">Converts the value of the specified object to a 32-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1388">Converts the value of the specified object to a 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1389">A 32-bit signed integer equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1389">A 32-bit signed integer equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1390">Wenn`value` nicht `null`, diese Methode dient als Wrapper für einen Aufruf der <xref:System.IConvertible.ToInt32%2A?displayProperty=nameWithType> Implementierung des zugrunde liegenden Typs von `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-1390">If`value` is not `null`, this method wraps a call to the <xref:System.IConvertible.ToInt32%2A?displayProperty=nameWithType> implementation of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1391">Im folgenden Beispiel wird versucht, die jedes Element in einem Objektarray in eine ganze Zahl zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-1391">The following example attempts to convert each element in an object array to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#8)]
 [!code-vb[System.Convert.ToInt32#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-1392">
            <paramref name="value" /> is not in an appropriate format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1392">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-1393">
            <paramref name="value" /> does not implement the  <see cref="T:System.IConvertible" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1393">
              <paramref name="value" /> does not implement the  <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="278a5-1394">-or-  The conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1394">-or-  The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1395">
            <paramref name="value" /> represents a number that is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1395">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As SByte) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : sbyte -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1396">The 8-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1396">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1397">Converts the value of the specified 8-bit signed integer to the equivalent 32-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1397">Converts the value of the specified 8-bit signed integer to the equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1398">A 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1398">A 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1399">Das folgende Beispiel konvertiert jedes Element in einem Array von Bytes mit Vorzeichen in eine ganze Zahl.</span><span class="sxs-lookup"><span data-stu-id="278a5-1399">The following example converts each element in an array of signed bytes to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#9)]
 [!code-vb[System.Convert.ToInt32#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Single) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(float value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : single -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1400">The single-precision floating-point number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1400">The single-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1401">Converts the value of the specified single-precision floating-point number to an equivalent 32-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1401">Converts the value of the specified single-precision floating-point number to an equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1402">
            <paramref name="value" />, rounded to the nearest 32-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1402">
              <paramref name="value" />, rounded to the nearest 32-bit signed integer.</span>
          </span>
          <span data-ttu-id="278a5-1403">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1403">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1404">Im folgenden Beispiel wird versucht, jedes Element in einem Array von konvertieren <xref:System.Single> Werte in eine ganze Zahl.</span><span class="sxs-lookup"><span data-stu-id="278a5-1404">The following example attempts to convert each element in an array of <xref:System.Single> values to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#10)]
 [!code-vb[System.Convert.ToInt32#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1405">
            <paramref name="value" /> is greater than <see cref="F:System.Int32.MaxValue" /> or less than <see cref="F:System.Int32.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1405">
              <paramref name="value" /> is greater than <see cref="F:System.Int32.MaxValue" /> or less than <see cref="F:System.Int32.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Single" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : string -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1406">A string that contains the number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1406">A string that contains the number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1407">Converts the specified string representation of a number to an equivalent 32-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1407">Converts the specified string representation of a number to an equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1408">A 32-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1408">A 32-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1409">Mithilfe der <xref:System.Convert.ToInt32%28System.String%29> Methode entspricht dem übergeben `value` auf die <xref:System.Int32.Parse%28System.String%29?displayProperty=nameWithType> Methode.`value`</span><span class="sxs-lookup"><span data-stu-id="278a5-1409">Using the <xref:System.Convert.ToInt32%28System.String%29> method is equivalent to passing `value` to the <xref:System.Int32.Parse%28System.String%29?displayProperty=nameWithType> method.`value`</span></span> <span data-ttu-id="278a5-1410">wird unter Verwendung der Formatierungskonventionen der aktuellen Threadkultur interpretiert.</span><span class="sxs-lookup"><span data-stu-id="278a5-1410">is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="278a5-1411">Falls gewünscht, nicht um eine Ausnahme zu behandeln, wenn die Konvertierung fehlschlägt, können Sie rufen die <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="278a5-1411">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="278a5-1412">Es gibt eine <xref:System.Boolean> Wert, der angibt, ob die Konvertierung erfolgreich war oder nicht.</span><span class="sxs-lookup"><span data-stu-id="278a5-1412">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1413">Im folgenden Beispiel wird versucht, die jedes Element in ein Array von numerischen Zeichenfolgen in eine ganze Zahl zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-1413">The following example attempts to convert each element in a numeric string array to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#11)]
 [!code-vb[System.Convert.ToInt32#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-1414">
            <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1414">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1415">
            <paramref name="value" /> represents a number that is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1415">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As UShort) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : uint16 -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1416">The 16-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1416">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1417">Converts the value of the specified 16-bit unsigned integer to the equivalent 32-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1417">Converts the value of the specified 16-bit unsigned integer to the equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1418">A 32-bit signed integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1418">A 32-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1419">Das folgende Beispiel konvertiert jedes Element in einem Array von 16-Bit-Ganzzahlen ohne Vorzeichen in eine ganze Zahl.</span><span class="sxs-lookup"><span data-stu-id="278a5-1419">The following example converts each element in an array of 16-bit unsigned integers to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#12)]
 [!code-vb[System.Convert.ToInt32#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As UInteger) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : uint32 -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1420">The 32-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1420">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1421">Converts the value of the specified 32-bit unsigned integer to an equivalent 32-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1421">Converts the value of the specified 32-bit unsigned integer to an equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1422">A 32-bit signed integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1422">A 32-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1423">Im folgenden Beispiel wird versucht, die jedes Element in einem Array von Ganzzahlen ohne Vorzeichen in eine Ganzzahl mit Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-1423">The following example attempts to convert each element in an array of unsigned integers to a signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#13)]
 [!code-vb[System.Convert.ToInt32#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1424">
            <paramref name="value" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1424">
              <paramref name="value" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As ULong) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : uint64 -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1425">The 64-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1425">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1426">Converts the value of the specified 64-bit unsigned integer to an equivalent 32-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1426">Converts the value of the specified 64-bit unsigned integer to an equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1427">A 32-bit signed integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1427">A 32-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1428">Im folgenden Beispiel wird versucht, die jedes Element in einem Array von Ganzzahlen ohne Vorzeichen in eine Ganzzahl mit Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-1428">The following example attempts to convert each element in an array of unsigned long integers to a signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#14)]
 [!code-vb[System.Convert.ToInt32#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1429">
            <paramref name="value" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1429">
              <paramref name="value" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Object, provider As IFormatProvider) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : obj * IFormatProvider -&gt; int" Usage="System.Convert.ToInt32 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1430">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1430">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="278a5-1431">An object that supplies culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1431">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1432">Converts the value of the specified object to a 32-bit signed integer, using the specified culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1432">Converts the value of the specified object to a 32-bit signed integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1433">A 32-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1433">A 32-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1434">Der Rückgabewert ist das Ergebnis eines Aufrufs der <xref:System.IConvertible.ToInt32%2A?displayProperty=nameWithType> Methode des zugrunde liegenden Typs von `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-1434">The return value is the result of invoking the <xref:System.IConvertible.ToInt32%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="278a5-1435">`provider` ermöglicht es dem Benutzer an kulturspezifische Konvertierungsinformationen für den Inhalt des `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-1435">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="278a5-1436">Z. B. wenn `value` ist ein <xref:System.String> , die eine Zahl, `provider` bereitgestellt kulturspezifische Informationen über die Notation verwendet, um diese Zahl darzustellen.</span><span class="sxs-lookup"><span data-stu-id="278a5-1436">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="278a5-1437">Ignorieren Sie die Basistypen `provider`jedoch der Parameter kann verwendet werden, wenn `value` ist ein benutzerdefinierten Typ, der implementiert die <xref:System.IConvertible> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="278a5-1437">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1438">Das folgende Beispiel definiert eine Klasse, die implementiert <xref:System.IConvertible> und eine Klasse, die implementiert <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="278a5-1438">The following example defines a class that implements <xref:System.IConvertible> and a class that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="278a5-1439">Objekte der Klasse, die implementiert <xref:System.IConvertible> enthalten ein Array von <xref:System.Double> Werte.</span><span class="sxs-lookup"><span data-stu-id="278a5-1439">Objects of the class that implements <xref:System.IConvertible> hold an array of <xref:System.Double> values.</span></span> <span data-ttu-id="278a5-1440">Ein Objekt einer jeden Klasse übergeben wird, um die `ToInt32` Methode.</span><span class="sxs-lookup"><span data-stu-id="278a5-1440">An object of each class is passed to the `ToInt32` method.</span></span> <span data-ttu-id="278a5-1441">Diese Methode gibt Durchschnitt des Arrays mit <xref:System.Double> Werte, mit dem Objekt, das implementiert <xref:System.IFormatProvider> bestimmen, wie den Durchschnitt berechnet.</span><span class="sxs-lookup"><span data-stu-id="278a5-1441">This method returns an average of the array of <xref:System.Double> values, using the object that implements <xref:System.IFormatProvider> to determine how to calculate the average.</span></span>  
  
 [!code-cpp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CPP/objectifp.cpp#1)]
 [!code-csharp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CS/objectifp.cs#1)]
 [!code-vb[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/VB/objectifp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-1442">
            <paramref name="value" /> is not in an appropriate format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1442">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-1443">
            <paramref name="value" /> does not implement <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1443">
              <paramref name="value" /> does not implement <see cref="T:System.IConvertible" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1444">
            <paramref name="value" /> represents a number that is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1444">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As String, provider As IFormatProvider) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : string * IFormatProvider -&gt; int" Usage="System.Convert.ToInt32 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1445">A string that contains the number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1445">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="278a5-1446">An object that supplies culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1446">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1447">Converts the specified string representation of a number to an equivalent 32-bit signed integer, using the specified culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1447">Converts the specified string representation of a number to an equivalent 32-bit signed integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1448">A 32-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1448">A 32-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1449">Der Rückgabewert ist das Ergebnis eines Aufrufs der <xref:System.Int32.Parse%2A?displayProperty=nameWithType> Methode `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-1449">The return value is the result of invoking the <xref:System.Int32.Parse%2A?displayProperty=nameWithType> method on `value`.</span></span>  
  
 <span data-ttu-id="278a5-1450">`provider` ist ein <xref:System.IFormatProvider> -Instanz, die erhält eine <xref:System.Globalization.NumberFormatInfo> Objekt.</span><span class="sxs-lookup"><span data-stu-id="278a5-1450">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="278a5-1451">Die <xref:System.Globalization.NumberFormatInfo> Objekt stellt kulturspezifische Informationen zum Format von `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-1451">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="278a5-1452">Wenn `provider` ist `null`die <xref:System.Globalization.NumberFormatInfo> für die aktuelle Kultur verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="278a5-1452">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="278a5-1453">Falls gewünscht, nicht um eine Ausnahme zu behandeln, wenn die Konvertierung fehlschlägt, können Sie rufen die <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="278a5-1453">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="278a5-1454">Es gibt eine <xref:System.Boolean> Wert, der angibt, ob die Konvertierung erfolgreich war oder nicht.</span><span class="sxs-lookup"><span data-stu-id="278a5-1454">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1455">Das folgende Beispiel definiert ein benutzerdefiniertes <xref:System.Globalization.NumberFormatInfo> -Objekt, das die Zeichenfolge "pos" als positives Vorzeichen und die Zeichenfolge "Neg" als negativen Vorzeichen erkennt.</span><span class="sxs-lookup"><span data-stu-id="278a5-1455">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> object that recognizes the string "pos" as the positive sign and the string "neg" as the negative sign.</span></span> <span data-ttu-id="278a5-1456">Versuchen sie dann jedes Element eines Arrays numerische Zeichenfolge in eine ganze Zahl, die mit beiden dieser Anbieter zu konvertieren und die <xref:System.Globalization.NumberFormatInfo> Anbieter für die invariante Kultur.</span><span class="sxs-lookup"><span data-stu-id="278a5-1456">It then attempts to convert each element of a numeric string array to an integer using both this provider and the <xref:System.Globalization.NumberFormatInfo> provider for the invariant culture.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_2.cs#15)]
 [!code-vb[System.Convert.ToInt32#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_2.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-1457">
            <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1457">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1458">
            <paramref name="value" /> represents a number that is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1458">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (string value, int fromBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(string value, int32 fromBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As String, fromBase As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::String ^ value, int fromBase);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : string * int -&gt; int" Usage="System.Convert.ToInt32 (value, fromBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1459">A string that contains the number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1459">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="fromBase">
          <span data-ttu-id="278a5-1460">The base of the number in <c>value</c>, which must be 2, 8, 10, or 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1460">The base of the number in <c>value</c>, which must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1461">Converts the string representation of a number in a specified base to an equivalent 32-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1461">Converts the string representation of a number in a specified base to an equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1462">A 32-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1462">A 32-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1463">Wenn `fromBase` 16 ist, können Sie die Anzahl von angegebenen Präfix der `value` Parameter mit "0 X" oder "0 X".</span><span class="sxs-lookup"><span data-stu-id="278a5-1463">If `fromBase` is 16, you can prefix the number specified by the `value` parameter with "0x" or "0X".</span></span>  
  
 <span data-ttu-id="278a5-1464">Da die negativen Vorzeichen nicht zur Basis 10 numerischen Darstellungen, nicht unterstützt werden die <xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29> Methode wird davon ausgegangen, dass negative Zahlen zwei des Komplement Darstellung verwenden.</span><span class="sxs-lookup"><span data-stu-id="278a5-1464">Because the negative sign is not supported for non-base 10 numeric representations, the <xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29> method assumes that negative numbers use two’s complement representation.</span></span> <span data-ttu-id="278a5-1465">Das heißt, interpretiert die Methode immer die binäre höchsten Bit einer ganzen Zahl (31-Bit) als Vorzeichenbit.</span><span class="sxs-lookup"><span data-stu-id="278a5-1465">In other words, the method always interprets the highest-order binary bit of an integer (bit 31) as its sign bit.</span></span> <span data-ttu-id="278a5-1466">Daher ist es möglich, Schreiben Code, in dem eine nicht zur Basis 10 gehörende Zahl, wird außerhalb des Bereichs der <xref:System.Int32> -Datentyp in konvertiert ein <xref:System.Int32> Wert ohne die Methode eine Ausnahme auslöst.</span><span class="sxs-lookup"><span data-stu-id="278a5-1466">As a result, it is possible to write code in which a non-base 10 number that is out of the range of the <xref:System.Int32> data type is converted to an <xref:System.Int32> value without the method throwing an exception.</span></span> <span data-ttu-id="278a5-1467">Das folgende Beispiel-Inkremente <xref:System.Int32.MaxValue?displayProperty=nameWithType> durch, die daraus resultierende Zahl in die hexadezimale Zeichenfolgendarstellung konvertiert, und ruft anschließend die <xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29> Methode.</span><span class="sxs-lookup"><span data-stu-id="278a5-1467">The following example increments <xref:System.Int32.MaxValue?displayProperty=nameWithType> by one, converts the resulting number to its hexadecimal string representation, and then calls the <xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="278a5-1468">Anstatt eine Ausnahme auszulösen, die Methode zeigt die Meldung "0 x 80000000 konvertiert-2147483648."</span><span class="sxs-lookup"><span data-stu-id="278a5-1468">Instead of throwing an exception, the method displays the message, "0x80000000 converts to -2147483648."</span></span>  
  
 [!code-cpp[System.Convert.BaseConversion#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cpp/toint_str_int32.cpp#1)]
 [!code-csharp[System.Convert.BaseConversion#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#1)]
 [!code-vb[System.Convert.BaseConversion#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#1)]  
  
 <span data-ttu-id="278a5-1469">Wenn Sie binäre Operationen oder numerische Konvertierungen durchführen zu können, ist es immer der Verantwortung des Entwicklers, stellen Sie sicher, dass eine Methode die entsprechenden numerische Darstellung verwendet, um einen bestimmten Wert zu interpretieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-1469">When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method is using the appropriate numeric representation to interpret a particular value.</span></span> <span data-ttu-id="278a5-1470">Wie im folgenden Beispiel wird veranschaulicht, können Sie sicherstellen, dass die Methode verarbeitet entsprechend überläuft, indem zuerst die Vorzeichen des numerischen Werts vor der Konvertierung in die hexadezimale Zeichenfolgendarstellung abgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="278a5-1470">As the following example illustrates, you can ensure that the method handles overflows appropriately by first retrieving the sign of the numeric value before converting it to its hexadecimal string representation.</span></span> <span data-ttu-id="278a5-1471">Löst eine Ausnahme aus, wenn der ursprüngliche Wert positiv war, aber die Konvertierung zurück in eine ganze Zahl einen negativen Wert ergibt.</span><span class="sxs-lookup"><span data-stu-id="278a5-1471">Throw an exception if the original value was positive but the conversion back to an integer yields a negative value.</span></span>  
  
 [!code-cpp[System.Convert.BaseConversion#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cpp/toint_str_int32.cpp#2)]
 [!code-csharp[System.Convert.BaseConversion#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#2)]
 [!code-vb[System.Convert.BaseConversion#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="278a5-1472">
            <paramref name="fromBase" /> is not 2, 8, 10, or 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1472">
              <paramref name="fromBase" /> is not 2, 8, 10, or 16.</span>
          </span>
          <span data-ttu-id="278a5-1473">-or-  <paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1473">-or-  <paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="278a5-1474">
            <paramref name="value" /> is <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1474">
              <paramref name="value" /> is <see cref="F:System.String.Empty" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-1475">
            <paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1475">
              <paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span>
          </span>
          <span data-ttu-id="278a5-1476">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1476">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1477">
            <paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1477">
              <paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span>
          </span>
          <span data-ttu-id="278a5-1478">-or-  <paramref name="value" /> represents a number that is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1478">-or-  <paramref name="value" /> represents a number that is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToInt64">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="278a5-1479">Converts a specified value to a 64-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1479">Converts a specified value to a 64-bit signed integer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Boolean) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(bool value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : bool -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1480">The Boolean value to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1480">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1481">Converts the specified Boolean value to the equivalent 64-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1481">Converts the specified Boolean value to the equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1482">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1482">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1483">Das folgende Beispiel konvertiert die <xref:System.Boolean> Werte `true` und `false` zu einer langen ganzen Zahl.</span><span class="sxs-lookup"><span data-stu-id="278a5-1483">The following example converts the <xref:System.Boolean> values `true` and `false` to long integers.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#1)]
 [!code-vb[System.Convert.ToInt64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Byte) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : byte -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1484">The 8-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1484">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1485">Converts the value of the specified 8-bit unsigned integer to the equivalent 64-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1485">Converts the value of the specified 8-bit unsigned integer to the equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1486">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1486">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1487">Das folgende Beispiel konvertiert jedes Element in einem Array von Bytes in ein lange ganze Zahl.</span><span class="sxs-lookup"><span data-stu-id="278a5-1487">The following example converts each element in an array of bytes to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#2)]
 [!code-vb[System.Convert.ToInt64#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Char) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(char value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : char -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1488">The Unicode character to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1488">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1489">Converts the value of the specified Unicode character to the equivalent 64-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1489">Converts the value of the specified Unicode character to the equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1490">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1490">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1491">Das folgende Beispiel konvertiert jedes Element in einem <xref:System.Char> Array in ein lange ganze Zahl.</span><span class="sxs-lookup"><span data-stu-id="278a5-1491">The following example converts each element in a <xref:System.Char> array to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#3)]
 [!code-vb[System.Convert.ToInt64#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As DateTime) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : DateTime -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1492">The date and time value to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1492">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1493">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1493">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1494">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1494">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="278a5-1495">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1495">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-1496">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1496">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Decimal) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : decimal -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1497">The decimal number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1497">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1498">Converts the value of the specified decimal number to an equivalent 64-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1498">Converts the value of the specified decimal number to an equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1499">
            <paramref name="value" />, rounded to the nearest 64-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1499">
              <paramref name="value" />, rounded to the nearest 64-bit signed integer.</span>
          </span>
          <span data-ttu-id="278a5-1500">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1500">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1501">Im folgenden Beispiel wird versucht, jedes Element in einem Array von konvertieren <xref:System.Decimal> Werte in ein lange ganze Zahl.</span><span class="sxs-lookup"><span data-stu-id="278a5-1501">The following example attempts to convert each element in an array of <xref:System.Decimal> values to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#4)]
 [!code-vb[System.Convert.ToInt64#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1502">
            <paramref name="value" /> is greater than <see cref="F:System.Int64.MaxValue" /> or less than <see cref="F:System.Int64.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1502">
              <paramref name="value" /> is greater than <see cref="F:System.Int64.MaxValue" /> or less than <see cref="F:System.Int64.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Double) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(double value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : double -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1503">The double-precision floating-point number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1503">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1504">Converts the value of the specified double-precision floating-point number to an equivalent 64-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1504">Converts the value of the specified double-precision floating-point number to an equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1505">
            <paramref name="value" />, rounded to the nearest 64-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1505">
              <paramref name="value" />, rounded to the nearest 64-bit signed integer.</span>
          </span>
          <span data-ttu-id="278a5-1506">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1506">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1507">Im folgenden Beispiel wird versucht, jedes Element in einem Array von konvertieren <xref:System.Double> Werte in ein lange ganze Zahl.</span><span class="sxs-lookup"><span data-stu-id="278a5-1507">The following example attempts to convert each element in an array of <xref:System.Double> values to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#5)]
 [!code-vb[System.Convert.ToInt64#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1508">
            <paramref name="value" /> is greater than <see cref="F:System.Int64.MaxValue" /> or less than <see cref="F:System.Int64.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1508">
              <paramref name="value" /> is greater than <see cref="F:System.Int64.MaxValue" /> or less than <see cref="F:System.Int64.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Short) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(short value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : int16 -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1509">The 16-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1509">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1510">Converts the value of the specified 16-bit signed integer to an equivalent 64-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1510">Converts the value of the specified 16-bit signed integer to an equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1511">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1511">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1512">Das folgende Beispiel konvertiert jedes Element in einem Array von 16-Bit-Ganzzahlen in ein lange ganze Zahl.</span><span class="sxs-lookup"><span data-stu-id="278a5-1512">The following example converts each element in an array of 16-bit integers to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#6)]
 [!code-vb[System.Convert.ToInt64#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(int value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : int -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1513">The 32-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1513">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1514">Converts the value of the specified 32-bit signed integer to an equivalent 64-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1514">Converts the value of the specified 32-bit signed integer to an equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1515">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1515">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(long value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : int64 -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1516">A 64-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1516">A 64-bit signed integer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1517">Returns the specified 64-bit signed integer; no actual conversion is performed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1517">Returns the specified 64-bit signed integer; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1518">
            <paramref name="value" /> is returned unchanged.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1518">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1519">Das folgende Beispiel konvertiert jedes Element in einem Array von ganzen Zahlen in ein lange ganze Zahl.</span><span class="sxs-lookup"><span data-stu-id="278a5-1519">The following example converts each element in an array of integers to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#7)]
 [!code-vb[System.Convert.ToInt64#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Object) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : obj -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1520">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1520">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1521">Converts the value of the specified object to a 64-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1521">Converts the value of the specified object to a 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1522">A 64-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1522">A 64-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1523">Wenn `value` nicht `null`, diese Methode dient als Wrapper für einen Aufruf der <xref:System.IConvertible.ToInt64%2A?displayProperty=nameWithType> Implementierung des zugrunde liegenden Typs von `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-1523">If `value` is not `null`, this method wraps a call to the <xref:System.IConvertible.ToInt64%2A?displayProperty=nameWithType> implementation of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1524">Im folgenden Beispiel wird versucht, die jedes Element in einem Objektarray in ein lange ganze Zahl zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-1524">The following example attempts to convert each element in an object array to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#8)]
 [!code-vb[System.Convert.ToInt64#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-1525">
            <paramref name="value" /> is not in an appropriate format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1525">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-1526">
            <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1526">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="278a5-1527">-or-  The conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1527">-or-  The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1528">
            <paramref name="value" /> represents a number that is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1528">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As SByte) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : sbyte -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1529">The 8-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1529">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1530">Converts the value of the specified 8-bit signed integer to the equivalent 64-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1530">Converts the value of the specified 8-bit signed integer to the equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1531">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1531">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1532">Das folgende Beispiel konvertiert jedes Element in ein Bytearray mit Vorzeichen in einen long integer-Wert.</span><span class="sxs-lookup"><span data-stu-id="278a5-1532">The following example converts each element in a signed byte array to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#9)]
 [!code-vb[System.Convert.ToInt64#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Single) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(float value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : single -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1533">The single-precision floating-point number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1533">The single-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1534">Converts the value of the specified single-precision floating-point number to an equivalent 64-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1534">Converts the value of the specified single-precision floating-point number to an equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1535">
            <paramref name="value" />, rounded to the nearest 64-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1535">
              <paramref name="value" />, rounded to the nearest 64-bit signed integer.</span>
          </span>
          <span data-ttu-id="278a5-1536">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1536">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1537">Im folgenden Beispiel wird versucht, jedes Element in einem Array von konvertieren <xref:System.Single> Werte in ein lange ganze Zahl.</span><span class="sxs-lookup"><span data-stu-id="278a5-1537">The following example attempts to convert each element in an array of <xref:System.Single> values to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#10)]
 [!code-vb[System.Convert.ToInt64#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1538">
            <paramref name="value" /> is greater than <see cref="F:System.Int64.MaxValue" /> or less than <see cref="F:System.Int64.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1538">
              <paramref name="value" /> is greater than <see cref="F:System.Int64.MaxValue" /> or less than <see cref="F:System.Int64.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Single" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As String) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : string -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1539">A string that contains a number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1539">A string that contains a number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1540">Converts the specified string representation of a number to an equivalent 64-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1540">Converts the specified string representation of a number to an equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1541">A 64-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1541">A 64-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1542">Mithilfe der <xref:System.Convert.ToInt64%28System.String%29> Methode entspricht dem übergeben `value` auf die <xref:System.Int64.Parse%28System.String%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="278a5-1542">Using the <xref:System.Convert.ToInt64%28System.String%29> method is equivalent to passing `value` to the <xref:System.Int64.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="278a5-1543">`value` wird mithilfe der Formatierungskonventionen der aktuellen Threadkultur interpretiert.</span><span class="sxs-lookup"><span data-stu-id="278a5-1543">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="278a5-1544">Falls gewünscht, nicht um eine Ausnahme zu behandeln, wenn die Konvertierung fehlschlägt, können Sie rufen die <xref:System.Int64.TryParse%2A?displayProperty=nameWithType> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="278a5-1544">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Int64.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="278a5-1545">Es gibt eine <xref:System.Boolean> Wert, der angibt, ob die Konvertierung erfolgreich war oder nicht.</span><span class="sxs-lookup"><span data-stu-id="278a5-1545">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1546">Im folgenden Beispiel wird versucht, die jedes Element in einem Array von numerischen Zeichenfolgen in ein lange ganze Zahl zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-1546">The following example attempts to convert each element in an array of numeric strings to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#11)]
 [!code-vb[System.Convert.ToInt64#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-1547">
            <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1547">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1548">
            <paramref name="value" /> represents a number that is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1548">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As UShort) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : uint16 -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1549">The 16-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1549">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1550">Converts the value of the specified 16-bit unsigned integer to the equivalent 64-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1550">Converts the value of the specified 16-bit unsigned integer to the equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1551">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1551">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1552">Das folgende Beispiel konvertiert jedes Element in einem Array von 16-Bit-Ganzzahlen ohne Vorzeichen in einen long integer-Wert.</span><span class="sxs-lookup"><span data-stu-id="278a5-1552">The following example converts each element in an array of 16-bit unsigned integers to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#12)]
 [!code-vb[System.Convert.ToInt64#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As UInteger) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : uint32 -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1553">The 32-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1553">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1554">Converts the value of the specified 32-bit unsigned integer to an equivalent 64-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1554">Converts the value of the specified 32-bit unsigned integer to an equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1555">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1555">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1556">Das folgende Beispiel konvertiert jedes Element in einem Array von Ganzzahlen ohne Vorzeichen in einen long integer-Wert.</span><span class="sxs-lookup"><span data-stu-id="278a5-1556">The following example converts each element in an array of unsigned integers to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#13)]
 [!code-vb[System.Convert.ToInt64#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As ULong) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : uint64 -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1557">The 64-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1557">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1558">Converts the value of the specified 64-bit unsigned integer to an equivalent 64-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1558">Converts the value of the specified 64-bit unsigned integer to an equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1559">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1559">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1560">Im folgenden Beispiel wird versucht, die jedes Element in einem Array von Ganzzahlen ohne Vorzeichen in eine lange ganze Zahl zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-1560">The following example attempts to convert each element in an array of unsigned long integers to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#14)]
 [!code-vb[System.Convert.ToInt64#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1561">
            <paramref name="value" /> is greater than <see cref="F:System.Int64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1561">
              <paramref name="value" /> is greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Object, provider As IFormatProvider) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : obj * IFormatProvider -&gt; int64" Usage="System.Convert.ToInt64 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1562">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1562">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="278a5-1563">An object that supplies culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1563">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1564">Converts the value of the specified object to a 64-bit signed integer, using the specified culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1564">Converts the value of the specified object to a 64-bit signed integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1565">A 64-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1565">A 64-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1566">Der Rückgabewert ist das Ergebnis eines Aufrufs der <xref:System.IConvertible.ToInt64%2A?displayProperty=nameWithType> Methode des zugrunde liegenden Typs von `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-1566">The return value is the result of invoking the <xref:System.IConvertible.ToInt64%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="278a5-1567">`provider` ermöglicht es dem Benutzer an kulturspezifische Konvertierungsinformationen für den Inhalt des `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-1567">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="278a5-1568">Z. B. wenn `value` ist ein <xref:System.String> , die eine Zahl, `provider` bereitgestellt kulturspezifische Informationen über die Notation verwendet, um diese Zahl darzustellen.</span><span class="sxs-lookup"><span data-stu-id="278a5-1568">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="278a5-1569">Ignorieren Sie die Basistypen `provider`jedoch der Parameter kann verwendet werden, wenn `value` ist ein benutzerdefinierten Typ, der implementiert die <xref:System.IConvertible> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="278a5-1569">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1570">Das folgende Beispiel definiert eine Klasse, die implementiert <xref:System.IConvertible> und eine Klasse, die implementiert <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="278a5-1570">The following example defines a class that implements <xref:System.IConvertible> and a class that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="278a5-1571">Objekte der Klasse, die implementiert <xref:System.IConvertible> enthalten ein Array von <xref:System.Double> Werte.</span><span class="sxs-lookup"><span data-stu-id="278a5-1571">Objects of the class that implements <xref:System.IConvertible> hold an array of <xref:System.Double> values.</span></span> <span data-ttu-id="278a5-1572">Ein Objekt einer jeden Klasse übergeben wird, um die `ToInt64` Methode.</span><span class="sxs-lookup"><span data-stu-id="278a5-1572">An object of each class is passed to the `ToInt64` method.</span></span> <span data-ttu-id="278a5-1573">Diese Methode gibt Durchschnitt des Arrays mit <xref:System.Double> Werte, mit dem Objekt, das implementiert <xref:System.IFormatProvider> bestimmen, wie den Durchschnitt berechnet.</span><span class="sxs-lookup"><span data-stu-id="278a5-1573">This method returns an average of the array of <xref:System.Double> values, using the object that implements <xref:System.IFormatProvider> to determine how to calculate the average.</span></span>  
  
 [!code-cpp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CPP/objectifp.cpp#1)]
 [!code-csharp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CS/objectifp.cs#1)]
 [!code-vb[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/VB/objectifp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-1574">
            <paramref name="value" /> is not in an appropriate format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1574">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-1575">
            <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1575">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="278a5-1576">-or-  The conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1576">-or-  The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1577">
            <paramref name="value" /> represents a number that is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1577">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As String, provider As IFormatProvider) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : string * IFormatProvider -&gt; int64" Usage="System.Convert.ToInt64 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1578">A string that contains the number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1578">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="278a5-1579">An object that supplies culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1579">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1580">Converts the specified string representation of a number to an equivalent 64-bit signed integer, using the specified culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1580">Converts the specified string representation of a number to an equivalent 64-bit signed integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1581">A 64-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1581">A 64-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1582">Der Rückgabewert ist das Ergebnis eines Aufrufs der <xref:System.Int64.Parse%2A?displayProperty=nameWithType> Methode `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-1582">The return value is the result of invoking the <xref:System.Int64.Parse%2A?displayProperty=nameWithType> method on `value`.</span></span>  
  
 <span data-ttu-id="278a5-1583">`provider` ist ein `IFormatProvider` -Instanz, die erhält eine <xref:System.Globalization.NumberFormatInfo> Objekt.</span><span class="sxs-lookup"><span data-stu-id="278a5-1583">`provider` is an `IFormatProvider` instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="278a5-1584">Die `NumberFormatInfo` Objekt stellt kulturspezifische Informationen zum Format von `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-1584">The `NumberFormatInfo` object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="278a5-1585">Wenn `provider` ist `null`die `NumberFormatInfo` für die aktuelle Kultur verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="278a5-1585">If `provider` is `null`, the `NumberFormatInfo` for the current culture is used.</span></span>  
  
 <span data-ttu-id="278a5-1586">Falls gewünscht, nicht um eine Ausnahme zu behandeln, wenn die Konvertierung fehlschlägt, können Sie rufen die <xref:System.Int64.TryParse%2A?displayProperty=nameWithType> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="278a5-1586">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Int64.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="278a5-1587">Es gibt eine <xref:System.Boolean> Wert, der angibt, ob die Konvertierung erfolgreich war oder nicht.</span><span class="sxs-lookup"><span data-stu-id="278a5-1587">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1588">Das folgende Beispiel definiert ein benutzerdefiniertes <xref:System.Globalization.NumberFormatInfo> -Objekt, das die Zeichenfolge "pos" als positives Vorzeichen und die Zeichenfolge "Neg" als negativen Vorzeichen erkennt.</span><span class="sxs-lookup"><span data-stu-id="278a5-1588">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> object that recognizes the string "pos" as the positive sign and the string "neg" as the negative sign.</span></span> <span data-ttu-id="278a5-1589">Versuchen sie dann jedes Element eines Arrays numerische Zeichenfolge in eine ganze Zahl, die mit beiden dieser Anbieter zu konvertieren und die <xref:System.Globalization.NumberFormatInfo> Anbieter für die invariante Kultur.</span><span class="sxs-lookup"><span data-stu-id="278a5-1589">It then attempts to convert each element of a numeric string array to an integer using both this provider and the <xref:System.Globalization.NumberFormatInfo> provider for the invariant culture.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_3.cs#16)]
 [!code-vb[System.Convert.ToInt64#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_3.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-1590">
            <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1590">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1591">
            <paramref name="value" /> represents a number that is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1591">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (string value, int fromBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(string value, int32 fromBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As String, fromBase As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::String ^ value, int fromBase);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : string * int -&gt; int64" Usage="System.Convert.ToInt64 (value, fromBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1592">A string that contains the number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1592">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="fromBase">
          <span data-ttu-id="278a5-1593">The base of the number in <c>value</c>, which must be 2, 8, 10, or 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1593">The base of the number in <c>value</c>, which must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1594">Converts the string representation of a number in a specified base to an equivalent 64-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1594">Converts the string representation of a number in a specified base to an equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1595">A 64-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1595">A 64-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1596">Wenn `fromBase` 16 ist, können Sie die Anzahl von angegebenen Präfix der `value` Parameter mit "0 X" oder "0 X".</span><span class="sxs-lookup"><span data-stu-id="278a5-1596">If `fromBase` is 16, you can prefix the number specified by the `value` parameter with "0x" or "0X".</span></span>  
  
 <span data-ttu-id="278a5-1597">Da die negativen Vorzeichen nicht zur Basis 10 numerischen Darstellungen, nicht unterstützt werden die <xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29> Methode wird davon ausgegangen, dass negative Zahlen zwei des Komplement Darstellung verwenden.</span><span class="sxs-lookup"><span data-stu-id="278a5-1597">Because the negative sign is not supported for non-base 10 numeric representations, the <xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29> method assumes that negative numbers use two’s complement representation.</span></span> <span data-ttu-id="278a5-1598">Das heißt, interpretiert die Methode immer die binäre höchsten Bit einer langen ganzen Zahl (Bit 63) als Vorzeichenbit.</span><span class="sxs-lookup"><span data-stu-id="278a5-1598">In other words, the method always interprets the highest-order binary bit of a long integer (bit 63) as its sign bit.</span></span> <span data-ttu-id="278a5-1599">Daher ist es möglich, Schreiben Code, in dem eine nicht zur Basis 10 gehörende Zahl, wird außerhalb des Bereichs der <xref:System.Int64> -Datentyp in konvertiert ein <xref:System.Int64> Wert ohne die Methode eine Ausnahme auslöst.</span><span class="sxs-lookup"><span data-stu-id="278a5-1599">As a result, it is possible to write code in which a non-base 10 number that is out of the range of the <xref:System.Int64> data type is converted to an <xref:System.Int64> value without the method throwing an exception.</span></span> <span data-ttu-id="278a5-1600">Das folgende Beispiel konvertiert <xref:System.UInt64.MaxValue> auf die hexadezimale Darstellung, und ruft dann die <xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29> Methode.</span><span class="sxs-lookup"><span data-stu-id="278a5-1600">The following example converts <xref:System.UInt64.MaxValue> to its hexadecimal string representation, and then calls the <xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="278a5-1601">Anstatt eine Ausnahme auszulösen, die Methode zeigt die Meldung "0xFFFFFFFFFFFFFFFF konvertiert-1".</span><span class="sxs-lookup"><span data-stu-id="278a5-1601">Instead of throwing an exception, the method displays the message, "0xFFFFFFFFFFFFFFFF converts to -1."</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#7)]
 [!code-vb[System.Convert.BaseConversion#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#7)]  
  
 <span data-ttu-id="278a5-1602">Wenn Sie binäre Operationen oder numerische Konvertierungen durchführen zu können, ist es immer der Verantwortung des Entwicklers, stellen Sie sicher, dass eine Methode die entsprechenden numerische Darstellung verwendet, um einen bestimmten Wert zu interpretieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-1602">When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method is using the appropriate numeric representation to interpret a particular value.</span></span> <span data-ttu-id="278a5-1603">Wie im folgende Beispiel veranschaulicht wird, können Sie sicherstellen, dass die Methode verarbeitet führt zu einem Überlauf entsprechend zunächst durch bestimmen, ob ein Wert einen nicht signierten darstellt oder einen signierten Typ Wenn es in die hexadezimale Zeichenfolgendarstellung konvertiert.</span><span class="sxs-lookup"><span data-stu-id="278a5-1603">As the following example illustrates, you can ensure that the method handles overflows appropriately by first determining whether a value represents an unsigned or a signed type when converting it to its hexadecimal string representation.</span></span> <span data-ttu-id="278a5-1604">Löst eine Ausnahme aus, wenn der ursprüngliche Wert ein Typ ohne Vorzeichen war, aber die Konvertierung zurück in eine ganze Zahl den Wert, der ergibt auf, deren Vorzeichenbit ist.</span><span class="sxs-lookup"><span data-stu-id="278a5-1604">Throw an exception if the original value was an unsigned type but the conversion back to an integer yields a value whose sign bit is on.</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#8)]
 [!code-vb[System.Convert.BaseConversion#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#8)]  
  
 <span data-ttu-id="278a5-1605">Im folgenden Beispiel wird versucht, die jedes Element in einem Zeichenfolgenarray als hexadezimale Zeichenfolge zu interpretieren, und konvertieren Sie ihn in ein lange ganze Zahl.</span><span class="sxs-lookup"><span data-stu-id="278a5-1605">The following example attempts to interpret each element in a string array as a hexadecimal string and convert it to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_2.cs#15)]
 [!code-vb[System.Convert.ToInt64#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_2.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="278a5-1606">
            <paramref name="fromBase" /> is not 2, 8, 10, or 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1606">
              <paramref name="fromBase" /> is not 2, 8, 10, or 16.</span>
          </span>
          <span data-ttu-id="278a5-1607">-or-  <paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1607">-or-  <paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="278a5-1608">
            <paramref name="value" /> is <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1608">
              <paramref name="value" /> is <see cref="F:System.String.Empty" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-1609">
            <paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1609">
              <paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span>
          </span>
          <span data-ttu-id="278a5-1610">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1610">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1611">
            <paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1611">
              <paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span>
          </span>
          <span data-ttu-id="278a5-1612">-or-  <paramref name="value" /> represents a number that is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1612">-or-  <paramref name="value" /> represents a number that is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToSByte">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="278a5-1613">Converts a specified value to an 8-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1613">Converts a specified value to an 8-bit signed integer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Boolean) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(bool value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : bool -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1614">The Boolean value to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1614">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1615">Converts the specified Boolean value to the equivalent 8-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1615">Converts the specified Boolean value to the equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1616">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1616">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1617">Das folgende Beispiel konvertiert die booleschen Werte `true` und `false` Bytewerten angemeldet.</span><span class="sxs-lookup"><span data-stu-id="278a5-1617">The following example converts the Boolean values `true` and `false` to signed byte values.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#1)]
 [!code-vb[System.Convert.ToSByte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Byte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : byte -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1618">The 8-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1618">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1619">Converts the value of the specified 8-bit unsigned integer to the equivalent 8-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1619">Converts the value of the specified 8-bit unsigned integer to the equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1620">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1620">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1621">Im folgenden Beispiel wird versucht, die jedes Element in einem Bytearray in einen Bytewert mit Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-1621">The following example attempts to convert each element in a byte array to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#2)]
 [!code-vb[System.Convert.ToSByte#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1622">
            <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1622">
              <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Char) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(char value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : char -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1623">The Unicode character to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1623">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1624">Converts the value of the specified Unicode character to the equivalent 8-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1624">Converts the value of the specified Unicode character to the equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1625">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1625">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1626">Im folgenden Beispiel wird versucht, jedes Element in einem Array von konvertieren <xref:System.Char> Werte für einen Bytewert mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="278a5-1626">The following example attempts to convert each element in an array of <xref:System.Char> values to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#3)]
 [!code-vb[System.Convert.ToSByte#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1627">
            <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1627">
              <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As DateTime) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : DateTime -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1628">The date and time value to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1628">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1629">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1629">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1630">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1630">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="278a5-1631">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1631">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-1632">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1632">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Decimal) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : decimal -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1633">The decimal number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1633">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1634">Converts the value of the specified decimal number to an equivalent 8-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1634">Converts the value of the specified decimal number to an equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1635">
            <paramref name="value" />, rounded to the nearest 8-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1635">
              <paramref name="value" />, rounded to the nearest 8-bit signed integer.</span>
          </span>
          <span data-ttu-id="278a5-1636">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1636">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1637">Im folgenden Beispiel wird versucht, jedes Element in einem Array von konvertieren <xref:System.Decimal> Werte für einen Bytewert mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="278a5-1637">The following example attempts to convert each element in an array of <xref:System.Decimal> values to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#4)]
 [!code-vb[System.Convert.ToSByte#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1638">
            <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1638">
              <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Double) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(double value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : double -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1639">The double-precision floating-point number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1639">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1640">Converts the value of the specified double-precision floating-point number to an equivalent 8-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1640">Converts the value of the specified double-precision floating-point number to an equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1641">
            <paramref name="value" />, rounded to the nearest 8-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1641">
              <paramref name="value" />, rounded to the nearest 8-bit signed integer.</span>
          </span>
          <span data-ttu-id="278a5-1642">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1642">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1643">Im folgenden Beispiel wird versucht, jedes Element in einem Array von konvertieren <xref:System.Double> Werte für einen Bytewert mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="278a5-1643">The following example attempts to convert each element in an array of <xref:System.Double> values to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#5)]
 [!code-vb[System.Convert.ToSByte#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1644">
            <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1644">
              <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Short) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(short value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : int16 -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1645">The 16-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1645">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1646">Converts the value of the specified 16-bit signed integer to the equivalent 8-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1646">Converts the value of the specified 16-bit signed integer to the equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1647">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1647">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1648">Im folgenden Beispiel wird versucht, die jedes Element in einem Array von 16-Bit-Ganzzahlen mit Vorzeichen in einen Bytewert mit Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-1648">The following example attempts to convert each element in an array of signed 16-bit integers to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#6)]
 [!code-vb[System.Convert.ToSByte#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1649">
            <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1649">
              <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Integer) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(int value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : int -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1650">The 32-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1650">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1651">Converts the value of the specified 32-bit signed integer to an equivalent 8-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1651">Converts the value of the specified 32-bit signed integer to an equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1652">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1652">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1653">Im folgenden Beispiel wird versucht, die jedes Element in einem Array von Ganzzahlen mit Vorzeichen in einen Bytewert mit Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-1653">The following example attempts to convert each element in an array of signed integers to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#7)]
 [!code-vb[System.Convert.ToSByte#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1654">
            <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1654">
              <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Long) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(long value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : int64 -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1655">The 64-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1655">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1656">Converts the value of the specified 64-bit signed integer to an equivalent 8-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1656">Converts the value of the specified 64-bit signed integer to an equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1657">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1657">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1658">Im folgenden Beispiel wird versucht, die jedes Element in einem Array von langen ganzen Zahlen in einen Bytewert mit Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-1658">The following example attempts to convert each element in an array of long integers to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#8)]
 [!code-vb[System.Convert.ToSByte#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1659">
            <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1659">
              <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Object) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : obj -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1660">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1660">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1661">Converts the value of the specified object to an 8-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1661">Converts the value of the specified object to an 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1662">An 8-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1662">An 8-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1663">Der Rückgabewert ist das Ergebnis eines Aufrufs der <xref:System.IConvertible.ToSByte%2A?displayProperty=nameWithType> Methode des zugrunde liegenden Typs von `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-1663">The return value is the result of invoking the <xref:System.IConvertible.ToSByte%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1664">Im folgenden Beispiel wird versucht, die jedes Element in einem Objektarray in einen Bytewert mit Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-1664">The following example attempts to convert each element in an object array to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#9)]
 [!code-vb[System.Convert.ToSByte#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-1665">
            <paramref name="value" /> is not in an appropriate format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1665">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-1666">
            <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1666">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="278a5-1667">-or-  The conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1667">-or-  The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1668">
            <paramref name="value" /> represents a number that is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1668">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : sbyte -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1669">The 8-bit signed integer to return.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1669">The 8-bit signed integer to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1670">Returns the specified 8-bit signed integer; no actual conversion is performed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1670">Returns the specified 8-bit signed integer; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1671">
            <paramref name="value" /> is returned unchanged.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1671">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Single) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(float value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : single -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1672">The single-precision floating-point number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1672">The single-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1673">Converts the value of the specified single-precision floating-point number to an equivalent 8-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1673">Converts the value of the specified single-precision floating-point number to an equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1674">
            <paramref name="value" />, rounded to the nearest 8-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1674">
              <paramref name="value" />, rounded to the nearest 8-bit signed integer.</span>
          </span>
          <span data-ttu-id="278a5-1675">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1675">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1676">Im folgenden Beispiel wird versucht, jedes Element in einem Array von konvertieren <xref:System.Single> Werte für einen Bytewert mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="278a5-1676">The following example attempts to convert each element in an array of <xref:System.Single> values to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#9)]
 [!code-vb[System.Convert.ToSByte#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1677">
            <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1677">
              <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Single" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As String) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : string -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1678">A string that contains the number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1678">A string that contains the number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1679">Converts the specified string representation of a number to an equivalent 8-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1679">Converts the specified string representation of a number to an equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1680">An 8-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if value is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1680">An 8-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if value is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1681">Mithilfe der <xref:System.Convert.ToSByte%28System.String%29> Methode entspricht dem übergeben `value` auf die <xref:System.SByte.Parse%28System.String%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="278a5-1681">Using the <xref:System.Convert.ToSByte%28System.String%29> method is equivalent to passing `value` to the <xref:System.SByte.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="278a5-1682">`value` wird mithilfe der Formatierungskonventionen der aktuellen Threadkultur interpretiert.</span><span class="sxs-lookup"><span data-stu-id="278a5-1682">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="278a5-1683">Falls gewünscht, nicht um eine Ausnahme zu behandeln, wenn die Konvertierung fehlschlägt, können Sie rufen die <xref:System.SByte.TryParse%2A?displayProperty=nameWithType> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="278a5-1683">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.SByte.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="278a5-1684">Es gibt eine <xref:System.Boolean> Wert, der angibt, ob die Konvertierung erfolgreich war oder nicht.</span><span class="sxs-lookup"><span data-stu-id="278a5-1684">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1685">Das folgende Beispiel konvertiert die zeichenfolgendarstellungen <xref:System.SByte> Werte mit der `ToSByte` Methode unter Verwendung der standardformatierung.</span><span class="sxs-lookup"><span data-stu-id="278a5-1685">The following example converts string representations of <xref:System.SByte> values with the `ToSByte` method, using default formatting.</span></span>  
  
 [!code-cpp[System.Convert.ToSInts_String#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToSInts_String/CPP/tosbyte.cpp#4)]
 [!code-csharp[System.Convert.ToSInts_String#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToSInts_String/CS/tosbyte.cs#4)]
 [!code-vb[System.Convert.ToSInts_String#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToSInts_String/VB/tosbyte.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-1686">
            <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1686">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1687">
            <paramref name="value" /> represents a number that is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1687">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.SByte.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As UShort) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : uint16 -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1688">The 16-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1688">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1689">Converts the value of the specified 16-bit unsigned integer to the equivalent 8-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1689">Converts the value of the specified 16-bit unsigned integer to the equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1690">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1690">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1691">Im folgenden Beispiel wird versucht, die jedes Element in einem Array von 16-Bit-Ganzzahlen ohne Vorzeichen in einen Bytewert mit Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-1691">The following example attempts to convert each element in an array of unsigned 16-bit integers to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#11)]
 [!code-vb[System.Convert.ToSByte#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1692">
            <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1692">
              <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As UInteger) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : uint32 -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1693">The 32-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1693">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1694">Converts the value of the specified 32-bit unsigned integer to an equivalent 8-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1694">Converts the value of the specified 32-bit unsigned integer to an equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1695">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1695">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1696">Im folgenden Beispiel wird versucht, die jedes Element in ein Array von Ganzzahlen in einen Bytewert mit Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-1696">The following example attempts to convert each element in an integer array to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#12)]
 [!code-vb[System.Convert.ToSByte#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1697">
            <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1697">
              <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As ULong) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : uint64 -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1698">The 64-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1698">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1699">Converts the value of the specified 64-bit unsigned integer to an equivalent 8-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1699">Converts the value of the specified 64-bit unsigned integer to an equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1700">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1700">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1701">Im folgenden Beispiel wird versucht, die jedes Element in einem Array von langen ganzen Zahlen in einen Bytewert mit Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-1701">The following example attempts to convert each element in an array of long integers to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#13)]
 [!code-vb[System.Convert.ToSByte#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1702">
            <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1702">
              <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Object, provider As IFormatProvider) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToSByte : obj * IFormatProvider -&gt; sbyte" Usage="System.Convert.ToSByte (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1703">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1703">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="278a5-1704">An object that supplies culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1704">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1705">Converts the value of the specified object to an 8-bit signed integer, using the specified culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1705">Converts the value of the specified object to an 8-bit signed integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1706">An 8-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1706">An 8-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1707">`provider` ermöglicht es dem Benutzer an kulturspezifische Konvertierungsinformationen für den Inhalt des `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-1707">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="278a5-1708">Z. B. wenn `value` ist ein <xref:System.String> , die eine Zahl, `provider` bereitgestellt kulturspezifische Informationen über die Notation verwendet, um diese Zahl darzustellen.</span><span class="sxs-lookup"><span data-stu-id="278a5-1708">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="278a5-1709">Ignorieren Sie die Basistypen `provider`jedoch der Parameter kann verwendet werden, wenn `value` ist ein benutzerdefinierten Typ, der implementiert die <xref:System.IConvertible> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="278a5-1709">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1710">Das folgende Beispiel definiert eine `ByteString` -Klasse, die beide speichert signierten und nicht signierten Bytes als hexadezimale Zeichenfolgen mit einem Feld, die das Vorzeichen des Bytes angibt.</span><span class="sxs-lookup"><span data-stu-id="278a5-1710">The following example defines a `ByteString` class that stores both signed and unsigned bytes as hexadecimal strings along with a field that indicates the sign of the byte.</span></span> <span data-ttu-id="278a5-1711">Die `ByteString`-Klasse implementiert die <xref:System.IConvertible>-Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="278a5-1711">The `ByteString` class implements the <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="278a5-1712">Die <xref:System.IConvertible.ToSByte%2A?displayProperty=nameWithType> Methodenaufrufe der <xref:System.SByte.Parse%28System.String%2CSystem.IFormatProvider%29> Methode zum Durchführen der Konvertierung.</span><span class="sxs-lookup"><span data-stu-id="278a5-1712">Its <xref:System.IConvertible.ToSByte%2A?displayProperty=nameWithType> method calls the <xref:System.SByte.Parse%28System.String%2CSystem.IFormatProvider%29> method to perform the conversion.</span></span> <span data-ttu-id="278a5-1713">Wenn dies fehlschlägt, löst sie eine <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="278a5-1713">If it fails, it throws an <xref:System.OverflowException>.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte2.cs#14)]
 [!code-vb[System.Convert.ToSByte#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte2.vb#14)]  
  
 <span data-ttu-id="278a5-1714">Das folgende Beispiel zeigt wie die <xref:System.IConvertible.ToSByte%2A?displayProperty=nameWithType> Implementierung der `ByteString` Klasse wird aufgerufen, indem Sie die <xref:System.Convert.ToSByte%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="278a5-1714">The following example shows how the <xref:System.IConvertible.ToSByte%2A?displayProperty=nameWithType> implementation of the `ByteString` class is called by the <xref:System.Convert.ToSByte%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte2.cs#15)]
 [!code-vb[System.Convert.ToSByte#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte2.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-1715">
            <paramref name="value" /> is not in an appropriate format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1715">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-1716">
            <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1716">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="278a5-1717">-or-  The conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1717">-or-  The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1718">
            <paramref name="value" /> represents a number that is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1718">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As String, provider As IFormatProvider) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToSByte : string * IFormatProvider -&gt; sbyte" Usage="System.Convert.ToSByte (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1719">A string that contains the number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1719">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="278a5-1720">An object that supplies culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1720">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1721">Converts the specified string representation of a number to an equivalent 8-bit signed integer, using the specified culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1721">Converts the specified string representation of a number to an equivalent 8-bit signed integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1722">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1722">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1723">`provider` ist ein <xref:System.IFormatProvider> -Instanz, die erhält eine <xref:System.Globalization.NumberFormatInfo> Objekt.</span><span class="sxs-lookup"><span data-stu-id="278a5-1723">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="278a5-1724">Die <xref:System.Globalization.NumberFormatInfo> Objekt stellt kulturspezifische Informationen zum Format von `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-1724">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="278a5-1725">Wenn `provider` ist `null`die <xref:System.Globalization.NumberFormatInfo> für die aktuelle Kultur verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="278a5-1725">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="278a5-1726">Falls gewünscht, nicht um eine Ausnahme zu behandeln, wenn die Konvertierung fehlschlägt, können Sie rufen die <xref:System.SByte.TryParse%2A?displayProperty=nameWithType> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="278a5-1726">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.SByte.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="278a5-1727">Es gibt eine <xref:System.Boolean> Wert, der angibt, ob die Konvertierung erfolgreich war oder nicht.</span><span class="sxs-lookup"><span data-stu-id="278a5-1727">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1728">Das folgende Beispiel konvertiert die zeichenfolgendarstellungen <xref:System.SByte> Werte mit den `ToSByte` -Methode, mit einer <xref:System.IFormatProvider> Objekt.</span><span class="sxs-lookup"><span data-stu-id="278a5-1728">The following example converts string representations of <xref:System.SByte> values with the `ToSByte` method, using an <xref:System.IFormatProvider> object.</span></span>  
  
 [!code-cpp[System.Convert.ToSInts_String#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToSInts_String/CPP/tosbyte.cpp#4)]
 [!code-csharp[System.Convert.ToSInts_String#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToSInts_String/CS/tosbyte.cs#4)]
 [!code-vb[System.Convert.ToSInts_String#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToSInts_String/VB/tosbyte.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="278a5-1729">
            <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1729">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-1730">
            <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1730">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1731">
            <paramref name="value" /> represents a number that is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1731">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.SByte.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (string value, int fromBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(string value, int32 fromBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As String, fromBase As Integer) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::String ^ value, int fromBase);" />
      <MemberSignature Language="F#" Value="static member ToSByte : string * int -&gt; sbyte" Usage="System.Convert.ToSByte (value, fromBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1732">A string that contains the number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1732">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="fromBase">
          <span data-ttu-id="278a5-1733">The base of the number in <c>value</c>, which must be 2, 8, 10, or 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1733">The base of the number in <c>value</c>, which must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1734">Converts the string representation of a number in a specified base to an equivalent 8-bit signed integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1734">Converts the string representation of a number in a specified base to an equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1735">An 8-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1735">An 8-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1736">Wenn `fromBase` 16 ist, können Sie die Anzahl von angegebenen Präfix der `value` Parameter mit "0 X" oder "0 X".</span><span class="sxs-lookup"><span data-stu-id="278a5-1736">If `fromBase` is 16, you can prefix the number specified by the `value` parameter with "0x" or "0X".</span></span>  
  
 <span data-ttu-id="278a5-1737">Da die negativen Vorzeichen nicht zur Basis 10 numerischen Darstellungen, nicht unterstützt werden die <xref:System.Convert.ToSByte%28System.String%2CSystem.Int32%29> Methode wird davon ausgegangen, dass negative Zahlen zwei des Komplement Darstellung verwenden.</span><span class="sxs-lookup"><span data-stu-id="278a5-1737">Because the negative sign is not supported for non-base 10 numeric representations, the <xref:System.Convert.ToSByte%28System.String%2CSystem.Int32%29> method assumes that negative numbers use two’s complement representation.</span></span> <span data-ttu-id="278a5-1738">Das heißt, interpretiert die Methode das höchstwertige Bit eines Bytes (7-Bit) immer als Vorzeichenbit.</span><span class="sxs-lookup"><span data-stu-id="278a5-1738">In other words, the method always interprets the high-order bit of a byte (bit 7) as its sign bit.</span></span> <span data-ttu-id="278a5-1739">Daher ist es möglich, Schreiben Code, in dem eine nicht zur Basis 10 gehörende Zahl, wird außerhalb des Bereichs der <xref:System.SByte> -Datentyp in konvertiert ein <xref:System.SByte> Wert ohne die Methode eine Ausnahme auslöst.</span><span class="sxs-lookup"><span data-stu-id="278a5-1739">As a result, it is possible to write code in which a non-base 10 number that is out of the range of the <xref:System.SByte> data type is converted to an <xref:System.SByte> value without the method throwing an exception.</span></span> <span data-ttu-id="278a5-1740">Das folgende Beispiel konvertiert <xref:System.Byte.MaxValue> auf die hexadezimale Darstellung, und ruft dann die <xref:System.Convert.ToSByte%28System.String%2CSystem.Int32%29> Methode.</span><span class="sxs-lookup"><span data-stu-id="278a5-1740">The following example converts <xref:System.Byte.MaxValue> to its hexadecimal string representation, and then calls the <xref:System.Convert.ToSByte%28System.String%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="278a5-1741">Anstatt eine Ausnahme auszulösen, die Methode zeigt die Meldung "0xff konvertiert-1".</span><span class="sxs-lookup"><span data-stu-id="278a5-1741">Instead of throwing an exception, the method displays the message, "0xff converts to -1."</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#9)]
 [!code-vb[System.Convert.BaseConversion#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#9)]  
  
 <span data-ttu-id="278a5-1742">Wenn Sie binäre Operationen oder numerische Konvertierungen durchführen zu können, ist es immer der Verantwortung des Entwicklers, stellen Sie sicher, dass eine Methode die entsprechenden numerische Darstellung verwendet, um einen bestimmten Wert zu interpretieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-1742">When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method is using the appropriate numeric representation to interpret a particular value.</span></span> <span data-ttu-id="278a5-1743">Wie im folgende Beispiel veranschaulicht wird, können Sie sicherstellen, dass die Methode verarbeitet führt zu einem Überlauf entsprechend zunächst durch bestimmen, ob ein Wert einen nicht signierten darstellt oder einen signierten Typ Wenn es in die hexadezimale Zeichenfolgendarstellung konvertiert.</span><span class="sxs-lookup"><span data-stu-id="278a5-1743">As the following example illustrates, you can ensure that the method handles overflows appropriately by first determining whether a value represents an unsigned or a signed type when converting it to its hexadecimal string representation.</span></span> <span data-ttu-id="278a5-1744">Löst eine Ausnahme aus, wenn der ursprüngliche Wert ein Typ ohne Vorzeichen war, aber die Konvertierung zurück in einen Bytewert mit Vorzeichen den Wert, der ergibt auf, deren Vorzeichenbit ist.</span><span class="sxs-lookup"><span data-stu-id="278a5-1744">Throw an exception if the original value was an unsigned type but the conversion back to a signed byte yields a value whose sign bit is on.</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#10)]
 [!code-vb[System.Convert.BaseConversion#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#10)]  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1745">Im folgenden Beispiel wird versucht, die Elemente in einem Zeichenfolgenarray als binäre, oktale und hexadezimale Darstellung der numerischen Werte auswerten, um sie in Bytes ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-1745">The following example attempts to interpret the elements in a string array as the binary, octal, and hexadecimal representation of numeric values in order to convert them to unsigned bytes.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte3.cs#16)]
 [!code-vb[System.Convert.ToSByte#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte3.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="278a5-1746">
            <paramref name="fromBase" /> is not 2, 8, 10, or 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1746">
              <paramref name="fromBase" /> is not 2, 8, 10, or 16.</span>
          </span>
          <span data-ttu-id="278a5-1747">-or-  <paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1747">-or-  <paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="278a5-1748">
            <paramref name="value" /> is <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1748">
              <paramref name="value" /> is <see cref="F:System.String.Empty" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-1749">
            <paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1749">
              <paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span>
          </span>
          <span data-ttu-id="278a5-1750">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1750">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1751">
            <paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1751">
              <paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span>
          </span>
          <span data-ttu-id="278a5-1752">-or-  <paramref name="value" /> represents a number that is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1752">-or-  <paramref name="value" /> represents a number that is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToSingle">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="278a5-1753">Converts a specified value to a single-precision floating-point number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1753">Converts a specified value to a single-precision floating-point number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Boolean) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(bool value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : bool -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1754">The Boolean value to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1754">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1755">Converts the specified Boolean value to the equivalent single-precision floating-point number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1755">Converts the specified Boolean value to the equivalent single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1756">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1756">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1757">Das folgende Beispiel konvertiert die booleschen Werte `true` und `false` zu <xref:System.Single> Werte.</span><span class="sxs-lookup"><span data-stu-id="278a5-1757">The following example converts the Boolean values `true` and `false` to <xref:System.Single> values.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#1)]
 [!code-vb[System.Convert.ToSingle#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Byte) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : byte -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1758">The 8-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1758">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1759">Converts the value of the specified 8-bit unsigned integer to the equivalent single-precision floating-point number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1759">Converts the value of the specified 8-bit unsigned integer to the equivalent single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1760">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1760">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1761">Das folgende Beispiel konvertiert jedes Element in einem Array von Bytewerten zu einem <xref:System.Single> Wert.</span><span class="sxs-lookup"><span data-stu-id="278a5-1761">The following example converts each element in an array of byte values to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#2)]
 [!code-vb[System.Convert.ToSingle#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Char) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(char value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : char -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1762">The Unicode character to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1762">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1763">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1763">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1764">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1764">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="278a5-1765">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1765">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-1766">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1766">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As DateTime) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : DateTime -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1767">The date and time value to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1767">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1768">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1768">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1769">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1769">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="278a5-1770">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1770">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-1771">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1771">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Decimal) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : decimal -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1772">The decimal number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1772">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1773">Converts the value of the specified decimal number to an equivalent single-precision floating-point number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1773">Converts the value of the specified decimal number to an equivalent single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1774">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1774">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="278a5-1775">
            <paramref name="value" /> is rounded using rounding to nearest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1775">
              <paramref name="value" /> is rounded using rounding to nearest.</span>
          </span>
          <span data-ttu-id="278a5-1776">For example, when rounded to two decimals, the value 2.345 becomes 2.34 and the value 2.355 becomes 2.36.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1776">For example, when rounded to two decimals, the value 2.345 becomes 2.34 and the value 2.355 becomes 2.36.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1777">Das folgende Beispiel konvertiert jedes Element in einem Array von <xref:System.Decimal> -Werte an ein <xref:System.Single> Wert.</span><span class="sxs-lookup"><span data-stu-id="278a5-1777">The following example converts each element in an array of <xref:System.Decimal> values to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#3)]
 [!code-vb[System.Convert.ToSingle#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Double) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(double value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : double -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1778">The double-precision floating-point number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1778">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1779">Converts the value of the specified double-precision floating-point number to an equivalent single-precision floating-point number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1779">Converts the value of the specified double-precision floating-point number to an equivalent single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1780">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1780">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="278a5-1781">
            <paramref name="value" /> is rounded using rounding to nearest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1781">
              <paramref name="value" /> is rounded using rounding to nearest.</span>
          </span>
          <span data-ttu-id="278a5-1782">For example, when rounded to two decimals, the value 2.345 becomes 2.34 and the value 2.355 becomes 2.36.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1782">For example, when rounded to two decimals, the value 2.345 becomes 2.34 and the value 2.355 becomes 2.36.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1783">Das folgende Beispiel konvertiert jedes Element in einem Array von <xref:System.Double> -Werte an ein <xref:System.Single> Wert.</span><span class="sxs-lookup"><span data-stu-id="278a5-1783">The following example converts each element in an array of <xref:System.Double> values to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#4)]
 [!code-vb[System.Convert.ToSingle#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Short) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(short value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : int16 -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1784">The 16-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1784">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1785">Converts the value of the specified 16-bit signed integer to an equivalent single-precision floating-point number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1785">Converts the value of the specified 16-bit signed integer to an equivalent single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1786">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1786">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1787">Das folgende Beispiel konvertiert jedes Element in einem Array von 16-Bit-Ganzzahlen in einem <xref:System.Single> Wert.</span><span class="sxs-lookup"><span data-stu-id="278a5-1787">The following example converts each element in an array of 16-bit integers to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#5)]
 [!code-vb[System.Convert.ToSingle#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(int value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : int -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1788">The 32-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1788">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1789">Converts the value of the specified 32-bit signed integer to an equivalent single-precision floating-point number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1789">Converts the value of the specified 32-bit signed integer to an equivalent single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1790">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1790">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1791">Das folgende Beispiel konvertiert jedes Element in ein Array von Ganzzahlen, eine <xref:System.Single> Wert.</span><span class="sxs-lookup"><span data-stu-id="278a5-1791">The following example converts each element in an integer array to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#6)]
 [!code-vb[System.Convert.ToSingle#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Long) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(long value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : int64 -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1792">The 64-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1792">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1793">Converts the value of the specified 64-bit signed integer to an equivalent single-precision floating-point number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1793">Converts the value of the specified 64-bit signed integer to an equivalent single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1794">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1794">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1795">Das folgende Beispiel konvertiert jedes Element in einem Array von langen ganzen Zahlen um einen <xref:System.Single> Wert.</span><span class="sxs-lookup"><span data-stu-id="278a5-1795">The following example converts each element in an array of long integers to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#7)]
 [!code-vb[System.Convert.ToSingle#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Object) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : obj -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1796">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1796">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1797">Converts the value of the specified object to a single-precision floating-point number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1797">Converts the value of the specified object to a single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1798">A single-precision floating-point number that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1798">A single-precision floating-point number that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1799">Der Rückgabewert ist das Ergebnis eines Aufrufs der <xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType> Methode des zugrunde liegenden Typs von `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-1799">The return value is the result of invoking the <xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1800">Im folgenden Beispiel wird versucht, um jedes Element in einem Objektarray zum Konvertieren einer <xref:System.Single> Wert.</span><span class="sxs-lookup"><span data-stu-id="278a5-1800">The following example attempts to convert each element in an object array to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#8)]
 [!code-vb[System.Convert.ToSingle#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-1801">
            <paramref name="value" /> is not in an appropriate format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1801">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-1802">
            <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1802">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="278a5-1803">-or-  The conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1803">-or-  The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1804">
            <paramref name="value" /> represents a number that is less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1804">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As SByte) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : sbyte -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1805">The 8-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1805">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1806">Converts the value of the specified 8-bit signed integer to the equivalent single-precision floating-point number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1806">Converts the value of the specified 8-bit signed integer to the equivalent single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1807">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1807">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1808">Das folgende Beispiel konvertiert jedes Element in ein Bytearray mit Vorzeichen an einem <xref:System.Single> Wert.</span><span class="sxs-lookup"><span data-stu-id="278a5-1808">The following example converts each element in a signed byte array to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#9)]
 [!code-vb[System.Convert.ToSingle#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(float value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : single -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1809">The single-precision floating-point number to return.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1809">The single-precision floating-point number to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1810">Returns the specified single-precision floating-point number; no actual conversion is performed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1810">Returns the specified single-precision floating-point number; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1811">
            <paramref name="value" /> is returned unchanged.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1811">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As String) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : string -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1812">A string that contains the number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1812">A string that contains the number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1813">Converts the specified string representation of a number to an equivalent single-precision floating-point number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1813">Converts the specified string representation of a number to an equivalent single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1814">A single-precision floating-point number that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1814">A single-precision floating-point number that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1815">Mithilfe der <xref:System.Convert.ToSingle%28System.String%29> Methode entspricht dem übergeben `value` auf die <xref:System.Single.Parse%28System.String%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="278a5-1815">Using the <xref:System.Convert.ToSingle%28System.String%29> method is equivalent to passing `value` to the <xref:System.Single.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="278a5-1816">`value` wird mithilfe der Formatierungskonventionen der aktuellen Threadkultur interpretiert.</span><span class="sxs-lookup"><span data-stu-id="278a5-1816">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="278a5-1817">Falls gewünscht, nicht um eine Ausnahme zu behandeln, wenn die Konvertierung fehlschlägt, können Sie rufen die <xref:System.Single.TryParse%2A?displayProperty=nameWithType> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="278a5-1817">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Single.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="278a5-1818">Es gibt eine <xref:System.Boolean> Wert, der angibt, ob die Konvertierung erfolgreich war oder nicht.</span><span class="sxs-lookup"><span data-stu-id="278a5-1818">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1819">Im folgenden Beispiel wird versucht, jedes Element in einem Array von numerischen Zeichenfolgen zu konvertieren einer <xref:System.Single> Wert.</span><span class="sxs-lookup"><span data-stu-id="278a5-1819">The following example attempts to convert each element in an array of numeric strings to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#10)]
 [!code-vb[System.Convert.ToSingle#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-1820">
            <paramref name="value" /> is not a number in a valid format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1820">
              <paramref name="value" /> is not a number in a valid format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1821">
            <paramref name="value" /> represents a number that is less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1821">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As UShort) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : uint16 -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1822">The 16-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1822">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1823">Converts the value of the specified 16-bit unsigned integer to the equivalent single-precision floating-point number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1823">Converts the value of the specified 16-bit unsigned integer to the equivalent single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1824">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1824">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1825">Das folgende Beispiel konvertiert jedes Element in einem Array von 16-Bit-Ganzzahlen ohne Vorzeichen zu einem <xref:System.Single> Wert.</span><span class="sxs-lookup"><span data-stu-id="278a5-1825">The following example converts each element in an array of unsigned 16-bit integers to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#11)]
 [!code-vb[System.Convert.ToSingle#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As UInteger) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : uint32 -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1826">The 32-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1826">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1827">Converts the value of the specified 32-bit unsigned integer to an equivalent single-precision floating-point number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1827">Converts the value of the specified 32-bit unsigned integer to an equivalent single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1828">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1828">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1829">Das folgende Beispiel konvertiert jedes Element in einem Array von Ganzzahlen ohne Vorzeichen in eine <xref:System.Single> Wert.</span><span class="sxs-lookup"><span data-stu-id="278a5-1829">The following example converts each element in an array of unsigned integers to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#12)]
 [!code-vb[System.Convert.ToSingle#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As ULong) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : uint64 -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1830">The 64-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1830">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1831">Converts the value of the specified 64-bit unsigned integer to an equivalent single-precision floating-point number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1831">Converts the value of the specified 64-bit unsigned integer to an equivalent single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1832">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1832">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1833">Im folgenden Beispiel wird jedes Element in ein Array von zu lange Ganzzahlen ohne Vorzeichen konvertiert eine <xref:System.Single> Wert.</span><span class="sxs-lookup"><span data-stu-id="278a5-1833">The following example converts each element in an array of unsigned long integers to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#13)]
 [!code-vb[System.Convert.ToSingle#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Object, provider As IFormatProvider) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToSingle : obj * IFormatProvider -&gt; single" Usage="System.Convert.ToSingle (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1834">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1834">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="278a5-1835">An object that supplies culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1835">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1836">Converts the value of the specified object to an single-precision floating-point number, using the specified culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1836">Converts the value of the specified object to an single-precision floating-point number, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1837">A single-precision floating-point number that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1837">A single-precision floating-point number that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1838">Der Rückgabewert ist das Ergebnis eines Aufrufs der <xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType> Methode des zugrunde liegenden Typs von `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-1838">The return value is the result of invoking the <xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="278a5-1839">`provider` ermöglicht es dem Benutzer an kulturspezifische Konvertierungsinformationen für den Inhalt des `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-1839">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="278a5-1840">Z. B. wenn `value` ist ein <xref:System.String> , die eine Zahl, `provider` bereitgestellt kulturspezifische Informationen über die Notation verwendet, um diese Zahl darzustellen.</span><span class="sxs-lookup"><span data-stu-id="278a5-1840">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="278a5-1841">Ignorieren Sie die Basistypen `provider`jedoch der Parameter kann verwendet werden, wenn `value` ist ein benutzerdefinierten Typ, der implementiert die <xref:System.IConvertible> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="278a5-1841">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1842">Im folgenden Beispiel wird eine `Temperature`-Klasse definiert, die die <xref:System.IConvertible>-Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="278a5-1842">The following example defines a `Temperature` class that implements the <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="278a5-1843">Die Implementierung von der <xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType> -Methode gibt den internen Wert einer privaten <xref:System.Single> Variable, die die Temperatur darstellt.</span><span class="sxs-lookup"><span data-stu-id="278a5-1843">Its implementation of the <xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType> method returns the internal value of a private <xref:System.Single> variable that represents the temperature.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle2.cs#14)]
 [!code-vb[System.Convert.ToSingle#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle2.vb#14)]  
  
 <span data-ttu-id="278a5-1844">Das folgende Beispiel veranschaulicht, wie ein Aufruf der <xref:System.Convert.ToSingle%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> Methode wiederum die <xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType> Implementierung der `Temperature` Klasse.</span><span class="sxs-lookup"><span data-stu-id="278a5-1844">The following example illustrates how a call to the <xref:System.Convert.ToSingle%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method, in turn, calls the <xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType> implementation of the `Temperature` class.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle2.cs#15)]
 [!code-vb[System.Convert.ToSingle#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle2.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-1845">
            <paramref name="value" /> is not in an appropriate format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1845">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-1846">
            <paramref name="value" /> does not implement <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1846">
              <paramref name="value" /> does not implement <see cref="T:System.IConvertible" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1847">
            <paramref name="value" /> represents a number that is less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1847">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As String, provider As IFormatProvider) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToSingle : string * IFormatProvider -&gt; single" Usage="System.Convert.ToSingle (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1848">A string that contains the number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1848">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="278a5-1849">An object that supplies culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1849">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1850">Converts the specified string representation of a number to an equivalent single-precision floating-point number, using the specified culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1850">Converts the specified string representation of a number to an equivalent single-precision floating-point number, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1851">A single-precision floating-point number that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1851">A single-precision floating-point number that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1852">Der Rückgabewert ist das Ergebnis eines Aufrufs der <xref:System.Single.Parse%2A?displayProperty=nameWithType> Methode `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-1852">The return value is the result of invoking the <xref:System.Single.Parse%2A?displayProperty=nameWithType> method on `value`.</span></span>  
  
 <span data-ttu-id="278a5-1853">`provider` ist ein <xref:System.IFormatProvider> -Instanz, die erhält eine <xref:System.Globalization.NumberFormatInfo> Objekt.</span><span class="sxs-lookup"><span data-stu-id="278a5-1853">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="278a5-1854">Die <xref:System.Globalization.NumberFormatInfo> Objekt stellt kulturspezifische Informationen zum Format von `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-1854">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="278a5-1855">Wenn `provider` ist `null`die <xref:System.Globalization.NumberFormatInfo> für die aktuelle Kultur verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="278a5-1855">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="278a5-1856">Falls gewünscht, nicht um eine Ausnahme zu behandeln, wenn die Konvertierung fehlschlägt, können Sie rufen die <xref:System.Single.TryParse%2A?displayProperty=nameWithType> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="278a5-1856">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Single.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="278a5-1857">Es gibt eine <xref:System.Boolean> Wert, der angibt, ob die Konvertierung erfolgreich war oder nicht.</span><span class="sxs-lookup"><span data-stu-id="278a5-1857">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1858">Im folgenden Beispiel wird <xref:System.IFormatProvider> Objekte, die die Kulturen En-US "und" fr-FR darstellen, wenn die Elemente in einem Array von numerischen Zeichenfolgen konvertiert <xref:System.Single> Werte.</span><span class="sxs-lookup"><span data-stu-id="278a5-1858">The following example uses <xref:System.IFormatProvider> objects that represent the en-US and fr-FR cultures when it converts the elements in an array of numeric strings to <xref:System.Single> values.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle3.cs#16)]
 [!code-vb[System.Convert.ToSingle#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle3.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-1859">
            <paramref name="value" /> is not a number in a valid format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1859">
              <paramref name="value" /> is not a number in a valid format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-1860">
            <paramref name="value" /> represents a number that is less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1860">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="278a5-1861">Converts the specified value to its equivalent string representation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1861">Converts the specified value to its equivalent string representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(bool value);" />
      <MemberSignature Language="F#" Value="static member ToString : bool -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1862">The Boolean value to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1862">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1863">Converts the specified Boolean value to its equivalent string representation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1863">Converts the specified Boolean value to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1864">The string representation of <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1864">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1865">Diese Implementierung ist identisch mit <xref:System.Boolean.ToString%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="278a5-1865">This implementation is identical to <xref:System.Boolean.ToString%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="278a5-1866">Es gibt <xref:System.Boolean.TrueString?displayProperty=nameWithType> für `true` Werte und <xref:System.Boolean.FalseString?displayProperty=nameWithType> für `false` Werte.</span><span class="sxs-lookup"><span data-stu-id="278a5-1866">It returns <xref:System.Boolean.TrueString?displayProperty=nameWithType> for `true` values and <xref:System.Boolean.FalseString?displayProperty=nameWithType> for `false` values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1867">Das folgende Beispiel veranschaulicht die Konvertierung von einer <xref:System.Boolean> auf eine <xref:System.String>mit `ToString`.</span><span class="sxs-lookup"><span data-stu-id="278a5-1867">The following example illustrates the conversion of a <xref:System.Boolean> to a <xref:System.String>, using `ToString`.</span></span> <span data-ttu-id="278a5-1868">Es veranschaulicht auch, dass die von der Konvertierung zurückgegebene Zeichenfolge entweder gleich <xref:System.Boolean.TrueString?displayProperty=nameWithType> oder <xref:System.Boolean.FalseString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="278a5-1868">It also illustrates that the string returned by the conversion equals either <xref:System.Boolean.TrueString?displayProperty=nameWithType> or <xref:System.Boolean.FalseString?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Convert.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToString/cs/ToString_Bool1.cs#1)]
 [!code-vb[System.Convert.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToString/vb/ToString_Bool1.vb#1)]  
 [!code-fsharp[System.Convert.ToString#1](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.Convert.ToString/fs/ToString_Bool1.fs#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Byte) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToString : byte -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1869">The 8-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1869">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1870">Converts the value of the specified 8-bit unsigned integer to its equivalent string representation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1870">Converts the value of the specified 8-bit unsigned integer to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1871">The string representation of <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1871">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1872">Diese Implementierung ist identisch mit <xref:System.Byte.ToString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="278a5-1872">This implementation is identical to <xref:System.Byte.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1873">Das folgende Beispiel konvertiert jedes Werts in einem <xref:System.Byte> Array in eine Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="278a5-1873">The following example converts each value in a <xref:System.Byte> array to a string.</span></span>  
  
 [!code-csharp[System.Convert.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToString/cs/ToString.Byte1.cs#3)]
 [!code-vb[System.Convert.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToString/vb/ToString.Byte1.vb#3)]
 [!code-fsharp[System.Convert.ToString#3](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.Convert.ToString/fs/ToString_Byte1.fs#3)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(char value);" />
      <MemberSignature Language="F#" Value="static member ToString : char -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1874">The Unicode character to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1874">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1875">Converts the value of the specified Unicode character to its equivalent string representation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1875">Converts the value of the specified Unicode character to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1876">The string representation of <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1876">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1877">Diese Implementierung ist identisch mit <xref:System.Char.ToString%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="278a5-1877">This implementation is identical to <xref:System.Char.ToString%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1878">Im folgenden Beispiel wird eine <xref:System.Char> zu einem <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="278a5-1878">The following example converts a <xref:System.Char> to a <xref:System.String>.</span></span>  
  
 [!code-cpp[System.Convert Snippets#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#14)]
 [!code-csharp[System.Convert Snippets#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#14)]
 [!code-vb[System.Convert Snippets#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As DateTime) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToString : DateTime -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1879">The date and time value to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1879">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1880">Converts the value of the specified <see cref="T:System.DateTime" /> to its equivalent string representation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1880">Converts the value of the specified <see cref="T:System.DateTime" /> to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1881">The string representation of <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1881">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1882">Diese Implementierung ist identisch mit <xref:System.DateTime.ToString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="278a5-1882">This implementation is identical to <xref:System.DateTime.ToString?displayProperty=nameWithType>.</span></span> <span data-ttu-id="278a5-1883">Er verwendet die Formatierungskonventionen der aktuellen Kultur und der Formatbezeichner "G" konvertiert eine <xref:System.DateTime> Wert in seine Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="278a5-1883">It uses the formatting conventions of the current culture and the "G" format specifier to convert a <xref:System.DateTime> value to its string representation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1884">Das folgende Beispiel konvertiert jedes Element in einem Array von einem <xref:System.DateTime> -Wert in einen <xref:System.String> Wert.</span><span class="sxs-lookup"><span data-stu-id="278a5-1884">The following example converts each element in an array of a <xref:System.DateTime> value to a <xref:System.String> value.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring1.cs#1)]
 [!code-vb[System.Convert.ToString2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Decimal) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToString : decimal -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1885">The decimal number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1885">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1886">Converts the value of the specified decimal number to its equivalent string representation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1886">Converts the value of the specified decimal number to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1887">The string representation of <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1887">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1888">Diese Implementierung ist identisch mit <xref:System.Decimal.ToString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="278a5-1888">This implementation is identical to <xref:System.Decimal.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1889">Im folgenden Beispiel wird eine <xref:System.Decimal> zu einem <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="278a5-1889">The following example converts a <xref:System.Decimal> to a <xref:System.String>.</span></span>  
  
 [!code-cpp[System.Convert Snippets#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#15)]
 [!code-csharp[System.Convert Snippets#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#15)]
 [!code-vb[System.Convert Snippets#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Double) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(double value);" />
      <MemberSignature Language="F#" Value="static member ToString : double -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1890">The double-precision floating-point number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1890">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1891">Converts the value of the specified double-precision floating-point number to its equivalent string representation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1891">Converts the value of the specified double-precision floating-point number to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1892">The string representation of <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1892">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1893">Diese Implementierung ist identisch mit <xref:System.Double.ToString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="278a5-1893">This implementation is identical to <xref:System.Double.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1894">Im folgenden Beispiel wird eine <xref:System.Double> zu einem <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="278a5-1894">The following example converts a <xref:System.Double> to a <xref:System.String>.</span></span>  
  
 [!code-cpp[System.Convert Snippets#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#7)]
 [!code-csharp[System.Convert Snippets#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#7)]
 [!code-vb[System.Convert Snippets#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Short) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(short value);" />
      <MemberSignature Language="F#" Value="static member ToString : int16 -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1895">The 16-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1895">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1896">Converts the value of the specified 16-bit signed integer to its equivalent string representation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1896">Converts the value of the specified 16-bit signed integer to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1897">The string representation of <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1897">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1898">Diese Implementierung ist identisch mit <xref:System.Int16.ToString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="278a5-1898">This implementation is identical to <xref:System.Int16.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1899">Das folgende Beispiel konvertiert jedes Element in einem Array von 16-Bit-Ganzzahlen in die entsprechende Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="278a5-1899">The following example converts each element in an array of 16-bit integers to its equivalent string representation.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring1.cs#2)]
 [!code-vb[System.Convert.ToString2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(int value);" />
      <MemberSignature Language="F#" Value="static member ToString : int -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1900">The 32-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1900">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1901">Converts the value of the specified 32-bit signed integer to its equivalent string representation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1901">Converts the value of the specified 32-bit signed integer to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1902">The string representation of <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1902">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1903">Diese Implementierung ist identisch mit <xref:System.Int32.ToString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="278a5-1903">This implementation is identical to <xref:System.Int32.ToString?displayProperty=nameWithType>.</span></span> <span data-ttu-id="278a5-1904">Formatiert `value` durch Verwendung der Formatierungskonventionen der aktuellen Threadkultur.</span><span class="sxs-lookup"><span data-stu-id="278a5-1904">It formats `value` by using the formatting conventions of the current thread culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1905">Das folgende Beispiel vergleicht die <xref:System.Convert.ToString%28System.Int32%29> Methode mit der <xref:System.Convert.ToString%28System.UInt16%2CSystem.IFormatProvider%29> Methode.</span><span class="sxs-lookup"><span data-stu-id="278a5-1905">The following example compares the <xref:System.Convert.ToString%28System.Int32%29> method with the <xref:System.Convert.ToString%28System.UInt16%2CSystem.IFormatProvider%29> method.</span></span> <span data-ttu-id="278a5-1906">Es definiert eine benutzerdefinierte <xref:System.Globalization.NumberFormatInfo> -Objekt, das unkompliziert "Minus" verwendet wird, um das negativen Vorzeichen darstellen.</span><span class="sxs-lookup"><span data-stu-id="278a5-1906">It defines a custom <xref:System.Globalization.NumberFormatInfo> object that uses the sting "minus" to represent the negative sign.</span></span> <span data-ttu-id="278a5-1907">Jedes Element in ein Array von Ganzzahlen konvertiert in die entsprechende Zeichenfolgendarstellung mit standardformatierung (die Formatierungskonventionen der aktuellen Kultur) sowie den benutzerdefinierten Formatanbieter.</span><span class="sxs-lookup"><span data-stu-id="278a5-1907">It converts each element in an integer array to its equivalent string representation using default formatting (the formatting conventions of the current culture) and the custom format provider.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#27](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring7.cs#27)]
 [!code-vb[System.Convert.ToString2#27](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring7.vb#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Long) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(long value);" />
      <MemberSignature Language="F#" Value="static member ToString : int64 -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1908">The 64-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1908">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1909">Converts the value of the specified 64-bit signed integer to its equivalent string representation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1909">Converts the value of the specified 64-bit signed integer to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1910">The string representation of <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1910">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1911">Diese Implementierung ist identisch mit <xref:System.Int64.ToString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="278a5-1911">This implementation is identical to <xref:System.Int64.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1912">Das folgende Beispiel konvertiert jedes Element in einem Array long integer-Wert in die entsprechende Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="278a5-1912">The following example converts each element in a long integer array to its equivalent string representation.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#28](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring6.cs#28)]
 [!code-vb[System.Convert.ToString2#28](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring6.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToString : obj -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1913">An object that supplies the value to convert, or <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1913">An object that supplies the value to convert, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1914">Converts the value of the specified object to its equivalent string representation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1914">Converts the value of the specified object to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1915">The string representation of <paramref name="value" />, or <see cref="F:System.String.Empty" /> if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1915">The string representation of <paramref name="value" />, or <see cref="F:System.String.Empty" /> if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1916">Zu konvertierende `value` in seine Zeichenfolgendarstellung versucht die Methode aufrufen, die <xref:System.IConvertible.ToString%2A?displayProperty=nameWithType> Implementierung von `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-1916">To convert `value` to its string representation, the method tries to call the <xref:System.IConvertible.ToString%2A?displayProperty=nameWithType> implementation of `value`.</span></span> <span data-ttu-id="278a5-1917">Wenn `value` implementiert nicht die <xref:System.IConvertible> -Schnittstelle, die Methode aufrufen, versucht der <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> Implementierung von `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-1917">If `value` does not implement the <xref:System.IConvertible> interface, the method tries to call the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> implementation of `value`.</span></span> <span data-ttu-id="278a5-1918">Wenn der Wert nicht implementiert die <xref:System.IFormattable> Schnittstelle die Methodenaufrufe der `ToString` Methode des zugrunde liegenden Typs von `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-1918">If value does not implement the <xref:System.IFormattable> interface, the method calls the `ToString` method of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1919">Das folgende Beispiel konvertiert jedes Element in einem Objektarray, in die entsprechende Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="278a5-1919">The following example converts each element in an object array to its equivalent string representation.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring1.cs#3)]
 [!code-vb[System.Convert.ToString2#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As SByte) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToString : sbyte -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1920">The 8-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1920">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1921">Converts the value of the specified 8-bit signed integer to its equivalent string representation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1921">Converts the value of the specified 8-bit signed integer to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1922">The string representation of <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1922">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1923">Diese Implementierung ist identisch mit <xref:System.SByte.ToString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="278a5-1923">This implementation is identical to <xref:System.SByte.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1924">Das folgende Beispiel konvertiert jedes Element in ein Bytearray mit Vorzeichen in die entsprechende Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="278a5-1924">The following example converts each element in a signed byte array to its equivalent string representation.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring1.cs#4)]
 [!code-vb[System.Convert.ToString2#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Single) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(float value);" />
      <MemberSignature Language="F#" Value="static member ToString : single -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1925">The single-precision floating-point number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1925">The single-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1926">Converts the value of the specified single-precision floating-point number to its equivalent string representation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1926">Converts the value of the specified single-precision floating-point number to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1927">The string representation of <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1927">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1928">Diese Implementierung ist identisch mit <xref:System.Single.ToString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="278a5-1928">This implementation is identical to <xref:System.Single.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1929">Das folgende Beispiel konvertiert jedes Element in einem Array von <xref:System.Single> Werte in die entsprechende Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="278a5-1929">The following example converts each element in an array of <xref:System.Single> values to its equivalent string representation.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring1.cs#5)]
 [!code-vb[System.Convert.ToString2#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToString : string -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1930">The string to return.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1930">The string to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1931">Returns the specified string instance; no actual conversion is performed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1931">Returns the specified string instance; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1932">
            <paramref name="value" /> is returned unchanged.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1932">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-1933">Das folgende Beispiel übergibt eine Zeichenfolge, die die <xref:System.Convert.ToString%28System.String%29> -Methode und ruft die <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> Methode, um sicherzustellen, dass die Methode gibt die ursprüngliche Zeichenfolge zurück.</span><span class="sxs-lookup"><span data-stu-id="278a5-1933">The following example passes a string to the <xref:System.Convert.ToString%28System.String%29> method and calls the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method to confirm that the method returns the original string.</span></span> <span data-ttu-id="278a5-1934">Im Beispiel ruft auch die <xref:System.String.IsInterned%2A?displayProperty=nameWithType> Methode, um sicherzustellen, dass die beiden Zeichenfolgen nicht identisch sind, da die ursprüngliche Zeichenfolge intern gespeichert werden.</span><span class="sxs-lookup"><span data-stu-id="278a5-1934">The example also calls the <xref:System.String.IsInterned%2A?displayProperty=nameWithType> method to ensure that the two strings are not identical because the original string is interned.</span></span>  
  
 [!code-csharp[System.Convert.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToString/cs/tostring_string1.cs#2)]
 [!code-vb[System.Convert.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToString/vb/tostring_string1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As UShort) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToString : uint16 -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1935">The 16-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1935">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1936">Converts the value of the specified 16-bit unsigned integer to its equivalent string representation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1936">Converts the value of the specified 16-bit unsigned integer to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1937">The string representation of <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1937">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1938">Diese Implementierung ist identisch mit <xref:System.UInt16.ToString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="278a5-1938">This implementation is identical to <xref:System.UInt16.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1939">Das folgende Beispiel konvertiert jedes Element in einem Array von 16-Bit-Ganzzahlwerte ohne Vorzeichen in die entsprechende Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="278a5-1939">The following example converts each element in an array of unsigned 16-bit integer values to its equivalent string representation.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring1.cs#6)]
 [!code-vb[System.Convert.ToString2#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As UInteger) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToString : uint32 -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1940">The 32-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1940">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1941">Converts the value of the specified 32-bit unsigned integer to its equivalent string representation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1941">Converts the value of the specified 32-bit unsigned integer to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1942">The string representation of <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1942">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1943">Diese Implementierung ist identisch mit <xref:System.UInt32.ToString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="278a5-1943">This implementation is identical to <xref:System.UInt32.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1944">Das folgende Beispiel konvertiert jedes Element in ein Array von Ganzzahlen ohne Vorzeichen in die entsprechende Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="278a5-1944">The following example converts each element in an unsigned integer array to its equivalent string representation.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring1.cs#7)]
 [!code-vb[System.Convert.ToString2#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As ULong) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToString : uint64 -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1945">The 64-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1945">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1946">Converts the value of the specified 64-bit unsigned integer to its equivalent string representation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1946">Converts the value of the specified 64-bit unsigned integer to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1947">The string representation of <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1947">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1948">Diese Implementierung ist identisch mit <xref:System.UInt64.ToString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="278a5-1948">This implementation is identical to <xref:System.UInt64.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1949">Das folgende Beispiel konvertiert jedes Element in einem Array unsigned long integer-Wert in die entsprechende Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="278a5-1949">The following example converts each element in an unsigned long integer array to its equivalent string representation.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring1.cs#8)]
 [!code-vb[System.Convert.ToString2#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (bool value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(bool value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Boolean,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Boolean, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(bool value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : bool * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1950">The Boolean value to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1950">The Boolean value to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="278a5-1951">An instance of an object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1951">An instance of an object.</span>
          </span>
          <span data-ttu-id="278a5-1952">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1952">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1953">Converts the specified Boolean value to its equivalent string representation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1953">Converts the specified Boolean value to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1954">The string representation of <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1954">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1955">Diese Implementierung ist identisch mit <xref:System.Boolean.ToString%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="278a5-1955">This implementation is identical to <xref:System.Boolean.ToString%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="278a5-1956">Es gibt <xref:System.Boolean.TrueString?displayProperty=nameWithType> für `true` Werte und <xref:System.Boolean.FalseString?displayProperty=nameWithType> für `false` Werte.</span><span class="sxs-lookup"><span data-stu-id="278a5-1956">It returns <xref:System.Boolean.TrueString?displayProperty=nameWithType> for `true` values and <xref:System.Boolean.FalseString?displayProperty=nameWithType> for `false` values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1957">Im folgenden Beispiel wird eine <xref:System.Boolean> -Wert an eine <xref:System.String> mit der `ToString` -Methode, mit einer <xref:System.IFormatProvider> -Objekt, das den Typ der Formatanbieter zeigt an, für den sie aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="278a5-1957">The following example converts a <xref:System.Boolean> value to a <xref:System.String> with the `ToString` method, using an <xref:System.IFormatProvider> object that displays the type of the format provider for which it is called.</span></span> <span data-ttu-id="278a5-1958">Das Beispiel zeigt, dass die <xref:System.IFormatProvider> Objekt wird nicht verwiesen.</span><span class="sxs-lookup"><span data-stu-id="278a5-1958">The example shows that the <xref:System.IFormatProvider> object is not referenced.</span></span>  
  
 [!code-cpp[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/CPP/nonnumeric.cpp#2)]
 [!code-csharp[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/CS/nonnumeric.cs#2)]
 [!code-vb[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/VB/nonnumeric.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (byte value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int8 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Byte,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Byte, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Byte value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : byte * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1959">The 8-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1959">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="278a5-1960">An object that supplies culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1960">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1961">Converts the value of the specified 8-bit unsigned integer to its equivalent string representation, using the specified culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1961">Converts the value of the specified 8-bit unsigned integer to its equivalent string representation, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1962">The string representation of <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1962">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1963">Diese Implementierung ist identisch mit <xref:System.Byte.ToString%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="278a5-1963">This implementation is identical to <xref:System.Byte.ToString%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1964">Im folgende Beispiel konvertiert jedes Element in einem Array von Byte ohne Vorzeichen in die entsprechende Zeichenfolgendarstellung, die Verwendung der Formatierungskonventionen der Kulturen En-US "und" fr-FR.</span><span class="sxs-lookup"><span data-stu-id="278a5-1964">The following example converts each element in an unsigned byte array to its equivalent string representation using the formatting conventions of the en-US and fr-FR cultures.</span></span> <span data-ttu-id="278a5-1965">Da der Formatbezeichner "G" standardmäßig nur die Dezimalzahlen in einen Bytewert Zeichenfolgendarstellung, gibt die `provider` Parameter hat keinen Einfluss auf die Formatierung der zurückgegebenen Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="278a5-1965">Because the "G" specifier by default outputs only decimal digits in a byte value's string representation, the `provider` parameter does not affect the formatting of the returned string.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#16)]
 [!code-vb[System.Convert.ToString2#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (byte value, int toBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int8 value, int32 toBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Byte,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Byte, toBase As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Byte value, int toBase);" />
      <MemberSignature Language="F#" Value="static member ToString : byte * int -&gt; string" Usage="System.Convert.ToString (value, toBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
        <Parameter Name="toBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1966">The 8-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1966">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <param name="toBase">
          <span data-ttu-id="278a5-1967">The base of the return value, which must be 2, 8, 10, or 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1967">The base of the return value, which must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1968">Converts the value of an 8-bit unsigned integer to its equivalent string representation in a specified base.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1968">Converts the value of an 8-bit unsigned integer to its equivalent string representation in a specified base.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1969">The string representation of <paramref name="value" /> in base <paramref name="toBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1969">The string representation of <paramref name="value" /> in base <paramref name="toBase" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1970">Wenn `toBase` stimmt nicht mit 10, die Zeichenfolge, die von zurückgegeben wird das <xref:System.Convert.ToString%28System.Byte%2CSystem.Int32%29?displayProperty=nameWithType> Methode stellt `value` nur entsprechend seiner Größe.</span><span class="sxs-lookup"><span data-stu-id="278a5-1970">If `toBase` does not equal 10, the string that is returned by the <xref:System.Convert.ToString%28System.Byte%2CSystem.Int32%29?displayProperty=nameWithType> method represents `value` by its magnitude only.</span></span> <span data-ttu-id="278a5-1971">Wenn die Methode aufgerufen wird, um eine Zeichenfolge zu erstellen, die später wieder in eine Zahl konvertiert werden, sollte eine entsprechende Methode, die eine numerische Darstellung nur für Größe annimmt, aufgerufen werden, um die Konvertierung auszuführen.</span><span class="sxs-lookup"><span data-stu-id="278a5-1971">If the method is called to create a string that will later be converted back to a number, a corresponding method that assumes a magnitude-only numeric representation should be called to perform the conversion.</span></span> <span data-ttu-id="278a5-1972">Solche Methoden umfassen <xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> oder <xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="278a5-1972">Such methods include <xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> or <xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1973">Das folgende Beispiel konvertiert jedes Element in einem Bytearray in seine entsprechende binäre, hexadezimale, decimal und hexadezimale zeichenfolgendarstellungen.</span><span class="sxs-lookup"><span data-stu-id="278a5-1973">The following example converts each element in a byte array to its equivalent binary, hexadecimal, decimal, and hexadecimal string representations.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring2.cs#9)]
 [!code-vb[System.Convert.ToString2#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring2.vb#9)]
 [!code-fsharp[System.Convert.ToString2#9](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.convert.tostring2/fs/tostring2.fs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="278a5-1974">
            <paramref name="toBase" /> is not 2, 8, 10, or 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1974">
              <paramref name="toBase" /> is not 2, 8, 10, or 16.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (char value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(char value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Char,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Char, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(char value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : char * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1975">The Unicode character to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1975">The Unicode character to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="278a5-1976">An object that supplies culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1976">An object that supplies culture-specific formatting information.</span>
          </span>
          <span data-ttu-id="278a5-1977">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1977">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1978">Converts the value of the specified Unicode character to its equivalent string representation, using the specified culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1978">Converts the value of the specified Unicode character to its equivalent string representation, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1979">The string representation of <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1979">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1980">Diese Implementierung ist identisch mit <xref:System.Char.ToString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="278a5-1980">This implementation is identical to <xref:System.Char.ToString?displayProperty=nameWithType>.</span></span> <span data-ttu-id="278a5-1981">Die `provider` Parameter wird ignoriert.</span><span class="sxs-lookup"><span data-stu-id="278a5-1981">The `provider` parameter is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1982">Im folgenden Beispiel wird eine <xref:System.Char> -Wert an eine <xref:System.String> mit der `ToString` -Methode, mit einer <xref:System.IFormatProvider> -Objekt, das den Typ der Formatanbieter zeigt an, für den sie aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="278a5-1982">The following example converts a <xref:System.Char> value to a <xref:System.String> with the `ToString` method, using an <xref:System.IFormatProvider> object that displays the type of the format provider for which it is called.</span></span> <span data-ttu-id="278a5-1983">Das Beispiel zeigt, dass die <xref:System.IFormatProvider> Objekt wird nicht verwiesen.</span><span class="sxs-lookup"><span data-stu-id="278a5-1983">The example shows that the <xref:System.IFormatProvider> object is not referenced.</span></span>  
  
 [!code-cpp[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/CPP/nonnumeric.cpp#2)]
 [!code-csharp[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/CS/nonnumeric.cs#2)]
 [!code-vb[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/VB/nonnumeric.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (DateTime value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.DateTime value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.DateTime,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As DateTime, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(DateTime value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : DateTime * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1984">The date and time value to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1984">The date and time value to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="278a5-1985">An object that supplies culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1985">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1986">Converts the value of the specified <see cref="T:System.DateTime" /> to its equivalent string representation, using the specified culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1986">Converts the value of the specified <see cref="T:System.DateTime" /> to its equivalent string representation, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1987">The string representation of <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1987">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1988">Diese Implementierung ist identisch mit <xref:System.DateTime.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="278a5-1988">This implementation is identical to <xref:System.DateTime.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1989">Das folgende Beispiel konvertiert einen <xref:System.DateTime> Wert in die entsprechende Zeichenfolgendarstellung in acht unterschiedlichen Kulturen.</span><span class="sxs-lookup"><span data-stu-id="278a5-1989">The following example converts a <xref:System.DateTime> value to its equivalent string representation in eight different cultures.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#13)]
 [!code-vb[System.Convert.ToString2#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (decimal value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.Decimal value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Decimal,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Decimal, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Decimal value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : decimal * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1990">The decimal number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1990">The decimal number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="278a5-1991">An object that supplies culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1991">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1992">Converts the value of the specified decimal number to its equivalent string representation, using the specified culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1992">Converts the value of the specified decimal number to its equivalent string representation, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1993">The string representation of <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1993">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-1994">Diese Implementierung ist identisch mit <xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="278a5-1994">This implementation is identical to <xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-1995">Das folgende Beispiel konvertiert jedes Element in einem Array von <xref:System.Decimal> Werte in die entsprechende Zeichenfolgendarstellung in vier unterschiedliche Kulturen.</span><span class="sxs-lookup"><span data-stu-id="278a5-1995">The following example converts each element in an array of <xref:System.Decimal> values to its equivalent string representation in four different cultures.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#14)]
 [!code-vb[System.Convert.ToString2#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (double value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(float64 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Double,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Double, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(double value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : double * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-1996">The double-precision floating-point number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1996">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="278a5-1997">An object that supplies culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1997">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-1998">Converts the value of the specified double-precision floating-point number to its equivalent string representation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1998">Converts the value of the specified double-precision floating-point number to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-1999">The string representation of <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-1999">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-2000">Diese Implementierung ist identisch mit <xref:System.Double.ToString%28System.IFormatProvider%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="278a5-2000">This implementation is identical to <xref:System.Double.ToString%28System.IFormatProvider%29?displayProperty=nameWithType></span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-2001">Das folgende Beispiel konvertiert jedes Element in einem Array von <xref:System.Double> Werte in die entsprechende Zeichenfolgendarstellung in vier unterschiedliche Kulturen.</span><span class="sxs-lookup"><span data-stu-id="278a5-2001">The following example converts each element in an array of <xref:System.Double> values to its equivalent string representation in four different cultures.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#15)]
 [!code-vb[System.Convert.ToString2#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (short value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int16 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int16,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Short, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(short value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : int16 * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2002">The 16-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2002">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="278a5-2003">An object that supplies culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2003">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2004">Converts the value of the specified 16-bit signed integer to its equivalent string representation, using the specified culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2004">Converts the value of the specified 16-bit signed integer to its equivalent string representation, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2005">The string representation of <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2005">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-2006">Diese Implementierung ist identisch mit <xref:System.Int16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="278a5-2006">This implementation is identical to <xref:System.Int16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-2007">Das folgende Beispiel definiert ein benutzerdefiniertes <xref:System.Globalization.NumberFormatInfo> Klasse, die ihr negativen Vorzeichen als Zeichenfolge definiert "~"und dessen positiven Vorzeichen als Zeichenfolge"!".</span><span class="sxs-lookup"><span data-stu-id="278a5-2007">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> class that defines its negative sign as the string "~" and its positive sign as the string "!".</span></span> <span data-ttu-id="278a5-2008">Er ruft dann die <xref:System.Convert.ToString%28System.Int16%2CSystem.IFormatProvider%29> Methode, um jedes Element in einem Array von 16-Bit-Ganzzahlen in die entsprechende Zeichenfolgendarstellung zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-2008">It then calls the <xref:System.Convert.ToString%28System.Int16%2CSystem.IFormatProvider%29> method to convert each element in an array of 16-bit integers to its equivalent string representation.</span></span> <span data-ttu-id="278a5-2009">Die Konvertierung verwendet die invariante Kultur als auch für die benutzerdefinierte <xref:System.Globalization.NumberFormatInfo> Objekt.</span><span class="sxs-lookup"><span data-stu-id="278a5-2009">The conversion uses the invariant culture as well as the custom <xref:System.Globalization.NumberFormatInfo> object.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#19)]
 [!code-vb[System.Convert.ToString2#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (short value, int toBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int16 value, int32 toBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int16,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Short, toBase As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(short value, int toBase);" />
      <MemberSignature Language="F#" Value="static member ToString : int16 * int -&gt; string" Usage="System.Convert.ToString (value, toBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
        <Parameter Name="toBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2010">The 16-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2010">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <param name="toBase">
          <span data-ttu-id="278a5-2011">The base of the return value, which must be 2, 8, 10, or 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2011">The base of the return value, which must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2012">Converts the value of a 16-bit signed integer to its equivalent string representation in a specified base.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2012">Converts the value of a 16-bit signed integer to its equivalent string representation in a specified base.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2013">The string representation of <paramref name="value" /> in base <paramref name="toBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2013">The string representation of <paramref name="value" /> in base <paramref name="toBase" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-2014">Wenn `value` positiv und `toBase` 2, 8 oder 16 ist, die zurückgegebene Zeichenfolge Vorzeichen-Wert-Darstellung verwendet.</span><span class="sxs-lookup"><span data-stu-id="278a5-2014">If `value` is positive and `toBase` is 2, 8, or 16, the returned string uses sign-and-magnitude representation.</span></span> <span data-ttu-id="278a5-2015">Wenn `value` ist negativ und `toBase` 2, 8 oder 16 ist, die zurückgegebene Zeichenfolge verwendet zwei des Komplement Darstellung.</span><span class="sxs-lookup"><span data-stu-id="278a5-2015">If `value` is negative and `toBase` is 2, 8, or 16, the returned string uses two's complement representation.</span></span> <span data-ttu-id="278a5-2016">Dies bedeutet, dass das höchstwertige Bit des höherwertigen Bytes (Bit 15) als Vorzeichenbit interpretiert wird.</span><span class="sxs-lookup"><span data-stu-id="278a5-2016">This means that the high-order bit of the high-order byte (bit 15) is interpreted as the sign bit.</span></span> <span data-ttu-id="278a5-2017">Wenn die <xref:System.Convert.ToString%28System.Int16%2CSystem.Int32%29> Methode wird aufgerufen, um eine Zeichenfolge zu erstellen, die später wieder in eine Zahl konvertiert werden, eine entsprechende Methode, die eine ähnliche numerische Darstellung annimmt, sollte aufgerufen werden, um die Konvertierung auszuführen.</span><span class="sxs-lookup"><span data-stu-id="278a5-2017">If the <xref:System.Convert.ToString%28System.Int16%2CSystem.Int32%29> method is called to create a string that will later be converted back to a number, a corresponding method that assumes a similar numeric representation should be called to perform the conversion.</span></span> <span data-ttu-id="278a5-2018">Solche Methoden umfassen <xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> und <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="278a5-2018">Such methods include <xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> and <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-2019">Das folgende Beispiel konvertiert jedes Element in einem Array von 16-Bit-Ganzzahlen mit Vorzeichen in die entsprechende binäre, oktale, decimal und hexadezimale zeichenfolgendarstellungen.</span><span class="sxs-lookup"><span data-stu-id="278a5-2019">The following example converts each element in an array of 16-bit signed integers to its equivalent binary, octal, decimal, and hexadecimal string representations.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring2.cs#10)]
 [!code-vb[System.Convert.ToString2#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring2.vb#10)]
 [!code-fsharp[System.Convert.ToString2#10](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.convert.tostring2/fs/tostring2.fs#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="278a5-2020">
            <paramref name="toBase" /> is not 2, 8, 10, or 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2020">
              <paramref name="toBase" /> is not 2, 8, 10, or 16.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (int value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int32 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int32,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Integer, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(int value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : int * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2021">The 32-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2021">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="278a5-2022">An object that supplies culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2022">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2023">Converts the value of the specified 32-bit signed integer to its equivalent string representation, using the specified culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2023">Converts the value of the specified 32-bit signed integer to its equivalent string representation, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2024">The string representation of <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2024">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-2025">Diese Implementierung ist identisch mit <xref:System.Int32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="278a5-2025">This implementation is identical to <xref:System.Int32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-2026">Das folgende Beispiel definiert ein benutzerdefiniertes <xref:System.Globalization.NumberFormatInfo> Klasse, die ihr negativen Vorzeichen als Zeichenfolge definiert "~"und dessen positiven Vorzeichen als Zeichenfolge"!".</span><span class="sxs-lookup"><span data-stu-id="278a5-2026">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> class that defines its negative sign as the string "~" and its positive sign as the string "!".</span></span> <span data-ttu-id="278a5-2027">Er ruft dann die <xref:System.Convert.ToString%28System.Int32%2CSystem.IFormatProvider%29> Methode, um jedes Element in ein Array von Ganzzahlen in die entsprechende Zeichenfolgendarstellung zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-2027">It then calls the <xref:System.Convert.ToString%28System.Int32%2CSystem.IFormatProvider%29> method to convert each element in an array of integers to its equivalent string representation.</span></span> <span data-ttu-id="278a5-2028">Die Konvertierung verwendet die invariante Kultur als auch für die benutzerdefinierte <xref:System.Globalization.NumberFormatInfo> Objekt.</span><span class="sxs-lookup"><span data-stu-id="278a5-2028">The conversion uses the invariant culture as well as the custom <xref:System.Globalization.NumberFormatInfo> object.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#20)]
 [!code-vb[System.Convert.ToString2#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (int value, int toBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int32 value, int32 toBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Integer, toBase As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(int value, int toBase);" />
      <MemberSignature Language="F#" Value="static member ToString : int * int -&gt; string" Usage="System.Convert.ToString (value, toBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="toBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2029">The 32-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2029">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <param name="toBase">
          <span data-ttu-id="278a5-2030">The base of the return value, which must be 2, 8, 10, or 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2030">The base of the return value, which must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2031">Converts the value of a 32-bit signed integer to its equivalent string representation in a specified base.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2031">Converts the value of a 32-bit signed integer to its equivalent string representation in a specified base.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2032">The string representation of <paramref name="value" /> in base <paramref name="toBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2032">The string representation of <paramref name="value" /> in base <paramref name="toBase" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-2033">Wenn `value` positiv und `toBase` 2, 8 oder 16 ist, die zurückgegebene Zeichenfolge Vorzeichen-Wert-Darstellung verwendet.</span><span class="sxs-lookup"><span data-stu-id="278a5-2033">If `value` is positive and `toBase` is 2, 8, or 16, the returned string uses sign-and-magnitude representation.</span></span> <span data-ttu-id="278a5-2034">Wenn `value` ist negativ und `toBase` 2, 8 oder 16 ist, die zurückgegebene Zeichenfolge verwendet zwei des Komplement Darstellung.</span><span class="sxs-lookup"><span data-stu-id="278a5-2034">If `value` is negative and `toBase` is 2, 8, or 16, the returned string uses two's complement representation.</span></span> <span data-ttu-id="278a5-2035">Dies bedeutet, dass das höchstwertige Byte (31-Bit) das höherwertiges Bit als Vorzeichenbit interpretiert wird.</span><span class="sxs-lookup"><span data-stu-id="278a5-2035">This means that the high-order bit of the highest-order byte (bit 31) is interpreted as the sign bit.</span></span> <span data-ttu-id="278a5-2036">Wenn die <xref:System.Convert.ToString%28System.Int32%2CSystem.Int32%29> Methode wird aufgerufen, um eine Zeichenfolge zu erstellen, die später wieder in eine Zahl konvertiert werden, eine entsprechende Methode, die eine ähnliche numerische Darstellung annimmt, sollte aufgerufen werden, um die Konvertierung auszuführen.</span><span class="sxs-lookup"><span data-stu-id="278a5-2036">If the <xref:System.Convert.ToString%28System.Int32%2CSystem.Int32%29> method is called to create a string that will later be converted back to a number, a corresponding method that assumes a similar numeric representation should be called to perform the conversion.</span></span> <span data-ttu-id="278a5-2037">Solche Methoden umfassen <xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> und <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="278a5-2037">Such methods include <xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> and <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-2038">Das folgende Beispiel konvertiert jedes Element in ein Array von Ganzzahlen in die entsprechende binäre, hexadezimale, decimal und hexadezimale zeichenfolgendarstellungen.</span><span class="sxs-lookup"><span data-stu-id="278a5-2038">The following example converts each element in an integer array to its equivalent binary, hexadecimal, decimal, and hexadecimal string representations.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring2.cs#11)]
 [!code-vb[System.Convert.ToString2#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring2.vb#11)]
 [!code-fsharp[System.Convert.ToString2#11](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.convert.tostring2/fs/tostring2.fs#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="278a5-2039">
            <paramref name="toBase" /> is not 2, 8, 10, or 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2039">
              <paramref name="toBase" /> is not 2, 8, 10, or 16.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (long value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int64 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int64,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Long, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(long value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : int64 * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2040">The 64-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2040">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="278a5-2041">An object that supplies culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2041">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2042">Converts the value of the specified 64-bit signed integer to its equivalent string representation, using the specified culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2042">Converts the value of the specified 64-bit signed integer to its equivalent string representation, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2043">The string representation of <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2043">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-2044">Diese Implementierung ist identisch mit <xref:System.Int64.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="278a5-2044">This implementation is identical to <xref:System.Int64.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-2045">Das folgende Beispiel definiert ein benutzerdefiniertes <xref:System.Globalization.NumberFormatInfo> Klasse, die ihr negativen Vorzeichen als Zeichenfolge definiert "~"und dessen positiven Vorzeichen als Zeichenfolge"!".</span><span class="sxs-lookup"><span data-stu-id="278a5-2045">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> class that defines its negative sign as the string "~" and its positive sign as the string "!".</span></span> <span data-ttu-id="278a5-2046">Er ruft dann die <xref:System.Convert.ToString%28System.Int64%2CSystem.IFormatProvider%29> Methode, um jedes Element in einem Array long integer-Wert in die entsprechende Zeichenfolgendarstellung zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-2046">It then calls the <xref:System.Convert.ToString%28System.Int64%2CSystem.IFormatProvider%29> method to convert each element in a long integer array to its equivalent string representation.</span></span> <span data-ttu-id="278a5-2047">Die Konvertierung verwendet die invariante Kultur als auch für die benutzerdefinierte <xref:System.Globalization.NumberFormatInfo> Objekt.</span><span class="sxs-lookup"><span data-stu-id="278a5-2047">The conversion uses the invariant culture as well as the custom <xref:System.Globalization.NumberFormatInfo> object.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#21)]
 [!code-vb[System.Convert.ToString2#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (long value, int toBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int64 value, int32 toBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int64,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Long, toBase As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(long value, int toBase);" />
      <MemberSignature Language="F#" Value="static member ToString : int64 * int -&gt; string" Usage="System.Convert.ToString (value, toBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="toBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2048">The 64-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2048">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <param name="toBase">
          <span data-ttu-id="278a5-2049">The base of the return value, which must be 2, 8, 10, or 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2049">The base of the return value, which must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2050">Converts the value of a 64-bit signed integer to its equivalent string representation in a specified base.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2050">Converts the value of a 64-bit signed integer to its equivalent string representation in a specified base.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2051">The string representation of <paramref name="value" /> in base <paramref name="toBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2051">The string representation of <paramref name="value" /> in base <paramref name="toBase" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-2052">Wenn `value` positiv und `toBase` nicht 10, die zurückgegebene Zeichenfolge Vorzeichen-Wert-Darstellung verwendet.</span><span class="sxs-lookup"><span data-stu-id="278a5-2052">If `value` is positive and `toBase` is not 10, the returned string uses sign-and-magnitude representation.</span></span> <span data-ttu-id="278a5-2053">Wenn `value` ist negativ und `toBase` nicht 10 ist, verwendet die zwei Komplement Darstellung, die zurückgegebene Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="278a5-2053">If `value` is negative and `toBase` is not 10, the returned string uses two's complement representation.</span></span> <span data-ttu-id="278a5-2054">Dies bedeutet, dass das höchstwertige Byte (Bit 63) das höherwertiges Bit als Vorzeichenbit interpretiert wird.</span><span class="sxs-lookup"><span data-stu-id="278a5-2054">This means that the high-order bit of the highest-order byte (bit 63) is interpreted as the sign bit.</span></span> <span data-ttu-id="278a5-2055">Wenn die <xref:System.Convert.ToString%28System.Int64%2CSystem.Int32%29> Methode wird aufgerufen, um eine Zeichenfolge zu erstellen, die später wieder in eine Zahl konvertiert werden, eine entsprechende Methode, die eine ähnliche numerische Darstellung annimmt, sollte aufgerufen werden, um die Konvertierung auszuführen.</span><span class="sxs-lookup"><span data-stu-id="278a5-2055">If the <xref:System.Convert.ToString%28System.Int64%2CSystem.Int32%29> method is called to create a string that will later be converted back to a number, a corresponding method that assumes a similar numeric representation should be called to perform the conversion.</span></span> <span data-ttu-id="278a5-2056">Solche Methoden umfassen <xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> und <xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="278a5-2056">Such methods include <xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> and <xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-2057">Das folgende Beispiel konvertiert jedes Element in einem Array long integer-Wert in seine entsprechende binäre, hexadezimale, decimal und hexadezimale zeichenfolgendarstellungen.</span><span class="sxs-lookup"><span data-stu-id="278a5-2057">The following example converts each element in a long integer array to its equivalent binary, hexadecimal, decimal, and hexadecimal string representations.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring2.cs#12)]
 [!code-vb[System.Convert.ToString2#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring2.vb#12)]  
 [!code-fsharp[System.Convert.ToString2#12](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.convert.tostring2/fs/tostring2.fs#12)]  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="278a5-2058">
            <paramref name="toBase" /> is not 2, 8, 10, or 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2058">
              <paramref name="toBase" /> is not 2, 8, 10, or 16.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Object, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : obj * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2059">An object that supplies the value to convert, or <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2059">An object that supplies the value to convert, or <see langword="null" />.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="278a5-2060">An object that supplies culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2060">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2061">Converts the value of the specified object to its equivalent string representation using the specified culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2061">Converts the value of the specified object to its equivalent string representation using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2062">The string representation of <paramref name="value" />, or <see cref="F:System.String.Empty" /> if <paramref name="value" /> is an object whose value is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2062">The string representation of <paramref name="value" />, or <see cref="F:System.String.Empty" /> if <paramref name="value" /> is an object whose value is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="278a5-2063">If <paramref name="value" /> is <see langword="null" />, the method returns <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2063">If <paramref name="value" /> is <see langword="null" />, the method returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-2064">Wenn die `value` -Parameter implementiert die <xref:System.IConvertible> Schnittstelle die Methodenaufrufe der <xref:System.IConvertible.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> Implementierung von `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-2064">If the `value` parameter implements the <xref:System.IConvertible> interface, the method calls the <xref:System.IConvertible.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> implementation of `value`.</span></span> <span data-ttu-id="278a5-2065">Andernfalls gilt: Wenn die `value` -Parameter implementiert die <xref:System.IFormattable> Schnittstelle die Methodenaufrufe seine <xref:System.IFormattable.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> Implementierung.</span><span class="sxs-lookup"><span data-stu-id="278a5-2065">Otherwise, if the `value` parameter implements the <xref:System.IFormattable> interface, the method calls its <xref:System.IFormattable.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="278a5-2066">Wenn `value` implementiert weder-Schnittstelle, die Methodenaufrufe der `value` des Parameters `ToString()` -Methode, und die `provider` Parameter wird ignoriert.</span><span class="sxs-lookup"><span data-stu-id="278a5-2066">If `value` implements neither interface, the method calls the `value` parameter's `ToString()` method, and the `provider` parameter is ignored.</span></span>  
  
 <span data-ttu-id="278a5-2067">Die `provider` Parameter wird verwendet, wenn die `value` -Parameter implementiert die <xref:System.IConvertible> oder <xref:System.IFormattable> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="278a5-2067">The `provider` parameter is used if the `value` parameter implements the <xref:System.IConvertible> or <xref:System.IFormattable> interface.</span></span> <span data-ttu-id="278a5-2068">Die häufigste Verwendung von der `provider` Parameter ist die Angabe von kulturspezifischen Informationen, die bei der Konvertierung des verwendeten `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-2068">The most common use of the `provider` parameter is to specify culture-specific information used in the conversion of `value`.</span></span> <span data-ttu-id="278a5-2069">Z. B. wenn die `value` Parameter ist eine negative Dezimalzahl, die `provider` Parameter kulturspezifische Informationen über die Notation für das negative Vorzeichen und das Dezimaltrennzeichen angeben kann.</span><span class="sxs-lookup"><span data-stu-id="278a5-2069">For example, if the `value` parameter is a negative decimal number, the `provider` parameter can supply culture-specific information about the notation used for the negative sign and decimal separator.</span></span> <span data-ttu-id="278a5-2070">Das zweite Beispiel im nächsten Abschnitt veranschaulicht einen Formatanbieter, der keinen kulturabhängige Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="278a5-2070">The second example in the next section illustrates a format provider that does not supply culture-sensitive formatting information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-2071">Das folgende Beispiel definiert eine `Temperature` -Klasse, überschreibt die <xref:System.Object.ToString%2A?displayProperty=nameWithType> Methode implementiert jedoch nicht die <xref:System.IConvertible> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="278a5-2071">The following example defines a `Temperature` class that overrides the <xref:System.Object.ToString%2A?displayProperty=nameWithType> method but does not implement the <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="278a5-2072">Im Beispiel wird veranschaulicht, wie Aufrufe von der <xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> -Methode aufrufen, die wiederum die `Temperature.ToString` Methode.</span><span class="sxs-lookup"><span data-stu-id="278a5-2072">The example illustrates how calls to the <xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method, in turn, call the `Temperature.ToString` method.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#26](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring5.cs#26)]
 [!code-vb[System.Convert.ToString2#26](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring5.vb#26)]  
  
 <span data-ttu-id="278a5-2073">Das folgende Beispiel definiert eine `Temperature` Klasse, die implementiert die <xref:System.IFormattable> Schnittstelle implementiert jedoch nicht die <xref:System.IConvertible> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="278a5-2073">The following example defines a `Temperature` class that implements the <xref:System.IFormattable> interface but does not implement the <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="278a5-2074">Die <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> Implementierung stellt die `Temperature` Wert in Grad Celsius, Fahrenheit und Kelvin, abhängig von der Formatzeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="278a5-2074">Its <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> implementation represents the `Temperature` value in Celsius, Fahrenheit, or Kelvin, depending on the format  string.</span></span> <span data-ttu-id="278a5-2075">Im Beispiel definiert auch eine `TemperatureProvider` Klasse, die implementiert <xref:System.IFormatProvider> und bietet eine zufällig generierte Formatzeichenfolge, die von verwendet wird, die <xref:System.IFormattable> Implementierung von der `Temperature` Klasse.</span><span class="sxs-lookup"><span data-stu-id="278a5-2075">The example also defines a `TemperatureProvider` class that implements <xref:System.IFormatProvider> and provides a randomly generated format string that is used by the <xref:System.IFormattable> implementation of the `Temperature` class.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#30](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring_obj30.cs#30)]
 [!code-vb[System.Convert.ToString2#30](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring_obj30.vb#30)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (sbyte value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int8 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.SByte,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As SByte, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::SByte value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : sbyte * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2076">The 8-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2076">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="278a5-2077">An object that supplies culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2077">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2078">Converts the value of the specified 8-bit signed integer to its equivalent string representation, using the specified culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2078">Converts the value of the specified 8-bit signed integer to its equivalent string representation, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2079">The string representation of <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2079">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-2080">Diese Implementierung ist identisch mit <xref:System.SByte.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="278a5-2080">This implementation is identical to <xref:System.SByte.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-2081">Das folgende Beispiel definiert ein benutzerdefiniertes <xref:System.Globalization.NumberFormatInfo> Klasse, die ihr negativen Vorzeichen als Zeichenfolge definiert "~"und dessen positiven Vorzeichen als Zeichenfolge"!".</span><span class="sxs-lookup"><span data-stu-id="278a5-2081">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> class that defines its negative sign as the string "~" and its positive sign as the string "!".</span></span> <span data-ttu-id="278a5-2082">Er ruft dann die <xref:System.Convert.ToString%28System.SByte%2CSystem.IFormatProvider%29?displayProperty=nameWithType> Methode, um jedes Element im Array von Bytes mit Vorzeichen in die entsprechende Zeichenfolgendarstellung zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-2082">It then calls the <xref:System.Convert.ToString%28System.SByte%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method to convert each element in signed byte array to its equivalent string representation.</span></span> <span data-ttu-id="278a5-2083">Die Konvertierung verwendet die invariante Kultur als auch für die benutzerdefinierte <xref:System.Globalization.NumberFormatInfo> Objekt.</span><span class="sxs-lookup"><span data-stu-id="278a5-2083">The conversion uses the invariant culture as well as the custom <xref:System.Globalization.NumberFormatInfo> object.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#17)]
 [!code-vb[System.Convert.ToString2#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (float value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(float32 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Single,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Single, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(float value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : single * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2084">The single-precision floating-point number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2084">The single-precision floating-point number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="278a5-2085">An object that supplies culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2085">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2086">Converts the value of the specified single-precision floating-point number to its equivalent string representation, using the specified culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2086">Converts the value of the specified single-precision floating-point number to its equivalent string representation, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2087">The string representation of <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2087">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-2088">Diese Implementierung ist identisch mit <xref:System.Single.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="278a5-2088">This implementation is identical to <xref:System.Single.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-2089">Das folgende Beispiel konvertiert jedes Element in einem Array von <xref:System.Single> Werte in die entsprechende Zeichenfolgendarstellung in vier unterschiedliche Kulturen.</span><span class="sxs-lookup"><span data-stu-id="278a5-2089">The following example converts each element in an array of <xref:System.Single> values to its equivalent string representation in four different cultures.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#18)]
 [!code-vb[System.Convert.ToString2#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : string * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2090">The string to return.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2090">The string to return.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="278a5-2091">An object that supplies culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2091">An object that supplies culture-specific formatting information.</span>
          </span>
          <span data-ttu-id="278a5-2092">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2092">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2093">Returns the specified string instance; no actual conversion is performed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2093">Returns the specified string instance; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2094">
            <paramref name="value" /> is returned unchanged.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2094">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-2095">Im folgenden Beispiel wird die `ToString` Methode mit einem <xref:System.String> Parameter.</span><span class="sxs-lookup"><span data-stu-id="278a5-2095">The following example calls the `ToString` method with a <xref:System.String> parameter.</span></span> <span data-ttu-id="278a5-2096">Gibt die Methode zurück, der unveränderte <xref:System.String> ohne Verweis auf die <xref:System.IFormatProvider> Objekt.</span><span class="sxs-lookup"><span data-stu-id="278a5-2096">The method returns the unmodified <xref:System.String> without referencing the <xref:System.IFormatProvider> object.</span></span>  
  
 [!code-cpp[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/CPP/nonnumeric.cpp#2)]
 [!code-csharp[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/CS/nonnumeric.cs#2)]
 [!code-vb[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/VB/nonnumeric.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (ushort value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int16 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.UInt16,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As UShort, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::UInt16 value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : uint16 * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2097">The 16-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2097">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="278a5-2098">An object that supplies culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2098">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2099">Converts the value of the specified 16-bit unsigned integer to its equivalent string representation, using the specified culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2099">Converts the value of the specified 16-bit unsigned integer to its equivalent string representation, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2100">The string representation of <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2100">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-2101">Diese Implementierung ist identisch mit <xref:System.UInt16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="278a5-2101">This implementation is identical to <xref:System.UInt16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-2102">Das folgende Beispiel definiert ein benutzerdefiniertes <xref:System.Globalization.NumberFormatInfo> Klasse, die ihr negativen Vorzeichen als Zeichenfolge definiert "~"und dessen positiven Vorzeichen als Zeichenfolge"!".</span><span class="sxs-lookup"><span data-stu-id="278a5-2102">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> class that defines its negative sign as the string "~" and its positive sign as the string "!".</span></span> <span data-ttu-id="278a5-2103">Er ruft dann die <xref:System.Convert.ToString%28System.UInt16%2CSystem.IFormatProvider%29> Methode, um ein 16-Bit-Ganzzahlwert ohne Vorzeichen in die entsprechende Zeichenfolgendarstellung zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-2103">It then calls the <xref:System.Convert.ToString%28System.UInt16%2CSystem.IFormatProvider%29> method to convert a 16-bit unsigned integer value to its equivalent string representation.</span></span> <span data-ttu-id="278a5-2104">Die Konvertierung verwendet die invariante Kultur und die benutzerdefinierte <xref:System.Globalization.NumberFormatInfo> Objekt.</span><span class="sxs-lookup"><span data-stu-id="278a5-2104">The conversion uses both the invariant culture and the custom <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="278a5-2105">Die Ausgabe zeigt, dass diese Formatierungsinformationen nicht verwendet wird, da der Formatbezeichner "G" in der Standardeinstellung kein positiven Vorzeichen mit positiven Werten enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="278a5-2105">The output indicates that this formatting information is not used, because by default the "G" format specifier does not include a positive sign with positive values.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#22](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#22)]
 [!code-vb[System.Convert.ToString2#22](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (uint value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int32 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.UInt32,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As UInteger, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::UInt32 value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : uint32 * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2106">The 32-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2106">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="278a5-2107">An object that supplies culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2107">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2108">Converts the value of the specified 32-bit unsigned integer to its equivalent string representation, using the specified culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2108">Converts the value of the specified 32-bit unsigned integer to its equivalent string representation, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2109">The string representation of <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2109">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-2110">Diese Implementierung ist identisch mit <xref:System.UInt32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="278a5-2110">This implementation is identical to <xref:System.UInt32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-2111">Das folgende Beispiel definiert ein benutzerdefiniertes <xref:System.Globalization.NumberFormatInfo> Klasse, die ihr negativen Vorzeichen als Zeichenfolge definiert "~"und dessen positiven Vorzeichen als Zeichenfolge"!".</span><span class="sxs-lookup"><span data-stu-id="278a5-2111">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> class that defines its negative sign as the string "~" and its positive sign as the string "!".</span></span> <span data-ttu-id="278a5-2112">Er ruft dann die <xref:System.Convert.ToString%28System.UInt32%2CSystem.IFormatProvider%29> Methode, um einen Ganzzahlwert ohne Vorzeichen in die entsprechende Zeichenfolgendarstellung zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-2112">It then calls the <xref:System.Convert.ToString%28System.UInt32%2CSystem.IFormatProvider%29> method to convert an unsigned integer value to its equivalent string representation.</span></span> <span data-ttu-id="278a5-2113">Die Konvertierung verwendet die invariante Kultur und die benutzerdefinierte <xref:System.Globalization.NumberFormatInfo> Objekt.</span><span class="sxs-lookup"><span data-stu-id="278a5-2113">The conversion uses both the invariant culture and the custom <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="278a5-2114">Die Ausgabe zeigt, dass diese Formatierungsinformationen nicht verwendet wird, da der Formatbezeichner "G" in der Standardeinstellung kein positiven Vorzeichen mit positiven Werten enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="278a5-2114">The output indicates that this formatting information is not used, because by default the "G" format specifier does not include a positive sign with positive values.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#23)]
 [!code-vb[System.Convert.ToString2#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (ulong value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int64 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.UInt64,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As ULong, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::UInt64 value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : uint64 * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2115">The 64-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2115">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="278a5-2116">An object that supplies culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2116">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2117">Converts the value of the specified 64-bit unsigned integer to its equivalent string representation, using the specified culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2117">Converts the value of the specified 64-bit unsigned integer to its equivalent string representation, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2118">The string representation of <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2118">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-2119">Diese Implementierung ist identisch mit <xref:System.UInt64.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="278a5-2119">This implementation is identical to <xref:System.UInt64.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-2120">Das folgende Beispiel definiert ein benutzerdefiniertes <xref:System.Globalization.NumberFormatInfo> Klasse, die ihr negativen Vorzeichen als Zeichenfolge definiert "~"und dessen positiven Vorzeichen als Zeichenfolge"!".</span><span class="sxs-lookup"><span data-stu-id="278a5-2120">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> class that defines its negative sign as the string "~" and its positive sign as the string "!".</span></span> <span data-ttu-id="278a5-2121">Er ruft dann die <xref:System.Convert.ToString%28System.UInt64%2CSystem.IFormatProvider%29> -Methode zum Konvertieren von unsigned long Integer-Wert in die entsprechende Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="278a5-2121">It then calls the <xref:System.Convert.ToString%28System.UInt64%2CSystem.IFormatProvider%29> method to convert an unsigned long integer value to its equivalent string representation.</span></span> <span data-ttu-id="278a5-2122">Die Konvertierung verwendet die invariante Kultur und die benutzerdefinierte <xref:System.Globalization.NumberFormatInfo> Objekt.</span><span class="sxs-lookup"><span data-stu-id="278a5-2122">The conversion uses both the invariant culture and the custom <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="278a5-2123">Die Ausgabe zeigt, dass diese Formatierungsinformationen nicht verwendet wird, da der Formatbezeichner "G" in der Standardeinstellung kein positiven Vorzeichen mit positiven Werten enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="278a5-2123">The output indicates that this formatting information is not used, because by default the "G" format specifier does not include a positive sign with positive values.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#24)]
 [!code-vb[System.Convert.ToString2#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToUInt16">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="278a5-2124">Converts a specified value to a 16-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2124">Converts a specified value to a 16-bit unsigned integer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Boolean) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(bool value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : bool -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2125">The Boolean value to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2125">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2126">Converts the specified Boolean value to the equivalent 16-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2126">Converts the specified Boolean value to the equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2127">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2127">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-2128">Das folgende Beispiel konvertiert die booleschen Werte `true` und `false` um 16-Bit-Ganzzahlen ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="278a5-2128">The following example converts the Boolean values `true` and `false` to unsigned 16-bit integers.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#1)]
 [!code-vb[System.Convert.ToUInt16#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Byte) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : byte -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2129">The 8-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2129">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2130">Converts the value of the specified 8-bit unsigned integer to the equivalent 16-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2130">Converts the value of the specified 8-bit unsigned integer to the equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2131">A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2131">A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-2132">Das folgende Beispiel konvertiert jedes Element in einem Bytearray in eine 16-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="278a5-2132">The following example converts each element in a byte array to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#2)]
 [!code-vb[System.Convert.ToUInt16#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Char) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(char value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : char -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2133">The Unicode character to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2133">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2134">Converts the value of the specified Unicode character to the equivalent 16-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2134">Converts the value of the specified Unicode character to the equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2135">The 16-bit unsigned integer equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2135">The 16-bit unsigned integer equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-2136">Das folgende Beispiel konvertiert jedes Element in ein Array von Zeichen in eine 16-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="278a5-2136">The following example converts each element in a character array to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#3)]
 [!code-vb[System.Convert.ToUInt16#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As DateTime) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : DateTime -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2137">The date and time value to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2137">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2138">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2138">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2139">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2139">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="278a5-2140">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2140">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-2141">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2141">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Decimal) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : decimal -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2142">The decimal number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2142">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2143">Converts the value of the specified decimal number to an equivalent 16-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2143">Converts the value of the specified decimal number to an equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2144">
            <paramref name="value" />, rounded to the nearest 16-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2144">
              <paramref name="value" />, rounded to the nearest 16-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="278a5-2145">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2145">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-2146">Das folgende Beispiel konvertiert jedes Element in einem Array von <xref:System.Decimal> Werte in eine 16-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="278a5-2146">The following example converts each element in an array of <xref:System.Decimal> values to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#4)]
 [!code-vb[System.Convert.ToUInt16#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-2147">
            <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2147">
              <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Double) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(double value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : double -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2148">The double-precision floating-point number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2148">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2149">Converts the value of the specified double-precision floating-point number to an equivalent 16-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2149">Converts the value of the specified double-precision floating-point number to an equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2150">
            <paramref name="value" />, rounded to the nearest 16-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2150">
              <paramref name="value" />, rounded to the nearest 16-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="278a5-2151">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2151">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-2152">Das folgende Beispiel konvertiert jedes Element in einem Array von <xref:System.Double> Werte in eine 16-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="278a5-2152">The following example converts each element in an array of <xref:System.Double> values to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#5)]
 [!code-vb[System.Convert.ToUInt16#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-2153">
            <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2153">
              <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Short) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(short value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : int16 -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2154">The 16-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2154">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2155">Converts the value of the specified 16-bit signed integer to the equivalent 16-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2155">Converts the value of the specified 16-bit signed integer to the equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2156">A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2156">A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-2157">Im folgenden Beispiel wird versucht, die jedes Element in einem Array von 16-Bit-Ganzzahl in eine 16-Bit-Ganzzahl ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-2157">The following example attempts to convert each element in a 16-bit integer array to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#6)]
 [!code-vb[System.Convert.ToUInt16#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-2158">
            <paramref name="value" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2158">
              <paramref name="value" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Integer) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(int value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : int -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2159">The 32-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2159">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2160">Converts the value of the specified 32-bit signed integer to an equivalent 16-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2160">Converts the value of the specified 32-bit signed integer to an equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2161">A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2161">A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-2162">Das folgende Beispiel konvertiert jedes Element in ein Array von Ganzzahlen in eine 16-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="278a5-2162">The following example converts each element in an integer array to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#7)]
 [!code-vb[System.Convert.ToUInt16#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-2163">
            <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2163">
              <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Long) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(long value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : int64 -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2164">The 64-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2164">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2165">Converts the value of the specified 64-bit signed integer to an equivalent 16-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2165">Converts the value of the specified 64-bit signed integer to an equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2166">A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2166">A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-2167">Das folgende Beispiel konvertiert jedes Element in einen long Integer-Array in eine 16-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="278a5-2167">The following example converts each element in a long integer array to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#8)]
 [!code-vb[System.Convert.ToUInt16#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-2168">
            <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2168">
              <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Object) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : obj -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2169">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2169">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2170">Converts the value of the specified object to a 16-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2170">Converts the value of the specified object to a 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2171">A 16-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2171">A 16-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-2172">Der Rückgabewert ist das Ergebnis eines Aufrufs der <xref:System.IConvertible.ToUInt16%2A?displayProperty=nameWithType> Methode des zugrunde liegenden Typs von `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-2172">The return value is the result of invoking the <xref:System.IConvertible.ToUInt16%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-2173">Im folgenden Beispiel wird versucht, die jedes Element in einem Objektarray in eine 16-Bit-Ganzzahl ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-2173">The following example attempts to convert each element in an object array to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#9)]
 [!code-vb[System.Convert.ToUInt16#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-2174">
            <paramref name="value" /> is not in an appropriate format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2174">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-2175">
            <paramref name="value" /> does not implement the  <see cref="T:System.IConvertible" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2175">
              <paramref name="value" /> does not implement the  <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="278a5-2176">-or-  The conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2176">-or-  The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-2177">
            <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2177">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As SByte) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : sbyte -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2178">The 8-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2178">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2179">Converts the value of the specified 8-bit signed integer to the equivalent 16-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2179">Converts the value of the specified 8-bit signed integer to the equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2180">A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2180">A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-2181">Das folgende Beispiel konvertiert jedes Element in ein Bytearray mit Vorzeichen in eine 16-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="278a5-2181">The following example converts each element in a signed byte array to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#10)]
 [!code-vb[System.Convert.ToUInt16#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-2182">
            <paramref name="value" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2182">
              <paramref name="value" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Single) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(float value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : single -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2183">The single-precision floating-point number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2183">The single-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2184">Converts the value of the specified single-precision floating-point number to an equivalent 16-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2184">Converts the value of the specified single-precision floating-point number to an equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2185">
            <paramref name="value" />, rounded to the nearest 16-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2185">
              <paramref name="value" />, rounded to the nearest 16-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="278a5-2186">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2186">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-2187">Das folgende Beispiel konvertiert jedes Element in einem Array von <xref:System.String> Werte in eine 16-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="278a5-2187">The following example converts each element in an array of <xref:System.String> values to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#11)]
 [!code-vb[System.Convert.ToUInt16#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-2188">
            <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2188">
              <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Single" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As String) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : string -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2189">A string that contains the number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2189">A string that contains the number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2190">Converts the specified string representation of a number to an equivalent 16-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2190">Converts the specified string representation of a number to an equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2191">A 16-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2191">A 16-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-2192">Mithilfe der <xref:System.Convert.ToUInt16%28System.String%29> Methode entspricht dem übergeben `value` auf die <xref:System.UInt16.Parse%28System.String%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="278a5-2192">Using the <xref:System.Convert.ToUInt16%28System.String%29> method is equivalent to passing `value` to the <xref:System.UInt16.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="278a5-2193">`value` wird mithilfe der Formatierungskonventionen der aktuellen Threadkultur interpretiert.</span><span class="sxs-lookup"><span data-stu-id="278a5-2193">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="278a5-2194">Falls gewünscht, nicht um eine Ausnahme zu behandeln, wenn die Konvertierung fehlschlägt, können Sie rufen die <xref:System.UInt16.TryParse%2A?displayProperty=nameWithType> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="278a5-2194">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.UInt16.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="278a5-2195">Es gibt eine <xref:System.Boolean> Wert, der angibt, ob die Konvertierung erfolgreich war oder nicht.</span><span class="sxs-lookup"><span data-stu-id="278a5-2195">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-2196">Im folgenden Beispiel wird versucht, die jedes Element in ein Array von numerischen Zeichenfolgen in eine 16-Bit-Ganzzahl ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-2196">The following example attempts to convert each element in a numeric string array to a 16-bit unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#12)]
 [!code-vb[System.Convert.ToUInt16#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-2197">
            <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2197">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-2198">
            <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2198">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As UShort) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : uint16 -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2199">The 16-bit unsigned integer to return.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2199">The 16-bit unsigned integer to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2200">Returns the specified 16-bit unsigned integer; no actual conversion is performed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2200">Returns the specified 16-bit unsigned integer; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2201">
            <paramref name="value" /> is returned unchanged.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2201">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As UInteger) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : uint32 -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2202">The 32-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2202">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2203">Converts the value of the specified 32-bit unsigned integer to an equivalent 16-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2203">Converts the value of the specified 32-bit unsigned integer to an equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2204">A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2204">A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-2205">Im folgenden Beispiel wird versucht, die jedes Element in einem Array von Ganzzahlen ohne Vorzeichen in eine 16-Bit-Ganzzahl ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-2205">The following example attempts to convert each element in an array of unsigned integers to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#13)]
 [!code-vb[System.Convert.ToUInt16#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-2206">
            <paramref name="value" /> is greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2206">
              <paramref name="value" /> is greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As ULong) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : uint64 -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2207">The 64-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2207">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2208">Converts the value of the specified 64-bit unsigned integer to an equivalent 16-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2208">Converts the value of the specified 64-bit unsigned integer to an equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2209">A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2209">A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-2210">Im folgenden Beispiel wird versucht, die jedes Element in einem Array von Ganzzahlen ohne Vorzeichen in eine 16-Bit-Ganzzahl ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-2210">The following example attempts to convert each element in an array of unsigned long integers to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#14)]
 [!code-vb[System.Convert.ToUInt16#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-2211">
            <paramref name="value" /> is greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2211">
              <paramref name="value" /> is greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Object, provider As IFormatProvider) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : obj * IFormatProvider -&gt; uint16" Usage="System.Convert.ToUInt16 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2212">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2212">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="278a5-2213">An object that supplies culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2213">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2214">Converts the value of the specified object to a 16-bit unsigned integer, using the specified culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2214">Converts the value of the specified object to a 16-bit unsigned integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2215">A 16-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2215">A 16-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-2216">Der Rückgabewert ist das Ergebnis eines Aufrufs der <xref:System.IConvertible.ToUInt16%2A?displayProperty=nameWithType> Methode des zugrunde liegenden Typs von `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-2216">The return value is the result of invoking the <xref:System.IConvertible.ToUInt16%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="278a5-2217">`provider` ermöglicht es dem Benutzer an kulturspezifische Konvertierungsinformationen für den Inhalt des `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-2217">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="278a5-2218">Z. B. wenn `value` ist ein <xref:System.String> , die eine Zahl, `provider` bereitgestellt kulturspezifische Informationen über die Notation verwendet, um diese Zahl darzustellen.</span><span class="sxs-lookup"><span data-stu-id="278a5-2218">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="278a5-2219">Ignorieren Sie die Basistypen `provider`jedoch der Parameter kann verwendet werden, wenn `value` ist ein benutzerdefinierten Typ, der implementiert die <xref:System.IConvertible> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="278a5-2219">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-2220">Das folgende Beispiel definiert eine `HexString` Klasse, die implementiert die <xref:System.IConvertible> -Schnittstelle dient zum Speichern der Darstellung von beiden 16-Bit-signierten und 16-Bit-Werten ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="278a5-2220">The following example defines a `HexString` class that implements the <xref:System.IConvertible> interface and that is designed to hold the string representation of both 16-bit signed and 16-bit unsigned values.</span></span> <span data-ttu-id="278a5-2221">Die Klasse enthält eine `Sign` -Eigenschaft, die das Vorzeichen eines Hexadezimalwerts angibt.</span><span class="sxs-lookup"><span data-stu-id="278a5-2221">The class includes a `Sign` property that indicates the sign of its hexadecimal value.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_3.cs#16)]
 [!code-vb[System.Convert.ToUInt16#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_3.vb#16)]  
  
 <span data-ttu-id="278a5-2222">Das folgende Beispiel zeigt einen Aufruf der <xref:System.Convert.ToUInt16%28System.Object%2CSystem.IFormatProvider%29> -Methode, die übergibt eine `HexString` Objekt als Parameter wiederum die <xref:System.IConvertible.ToUInt16%2A?displayProperty=nameWithType> Implementierung von der `HexString` Klasse.</span><span class="sxs-lookup"><span data-stu-id="278a5-2222">The following example shows that a call to the <xref:System.Convert.ToUInt16%28System.Object%2CSystem.IFormatProvider%29> method that passes a `HexString` object as a parameter, in turn, calls the <xref:System.IConvertible.ToUInt16%2A?displayProperty=nameWithType> implementation of the `HexString` class.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_3.cs#17)]
 [!code-vb[System.Convert.ToUInt16#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_3.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-2223">
            <paramref name="value" /> is not in an appropriate format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2223">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-2224">
            <paramref name="value" /> does not implement the  <see cref="T:System.IConvertible" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2224">
              <paramref name="value" /> does not implement the  <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="278a5-2225">-or-  The conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2225">-or-  The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-2226">
            <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2226">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As String, provider As IFormatProvider) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : string * IFormatProvider -&gt; uint16" Usage="System.Convert.ToUInt16 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2227">A string that contains the number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2227">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="278a5-2228">An object that supplies culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2228">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2229">Converts the specified string representation of a number to an equivalent 16-bit unsigned integer, using the specified culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2229">Converts the specified string representation of a number to an equivalent 16-bit unsigned integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2230">A 16-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2230">A 16-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-2231">Der Rückgabewert ist das Ergebnis eines Aufrufs <xref:System.UInt16.Parse%2A?displayProperty=nameWithType> auf `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-2231">The return value is the result of invoking <xref:System.UInt16.Parse%2A?displayProperty=nameWithType> on `value`.</span></span>  
  
 <span data-ttu-id="278a5-2232">`provider` ist ein <xref:System.IFormatProvider> -Instanz, die erhält eine <xref:System.Globalization.NumberFormatInfo> Objekt.</span><span class="sxs-lookup"><span data-stu-id="278a5-2232">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="278a5-2233">Die <xref:System.Globalization.NumberFormatInfo> Objekt stellt kulturspezifische Informationen zum Format von `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-2233">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="278a5-2234">Wenn `provider` ist `null`die <xref:System.Globalization.NumberFormatInfo> für die aktuelle Kultur verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="278a5-2234">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="278a5-2235">Falls gewünscht, nicht um eine Ausnahme zu behandeln, wenn die Konvertierung fehlschlägt, können Sie rufen die <xref:System.UInt16.TryParse%2A?displayProperty=nameWithType> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="278a5-2235">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.UInt16.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="278a5-2236">Es gibt eine <xref:System.Boolean> Wert, der angibt, ob die Konvertierung erfolgreich war oder nicht.</span><span class="sxs-lookup"><span data-stu-id="278a5-2236">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-2237">Das folgende Beispiel definiert ein benutzerdefiniertes <xref:System.Globalization.NumberFormatInfo> -Objekt, das die Zeichenfolge "pos" als positives Vorzeichen und die Zeichenfolge "Neg" als negativen Vorzeichen erkennt.</span><span class="sxs-lookup"><span data-stu-id="278a5-2237">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> object that recognizes the string "pos" as the positive sign and the string "neg" as the negative sign.</span></span> <span data-ttu-id="278a5-2238">Versuchen sie dann jedes Element eines Arrays numerische Zeichenfolge in eine ganze Zahl, die mit beiden dieser Anbieter zu konvertieren und die <xref:System.Globalization.NumberFormatInfo> Anbieter für die invariante Kultur.</span><span class="sxs-lookup"><span data-stu-id="278a5-2238">It then attempts to convert each element of a numeric string array to an integer using both this provider and the <xref:System.Globalization.NumberFormatInfo> provider for the invariant culture.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_4.cs#18)]
 [!code-vb[System.Convert.ToUInt16#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_4.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-2239">
            <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2239">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-2240">
            <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2240">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (string value, int fromBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(string value, int32 fromBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As String, fromBase As Integer) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::String ^ value, int fromBase);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : string * int -&gt; uint16" Usage="System.Convert.ToUInt16 (value, fromBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2241">A string that contains the number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2241">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="fromBase">
          <span data-ttu-id="278a5-2242">The base of the number in <c>value</c>, which must be 2, 8, 10, or 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2242">The base of the number in <c>value</c>, which must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2243">Converts the string representation of a number in a specified base to an equivalent 16-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2243">Converts the string representation of a number in a specified base to an equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2244">A 16-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2244">A 16-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-2245">Wenn `fromBase` 16 ist, können Sie die Anzahl von angegebenen Präfix der `value` Parameter mit "0 X" oder "0 X".</span><span class="sxs-lookup"><span data-stu-id="278a5-2245">If `fromBase` is 16, you can prefix the number specified by the `value` parameter with "0x" or "0X".</span></span>  
  
 <span data-ttu-id="278a5-2246">Da die <xref:System.UInt16> -Datentyp unterstützt nur Werte ohne Vorzeichen der <xref:System.Convert.ToUInt16%28System.String%2CSystem.Int32%29> Methode setzt voraus, dass `value` wird mithilfe von nicht signierten binärdarstellung ausgedrückt.</span><span class="sxs-lookup"><span data-stu-id="278a5-2246">Because the <xref:System.UInt16> data type supports unsigned values only, the <xref:System.Convert.ToUInt16%28System.String%2CSystem.Int32%29> method assumes that `value` is expressed using unsigned binary representation.</span></span> <span data-ttu-id="278a5-2247">Das heißt, alle 16 Bits werden verwendet, um den numerischen Wert darstellen, und Vorzeichenbit ist nicht vorhanden.</span><span class="sxs-lookup"><span data-stu-id="278a5-2247">In other words, all 16 bits are used to represent the numeric value, and a sign bit is absent.</span></span> <span data-ttu-id="278a5-2248">Es ist daher möglich, Schreiben Code in der Wert eine Ganzzahl mit Vorzeichen, die außerhalb des Bereichs ist die <xref:System.UInt16> -Datentyp in konvertiert eine <xref:System.UInt16> Wert ohne die Methode eine Ausnahme auszulösen.</span><span class="sxs-lookup"><span data-stu-id="278a5-2248">As a result, it is possible to write code in which a signed integer value that is out of the range of the <xref:System.UInt16> data type is converted to a <xref:System.UInt16> value without the method throwing an exception.</span></span> <span data-ttu-id="278a5-2249">Das folgende Beispiel konvertiert <xref:System.Int16.MinValue?displayProperty=nameWithType> auf die hexadezimale Darstellung, und ruft dann die <xref:System.Convert.ToUInt16%28System.String%2CSystem.Int32%29> Methode.</span><span class="sxs-lookup"><span data-stu-id="278a5-2249">The following example converts <xref:System.Int16.MinValue?displayProperty=nameWithType> to its hexadecimal string representation, and then calls the <xref:System.Convert.ToUInt16%28System.String%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="278a5-2250">Anstatt eine Ausnahme auszulösen, die Methode zeigt die Meldung "0 x 8000 konvertiert 32768."</span><span class="sxs-lookup"><span data-stu-id="278a5-2250">Instead of throwing an exception, the method displays the message, "0x8000 converts to 32768."</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#11)]
 [!code-vb[System.Convert.BaseConversion#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#11)]  
  
 <span data-ttu-id="278a5-2251">Wenn Sie binäre Operationen oder numerische Konvertierungen durchführen zu können, ist es immer der Verantwortung des Entwicklers, um sicherzustellen, dass eine Methode oder der Operator die entsprechenden numerische Darstellung verwendet, um einen bestimmten Wert zu interpretieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-2251">When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method or operator is using the appropriate numeric representation to interpret a particular value.</span></span> <span data-ttu-id="278a5-2252">Das folgende Beispiel veranschaulicht ein Verfahren zum sicherstellen, dass die Methode keine unzulässigerweise binäre Darstellung verwendet, um einen Wert zu interpretieren, die zwei des Komplement Darstellung verwendet, wenn eine hexadezimale Zeichenfolge eine <xref:System.UInt16> Wert.</span><span class="sxs-lookup"><span data-stu-id="278a5-2252">The following example illustrates one technique for ensuring that the method does not inappropriately use binary representation to interpret a value that uses two's complement representation when converting a hexadecimal string to a <xref:System.UInt16> value.</span></span> <span data-ttu-id="278a5-2253">Im Beispiel wird ermittelt, ob ein Wert mit Vorzeichen oder ganze Zahl ohne Vorzeichen darstellt, während sie diesen Wert in seine Zeichenfolgendarstellung konvertiert.</span><span class="sxs-lookup"><span data-stu-id="278a5-2253">The example determines whether a value represents a signed or an unsigned integer while it is converting that value to its string representation.</span></span> <span data-ttu-id="278a5-2254">Wenn das Beispiel konvertiert den Wert in einem <xref:System.UInt16> Wert, es wird überprüft, ob der ursprüngliche Wert eine Ganzzahl mit Vorzeichen war.</span><span class="sxs-lookup"><span data-stu-id="278a5-2254">When the example converts the value to a <xref:System.UInt16> value, it checks whether the original value was a signed integer.</span></span> <span data-ttu-id="278a5-2255">Wenn dies der Fall und seiner höherwertiges Bit festgelegt ist (das heißt, dass der ursprüngliche Wert negativ war), löst die Methode eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="278a5-2255">If so, and if its high-order bit is set (which indicates that the original value was negative), the method throws an exception.</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#12)]
 [!code-vb[System.Convert.BaseConversion#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#12)]  
  
   
  
## Examples  
 <span data-ttu-id="278a5-2256">Im folgenden Beispiel wird versucht, die jedes Element in einem Array von numerischen Zeichenfolgen als Hexadezimalwert zu interpretieren und um es in eine 16-Bit-Ganzzahl ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-2256">The following example attempts to interpret each element in an array of numeric strings as a hexadecimal value and to convert it to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_2.cs#15)]
 [!code-vb[System.Convert.ToUInt16#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_2.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="278a5-2257">
            <paramref name="fromBase" /> is not 2, 8, 10, or 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2257">
              <paramref name="fromBase" /> is not 2, 8, 10, or 16.</span>
          </span>
          <span data-ttu-id="278a5-2258">-or-  <paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2258">-or-  <paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="278a5-2259">
            <paramref name="value" /> is <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2259">
              <paramref name="value" /> is <see cref="F:System.String.Empty" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-2260">
            <paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2260">
              <paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span>
          </span>
          <span data-ttu-id="278a5-2261">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2261">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-2262">
            <paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2262">
              <paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</span>
          </span>
          <span data-ttu-id="278a5-2263">-or-  <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2263">-or-  <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToUInt32">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="278a5-2264">Converts a specified value to a 32-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2264">Converts a specified value to a 32-bit unsigned integer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Boolean) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(bool value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : bool -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2265">The Boolean value to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2265">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2266">Converts the specified Boolean value to the equivalent 32-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2266">Converts the specified Boolean value to the equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2267">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2267">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-2268">Das folgende Beispiel konvertiert die booleschen Werte `true` und `false` zu vorzeichenlosen ganzen Zahlen.</span><span class="sxs-lookup"><span data-stu-id="278a5-2268">The following example converts the Boolean values `true` and `false` to unsigned integers.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#1)]
 [!code-vb[System.Convert.ToUInt32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Byte) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : byte -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2269">The 8-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2269">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2270">Converts the value of the specified 8-bit unsigned integer to the equivalent 32-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2270">Converts the value of the specified 8-bit unsigned integer to the equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2271">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2271">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-2272">Das folgende Beispiel konvertiert jedes Element in einem Bytearray in eine Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="278a5-2272">The following example converts each element in a byte array to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#2)]
 [!code-vb[System.Convert.ToUInt32#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Char) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(char value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : char -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2273">The Unicode character to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2273">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2274">Converts the value of the specified Unicode character to the equivalent 32-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2274">Converts the value of the specified Unicode character to the equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2275">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2275">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-2276">Das folgende Beispiel konvertiert jedes Element in ein Array von Zeichen in eine Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="278a5-2276">The following example converts each element in a character array to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#3)]
 [!code-vb[System.Convert.ToUInt32#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As DateTime) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : DateTime -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2277">The date and time value to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2277">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2278">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2278">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2279">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2279">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="278a5-2280">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2280">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-2281">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2281">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Decimal) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : decimal -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2282">The decimal number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2282">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2283">Converts the value of the specified decimal number to an equivalent 32-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2283">Converts the value of the specified decimal number to an equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2284">
            <paramref name="value" />, rounded to the nearest 32-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2284">
              <paramref name="value" />, rounded to the nearest 32-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="278a5-2285">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2285">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-2286">Im folgenden Beispiel wird versucht, jedes Element in einem Array von konvertieren <xref:System.Decimal> Werte in eine Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="278a5-2286">The following example attempts to convert each element in an array of <xref:System.Decimal> values to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#4)]
 [!code-vb[System.Convert.ToUInt32#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-2287">
            <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2287">
              <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Double) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(double value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : double -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2288">The double-precision floating-point number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2288">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2289">Converts the value of the specified double-precision floating-point number to an equivalent 32-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2289">Converts the value of the specified double-precision floating-point number to an equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2290">
            <paramref name="value" />, rounded to the nearest 32-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2290">
              <paramref name="value" />, rounded to the nearest 32-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="278a5-2291">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2291">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-2292">Im folgenden Beispiel wird versucht, jedes Element in einem Array von konvertieren <xref:System.Double> Werte in eine Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="278a5-2292">The following example attempts to convert each element in an array of <xref:System.Double> values to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#5)]
 [!code-vb[System.Convert.ToUInt32#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-2293">
            <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2293">
              <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Short) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(short value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : int16 -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2294">The 16-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2294">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2295">Converts the value of the specified 16-bit signed integer to the equivalent 32-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2295">Converts the value of the specified 16-bit signed integer to the equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2296">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2296">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-2297">Im folgenden Beispiel wird versucht, die jedes Element in einem Array von 16-Bit-Ganzzahl in eine Ganzzahl ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-2297">The following example attempts to convert each element in a 16-bit integer array to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#6)]
 [!code-vb[System.Convert.ToUInt32#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-2298">
            <paramref name="value" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2298">
              <paramref name="value" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Integer) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(int value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : int -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2299">The 32-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2299">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2300">Converts the value of the specified 32-bit signed integer to an equivalent 32-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2300">Converts the value of the specified 32-bit signed integer to an equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2301">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2301">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-2302">Im folgenden Beispiel wird versucht, die jedes Element in ein Array von Ganzzahlen in eine Ganzzahl ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-2302">The following example attempts to convert each element in an integer array to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#7)]
 [!code-vb[System.Convert.ToUInt32#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-2303">
            <paramref name="value" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2303">
              <paramref name="value" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Long) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(long value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : int64 -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2304">The 64-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2304">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2305">Converts the value of the specified 64-bit signed integer to an equivalent 32-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2305">Converts the value of the specified 64-bit signed integer to an equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2306">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2306">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-2307">Im folgenden Beispiel wird versucht, die jedes Element in einen long Integer-Array in eine Ganzzahl ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-2307">The following example attempts to convert each element in a long integer array to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#8)]
 [!code-vb[System.Convert.ToUInt32#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-2308">
            <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2308">
              <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Object) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : obj -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2309">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2309">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2310">Converts the value of the specified object to a 32-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2310">Converts the value of the specified object to a 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2311">A 32-bit unsigned integer that is equivalent to <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2311">A 32-bit unsigned integer that is equivalent to <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-2312">Der Rückgabewert ist das Ergebnis eines Aufrufs der <xref:System.IConvertible.ToUInt32%2A?displayProperty=nameWithType> Methode des zugrunde liegenden Typs von `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-2312">The return value is the result of invoking the <xref:System.IConvertible.ToUInt32%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-2313">Im folgenden Beispiel wird versucht, die jedes Element in einem Objektarray in eine Ganzzahl ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-2313">The following example attempts to convert each element in an object array to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#9)]
 [!code-vb[System.Convert.ToUInt32#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-2314">
            <paramref name="value" /> is not in an appropriate format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2314">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-2315">
            <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2315">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="278a5-2316">-or-  The conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2316">-or-  The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-2317">
            <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2317">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As SByte) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : sbyte -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2318">The 8-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2318">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2319">Converts the value of the specified 8-bit signed integer to the equivalent 32-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2319">Converts the value of the specified 8-bit signed integer to the equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2320">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2320">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-2321">Im folgenden Beispiel wird versucht, die jedes Element in ein Bytearray mit Vorzeichen in eine Ganzzahl ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-2321">The following example attempts to convert each element in a signed byte array to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#10)]
 [!code-vb[System.Convert.ToUInt32#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-2322">
            <paramref name="value" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2322">
              <paramref name="value" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Single) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(float value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : single -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2323">The single-precision floating-point number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2323">The single-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2324">Converts the value of the specified single-precision floating-point number to an equivalent 32-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2324">Converts the value of the specified single-precision floating-point number to an equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2325">
            <paramref name="value" />, rounded to the nearest 32-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2325">
              <paramref name="value" />, rounded to the nearest 32-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="278a5-2326">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2326">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-2327">Im folgenden Beispiel wird versucht, jedes Element in einem Array von konvertieren <xref:System.Single> Werte in eine Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="278a5-2327">The following example attempts to convert each element in an array of <xref:System.Single> values to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#11)]
 [!code-vb[System.Convert.ToUInt32#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-2328">
            <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2328">
              <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Single" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As String) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : string -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2329">A string that contains the number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2329">A string that contains the number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2330">Converts the specified string representation of a number to an equivalent 32-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2330">Converts the specified string representation of a number to an equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2331">A 32-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2331">A 32-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-2332">Mithilfe der <xref:System.Convert.ToUInt32%28System.String%29> Methode entspricht dem übergeben `value` auf die <xref:System.UInt32.Parse%28System.String%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="278a5-2332">Using the <xref:System.Convert.ToUInt32%28System.String%29> method is equivalent to passing `value` to the <xref:System.UInt32.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="278a5-2333">`value` wird mithilfe der Formatierungskonventionen der aktuellen Threadkultur interpretiert.</span><span class="sxs-lookup"><span data-stu-id="278a5-2333">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="278a5-2334">Falls gewünscht, nicht um eine Ausnahme zu behandeln, wenn die Konvertierung fehlschlägt, können Sie rufen die <xref:System.UInt32.TryParse%2A?displayProperty=nameWithType> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="278a5-2334">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.UInt32.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="278a5-2335">Es gibt eine <xref:System.Boolean> Wert, der angibt, ob die Konvertierung erfolgreich war oder nicht.</span><span class="sxs-lookup"><span data-stu-id="278a5-2335">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-2336">Im folgende Beispiel die Elemente in einem Zeichenfolgenarray als numerische Zeichenfolgen interpretiert und versucht, die sie in der ganzen Zahlen ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-2336">The following example interprets the elements in a string array as numeric strings and attempts to convert them to unsigned integers.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#12)]
 [!code-vb[System.Convert.ToUInt32#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-2337">
            <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2337">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-2338">
            <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2338">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As UShort) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : uint16 -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2339">The 16-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2339">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2340">Converts the value of the specified 16-bit unsigned integer to the equivalent 32-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2340">Converts the value of the specified 16-bit unsigned integer to the equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2341">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2341">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-2342">Das folgende Beispiel konvertiert jedes Element in einem Array von 16-Bit-Ganzzahl ohne Vorzeichen in einen Ganzzahlwert ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="278a5-2342">The following example converts each element in an unsigned 16-bit integer array to an unsigned integer value.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#13)]
 [!code-vb[System.Convert.ToUInt32#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As UInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : uint32 -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2343">The 32-bit unsigned integer to return.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2343">The 32-bit unsigned integer to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2344">Returns the specified 32-bit unsigned integer; no actual conversion is performed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2344">Returns the specified 32-bit unsigned integer; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2345">
            <paramref name="value" /> is returned unchanged.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2345">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As ULong) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : uint64 -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2346">The 64-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2346">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2347">Converts the value of the specified 64-bit unsigned integer to an equivalent 32-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2347">Converts the value of the specified 64-bit unsigned integer to an equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2348">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2348">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-2349">Im folgenden Beispiel wird versucht, die jedes Element in einem Array unsigned long integer-Wert in einen Ganzzahlwert ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-2349">The following example attempts to convert each element in an unsigned long integer array to an unsigned integer value.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#14)]
 [!code-vb[System.Convert.ToUInt32#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-2350">
            <paramref name="value" /> is greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2350">
              <paramref name="value" /> is greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Object, provider As IFormatProvider) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : obj * IFormatProvider -&gt; uint32" Usage="System.Convert.ToUInt32 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2351">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2351">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="278a5-2352">An object that supplies culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2352">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2353">Converts the value of the specified object to a 32-bit unsigned integer, using the specified culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2353">Converts the value of the specified object to a 32-bit unsigned integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2354">A 32-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2354">A 32-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-2355">Der Rückgabewert ist das Ergebnis eines Aufrufs der <xref:System.IConvertible.ToUInt32%2A?displayProperty=nameWithType> Methode des zugrunde liegenden Typs von `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-2355">The return value is the result of invoking the <xref:System.IConvertible.ToUInt32%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="278a5-2356">`provider` ermöglicht es dem Benutzer an kulturspezifische Konvertierungsinformationen für den Inhalt des `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-2356">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="278a5-2357">Z. B. wenn `value` ist ein <xref:System.String> , die eine Zahl, `provider` bereitgestellt kulturspezifische Informationen über die Notation verwendet, um diese Zahl darzustellen.</span><span class="sxs-lookup"><span data-stu-id="278a5-2357">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="278a5-2358">Ignorieren Sie die Basistypen `provider`jedoch der Parameter kann verwendet werden, wenn `value` ist ein benutzerdefinierten Typ, der implementiert die <xref:System.IConvertible> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="278a5-2358">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-2359">Das folgende Beispiel definiert eine `HexString` Klasse, die implementiert die <xref:System.IConvertible> -Schnittstelle dient zum Speichern der Darstellung von sowohl 32-Bit-signierten und 32-Bit-Werten ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="278a5-2359">The following example defines a `HexString` class that implements the <xref:System.IConvertible> interface and that is designed to hold the string representation of both 32-bit signed and 32-bit unsigned values.</span></span> <span data-ttu-id="278a5-2360">Die Klasse enthält eine `Sign` -Eigenschaft, die das Vorzeichen eines Hexadezimalwerts angibt.</span><span class="sxs-lookup"><span data-stu-id="278a5-2360">The class includes a `Sign` property that indicates the sign of its hexadecimal value.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_4.cs#17)]
 [!code-vb[System.Convert.ToUInt32#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_4.vb#17)]  
  
 <span data-ttu-id="278a5-2361">Das folgende Beispiel zeigt einen Aufruf der <xref:System.Convert.ToUInt32%28System.Object%2CSystem.IFormatProvider%29> -Methode, die übergibt eine `HexString` Objekt als Parameter wiederum die <xref:System.IConvertible.ToUInt32%2A?displayProperty=nameWithType> Implementierung von der `HexString` Klasse.</span><span class="sxs-lookup"><span data-stu-id="278a5-2361">The following example shows that a call to the <xref:System.Convert.ToUInt32%28System.Object%2CSystem.IFormatProvider%29> method that passes a `HexString` object as a parameter, in turn, calls the <xref:System.IConvertible.ToUInt32%2A?displayProperty=nameWithType> implementation of the `HexString` class.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_4.cs#18)]
 [!code-vb[System.Convert.ToUInt32#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_4.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-2362">
            <paramref name="value" /> is not in an appropriate format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2362">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-2363">
            <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2363">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="278a5-2364">-or-  The conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2364">-or-  The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-2365">
            <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2365">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As String, provider As IFormatProvider) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : string * IFormatProvider -&gt; uint32" Usage="System.Convert.ToUInt32 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2366">A string that contains the number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2366">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="278a5-2367">An object that supplies culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2367">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2368">Converts the specified string representation of a number to an equivalent 32-bit unsigned integer, using the specified culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2368">Converts the specified string representation of a number to an equivalent 32-bit unsigned integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2369">A 32-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2369">A 32-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-2370">Der Rückgabewert ist das Ergebnis eines Aufrufs <xref:System.UInt32.Parse%2A?displayProperty=nameWithType> auf `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-2370">The return value is the result of invoking <xref:System.UInt32.Parse%2A?displayProperty=nameWithType> on `value`.</span></span>  
  
 <span data-ttu-id="278a5-2371">`provider` ist ein <xref:System.IFormatProvider> -Instanz, die erhält eine <xref:System.Globalization.NumberFormatInfo> Objekt.</span><span class="sxs-lookup"><span data-stu-id="278a5-2371">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="278a5-2372">Die <xref:System.Globalization.NumberFormatInfo> Objekt stellt kulturspezifische Informationen zum Format von `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-2372">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="278a5-2373">Wenn `provider` ist `null`die <xref:System.Globalization.NumberFormatInfo> für die aktuelle Kultur verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="278a5-2373">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="278a5-2374">Falls gewünscht, nicht um eine Ausnahme zu behandeln, wenn die Konvertierung fehlschlägt, können Sie rufen die <xref:System.UInt32.TryParse%2A?displayProperty=nameWithType> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="278a5-2374">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.UInt32.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="278a5-2375">Es gibt eine <xref:System.Boolean> Wert, der angibt, ob die Konvertierung erfolgreich war oder nicht.</span><span class="sxs-lookup"><span data-stu-id="278a5-2375">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-2376">Das folgende Beispiel definiert ein benutzerdefiniertes <xref:System.Globalization.NumberFormatInfo> -Objekt, das die Zeichenfolge "pos" als positives Vorzeichen und die Zeichenfolge "Neg" als negativen Vorzeichen erkennt.</span><span class="sxs-lookup"><span data-stu-id="278a5-2376">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> object that recognizes the string "pos" as the positive sign and the string "neg" as the negative sign.</span></span> <span data-ttu-id="278a5-2377">Versuchen sie dann jedes Element eines Arrays numerische Zeichenfolge in eine ganze Zahl, die mit beiden dieser Anbieter zu konvertieren und die <xref:System.Globalization.NumberFormatInfo> Anbieter für die invariante Kultur.</span><span class="sxs-lookup"><span data-stu-id="278a5-2377">It then attempts to convert each element of a numeric string array to an integer using both this provider and the <xref:System.Globalization.NumberFormatInfo> provider for the invariant culture.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_2.cs#15)]
 [!code-vb[System.Convert.ToUInt32#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_2.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-2378">
            <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2378">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-2379">
            <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2379">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (string value, int fromBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(string value, int32 fromBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As String, fromBase As Integer) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::String ^ value, int fromBase);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : string * int -&gt; uint32" Usage="System.Convert.ToUInt32 (value, fromBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2380">A string that contains the number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2380">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="fromBase">
          <span data-ttu-id="278a5-2381">The base of the number in <c>value</c>, which must be 2, 8, 10, or 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2381">The base of the number in <c>value</c>, which must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2382">Converts the string representation of a number in a specified base to an equivalent 32-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2382">Converts the string representation of a number in a specified base to an equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2383">A 32-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2383">A 32-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-2384">Wenn `fromBase` 16 ist, können Sie die Anzahl von angegebenen Präfix der `value` Parameter mit "0 X" oder "0 X".</span><span class="sxs-lookup"><span data-stu-id="278a5-2384">If `fromBase` is 16, you can prefix the number specified by the `value` parameter with "0x" or "0X".</span></span>  
  
 <span data-ttu-id="278a5-2385">Da die <xref:System.UInt32> -Datentyp unterstützt nur Werte ohne Vorzeichen der <xref:System.Convert.ToUInt32%28System.String%2CSystem.Int32%29> Methode setzt voraus, dass `value` wird mithilfe von nicht signierten binärdarstellung ausgedrückt.</span><span class="sxs-lookup"><span data-stu-id="278a5-2385">Because the <xref:System.UInt32> data type supports unsigned values only, the <xref:System.Convert.ToUInt32%28System.String%2CSystem.Int32%29> method assumes that `value` is expressed using unsigned binary representation.</span></span> <span data-ttu-id="278a5-2386">Das heißt, alle 32 Bits werden verwendet, um den numerischen Wert darstellen, und Vorzeichenbit ist nicht vorhanden.</span><span class="sxs-lookup"><span data-stu-id="278a5-2386">In other words, all 32 bits are used to represent the numeric value, and a sign bit is absent.</span></span> <span data-ttu-id="278a5-2387">Es ist daher möglich, Schreiben Code in der Wert eine Ganzzahl mit Vorzeichen, die außerhalb des Bereichs ist die <xref:System.UInt32> -Datentyp in konvertiert eine <xref:System.UInt32> Wert ohne die Methode eine Ausnahme auszulösen.</span><span class="sxs-lookup"><span data-stu-id="278a5-2387">As a result, it is possible to write code in which a signed integer value that is out of the range of the <xref:System.UInt32> data type is converted to a <xref:System.UInt32> value without the method throwing an exception.</span></span> <span data-ttu-id="278a5-2388">Das folgende Beispiel konvertiert <xref:System.Int32.MinValue> auf die hexadezimale Darstellung, und ruft dann die <xref:System.Convert.ToUInt32%28System.String%2CSystem.Int32%29> Methode.</span><span class="sxs-lookup"><span data-stu-id="278a5-2388">The following example converts <xref:System.Int32.MinValue> to its hexadecimal string representation, and then calls the <xref:System.Convert.ToUInt32%28System.String%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="278a5-2389">Anstatt eine Ausnahme auszulösen, die Methode zeigt die Meldung "0 x 80000000 konvertiert 2147483648."</span><span class="sxs-lookup"><span data-stu-id="278a5-2389">Instead of throwing an exception, the method displays the message, "0x80000000 converts to 2147483648."</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#13)]
 [!code-vb[System.Convert.BaseConversion#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#13)]  
  
 <span data-ttu-id="278a5-2390">Wenn Sie binäre Operationen oder numerische Konvertierungen durchführen zu können, ist es immer der Verantwortung des Entwicklers, um sicherzustellen, dass eine Methode oder der Operator die entsprechenden numerische Darstellung verwendet, um einen bestimmten Wert zu interpretieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-2390">When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method or operator is using the appropriate numeric representation to interpret a particular value.</span></span> <span data-ttu-id="278a5-2391">Das folgende Beispiel veranschaulicht ein Verfahren zum sicherstellen, dass die Methode keine unzulässigerweise binäre Darstellung verwendet, um einen Wert zu interpretieren, die zwei des Komplement Darstellung verwendet, wenn eine hexadezimale Zeichenfolge eine <xref:System.UInt32> Wert.</span><span class="sxs-lookup"><span data-stu-id="278a5-2391">The following example illustrates one technique for ensuring that the method does not inappropriately use binary representation to interpret a value that uses two's complement representation when converting a hexadecimal string to a <xref:System.UInt32> value.</span></span> <span data-ttu-id="278a5-2392">Im Beispiel wird ermittelt, ob ein Wert mit Vorzeichen oder ganze Zahl ohne Vorzeichen darstellt, während sie diesen Wert in seine Zeichenfolgendarstellung konvertiert.</span><span class="sxs-lookup"><span data-stu-id="278a5-2392">The example determines whether a value represents a signed or an unsigned integer while it is converting that value to its string representation.</span></span> <span data-ttu-id="278a5-2393">Wenn das Beispiel konvertiert den Wert in einem <xref:System.UInt32> Wert, es wird überprüft, ob der ursprüngliche Wert eine Ganzzahl mit Vorzeichen war.</span><span class="sxs-lookup"><span data-stu-id="278a5-2393">When the example converts the value to a <xref:System.UInt32> value, it checks whether the original value was a signed integer.</span></span> <span data-ttu-id="278a5-2394">Wenn dies der Fall und seiner höherwertiges Bit festgelegt ist (das heißt, dass der ursprüngliche Wert negativ war), löst die Methode eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="278a5-2394">If so, and if its high-order bit is set (which indicates that the original value was negative), the method throws an exception.</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#14)]
 [!code-vb[System.Convert.BaseConversion#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#14)]  
  
   
  
## Examples  
 <span data-ttu-id="278a5-2395">Im folgenden Beispiel wird versucht, die jedes Element in einem Array von numerischen Zeichenfolgen als Hexadezimalwert zu interpretieren und es in eine Ganzzahl ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-2395">The following example attempts to interpret each element in an array of numeric strings as a hexadecimal value and to convert it to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_3.cs#16)]
 [!code-vb[System.Convert.ToUInt32#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_3.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="278a5-2396">
            <paramref name="fromBase" /> is not 2, 8, 10, or 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2396">
              <paramref name="fromBase" /> is not 2, 8, 10, or 16.</span>
          </span>
          <span data-ttu-id="278a5-2397">-or-  <paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2397">-or-  <paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="278a5-2398">
            <paramref name="value" /> is <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2398">
              <paramref name="value" /> is <see cref="F:System.String.Empty" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-2399">
            <paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2399">
              <paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span>
          </span>
          <span data-ttu-id="278a5-2400">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2400">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-2401">
            <paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2401">
              <paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</span>
          </span>
          <span data-ttu-id="278a5-2402">-or-  <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2402">-or-  <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToUInt64">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="278a5-2403">Converts a specified value to a 64-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2403">Converts a specified value to a 64-bit unsigned integer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Boolean) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(bool value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : bool -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2404">The Boolean value to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2404">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2405">Converts the specified Boolean value to the equivalent 64-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2405">Converts the specified Boolean value to the equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2406">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2406">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-2407">Das folgende Beispiel konvertiert Boolean `true` und `false` Werte zu langen ganzen Zahlen ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="278a5-2407">The following example converts Boolean `true` and `false` values to unsigned long integers.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#1)]
 [!code-vb[System.Convert.ToUInt64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Byte) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : byte -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2408">The 8-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2408">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2409">Converts the value of the specified 8-bit unsigned integer to the equivalent 64-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2409">Converts the value of the specified 8-bit unsigned integer to the equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2410">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2410">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-2411">Das folgende Beispiel konvertiert jedes Element in einem Bytearray in ein long-Integer ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="278a5-2411">The following example converts each element in a byte array to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#2)]
 [!code-vb[System.Convert.ToUInt64#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Char) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(char value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : char -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2412">The Unicode character to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2412">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2413">Converts the value of the specified Unicode character to the equivalent 64-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2413">Converts the value of the specified Unicode character to the equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2414">A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2414">A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-2415">Das folgende Beispiel konvertiert jedes Element in ein Array von Zeichen in eine long-Integer ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="278a5-2415">The following example converts each element in a character array to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#3)]
 [!code-vb[System.Convert.ToUInt64#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As DateTime) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : DateTime -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2416">The date and time value to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2416">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2417">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2417">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2418">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2418">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="278a5-2419">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2419">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-2420">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2420">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Decimal) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : decimal -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2421">The decimal number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2421">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2422">Converts the value of the specified decimal number to an equivalent 64-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2422">Converts the value of the specified decimal number to an equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2423">
            <paramref name="value" />, rounded to the nearest 64-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2423">
              <paramref name="value" />, rounded to the nearest 64-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="278a5-2424">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2424">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-2425">Im folgenden Beispiel wird versucht, jedes Element in einem Array von konvertieren <xref:System.Decimal> Werte auf einen long-Integer ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="278a5-2425">The following example attempts to convert each element in an array of <xref:System.Decimal> values to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#4)]
 [!code-vb[System.Convert.ToUInt64#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-2426">
            <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2426">
              <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Double) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(double value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : double -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2427">The double-precision floating-point number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2427">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2428">Converts the value of the specified double-precision floating-point number to an equivalent 64-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2428">Converts the value of the specified double-precision floating-point number to an equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2429">
            <paramref name="value" />, rounded to the nearest 64-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2429">
              <paramref name="value" />, rounded to the nearest 64-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="278a5-2430">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2430">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-2431">Im folgenden Beispiel wird versucht, jedes Element in einem Array von konvertieren <xref:System.Double> Werte auf einen long-Integer ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="278a5-2431">The following example attempts to convert each element in an array of <xref:System.Double> values to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#5)]
 [!code-vb[System.Convert.ToUInt64#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-2432">
            <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2432">
              <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Short) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(short value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : int16 -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2433">The 16-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2433">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2434">Converts the value of the specified 16-bit signed integer to the equivalent 64-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2434">Converts the value of the specified 16-bit signed integer to the equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2435">A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2435">A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-2436">Im folgenden Beispiel wird versucht, die jedes Element in einem Array von 16-Bit-Ganzzahlen in einem long-Integer ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-2436">The following example attempts to convert each element in an array of 16-bit integers to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#6)]
 [!code-vb[System.Convert.ToUInt64#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-2437">
            <paramref name="value" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2437">
              <paramref name="value" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Integer) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(int value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : int -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2438">The 32-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2438">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2439">Converts the value of the specified 32-bit signed integer to an equivalent 64-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2439">Converts the value of the specified 32-bit signed integer to an equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2440">A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2440">A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-2441">Im folgenden Beispiel wird versucht, die jedes Element in einem Array von ganzen Zahlen in einer long-Integer ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-2441">The following example attempts to convert each element in an array of integers to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#7)]
 [!code-vb[System.Convert.ToUInt64#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-2442">
            <paramref name="value" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2442">
              <paramref name="value" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Long) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(long value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : int64 -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2443">The 64-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2443">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2444">Converts the value of the specified 64-bit signed integer to an equivalent 64-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2444">Converts the value of the specified 64-bit signed integer to an equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2445">A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2445">A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-2446">Im folgenden Beispiel wird versucht, die jedes Element in einem Array von langen ganzen Zahlen in einer long-Integer ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-2446">The following example attempts to convert each element in an array of long integers to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#8)]
 [!code-vb[System.Convert.ToUInt64#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-2447">
            <paramref name="value" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2447">
              <paramref name="value" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Object) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : obj -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2448">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2448">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2449">Converts the value of the specified object to a 64-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2449">Converts the value of the specified object to a 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2450">A 64-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2450">A 64-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-2451">Der Rückgabewert ist das Ergebnis eines Aufrufs der <xref:System.IConvertible.ToUInt64%2A?displayProperty=nameWithType> Methode des zugrunde liegenden Typs von `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-2451">The return value is the result of invoking the <xref:System.IConvertible.ToUInt64%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-2452">Im folgenden Beispiel wird versucht, die jedes Element in einem Objektarray lange Ganzzahl ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-2452">The following example attempts to convert each element in an object array to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#9)]
 [!code-vb[System.Convert.ToUInt64#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-2453">
            <paramref name="value" /> is not in an appropriate format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2453">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-2454">
            <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2454">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="278a5-2455">-or-  The conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2455">-or-  The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-2456">
            <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2456">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As SByte) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : sbyte -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2457">The 8-bit signed integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2457">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2458">Converts the value of the specified 8-bit signed integer to the equivalent 64-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2458">Converts the value of the specified 8-bit signed integer to the equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2459">A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2459">A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-2460">Im folgenden Beispiel wird versucht, die jedes Element in ein Bytearray mit Vorzeichen in einen long-Integer ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-2460">The following example attempts to convert each element in a signed byte array to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#10)]
 [!code-vb[System.Convert.ToUInt64#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-2461">
            <paramref name="value" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2461">
              <paramref name="value" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Single) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(float value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : single -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2462">The single-precision floating-point number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2462">The single-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2463">Converts the value of the specified single-precision floating-point number to an equivalent 64-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2463">Converts the value of the specified single-precision floating-point number to an equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2464">
            <paramref name="value" />, rounded to the nearest 64-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2464">
              <paramref name="value" />, rounded to the nearest 64-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="278a5-2465">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2465">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-2466">Im folgenden Beispiel wird versucht, jedes Element in einem Array von konvertieren <xref:System.Single> Werte auf einen long-Integer ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="278a5-2466">The following example attempts to convert each element in an array of <xref:System.Single> values to an unsigned long integer.</span></span> <span data-ttu-id="278a5-2467">Die Ausgabe zeigt, dass Bruchzahlen gerundet werden, bevor die Konvertierung ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="278a5-2467">The output shows that fractional values are rounded before the conversion is performed.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#11)]
 [!code-vb[System.Convert.ToUInt64#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-2468">
            <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2468">
              <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Single" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As String) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : string -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2469">A string that contains the number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2469">A string that contains the number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2470">Converts the specified string representation of a number to an equivalent 64-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2470">Converts the specified string representation of a number to an equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2471">A 64-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2471">A 64-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-2472">Mithilfe der <xref:System.Convert.ToInt64%28System.String%29> Methode entspricht dem übergeben `value` auf die <xref:System.Int64.Parse%28System.String%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="278a5-2472">Using the <xref:System.Convert.ToInt64%28System.String%29> method is equivalent to passing `value` to the <xref:System.Int64.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="278a5-2473">`value` wird mithilfe der Formatierungskonventionen der aktuellen Threadkultur interpretiert.</span><span class="sxs-lookup"><span data-stu-id="278a5-2473">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="278a5-2474">Falls gewünscht, nicht um eine Ausnahme zu behandeln, wenn die Konvertierung fehlschlägt, können Sie rufen die <xref:System.UInt64.TryParse%2A?displayProperty=nameWithType> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="278a5-2474">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.UInt64.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="278a5-2475">Es gibt eine <xref:System.Boolean> Wert, der angibt, ob die Konvertierung erfolgreich war oder nicht.</span><span class="sxs-lookup"><span data-stu-id="278a5-2475">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-2476">Im folgende Beispiel die Elemente eines Zeichenfolgenarrays als numerische Zeichenfolgen interpretiert und versucht, die sie in einer langen ganzen Zahlen ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-2476">The following example interprets the elements of a string array as numeric strings and attempts to convert them to unsigned long integers.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#12)]
 [!code-vb[System.Convert.ToUInt64#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-2477">
            <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2477">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-2478">
            <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2478">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As UShort) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : uint16 -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2479">The 16-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2479">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2480">Converts the value of the specified 16-bit unsigned integer to the equivalent 64-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2480">Converts the value of the specified 16-bit unsigned integer to the equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2481">A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2481">A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-2482">Das folgende Beispiel konvertiert jedes Element in einem Array von 16-Bit-Ganzzahlen ohne Vorzeichen in einen long-Integer ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="278a5-2482">The following example converts each element in an array of unsigned 16-bit integers to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#13)]
 [!code-vb[System.Convert.ToUInt64#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As UInteger) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : uint32 -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2483">The 32-bit unsigned integer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2483">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2484">Converts the value of the specified 32-bit unsigned integer to an equivalent 64-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2484">Converts the value of the specified 32-bit unsigned integer to an equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2485">A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2485">A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="278a5-2486">Das folgende Beispiel konvertiert jedes Element in ein Array von Ganzzahlen ohne Vorzeichen in einen long-Integer ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="278a5-2486">The following example converts each element in an unsigned integer array to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#14)]
 [!code-vb[System.Convert.ToUInt64#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As ULong) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : uint64 -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2487">The 64-bit unsigned integer to return.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2487">The 64-bit unsigned integer to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2488">Returns the specified 64-bit unsigned integer; no actual conversion is performed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2488">Returns the specified 64-bit unsigned integer; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2489">
            <paramref name="value" /> is returned unchanged.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2489">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Object, provider As IFormatProvider) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : obj * IFormatProvider -&gt; uint64" Usage="System.Convert.ToUInt64 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2490">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2490">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="278a5-2491">An object that supplies culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2491">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2492">Converts the value of the specified object to a 64-bit unsigned integer, using the specified culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2492">Converts the value of the specified object to a 64-bit unsigned integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2493">A 64-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2493">A 64-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-2494">Der Rückgabewert ist das Ergebnis eines Aufrufs der <xref:System.IConvertible.ToUInt64%2A?displayProperty=nameWithType> Methode des zugrunde liegenden Typs von `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-2494">The return value is the result of invoking the <xref:System.IConvertible.ToUInt64%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="278a5-2495">`provider` ermöglicht es dem Benutzer an kulturspezifische Konvertierungsinformationen für den Inhalt des `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-2495">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="278a5-2496">Z. B. wenn `value` ist ein <xref:System.String> , die eine Zahl, `provider` bereitgestellt kulturspezifische Informationen über die Notation verwendet, um diese Zahl darzustellen.</span><span class="sxs-lookup"><span data-stu-id="278a5-2496">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="278a5-2497">Ignorieren Sie die Basistypen `provider`jedoch der Parameter kann verwendet werden, wenn `value` ist ein benutzerdefinierten Typ, der implementiert die <xref:System.IConvertible> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="278a5-2497">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-2498">Das folgende Beispiel definiert eine `HexString` Klasse, die implementiert die <xref:System.IConvertible> -Schnittstelle dient zum Speichern der Darstellung von beiden 64-Bit-signierten und 64-Bit-Werten ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="278a5-2498">The following example defines a `HexString` class that implements the <xref:System.IConvertible> interface and that is designed to hold the string representation of both 64-bit signed and 64-bit unsigned values.</span></span> <span data-ttu-id="278a5-2499">Die Klasse enthält eine `Sign` -Eigenschaft, die das Vorzeichen eines Hexadezimalwerts angibt.</span><span class="sxs-lookup"><span data-stu-id="278a5-2499">The class includes a `Sign` property that indicates the sign of its hexadecimal value.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_4.cs#17)]
 [!code-vb[System.Convert.ToUInt64#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_4.vb#17)]  
  
 <span data-ttu-id="278a5-2500">Das folgende Beispiel zeigt einen Aufruf der <xref:System.Convert.ToUInt64%28System.Object%2CSystem.IFormatProvider%29> -Methode, die übergibt eine `HexString` Objekt als Parameter wiederum die <xref:System.IConvertible.ToUInt64%2A?displayProperty=nameWithType> Implementierung von der `HexString` Klasse.</span><span class="sxs-lookup"><span data-stu-id="278a5-2500">The following example shows that a call to the <xref:System.Convert.ToUInt64%28System.Object%2CSystem.IFormatProvider%29> method that passes a `HexString` object as a parameter, in turn, calls the <xref:System.IConvertible.ToUInt64%2A?displayProperty=nameWithType> implementation of the `HexString` class.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_4.cs#18)]
 [!code-vb[System.Convert.ToUInt64#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_4.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-2501">
            <paramref name="value" /> is not in an appropriate format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2501">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="278a5-2502">
            <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2502">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="278a5-2503">-or-  The conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2503">-or-  The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-2504">
            <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2504">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As String, provider As IFormatProvider) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : string * IFormatProvider -&gt; uint64" Usage="System.Convert.ToUInt64 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2505">A string that contains the number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2505">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="278a5-2506">An object that supplies culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2506">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2507">Converts the specified string representation of a number to an equivalent 64-bit unsigned integer, using the specified culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2507">Converts the specified string representation of a number to an equivalent 64-bit unsigned integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2508">A 64-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2508">A 64-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-2509">Der Rückgabewert ist das Ergebnis eines Aufrufs <xref:System.UInt64.Parse%2A?displayProperty=nameWithType> auf `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-2509">The return value is the result of invoking <xref:System.UInt64.Parse%2A?displayProperty=nameWithType> on `value`.</span></span>  
  
 <span data-ttu-id="278a5-2510">`provider` ist ein <xref:System.IFormatProvider> Implementierung, die erhält eine <xref:System.Globalization.NumberFormatInfo> Objekt.</span><span class="sxs-lookup"><span data-stu-id="278a5-2510">`provider` is an <xref:System.IFormatProvider> implementation that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="278a5-2511">Die <xref:System.Globalization.NumberFormatInfo> Objekt stellt kulturspezifische Informationen zum Format von `value`.</span><span class="sxs-lookup"><span data-stu-id="278a5-2511">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="278a5-2512">Wenn `provider` ist `null`die <xref:System.Globalization.NumberFormatInfo> -Objekt für die aktuelle Kultur verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="278a5-2512">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
 <span data-ttu-id="278a5-2513">Falls gewünscht, nicht um eine Ausnahme zu behandeln, wenn die Konvertierung fehlschlägt, können Sie rufen die <xref:System.UInt64.TryParse%2A?displayProperty=nameWithType> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="278a5-2513">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.UInt64.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="278a5-2514">Es gibt eine <xref:System.Boolean> Wert, der angibt, ob die Konvertierung erfolgreich war oder nicht.</span><span class="sxs-lookup"><span data-stu-id="278a5-2514">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="278a5-2515">Das folgende Beispiel definiert ein benutzerdefiniertes <xref:System.Globalization.NumberFormatInfo> -Objekt, das die Zeichenfolge "pos" als positives Vorzeichen und die Zeichenfolge "Neg" als negativen Vorzeichen erkennt.</span><span class="sxs-lookup"><span data-stu-id="278a5-2515">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> object that recognizes the string "pos" as the positive sign and the string "neg" as the negative sign.</span></span> <span data-ttu-id="278a5-2516">Es wird versucht, jedes Element eines Arrays numerische Zeichenfolge in eine long-Integer ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-2516">It then attempts to convert each element of a numeric string array to an unsigned long integer.</span></span> <span data-ttu-id="278a5-2517">Die Konvertierung verwendet sowohl den benutzerdefinierten Anbieter und die <xref:System.Globalization.NumberFormatInfo> Anbieter für die invariante Kultur.</span><span class="sxs-lookup"><span data-stu-id="278a5-2517">The conversion uses both the custom provider and the <xref:System.Globalization.NumberFormatInfo> provider for the invariant culture.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_2.cs#15)]
 [!code-vb[System.Convert.ToUInt64#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_2.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-2518">
            <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2518">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-2519">
            <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2519">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (string value, int fromBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(string value, int32 fromBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As String, fromBase As Integer) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::String ^ value, int fromBase);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : string * int -&gt; uint64" Usage="System.Convert.ToUInt64 (value, fromBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="278a5-2520">A string that contains the number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2520">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="fromBase">
          <span data-ttu-id="278a5-2521">The base of the number in <c>value</c>, which must be 2, 8, 10, or 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2521">The base of the number in <c>value</c>, which must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278a5-2522">Converts the string representation of a number in a specified base to an equivalent 64-bit unsigned integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2522">Converts the string representation of a number in a specified base to an equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="278a5-2523">A 64-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2523">A 64-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278a5-2524">Wenn `fromBase` 16 ist, können Sie die Anzahl von angegebenen Präfix der `value` Parameter mit "0 X" oder "0 X".</span><span class="sxs-lookup"><span data-stu-id="278a5-2524">If `fromBase` is 16, you can prefix the number specified by the `value` parameter with "0x" or "0X".</span></span>  
  
 <span data-ttu-id="278a5-2525">Da die <xref:System.UInt64> -Datentyp unterstützt nur Werte ohne Vorzeichen der <xref:System.Convert.ToUInt64%28System.String%2CSystem.Int32%29> Methode setzt voraus, dass `value` wird mithilfe von nicht signierten binärdarstellung ausgedrückt.</span><span class="sxs-lookup"><span data-stu-id="278a5-2525">Because the <xref:System.UInt64> data type supports unsigned values only, the <xref:System.Convert.ToUInt64%28System.String%2CSystem.Int32%29> method assumes that `value` is expressed using unsigned binary representation.</span></span> <span data-ttu-id="278a5-2526">Das heißt, alle 64 Bits verwendet, um den numerischen Wert darzustellen, und Vorzeichenbit ist nicht vorhanden.</span><span class="sxs-lookup"><span data-stu-id="278a5-2526">In other words, all 64 bits are used to represent the numeric value, and a sign bit is absent.</span></span> <span data-ttu-id="278a5-2527">Daher ist es möglich, Schreiben Code, in denen eine lange Ganzzahl mit Vorzeichen-Wert, wird außerhalb des Bereichs der <xref:System.UInt64> -Datentyp in konvertiert eine <xref:System.UInt64> Wert ohne die Methode eine Ausnahme auslöst.</span><span class="sxs-lookup"><span data-stu-id="278a5-2527">As a result, it is possible to write code in which a signed long integer value that is out of the range of the <xref:System.UInt64> data type is converted to a <xref:System.UInt64> value without the method throwing an exception.</span></span> <span data-ttu-id="278a5-2528">Das folgende Beispiel konvertiert <xref:System.Int64.MinValue> auf die hexadezimale Darstellung, und ruft dann die <xref:System.Convert.ToUInt64%28System.String%2CSystem.Int32%29> Methode.</span><span class="sxs-lookup"><span data-stu-id="278a5-2528">The following example converts <xref:System.Int64.MinValue> to its hexadecimal string representation, and then calls the <xref:System.Convert.ToUInt64%28System.String%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="278a5-2529">Anstatt eine Ausnahme auszulösen, die Methode zeigt die Meldung "0 x 8000000000000000 konvertiert 9223372036854775808."</span><span class="sxs-lookup"><span data-stu-id="278a5-2529">Instead of throwing an exception, the method displays the message, "0x8000000000000000 converts to 9223372036854775808."</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#15)]
 [!code-vb[System.Convert.BaseConversion#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#15)]  
  
 <span data-ttu-id="278a5-2530">Wenn Sie binäre Operationen oder numerische Konvertierungen durchführen zu können, ist es immer der Verantwortung des Entwicklers, um sicherzustellen, dass eine Methode oder der Operator die entsprechenden numerische Darstellung verwendet, um einen bestimmten Wert zu interpretieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-2530">When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method or operator is using the appropriate numeric representation to interpret a particular value.</span></span> <span data-ttu-id="278a5-2531">Das folgende Beispiel veranschaulicht ein Verfahren zum sicherstellen, dass die Methode keine unzulässigerweise binäre Darstellung verwendet, um einen Wert zu interpretieren, die zwei des Komplement Darstellung verwendet, wenn eine hexadezimale Zeichenfolge eine <xref:System.UInt64> Wert.</span><span class="sxs-lookup"><span data-stu-id="278a5-2531">The following example illustrates one technique for ensuring that the method does not inappropriately use binary representation to interpret a value that uses two's complement representation when converting a hexadecimal string to a <xref:System.UInt64> value.</span></span> <span data-ttu-id="278a5-2532">Im Beispiel wird ermittelt, ob ein Wert mit Vorzeichen oder ganze Zahl ohne Vorzeichen darstellt, während sie diesen Wert in seine Zeichenfolgendarstellung konvertiert.</span><span class="sxs-lookup"><span data-stu-id="278a5-2532">The example determines whether a value represents a signed or an unsigned integer while it is converting that value to its string representation.</span></span> <span data-ttu-id="278a5-2533">Wenn das Beispiel konvertiert den Wert in einem <xref:System.UInt64> Wert, es wird überprüft, ob der ursprüngliche Wert eine Ganzzahl mit Vorzeichen war.</span><span class="sxs-lookup"><span data-stu-id="278a5-2533">When the example converts the value to a <xref:System.UInt64> value, it checks whether the original value was a signed integer.</span></span> <span data-ttu-id="278a5-2534">Wenn dies der Fall und seiner höherwertiges Bit festgelegt ist (das heißt, dass der ursprüngliche Wert negativ war), löst die Methode eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="278a5-2534">If so, and if its high-order bit is set (which indicates that the original value was negative), the method throws an exception.</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#16)]
 [!code-vb[System.Convert.BaseConversion#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#16)]  
  
   
  
## Examples  
 <span data-ttu-id="278a5-2535">Im folgende Beispiel wird versucht, um jedes Element in einem Array von numerischen Zeichenfolgen als Hexadezimalwert zu interpretieren und lange Ganzzahl ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="278a5-2535">The following example attempts to interpret each element in an array of numeric strings as a hexadecimal value and to convert it to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_3.cs#16)]
 [!code-vb[System.Convert.ToUInt64#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_3.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="278a5-2536">
            <paramref name="fromBase" /> is not 2, 8, 10, or 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2536">
              <paramref name="fromBase" /> is not 2, 8, 10, or 16.</span>
          </span>
          <span data-ttu-id="278a5-2537">-or-  <paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2537">-or-  <paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="278a5-2538">
            <paramref name="value" /> is <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2538">
              <paramref name="value" /> is <see cref="F:System.String.Empty" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="278a5-2539">
            <paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2539">
              <paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span>
          </span>
          <span data-ttu-id="278a5-2540">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2540">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="278a5-2541">
            <paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2541">
              <paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</span>
          </span>
          <span data-ttu-id="278a5-2542">-or-  <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278a5-2542">-or-  <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TryFromBase64Chars">
      <MemberSignature Language="C#" Value="public static bool TryFromBase64Chars (ReadOnlySpan&lt;char&gt; chars, Span&lt;byte&gt; bytes, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFromBase64Chars(valuetype System.ReadOnlySpan`1&lt;char&gt; chars, valuetype System.Span`1&lt;unsigned int8&gt; bytes, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.TryFromBase64Chars(System.ReadOnlySpan{System.Char},System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFromBase64Chars (chars As ReadOnlySpan(Of Char), bytes As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryFromBase64Chars(ReadOnlySpan&lt;char&gt; chars, Span&lt;System::Byte&gt; bytes, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="static member TryFromBase64Chars : ReadOnlySpan&lt;char&gt; * Span&lt;byte&gt; *  -&gt; bool" Usage="System.Convert.TryFromBase64Chars (chars, bytes, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="bytes" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="chars">To be added.</param>
        <param name="bytes">To be added.</param>
        <param name="bytesWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFromBase64String">
      <MemberSignature Language="C#" Value="public static bool TryFromBase64String (string s, Span&lt;byte&gt; bytes, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFromBase64String(string s, valuetype System.Span`1&lt;unsigned int8&gt; bytes, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.TryFromBase64String(System.String,System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFromBase64String (s As String, bytes As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryFromBase64String(System::String ^ s, Span&lt;System::Byte&gt; bytes, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="static member TryFromBase64String : string * Span&lt;byte&gt; *  -&gt; bool" Usage="System.Convert.TryFromBase64String (s, bytes, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="bytes" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="bytes">To be added.</param>
        <param name="bytesWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryToBase64Chars">
      <MemberSignature Language="C#" Value="public static bool TryToBase64Chars (ReadOnlySpan&lt;byte&gt; bytes, Span&lt;char&gt; chars, out int charsWritten, Base64FormattingOptions options = System.Base64FormattingOptions.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryToBase64Chars(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes, valuetype System.Span`1&lt;char&gt; chars, [out] int32&amp; charsWritten, valuetype System.Base64FormattingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.TryToBase64Chars(System.ReadOnlySpan{System.Byte},System.Span{System.Char},System.Int32@,System.Base64FormattingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryToBase64Chars (bytes As ReadOnlySpan(Of Byte), chars As Span(Of Char), ByRef charsWritten As Integer, Optional options As Base64FormattingOptions = System.Base64FormattingOptions.None) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryToBase64Chars : ReadOnlySpan&lt;byte&gt; * Span&lt;char&gt; *  * Base64FormattingOptions -&gt; bool" Usage="System.Convert.TryToBase64Chars (bytes, chars, charsWritten, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="chars" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="options" Type="System.Base64FormattingOptions" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <param name="chars">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>