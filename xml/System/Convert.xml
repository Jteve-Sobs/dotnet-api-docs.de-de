<Type Name="Convert" FullName="System.Convert">
  <Metadata><Meta Name="ms.openlocfilehash" Value="005aa6bc53c7fe0676f5288adc8710086ec5042a" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75173271" /></Metadata><TypeSignature Language="C#" Value="public static class Convert" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Convert extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Convert" />
  <TypeSignature Language="VB.NET" Value="Public Class Convert" />
  <TypeSignature Language="C++ CLI" Value="public ref class Convert abstract sealed" />
  <TypeSignature Language="F#" Value="type Convert = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d59d4-101">Konvertiert einen Basisdatentyp in einen anderen Basisdatentyp.</span><span class="sxs-lookup"><span data-stu-id="d59d4-101">Converts a base data type to another base data type.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-102">Die statischen Methoden der <xref:System.Convert>-Klasse werden hauptsächlich verwendet, um die Konvertierung in und aus den Basis Datentypen im .NET Framework zu unterstützen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-102">The static methods of the <xref:System.Convert> class are primarily used to support conversion to and from the base data types in the .NET Framework.</span></span> <span data-ttu-id="d59d4-103">Die unterstützten Basis Typen sind <xref:System.Boolean>, <xref:System.Char>, <xref:System.SByte>, <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>, <xref:System.Single>, <xref:System.Double>, <xref:System.Decimal>, <xref:System.DateTime> und <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="d59d4-103">The supported base types are <xref:System.Boolean>, <xref:System.Char>, <xref:System.SByte>, <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>, <xref:System.Single>, <xref:System.Double>, <xref:System.Decimal>, <xref:System.DateTime> and <xref:System.String>.</span></span> <span data-ttu-id="d59d4-104">Außerdem enthält die <xref:System.Convert>-Klasse Methoden, um andere Arten von Konvertierungen zu unterstützen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-104">In addition, the <xref:System.Convert> class includes methods to support  other kinds of conversions.</span></span>  
  
 <span data-ttu-id="d59d4-105">Dieses Thema enthält folgende Abschnitte:</span><span class="sxs-lookup"><span data-stu-id="d59d4-105">This topic consists of the following sections:</span></span>  
  
 <span data-ttu-id="d59d4-106">[Konvertierungen in und aus Basis Typen](#Base) </span><span class="sxs-lookup"><span data-stu-id="d59d4-106">[Conversions to and from Base Types](#Base) </span></span>  
 <span data-ttu-id="d59d4-107">[Nicht-Dezimalzahlen](#NonDecimal) </span><span class="sxs-lookup"><span data-stu-id="d59d4-107">[Non-Decimal Numbers](#NonDecimal) </span></span>  
 <span data-ttu-id="d59d4-108">[Konvertierungen von benutzerdefinierten Objekten in Basis Typen](#Custom) </span><span class="sxs-lookup"><span data-stu-id="d59d4-108">[Conversions from Custom Objects to Base Types](#Custom) </span></span>  
 <span data-ttu-id="d59d4-109">[Kulturspezifische Formatierungsinformationen](#Culture) </span><span class="sxs-lookup"><span data-stu-id="d59d4-109">[Culture-Specific Formatting Information](#Culture) </span></span>  
 <span data-ttu-id="d59d4-110">[Base64-Codierungs](#Base64) </span><span class="sxs-lookup"><span data-stu-id="d59d4-110">[Base64 Encoding](#Base64) </span></span>  
 [<span data-ttu-id="d59d4-111">Andere gängige Konvertierungen</span><span class="sxs-lookup"><span data-stu-id="d59d4-111">Other Common Conversions</span></span>](#Other)  
  
<a name="Base"></a>   
## <a name="conversions-to-and-from-base-types"></a><span data-ttu-id="d59d4-112">Konvertierungen in und aus Basis Typen</span><span class="sxs-lookup"><span data-stu-id="d59d4-112">Conversions to and from Base Types</span></span>  
 <span data-ttu-id="d59d4-113">Eine Konvertierungsmethode ist vorhanden, um jeden Basistyp in alle anderen Basistyps zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-113">A conversion method exists to convert every base type to every other base type.</span></span> <span data-ttu-id="d59d4-114">Der tatsächliche Aufruf einer bestimmten Konvertierungsmethode kann jedoch je nach dem Wert des Basistyps zur Laufzeit und dem Zieltyp eines der fünf Ergebnisse verursachen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-114">However, the actual call to a particular conversion method can produce one of five outcomes, depending on the value of the base type at run time and the target base type.</span></span> <span data-ttu-id="d59d4-115">Diese fünf Ergebnisse lauten:</span><span class="sxs-lookup"><span data-stu-id="d59d4-115">These five outcomes are:</span></span>  
  
-   <span data-ttu-id="d59d4-116">Keine Konvertierung.</span><span class="sxs-lookup"><span data-stu-id="d59d4-116">No conversion.</span></span> <span data-ttu-id="d59d4-117">Dies tritt auf, wenn versucht wird, von einem Typ in sich selbst zu konvertieren (z. b. durch Aufrufen von <xref:System.Convert.ToInt32%28System.Int32%29?displayProperty=nameWithType> mit einem Argument des Typs <xref:System.Int32>).</span><span class="sxs-lookup"><span data-stu-id="d59d4-117">This occurs when an attempt is made to convert from a type to itself (for example, by calling <xref:System.Convert.ToInt32%28System.Int32%29?displayProperty=nameWithType> with an argument of type <xref:System.Int32>).</span></span> <span data-ttu-id="d59d4-118">In diesem Fall gibt die Methode einfach eine Instanz des ursprünglichen Typs zurück.</span><span class="sxs-lookup"><span data-stu-id="d59d4-118">In this case, the method simply returns an instance of the original type.</span></span>  
  
-   <span data-ttu-id="d59d4-119">Ein <xref:System.InvalidCastException>.</span><span class="sxs-lookup"><span data-stu-id="d59d4-119">An <xref:System.InvalidCastException>.</span></span> <span data-ttu-id="d59d4-120">Dies tritt auf, wenn eine bestimmte Konvertierung nicht unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-120">This occurs when a particular conversion is not supported.</span></span> <span data-ttu-id="d59d4-121">Für die folgenden Konvertierungen wird eine <xref:System.InvalidCastException> ausgelöst:</span><span class="sxs-lookup"><span data-stu-id="d59d4-121">An <xref:System.InvalidCastException> is thrown for the following conversions:</span></span>  
  
    -   <span data-ttu-id="d59d4-122">Konvertierungen von <xref:System.Char> in <xref:System.Boolean>, <xref:System.Single>, <xref:System.Double>, <xref:System.Decimal>oder <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="d59d4-122">Conversions from <xref:System.Char> to <xref:System.Boolean>, <xref:System.Single>, <xref:System.Double>, <xref:System.Decimal>, or <xref:System.DateTime>.</span></span>  
  
    -   <span data-ttu-id="d59d4-123">Konvertierungen von <xref:System.Boolean>, <xref:System.Single>, <xref:System.Double>, <xref:System.Decimal>oder <xref:System.DateTime> zu <xref:System.Char>.</span><span class="sxs-lookup"><span data-stu-id="d59d4-123">Conversions from <xref:System.Boolean>, <xref:System.Single>, <xref:System.Double>, <xref:System.Decimal>, or <xref:System.DateTime> to <xref:System.Char>.</span></span>  
  
    -   <span data-ttu-id="d59d4-124">Konvertierungen von <xref:System.DateTime> in einen anderen Typ außer <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="d59d4-124">Conversions from <xref:System.DateTime> to any other type except <xref:System.String>.</span></span>  
  
    -   <span data-ttu-id="d59d4-125">Konvertierungen von anderen Typen mit Ausnahme von <xref:System.String>in <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="d59d4-125">Conversions from any other type, except <xref:System.String>, to <xref:System.DateTime>.</span></span>  
  
-   <span data-ttu-id="d59d4-126">Ein <xref:System.FormatException>.</span><span class="sxs-lookup"><span data-stu-id="d59d4-126">A <xref:System.FormatException>.</span></span> <span data-ttu-id="d59d4-127">Dies tritt auf, wenn der Versuch, einen Zeichen folgen Wert in einen anderen Basistyp zu konvertieren, fehlschlägt, da die Zeichenfolge nicht das richtige Format hat.</span><span class="sxs-lookup"><span data-stu-id="d59d4-127">This occurs when the attempt to convert a string value to any other base type fails because the string is not in the proper format.</span></span> <span data-ttu-id="d59d4-128">Die Ausnahme wird für die folgenden Konvertierungen ausgelöst:</span><span class="sxs-lookup"><span data-stu-id="d59d4-128">The exception is thrown for the following conversions:</span></span>  
  
    -   <span data-ttu-id="d59d4-129">Eine Zeichenfolge, die in einen <xref:System.Boolean> Wert konvertiert werden soll, entspricht nicht <xref:System.Boolean.TrueString?displayProperty=nameWithType> oder <xref:System.Boolean.FalseString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d59d4-129">A string to be converted to a <xref:System.Boolean> value does not equal <xref:System.Boolean.TrueString?displayProperty=nameWithType> or <xref:System.Boolean.FalseString?displayProperty=nameWithType>.</span></span>  
  
    -   <span data-ttu-id="d59d4-130">Eine Zeichenfolge, die in einen <xref:System.Char> Wert konvertiert werden soll, besteht aus mehreren Zeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-130">A string to be converted to a <xref:System.Char> value consists of multiple characters.</span></span>  
  
    -   <span data-ttu-id="d59d4-131">Eine Zeichenfolge, die in einen beliebigen numerischen Typ konvertiert werden soll, wird nicht als gültige Zahl erkannt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-131">A string to be converted to any numeric type is not recognized as a valid number.</span></span>  
  
    -   <span data-ttu-id="d59d4-132">Eine Zeichenfolge, die in eine <xref:System.DateTime> konvertiert werden soll, wird nicht als gültiger Datums-und Uhrzeitwert erkannt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-132">A string to be converted to a <xref:System.DateTime> is not recognized as a valid date and time value.</span></span>  
  
-   <span data-ttu-id="d59d4-133">Eine erfolgreiche Konvertierung.</span><span class="sxs-lookup"><span data-stu-id="d59d4-133">A successful conversion.</span></span> <span data-ttu-id="d59d4-134">Bei Konvertierungen zwischen zwei unterschiedlichen Basis Typen, die in den vorherigen Ergebnissen nicht aufgeführt sind, werden alle Erweiterungs Konvertierungen sowie alle einschränkenden Konvertierungen, die keinen Datenverlust verursachen, erfolgreich ausgeführt, und die-Methode gibt einen Wert des Ziel Basistyps zurück.</span><span class="sxs-lookup"><span data-stu-id="d59d4-134">For conversions between two different base types not listed in the previous outcomes, all widening conversions as well as all narrowing conversions that do not result in a loss of data will succeed and the method will return a value of the targeted base type.</span></span>  
  
-   <span data-ttu-id="d59d4-135">Ein <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="d59d4-135">An <xref:System.OverflowException>.</span></span> <span data-ttu-id="d59d4-136">Dies tritt auf, wenn eine einschränkende Konvertierung zu einem Datenverlust führt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-136">This occurs when a narrowing conversion results in a loss of data.</span></span> <span data-ttu-id="d59d4-137">Wenn Sie z. b. versuchen, eine <xref:System.Int32> Instanz zu konvertieren, deren Wert 10000 zu einem <xref:System.Byte> Typ ist, wird eine <xref:System.OverflowException> ausgelöst, da 10000 außerhalb des Bereichs des <xref:System.Byte> Datentyps liegt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-137">For example, trying to convert a <xref:System.Int32> instance whose value is 10000 to a <xref:System.Byte> type throws an <xref:System.OverflowException> because 10000 is outside the range of the <xref:System.Byte> data type.</span></span>  
  
 <span data-ttu-id="d59d4-138">Eine Ausnahme wird nicht ausgelöst, wenn die Konvertierung eines numerischen Typs zu einem Genauigkeits Verlust führt (d. h. dem Verlust einiger signifikanter Ziffern).</span><span class="sxs-lookup"><span data-stu-id="d59d4-138">An exception will not be thrown if the conversion of a numeric type results in a loss of precision (that is, the loss of some least significant digits).</span></span> <span data-ttu-id="d59d4-139">Es wird jedoch eine Ausnahme ausgelöst, wenn das Ergebnis größer als durch den Rückgabe Werttyp einer bestimmten Konvertierungsmethode dargestellt werden kann.</span><span class="sxs-lookup"><span data-stu-id="d59d4-139">However, an exception will be thrown if the result is larger than can be represented by the particular conversion method's return value type.</span></span>  
  
 <span data-ttu-id="d59d4-140">Wenn eine <xref:System.Double> z. b. in eine <xref:System.Single>konvertiert wird, kann ein Genauigkeits Verlust auftreten, aber es wird keine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d59d4-140">For example, when a <xref:System.Double> is converted to a <xref:System.Single>, a loss of precision might occur but no exception is thrown.</span></span> <span data-ttu-id="d59d4-141">Wenn die Größe des <xref:System.Double> jedoch zu groß ist, um durch einen <xref:System.Single>dargestellt zu werden, wird eine Überlauf Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d59d4-141">However, if the magnitude of the <xref:System.Double> is too large to be represented by a <xref:System.Single>, an overflow exception is thrown.</span></span>  
  
<a name="NonDecimal"></a>   
## <a name="non-decimal-numbers"></a><span data-ttu-id="d59d4-142">Nicht-Dezimalzahlen</span><span class="sxs-lookup"><span data-stu-id="d59d4-142">Non-Decimal Numbers</span></span>  
 <span data-ttu-id="d59d4-143">Die <xref:System.Convert>-Klasse enthält statische Methoden, die Sie zum Konvertieren von ganzzahligen Werten in nicht dezimale Zeichen folgen Darstellungen und zum Konvertieren von Zeichen folgen, die nicht-Dezimalzahlen darstellen, in ganzzahlige Werte aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-143">The <xref:System.Convert> class includes static methods that you can call to convert integral values to non-decimal string representations, and to convert strings that represent non-decimal numbers to integral values.</span></span> <span data-ttu-id="d59d4-144">Jede dieser Konvertierungs Methoden enthält ein `base` Argument, mit dem Sie das Zahlensystem angeben können. Binary (Base 2), oktale (Basis 8) und hexadezimal (Basis 16) sowie Decimal (Basis 10).</span><span class="sxs-lookup"><span data-stu-id="d59d4-144">Each of these conversion methods includes a `base` argument  that lets you specify  the number system; binary (base 2), octal (base 8), and hexadecimal (base 16), as well as decimal (base 10).</span></span> <span data-ttu-id="d59d4-145">Es gibt eine Reihe von Methoden, um jeden der CLS-kompatiblen primitiven ganzzahligen Typen in eine Zeichenfolge zu konvertieren, und einen Satz von Methoden, um eine Zeichenfolge in die einzelnen primitiven ganzzahligen Typen zu konvertieren:</span><span class="sxs-lookup"><span data-stu-id="d59d4-145">There is a set of methods to convert each of the CLS-compliant primitive integral types to a string, and one to convert a string to each of the primitive integral types:</span></span>  
  
-   <span data-ttu-id="d59d4-146"><xref:System.Convert.ToString%28System.Byte%2CSystem.Int32%29> und <xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29>, um einen Bytewert in eine und aus einer Zeichenfolge in einer angegebenen Basis zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-146"><xref:System.Convert.ToString%28System.Byte%2CSystem.Int32%29> and <xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29>, to convert a byte value to and from a string in a specified base.</span></span>  
  
-   <span data-ttu-id="d59d4-147"><xref:System.Convert.ToString%28System.Int16%2CSystem.Int32%29> und <xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29>, um eine 16-Bit-Ganzzahl mit Vorzeichen in eine und aus einer Zeichenfolge in einer angegebenen Basis zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-147"><xref:System.Convert.ToString%28System.Int16%2CSystem.Int32%29> and <xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29>, to convert a 16-bit signed integer to and from a string in a specified base.</span></span>  
  
-   <span data-ttu-id="d59d4-148"><xref:System.Convert.ToString%28System.Int32%2CSystem.Int32%29> und <xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29>, um eine 32-Bit-Ganzzahl mit Vorzeichen in eine und aus einer Zeichenfolge in einer angegebenen Basis zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-148"><xref:System.Convert.ToString%28System.Int32%2CSystem.Int32%29> and <xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29>, to convert a 32-bit signed integer to and from a string in a specified base.</span></span>  
  
-   <span data-ttu-id="d59d4-149"><xref:System.Convert.ToString%28System.Int64%2CSystem.Int32%29> und <xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29>, um eine 64-Bit-Ganzzahl mit Vorzeichen in eine und aus einer Zeichenfolge in einer angegebenen Basis zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-149"><xref:System.Convert.ToString%28System.Int64%2CSystem.Int32%29> and <xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29>, to convert a 64-bit signed integer to and from a string in a specified base.</span></span>  
  
-   <span data-ttu-id="d59d4-150"><xref:System.Convert.ToSByte%28System.String%2CSystem.Int32%29>, um die Zeichen folgen Darstellung eines Bytewerts in einem angegebenen Format in ein Byte mit Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-150"><xref:System.Convert.ToSByte%28System.String%2CSystem.Int32%29>, to convert the string representation of a byte value in a specified format to a signed byte.</span></span>  
  
-   <span data-ttu-id="d59d4-151"><xref:System.Convert.ToUInt16%28System.String%2CSystem.Int32%29>, um die Zeichen folgen Darstellung einer ganzen Zahl in einem angegebenen Format in eine 16-Bit-Ganzzahl ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-151"><xref:System.Convert.ToUInt16%28System.String%2CSystem.Int32%29>, to convert the string representation of an integer in a specified format to an unsigned 16-bit integer.</span></span>  
  
-   <span data-ttu-id="d59d4-152"><xref:System.Convert.ToUInt32%28System.String%2CSystem.Int32%29>, um die Zeichen folgen Darstellung einer ganzen Zahl in einem angegebenen Format in eine ganze Zahl 32 ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-152"><xref:System.Convert.ToUInt32%28System.String%2CSystem.Int32%29>, to convert the string representation of an integer in a specified format to an unsigned 32-bit integer.</span></span>  
  
-   <span data-ttu-id="d59d4-153"><xref:System.Convert.ToUInt64%28System.String%2CSystem.Int32%29>, um die Zeichen folgen Darstellung einer ganzen Zahl in einem angegebenen Format in eine ganze Zahl 64 ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-153"><xref:System.Convert.ToUInt64%28System.String%2CSystem.Int32%29>, to convert the string representation of an integer in a specified format to an unsigned 64-bit integer.</span></span>  
  
 <span data-ttu-id="d59d4-154">Im folgenden Beispiel wird der Wert <xref:System.Int16.MaxValue?displayProperty=nameWithType> in eine Zeichenfolge in allen unterstützten numerischen Formaten konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-154">The following example converts the value of <xref:System.Int16.MaxValue?displayProperty=nameWithType> to a string in all supported numeric formats.</span></span> <span data-ttu-id="d59d4-155">Anschließend wird der Zeichen folgen Wert in einen <xref:System.Int16> Wert konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-155">It then converts the string value back to a <xref:System.Int16> value.</span></span>  
  
 [!code-cpp[System.Convert#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert/CPP/NonDecimal1.cpp#2)]
 [!code-csharp[System.Convert#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert/CS/NonDecimal1.cs#2)]
 [!code-vb[System.Convert#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert/VB/NonDecimal1.vb#2)]  
  
<a name="Custom"></a>   
## <a name="conversions-from-custom-objects-to-base-types"></a><span data-ttu-id="d59d4-156">Konvertierungen von benutzerdefinierten Objekten in Basis Typen</span><span class="sxs-lookup"><span data-stu-id="d59d4-156">Conversions from Custom Objects to Base Types</span></span>  
 <span data-ttu-id="d59d4-157">Zusätzlich zur Unterstützung von Konvertierungen zwischen den Basis Typen unterstützt die <xref:System.Convert>-Methode die Konvertierung eines beliebigen benutzerdefinierten Typs in einen beliebigen Basistyp.</span><span class="sxs-lookup"><span data-stu-id="d59d4-157">In addition to supporting conversions between the base types, the <xref:System.Convert> method supports conversion of any custom type to any base type.</span></span> <span data-ttu-id="d59d4-158">Zu diesem Zweck muss der benutzerdefinierte Typ die <xref:System.IConvertible>-Schnittstelle implementieren, die Methoden zum Umrechnen des implementierenden Typs in die einzelnen Basis Typen definiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-158">To do this, the custom type must implement the <xref:System.IConvertible> interface, which defines methods for converting the implementing type to each of the base types.</span></span> <span data-ttu-id="d59d4-159">Konvertierungen, die nicht von einem bestimmten Typ unterstützt werden, sollten eine <xref:System.InvalidCastException>auslösen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-159">Conversions that are not supported by a particular type should throw an <xref:System.InvalidCastException>.</span></span>  
  
 <span data-ttu-id="d59d4-160">Wenn der <xref:System.Convert.ChangeType%2A>-Methode ein benutzerdefinierter Typ als erster Parameter übergeben wird oder wenn die `Convert.To`*Type* -Methode (z. b. <xref:System.Convert.ToInt32%28System.Object%29?displayProperty=nameWithType> oder <xref:System.Convert.ToDouble%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> aufgerufen wird und als erster Parameter eine Instanz eines benutzerdefinierten Typs übergeben wird, ruft die <xref:System.Convert>-Methode wiederum die <xref:System.IConvertible>-Implementierung des benutzerdefinierten Typs auf, um die Konvertierung auszuführen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-160">When the <xref:System.Convert.ChangeType%2A> method is passed a custom type as its first parameter, or when the `Convert.To`*Type* method (such as <xref:System.Convert.ToInt32%28System.Object%29?displayProperty=nameWithType> or <xref:System.Convert.ToDouble%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> is called and passed an instance of a custom type as its first parameter, the <xref:System.Convert> method, in turn, calls the custom type's <xref:System.IConvertible> implementation to perform the conversion.</span></span> <span data-ttu-id="d59d4-161">Weitere Informationen finden Sie unter [Typkonvertierung in der .NET Framework](~/docs/standard/base-types/type-conversion.md).</span><span class="sxs-lookup"><span data-stu-id="d59d4-161">For more information, see [Type Conversion in the .NET Framework](~/docs/standard/base-types/type-conversion.md).</span></span>  
  
<a name="Culture"></a>   
## <a name="culture-specific-formatting-information"></a><span data-ttu-id="d59d4-162">Kulturspezifische Formatierungsinformationen</span><span class="sxs-lookup"><span data-stu-id="d59d4-162">Culture-Specific Formatting Information</span></span>  
 <span data-ttu-id="d59d4-163">Alle grundlegenden Typkonvertierungs Methoden und die <xref:System.Convert.ChangeType%2A>-Methode enthalten über Ladungen, die einen Parameter vom Typ "<xref:System.IFormatProvider>" aufweisen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-163">All the base type conversion methods and the <xref:System.Convert.ChangeType%2A> method include overloads that have a parameter of type <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="d59d4-164">Die <xref:System.Convert.ToBoolean%2A?displayProperty=nameWithType>-Methode hat z. b. die folgenden zwei über Ladungen:</span><span class="sxs-lookup"><span data-stu-id="d59d4-164">For example, the <xref:System.Convert.ToBoolean%2A?displayProperty=nameWithType> method has the following two overloads:</span></span>  
  
-   <xref:System.Convert.ToBoolean%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType>  
  
-   <xref:System.Convert.ToBoolean%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>  
  
 <span data-ttu-id="d59d4-165">Der <xref:System.IFormatProvider>-Parameter kann kulturspezifische Formatierungsinformationen bereitstellen, um den Konvertierungsprozess zu unterstützen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-165">The <xref:System.IFormatProvider> parameter can supply culture-specific formatting information to assist the conversion process.</span></span> <span data-ttu-id="d59d4-166">Sie wird jedoch von den meisten der Basistyp-Konvertierungs Methoden ignoriert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-166">However, it is ignored by most of the base type conversion methods.</span></span> <span data-ttu-id="d59d4-167">Sie wird nur von den folgenden Basistyp-Konvertierungs Methoden verwendet. Wenn ein `null`<xref:System.IFormatProvider>-Argument an diese Methoden übermittelt wird, wird das <xref:System.Globalization.CultureInfo> Objekt verwendet, das die aktuelle Thread Kultur darstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-167">It is used only by the following base type conversion methods.If a `null`<xref:System.IFormatProvider> argument is passed to these methods, the <xref:System.Globalization.CultureInfo> object that represents the current thread culture is used.</span></span>  
  
-   <span data-ttu-id="d59d4-168">Nach Methoden, die einen Wert in einen numerischen Typ konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-168">By methods that convert a value to a numeric type.</span></span> <span data-ttu-id="d59d4-169">Der <xref:System.IFormatProvider>-Parameter wird von der Überladung verwendet, die Parameter vom Typ <xref:System.String> und <xref:System.IFormatProvider>enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-169">The <xref:System.IFormatProvider> parameter is used by the overload that has parameters of type <xref:System.String> and <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="d59d4-170">Sie wird auch von der Überladung mit Parametern vom Typ <xref:System.Object> und <xref:System.IFormatProvider> verwendet, wenn der Lauf Zeittyp des Objekts eine <xref:System.String>ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-170">It is also used by the overload that has parameters of type <xref:System.Object> and <xref:System.IFormatProvider> if the object's run-time type is a <xref:System.String>.</span></span>  
  
-   <span data-ttu-id="d59d4-171">Nach Methoden, die einen-Wert in ein Datum und eine Uhrzeit konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-171">By methods that convert a value to a date and time.</span></span> <span data-ttu-id="d59d4-172">Der <xref:System.IFormatProvider>-Parameter wird von der Überladung verwendet, die Parameter vom Typ <xref:System.String> und <xref:System.IFormatProvider>enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-172">The <xref:System.IFormatProvider> parameter is used by the overload that has parameters of type <xref:System.String> and <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="d59d4-173">Sie wird auch von der Überladung mit Parametern vom Typ <xref:System.Object> und <xref:System.IFormatProvider> verwendet, wenn der Lauf Zeittyp des Objekts eine <xref:System.String>ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-173">It is also used by the overload that has parameters of type <xref:System.Object> and <xref:System.IFormatProvider> if the object's run-time type is a <xref:System.String>.</span></span>  
  
-   <span data-ttu-id="d59d4-174">Durch die <xref:System.Convert.ToString%2A?displayProperty=nameWithType> Überladungen, die einen <xref:System.IFormatProvider>-Parameter enthalten und die entweder einen numerischen Wert in eine Zeichenfolge oder einen <xref:System.DateTime> Wert in eine Zeichenfolge konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-174">By the <xref:System.Convert.ToString%2A?displayProperty=nameWithType> overloads that include an <xref:System.IFormatProvider> parameter and that convert either a numeric value to a string or a <xref:System.DateTime> value to a string.</span></span>  
  
 <span data-ttu-id="d59d4-175">Allerdings kann ein benutzerdefinierter Typ, der <xref:System.IConvertible> implementiert, den <xref:System.IFormatProvider>-Parameter verwenden.</span><span class="sxs-lookup"><span data-stu-id="d59d4-175">However, any user-defined type that implements <xref:System.IConvertible> can make use of the <xref:System.IFormatProvider> parameter.</span></span>  
  
<a name="Base64"></a>   
## <a name="base64-encoding"></a><span data-ttu-id="d59d4-176">Base64-Codierung</span><span class="sxs-lookup"><span data-stu-id="d59d4-176">Base64 Encoding</span></span>  
 <span data-ttu-id="d59d4-177">Base64-Codierung konvertiert Binärdaten in eine Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d59d4-177">Base64 encoding converts binary data to a string.</span></span> <span data-ttu-id="d59d4-178">Daten, die als Base-64-Ziffern ausgedrückt werden, können problemlos über Datenkanäle übermittelt werden, die nur 7-Bit-Zeichen übertragen können.</span><span class="sxs-lookup"><span data-stu-id="d59d4-178">Data expressed as base-64 digits can be easily conveyed over data channels that can only transmit 7-bit characters.</span></span> <span data-ttu-id="d59d4-179">Die <xref:System.Convert>-Klasse enthält die folgenden Methoden zur Unterstützung der Base64-Codierung: ein Satz von-Methoden unterstützt das umrechnen eines Bytearrays in und aus einer <xref:System.String> oder in ein und aus einem Array von Unicode-Zeichen, die aus Basis-64 Ziffern Zeichen bestehen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-179">The <xref:System.Convert> class includes the following methods to support base64 encoding: A set of methods support converting an array of bytes to and from a <xref:System.String> or to and from an array of Unicode characters consisting of base-64 digit characters.</span></span>  
  
-   <span data-ttu-id="d59d4-180"><xref:System.Convert.ToBase64String%2A>, die ein Bytearray in eine Base64-codierte Zeichenfolge konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-180"><xref:System.Convert.ToBase64String%2A>, which converts a byte array to a base64-encoded string.</span></span>  
  
-   <span data-ttu-id="d59d4-181"><xref:System.Convert.ToBase64CharArray%2A>, die ein Bytearray in ein Base64-codiertes Zeichen Array konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-181"><xref:System.Convert.ToBase64CharArray%2A>, which converts a byte array to a base64-encoded character array.</span></span>  
  
-   <span data-ttu-id="d59d4-182"><xref:System.Convert.FromBase64String%2A>, das eine Base64-codierte Zeichenfolge in ein Bytearray konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-182"><xref:System.Convert.FromBase64String%2A>, which converts a base64-encoded string to a byte array.</span></span>  
  
-   <span data-ttu-id="d59d4-183"><xref:System.Convert.FromBase64CharArray%2A>, das ein Base64-codiertes Zeichen Array in ein Bytearray konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-183"><xref:System.Convert.FromBase64CharArray%2A>, which converts a base64-encoded character array to a byte array.</span></span>  
  
<a name="Other"></a>   
## <a name="other-common-conversions"></a><span data-ttu-id="d59d4-184">Andere gängige Konvertierungen</span><span class="sxs-lookup"><span data-stu-id="d59d4-184">Other Common Conversions</span></span>  
 <span data-ttu-id="d59d4-185">Sie können andere Klassen in .NET Framework verwenden, um einige Konvertierungen durchzuführen, die von den statischen Methoden der <xref:System.Convert>-Klasse nicht unterstützt werden.</span><span class="sxs-lookup"><span data-stu-id="d59d4-185">You can use other classes in the NET Framework to perform some conversions that are not supported by the static methods of the <xref:System.Convert> class.</span></span>  <span data-ttu-id="d59d4-186">Dazu gehören:</span><span class="sxs-lookup"><span data-stu-id="d59d4-186">These include:</span></span>  
  
 <span data-ttu-id="d59d4-187">Konvertierung in Byte Arrays</span><span class="sxs-lookup"><span data-stu-id="d59d4-187">Conversion to byte arrays</span></span>  
 <span data-ttu-id="d59d4-188">Die <xref:System.BitConverter>-Klasse stellt Methoden bereit, die die primitiven numerischen Typen (einschließlich <xref:System.Boolean>) in Bytearrays und Bytearrays zurück in primitive Datentypen konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-188">The <xref:System.BitConverter> class  provides methods that convert the primitive numeric types (including <xref:System.Boolean>) to byte arrays and from byte arrays back to primitive data types.</span></span>  
  
 <span data-ttu-id="d59d4-189">Zeichencodierung und-Decodierung</span><span class="sxs-lookup"><span data-stu-id="d59d4-189">Character encoding and decoding</span></span>  
 <span data-ttu-id="d59d4-190">Die <xref:System.Text.Encoding>-Klasse und die abgeleiteten Klassen (z. b. <xref:System.Text.UnicodeEncoding> und <xref:System.Text.UTF8Encoding>) stellen Methoden zum Codieren eines Zeichen Arrays oder einer Zeichenfolge (d. h. zum Konvertieren in ein Bytearray in einer bestimmten Codierung) und zum Decodieren eines codierten Bytearrays bereit (d. h. Konvertieren eines Bytearrays in UTF16-codierte Unicode-Zeichen).</span><span class="sxs-lookup"><span data-stu-id="d59d4-190">The <xref:System.Text.Encoding> class and its derived classes (such as <xref:System.Text.UnicodeEncoding> and <xref:System.Text.UTF8Encoding>) provide methods to encode a character array or a string (that is, to convert them to a byte array in a particular encoding) and to decode an encoded byte array (that is, convert a byte array back to UTF16-encoded Unicode characters.</span></span> <span data-ttu-id="d59d4-191">Weitere Informationen finden Sie unter [Zeichencodierung im .NET Framework](~/docs/standard/base-types/character-encoding.md)</span><span class="sxs-lookup"><span data-stu-id="d59d4-191">For more information, see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-192">Das folgende Beispiel veranschaulicht einige der Konvertierungs Methoden in der <xref:System.Convert>-Klasse, einschließlich <xref:System.Convert.ToInt32%2A>, <xref:System.Convert.ToBoolean%2A>und <xref:System.Convert.ToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="d59d4-192">The following example demonstrates some of the conversion methods in the <xref:System.Convert> class, including <xref:System.Convert.ToInt32%2A>, <xref:System.Convert.ToBoolean%2A>, and <xref:System.Convert.ToString%2A>.</span></span>  
  
 [!code-cpp[System.Convert#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert/CPP/converter.cpp#1)]
 [!code-csharp[System.Convert#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert/CS/converter.cs#1)]
 [!code-vb[System.Convert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert/VB/converter.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IConvertible" />
    <altmember cref="T:System.Object" />
    <altmember cref="T:System.SByte" />
    <altmember cref="T:System.Int16" />
    <altmember cref="T:System.Int32" />
    <altmember cref="T:System.Int64" />
    <altmember cref="T:System.Byte" />
    <altmember cref="T:System.UInt16" />
    <altmember cref="T:System.UInt32" />
    <altmember cref="T:System.UInt64" />
    <altmember cref="T:System.Single" />
    <altmember cref="T:System.Double" />
    <altmember cref="T:System.Decimal" />
    <altmember cref="T:System.Boolean" />
    <altmember cref="T:System.Char" />
    <altmember cref="T:System.String" />
    <related type="Article" href="~/docs/standard/base-types/type-conversion.md"><span data-ttu-id="d59d4-193">Typkonvertierung in .NET Framework</span><span class="sxs-lookup"><span data-stu-id="d59d4-193">Type Conversion in the .NET Framework</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="ChangeType">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d59d4-194">Gibt ein Objekt eines angegebenen Typs zurück, dessen Wert einem angegebenen Objekt entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-194">Returns an object of a specified type whose value is equivalent to a specified object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ChangeType">
      <MemberSignature Language="C#" Value="public static object ChangeType (object value, Type conversionType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ChangeType(object value, class System.Type conversionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ChangeType(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ChangeType (value As Object, conversionType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ChangeType(System::Object ^ value, Type ^ conversionType);" />
      <MemberSignature Language="F#" Value="static member ChangeType : obj * Type -&gt; obj" Usage="System.Convert.ChangeType (value, conversionType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="conversionType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-195">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-195">An object that implements the <see cref="T:System.IConvertible" /> interface.</span></span></param>
        <param name="conversionType"><span data-ttu-id="d59d4-196">Der Typ des zurückzugebenden Objekts.</span><span class="sxs-lookup"><span data-stu-id="d59d4-196">The type of object to return.</span></span></param>
        <summary><span data-ttu-id="d59d4-197">Gibt ein Objekt vom angegebenen Typ zurück, dessen Wert dem angegebenen Objekt entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-197">Returns an object of the specified type and whose value is equivalent to the specified object.</span></span></summary>
        <returns><span data-ttu-id="d59d4-198">Ein Objekt, dessen Typ <paramref name="conversionType" /> ist und dessen Wert <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-198">An object whose type is <paramref name="conversionType" /> and whose value is equivalent to <paramref name="value" />.</span></span>  
  
<span data-ttu-id="d59d4-199">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-199">-or-</span></span> 
<span data-ttu-id="d59d4-200">Ein Nullverweis (<see langword="Nothing" /> in Visual Basic), wenn <paramref name="value" /><see langword="null" /> ist und <paramref name="conversionType" /> kein Werttyp.</span><span class="sxs-lookup"><span data-stu-id="d59d4-200">A null reference (<see langword="Nothing" /> in Visual Basic), if <paramref name="value" /> is <see langword="null" /> and <paramref name="conversionType" /> is not a value type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-201"><xref:System.Convert.ChangeType%2A> ist eine allgemeine Konvertierungsmethode, die das von `value` angegebene Objekt in `conversionType`konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-201"><xref:System.Convert.ChangeType%2A> is a general-purpose conversion method that converts the object specified by `value` to `conversionType`.</span></span> <span data-ttu-id="d59d4-202">Der `value`-Parameter kann ein Objekt eines beliebigen Typs sein, und `conversionType` kann auch ein <xref:System.Type> Objekt sein, das einen beliebigen Basis-oder benutzerdefinierten Typ darstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-202">The `value` parameter can be an object of any type, and `conversionType` can also be a <xref:System.Type> object that represents any base or custom type.</span></span> <span data-ttu-id="d59d4-203">Damit die Konvertierung erfolgreich durchgeführt werden kann, müssen `value` die <xref:System.IConvertible>-Schnittstelle implementieren, da die Methode einfach einen aufzurufenden <xref:System.IConvertible> Methode umschließt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-203">For the conversion to succeed, `value` must implement the <xref:System.IConvertible> interface, because the method simply wraps a call to an appropriate <xref:System.IConvertible> method.</span></span> <span data-ttu-id="d59d4-204">Die-Methode erfordert, dass die Konvertierung von `value` in `conversionType` unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-204">The method requires that conversion of `value` to `conversionType` be supported.</span></span>  
  
 <span data-ttu-id="d59d4-205">Diese Methode verwendet die Kultur des aktuellen Threads für die Konvertierung.</span><span class="sxs-lookup"><span data-stu-id="d59d4-205">This method uses the current thread's culture for the conversion.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-206">Im folgenden Beispiel wird die Verwendung der <xref:System.Convert.ChangeType%2A>-Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-206">The following example illustrates the use of the <xref:System.Convert.ChangeType%2A> method.</span></span>  
  
 [!code-cpp[convertchangetype#1](~/samples/snippets/cpp/VS_Snippets_CLR/convertchangetype/CPP/convertchangetype.cpp#1)]
 [!code-csharp[convertchangetype#1](~/samples/snippets/csharp/VS_Snippets_CLR/convertchangetype/CS/convertchangetype.cs#1)]
 [!code-vb[convertchangetype#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/convertchangetype/VB/convertchangetype.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-207">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-207">This conversion is not supported.</span></span>  
  
<span data-ttu-id="d59d4-208">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-208">-or-</span></span> 
 <span data-ttu-id="d59d4-209"><paramref name="value" /> ist <see langword="null" />, und <paramref name="conversionType" /> ist ein Werttyp.</span><span class="sxs-lookup"><span data-stu-id="d59d4-209"><paramref name="value" /> is <see langword="null" /> and <paramref name="conversionType" /> is a value type.</span></span>  
  
<span data-ttu-id="d59d4-210">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-210">-or-</span></span> 
 <span data-ttu-id="d59d4-211">Die <paramref name="value" />-Schnittstelle wird von <see cref="T:System.IConvertible" /> nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-211"><paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-212"><paramref name="value" /> hat ein Format, das von <paramref name="conversionType" /> nicht erkannt wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-212"><paramref name="value" /> is not in a format recognized by <paramref name="conversionType" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-213"><paramref name="value" /> stellt eine Zahl außerhalb des Bereichs von <paramref name="conversionType" /> dar.</span><span class="sxs-lookup"><span data-stu-id="d59d4-213"><paramref name="value" /> represents a number that is out of the range of <paramref name="conversionType" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d59d4-214"><paramref name="conversionType" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-214"><paramref name="conversionType" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="d59d4-215">Mit der <see cref="M:System.Convert.ChangeType(System.Object,System.Type)" />-Methode kann ein Enumerationswert in einen anderen Typ konvertiert werden.</span><span class="sxs-lookup"><span data-stu-id="d59d4-215">The <see cref="M:System.Convert.ChangeType(System.Object,System.Type)" /> method can convert an enumeration value to another type.</span></span> <span data-ttu-id="d59d4-216">Es ist jedoch nicht möglich, einen anderen Typ in einen Enumerationswert zu konvertieren, auch wenn der Quelltyp der zugrunde liegende Typ der Enumeration ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-216">However, it cannot convert another type to an enumeration value, even if the source type is the underlying type of the enumeration.</span></span> <span data-ttu-id="d59d4-217">Um einen Typ in einen Enumerationswert zu konvertieren, verwenden Sie einen Umwandlungs Operator (in C#) oder eine Konvertierungs Funktion (in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="d59d4-217">To convert a type to an enumeration value, use a casting operator (in C#) or a conversion function (in Visual Basic).</span></span> <span data-ttu-id="d59d4-218">Das folgende Beispiel veranschaulicht die Konvertierung in einen und aus einem <c>Kontinent</c> -Enumerationswert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-218">The following example illustrates the conversion to and from a <c>Continent</c> enumeration value.</span></span>  
  
<span data-ttu-id="d59d4-219">[! Code-csharp[System. Convert. ChangeType # 5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype_enum2.cs#5)] [! Code-vb[System. Convert. ChangeType # 5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype_enum2.vb#5)]</span><span class="sxs-lookup"><span data-stu-id="d59d4-219">[!code-csharp[System.Convert.ChangeType#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype_enum2.cs#5)] [!code-vb[System.Convert.ChangeType#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype_enum2.vb#5)]</span></span> 
<span data-ttu-id="d59d4-220">Die <see cref="M:System.Convert.ChangeType(System.Object,System.Type)" /> Methode kann einen Typ, der NULL-Werte zulässt, in einen anderen Typ konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-220">The <see cref="M:System.Convert.ChangeType(System.Object,System.Type)" /> method can convert a nullable type to another type.</span></span> <span data-ttu-id="d59d4-221">Es ist jedoch nicht möglich, einen anderen Typ in einen Wert eines Typs zu konvertieren, der NULL-Werte zulässt, auch wenn <paramref name="conversionType" /> der zugrunde liegende Typ des <see cref="T:System.Nullable`1" />ist. Sie können einen Typumwandlungs Operator (in C#) oder eine Konvertierungs Funktion (in Visual Basic) verwenden, um die Konvertierung auszuführen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-221">However, it cannot convert another type to a value of a nullable type, even if <paramref name="conversionType" /> is the underlying type of the <see cref="T:System.Nullable`1" />.To perform the conversion, you can use a casting operator (in C#) or a conversion function (in Visual Basic).</span></span> <span data-ttu-id="d59d4-222">Im folgenden Beispiel wird die Konvertierung in einen und aus einem Werte zulässt-Typ veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-222">The following example illustrates the conversion to and from a nullable type.</span></span>  
  
<span data-ttu-id="d59d4-223">[! Code-csharp[System. Convert. ChangeType # 7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype_nullable.cs#7)] [! Code-vb[System. Convert. ChangeType # 7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype_nullable.vb#7)]</span><span class="sxs-lookup"><span data-stu-id="d59d4-223">[!code-csharp[System.Convert.ChangeType#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype_nullable.cs#7)] [!code-vb[System.Convert.ChangeType#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype_nullable.vb#7)]</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="ChangeType">
      <MemberSignature Language="C#" Value="public static object ChangeType (object value, TypeCode typeCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ChangeType(object value, valuetype System.TypeCode typeCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ChangeType(System.Object,System.TypeCode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ChangeType(System::Object ^ value, TypeCode typeCode);" />
      <MemberSignature Language="F#" Value="static member ChangeType : obj * TypeCode -&gt; obj" Usage="System.Convert.ChangeType (value, typeCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="typeCode" Type="System.TypeCode" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-224">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-224">An object that implements the <see cref="T:System.IConvertible" /> interface.</span></span></param>
        <param name="typeCode"><span data-ttu-id="d59d4-225">Der Typ des zurückzugebenden Objekts.</span><span class="sxs-lookup"><span data-stu-id="d59d4-225">The type of object to return.</span></span></param>
        <summary><span data-ttu-id="d59d4-226">Gibt ein Objekt vom angegebenen Typ zurück, dessen Wert dem angegebenen Objekt entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-226">Returns an object of the specified type whose value is equivalent to the specified object.</span></span></summary>
        <returns><span data-ttu-id="d59d4-227">Ein Objekt, dem <paramref name="typeCode" /> als Typ zugrunde liegt und dessen Wert <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-227">An object whose underlying type is <paramref name="typeCode" /> and whose value is equivalent to <paramref name="value" />.</span></span>  
  
<span data-ttu-id="d59d4-228">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-228">-or-</span></span> 
<span data-ttu-id="d59d4-229">Ein Nullverweis (<see langword="Nothing" /> in Visual Basic), wenn <paramref name="value" /><see langword="null" /> ist und <paramref name="typeCode" /><see cref="F:System.TypeCode.Empty" />, <see cref="F:System.TypeCode.String" /> oder <see cref="F:System.TypeCode.Object" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-229">A null reference (<see langword="Nothing" /> in Visual Basic), if <paramref name="value" /> is <see langword="null" /> and <paramref name="typeCode" /> is <see cref="F:System.TypeCode.Empty" />, <see cref="F:System.TypeCode.String" />, or <see cref="F:System.TypeCode.Object" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-230"><xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%29> ist eine allgemeine Konvertierungsmethode, die das durch `value` angegebene Objekt in einen von `typeCode`angegebenen vordefinierten Typ konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-230"><xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%29> is a general-purpose conversion method that converts the object specified by `value` to a predefined type specified by `typeCode`.</span></span> <span data-ttu-id="d59d4-231">Der `value`-Parameter kann ein Objekt eines beliebigen Typs sein.</span><span class="sxs-lookup"><span data-stu-id="d59d4-231">The `value` parameter can be an object of any type.</span></span> <span data-ttu-id="d59d4-232">Damit die Konvertierung erfolgreich durchgeführt werden kann, müssen `value` die <xref:System.IConvertible>-Schnittstelle implementieren, da die Methode einfach einen aufzurufenden <xref:System.IConvertible> Methode umschließt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-232">For the conversion to succeed, `value` must implement the <xref:System.IConvertible> interface, because the method simply wraps a call to an appropriate <xref:System.IConvertible> method.</span></span> <span data-ttu-id="d59d4-233">Die-Methode erfordert auch, dass die Konvertierung von `value` in `typeCode` unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-233">The method also requires that conversion of `value` to `typeCode` be supported.</span></span>  
  
 <span data-ttu-id="d59d4-234">Die <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%29>-Methode unterstützt nicht die Konvertierung von `value` in einen benutzerdefinierten Typ.</span><span class="sxs-lookup"><span data-stu-id="d59d4-234">The <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%29> method does not support the conversion of `value` to a custom type.</span></span> <span data-ttu-id="d59d4-235">Um eine solche Konvertierung durchzuführen, müssen Sie die <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%29>-Methode abrufen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-235">To perform such a conversion, call the <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-236">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%29>-Methode verwendet wird, um eine <xref:System.Object> in den vom <xref:System.TypeCode>-Parameter angegebenen Typ zu ändern, sofern möglich.</span><span class="sxs-lookup"><span data-stu-id="d59d4-236">The following example illustrates how to use the <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%29> method to change an <xref:System.Object> to the type specified by the <xref:System.TypeCode> parameter, if possible.</span></span>  
  
 [!code-cpp[System.Convert.ChangeType#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.convert.changetype/cpp/changetype_01.cpp#2)]
 [!code-csharp[System.Convert.ChangeType#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype01.cs#2)]
 [!code-vb[System.Convert.ChangeType#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype01.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-237">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-237">This conversion is not supported.</span></span>  
  
<span data-ttu-id="d59d4-238">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-238">-or-</span></span> 
 <span data-ttu-id="d59d4-239"><paramref name="value" /> ist <see langword="null" />, und <paramref name="typeCode" /> gibt einen Werttyp an.</span><span class="sxs-lookup"><span data-stu-id="d59d4-239"><paramref name="value" /> is <see langword="null" /> and <paramref name="typeCode" /> specifies a value type.</span></span>  
  
<span data-ttu-id="d59d4-240">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-240">-or-</span></span> 
 <span data-ttu-id="d59d4-241">Die <paramref name="value" />-Schnittstelle wird von <see cref="T:System.IConvertible" /> nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-241"><paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-242"><paramref name="value" /> hat ein Format, das vom <paramref name="typeCode" />-Typ nicht erkannt wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-242"><paramref name="value" /> is not in a format recognized by the <paramref name="typeCode" /> type.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-243"><paramref name="value" /> stellt eine Zahl außerhalb des Bereichs des <paramref name="typeCode" />-Typs dar.</span><span class="sxs-lookup"><span data-stu-id="d59d4-243"><paramref name="value" /> represents a number that is out of the range of the <paramref name="typeCode" /> type.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d59d4-244"><paramref name="typeCode" /> ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="d59d4-244"><paramref name="typeCode" /> is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ChangeType">
      <MemberSignature Language="C#" Value="public static object ChangeType (object value, Type conversionType, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ChangeType(object value, class System.Type conversionType, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ChangeType (value As Object, conversionType As Type, provider As IFormatProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ChangeType(System::Object ^ value, Type ^ conversionType, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ChangeType : obj * Type * IFormatProvider -&gt; obj" Usage="System.Convert.ChangeType (value, conversionType, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="conversionType" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-245">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-245">An object that implements the <see cref="T:System.IConvertible" /> interface.</span></span></param>
        <param name="conversionType"><span data-ttu-id="d59d4-246">Der Typ des zurückzugebenden Objekts.</span><span class="sxs-lookup"><span data-stu-id="d59d4-246">The type of object to return.</span></span></param>
        <param name="provider"><span data-ttu-id="d59d4-247">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-247">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="d59d4-248">Gibt ein Objekt vom angegebenen Typ zurück, dessen Wert dem angegebenen Objekt entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-248">Returns an object of the specified type whose value is equivalent to the specified object.</span></span> <span data-ttu-id="d59d4-249">Ein Parameter liefert kulturspezifische Formatierungsinformationen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-249">A parameter supplies culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="d59d4-250">Ein Objekt, dessen Typ <paramref name="conversionType" /> ist und dessen Wert <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-250">An object whose type is <paramref name="conversionType" /> and whose value is equivalent to <paramref name="value" />.</span></span>  
  
<span data-ttu-id="d59d4-251">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-251">-or-</span></span> 
 <span data-ttu-id="d59d4-252"><paramref name="value" />, wenn der <see cref="T:System.Type" /> von <paramref name="value" /> und <paramref name="conversionType" /> gleich sind.</span><span class="sxs-lookup"><span data-stu-id="d59d4-252"><paramref name="value" />, if the <see cref="T:System.Type" /> of <paramref name="value" /> and <paramref name="conversionType" /> are equal.</span></span>  
  
<span data-ttu-id="d59d4-253">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-253">-or-</span></span> 
<span data-ttu-id="d59d4-254">Ein Nullverweis (<see langword="Nothing" /> in Visual Basic), wenn <paramref name="value" /><see langword="null" /> ist und <paramref name="conversionType" /> kein Werttyp.</span><span class="sxs-lookup"><span data-stu-id="d59d4-254">A null reference (<see langword="Nothing" /> in Visual Basic), if <paramref name="value" /> is <see langword="null" /> and <paramref name="conversionType" /> is not a value type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-255"><xref:System.Convert.ChangeType%2A> ist eine allgemeine Konvertierungsmethode, die das von `value` angegebene Objekt in `conversionType`konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-255"><xref:System.Convert.ChangeType%2A> is a general-purpose conversion method that converts the object specified by `value` to `conversionType`.</span></span> <span data-ttu-id="d59d4-256">Der `value`-Parameter kann ein Objekt eines beliebigen Typs sein, und `conversionType` kann auch ein <xref:System.Type> Objekt sein, das einen beliebigen Basis-oder benutzerdefinierten Typ darstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-256">The `value` parameter can be an object of any type, and `conversionType` can also be a <xref:System.Type> object that represents any base or custom type.</span></span> <span data-ttu-id="d59d4-257">Damit die Konvertierung erfolgreich durchgeführt werden kann, müssen `value` die <xref:System.IConvertible>-Schnittstelle implementieren, da die Methode einfach einen aufzurufenden <xref:System.IConvertible> Methode umschließt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-257">For the conversion to succeed, `value` must implement the <xref:System.IConvertible> interface, because the method simply wraps a call to an appropriate <xref:System.IConvertible> method.</span></span> <span data-ttu-id="d59d4-258">Die-Methode erfordert, dass die Konvertierung von `value` in `conversionType` unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-258">The method requires that conversion of `value` to `conversionType` be supported.</span></span>  
  
 <span data-ttu-id="d59d4-259">Der `provider`-Parameter ist eine <xref:System.IFormatProvider> Implementierung, die Formatierungsinformationen für die Konvertierung bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-259">The `provider` parameter is an <xref:System.IFormatProvider> implementation that supplies formatting information for the conversion.</span></span> <span data-ttu-id="d59d4-260">Ob und wie dieser Parameter verwendet wird, hängt von der zugrunde liegenden <xref:System.IConvertible> Implementierung ab.</span><span class="sxs-lookup"><span data-stu-id="d59d4-260">Whether and how this parameter is used depends on the underlying <xref:System.IConvertible> implementation.</span></span> <span data-ttu-id="d59d4-261">Wenn `value` ein Basis Datentyp ist, wird `provider` nur für die folgenden Konvertierungen verwendet:</span><span class="sxs-lookup"><span data-stu-id="d59d4-261">If `value` is a base data type, `provider` is used only for the following conversions:</span></span>  
  
-   <span data-ttu-id="d59d4-262">Konvertierung von einer Zahl in eine Zeichenfolge oder von einer Zeichenfolge in eine Zahl.</span><span class="sxs-lookup"><span data-stu-id="d59d4-262">Conversion from a number to a string, or from a string to a number.</span></span> <span data-ttu-id="d59d4-263">`provider` muss ein <xref:System.Globalization.CultureInfo> Objekt, ein <xref:System.Globalization.NumberFormatInfo> Objekt oder eine benutzerdefinierte <xref:System.IFormatProvider> Implementierung sein, die ein <xref:System.Globalization.NumberFormatInfo> Objekt zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-263">`provider` must be a <xref:System.Globalization.CultureInfo> object, a <xref:System.Globalization.NumberFormatInfo> object, or a custom <xref:System.IFormatProvider> implementation that returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="d59d4-264">Da die <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29>-Methode die Konvertierung jedoch mit dem Standardformat Bezeichner "G" ausführt, hat der `provider`-Parameter keine Auswirkung, wenn `value` oder der Zieltyp eine Ganzzahl ohne Vorzeichen ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-264">However, because the <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> method performs the conversion using the default "G" format specifier, the `provider` parameter has no effect if `value` or the target type is an unsigned integer.</span></span> <span data-ttu-id="d59d4-265">Wenn `provider` `null`ist, wird das <xref:System.Globalization.CultureInfo> Objekt verwendet, das die aktuelle Thread Kultur darstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-265">If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that represents the current thread culture is used.</span></span>  
  
-   <span data-ttu-id="d59d4-266">Konvertierung eines <xref:System.DateTime> Werts in eine Zeichenfolge oder von einer Zeichenfolge in einen <xref:System.DateTime> Wert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-266">Conversion from a <xref:System.DateTime> value to a string, or from a string to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="d59d4-267">`provider` muss ein <xref:System.Globalization.CultureInfo> oder <xref:System.Globalization.DateTimeFormatInfo> Objekt sein.</span><span class="sxs-lookup"><span data-stu-id="d59d4-267">`provider` must be a <xref:System.Globalization.CultureInfo> or <xref:System.Globalization.DateTimeFormatInfo> object.</span></span> <span data-ttu-id="d59d4-268">Wenn `provider` `null`ist, wird das <xref:System.Globalization.CultureInfo> Objekt verwendet, das die aktuelle Thread Kultur darstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-268">If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that represents the current thread culture is used.</span></span>  
  
 <span data-ttu-id="d59d4-269">Wenn `value` ein Anwendungs definierter Typ ist, kann die <xref:System.IConvertible> Implementierung den `provider`-Parameter verwenden.</span><span class="sxs-lookup"><span data-stu-id="d59d4-269">If `value` is an application-defined type, its <xref:System.IConvertible> implementation may use the `provider` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-270">Im folgenden Beispiel wird eine `Temperature` -Klasse definiert, die die <xref:System.IConvertible> -Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-270">The following example defines a `Temperature` class that implements the <xref:System.IConvertible> interface.</span></span>  
  
 [!code-cpp[System.Convert.ChangeType#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.convert.changetype/cpp/changetype03.cpp#3)]
 [!code-csharp[System.Convert.ChangeType#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype03.cs#3)]
 [!code-vb[System.Convert.ChangeType#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype03.vb#3)]  
  
 <span data-ttu-id="d59d4-271">Im folgenden Beispiel wird eine Instanz der `Temperature`-Klasse erstellt und die <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29>-Methode aufgerufen, um Sie in die grundlegenden numerischen Typen zu konvertieren, die vom-.NET Framework und in eine-<xref:System.String>unterstützt werden.</span><span class="sxs-lookup"><span data-stu-id="d59d4-271">The following example creates an instance of the `Temperature` class and calls the <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29> method to convert it to the basic numeric types supported by the .NET Framework and to a <xref:System.String>.</span></span> <span data-ttu-id="d59d4-272">Es veranschaulicht, dass die <xref:System.Convert.ChangeType%2A>-Methode einen Rückruf für die <xref:System.IConvertible> Implementierung des Quell Typs umschließt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-272">It illustrates that the <xref:System.Convert.ChangeType%2A> method wraps a call to the source type's <xref:System.IConvertible> implementation.</span></span>  
  
 [!code-cpp[System.Convert.ChangeType#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.convert.changetype/cpp/changetype03.cpp#4)]
 [!code-csharp[System.Convert.ChangeType#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype03.cs#4)]
 [!code-vb[System.Convert.ChangeType#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype03.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-273">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-273">This conversion is not supported.</span></span>  
  
<span data-ttu-id="d59d4-274">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-274">-or-</span></span> 
 <span data-ttu-id="d59d4-275"><paramref name="value" /> ist <see langword="null" />, und <paramref name="conversionType" /> ist ein Werttyp.</span><span class="sxs-lookup"><span data-stu-id="d59d4-275"><paramref name="value" /> is <see langword="null" /> and <paramref name="conversionType" /> is a value type.</span></span>  
  
<span data-ttu-id="d59d4-276">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-276">-or-</span></span> 
 <span data-ttu-id="d59d4-277">Die <paramref name="value" />-Schnittstelle wird von <see cref="T:System.IConvertible" /> nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-277"><paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-278"><paramref name="value" /> hat ein Format für <paramref name="conversionType" />, das von <paramref name="provider" /> nicht erkannt wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-278"><paramref name="value" /> is not in a format for <paramref name="conversionType" /> recognized by <paramref name="provider" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-279"><paramref name="value" /> stellt eine Zahl außerhalb des Bereichs von <paramref name="conversionType" /> dar.</span><span class="sxs-lookup"><span data-stu-id="d59d4-279"><paramref name="value" /> represents a number that is out of the range of <paramref name="conversionType" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d59d4-280"><paramref name="conversionType" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-280"><paramref name="conversionType" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="d59d4-281">Mit der <see cref="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)" />-Methode kann ein Enumerationswert in einen anderen Typ konvertiert werden.</span><span class="sxs-lookup"><span data-stu-id="d59d4-281">The <see cref="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)" /> method can convert an enumeration value to another type.</span></span> <span data-ttu-id="d59d4-282">Es ist jedoch nicht möglich, einen anderen Typ in einen Enumerationswert zu konvertieren, auch wenn der Quelltyp der zugrunde liegende Typ der Enumeration ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-282">However, it cannot convert another type to an enumeration value, even if the source type is the underlying type of the enumeration.</span></span> <span data-ttu-id="d59d4-283">Um einen Typ in einen Enumerationswert zu konvertieren, verwenden Sie einen Umwandlungs Operator (in C#) oder eine Konvertierungs Funktion (in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="d59d4-283">To convert a type to an enumeration value, use a casting operator (in C#) or a conversion function (in Visual Basic).</span></span> <span data-ttu-id="d59d4-284">Das folgende Beispiel veranschaulicht die Konvertierung in einen und aus einem <c>Kontinent</c> -Enumerationswert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-284">The following example illustrates the conversion to and from a <c>Continent</c> enumeration value.</span></span>  
  
<span data-ttu-id="d59d4-285">[! Code-csharp[System. Convert. ChangeType # 5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype_enum2.cs#5)] [! Code-vb[System. Convert. ChangeType # 5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype_enum2.vb#5)]</span><span class="sxs-lookup"><span data-stu-id="d59d4-285">[!code-csharp[System.Convert.ChangeType#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype_enum2.cs#5)] [!code-vb[System.Convert.ChangeType#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype_enum2.vb#5)]</span></span> 
<span data-ttu-id="d59d4-286">Die <see cref="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)" /> Methode kann einen Typ, der NULL-Werte zulässt, in einen anderen Typ konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-286">The <see cref="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)" /> method can convert a nullable type to another type.</span></span> <span data-ttu-id="d59d4-287">Es ist jedoch nicht möglich, einen anderen Typ in einen Wert eines Typs zu konvertieren, der NULL-Werte zulässt, auch wenn <paramref name="conversionType" /> der zugrunde liegende Typ des <see cref="T:System.Nullable`1" />ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-287">However, it cannot convert another type to a value of a nullable type, even if <paramref name="conversionType" /> is the underlying type of the <see cref="T:System.Nullable`1" />.</span></span> <span data-ttu-id="d59d4-288">Sie können einen Typumwandlungs Operator (in C#) oder eine Konvertierungs Funktion (in Visual Basic) verwenden, um die Konvertierung auszuführen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-288">To perform the conversion, you can use a casting operator (in C#) or a conversion function (in Visual Basic).</span></span> <span data-ttu-id="d59d4-289">Im folgenden Beispiel wird die Konvertierung in einen und aus einem Werte zulässt-Typ veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-289">The following example illustrates the conversion to and from a nullable type.</span></span>  
  
<span data-ttu-id="d59d4-290">[! Code-csharp[System. Convert. ChangeType # 8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype_nullable_1.cs#8)] [! Code-vb[System. Convert. ChangeType # 8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype_nullable_1.vb#8)]</span><span class="sxs-lookup"><span data-stu-id="d59d4-290">[!code-csharp[System.Convert.ChangeType#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype_nullable_1.cs#8)] [!code-vb[System.Convert.ChangeType#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype_nullable_1.vb#8)]</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="ChangeType">
      <MemberSignature Language="C#" Value="public static object ChangeType (object value, TypeCode typeCode, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ChangeType(object value, valuetype System.TypeCode typeCode, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ChangeType(System.Object,System.TypeCode,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ChangeType(System::Object ^ value, TypeCode typeCode, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ChangeType : obj * TypeCode * IFormatProvider -&gt; obj" Usage="System.Convert.ChangeType (value, typeCode, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="typeCode" Type="System.TypeCode" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-291">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-291">An object that implements the <see cref="T:System.IConvertible" /> interface.</span></span></param>
        <param name="typeCode"><span data-ttu-id="d59d4-292">Der Typ des zurückzugebenden Objekts.</span><span class="sxs-lookup"><span data-stu-id="d59d4-292">The type of object to return.</span></span></param>
        <param name="provider"><span data-ttu-id="d59d4-293">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-293">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="d59d4-294">Gibt ein Objekt vom angegebenen Typ zurück, dessen Wert dem angegebenen Objekt entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-294">Returns an object of the specified type whose value is equivalent to the specified object.</span></span> <span data-ttu-id="d59d4-295">Ein Parameter liefert kulturspezifische Formatierungsinformationen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-295">A parameter supplies culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="d59d4-296">Ein Objekt, dem <paramref name="typeCode" /> als Typ zugrunde liegt und dessen Wert <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-296">An object whose underlying type is <paramref name="typeCode" /> and whose value is equivalent to <paramref name="value" />.</span></span>  
  
<span data-ttu-id="d59d4-297">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-297">-or-</span></span> 
<span data-ttu-id="d59d4-298">Ein Nullverweis (<see langword="Nothing" /> in Visual Basic), wenn <paramref name="value" /><see langword="null" /> ist und <paramref name="typeCode" /><see cref="F:System.TypeCode.Empty" />, <see cref="F:System.TypeCode.String" /> oder <see cref="F:System.TypeCode.Object" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-298">A null reference (<see langword="Nothing" /> in Visual Basic), if <paramref name="value" /> is <see langword="null" /> and <paramref name="typeCode" /> is <see cref="F:System.TypeCode.Empty" />, <see cref="F:System.TypeCode.String" />, or <see cref="F:System.TypeCode.Object" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-299"><xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> ist eine allgemeine Konvertierungsmethode, die das durch `value` angegebene Objekt in einen von `typeCode`angegebenen vordefinierten Typ konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-299"><xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> is a general-purpose conversion method that converts the object specified by `value` to a predefined type specified by `typeCode`.</span></span> <span data-ttu-id="d59d4-300">Der `value`-Parameter kann ein Objekt eines beliebigen Typs sein.</span><span class="sxs-lookup"><span data-stu-id="d59d4-300">The `value` parameter can be an object of any type.</span></span> <span data-ttu-id="d59d4-301">Damit die Konvertierung erfolgreich durchgeführt werden kann, müssen `value` die <xref:System.IConvertible>-Schnittstelle implementieren, da die Methode einfach einen aufzurufenden <xref:System.IConvertible> Methode umschließt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-301">For the conversion to succeed, `value` must implement the <xref:System.IConvertible> interface, because the method simply wraps a call to an appropriate <xref:System.IConvertible> method.</span></span> <span data-ttu-id="d59d4-302">Die-Methode erfordert auch, dass die Konvertierung von `value` in `typeCode` unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-302">The method also requires that conversion of `value` to `typeCode` be supported.</span></span>  
  
 <span data-ttu-id="d59d4-303">Die <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29>-Methode unterstützt nicht die Konvertierung von `value` in einen benutzerdefinierten Typ.</span><span class="sxs-lookup"><span data-stu-id="d59d4-303">The <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> method does not support the conversion of `value` to a custom type.</span></span> <span data-ttu-id="d59d4-304">Um eine solche Konvertierung durchzuführen, müssen Sie die <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29>-Methode abrufen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-304">To perform such a conversion, call the <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29> method.</span></span>  
  
 <span data-ttu-id="d59d4-305">Der `provider`-Parameter ist eine <xref:System.IFormatProvider> Implementierung, die Formatierungsinformationen für die Konvertierung bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-305">The `provider` parameter is an <xref:System.IFormatProvider> implementation that supplies formatting information for the conversion.</span></span> <span data-ttu-id="d59d4-306">Ob und wie dieser Parameter verwendet wird, hängt von der zugrunde liegenden <xref:System.IConvertible> Implementierung ab.</span><span class="sxs-lookup"><span data-stu-id="d59d4-306">Whether and how this parameter is used depends on the underlying <xref:System.IConvertible> implementation.</span></span> <span data-ttu-id="d59d4-307">Wenn `value` ein Basis Datentyp ist, wird `provider` nur für die folgenden Konvertierungen verwendet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-307">If `value` is a base data type, `provider` is used only for the following conversions.</span></span> <span data-ttu-id="d59d4-308">Wenn ein `null`<xref:System.IFormatProvider>-Argument an diese Methoden übermittelt wird, wird das <xref:System.Globalization.CultureInfo> Objekt verwendet, das die aktuelle Thread Kultur darstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-308">If a `null`<xref:System.IFormatProvider> argument is passed to these methods, the <xref:System.Globalization.CultureInfo> object that represents the current thread culture is used.</span></span>  
  
-   <span data-ttu-id="d59d4-309">Konvertierung von einer Zahl in eine Zeichenfolge oder von einer Zeichenfolge in eine Zahl.</span><span class="sxs-lookup"><span data-stu-id="d59d4-309">Conversion from a number to a string, or from a string to a number.</span></span> <span data-ttu-id="d59d4-310">`provider` muss ein <xref:System.Globalization.CultureInfo> Objekt, ein <xref:System.Globalization.NumberFormatInfo> Objekt oder eine benutzerdefinierte <xref:System.IFormatProvider> Implementierung sein, die ein <xref:System.Globalization.NumberFormatInfo> Objekt zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-310">`provider` must be a <xref:System.Globalization.CultureInfo> object, a <xref:System.Globalization.NumberFormatInfo> object, or a custom <xref:System.IFormatProvider> implementation that returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="d59d4-311">Da die <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29>-Methode die Konvertierung jedoch mit dem Standardformat Bezeichner "G" ausführt, hat der `provider`-Parameter keine Auswirkung, wenn `value` oder der Zieltyp eine Ganzzahl ohne Vorzeichen ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-311">However, because the <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> method performs the conversion using the default "G" format specifier, the `provider` parameter has no effect if `value` or the target type is an unsigned integer.</span></span>  
  
-   <span data-ttu-id="d59d4-312">Konvertierung eines <xref:System.DateTime> Werts in eine Zeichenfolge oder von einer Zeichenfolge in einen <xref:System.DateTime> Wert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-312">Conversion from a <xref:System.DateTime> value to a string, or from a string to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="d59d4-313">`provider` muss ein <xref:System.Globalization.CultureInfo> oder <xref:System.Globalization.DateTimeFormatInfo> Objekt sein.</span><span class="sxs-lookup"><span data-stu-id="d59d4-313">`provider` must be a <xref:System.Globalization.CultureInfo> or <xref:System.Globalization.DateTimeFormatInfo> object.</span></span>  
  
 <span data-ttu-id="d59d4-314">Wenn `value` ein Anwendungs definierter Typ ist, kann die <xref:System.IConvertible> Implementierung den `provider`-Parameter verwenden.</span><span class="sxs-lookup"><span data-stu-id="d59d4-314">If `value` is an application-defined type, its <xref:System.IConvertible> implementation may use the `provider` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-315">Im folgenden Beispiel wird ein benutzerdefinierter Format Anbieter mit dem Namen `InterceptProvider` definiert, der angibt, wann seine <xref:System.IFormatProvider.GetFormat%2A>-Methode aufgerufen wird, und gibt eine <xref:System.Globalization.NumberFormatInfo> für die fr-FR-Kultur und ein <xref:System.Globalization.DateTimeFormatInfo> Objekt für die Kultur "en-US" zurück.</span><span class="sxs-lookup"><span data-stu-id="d59d4-315">The following example defines a custom format provider named `InterceptProvider` that indicates when its <xref:System.IFormatProvider.GetFormat%2A> method is called and returns a <xref:System.Globalization.NumberFormatInfo> for the fr-FR culture and a <xref:System.Globalization.DateTimeFormatInfo> object for the en-US culture.</span></span> <span data-ttu-id="d59d4-316">Dieser Format Anbieter wird bei allen Aufrufen der <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29>-Methode verwendet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-316">This format provider is used in all calls to the <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> method.</span></span> <span data-ttu-id="d59d4-317">Im Beispiel wird dann ein Array mit einem <xref:System.Double> und einem <xref:System.DateTime> Wert erstellt und wiederholte Aufrufe von <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> mit jedem Wert und jedem Member der <xref:System.TypeCode> Enumeration durchführt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-317">The example then creates an array with a <xref:System.Double> and a <xref:System.DateTime> value and makes repeated calls to <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> with each value and each member of the <xref:System.TypeCode> enumeration.</span></span> <span data-ttu-id="d59d4-318">Das Beispiel veranschaulicht, wann die-Methode den <xref:System.IFormatProvider>-Parameter verwendet, und veranschaulicht die Verwendung des `provider`-Parameters, um die Kultur abhängige Formatierung auszuführen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-318">The example illustrates when the method uses the <xref:System.IFormatProvider> parameter and also illustrates the use of the `provider` parameter to perform culture-sensitive formatting.</span></span>  
  
 [!code-cpp[System.Convert.ChangeType#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.convert.changetype/cpp/changetype00.cpp#1)]
 [!code-csharp[System.Convert.ChangeType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype00.cs#1)]
 [!code-vb[System.Convert.ChangeType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype00.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-319">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-319">This conversion is not supported.</span></span>  
  
<span data-ttu-id="d59d4-320">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-320">-or-</span></span> 
 <span data-ttu-id="d59d4-321"><paramref name="value" /> ist <see langword="null" />, und <paramref name="typeCode" /> gibt einen Werttyp an.</span><span class="sxs-lookup"><span data-stu-id="d59d4-321"><paramref name="value" /> is <see langword="null" /> and <paramref name="typeCode" /> specifies a value type.</span></span>  
  
<span data-ttu-id="d59d4-322">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-322">-or-</span></span> 
 <span data-ttu-id="d59d4-323">Die <paramref name="value" />-Schnittstelle wird von <see cref="T:System.IConvertible" /> nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-323"><paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-324"><paramref name="value" /> weist kein Format für den <paramref name="typeCode" />-Typ auf, der von <paramref name="provider" /> erkannt wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-324"><paramref name="value" /> is not in a format for the <paramref name="typeCode" /> type recognized by <paramref name="provider" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-325"><paramref name="value" /> stellt eine Zahl außerhalb des Bereichs des <paramref name="typeCode" />-Typs dar.</span><span class="sxs-lookup"><span data-stu-id="d59d4-325"><paramref name="value" /> represents a number that is out of the range of the <paramref name="typeCode" /> type.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d59d4-326"><paramref name="typeCode" /> ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="d59d4-326"><paramref name="typeCode" /> is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DBNull">
      <MemberSignature Language="C#" Value="public static readonly object DBNull;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly object DBNull" />
      <MemberSignature Language="DocId" Value="F:System.Convert.DBNull" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DBNull As Object " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Object ^ DBNull;" />
      <MemberSignature Language="F#" Value=" staticval mutable DBNull : obj" Usage="System.Convert.DBNull" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59d4-327">Eine Konstante, die eine Datenbankspalte ohne Daten darstellt, d. h. Datenbank-NULL.</span><span class="sxs-lookup"><span data-stu-id="d59d4-327">A constant that represents a database column that is absent of data; that is, database null.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-328">Das <xref:System.Convert.DBNull> Feld entspricht <xref:System.DBNull.Value?displayProperty=nameWithType>, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-328">The <xref:System.Convert.DBNull> field is equivalent to <xref:System.DBNull.Value?displayProperty=nameWithType>, as the following example shows.</span></span>  
  
 [!code-csharp[System.Convert.DBNull#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.dbnull/cs/dbnull1.cs#1)]
 [!code-vb[System.Convert.DBNull#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.dbnull/vb/dbnull1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DBNull" />
        <altmember cref="F:System.DBNull.Value" />
      </Docs>
    </Member>
    <Member MemberName="FromBase64CharArray">
      <MemberSignature Language="C#" Value="public static byte[] FromBase64CharArray (char[] inArray, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] FromBase64CharArray(char[] inArray, int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromBase64CharArray (inArray As Char(), offset As Integer, length As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ FromBase64CharArray(cli::array &lt;char&gt; ^ inArray, int offset, int length);" />
      <MemberSignature Language="F#" Value="static member FromBase64CharArray : char[] * int * int -&gt; byte[]" Usage="System.Convert.FromBase64CharArray (inArray, offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inArray" Type="System.Char[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inArray"><span data-ttu-id="d59d4-329">Ein Array von Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-329">A Unicode character array.</span></span></param>
        <param name="offset"><span data-ttu-id="d59d4-330">Eine Position in <paramref name="inArray" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-330">A position within <paramref name="inArray" />.</span></span></param>
        <param name="length"><span data-ttu-id="d59d4-331">Die Anzahl der zu konvertierenden Elemente in <paramref name="inArray" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-331">The number of elements in <paramref name="inArray" /> to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-332">Konvertiert eine Teilmenge eines Unicode-Zeichenarrays, das Binärdaten als Base-64-Ziffern codiert, in ein entsprechendes Array von 8-Bit-Ganzzahlen ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-332">Converts a subset of a Unicode character array, which encodes binary data as base-64 digits, to an equivalent 8-bit unsigned integer array.</span></span> <span data-ttu-id="d59d4-333">Parameter geben die Teilmenge im Eingabearray und die Anzahl der zu konvertierenden Elemente an.</span><span class="sxs-lookup"><span data-stu-id="d59d4-333">Parameters specify the subset in the input array and the number of elements to convert.</span></span></summary>
        <returns><span data-ttu-id="d59d4-334">Ein Array von 8-Bit-Ganzzahlen ohne Vorzeichen, das <paramref name="length" />-Elementen an der Position <paramref name="offset" /> in <paramref name="inArray" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-334">An array of 8-bit unsigned integers equivalent to <paramref name="length" /> elements at position <paramref name="offset" /> in <paramref name="inArray" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-335">`inArray` besteht aus Basis-64-Ziffern, Leerzeichen und nachfolgenden Auffüll Zeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-335">`inArray` is composed of base-64 digits, white-space characters, and trailing padding characters.</span></span> <span data-ttu-id="d59d4-336">Die Basis-64-Ziffern in aufsteigender Reihenfolge von NULL sind die Großbuchstaben "a" bis "z", Kleinbuchstaben "a" bis "z", Ziffern "0" bis "9" und die Symbole "+" und "/".</span><span class="sxs-lookup"><span data-stu-id="d59d4-336">The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", lowercase characters "a" to "z", numerals "0" to "9", and the symbols "+" and "/".</span></span>  
  
 <span data-ttu-id="d59d4-337">Die Leerzeichen und ihre Unicode-Namen und hexadezimale Code Punkte lauten Tabulator (Zeichen-Tabulator, u + 0009), Zeilenvorschub, u + 000A), Wagen Rücklauf (Wagen Rücklauf, u + 000D) und leer (Leertaste, u + 0020).</span><span class="sxs-lookup"><span data-stu-id="d59d4-337">The white-space characters, and their Unicode names and hexadecimal code points, are tab (CHARACTER TABULATION, U+0009), newline (LINE FEED, U+000A), carriage return (CARRIAGE RETURN, U+000D), and blank (SPACE, U+0020).</span></span> <span data-ttu-id="d59d4-338">Eine beliebige Anzahl von Leerzeichen kann in `inArray` vorkommen, da alle Leerzeichen ignoriert werden.</span><span class="sxs-lookup"><span data-stu-id="d59d4-338">An arbitrary number of white-space characters can appear in `inArray` because all white-space characters are ignored.</span></span>  
  
 <span data-ttu-id="d59d4-339">Das wertlose Zeichen "=" wird für nachfolgende Auffüll Zeichen verwendet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-339">The valueless character, "=", is used for trailing padding.</span></span> <span data-ttu-id="d59d4-340">Das Ende `inArray` kann aus null, einem oder zwei Füll Zeichen bestehen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-340">The end of `inArray` can consist of zero, one, or two padding characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d59d4-341">Die <xref:System.Convert.FromBase64CharArray%2A>-Methode ist so konzipiert, dass Sie ein Array mit einzelnen Zeichen verarbeitet, das alle zu decodierten Daten enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-341">The <xref:System.Convert.FromBase64CharArray%2A> method is designed to process a single character array that contains all the data to be decoded.</span></span> <span data-ttu-id="d59d4-342">Zum Decodieren von Base-64-Zeichendaten aus einem Stream verwenden Sie die <xref:System.Security.Cryptography.FromBase64Transform?displayProperty=nameWithType>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="d59d4-342">To decode base-64 character data from a stream, use the <xref:System.Security.Cryptography.FromBase64Transform?displayProperty=nameWithType> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-343">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Convert.FromBase64CharArray%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29>-Methode verwendet wird, um uucodierte Daten (Base-64) zu decodieren und als binäre Ausgabe zu speichern.</span><span class="sxs-lookup"><span data-stu-id="d59d4-343">The following example demonstrates the use of the <xref:System.Convert.FromBase64CharArray%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method to decode UUencoded (base-64) data and save it as binary output.</span></span>  
  
 [!code-cpp[System.Convert UUEncodeDecode functions#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Convert UUEncodeDecode functions/CPP/class1.cpp#3)]
 [!code-csharp[System.Convert UUEncodeDecode functions#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Convert UUEncodeDecode functions/CS/class1.cs#3)]
 [!code-vb[System.Convert UUEncodeDecode functions#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Convert UUEncodeDecode functions/VB/class1.vb#3)]  
  
 <span data-ttu-id="d59d4-344">Das folgende Beispiel veranschaulicht die <xref:System.Convert.ToBase64CharArray%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%2CSystem.Base64FormattingOptions%29> und <xref:System.Convert.FromBase64CharArray%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> Methoden.</span><span class="sxs-lookup"><span data-stu-id="d59d4-344">The following example demonstrates the <xref:System.Convert.ToBase64CharArray%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%2CSystem.Base64FormattingOptions%29> and <xref:System.Convert.FromBase64CharArray%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> methods.</span></span> <span data-ttu-id="d59d4-345">Die Eingabe ist in Gruppen von jeweils drei Bytes (24 Bits) unterteilt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-345">The input is divided into groups of three bytes (24 bits) each.</span></span> <span data-ttu-id="d59d4-346">Folglich besteht jede Gruppe aus vier 6-Bit-Zahlen, wobei jede Zahl zwischen Decimal 0 und 63 liegt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-346">Consequently, each group consists of four 6-bit numbers where each number ranges from decimal 0 to 63.</span></span> <span data-ttu-id="d59d4-347">In diesem Beispiel gibt es 85 3-Byte-Gruppen, die ein Byte verbleiben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-347">In this example, there are 85 3-byte groups with one byte remaining.</span></span> <span data-ttu-id="d59d4-348">Die erste Gruppe besteht aus den hexadezimalen Werten 00, 01 und 02, die vier 6-Bit-Werte ergeben, die dezimal 0, 0, 4 und 2 entsprechen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-348">The first group consists of the hexadecimal values 00, 01, and 02, which yield four 6-bit values equal to decimal 0, 0, 4, and 2.</span></span> <span data-ttu-id="d59d4-349">Diese vier Werte entsprechen den Basis-64-Ziffern "a", "a", "E" und "C" am Anfang der Ausgabe.</span><span class="sxs-lookup"><span data-stu-id="d59d4-349">Those four values correspond to the base-64 digits, "A", "A", "E", and "C", at the beginning of the output.</span></span>  
  
 <span data-ttu-id="d59d4-350">Wenn keine ganzzahlige Anzahl von 3-Byte-Gruppen vorhanden ist, werden die verbleibenden Bytes effektiv mit Nullen aufgefüllt, um eine vollständige Gruppe zu bilden.</span><span class="sxs-lookup"><span data-stu-id="d59d4-350">If an integral number of 3-byte groups does not exist, the remaining bytes are effectively padded with zeros to form a complete group.</span></span> <span data-ttu-id="d59d4-351">In diesem Beispiel ist der Wert des letzten Bytes hexadezimal ff.</span><span class="sxs-lookup"><span data-stu-id="d59d4-351">In this example, the value of the last byte is hexadecimal FF.</span></span> <span data-ttu-id="d59d4-352">Die ersten 6 Bits sind gleich Decimal 63. Dies entspricht 64 der Ziffer "/" am Ende der Ausgabe, und die nächsten 2 Bits werden mit Nullen aufgefüllt, um Decimal 48 zu erhalten, was der Base-64-Ziffer "w" entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-352">The first 6 bits are equal to decimal 63, which corresponds to the base-64 digit "/" at the end of the output, and the next 2 bits are padded with zeros to yield decimal 48, which corresponds to the base-64 digit, "w".</span></span> <span data-ttu-id="d59d4-353">Die letzten zwei 6-Bit-Werte sind Auffüll Zeichen und entsprechen dem Text Füll Zeichen (=).</span><span class="sxs-lookup"><span data-stu-id="d59d4-353">The last two 6-bit values are padding and correspond to the valueless padding character, "=".</span></span>  
  
 [!code-cpp[convert.tobase64chararray#1](~/samples/snippets/cpp/VS_Snippets_CLR/convert.tobase64chararray/CPP/tb64ca.cpp#1)]
 [!code-csharp[convert.tobase64chararray#1](~/samples/snippets/csharp/VS_Snippets_CLR/convert.tobase64chararray/CS/tb64ca.cs#1)]
 [!code-vb[convert.tobase64chararray#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/convert.tobase64chararray/VB/tb64ca.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d59d4-354"><paramref name="inArray" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-354"><paramref name="inArray" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d59d4-355"><paramref name="offset" /> oder <paramref name="length" /> ist kleiner als 0 (null).</span><span class="sxs-lookup"><span data-stu-id="d59d4-355"><paramref name="offset" /> or <paramref name="length" /> is less than 0.</span></span>  
  
<span data-ttu-id="d59d4-356">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-356">-or-</span></span> 
 <span data-ttu-id="d59d4-357"><paramref name="offset" /> plus <paramref name="length" /> gibt eine Position außerhalb von <paramref name="inArray" /> an.</span><span class="sxs-lookup"><span data-stu-id="d59d4-357"><paramref name="offset" /> plus <paramref name="length" /> indicates a position not within <paramref name="inArray" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-358">Die Länge der <paramref name="inArray" /> bei ignorierten Leerzeichen ist nicht 0 (null) oder ein Vielfaches von 4.</span><span class="sxs-lookup"><span data-stu-id="d59d4-358">The length of <paramref name="inArray" />, ignoring white-space characters, is not zero or a multiple of 4.</span></span>  
  
<span data-ttu-id="d59d4-359">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-359">-or-</span></span> 
<span data-ttu-id="d59d4-360">Das Format von <paramref name="inArray" /> ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="d59d4-360">The format of <paramref name="inArray" /> is invalid.</span></span> <span data-ttu-id="d59d4-361"><paramref name="inArray" /> enthält ein Nicht-Base-64-Zeichen, mehr als zwei Füllzeichen oder in den Füllzeichen ein Zeichen, das kein Leerzeichen ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-361"><paramref name="inArray" /> contains a non-base-64 character, more than two padding characters, or a non-white-space character among the padding characters.</span></span></exception>
        <altmember cref="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="T:System.Security.Cryptography.FromBase64Transform" />
      </Docs>
    </Member>
    <Member MemberName="FromBase64String">
      <MemberSignature Language="C#" Value="public static byte[] FromBase64String (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] FromBase64String(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.FromBase64String(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromBase64String (s As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ FromBase64String(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member FromBase64String : string -&gt; byte[]" Usage="System.Convert.FromBase64String s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="d59d4-362">Die zu konvertierende Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d59d4-362">The string to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-363">Konvertiert die angegebene Zeichenfolge, die Binärdaten als Base-64-Ziffern codiert, in ein entsprechendes Array von 8-Bit-Ganzzahlen ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-363">Converts the specified string, which encodes binary data as base-64 digits, to an equivalent 8-bit unsigned integer array.</span></span></summary>
        <returns><span data-ttu-id="d59d4-364">Ein Array von 8-Bit-Ganzzahlen ohne Vorzeichen, das <paramref name="s" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-364">An array of 8-bit unsigned integers that is equivalent to <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-365">`s` besteht aus Basis-64-Ziffern, Leerzeichen und nachfolgenden Auffüll Zeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-365">`s` is composed of base-64 digits, white-space characters, and trailing padding characters.</span></span> <span data-ttu-id="d59d4-366">Die Basis-64-Ziffern in aufsteigender Reihenfolge von NULL sind die Großbuchstaben "a" bis "z", Kleinbuchstaben "a" bis "z", Ziffern "0" bis "9" und die Symbole "+" und "/".</span><span class="sxs-lookup"><span data-stu-id="d59d4-366">The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", lowercase characters "a" to "z", numerals "0" to "9", and the symbols "+" and "/".</span></span>  
  
 <span data-ttu-id="d59d4-367">Die Leerzeichen und ihre Unicode-Namen und hexadezimale Code Punkte lauten Tabulator (Zeichen-Tabulator, u + 0009), Zeilenvorschub, u + 000A), Wagen Rücklauf (Wagen Rücklauf, u + 000D) und leer (Leertaste, u + 0020).</span><span class="sxs-lookup"><span data-stu-id="d59d4-367">The white-space characters, and their Unicode names and hexadecimal code points, are tab (CHARACTER TABULATION, U+0009), newline (LINE FEED, U+000A), carriage return (CARRIAGE RETURN, U+000D), and blank (SPACE, U+0020).</span></span> <span data-ttu-id="d59d4-368">Eine beliebige Anzahl von Leerzeichen kann in `s` vorkommen, da alle Leerzeichen ignoriert werden.</span><span class="sxs-lookup"><span data-stu-id="d59d4-368">An arbitrary number of white-space characters can appear in `s` because all white-space characters are ignored.</span></span>  
  
 <span data-ttu-id="d59d4-369">Das wertlose Zeichen "=" wird für nachfolgende Auffüll Zeichen verwendet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-369">The valueless character, "=", is used for trailing padding.</span></span> <span data-ttu-id="d59d4-370">Das Ende `s` kann aus null, einem oder zwei Füll Zeichen bestehen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-370">The end of `s` can consist of zero, one, or two padding characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d59d4-371">Die <xref:System.Convert.FromBase64String%2A>-Methode wurde entwickelt, um eine einzelne Zeichenfolge zu verarbeiten, die alle zu decodierten Daten enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-371">The <xref:System.Convert.FromBase64String%2A> method is designed to process a single string that contains all the data to be decoded.</span></span> <span data-ttu-id="d59d4-372">Zum Decodieren von Base-64-Zeichendaten aus einem Stream verwenden Sie die <xref:System.Security.Cryptography.FromBase64Transform?displayProperty=nameWithType>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="d59d4-372">To decode base-64 character data from a stream, use the <xref:System.Security.Cryptography.FromBase64Transform?displayProperty=nameWithType> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-373">Im folgenden Beispiel wird die <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29>-Methode verwendet, um ein Bytearray in eine uucodierte Zeichenfolge (Base-64) zu konvertieren. Anschließend wird die <xref:System.Convert.FromBase64String%28System.String%29>-Methode aufgerufen, um das ursprüngliche Bytearray wiederherzustellen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-373">The following example uses the <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29> method to convert a byte array to a UUencoded (base-64) string, and then calls the <xref:System.Convert.FromBase64String%28System.String%29> method to restore the original byte array.</span></span>  
  
 [!code-csharp[System.Convert.ToBase64String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Convert.ToBase64String/cs/ToBase64String2.cs#1)]
 [!code-vb[System.Convert.ToBase64String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Convert.ToBase64String/vb/ToBase64String2.vb#1)]  
  
 <span data-ttu-id="d59d4-374">Im folgenden finden Sie ein komplexeres Beispiel, in dem ein 20-Element-Array mit ganzen Zahlen mit 32 Bit erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-374">The following is a more complex example that creates a 20-element array of 32-bit integers.</span></span> <span data-ttu-id="d59d4-375">Anschließend wird die <xref:System.BitConverter.GetBytes%28System.Int32%29?displayProperty=nameWithType>-Methode verwendet, um jedes Element in ein Bytearray zu konvertieren, das durch Aufrufen der <xref:System.Array.Copy%28System.Array%2CSystem.Int32%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType>-Methode an der entsprechenden Position in einem Puffer gespeichert wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-375">It then uses the <xref:System.BitConverter.GetBytes%28System.Int32%29?displayProperty=nameWithType> method to convert each element into a byte array, which it stores in the appropriate position in a buffer by calling the <xref:System.Array.Copy%28System.Array%2CSystem.Int32%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="d59d4-376">Dieser Puffer wird dann an die <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29>-Methode weitergegeben, um eine uucodierte Zeichenfolge (Base-64) zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-376">This buffer is then passed to the <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29> method to create a UUencoded (base-64) string.</span></span>  <span data-ttu-id="d59d4-377">Anschließend wird die <xref:System.Convert.FromBase64String%28System.String%29>-Methode aufgerufen, um die uucodierte Zeichenfolge zu decodieren, und die <xref:System.BitConverter.ToInt32%2A?displayProperty=nameWithType>-Methode wird aufgerufen, um jeden Satz von vier Bytes (die Größe einer 32-Bit-Ganzzahl) in eine ganze Zahl zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-377">It then calls the <xref:System.Convert.FromBase64String%28System.String%29> method to decode the UUencoded string, and calls the <xref:System.BitConverter.ToInt32%2A?displayProperty=nameWithType> method to convert each set of four bytes (the size of a 32-bit integer) to an integer.</span></span> <span data-ttu-id="d59d4-378">Die Ausgabe des Beispiels zeigt, dass das ursprüngliche Array erfolgreich wieder hergestellt wurde.</span><span class="sxs-lookup"><span data-stu-id="d59d4-378">The output from the example shows that the original array has been successfully restored.</span></span>  
  
 [!code-csharp[System.Convert.ToBase64String#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Convert.ToBase64String/cs/ToBase64String.cs#2)]
 [!code-vb[System.Convert.ToBase64String#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Convert.ToBase64String/vb/ToBase64String.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d59d4-379"><paramref name="s" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-379"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-380">Die Länge der <paramref name="s" /> bei ignorierten Leerzeichen ist nicht 0 (null) oder ein Vielfaches von 4.</span><span class="sxs-lookup"><span data-stu-id="d59d4-380">The length of <paramref name="s" />, ignoring white-space characters, is not zero or a multiple of 4.</span></span>  
  
<span data-ttu-id="d59d4-381">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-381">-or-</span></span> 
<span data-ttu-id="d59d4-382">Das Format von <paramref name="s" /> ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="d59d4-382">The format of <paramref name="s" /> is invalid.</span></span> <span data-ttu-id="d59d4-383"><paramref name="s" /> enthält ein Nicht-Base-64-Zeichen, mehr als zwei Füllzeichen oder in den Füllzeichen ein Zeichen, das kein Leerzeichen ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-383"><paramref name="s" /> contains a non-base-64 character, more than two padding characters, or a non-white space-character among the padding characters.</span></span></exception>
        <altmember cref="M:System.Convert.ToBase64String(System.Byte[])" />
        <altmember cref="T:System.Security.Cryptography.FromBase64Transform" />
        <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Base64-1c3d9c03"><span data-ttu-id="d59d4-384">Beispiel: .NET Framework 4 Base64 Converter</span><span class="sxs-lookup"><span data-stu-id="d59d4-384">Sample: .NET Framework 4 Base64 Converter</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public static TypeCode GetTypeCode (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TypeCode GetTypeCode(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.GetTypeCode(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeCode (value As Object) As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TypeCode GetTypeCode(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member GetTypeCode : obj -&gt; TypeCode" Usage="System.Convert.GetTypeCode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-385">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-385">An object that implements the <see cref="T:System.IConvertible" /> interface.</span></span></param>
        <summary><span data-ttu-id="d59d4-386">Gibt den <see cref="T:System.TypeCode" /> für das angegebene Objekt zurück.</span><span class="sxs-lookup"><span data-stu-id="d59d4-386">Returns the <see cref="T:System.TypeCode" /> for the specified object.</span></span></summary>
        <returns><span data-ttu-id="d59d4-387">Der <see cref="T:System.TypeCode" /> für <paramref name="value" /> oder<see cref="F:System.TypeCode.Empty" /> wenn <paramref name="value" /><see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-387">The <see cref="T:System.TypeCode" /> for <paramref name="value" />, or <see cref="F:System.TypeCode.Empty" /> if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public static bool IsDBNull (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDBNull(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.IsDBNull(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDBNull (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDBNull(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member IsDBNull : obj -&gt; bool" Usage="System.Convert.IsDBNull value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-388">Ein -Objekt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-388">An object.</span></span></param>
        <summary><span data-ttu-id="d59d4-389">Gibt einen Wert zurück, der angibt, ob das angegebene Objekt vom Typ <see cref="T:System.DBNull" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-389">Returns an indication whether the specified object is of type <see cref="T:System.DBNull" />.</span></span></summary>
        <returns><span data-ttu-id="d59d4-390"><see langword="true" /> wenn <paramref name="value" /> vom Typ <see cref="T:System.DBNull" />, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-390"><see langword="true" /> if <paramref name="value" /> is of type <see cref="T:System.DBNull" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-391">Die <xref:System.Convert.IsDBNull%2A>-Methode testet, ob der `value` Parameter gleich <xref:System.DBNull.Value?displayProperty=nameWithType>ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-391">The <xref:System.Convert.IsDBNull%2A> method tests whether the `value` parameter is equal to <xref:System.DBNull.Value?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d59d4-392">Dies entspricht dem folgenden Code:</span><span class="sxs-lookup"><span data-stu-id="d59d4-392">It is equivalent to the following code:</span></span>  
  
 [!code-csharp[System.Convert.IsDBNull#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.IsDBNull/cs/Form1.cs#1)]
 [!code-vb[System.Convert.IsDBNull#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.IsDBNull/vb/Form1.vb#1)]  
  
> [!NOTE]
>  <span data-ttu-id="d59d4-393"><xref:System.DBNull.Value?displayProperty=nameWithType> wird verwendet, um einen Wert anzugeben, der fehlt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-393"><xref:System.DBNull.Value?displayProperty=nameWithType> is used to indicate a value that is missing.</span></span> <span data-ttu-id="d59d4-394">Es entspricht nicht `null` oder <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d59d4-394">It is not equivalent to `null` or to <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d59d4-395">Daher gibt Code wie `Convert.IsDBNull(null)` in C# oder `Convert.IsDBNull(Nothing)` in Visual Basic`false`zurück.</span><span class="sxs-lookup"><span data-stu-id="d59d4-395">Therefore, code such as `Convert.IsDBNull(null)` in C# or `Convert.IsDBNull(Nothing)` in Visual Basic returns`false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-396">Im folgenden Beispiel wird ein <xref:System.Data.SqlClient.SqlDataReader> Objekt verwendet, um Umfragedaten aus einer Datenbank abzurufen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-396">The following example uses a <xref:System.Data.SqlClient.SqlDataReader> object to retrieve survey data from a database.</span></span> <span data-ttu-id="d59d4-397">Dabei werden die Feldwerte der einzelnen Zeilen einem Array zugewiesen, und dann werden die einzelnen Array Elemente an die <xref:System.Convert.IsDBNull%2A> Methode weitergeleitet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-397">It assigns each row's field values to an array, and then passes each array element to the <xref:System.Convert.IsDBNull%2A> method.</span></span> <span data-ttu-id="d59d4-398">Wenn die Methode `true`zurückgibt, weist das Beispiel dem Array Element die Zeichenfolge "na" zu.</span><span class="sxs-lookup"><span data-stu-id="d59d4-398">If the method returns `true`, the example assigns the string "NA" to the array element.</span></span> <span data-ttu-id="d59d4-399">Das Array wird dann der <xref:System.Windows.Forms.DataGridView.Rows%2A>-Auflistung eines <xref:System.Windows.Forms.DataGridView?displayProperty=nameWithType> Steuer Elements hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-399">The array is then added to the <xref:System.Windows.Forms.DataGridView.Rows%2A> collection of a <xref:System.Windows.Forms.DataGridView?displayProperty=nameWithType> control.</span></span>  
  
 [!code-csharp[System.Convert.IsDBNull#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.IsDBNull/cs/Form1.cs#2)]
 [!code-vb[System.Convert.IsDBNull#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.IsDBNull/vb/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DBNull" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToBase64CharArray">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d59d4-400">Konvertiert eine Teilmenge eines Arrays von 8-Bit-Ganzzahlen ohne Vorzeichen in eine entsprechende Teilmenge eines Arrays von Unicode-Zeichen, das mit Base-64-Ziffern codiert wurde.</span><span class="sxs-lookup"><span data-stu-id="d59d4-400">Converts a subset of an 8-bit unsigned integer array to an equivalent subset of a Unicode character array encoded with base-64 digits.</span></span></summary>
        <altmember cref="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Security.Cryptography.ToBase64Transform" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ToBase64CharArray">
      <MemberSignature Language="C#" Value="public static int ToBase64CharArray (byte[] inArray, int offsetIn, int length, char[] outArray, int offsetOut);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToBase64CharArray(unsigned int8[] inArray, int32 offsetIn, int32 length, char[] outArray, int32 offsetOut) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBase64CharArray (inArray As Byte(), offsetIn As Integer, length As Integer, outArray As Char(), offsetOut As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToBase64CharArray(cli::array &lt;System::Byte&gt; ^ inArray, int offsetIn, int length, cli::array &lt;char&gt; ^ outArray, int offsetOut);" />
      <MemberSignature Language="F#" Value="static member ToBase64CharArray : byte[] * int * int * char[] * int -&gt; int" Usage="System.Convert.ToBase64CharArray (inArray, offsetIn, length, outArray, offsetOut)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inArray" Type="System.Byte[]" />
        <Parameter Name="offsetIn" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="outArray" Type="System.Char[]" />
        <Parameter Name="offsetOut" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inArray"><span data-ttu-id="d59d4-401">Ein Eingabearray von 8-Bit-Ganzzahlen ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-401">An input array of 8-bit unsigned integers.</span></span></param>
        <param name="offsetIn"><span data-ttu-id="d59d4-402">Eine Position in <paramref name="inArray" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-402">A position within <paramref name="inArray" />.</span></span></param>
        <param name="length"><span data-ttu-id="d59d4-403">Die Anzahl der zu konvertierenden Elemente aus <paramref name="inArray" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-403">The number of elements of <paramref name="inArray" /> to convert.</span></span></param>
        <param name="outArray"><span data-ttu-id="d59d4-404">Ein Ausgabearray von Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-404">An output array of Unicode characters.</span></span></param>
        <param name="offsetOut"><span data-ttu-id="d59d4-405">Eine Position in <paramref name="outArray" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-405">A position within <paramref name="outArray" />.</span></span></param>
        <summary><span data-ttu-id="d59d4-406">Konvertiert eine Teilmenge eines Arrays von 8-Bit-Ganzzahlen ohne Vorzeichen in eine entsprechende Teilmenge eines Arrays von Unicode-Zeichen, das mit Base-64-Ziffern codiert wurde.</span><span class="sxs-lookup"><span data-stu-id="d59d4-406">Converts a subset of an 8-bit unsigned integer array to an equivalent subset of a Unicode character array encoded with base-64 digits.</span></span> <span data-ttu-id="d59d4-407">Parameter geben die Teilmengen als Offsets des Eingabe- und Ausgabearrays und die Anzahl der Elemente im zu konvertierenden Eingabearray an.</span><span class="sxs-lookup"><span data-stu-id="d59d4-407">Parameters specify the subsets as offsets in the input and output arrays, and the number of elements in the input array to convert.</span></span></summary>
        <returns><span data-ttu-id="d59d4-408">Eine 32-Bit-Ganzzahl mit Vorzeichen mit der Anzahl von Bytes in <paramref name="outArray" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-408">A 32-bit signed integer containing the number of bytes in <paramref name="outArray" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-409">Die Teilmenge der `length` Elemente `inArray`, beginnend an der Position `offsetIn`, wird als numerischer Wert übernommen und in eine Teilmenge der Elemente in `outArray` konvertiert, beginnend an Position `offsetOut`.</span><span class="sxs-lookup"><span data-stu-id="d59d4-409">The subset of `length` elements of `inArray` starting at position `offsetIn`, are taken as a numeric value and converted to a subset of elements in `outArray` starting at position `offsetOut`.</span></span> <span data-ttu-id="d59d4-410">Der Rückgabewert gibt die Anzahl der konvertierten Elemente in `outArray`an.</span><span class="sxs-lookup"><span data-stu-id="d59d4-410">The return value indicates the number of converted elements in `outArray`.</span></span> <span data-ttu-id="d59d4-411">Die Teilmenge `outArray` besteht aus Basis-64-Ziffern.</span><span class="sxs-lookup"><span data-stu-id="d59d4-411">The subset of `outArray` consists of base-64 digits.</span></span>  
  
 <span data-ttu-id="d59d4-412">Die Basis-64-Ziffern in aufsteigender Reihenfolge von NULL sind die Großbuchstaben "a" bis "z", die Kleinbuchstaben "a" bis "z", die Ziffern "0" bis "9" und die Symbole "+" und "/".</span><span class="sxs-lookup"><span data-stu-id="d59d4-412">The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", the lowercase characters "a" to "z", the numerals "0" to "9", and the symbols "+" and "/".</span></span> <span data-ttu-id="d59d4-413">Das wertlose Zeichen "=" wird für nachfolgende Auffüll Zeichen verwendet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-413">The valueless character, "=", is used for trailing padding.</span></span>  
  
 <span data-ttu-id="d59d4-414">Die `offset`-und `length` Parameter sind 32-Bit-Zahlen mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-414">The `offset` and `length` parameters are 32-bit signed numbers.</span></span> <span data-ttu-id="d59d4-415">Die `offsetIn`-und `offsetOut` Parameter sind null basierte Array Positionen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-415">The `offsetIn` and `offsetOut` parameters are zero-based array positions.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d59d4-416">Die <xref:System.Convert.ToBase64CharArray%2A>-Methode ist so konzipiert, dass Sie ein einzelnes Bytearray verarbeitet, das alle zu codierenden Daten enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-416">The <xref:System.Convert.ToBase64CharArray%2A> method is designed to process a single byte array that contains all the data to be encoded.</span></span> <span data-ttu-id="d59d4-417">Um ein Base-64-Zeichen Array aus einem Bytestream zu erstellen, verwenden Sie die <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="d59d4-417">To create a base-64 character array from a byte stream, use the <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-418">Im folgenden Beispiel wird veranschaulicht, wie Sie die <xref:System.Convert.ToBase64CharArray%2A>-Methode verwenden, um einen binären Stream mit der-Methode zu uucodieren (codieren Sie in Base 64).</span><span class="sxs-lookup"><span data-stu-id="d59d4-418">The following example demonstrates using the <xref:System.Convert.ToBase64CharArray%2A> method to UUencode (encode in base 64) a binary stream, then save the encoding to a file.</span></span>  
  
 [!code-cpp[System.Convert UUEncodeDecode functions#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Convert UUEncodeDecode functions/CPP/class1.cpp#2)]
 [!code-csharp[System.Convert UUEncodeDecode functions#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Convert UUEncodeDecode functions/CS/class1.cs#2)]
 [!code-vb[System.Convert UUEncodeDecode functions#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Convert UUEncodeDecode functions/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d59d4-419"><paramref name="inArray" /> oder <paramref name="outArray" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-419"><paramref name="inArray" /> or <paramref name="outArray" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d59d4-420"><paramref name="offsetIn" />, <paramref name="offsetOut" /> oder <paramref name="length" /> ist ein negativer Wert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-420"><paramref name="offsetIn" />, <paramref name="offsetOut" />, or <paramref name="length" /> is negative.</span></span>  
  
<span data-ttu-id="d59d4-421">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-421">-or-</span></span> 
 <span data-ttu-id="d59d4-422"><paramref name="offsetIn" /> plus <paramref name="length" /> ist größer als die Länge von <paramref name="inArray" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-422"><paramref name="offsetIn" /> plus <paramref name="length" /> is greater than the length of <paramref name="inArray" />.</span></span>  
  
<span data-ttu-id="d59d4-423">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-423">-or-</span></span> 
 <span data-ttu-id="d59d4-424"><paramref name="offsetOut" /> plus die Anzahl der zurückzugebenden Elemente ist größer als die Länge von <paramref name="outArray" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-424"><paramref name="offsetOut" /> plus the number of elements to return is greater than the length of <paramref name="outArray" />.</span></span></exception>
        <altmember cref="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Security.Cryptography.ToBase64Transform" />
      </Docs>
    </Member>
    <Member MemberName="ToBase64CharArray">
      <MemberSignature Language="C#" Value="public static int ToBase64CharArray (byte[] inArray, int offsetIn, int length, char[] outArray, int offsetOut, Base64FormattingOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToBase64CharArray(unsigned int8[] inArray, int32 offsetIn, int32 length, char[] outArray, int32 offsetOut, valuetype System.Base64FormattingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Base64FormattingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBase64CharArray (inArray As Byte(), offsetIn As Integer, length As Integer, outArray As Char(), offsetOut As Integer, options As Base64FormattingOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToBase64CharArray(cli::array &lt;System::Byte&gt; ^ inArray, int offsetIn, int length, cli::array &lt;char&gt; ^ outArray, int offsetOut, Base64FormattingOptions options);" />
      <MemberSignature Language="F#" Value="static member ToBase64CharArray : byte[] * int * int * char[] * int * Base64FormattingOptions -&gt; int" Usage="System.Convert.ToBase64CharArray (inArray, offsetIn, length, outArray, offsetOut, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inArray" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="offsetIn" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="length" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="outArray" Type="System.Char[]" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="offsetOut" Type="System.Int32" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="options" Type="System.Base64FormattingOptions" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="inArray"><span data-ttu-id="d59d4-425">Ein Eingabearray von 8-Bit-Ganzzahlen ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-425">An input array of 8-bit unsigned integers.</span></span></param>
        <param name="offsetIn"><span data-ttu-id="d59d4-426">Eine Position in <paramref name="inArray" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-426">A position within <paramref name="inArray" />.</span></span></param>
        <param name="length"><span data-ttu-id="d59d4-427">Die Anzahl der zu konvertierenden Elemente aus <paramref name="inArray" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-427">The number of elements of <paramref name="inArray" /> to convert.</span></span></param>
        <param name="outArray"><span data-ttu-id="d59d4-428">Ein Ausgabearray von Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-428">An output array of Unicode characters.</span></span></param>
        <param name="offsetOut"><span data-ttu-id="d59d4-429">Eine Position in <paramref name="outArray" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-429">A position within <paramref name="outArray" />.</span></span></param>
        <param name="options"><span data-ttu-id="d59d4-430"><see cref="F:System.Base64FormattingOptions.InsertLineBreaks" />, wenn nach je 76 Zeichen ein Zeilenumbruch eingefügt werden soll, oder <see cref="F:System.Base64FormattingOptions.None" />, wenn keine Zeilenumbrüche eingefügt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-430"><see cref="F:System.Base64FormattingOptions.InsertLineBreaks" /> to insert a line break every 76 characters, or <see cref="F:System.Base64FormattingOptions.None" /> to not insert line breaks.</span></span></param>
        <summary><span data-ttu-id="d59d4-431">Konvertiert eine Teilmenge eines Arrays von 8-Bit-Ganzzahlen ohne Vorzeichen in eine entsprechende Teilmenge eines Arrays von Unicode-Zeichen, das mit Base-64-Ziffern codiert wurde.</span><span class="sxs-lookup"><span data-stu-id="d59d4-431">Converts a subset of an 8-bit unsigned integer array to an equivalent subset of a Unicode character array encoded with base-64 digits.</span></span> <span data-ttu-id="d59d4-432">Parameter geben die Teilmengen als Offsets des Eingabe- und Ausgabearrays, die Anzahl der Elemente im zu konvertierenden Eingabearray sowie ggf. einzufügende Zeilenumbrüche im Ausgabearray an.</span><span class="sxs-lookup"><span data-stu-id="d59d4-432">Parameters specify the subsets as offsets in the input and output arrays, the number of elements in the input array to convert, and whether line breaks are inserted in the output array.</span></span></summary>
        <returns><span data-ttu-id="d59d4-433">Eine 32-Bit-Ganzzahl mit Vorzeichen mit der Anzahl von Bytes in <paramref name="outArray" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-433">A 32-bit signed integer containing the number of bytes in <paramref name="outArray" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-434">Die Teilmenge der `length` Elemente des `inArray`-Parameters, beginnend an der Position `offsetIn`, wird als numerischer Wert übernommen und in eine Teilmenge von Elementen im `outArray`-Parameter beginnend an Position `offsetOut`konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-434">The subset of `length` elements of the `inArray` parameter starting at position `offsetIn`, are taken as a numeric value and converted to a subset of elements in the `outArray` parameter starting at position `offsetOut`.</span></span> <span data-ttu-id="d59d4-435">Der Rückgabewert gibt die Anzahl der konvertierten Elemente in `outArray`an.</span><span class="sxs-lookup"><span data-stu-id="d59d4-435">The return value indicates the number of converted elements in `outArray`.</span></span> <span data-ttu-id="d59d4-436">Die Teilmenge `outArray` besteht aus Basis-64-Ziffern.</span><span class="sxs-lookup"><span data-stu-id="d59d4-436">The subset of `outArray` consists of base-64 digits.</span></span>  
  
 <span data-ttu-id="d59d4-437">Die Basis-64-Ziffern in aufsteigender Reihenfolge von NULL sind die Großbuchstaben "a" bis "z", die Kleinbuchstaben "a" bis "z", die Ziffern "0" bis "9" und die Symbole "+" und "/".</span><span class="sxs-lookup"><span data-stu-id="d59d4-437">The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", the lowercase characters "a" to "z", the numerals "0" to "9", and the symbols "+" and "/".</span></span> <span data-ttu-id="d59d4-438">Das wertlose Zeichen "=" wird für nachfolgende Auffüll Zeichen verwendet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-438">The valueless character "=" is used for trailing padding.</span></span>  
  
 <span data-ttu-id="d59d4-439">Die `offset`-und `length` Parameter sind 32-Bit-Zahlen mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-439">The `offset` and `length` parameters are 32-bit signed numbers.</span></span> <span data-ttu-id="d59d4-440">Die `offsetIn`-und `offsetOut` Parameter sind null basierte Array Positionen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-440">The `offsetIn` and `offsetOut` parameters are zero-based array positions.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d59d4-441">Die <xref:System.Convert.ToBase64CharArray%2A>-Methode ist so konzipiert, dass Sie ein einzelnes Bytearray verarbeitet, das alle zu codierenden Daten enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-441">The <xref:System.Convert.ToBase64CharArray%2A> method is designed to process a single byte array that contains all the data to be encoded.</span></span> <span data-ttu-id="d59d4-442">Um ein Base-64-Zeichen Array aus einem Bytestream zu erstellen, verwenden Sie die <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="d59d4-442">To create a base-64 character array from a byte stream, use the <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="d59d4-443">Wenn der `options`-Parameter auf <xref:System.Base64FormattingOptions.InsertLineBreaks> festgelegt ist und die Ausgabe der Konvertierung länger als 76 Zeichen ist, wird jedes 76-Zeichen ein Zeilenumbruch eingefügt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-443">If the `options` parameter is set to <xref:System.Base64FormattingOptions.InsertLineBreaks> and the output of the conversion is longer than 76 characters, a line break is inserted every 76 characters.</span></span> <span data-ttu-id="d59d4-444">Ein Zeilenumbruch ist als Wagen Rücklauf Zeichen (u + 000D) gefolgt von einem Zeilenvorschub Zeichen (u + 000A) definiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-444">A line break is defined as a carriage return character (U+000D) followed by a line feed character (U+000A).</span></span> <span data-ttu-id="d59d4-445">Weitere Informationen finden Sie unter RFC 2045, "Multipurpose Internet Mail Extensions", unter [https://www.rfc-editor.org/](https://www.rfc-editor.org/).</span><span class="sxs-lookup"><span data-stu-id="d59d4-445">For more information, see RFC 2045, "Multipurpose Internet Mail Extensions", at [https://www.rfc-editor.org/](https://www.rfc-editor.org/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-446">Das folgende Beispiel veranschaulicht die <xref:System.Convert.ToBase64CharArray%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="d59d4-446">The following example demonstrates the <xref:System.Convert.ToBase64CharArray%2A> method.</span></span> <span data-ttu-id="d59d4-447">Die Eingabe ist in Gruppen von jeweils drei Bytes (24 Bits) unterteilt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-447">The input is divided into groups of three bytes (24 bits) each.</span></span> <span data-ttu-id="d59d4-448">Folglich besteht jede Gruppe aus vier 6-Bit-Zahlen, wobei jede Zahl zwischen Decimal 0 und 63 liegt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-448">Consequently, each group consists of four 6-bit numbers where each number ranges from decimal 0 to 63.</span></span> <span data-ttu-id="d59d4-449">In diesem Beispiel gibt es 85 3-Byte-Gruppen, die ein Byte verbleiben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-449">In this example, there are 85 3-byte groups with one byte remaining.</span></span> <span data-ttu-id="d59d4-450">Die erste Gruppe besteht aus den hexadezimalen Werten 00, 01 und 02, die vier 6-Bit-Werte ergeben, die dezimal 0, 0, 4 und 2 entsprechen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-450">The first group consists of the hexadecimal values 00, 01, and 02, which yield four 6-bit values equal to decimal 0, 0, 4, and 2.</span></span> <span data-ttu-id="d59d4-451">Diese vier Werte entsprechen den Basis-64-Ziffern "a", "a", "E" und "C" am Anfang der Ausgabe.</span><span class="sxs-lookup"><span data-stu-id="d59d4-451">Those four values correspond to the base-64 digits "A", "A", "E", and "C" at the beginning of the output.</span></span>  
  
 <span data-ttu-id="d59d4-452">Wenn keine ganzzahlige Anzahl von 3-Byte-Gruppen vorhanden ist, werden die verbleibenden Bytes effektiv mit Nullen aufgefüllt, um eine vollständige Gruppe zu bilden.</span><span class="sxs-lookup"><span data-stu-id="d59d4-452">If an integral number of 3-byte groups does not exist, the remaining bytes are effectively padded with zeros to form a complete group.</span></span> <span data-ttu-id="d59d4-453">In diesem Beispiel ist der Wert des letzten Bytes hexadezimal ff.</span><span class="sxs-lookup"><span data-stu-id="d59d4-453">In this example, the value of the last byte is hexadecimal FF.</span></span> <span data-ttu-id="d59d4-454">Die ersten 6 Bits sind gleich Decimal 63. Dies entspricht 64 der Ziffer "/" am Ende der Ausgabe, und die nächsten 2 Bits werden mit Nullen aufgefüllt, um Decimal 48 zu erhalten, was der Base-64-Ziffer "w" entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-454">The first 6 bits are equal to decimal 63, which corresponds to the base-64 digit "/" at the end of the output, and the next 2 bits are padded with zeros to yield decimal 48, which corresponds to the base-64 digit, "w".</span></span> <span data-ttu-id="d59d4-455">Die letzten zwei 6-Bit-Werte sind Auffüll Zeichen und entsprechen dem Text Füll Zeichen (=).</span><span class="sxs-lookup"><span data-stu-id="d59d4-455">The last two 6-bit values are padding and correspond to the valueless padding character, "=".</span></span>  
  
 [!code-cpp[convert.tobase64chararray#1](~/samples/snippets/cpp/VS_Snippets_CLR/convert.tobase64chararray/CPP/tb64ca.cpp#1)]
 [!code-csharp[convert.tobase64chararray#1](~/samples/snippets/csharp/VS_Snippets_CLR/convert.tobase64chararray/CS/tb64ca.cs#1)]
 [!code-vb[convert.tobase64chararray#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/convert.tobase64chararray/VB/tb64ca.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d59d4-456"><paramref name="inArray" /> oder <paramref name="outArray" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-456"><paramref name="inArray" /> or <paramref name="outArray" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d59d4-457"><paramref name="offsetIn" />, <paramref name="offsetOut" /> oder <paramref name="length" /> ist ein negativer Wert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-457"><paramref name="offsetIn" />, <paramref name="offsetOut" />, or <paramref name="length" /> is negative.</span></span>  
  
<span data-ttu-id="d59d4-458">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-458">-or-</span></span> 
 <span data-ttu-id="d59d4-459"><paramref name="offsetIn" /> plus <paramref name="length" /> ist größer als die Länge von <paramref name="inArray" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-459"><paramref name="offsetIn" /> plus <paramref name="length" /> is greater than the length of <paramref name="inArray" />.</span></span>  
  
<span data-ttu-id="d59d4-460">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-460">-or-</span></span> 
 <span data-ttu-id="d59d4-461"><paramref name="offsetOut" /> plus die Anzahl der zurückzugebenden Elemente ist größer als die Länge von <paramref name="outArray" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-461"><paramref name="offsetOut" /> plus the number of elements to return is greater than the length of <paramref name="outArray" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d59d4-462"><paramref name="options" /> ist kein gültiger <see cref="T:System.Base64FormattingOptions" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-462"><paramref name="options" /> is not a valid <see cref="T:System.Base64FormattingOptions" /> value.</span></span></exception>
        <altmember cref="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Security.Cryptography.ToBase64Transform" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToBase64String">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d59d4-463">Konvertiert den Wert eines Arrays von 8-Bit-Ganzzahlen ohne Vorzeichen in die entsprechende mit Base-64-Ziffern codierte Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="d59d4-463">Converts the value of an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64 digits.</span></span></summary>
        <altmember cref="M:System.Convert.FromBase64String(System.String)" />
        <altmember cref="T:System.Security.Cryptography.ToBase64Transform" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ToBase64String">
      <MemberSignature Language="C#" Value="public static string ToBase64String (byte[] inArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToBase64String(unsigned int8[] inArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBase64String(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBase64String (inArray As Byte()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToBase64String(cli::array &lt;System::Byte&gt; ^ inArray);" />
      <MemberSignature Language="F#" Value="static member ToBase64String : byte[] -&gt; string" Usage="System.Convert.ToBase64String inArray" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inArray" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="inArray"><span data-ttu-id="d59d4-464">Ein Array von 8-Bit-Ganzzahlen ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-464">An array of 8-bit unsigned integers.</span></span></param>
        <summary><span data-ttu-id="d59d4-465">Konvertiert ein Array von 8-Bit-Ganzzahlen ohne Vorzeichen in die entsprechende mit Base-64-Ziffern codierte Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="d59d4-465">Converts an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64 digits.</span></span></summary>
        <returns><span data-ttu-id="d59d4-466">Die Zeichenfolgendarstellung des Inhalts von <paramref name="inArray" /> als Base-64.</span><span class="sxs-lookup"><span data-stu-id="d59d4-466">The string representation, in base 64, of the contents of <paramref name="inArray" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-467">Die Elemente `inArray` werden als numerischer Wert angenommen und in eine Zeichen folgen Darstellung konvertiert, die mit Base-64-Ziffern codiert ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-467">The elements of `inArray` are taken as a numeric value and converted to a string representation that is encoded with base-64 digits.</span></span>  
  
 <span data-ttu-id="d59d4-468">Die Basis-64-Ziffern in aufsteigender Reihenfolge von NULL sind die Großbuchstaben "a" bis "z", die Kleinbuchstaben "a" bis "z", die Ziffern "0" bis "9" und die Symbole "+" und "/".</span><span class="sxs-lookup"><span data-stu-id="d59d4-468">The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", the lowercase characters "a" to "z", the numerals "0" to "9", and the symbols "+" and "/".</span></span> <span data-ttu-id="d59d4-469">Das wertlose Zeichen "=" wird für nachfolgende Auffüll Zeichen verwendet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-469">The valueless character, "=", is used for trailing padding.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d59d4-470">Die <xref:System.Convert.ToBase64String%2A>-Methode ist so konzipiert, dass Sie ein einzelnes Bytearray verarbeitet, das alle zu codierenden Daten enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-470">The <xref:System.Convert.ToBase64String%2A> method is designed to process a single byte array that contains all the data to be encoded.</span></span> <span data-ttu-id="d59d4-471">Verwenden Sie die <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType>-Klasse, um Daten aus einem Datenstrom zu codieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-471">To encode data from a stream, use the <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="d59d4-472">Normalerweise wird die <xref:System.Convert.ToBase64String%2A>-Methode nicht verwendet, um eine uucodierte Zeichenfolge (Base-64-codiert) zu runden.</span><span class="sxs-lookup"><span data-stu-id="d59d4-472">Ordinarily, the <xref:System.Convert.ToBase64String%2A> method is not used to round-trip a  UUEncoded (base-64 encoded) string.</span></span>  <span data-ttu-id="d59d4-473">Wenn Sie also eine Zeichenfolge decodieren, indem Sie die <xref:System.Convert.FromBase64String%2A>-Methode aufrufen, codieren Sie das zurückgegebene Bytearray, indem Sie die <xref:System.Convert.ToBase64String%2A>-Methode aufrufen. die resultierende Zeichenfolge ist nicht notwendigerweise identisch mit der ursprünglichen Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d59d4-473">That is, if you decode a string by calling the <xref:System.Convert.FromBase64String%2A> method, then encode the returned byte array by calling the <xref:System.Convert.ToBase64String%2A> method, the resulting string will not necessarily be identical to the original string.</span></span> <span data-ttu-id="d59d4-474">Die Zeichenfolge führt einen Roundtrip nur aus, wenn die ursprüngliche Zeichenfolge eine gültige Base-64-codierte Zeichenfolge ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-474">The string will round-trip only if the original string is a valid base-64 encoded string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-475">Im folgenden Beispiel wird die <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29>-Methode verwendet, um ein Bytearray in eine uucodierte Zeichenfolge (Base-64) zu konvertieren. Anschließend wird die <xref:System.Convert.FromBase64String%28System.String%29>-Methode aufgerufen, um das ursprüngliche Bytearray wiederherzustellen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-475">The following example uses the <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29> method to convert a byte array to a UUencoded (base-64) string, and then calls the <xref:System.Convert.FromBase64String%28System.String%29> method to restore the original byte array.</span></span>  
  
 [!code-csharp[System.Convert.ToBase64String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Convert.ToBase64String/cs/ToBase64String2.cs#1)]
 [!code-vb[System.Convert.ToBase64String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Convert.ToBase64String/vb/ToBase64String2.vb#1)]  
  
 <span data-ttu-id="d59d4-476">Im folgenden finden Sie ein komplexeres Beispiel, in dem ein 20-Element-Array mit ganzen Zahlen mit 32 Bit erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-476">The following is a more complex example that creates a 20-element array of 32-bit integers.</span></span> <span data-ttu-id="d59d4-477">Anschließend wird die <xref:System.BitConverter.GetBytes%28System.Int32%29?displayProperty=nameWithType>-Methode verwendet, um jedes Element in ein Bytearray zu konvertieren, das durch Aufrufen der <xref:System.Array.Copy%28System.Array%2CSystem.Int32%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType>-Methode an der entsprechenden Position in einem Puffer gespeichert wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-477">It then uses the <xref:System.BitConverter.GetBytes%28System.Int32%29?displayProperty=nameWithType> method to convert each element into a byte array, which it stores in the appropriate position in a buffer by calling the <xref:System.Array.Copy%28System.Array%2CSystem.Int32%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="d59d4-478">Dieser Puffer wird dann an die <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29>-Methode weitergegeben, um eine uucodierte Zeichenfolge (Base-64) zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-478">This buffer is then passed to the <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29> method to create a UUencoded (base-64) string.</span></span>  <span data-ttu-id="d59d4-479">Anschließend wird die <xref:System.Convert.FromBase64String%28System.String%29>-Methode aufgerufen, um die uucodierte Zeichenfolge zu decodieren, und die <xref:System.BitConverter.ToInt32%2A?displayProperty=nameWithType>-Methode wird aufgerufen, um jeden Satz von vier Bytes (die Größe einer 32-Bit-Ganzzahl) in eine ganze Zahl zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-479">It then calls the <xref:System.Convert.FromBase64String%28System.String%29> method to decode the UUencoded string, and calls the <xref:System.BitConverter.ToInt32%2A?displayProperty=nameWithType> method to convert each set of four bytes (the size of a 32-bit integer) to an integer.</span></span> <span data-ttu-id="d59d4-480">Die Ausgabe des Beispiels zeigt, dass das ursprüngliche Array erfolgreich wieder hergestellt wurde.</span><span class="sxs-lookup"><span data-stu-id="d59d4-480">The output from the example shows that the original array has been successfully restored.</span></span>  
  
 [!code-csharp[System.Convert.ToBase64String#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Convert.ToBase64String/cs/ToBase64String.cs#2)]
 [!code-vb[System.Convert.ToBase64String#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Convert.ToBase64String/vb/ToBase64String.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d59d4-481"><paramref name="inArray" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-481"><paramref name="inArray" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Convert.FromBase64String(System.String)" />
        <altmember cref="T:System.Security.Cryptography.ToBase64Transform" />
      </Docs>
    </Member>
    <Member MemberName="ToBase64String">
      <MemberSignature Language="C#" Value="public static string ToBase64String (byte[] inArray, Base64FormattingOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToBase64String(unsigned int8[] inArray, valuetype System.Base64FormattingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBase64String(System.Byte[],System.Base64FormattingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBase64String (inArray As Byte(), options As Base64FormattingOptions) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToBase64String(cli::array &lt;System::Byte&gt; ^ inArray, Base64FormattingOptions options);" />
      <MemberSignature Language="F#" Value="static member ToBase64String : byte[] * Base64FormattingOptions -&gt; string" Usage="System.Convert.ToBase64String (inArray, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inArray" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="options" Type="System.Base64FormattingOptions" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="inArray"><span data-ttu-id="d59d4-482">Ein Array von 8-Bit-Ganzzahlen ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-482">An array of 8-bit unsigned integers.</span></span></param>
        <param name="options"><span data-ttu-id="d59d4-483"><see cref="F:System.Base64FormattingOptions.InsertLineBreaks" />, wenn nach je 76 Zeichen ein Zeilenumbruch eingefügt werden soll, oder <see cref="F:System.Base64FormattingOptions.None" />, wenn keine Zeilenumbrüche eingefügt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-483"><see cref="F:System.Base64FormattingOptions.InsertLineBreaks" /> to insert a line break every 76 characters, or <see cref="F:System.Base64FormattingOptions.None" /> to not insert line breaks.</span></span></param>
        <summary><span data-ttu-id="d59d4-484">Konvertiert ein Array von 8-Bit-Ganzzahlen ohne Vorzeichen in die entsprechende mit Base-64-Ziffern codierte Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="d59d4-484">Converts an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64 digits.</span></span> <span data-ttu-id="d59d4-485">Sie können festlegen, ob im Rückgabewert Zeilenumbrüche eingefügt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-485">You can specify whether to insert line breaks in the return value.</span></span></summary>
        <returns><span data-ttu-id="d59d4-486">Die Zeichenfolgendarstellung der Elemente in <paramref name="inArray" /> als Base-64.</span><span class="sxs-lookup"><span data-stu-id="d59d4-486">The string representation in base 64 of the elements in <paramref name="inArray" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-487">Die Elemente des `inArray`-Parameters werden als numerischer Wert angenommen und in Basis 64 in eine Zeichen folgen Darstellung konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-487">The elements of the `inArray` parameter are taken as a numeric value and converted to a string representation in base 64.</span></span>  
  
 <span data-ttu-id="d59d4-488">Die Basis-64-Ziffern in aufsteigender Reihenfolge von NULL sind die Großbuchstaben "a" bis "z", die Kleinbuchstaben "a" bis "z", die Ziffern "0" bis "9" und die Symbole "+" und "/".</span><span class="sxs-lookup"><span data-stu-id="d59d4-488">The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", the lowercase characters "a" to "z", the numerals "0" to "9", and the symbols "+" and "/".</span></span> <span data-ttu-id="d59d4-489">Das wertlose Zeichen "=" wird für nachfolgende Auffüll Zeichen verwendet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-489">The valueless character "=" is used for trailing padding.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d59d4-490">Die <xref:System.Convert.ToBase64String%2A>-Methode ist so konzipiert, dass Sie ein einzelnes Bytearray verarbeitet, das alle zu codierenden Daten enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-490">The <xref:System.Convert.ToBase64String%2A> method is designed to process a single byte array that contains all the data to be encoded.</span></span> <span data-ttu-id="d59d4-491">Verwenden Sie die <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType>-Klasse, um Daten aus einem Datenstrom zu codieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-491">To encode data from a stream, use the <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="d59d4-492">Wenn der `options`-Parameter auf <xref:System.Base64FormattingOptions.InsertLineBreaks> festgelegt ist und die Ausgabe der Konvertierung länger als 76 Zeichen ist, wird jedes 76-Zeichen ein Zeilenumbruch eingefügt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-492">If the `options` parameter is set to <xref:System.Base64FormattingOptions.InsertLineBreaks> and the output of the conversion is longer than 76 characters, a line break is inserted every 76 characters.</span></span> <span data-ttu-id="d59d4-493">Ein Zeilenumbruch ist als Wagen Rücklauf Zeichen (u + 000D) gefolgt von einem Zeilenvorschub Zeichen (u + 000A) definiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-493">A line break is defined as a carriage return character (U+000D) followed by a line feed character (U+000A).</span></span> <span data-ttu-id="d59d4-494">Da Zeilenumbrüche als Leerzeichen in einer Base-64-Codierung angesehen werden, werden Sie ignoriert, wenn eine Base-64-codierte Zeichenfolge zurück in ein Bytearray umgerechnet wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-494">Because line breaks are considered white-space characters in a base-64 encoding, they are ignored when converting a base-64 encoded string back to a byte array.</span></span> <span data-ttu-id="d59d4-495">Die Zeilenumbrüche sind einfach einfach, wenn die codierte Zeichenfolge für ein Steuerelement oder ein Gerät wie z. b. ein Konsolenfenster angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-495">The line breaks are simply convenient when displaying the encoded string to a control or a device such as a console window.</span></span> <span data-ttu-id="d59d4-496">Weitere Informationen finden Sie unter RFC 2045, "Multipurpose Internet Mail Extensions", unter [https://www.rfc-editor.org/](https://www.rfc-editor.org/).</span><span class="sxs-lookup"><span data-stu-id="d59d4-496">For more information, see RFC 2045, "Multipurpose Internet Mail Extensions", at [https://www.rfc-editor.org/](https://www.rfc-editor.org/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-497">Im folgenden Beispiel wird der <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%2CSystem.Base64FormattingOptions%29?displayProperty=nameWithType> mit einem <xref:System.Base64FormattingOptions.InsertLineBreaks?displayProperty=nameWithType>-Argument aufgerufen, um Zeilenumbrüche in der Zeichenfolge einzufügen, die durch Codieren eines 100-Element-Bytearrays erzeugt wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-497">The following example calls the <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%2CSystem.Base64FormattingOptions%29?displayProperty=nameWithType> with a <xref:System.Base64FormattingOptions.InsertLineBreaks?displayProperty=nameWithType> argument to insert line breaks in the string that is produced by encoding a 100-element byte array.</span></span>  
  
 [!code-csharp[System.Convert.ToBase64String#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Convert.ToBase64String/cs/ToBase64String3.cs#3)]
 [!code-vb[System.Convert.ToBase64String#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Convert.ToBase64String/vb/ToBase64String3.vb#3)]  
  
 <span data-ttu-id="d59d4-498">Wie die Ausgabe des Beispiels zeigt, ist die <xref:System.Convert.FromBase64String%2A?displayProperty=nameWithType> erfolgreich, das ursprüngliche Bytearray wiederherzustellen. die Zeilenumbruch Zeichen werden während der Konvertierung ignoriert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-498">As the output from the example shows, the <xref:System.Convert.FromBase64String%2A?displayProperty=nameWithType> succeeds in restoring the original byte array; the line break characters are ignored during the conversion.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d59d4-499"><paramref name="inArray" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-499"><paramref name="inArray" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d59d4-500"><paramref name="options" /> ist kein gültiger <see cref="T:System.Base64FormattingOptions" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-500"><paramref name="options" /> is not a valid <see cref="T:System.Base64FormattingOptions" /> value.</span></span></exception>
        <altmember cref="M:System.Convert.FromBase64String(System.String)" />
        <altmember cref="T:System.Security.Cryptography.ToBase64Transform" />
      </Docs>
    </Member>
    <Member MemberName="ToBase64String">
      <MemberSignature Language="C#" Value="public static string ToBase64String (ReadOnlySpan&lt;byte&gt; bytes, Base64FormattingOptions options = System.Base64FormattingOptions.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToBase64String(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes, valuetype System.Base64FormattingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBase64String(System.ReadOnlySpan{System.Byte},System.Base64FormattingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBase64String (bytes As ReadOnlySpan(Of Byte), Optional options As Base64FormattingOptions = System.Base64FormattingOptions.None) As String" />
      <MemberSignature Language="F#" Value="static member ToBase64String : ReadOnlySpan&lt;byte&gt; * Base64FormattingOptions -&gt; string" Usage="System.Convert.ToBase64String (bytes, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="options" Type="System.Base64FormattingOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="d59d4-501">Eine schreibgeschützte Spanne von 8-Bit-Ganzzahlen ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-501">A read-only span of 8-bit unsigned integers.</span></span></param>
        <param name="options"><span data-ttu-id="d59d4-502">Einer der Enumerationswerte, die angeben, ob im Rückgabewert Zeilenumbrüche eingefügt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-502">One of the enumeration values that specify whether to insert line breaks in the return value.</span></span> <span data-ttu-id="d59d4-503">Der Standardwert ist <see cref="F:System.Base64FormattingOptions.None" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-503">The default value is <see cref="F:System.Base64FormattingOptions.None" />.</span></span></param>
        <summary><span data-ttu-id="d59d4-504">Konvertiert die 8-Bit-Ganzzahlen ohne Vorzeichen in der angegebenen schreibgeschützten Spanne in eine entsprechende Zeichenfolgendarstellung, die mit Base64-Ziffern codiert ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-504">Converts the 8-bit unsigned integers inside the specified read-only span into their equivalent string representation that is encoded with base-64 digits.</span></span> <span data-ttu-id="d59d4-505">Sie können optional angeben, ob im Rückgabewert Zeilenumbrüche eingefügt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-505">You can optionally specify whether to insert line breaks in the return value.</span></span></summary>
        <returns><span data-ttu-id="d59d4-506">Die Zeichenfolgendarstellung der Elemente in <paramref name="inArray" /> als Base-64.</span><span class="sxs-lookup"><span data-stu-id="d59d4-506">The string representation in base 64 of the elements in <paramref name="inArray" />.</span></span> <span data-ttu-id="d59d4-507">Wenn die Länge von <paramref name="bytes" /> 0 ist, wird eine leere Zeichenfolge zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-507">If the length of <paramref name="bytes" /> is 0, an empty string is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d59d4-508"><paramref name="options" /> ist kein gültiger <see cref="T:System.Base64FormattingOptions" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-508"><paramref name="options" /> is not a valid <see cref="T:System.Base64FormattingOptions" /> value.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="d59d4-509">Die Ausgabelänge war größer als <see cref="P:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-509">The output length was larger than <see cref="P:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToBase64String">
      <MemberSignature Language="C#" Value="public static string ToBase64String (byte[] inArray, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToBase64String(unsigned int8[] inArray, int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBase64String (inArray As Byte(), offset As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToBase64String(cli::array &lt;System::Byte&gt; ^ inArray, int offset, int length);" />
      <MemberSignature Language="F#" Value="static member ToBase64String : byte[] * int * int -&gt; string" Usage="System.Convert.ToBase64String (inArray, offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inArray" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inArray"><span data-ttu-id="d59d4-510">Ein Array von 8-Bit-Ganzzahlen ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-510">An array of 8-bit unsigned integers.</span></span></param>
        <param name="offset"><span data-ttu-id="d59d4-511">Ein Offset in <paramref name="inArray" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-511">An offset in <paramref name="inArray" />.</span></span></param>
        <param name="length"><span data-ttu-id="d59d4-512">Die Anzahl der zu konvertierenden Elemente aus <paramref name="inArray" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-512">The number of elements of <paramref name="inArray" /> to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-513">Konvertiert eine Teilmenge eines Arrays von 8-Bit-Ganzzahlen ohne Vorzeichen in die entsprechende mit Base-64-Ziffern codierte Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="d59d4-513">Converts a subset of an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64 digits.</span></span> <span data-ttu-id="d59d4-514">Parameter geben die Teilmenge als Offset im Eingabearray und die Anzahl der Elemente im zu konvertierenden Array an.</span><span class="sxs-lookup"><span data-stu-id="d59d4-514">Parameters specify the subset as an offset in the input array, and the number of elements in the array to convert.</span></span></summary>
        <returns><span data-ttu-id="d59d4-515">Die Zeichenfolgendarstellung von <paramref name="length" /> Elementen von <paramref name="inArray" /> ab Position <paramref name="offset" /> als Base-64.</span><span class="sxs-lookup"><span data-stu-id="d59d4-515">The string representation in base 64 of <paramref name="length" /> elements of <paramref name="inArray" />, starting at position <paramref name="offset" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-516">Die Elemente `inArray` werden als numerischer Wert angenommen und in Basis 64 in eine Zeichen folgen Darstellung konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-516">The elements of `inArray` are taken as a numeric value and converted to a string representation in base 64.</span></span>  
  
 <span data-ttu-id="d59d4-517">Die Basis-64-Ziffern in aufsteigender Reihenfolge von NULL sind die Großbuchstaben "a" bis "z", die Kleinbuchstaben "a" bis "z", die Ziffern "0" bis "9" und die Symbole "+" und "/".</span><span class="sxs-lookup"><span data-stu-id="d59d4-517">The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", the lowercase characters "a" to "z", the numerals "0" to "9", and the symbols "+" and "/".</span></span> <span data-ttu-id="d59d4-518">Das wertlose Zeichen "=" wird für nachfolgende Auffüll Zeichen verwendet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-518">The valueless character, "=", is used for trailing padding.</span></span>  
  
 <span data-ttu-id="d59d4-519">Die `offset`-und `length` Parameter sind 32-Bit-Zahlen mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-519">The `offset` and `length` parameters are 32-bit signed numbers.</span></span> <span data-ttu-id="d59d4-520">Der `offset`-Parameter ist NULL basiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-520">The `offset` parameter is zero-based.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d59d4-521">Die <xref:System.Convert.ToBase64String%2A>-Methode ist so konzipiert, dass Sie ein einzelnes Bytearray verarbeitet, das alle zu codierenden Daten enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-521">The <xref:System.Convert.ToBase64String%2A> method is designed to process a single byte array that contains all the data to be encoded.</span></span> <span data-ttu-id="d59d4-522">Verwenden Sie die <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType>-Klasse, um Daten aus einem Datenstrom zu codieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-522">To encode data from a stream, use the <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d59d4-523"><paramref name="inArray" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-523"><paramref name="inArray" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d59d4-524"><paramref name="offset" /> oder <paramref name="length" /> ist ein negativer Wert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-524"><paramref name="offset" /> or <paramref name="length" /> is negative.</span></span>  
  
<span data-ttu-id="d59d4-525">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-525">-or-</span></span> 
 <span data-ttu-id="d59d4-526"><paramref name="offset" /> plus <paramref name="length" /> ist größer als die Länge von <paramref name="inArray" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-526"><paramref name="offset" /> plus <paramref name="length" /> is greater than the length of <paramref name="inArray" />.</span></span></exception>
        <altmember cref="M:System.Convert.FromBase64String(System.String)" />
        <altmember cref="T:System.Security.Cryptography.ToBase64Transform" />
        <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Base64-1c3d9c03"><span data-ttu-id="d59d4-527">Beispiel: .NET Framework 4 Base64 Converter</span><span class="sxs-lookup"><span data-stu-id="d59d4-527">Sample: .NET Framework 4 Base64 Converter</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToBase64String">
      <MemberSignature Language="C#" Value="public static string ToBase64String (byte[] inArray, int offset, int length, Base64FormattingOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToBase64String(unsigned int8[] inArray, int32 offset, int32 length, valuetype System.Base64FormattingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32,System.Base64FormattingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBase64String (inArray As Byte(), offset As Integer, length As Integer, options As Base64FormattingOptions) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToBase64String(cli::array &lt;System::Byte&gt; ^ inArray, int offset, int length, Base64FormattingOptions options);" />
      <MemberSignature Language="F#" Value="static member ToBase64String : byte[] * int * int * Base64FormattingOptions -&gt; string" Usage="System.Convert.ToBase64String (inArray, offset, length, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inArray" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="length" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="options" Type="System.Base64FormattingOptions" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="inArray"><span data-ttu-id="d59d4-528">Ein Array von 8-Bit-Ganzzahlen ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-528">An array of 8-bit unsigned integers.</span></span></param>
        <param name="offset"><span data-ttu-id="d59d4-529">Ein Offset in <paramref name="inArray" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-529">An offset in <paramref name="inArray" />.</span></span></param>
        <param name="length"><span data-ttu-id="d59d4-530">Die Anzahl der zu konvertierenden Elemente aus <paramref name="inArray" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-530">The number of elements of <paramref name="inArray" /> to convert.</span></span></param>
        <param name="options"><span data-ttu-id="d59d4-531"><see cref="F:System.Base64FormattingOptions.InsertLineBreaks" />, wenn nach je 76 Zeichen ein Zeilenumbruch eingefügt werden soll, oder <see cref="F:System.Base64FormattingOptions.None" />, wenn keine Zeilenumbrüche eingefügt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-531"><see cref="F:System.Base64FormattingOptions.InsertLineBreaks" /> to insert a line break every 76 characters, or <see cref="F:System.Base64FormattingOptions.None" /> to not insert line breaks.</span></span></param>
        <summary><span data-ttu-id="d59d4-532">Konvertiert eine Teilmenge eines Arrays von 8-Bit-Ganzzahlen ohne Vorzeichen in die entsprechende mit Base-64-Ziffern codierte Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="d59d4-532">Converts a subset of an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64 digits.</span></span> <span data-ttu-id="d59d4-533">Parameter geben die Teilmenge als Offset im Eingabearray, die Anzahl der Elemente im zu konvertierenden Array sowie ggf. im Rückgabewert einzufügende Zeilenumbrüche an.</span><span class="sxs-lookup"><span data-stu-id="d59d4-533">Parameters specify the subset as an offset in the input array, the number of elements in the array to convert, and whether to insert line breaks in the return value.</span></span></summary>
        <returns><span data-ttu-id="d59d4-534">Die Zeichenfolgendarstellung von <paramref name="length" /> Elementen von <paramref name="inArray" /> ab Position <paramref name="offset" /> als Base-64.</span><span class="sxs-lookup"><span data-stu-id="d59d4-534">The string representation in base 64 of <paramref name="length" /> elements of <paramref name="inArray" />, starting at position <paramref name="offset" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-535">Die Elemente des `inArray`-Parameters werden als numerischer Wert angenommen und in Basis 64 in eine Zeichen folgen Darstellung konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-535">The elements of the `inArray` parameter are taken as a numeric value and converted to a string representation in base 64.</span></span>  
  
 <span data-ttu-id="d59d4-536">Die Basis-64-Ziffern in aufsteigender Reihenfolge von NULL sind die Großbuchstaben "a" bis "z", die Kleinbuchstaben "a" bis "z", die Ziffern "0" bis "9" und die Symbole "+" und "/".</span><span class="sxs-lookup"><span data-stu-id="d59d4-536">The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", the lowercase characters "a" to "z", the numerals "0" to "9", and the symbols "+" and "/".</span></span> <span data-ttu-id="d59d4-537">Das wertlose Zeichen "=" wird für nachfolgende Auffüll Zeichen verwendet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-537">The valueless character "=" is used for trailing padding.</span></span>  
  
 <span data-ttu-id="d59d4-538">Die `offset`-und `length` Parameter sind 32-Bit-Zahlen mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-538">The `offset` and `length` parameters are 32-bit signed numbers.</span></span> <span data-ttu-id="d59d4-539">Der `offset`-Parameter ist NULL basiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-539">The `offset` parameter is zero-based.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d59d4-540">Die <xref:System.Convert.ToBase64String%2A>-Methode ist so konzipiert, dass Sie ein einzelnes Bytearray verarbeitet, das alle zu codierenden Daten enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-540">The <xref:System.Convert.ToBase64String%2A> method is designed to process a single byte array that contains all the data to be encoded.</span></span> <span data-ttu-id="d59d4-541">Verwenden Sie die <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType>-Klasse, um Daten aus einem Datenstrom zu codieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-541">To encode data from a stream, use the <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="d59d4-542">Wenn der `options`-Parameter auf <xref:System.Base64FormattingOptions.InsertLineBreaks> festgelegt ist und die Ausgabe der Konvertierung länger als 76 Zeichen ist, wird jedes 76-Zeichen ein Zeilenumbruch eingefügt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-542">If the `options` parameter is set to <xref:System.Base64FormattingOptions.InsertLineBreaks> and the output of the conversion is longer than 76 characters, a line break is inserted every 76 characters.</span></span> <span data-ttu-id="d59d4-543">Ein Zeilenumbruch ist als Wagen Rücklauf Zeichen (u + 000D) gefolgt von einem Zeilenvorschub Zeichen (u + 000A) definiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-543">A line break is defined as a carriage return character (U+000D) followed by a line feed character (U+000A).</span></span> <span data-ttu-id="d59d4-544">Weitere Informationen finden Sie unter RFC 2045, "Multipurpose Internet Mail Extensions", unter [https://www.rfc-editor.org/](https://www.rfc-editor.org/).</span><span class="sxs-lookup"><span data-stu-id="d59d4-544">For more information, see RFC 2045, "Multipurpose Internet Mail Extensions", at [https://www.rfc-editor.org/](https://www.rfc-editor.org/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-545">Das folgende Beispiel veranschaulicht die <xref:System.Convert.ToBase64String%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="d59d4-545">The following example demonstrates the <xref:System.Convert.ToBase64String%2A> method.</span></span> <span data-ttu-id="d59d4-546">Die Eingabe ist in Gruppen von jeweils drei Bytes (24 Bits) unterteilt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-546">The input is divided into groups of three bytes (24 bits) each.</span></span> <span data-ttu-id="d59d4-547">Folglich besteht jede Gruppe aus vier 6-Bit-Zahlen, wobei jede Zahl zwischen Decimal 0 und 63 liegt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-547">Consequently, each group consists of four 6-bit numbers where each number ranges from decimal 0 to 63.</span></span> <span data-ttu-id="d59d4-548">In diesem Beispiel gibt es 85 3-Byte-Gruppen, die ein Byte verbleiben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-548">In this example, there are 85 3-byte groups with one byte remaining.</span></span> <span data-ttu-id="d59d4-549">Die erste Gruppe besteht aus den hexadezimalen Werten 00, 01 und 02, die vier 6-Bit-Werte ergeben, die dezimal 0, 0, 4 und 2 entsprechen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-549">The first group consists of the hexadecimal values 00, 01, and 02, which yield four 6-bit values equal to decimal 0, 0, 4, and 2.</span></span> <span data-ttu-id="d59d4-550">Diese vier Werte entsprechen den Basis-64-Ziffern "a", "a", "E" und "C" am Anfang der Ausgabe.</span><span class="sxs-lookup"><span data-stu-id="d59d4-550">Those four values correspond to the base-64 digits "A", "A", "E", and "C" at the beginning of the output.</span></span>  
  
 <span data-ttu-id="d59d4-551">Wenn keine ganzzahlige Anzahl von 3-Byte-Gruppen vorhanden ist, werden die verbleibenden Bytes effektiv mit Nullen aufgefüllt, um eine vollständige Gruppe zu bilden.</span><span class="sxs-lookup"><span data-stu-id="d59d4-551">If an integral number of 3-byte groups does not exist, the remaining bytes are effectively padded with zeros to form a complete group.</span></span> <span data-ttu-id="d59d4-552">In diesem Beispiel ist der Wert des letzten Bytes hexadezimal ff.</span><span class="sxs-lookup"><span data-stu-id="d59d4-552">In this example, the value of the last byte is hexadecimal FF.</span></span> <span data-ttu-id="d59d4-553">Die ersten 6 Bits sind gleich Decimal 63. Dies entspricht 64 der Ziffer "/" am Ende der Ausgabe, und die nächsten 2 Bits werden mit Nullen aufgefüllt, um Decimal 48 zu erhalten, was der Base-64-Ziffer "w" entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-553">The first 6 bits are equal to decimal 63, which corresponds to the base-64 digit "/" at the end of the output, and the next 2 bits are padded with zeros to yield decimal 48, which corresponds to the base-64 digit, "w".</span></span> <span data-ttu-id="d59d4-554">Die letzten zwei 6-Bit-Werte sind Auffüll Zeichen und entsprechen dem Text Füll Zeichen (=).</span><span class="sxs-lookup"><span data-stu-id="d59d4-554">The last two 6-bit values are padding and correspond to the valueless padding character, "=".</span></span>  
  
 [!code-cpp[convert.tobase64string#1](~/samples/snippets/cpp/VS_Snippets_CLR/convert.tobase64string/CPP/tb64s.cpp#1)]
 [!code-csharp[convert.tobase64string#1](~/samples/snippets/csharp/VS_Snippets_CLR/convert.tobase64string/CS/tb64s.cs#1)]
 [!code-vb[convert.tobase64string#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/convert.tobase64string/VB/tb64s.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d59d4-555"><paramref name="inArray" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-555"><paramref name="inArray" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d59d4-556"><paramref name="offset" /> oder <paramref name="length" /> ist ein negativer Wert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-556"><paramref name="offset" /> or <paramref name="length" /> is negative.</span></span>  
  
<span data-ttu-id="d59d4-557">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-557">-or-</span></span> 
 <span data-ttu-id="d59d4-558"><paramref name="offset" /> plus <paramref name="length" /> ist größer als die Länge von <paramref name="inArray" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-558"><paramref name="offset" /> plus <paramref name="length" /> is greater than the length of <paramref name="inArray" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d59d4-559"><paramref name="options" /> ist kein gültiger <see cref="T:System.Base64FormattingOptions" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-559"><paramref name="options" /> is not a valid <see cref="T:System.Base64FormattingOptions" /> value.</span></span></exception>
        <altmember cref="M:System.Convert.FromBase64String(System.String)" />
        <altmember cref="T:System.Security.Cryptography.ToBase64Transform" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToBoolean">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d59d4-560">Konvertiert einen angegebenen Wert in einen entsprechenden booleschen Wert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-560">Converts a specified value to an equivalent Boolean value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(bool value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : bool -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-561">Der zurückzugebende boolesche Wert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-561">The Boolean value to return.</span></span></param>
        <summary><span data-ttu-id="d59d4-562">Gibt den angegebenen booleschen Wert zurück. Es wird keine wirkliche Konvertierung durchgeführt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-562">Returns the specified Boolean value; no actual conversion is performed.</span></span></summary>
        <returns><span data-ttu-id="d59d4-563"><paramref name="value" /> wird unverändert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-563"><paramref name="value" /> is returned unchanged.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Byte) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : byte -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-564">Die zu konvertierende 8-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-564">The 8-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-565">Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl ohne Vorzeichen in einen entsprechenden booleschen Wert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-565">Converts the value of the specified 8-bit unsigned integer to an equivalent Boolean value.</span></span></summary>
        <returns><span data-ttu-id="d59d4-566"><see langword="true" />, wenn <paramref name="value" /> nicht 0 (null) ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-566"><see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-567">Im folgenden Beispiel wird ein Array von <xref:System.Byte>-Werten in <xref:System.Boolean> Werte konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-567">The following example converts an array of <xref:System.Byte> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#12)]
 [!code-csharp[System.Convert.ToBoolean#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#12)]
 [!code-vb[System.Convert.ToBoolean#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(char value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : char -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-568">Das zu konvertierende Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-568">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-569">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d59d4-569">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="d59d4-570">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-570">This conversion is not supported.</span></span> <span data-ttu-id="d59d4-571">Es wird kein Wert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-571">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-572">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-572">This conversion is not supported.</span></span></exception>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : DateTime -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-573">Der Datums- und Uhrzeitwert, der konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="d59d4-573">The date and time value to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-574">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d59d4-574">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="d59d4-575">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-575">This conversion is not supported.</span></span> <span data-ttu-id="d59d4-576">Es wird kein Wert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-576">No value is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-577">Im folgenden Beispiel wird veranschaulicht, dass der Versuch, einen <xref:System.DateTime> Wert in einen booleschen Typ zu konvertieren, <xref:System.InvalidCastException>auslöst.</span><span class="sxs-lookup"><span data-stu-id="d59d4-577">The following example demonstrates that an attempt to convert a <xref:System.DateTime> value to a Boolean type throws <xref:System.InvalidCastException>.</span></span>  
  
 [!code-cpp[System.Convert Snippets#20](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#20)]
 [!code-csharp[System.Convert Snippets#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#20)]
 [!code-vb[System.Convert Snippets#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-578">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-578">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : decimal -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-579">Die zu konvertierende Zahl.</span><span class="sxs-lookup"><span data-stu-id="d59d4-579">The number to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-580">Konvertiert den Wert der angegebenen Dezimalzahl in einen entsprechenden booleschen Wert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-580">Converts the value of the specified decimal number to an equivalent Boolean value.</span></span></summary>
        <returns><span data-ttu-id="d59d4-581"><see langword="true" />, wenn <paramref name="value" /> nicht 0 (null) ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-581"><see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-582">Im folgenden Beispiel wird ein Array von <xref:System.Decimal>-Werten in <xref:System.Boolean> Werte konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-582">The following example converts an array of <xref:System.Decimal> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#2)]
 [!code-csharp[System.Convert.ToBoolean#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#2)]
 [!code-vb[System.Convert.ToBoolean#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(double value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : double -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-583">Die zu konvertierende Gleitkommazahl mit doppelter Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-583">The double-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-584">Konvertiert den Wert der angegebenen Gleitkommazahl mit doppelter Genauigkeit in einen entsprechenden booleschen Wert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-584">Converts the value of the specified double-precision floating-point number to an equivalent Boolean value.</span></span></summary>
        <returns><span data-ttu-id="d59d4-585"><see langword="true" />, wenn <paramref name="value" /> nicht 0 (null) ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-585"><see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-586">Im folgenden Beispiel wird ein boolescher Wert in eine <xref:System.Double> und ein <xref:System.Double> in einen booleschen Wert konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-586">The following example converts a Boolean to a <xref:System.Double> and a <xref:System.Double> to a Boolean value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#1)]
 [!code-csharp[System.Convert Snippets#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#1)]
 [!code-vb[System.Convert Snippets#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(short value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : int16 -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-587">Die zu konvertierende 16-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-587">The 16-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-588">Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl mit Vorzeichen in einen entsprechenden booleschen Wert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-588">Converts the value of the specified 16-bit signed integer to an equivalent Boolean value.</span></span></summary>
        <returns><span data-ttu-id="d59d4-589"><see langword="true" />, wenn <paramref name="value" /> nicht 0 (null) ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-589"><see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-590">Im folgenden Beispiel wird ein Array von <xref:System.Int16>-Werten in <xref:System.Boolean> Werte konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-590">The following example converts an array of <xref:System.Int16> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#3)]
 [!code-csharp[System.Convert.ToBoolean#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#3)]
 [!code-vb[System.Convert.ToBoolean#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int16" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(int value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : int -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-591">Die zu konvertierende 32-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-591">The 32-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-592">Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl mit Vorzeichen in einen entsprechenden booleschen Wert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-592">Converts the value of the specified 32-bit signed integer to an equivalent Boolean value.</span></span></summary>
        <returns><span data-ttu-id="d59d4-593"><see langword="true" />, wenn <paramref name="value" /> nicht 0 (null) ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-593"><see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-594">Im folgenden Beispiel wird ein Array von <xref:System.Int32>-Werten in <xref:System.Boolean> Werte konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-594">The following example converts an array of <xref:System.Int32> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#4)]
 [!code-csharp[System.Convert.ToBoolean#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#4)]
 [!code-vb[System.Convert.ToBoolean#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(long value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : int64 -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-595">Die zu konvertierende 64-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-595">The 64-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-596">Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl mit Vorzeichen in einen entsprechenden booleschen Wert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-596">Converts the value of the specified 64-bit signed integer to an equivalent Boolean value.</span></span></summary>
        <returns><span data-ttu-id="d59d4-597"><see langword="true" />, wenn <paramref name="value" /> nicht 0 (null) ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-597"><see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-598">Im folgenden Beispiel wird ein Array von <xref:System.Int64>-Werten in <xref:System.Boolean> Werte konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-598">The following example converts an array of <xref:System.Int64> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#5)]
 [!code-csharp[System.Convert.ToBoolean#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#5)]
 [!code-vb[System.Convert.ToBoolean#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : obj -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-599">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert, oder <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-599">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="d59d4-600">Konvertiert den Wert eines angegebenen Objekts in einen entsprechenden booleschen Wert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-600">Converts the value of a specified object to an equivalent Boolean value.</span></span></summary>
        <returns><span data-ttu-id="d59d4-601"><see langword="true" /> oder <see langword="false" />. Damit wird der Wert wiedergegeben, der beim Aufrufen der <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />-Methode für den zugrunde liegenden Typ von <paramref name="value" /> zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-601"><see langword="true" /> or <see langword="false" />, which reflects the value returned by invoking the <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /> method for the underlying type of <paramref name="value" />.</span></span> <span data-ttu-id="d59d4-602">Wenn <paramref name="value" /> gleich <see langword="null" /> ist, gibt die Methode <see langword="false" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="d59d4-602">If <paramref name="value" /> is <see langword="null" />, the method returns <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-603">Im folgenden Beispiel wird ein Array von Objekt Werten in <xref:System.Boolean> Werte konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-603">The following example converts an array of object values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#11)]
 [!code-csharp[System.Convert.ToBoolean#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#11)]
 [!code-vb[System.Convert.ToBoolean#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-604"><paramref name="value" /> ist eine Zeichenfolge, die nicht gleich <see cref="F:System.Boolean.TrueString" /> oder <see cref="F:System.Boolean.FalseString" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-604"><paramref name="value" /> is a string that does not equal <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-605">Die <paramref name="value" />-Schnittstelle wird von <see cref="T:System.IConvertible" /> nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-605"><paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span></span>  
  
<span data-ttu-id="d59d4-606">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-606">-or-</span></span> 
<span data-ttu-id="d59d4-607">Die Konvertierung von <paramref name="value" /> in <see cref="T:System.Boolean" /> wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-607">The conversion of <paramref name="value" /> to a <see cref="T:System.Boolean" /> is not supported.</span></span></exception>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As SByte) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : sbyte -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-608">Die zu konvertierende 8-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-608">The 8-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-609">Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl mit Vorzeichen in einen entsprechenden booleschen Wert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-609">Converts the value of the specified 8-bit signed integer to an equivalent Boolean value.</span></span></summary>
        <returns><span data-ttu-id="d59d4-610"><see langword="true" />, wenn <paramref name="value" /> nicht 0 (null) ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-610"><see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-611">Im folgenden Beispiel wird ein Array von <xref:System.SByte>-Werten in <xref:System.Boolean> Werte konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-611">The following example converts an array of <xref:System.SByte> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#6)]
 [!code-csharp[System.Convert.ToBoolean#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#6)]
 [!code-vb[System.Convert.ToBoolean#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.SByte" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(float value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : single -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-612">Die zu konvertierende Gleitkommazahl mit einfacher Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-612">The single-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-613">Konvertiert den Wert der angegebenen Gleitkommazahl mit einfacher Genauigkeit in einen entsprechenden booleschen Wert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-613">Converts the value of the specified single-precision floating-point number to an equivalent Boolean value.</span></span></summary>
        <returns><span data-ttu-id="d59d4-614"><see langword="true" />, wenn <paramref name="value" /> nicht 0 (null) ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-614"><see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-615">Im folgenden Beispiel wird ein Array von <xref:System.Single>-Werten in <xref:System.Boolean> Werte konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-615">The following example converts an array of <xref:System.Single> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#7)]
 [!code-csharp[System.Convert.ToBoolean#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#7)]
 [!code-vb[System.Convert.ToBoolean#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : string -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-616">Eine Zeichenfolge, die den Wert <see cref="F:System.Boolean.TrueString" /> oder <see cref="F:System.Boolean.FalseString" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-616">A string that contains the value of either <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span></span></param>
        <summary><span data-ttu-id="d59d4-617">Konvertiert die angegebene Zeichenfolgendarstellung eines logischen Werts in seine boolesche Entsprechung.</span><span class="sxs-lookup"><span data-stu-id="d59d4-617">Converts the specified string representation of a logical value to its Boolean equivalent.</span></span></summary>
        <returns><span data-ttu-id="d59d4-618"><see langword="true" />, wenn <paramref name="value" /> gleich <see cref="F:System.Boolean.TrueString" /> ist, oder <see langword="false" />, wenn <paramref name="value" /> gleich <see cref="F:System.Boolean.FalseString" /> oder <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-618"><see langword="true" /> if <paramref name="value" /> equals <see cref="F:System.Boolean.TrueString" />, or <see langword="false" /> if <paramref name="value" /> equals <see cref="F:System.Boolean.FalseString" /> or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-619">Damit eine erfolgreiche Konvertierung erfolgt, muss der `value`-Parameter entweder <xref:System.Boolean.TrueString?displayProperty=nameWithType>, eine Konstante, deren Wert `True`ist, <xref:System.Boolean.FalseString?displayProperty=nameWithType>, eine Konstante, deren Wert `False`ist, oder `null`sein.</span><span class="sxs-lookup"><span data-stu-id="d59d4-619">For a successful conversion to occur, the `value` parameter must equal either <xref:System.Boolean.TrueString?displayProperty=nameWithType>, a constant whose value is `True`, <xref:System.Boolean.FalseString?displayProperty=nameWithType>, a constant whose value is `False`, or it must be `null`.</span></span> <span data-ttu-id="d59d4-620">Beim Vergleich von `value` mit <xref:System.Boolean.TrueString?displayProperty=nameWithType> und <xref:System.Boolean.FalseString?displayProperty=nameWithType>ignoriert die-Methode die Groß-und Kleinschreibung sowie führende und nachfolgende Leerzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-620">In comparing `value` with <xref:System.Boolean.TrueString?displayProperty=nameWithType> and <xref:System.Boolean.FalseString?displayProperty=nameWithType>, the method ignores case as well as leading and trailing white space.</span></span>  
  
 <span data-ttu-id="d59d4-621">Wenn eine Ausnahme nicht behandelt werden soll, wenn bei der Konvertierung ein Fehler auftritt, können Sie stattdessen die <xref:System.Boolean.TryParse%2A?displayProperty=nameWithType>-Methode abrufen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-621">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Boolean.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="d59d4-622">Sie gibt einen <xref:System.Boolean> Wert zurück, der angibt, ob die Konvertierung erfolgreich war oder fehlgeschlagen ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-622">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-623">Im folgenden Beispiel wird die <xref:System.Convert.ToBoolean%28System.String%29?displayProperty=nameWithType>-Methode verwendet, um verschiedene Zeichen folgen in boolesche Werte zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-623">The following example uses the <xref:System.Convert.ToBoolean%28System.String%29?displayProperty=nameWithType> method to convert various strings to Boolean values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean1.cpp#1)]
 [!code-csharp[System.Convert.ToBoolean#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/ToBoolean1.cs#1)]
 [!code-vb[System.Convert.ToBoolean#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/ToBoolean1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-624"><paramref name="value" /> ist ungleich <see cref="F:System.Boolean.TrueString" /> oder <see cref="F:System.Boolean.FalseString" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-624"><paramref name="value" /> is not equal to <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span></span></exception>
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As UShort) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : uint16 -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-625">Die zu konvertierende 16-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-625">The 16-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-626">Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl ohne Vorzeichen in einen entsprechenden booleschen Wert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-626">Converts the value of the specified 16-bit unsigned integer to an equivalent Boolean value.</span></span></summary>
        <returns><span data-ttu-id="d59d4-627"><see langword="true" />, wenn <paramref name="value" /> nicht 0 (null) ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-627"><see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-628">Im folgenden Beispiel wird ein Array von <xref:System.UInt16>-Werten in <xref:System.Boolean> Werte konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-628">The following example converts an array of <xref:System.UInt16> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#8)]
 [!code-csharp[System.Convert.ToBoolean#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#8)]
 [!code-vb[System.Convert.ToBoolean#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt16" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As UInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : uint32 -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-629">Die zu konvertierende 32-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-629">The 32-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-630">Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl ohne Vorzeichen in einen entsprechenden booleschen Wert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-630">Converts the value of the specified 32-bit unsigned integer to an equivalent Boolean value.</span></span></summary>
        <returns><span data-ttu-id="d59d4-631"><see langword="true" />, wenn <paramref name="value" /> nicht 0 (null) ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-631"><see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-632">Im folgenden Beispiel wird ein Array von <xref:System.Int32>-Werten in <xref:System.Boolean> Werte konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-632">The following example converts an array of <xref:System.Int32> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#9)]
 [!code-csharp[System.Convert.ToBoolean#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#9)]
 [!code-vb[System.Convert.ToBoolean#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt32" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : uint64 -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-633">Die zu konvertierende 64-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-633">The 64-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-634">Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl ohne Vorzeichen in einen entsprechenden booleschen Wert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-634">Converts the value of the specified 64-bit unsigned integer to an equivalent Boolean value.</span></span></summary>
        <returns><span data-ttu-id="d59d4-635"><see langword="true" />, wenn <paramref name="value" /> nicht 0 (null) ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-635"><see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-636">Im folgenden Beispiel wird ein Array von <xref:System.UInt64>-Werten in <xref:System.Boolean> Werte konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-636">The following example converts an array of <xref:System.UInt64> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#10)]
 [!code-csharp[System.Convert.ToBoolean#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#10)]
 [!code-vb[System.Convert.ToBoolean#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt64" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Object, provider As IFormatProvider) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : obj * IFormatProvider -&gt; bool" Usage="System.Convert.ToBoolean (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-637">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert, oder <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-637">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span></span></param>
        <param name="provider"><span data-ttu-id="d59d4-638">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-638">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="d59d4-639">Konvertiert den Wert des angegebenen Objekts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in einen entsprechenden booleschen Wert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-639">Converts the value of the specified object to an equivalent Boolean value, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="d59d4-640"><see langword="true" /> oder <see langword="false" />. Damit wird der Wert wiedergegeben, der beim Aufrufen der <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />-Methode für den zugrunde liegenden Typ von <paramref name="value" /> zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-640"><see langword="true" /> or <see langword="false" />, which reflects the value returned by invoking the <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /> method for the underlying type of <paramref name="value" />.</span></span> <span data-ttu-id="d59d4-641">Wenn <paramref name="value" /> gleich <see langword="null" /> ist, gibt die Methode <see langword="false" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="d59d4-641">If <paramref name="value" /> is <see langword="null" />, the method returns <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-642">`provider` ermöglicht es dem Benutzer, kulturspezifische Konvertierungs Informationen zum Inhalt von `value`anzugeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-642">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="d59d4-643">Die Basis Typen ignorieren den `provider`-Parameter. der-Parameter kann jedoch verwendet werden, wenn `value` ein benutzerdefinierter Typ ist, der die <xref:System.IConvertible>-Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-643">The base types ignore the `provider` parameter; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-644">Im folgenden Beispiel wird eine Klasse definiert, die <xref:System.IConvertible> und eine Klasse implementiert, die <xref:System.IFormatProvider>implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-644">The following example defines a class that implements <xref:System.IConvertible> and a class that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="d59d4-645">Objekte der Klasse, die implementiert <xref:System.IConvertible> ein Array von <xref:System.Double> Werten enthalten.</span><span class="sxs-lookup"><span data-stu-id="d59d4-645">Objects of the class that implements <xref:System.IConvertible> hold an array of <xref:System.Double> values.</span></span> <span data-ttu-id="d59d4-646">Ein Objekt jeder Klasse wird an die <xref:System.Convert.ToBoolean%28System.Object%2CSystem.IFormatProvider%29>-Methode übermittelt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-646">An object of each class is passed to the <xref:System.Convert.ToBoolean%28System.Object%2CSystem.IFormatProvider%29> method.</span></span> <span data-ttu-id="d59d4-647">Diese Methode gibt `true` zurück, wenn einer der nicht verworfenen Array Werte ungleich 0 (null) ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-647">This method returns `true` if any of the non-discarded array values are non-zero.</span></span> <span data-ttu-id="d59d4-648">Das <xref:System.IFormatProvider>-Objekt bestimmt, wie Elemente für diese Berechnung verworfen werden.</span><span class="sxs-lookup"><span data-stu-id="d59d4-648">The <xref:System.IFormatProvider> object determines how elements are discarded for this calculation.</span></span>  
  
 [!code-cpp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CPP/objectifp.cpp#1)]
 [!code-csharp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CS/objectifp.cs#1)]
 [!code-vb[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/VB/objectifp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-649"><paramref name="value" /> ist eine Zeichenfolge, die nicht gleich <see cref="F:System.Boolean.TrueString" /> oder <see cref="F:System.Boolean.FalseString" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-649"><paramref name="value" /> is a string that does not equal <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-650">Die <paramref name="value" />-Schnittstelle wird von <see cref="T:System.IConvertible" /> nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-650"><paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span></span>  
  
<span data-ttu-id="d59d4-651">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-651">-or-</span></span> 
<span data-ttu-id="d59d4-652">Die Konvertierung von <paramref name="value" /> in <see cref="T:System.Boolean" /> wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-652">The conversion of <paramref name="value" /> to a <see cref="T:System.Boolean" /> is not supported.</span></span></exception>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As String, provider As IFormatProvider) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : string * IFormatProvider -&gt; bool" Usage="System.Convert.ToBoolean (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-653">Eine Zeichenfolge, die den Wert <see cref="F:System.Boolean.TrueString" /> oder <see cref="F:System.Boolean.FalseString" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-653">A string that contains the value of either <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span></span></param>
        <param name="provider"><span data-ttu-id="d59d4-654">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-654">An object that supplies culture-specific formatting information.</span></span> <span data-ttu-id="d59d4-655">Dieser Parameter wird ignoriert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-655">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="d59d4-656">Konvertiert die angegebene Zeichenfolgendarstellung eines logischen Werts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in seine boolesche Entsprechung.</span><span class="sxs-lookup"><span data-stu-id="d59d4-656">Converts the specified string representation of a logical value to its Boolean equivalent, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="d59d4-657"><see langword="true" />, wenn <paramref name="value" /> gleich <see cref="F:System.Boolean.TrueString" /> ist, oder <see langword="false" />, wenn <paramref name="value" /> gleich <see cref="F:System.Boolean.FalseString" /> oder <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-657"><see langword="true" /> if <paramref name="value" /> equals <see cref="F:System.Boolean.TrueString" />, or <see langword="false" /> if <paramref name="value" /> equals <see cref="F:System.Boolean.FalseString" /> or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-658">Wenn eine Ausnahme nicht behandelt werden soll, wenn bei der Konvertierung ein Fehler auftritt, können Sie stattdessen die <xref:System.Boolean.TryParse%2A?displayProperty=nameWithType>-Methode abrufen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-658">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Boolean.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="d59d4-659">Sie gibt einen <xref:System.Boolean> Wert zurück, der angibt, ob die Konvertierung erfolgreich war oder fehlgeschlagen ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-659">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-660"><paramref name="value" /> ist ungleich <see cref="F:System.Boolean.TrueString" /> oder <see cref="F:System.Boolean.FalseString" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-660"><paramref name="value" /> is not equal to <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span></span></exception>
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToByte">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d59d4-661">Konvertiert einen angegebenen Wert in eine 8-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-661">Converts a specified value to an 8-bit unsigned integer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Boolean) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(bool value);" />
      <MemberSignature Language="F#" Value="static member ToByte : bool -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-662">Der zu konvertierende boolesche Wert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-662">The Boolean value to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-663">Konvertiert den angegebenen booleschen Wert in die entsprechende 8-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-663">Converts the specified Boolean value to the equivalent 8-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-664">Die Zahl 1, wenn <paramref name="value" /><see langword="true" /> ist, andernfalls 0 (null).</span><span class="sxs-lookup"><span data-stu-id="d59d4-664">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-665">Das folgende Beispiel veranschaulicht die Konvertierung von <xref:System.Boolean> in <xref:System.Byte> Werte.</span><span class="sxs-lookup"><span data-stu-id="d59d4-665">The following example illustrates the conversion of <xref:System.Boolean> to <xref:System.Byte> values.</span></span>  
  
 [!code-cpp[System.Convert.ToByte#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.convert.tobyte/cpp/tobyte1.cpp#1)]
 [!code-csharp[System.Convert.ToByte#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#1)]
 [!code-vb[System.Convert.ToByte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToByte : byte -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-666">Die zurückzugebende 8-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-666">The 8-bit unsigned integer to return.</span></span></param>
        <summary><span data-ttu-id="d59d4-667">Gibt die angegebene 8-Bit-Ganzzahl ohne Vorzeichen zurück. Es wird keine wirkliche Konvertierung durchgeführt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-667">Returns the specified 8-bit unsigned integer; no actual conversion is performed.</span></span></summary>
        <returns><span data-ttu-id="d59d4-668"><paramref name="value" /> wird unverändert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-668"><paramref name="value" /> is returned unchanged.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Char) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(char value);" />
      <MemberSignature Language="F#" Value="static member ToByte : char -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-669">Das zu konvertierende Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-669">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-670">Konvertiert den Wert des angegebenen Unicode-Zeichens in die entsprechende 8-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-670">Converts the value of the specified Unicode character to the equivalent 8-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-671">Eine 8-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-671">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-672">Diese Methode gibt einen Bytewert ohne Vorzeichen zurück, der den numerischen Code des <xref:System.Char> Objekts darstellt, das an Sie übermittelt wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-672">This method returns an unsigned byte value that represents the numeric code of the <xref:System.Char> object passed to it.</span></span> <span data-ttu-id="d59d4-673">In der .NET Framework ist ein <xref:System.Char> Objekt ein 16-Bit-Wert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-673">In the .NET Framework, a <xref:System.Char> object is a 16-bit value.</span></span> <span data-ttu-id="d59d4-674">Dies bedeutet, dass die-Methode für die Rückgabe der numerischen Codes von Zeichen im ASCII-Zeichenbereich oder in den Unicode-Steuerelementen und den grundlegenden lateinischen Steuerelementen und C1-Steuerelementen sowie für die ergänzenden Bereiche "Latin-1" von u + 0000 bis U + 00FF geeignet ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-674">This means that the method is suitable for returning the numeric codes of characters in the ASCII character range or in the Unicode C0 Controls and Basic Latin, and C1 Controls and Latin-1 Supplement ranges, from U+0000 to U+00FF.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-675">Im folgenden Beispiel wird ein Array von <xref:System.Char>-Werten in <xref:System.Byte> Werte konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-675">The following example converts an array of <xref:System.Char> values to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#2)]
 [!code-vb[System.Convert.ToByte#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-676"><paramref name="value" /> stellt eine Zahl dar, die größer als <see cref="F:System.Byte.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-676"><paramref name="value" /> represents a number that is greater than <see cref="F:System.Byte.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As DateTime) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToByte : DateTime -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-677">Der Datums- und Uhrzeitwert, der konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="d59d4-677">The date and time value to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-678">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d59d4-678">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="d59d4-679">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-679">This conversion is not supported.</span></span> <span data-ttu-id="d59d4-680">Es wird kein Wert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-680">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-681">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-681">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Decimal) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToByte : decimal -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-682">Die zu konvertierende Zahl.</span><span class="sxs-lookup"><span data-stu-id="d59d4-682">The number to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-683">Konvertiert den Wert der angegebenen Dezimalzahl in die entsprechende 8-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-683">Converts the value of the specified decimal number to an equivalent 8-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-684"><paramref name="value" />, auf die nächste 8-Bit-Ganzzahl ohne Vorzeichen gerundet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-684"><paramref name="value" />, rounded to the nearest 8-bit unsigned integer.</span></span> <span data-ttu-id="d59d4-685">Wenn <paramref name="value" /> genau zwischen zwei ganzen Zahlen liegt, wird die gerade Zahl zurückgegeben (d. h. 4,5 wird in 4 und 5,5 in 6 konvertiert).</span><span class="sxs-lookup"><span data-stu-id="d59d4-685">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-686">Im folgenden Beispiel wird ein <xref:System.Byte> Wert in ein <xref:System.Decimal> und ein <xref:System.Decimal> Wert in einen-<xref:System.Byte>konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-686">The following example converts a <xref:System.Byte> value to a <xref:System.Decimal> and a <xref:System.Decimal> value to a <xref:System.Byte>.</span></span>  
  
 [!code-cpp[System.Convert Snippets#18](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#18)]
 [!code-csharp[System.Convert Snippets#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#18)]
 [!code-vb[System.Convert Snippets#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-687"><paramref name="value" /> ist größer als <see cref="F:System.Byte.MaxValue" /> oder kleiner als <see cref="F:System.Byte.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-687"><paramref name="value" /> is greater than <see cref="F:System.Byte.MaxValue" /> or less than <see cref="F:System.Byte.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Double) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(double value);" />
      <MemberSignature Language="F#" Value="static member ToByte : double -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-688">Die zu konvertierende Gleitkommazahl mit doppelter Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-688">The double-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-689">Konvertiert den Wert der angegebenen Gleitkommazahl mit doppelter Genauigkeit in eine entsprechende 8-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-689">Converts the value of the specified double-precision floating-point number to an equivalent 8-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-690"><paramref name="value" />, auf die nächste 8-Bit-Ganzzahl ohne Vorzeichen gerundet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-690"><paramref name="value" />, rounded to the nearest 8-bit unsigned integer.</span></span> <span data-ttu-id="d59d4-691">Wenn <paramref name="value" /> genau zwischen zwei ganzen Zahlen liegt, wird die gerade Zahl zurückgegeben (d. h. 4,5 wird in 4 und 5,5 in 6 konvertiert).</span><span class="sxs-lookup"><span data-stu-id="d59d4-691">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-692">Im folgenden Beispiel wird ein <xref:System.Byte> Wert in ein <xref:System.Double> und ein <xref:System.Double> Wert in einen-<xref:System.Byte>konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-692">The following example converts a <xref:System.Byte> value to a <xref:System.Double> and a <xref:System.Double> value to a <xref:System.Byte>.</span></span>  
  
 [!code-cpp[System.Convert Snippets#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#2)]
 [!code-csharp[System.Convert Snippets#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#2)]
 [!code-vb[System.Convert Snippets#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-693"><paramref name="value" /> ist größer als <see cref="F:System.Byte.MaxValue" /> oder kleiner als <see cref="F:System.Byte.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-693"><paramref name="value" /> is greater than <see cref="F:System.Byte.MaxValue" /> or less than <see cref="F:System.Byte.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Short) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(short value);" />
      <MemberSignature Language="F#" Value="static member ToByte : int16 -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-694">Die zu konvertierende 16-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-694">The 16-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-695">Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl mit Vorzeichen in eine entsprechende 8-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-695">Converts the value of the specified 16-bit signed integer to an equivalent 8-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-696">Eine 8-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-696">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-697">Im folgenden Beispiel wird ein Array von <xref:System.Int16>-Werten in <xref:System.Byte> Werte konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-697">The following example converts an array of <xref:System.Int16> values to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#3)]
 [!code-vb[System.Convert.ToByte#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-698"><paramref name="value" /> ist kleiner als <see cref="F:System.Byte.MinValue" /> oder größer als <see cref="F:System.Byte.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-698"><paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(int value);" />
      <MemberSignature Language="F#" Value="static member ToByte : int -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-699">Die zu konvertierende 32-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-699">The 32-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-700">Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl mit Vorzeichen in eine entsprechende 8-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-700">Converts the value of the specified 32-bit signed integer to an equivalent 8-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-701">Eine 8-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-701">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-702">Im folgenden Beispiel wird ein Array von <xref:System.Int32>-Werten in <xref:System.Byte> Werte konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-702">The following example converts an array of <xref:System.Int32> values to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#4)]
 [!code-vb[System.Convert.ToByte#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-703"><paramref name="value" /> ist kleiner als <see cref="F:System.Byte.MinValue" /> oder größer als <see cref="F:System.Byte.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-703"><paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Long) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(long value);" />
      <MemberSignature Language="F#" Value="static member ToByte : int64 -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-704">Die zu konvertierende 64-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-704">The 64-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-705">Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl mit Vorzeichen in eine entsprechende 8-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-705">Converts the value of the specified 64-bit signed integer to an equivalent 8-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-706">Eine 8-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-706">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-707">Im folgenden Beispiel wird ein Array von <xref:System.Int64>-Werten in <xref:System.Byte> Werte konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-707">The following example converts an array of <xref:System.Int64> values to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#5)]
 [!code-vb[System.Convert.ToByte#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-708"><paramref name="value" /> ist kleiner als <see cref="F:System.Byte.MinValue" /> oder größer als <see cref="F:System.Byte.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-708"><paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Object) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToByte : obj -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-709">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert, oder <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-709">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="d59d4-710">Konvertiert den Wert des angegebenen Objekts in eine 8-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-710">Converts the value of the specified object to an 8-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-711">Eine 8-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-711">An 8-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-712">Wenn `value` nicht `null`wird, umschließt diese Methode einen aufzurufenden <xref:System.IConvertible.ToByte%2A?displayProperty=nameWithType> Implementierung des zugrunde liegenden Typs `value`.</span><span class="sxs-lookup"><span data-stu-id="d59d4-712">If `value` is not `null`, this method wraps a call to the <xref:System.IConvertible.ToByte%2A?displayProperty=nameWithType> implementation of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-713">Im folgenden Beispiel wird die <xref:System.Convert.ToByte%28System.Object%29>-Methode verwendet, um ein Array von-Objekten in <xref:System.Byte> Werte zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-713">The following example uses the <xref:System.Convert.ToByte%28System.Object%29> method to convert an array of objects to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#6)]
 [!code-vb[System.Convert.ToByte#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-714"><paramref name="value" /> weist nicht das Eigenschaftenformat für einen <see cref="T:System.Byte" />-Wert auf.</span><span class="sxs-lookup"><span data-stu-id="d59d4-714"><paramref name="value" /> is not in the property format for a <see cref="T:System.Byte" /> value.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-715"><paramref name="value" /> implementiert nicht <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-715"><paramref name="value" /> does not implement <see cref="T:System.IConvertible" />.</span></span>  
  
<span data-ttu-id="d59d4-716">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-716">-or-</span></span> 
<span data-ttu-id="d59d4-717">Die Konvertierung von <paramref name="value" /> in den <see cref="T:System.Byte" />-Typ wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-717">Conversion from <paramref name="value" /> to the <see cref="T:System.Byte" /> type is not supported.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-718"><paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Byte.MinValue" /> oder größer als <see cref="F:System.Byte.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-718"><paramref name="value" /> represents a number that is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As SByte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToByte : sbyte -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-719">Die zu konvertierende 8-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-719">The 8-bit signed integer to be converted.</span></span></param>
        <summary><span data-ttu-id="d59d4-720">Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl mit Vorzeichen in eine entsprechende 8-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-720">Converts the value of the specified 8-bit signed integer to an equivalent 8-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-721">Eine 8-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-721">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-722">Im folgenden Beispiel wird ein Array von <xref:System.SByte>-Werten in <xref:System.Byte> Werte konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-722">The following example converts an array of <xref:System.SByte> values to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#7)]
 [!code-vb[System.Convert.ToByte#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-723"><paramref name="value" /> ist kleiner als <see cref="F:System.Byte.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-723"><paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Single) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(float value);" />
      <MemberSignature Language="F#" Value="static member ToByte : single -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-724">Eine Gleitkommazahl mit einfacher Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-724">A single-precision floating-point number.</span></span></param>
        <summary><span data-ttu-id="d59d4-725">Konvertiert den Wert der angegebenen Gleitkommazahl mit einfacher Genauigkeit in die entsprechende 8-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-725">Converts the value of the specified single-precision floating-point number to an equivalent 8-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-726"><paramref name="value" />, auf die nächste 8-Bit-Ganzzahl ohne Vorzeichen gerundet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-726"><paramref name="value" />, rounded to the nearest 8-bit unsigned integer.</span></span> <span data-ttu-id="d59d4-727">Wenn <paramref name="value" /> genau zwischen zwei ganzen Zahlen liegt, wird die gerade Zahl zurückgegeben (d. h. 4,5 wird in 4 und 5,5 in 6 konvertiert).</span><span class="sxs-lookup"><span data-stu-id="d59d4-727">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-728">Im folgenden Beispiel wird ein <xref:System.Single> Wert in einen <xref:System.Byte>konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-728">The following example converts a <xref:System.Single> value to a <xref:System.Byte>.</span></span>  
  
 [!code-cpp[System.Convert Snippets#19](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#19)]
 [!code-csharp[System.Convert Snippets#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#19)]
 [!code-vb[System.Convert Snippets#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-729"><paramref name="value" /> ist größer als <see cref="F:System.Byte.MaxValue" /> oder kleiner als <see cref="F:System.Byte.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-729"><paramref name="value" /> is greater than <see cref="F:System.Byte.MaxValue" /> or less than <see cref="F:System.Byte.MinValue" />.</span></span></exception>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As String) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToByte : string -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-730">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-730">A string that contains the number to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-731">Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl in eine entsprechende 8-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-731">Converts the specified string representation of a number to an equivalent 8-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-732">Eine 8-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-732">An 8-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-733">Die Verwendung der <xref:System.Convert.ToByte%28System.String%29>-Methode entspricht der Übergabe von `value` an die <xref:System.Byte.Parse%28System.String%29?displayProperty=nameWithType>-Methode.</span><span class="sxs-lookup"><span data-stu-id="d59d4-733">Using the <xref:System.Convert.ToByte%28System.String%29> method is equivalent to passing `value` to the <xref:System.Byte.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="d59d4-734">`value` wird mithilfe der Formatierungskonventionen der aktuellen Threadkultur interpretiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-734">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="d59d4-735">Wenn eine Ausnahme nicht behandelt werden soll, wenn bei der Konvertierung ein Fehler auftritt, können Sie stattdessen die <xref:System.Byte.TryParse%2A?displayProperty=nameWithType>-Methode abrufen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-735">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Byte.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="d59d4-736">Sie gibt einen <xref:System.Boolean> Wert zurück, der angibt, ob die Konvertierung erfolgreich war oder fehlgeschlagen ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-736">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-737">Im folgenden Beispiel wird ein Zeichen folgen Array definiert, und es wird versucht, jede Zeichenfolge in eine <xref:System.Byte>zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-737">The following example defines a string array and attempts to convert each string to a <xref:System.Byte>.</span></span>  <span data-ttu-id="d59d4-738">Beachten Sie, dass <xref:System.String.Empty?displayProperty=nameWithType> einen <xref:System.FormatException>auslöst, während eine `null` Zeichenfolge mit 0 (null) analysiert wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-738">Note that while a `null` string parses to zero, <xref:System.String.Empty?displayProperty=nameWithType> throws a <xref:System.FormatException>.</span></span> <span data-ttu-id="d59d4-739">Beachten Sie auch, dass das Formatieren von Symbolen (z. b. Währungssymbole, Gruppen Trennzeichen oder Dezimaltrennzeichen) nicht durchgeführt wird, wenn führende und nachfolgende Leerzeichen erfolgreich analysiert werden.</span><span class="sxs-lookup"><span data-stu-id="d59d4-739">Also note that while leading and trailing spaces parse successfully, formatting symbols, such as currency symbols, group separators, or decimal separators, do not.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/ToByte5.cs#15)]
 [!code-vb[System.Convert.ToByte#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte5.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-740"><paramref name="value" /> besteht nicht aus einem optionalen Vorzeichen und einer Folge von Ziffern (0 bis 9).</span><span class="sxs-lookup"><span data-stu-id="d59d4-740"><paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-741"><paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Byte.MinValue" /> oder größer als <see cref="F:System.Byte.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-741"><paramref name="value" /> represents a number that is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Byte.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As UShort) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToByte : uint16 -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-742">Die zu konvertierende 16-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-742">The 16-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-743">Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende 8-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-743">Converts the value of the specified 16-bit unsigned integer to an equivalent 8-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-744">Eine 8-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-744">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-745">Im folgenden Beispiel wird ein Array von 16-Bit-Ganzzahlen ohne Vorzeichen in <xref:System.Byte>-Werte konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-745">The following example converts an array of unsigned 16-bit integers to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#8)]
 [!code-vb[System.Convert.ToByte#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-746"><paramref name="value" /> ist größer als <see cref="F:System.Byte.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-746"><paramref name="value" /> is greater than <see cref="F:System.Byte.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As UInteger) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToByte : uint32 -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-747">Die zu konvertierende 32-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-747">The 32-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-748">Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende 8-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-748">Converts the value of the specified 32-bit unsigned integer to an equivalent 8-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-749">Eine 8-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-749">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-750">Im folgenden Beispiel wird ein Array von Ganzzahlen ohne Vorzeichen in <xref:System.Byte> Werte konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-750">The following example converts an array of unsigned integers to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#9)]
 [!code-vb[System.Convert.ToByte#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-751"><paramref name="value" /> ist größer als <see cref="F:System.Byte.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-751"><paramref name="value" /> is greater than <see cref="F:System.Byte.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As ULong) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToByte : uint64 -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-752">Die zu konvertierende 64-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-752">The 64-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-753">Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende 8-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-753">Converts the value of the specified 64-bit unsigned integer to an equivalent 8-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-754">Eine 8-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-754">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-755">Im folgenden Beispiel wird ein Array von Long-Ganzzahlen ohne Vorzeichen in <xref:System.Byte>-Werte konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-755">The following example converts an array of unsigned long integers to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#10)]
 [!code-vb[System.Convert.ToByte#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-756"><paramref name="value" /> ist größer als <see cref="F:System.Byte.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-756"><paramref name="value" /> is greater than <see cref="F:System.Byte.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Object, provider As IFormatProvider) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToByte : obj * IFormatProvider -&gt; byte" Usage="System.Convert.ToByte (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-757">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-757">An object that implements the <see cref="T:System.IConvertible" /> interface.</span></span></param>
        <param name="provider"><span data-ttu-id="d59d4-758">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-758">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="d59d4-759">Konvertiert den Wert des angegebenen Objekts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in eine 8-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-759">Converts the value of the specified object to an 8-bit unsigned integer, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="d59d4-760">Eine 8-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-760">An 8-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-761">`provider` ermöglicht es dem Benutzer, kulturspezifische Konvertierungs Informationen zum Inhalt von `value`anzugeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-761">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="d59d4-762">Die Basis Typen ignorieren `provider`; der-Parameter kann jedoch verwendet werden, wenn `value` ein benutzerdefinierter Typ ist, der die <xref:System.IConvertible>-Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-762">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-763">Im folgenden Beispiel wird eine `ByteString` -Klasse definiert, die die <xref:System.IConvertible> -Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-763">The following example defines a `ByteString` class that implements the <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d59d4-764">Die-Klasse speichert die Zeichen folgen Darstellung eines Bytewerts zusammen mit einem Vorzeichen Feld, damit Sie sowohl signierte als auch nicht signierte Byte Werte darstellen kann.</span><span class="sxs-lookup"><span data-stu-id="d59d4-764">The class stores the string representation of a byte value along with a sign field, so that it is able to represent both signed and unsigned byte values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte3.cs#12)]
 [!code-vb[System.Convert.ToByte#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte3.vb#12)]  
  
 <span data-ttu-id="d59d4-765">Im folgenden Beispiel werden mehrere `ByteString` Objekte instanziiert und die <xref:System.Convert.ToByte%28System.Object%2CSystem.IFormatProvider%29>-Methode aufgerufen, um Sie in Bytewerte zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-765">The following example instantiates several `ByteString` objects and calls the <xref:System.Convert.ToByte%28System.Object%2CSystem.IFormatProvider%29> method to convert them to byte values.</span></span> <span data-ttu-id="d59d4-766">Es veranschaulicht, dass die <xref:System.Convert.ToByte%28System.Object%2CSystem.IFormatProvider%29>-Methode einen aufzurufenden <xref:System.IConvertible.ToByte%2A?displayProperty=nameWithType>-Methode des zu konvertierenden Objekts umschließt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-766">It illustrates that the <xref:System.Convert.ToByte%28System.Object%2CSystem.IFormatProvider%29> method wraps a call to the <xref:System.IConvertible.ToByte%2A?displayProperty=nameWithType> method of the object to be converted.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte3.cs#13)]
 [!code-vb[System.Convert.ToByte#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte3.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-767"><paramref name="value" /> weist nicht das Eigenschaftenformat für einen <see cref="T:System.Byte" />-Wert auf.</span><span class="sxs-lookup"><span data-stu-id="d59d4-767"><paramref name="value" /> is not in the property format for a <see cref="T:System.Byte" /> value.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-768"><paramref name="value" /> implementiert nicht <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-768"><paramref name="value" /> does not implement <see cref="T:System.IConvertible" />.</span></span>  
  
<span data-ttu-id="d59d4-769">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-769">-or-</span></span> 
<span data-ttu-id="d59d4-770">Die Konvertierung von <paramref name="value" /> in den <see cref="T:System.Byte" />-Typ wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-770">Conversion from <paramref name="value" /> to the <see cref="T:System.Byte" /> type is not supported.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-771"><paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Byte.MinValue" /> oder größer als <see cref="F:System.Byte.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-771"><paramref name="value" /> represents a number that is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As String, provider As IFormatProvider) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToByte : string * IFormatProvider -&gt; byte" Usage="System.Convert.ToByte (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-772">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-772">A string that contains the number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="d59d4-773">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-773">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="d59d4-774">Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in eine entsprechende 8-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-774">Converts the specified string representation of a number to an equivalent 8-bit unsigned integer, using specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="d59d4-775">Eine 8-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-775">An 8-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-776">`provider` ist eine <xref:System.IFormatProvider> Instanz, die ein <xref:System.Globalization.NumberFormatInfo>-Objekt abruft.</span><span class="sxs-lookup"><span data-stu-id="d59d4-776">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="d59d4-777">Das <xref:System.Globalization.NumberFormatInfo>-Objekt stellt kulturspezifische Informationen zum Format von `value`bereit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-777">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="d59d4-778">Wenn `provider` `null`ist, wird das <xref:System.Globalization.NumberFormatInfo>-Objekt für die aktuelle Kultur verwendet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-778">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
 <span data-ttu-id="d59d4-779">Wenn eine Ausnahme nicht behandelt werden soll, wenn bei der Konvertierung ein Fehler auftritt, können Sie stattdessen die <xref:System.Byte.TryParse%2A?displayProperty=nameWithType>-Methode abrufen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-779">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Byte.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="d59d4-780">Sie gibt einen <xref:System.Boolean> Wert zurück, der angibt, ob die Konvertierung erfolgreich war oder fehlgeschlagen ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-780">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-781">Im folgenden Beispiel wird ein benutzerdefiniertes <xref:System.Globalization.NumberFormatInfo> Objekt erstellt, das das positive Zeichen als "POS" und das negative Vorzeichen als "NETg" definiert, das in Aufrufen der <xref:System.Convert.ToByte%28System.String%2CSystem.IFormatProvider%29>-Methode verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-781">The following example creates a custom <xref:System.Globalization.NumberFormatInfo> object that defines the positive sign as "pos" and the negative sign as "neg", which it uses in calls to the <xref:System.Convert.ToByte%28System.String%2CSystem.IFormatProvider%29> method.</span></span> <span data-ttu-id="d59d4-782">Anschließend wird die <xref:System.Convert.ToByte%28System.String%2CSystem.IFormatProvider%29>-Methode wiederholt aufgerufen, um jedes Element in einem Zeichen folgen Array in einen <xref:System.Byte>-Wert zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-782">It then calls the <xref:System.Convert.ToByte%28System.String%2CSystem.IFormatProvider%29> method repeatedly to convert each element in a string array to a <xref:System.Byte> value.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte4.cs#14)]
 [!code-vb[System.Convert.ToByte#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte4.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-783"><paramref name="value" /> besteht nicht aus einem optionalen Vorzeichen und einer Folge von Ziffern (0 bis 9).</span><span class="sxs-lookup"><span data-stu-id="d59d4-783"><paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-784"><paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Byte.MinValue" /> oder größer als <see cref="F:System.Byte.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-784"><paramref name="value" /> represents a number that is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Byte.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (string value, int fromBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(string value, int32 fromBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As String, fromBase As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::String ^ value, int fromBase);" />
      <MemberSignature Language="F#" Value="static member ToByte : string * int -&gt; byte" Usage="System.Convert.ToByte (value, fromBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-785">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-785">A string that contains the number to convert.</span></span></param>
        <param name="fromBase"><span data-ttu-id="d59d4-786">Die Basis der Zahl in <paramref name="value" />, die 2, 8, 10 oder 16 sein muss.</span><span class="sxs-lookup"><span data-stu-id="d59d4-786">The base of the number in <paramref name="value" />, which must be 2, 8, 10, or 16.</span></span></param>
        <summary><span data-ttu-id="d59d4-787">Konvertiert die Zeichenfolgendarstellung einer Zahl in einer angegebenen Basis in eine entsprechende 8-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-787">Converts the string representation of a number in a specified base to an equivalent 8-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-788">Eine 8-Bit-Ganzzahl ohne Vorzeichen, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-788">An 8-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-789">Wenn `fromBase` 16 ist, können Sie die durch den `value`-Parameter angegebene Zahl mit "0x" oder "0x" als Präfix versehen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-789">If `fromBase` is 16, you can prefix the number specified by the `value` parameter with "0x" or "0X".</span></span>  
  
 <span data-ttu-id="d59d4-790">Da der <xref:System.Byte>-Datentyp nur unsignierte Werte unterstützt, geht die <xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29>-Methode davon aus, dass `value` mithilfe der unsignierten binären Darstellung ausgedrückt wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-790">Because the <xref:System.Byte> data type supports unsigned values only, the <xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29> method assumes that `value` is expressed using unsigned binary representation.</span></span> <span data-ttu-id="d59d4-791">Mit anderen Worten, alle acht Bits werden zur Darstellung des numerischen Werts verwendet, und ein Vorzeichen-Bit ist nicht vorhanden.</span><span class="sxs-lookup"><span data-stu-id="d59d4-791">In other words, all eight bits are used to represent the numeric value, and a sign bit is absent.</span></span> <span data-ttu-id="d59d4-792">Folglich ist es möglich, Code zu schreiben, in dem ein Bytewert mit Vorzeichen, der außerhalb des Bereichs des <xref:System.Byte> Datentyps liegt, in einen <xref:System.Byte> Wert konvertiert wird, ohne dass die Methode eine Ausnahme auslöst.</span><span class="sxs-lookup"><span data-stu-id="d59d4-792">As a result, it is possible to write code in which a signed byte value that is out of the range of the <xref:System.Byte> data type is converted to a <xref:System.Byte> value without the method throwing an exception.</span></span> <span data-ttu-id="d59d4-793">Im folgenden Beispiel wird <xref:System.SByte.MinValue> in die hexadezimale Zeichen folgen Darstellung konvertiert und dann die <xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29>-Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-793">The following example converts <xref:System.SByte.MinValue> to its hexadecimal string representation, and then calls the <xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="d59d4-794">Anstatt eine Ausnahme auszulösen, zeigt die Methode die Meldung "0x80 konvertiert in 128" an.</span><span class="sxs-lookup"><span data-stu-id="d59d4-794">Instead of throwing an exception, the method displays the message, "0x80 converts to 128."</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#3)]
 [!code-vb[System.Convert.BaseConversion#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#3)]  
  
 <span data-ttu-id="d59d4-795">Beim Durchführen von binären Vorgängen oder numerischen Konvertierungen liegt es immer in der Verantwortung des Entwicklers, zu überprüfen, ob eine Methode oder ein Operator die entsprechende numerische Darstellung verwendet, um einen bestimmten Wert zu interpretieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-795">When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method or operator is using the appropriate numeric representation to interpret a particular value.</span></span> <span data-ttu-id="d59d4-796">Im folgenden Beispiel wird eine Technik veranschaulicht, um sicherzustellen, dass die-Methode nicht die unsignierte binäre Darstellung verwendet, wenn eine hexadezimale Zeichen folgen Darstellung in einen <xref:System.Byte> Wert konvertiert wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-796">The following example illustrates one technique for ensuring that the method does not inappropriately use unsigned binary representation when it converts a hexadecimal string representation to a <xref:System.Byte> value.</span></span> <span data-ttu-id="d59d4-797">Das Beispiel bestimmt, ob ein-Wert eine ganze Zahl mit oder ohne Vorzeichen darstellt, während er diesen Wert in seine Zeichen folgen Darstellung umwandelt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-797">The example determines whether a value represents a signed or an unsigned integer while it is converting that value to its string representation.</span></span> <span data-ttu-id="d59d4-798">Wenn im Beispiel der Wert wieder in einen <xref:System.Byte> Wert konvertiert wird, wird überprüft, ob der ursprüngliche Wert eine ganze Zahl mit Vorzeichen war.</span><span class="sxs-lookup"><span data-stu-id="d59d4-798">When the example converts the value back to a <xref:System.Byte> value, it checks whether the original value was a signed integer.</span></span> <span data-ttu-id="d59d4-799">Wenn dies der Fall ist, und wenn das höchst wertige Bit festgelegt ist (was darauf hinweist, dass der Wert negativ ist, und dass es das zwei Komplement anstelle der nicht signierten binären Darstellung verwendet), löst die Methode eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="d59d4-799">If so, and if its high-order bit is set (which indicates that the value is negative and that it uses two's complement instead of unsigned binary representation), the method throws an exception.</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#4)]
 [!code-vb[System.Convert.BaseConversion#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#4)]  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-800">Im folgenden Beispiel wird abwechselnd versucht, ein Array von Zeichen folgen als Darstellung von binären, oktalen, Dezimal-und hexadezimal Werten zu interpretieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-800">The following example alternately attempts to interpret an array of strings as the representation of binary, octal, decimal, and hexadecimal values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte2.cs#11)]
 [!code-vb[System.Convert.ToByte#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte2.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d59d4-801"><paramref name="fromBase" /> ist nicht 2, 8, 10 oder 16.</span><span class="sxs-lookup"><span data-stu-id="d59d4-801"><paramref name="fromBase" /> is not 2, 8, 10, or 16.</span></span>  
  
<span data-ttu-id="d59d4-802">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-802">-or-</span></span> 
 <span data-ttu-id="d59d4-803"><paramref name="value" />, der eine nicht zur Basis 10 gehörende Zahl ohne Vorzeichen darstellt, weist ein negatives Vorzeichen als Präfix auf.</span><span class="sxs-lookup"><span data-stu-id="d59d4-803"><paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d59d4-804"><paramref name="value" /> ist <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-804"><paramref name="value" /> is <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-805"><paramref name="value" /> enthält ein Zeichen, das in der von <paramref name="fromBase" /> angegebenen Basis keine gültige Ziffer ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-805"><paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span></span> <span data-ttu-id="d59d4-806">Die Ausnahmemeldung gibt an, dass keine zu konvertierenden Ziffern vorhanden sind, wenn das erste Zeichen in <paramref name="value" /> ungültig ist. Andernfalls gibt die Meldung an, dass <paramref name="value" /> ungültige nachfolgende Zeichen enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-806">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-807"><paramref name="value" />, der eine Zahl ohne Vorzeichen angibt, die die Basis 10 hat, hat ein negatives Vorzeichen als Präfix.</span><span class="sxs-lookup"><span data-stu-id="d59d4-807"><paramref name="value" />, which represents a base 10 unsigned number, is prefixed with a negative sign.</span></span>  
  
<span data-ttu-id="d59d4-808">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-808">-or-</span></span> 
 <span data-ttu-id="d59d4-809"><paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Byte.MinValue" /> oder größer als <see cref="F:System.Byte.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-809"><paramref name="value" /> represents a number that is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToChar">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d59d4-810">Konvertiert einen angegebenen Wert in ein Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-810">Converts a specified value to a Unicode character.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Boolean) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(bool value);" />
      <MemberSignature Language="F#" Value="static member ToChar : bool -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-811">Der zu konvertierende boolesche Wert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-811">The Boolean value to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-812">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d59d4-812">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="d59d4-813">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-813">This conversion is not supported.</span></span> <span data-ttu-id="d59d4-814">Es wird kein Wert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-814">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-815">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-815">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Byte) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToChar : byte -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-816">Die zu konvertierende 8-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-816">The 8-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-817">Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl ohne Vorzeichen in das entsprechende Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-817">Converts the value of the specified 8-bit unsigned integer to its equivalent Unicode character.</span></span></summary>
        <returns><span data-ttu-id="d59d4-818">Ein Unicode-Zeichen, das <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-818">A Unicode character that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-819">Im folgenden Beispiel wird ein Array von Bytes ohne Vorzeichen in <xref:System.Char>-Werte konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-819">The following example converts an array of unsigned bytes to <xref:System.Char> values.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#1)]
 [!code-vb[System.Convert.ToChar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(char value);" />
      <MemberSignature Language="F#" Value="static member ToChar : char -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-820">Das zurückzugebende Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-820">The Unicode character to return.</span></span></param>
        <summary><span data-ttu-id="d59d4-821">Gibt das angegebene Unicode-Zeichen zurück. Es wird keine wirkliche Konvertierung durchgeführt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-821">Returns the specified Unicode character value; no actual conversion is performed.</span></span></summary>
        <returns><span data-ttu-id="d59d4-822"><paramref name="value" /> wird unverändert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-822"><paramref name="value" /> is returned unchanged.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As DateTime) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToChar : DateTime -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-823">Der Datums- und Uhrzeitwert, der konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="d59d4-823">The date and time value to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-824">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d59d4-824">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="d59d4-825">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-825">This conversion is not supported.</span></span> <span data-ttu-id="d59d4-826">Es wird kein Wert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-826">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-827">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-827">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Decimal) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToChar : decimal -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-828">Die zu konvertierende Dezimalzahl.</span><span class="sxs-lookup"><span data-stu-id="d59d4-828">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-829">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d59d4-829">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="d59d4-830">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-830">This conversion is not supported.</span></span> <span data-ttu-id="d59d4-831">Es wird kein Wert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-831">No value is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-832">Im folgenden Beispiel wird versucht, eine <xref:System.Decimal> in <xref:System.Char>zu konvertieren, und bei einem Fehler wird <xref:System.InvalidCastException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d59d4-832">The following example attempts to convert a <xref:System.Decimal> to <xref:System.Char>, and throws <xref:System.InvalidCastException> on failure.</span></span>  
  
 [!code-cpp[System.Convert Snippets#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#17)]
 [!code-csharp[System.Convert Snippets#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#17)]
 [!code-vb[System.Convert Snippets#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-833">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-833">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Double) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(double value);" />
      <MemberSignature Language="F#" Value="static member ToChar : double -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-834">Die zu konvertierende Gleitkommazahl mit doppelter Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-834">The double-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-835">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d59d4-835">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="d59d4-836">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-836">This conversion is not supported.</span></span> <span data-ttu-id="d59d4-837">Es wird kein Wert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-837">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-838">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-838">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Short) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(short value);" />
      <MemberSignature Language="F#" Value="static member ToChar : int16 -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-839">Die zu konvertierende 16-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-839">The 16-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-840">Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl mit Vorzeichen in das entsprechende Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-840">Converts the value of the specified 16-bit signed integer to its equivalent Unicode character.</span></span></summary>
        <returns><span data-ttu-id="d59d4-841">Ein Unicode-Zeichen, das <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-841">A Unicode character that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-842">Im folgenden Beispiel wird ein Array von 16-Bit-Ganzzahlen mit Vorzeichen in <xref:System.Char>-Werte konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-842">The following example converts an array of signed 16-bit integers to <xref:System.Char> values.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#2)]
 [!code-vb[System.Convert.ToChar#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-843"><paramref name="value" /> ist kleiner als <see cref="F:System.Char.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-843"><paramref name="value" /> is less than <see cref="F:System.Char.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(int value);" />
      <MemberSignature Language="F#" Value="static member ToChar : int -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-844">Die zu konvertierende 32-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-844">The 32-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-845">Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl mit Vorzeichen in das entsprechende Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-845">Converts the value of the specified 32-bit signed integer to its equivalent Unicode character.</span></span></summary>
        <returns><span data-ttu-id="d59d4-846">Ein Unicode-Zeichen, das <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-846">A Unicode character that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-847">Im folgenden Beispiel wird ein Array von Ganzzahlen mit Vorzeichen in <xref:System.Char> Werte konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-847">The following example converts an array of signed integers to <xref:System.Char> values.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#3)]
 [!code-vb[System.Convert.ToChar#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-848"><paramref name="value" /> ist kleiner als <see cref="F:System.Char.MinValue" /> oder größer als <see cref="F:System.Char.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-848"><paramref name="value" /> is less than <see cref="F:System.Char.MinValue" /> or greater than <see cref="F:System.Char.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Long) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(long value);" />
      <MemberSignature Language="F#" Value="static member ToChar : int64 -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-849">Die zu konvertierende 64-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-849">The 64-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-850">Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl mit Vorzeichen in das entsprechende Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-850">Converts the value of the specified 64-bit signed integer to its equivalent Unicode character.</span></span></summary>
        <returns><span data-ttu-id="d59d4-851">Ein Unicode-Zeichen, das <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-851">A Unicode character that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-852">Im folgenden Beispiel wird versucht, eine lange ganze Zahl in eine <xref:System.Char>zu konvertieren, und bei einem Fehler wird eine <xref:System.OverflowException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d59d4-852">The following example attempts to convert a long integer to a <xref:System.Char>, and throws a <xref:System.OverflowException> on failure.</span></span>  
  
 [!code-cpp[System.Convert Snippets#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#8)]
 [!code-csharp[System.Convert Snippets#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#8)]
 [!code-vb[System.Convert Snippets#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-853"><paramref name="value" /> ist kleiner als <see cref="F:System.Char.MinValue" /> oder größer als <see cref="F:System.Char.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-853"><paramref name="value" /> is less than <see cref="F:System.Char.MinValue" /> or greater than <see cref="F:System.Char.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Object) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToChar : obj -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-854">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-854">An object that implements the <see cref="T:System.IConvertible" /> interface.</span></span></param>
        <summary><span data-ttu-id="d59d4-855">Konvertiert den Wert des angegebenen Objekts in ein Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-855">Converts the value of the specified object to a Unicode character.</span></span></summary>
        <returns><span data-ttu-id="d59d4-856">Ein Unicode-Zeichen, das dem Wert entspricht, oder <see cref="F:System.Char.MinValue" />, wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-856">A Unicode character that is equivalent to value, or <see cref="F:System.Char.MinValue" /> if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-857">Wenn `value` nicht `null`wird, umschließt diese Methode einen aufzurufenden <xref:System.IConvertible.ToChar%2A?displayProperty=nameWithType> Implementierung des zugrunde liegenden Typs `value`.</span><span class="sxs-lookup"><span data-stu-id="d59d4-857">If `value` is not `null`, this method wraps a call to the <xref:System.IConvertible.ToChar%2A?displayProperty=nameWithType> implementation of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-858">Im folgenden Beispiel wird versucht, jedes Element in einem Objekt Array in einen <xref:System.Char> Wert zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-858">The following example attempts to convert each element in an object array to a <xref:System.Char> value.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#9)]
 [!code-vb[System.Convert.ToChar#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d59d4-859"><paramref name="value" /> ist eine NULL-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d59d4-859"><paramref name="value" /> is a null string.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-860">Die <paramref name="value" />-Schnittstelle wird von <see cref="T:System.IConvertible" /> nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-860"><paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span></span>  
  
<span data-ttu-id="d59d4-861">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-861">-or-</span></span> 
<span data-ttu-id="d59d4-862">Die Konvertierung von <paramref name="value" /> in <see cref="T:System.Char" /> wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-862">The conversion of <paramref name="value" /> to a <see cref="T:System.Char" /> is not supported.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-863"><paramref name="value" /> ist kleiner als <see cref="F:System.Char.MinValue" /> oder größer als <see cref="F:System.Char.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-863"><paramref name="value" /> is less than <see cref="F:System.Char.MinValue" /> or greater than <see cref="F:System.Char.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As SByte) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToChar : sbyte -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-864">Die zu konvertierende 8-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-864">The 8-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-865">Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl mit Vorzeichen in das entsprechende Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-865">Converts the value of the specified 8-bit signed integer to its equivalent Unicode character.</span></span></summary>
        <returns><span data-ttu-id="d59d4-866">Ein Unicode-Zeichen, das <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-866">A Unicode character that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-867">Im folgenden Beispiel wird ein Array mit signierten Bytes in <xref:System.Char> Werte konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-867">The following example converts an array of signed bytes to <xref:System.Char> values.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#4)]
 [!code-vb[System.Convert.ToChar#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-868"><paramref name="value" /> ist kleiner als <see cref="F:System.Char.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-868"><paramref name="value" /> is less than <see cref="F:System.Char.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Single) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(float value);" />
      <MemberSignature Language="F#" Value="static member ToChar : single -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-869">Die zu konvertierende Gleitkommazahl mit einfacher Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-869">The single-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-870">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d59d4-870">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="d59d4-871">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-871">This conversion is not supported.</span></span> <span data-ttu-id="d59d4-872">Es wird kein Wert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-872">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-873">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-873">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As String) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToChar : string -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-874">Eine Zeichenfolge mit der Länge 1.</span><span class="sxs-lookup"><span data-stu-id="d59d4-874">A string of length 1.</span></span></param>
        <summary><span data-ttu-id="d59d4-875">Konvertiert das erste Zeichen einer angegebenen Zeichenfolge in ein Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-875">Converts the first character of a specified string to a Unicode character.</span></span></summary>
        <returns><span data-ttu-id="d59d4-876">Ein Unicode-Zeichen, das dem einzigen Zeichen in <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-876">A Unicode character that is equivalent to the first and only character in <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-877">`value` muss eine Zeichenfolge sein, die ein einzelnes Zeichen enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-877">`value` must be a string that contains a single character.</span></span>  
  
 <span data-ttu-id="d59d4-878">Wenn eine Ausnahme nicht behandelt werden soll, wenn bei der Konvertierung ein Fehler auftritt, können Sie stattdessen die <xref:System.Char.TryParse%2A?displayProperty=nameWithType>-Methode abrufen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-878">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Char.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="d59d4-879">Sie gibt einen <xref:System.Boolean> Wert zurück, der angibt, ob die Konvertierung erfolgreich war oder fehlgeschlagen ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-879">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-880">Im folgenden Beispiel wird jedes Element in einem Zeichen folgen Array in einen <xref:System.Char> Wert konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-880">The following example converts each element in a string array to a <xref:System.Char> value.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#5)]
 [!code-vb[System.Convert.ToChar#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d59d4-881"><paramref name="value" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-881"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-882">Die Länge von <paramref name="value" /> ist nicht 1.</span><span class="sxs-lookup"><span data-stu-id="d59d4-882">The length of <paramref name="value" /> is not 1.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As UShort) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToChar : uint16 -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-883">Die zu konvertierende 16-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-883">The 16-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-884">Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl ohne Vorzeichen in das entsprechende Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-884">Converts the value of the specified 16-bit unsigned integer to its equivalent Unicode character.</span></span></summary>
        <returns><span data-ttu-id="d59d4-885">Ein Unicode-Zeichen, das <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-885">A Unicode character that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-886">Im folgenden Beispiel wird jedes Element in einem Array von 16-Bit-Ganzzahlen ohne Vorzeichen in einen <xref:System.Char> Wert konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-886">The following example converts each element in an array of unsigned 16-bit integers to a <xref:System.Char> value.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#6)]
 [!code-vb[System.Convert.ToChar#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As UInteger) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToChar : uint32 -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-887">Die zu konvertierende 32-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-887">The 32-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-888">Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl ohne Vorzeichen in das entsprechende Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-888">Converts the value of the specified 32-bit unsigned integer to its equivalent Unicode character.</span></span></summary>
        <returns><span data-ttu-id="d59d4-889">Ein Unicode-Zeichen, das <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-889">A Unicode character that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-890">Im folgenden Beispiel wird jedes Element in einem Array von Ganzzahlen ohne Vorzeichen in einen <xref:System.Char> Wert konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-890">The following example converts each element in an array of unsigned integers to a <xref:System.Char> value.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#7)]
 [!code-vb[System.Convert.ToChar#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-891"><paramref name="value" /> ist größer als <see cref="F:System.Char.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-891"><paramref name="value" /> is greater than <see cref="F:System.Char.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As ULong) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToChar : uint64 -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-892">Die zu konvertierende 64-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-892">The 64-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-893">Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl ohne Vorzeichen in das entsprechende Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-893">Converts the value of the specified 64-bit unsigned integer to its equivalent Unicode character.</span></span></summary>
        <returns><span data-ttu-id="d59d4-894">Ein Unicode-Zeichen, das <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-894">A Unicode character that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-895">Im folgenden Beispiel wird jedes Element in einem Array von Long-Ganzzahlen ohne Vorzeichen in einen <xref:System.Char> Wert konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-895">The following example converts each element in an array of unsigned long integers to a <xref:System.Char> value.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#8)]
 [!code-vb[System.Convert.ToChar#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-896"><paramref name="value" /> ist größer als <see cref="F:System.Char.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-896"><paramref name="value" /> is greater than <see cref="F:System.Char.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Object, provider As IFormatProvider) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToChar : obj * IFormatProvider -&gt; char" Usage="System.Convert.ToChar (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-897">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-897">An object that implements the <see cref="T:System.IConvertible" /> interface.</span></span></param>
        <param name="provider"><span data-ttu-id="d59d4-898">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-898">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="d59d4-899">Konvertiert den Wert des angegebenen Objekts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in das entsprechende Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-899">Converts the value of the specified object to its equivalent Unicode character, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="d59d4-900">Ein Unicode-Zeichen, das dem <paramref name="value" /> entspricht, oder <see cref="F:System.Char.MinValue" /> wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-900">A Unicode character that is equivalent to <paramref name="value" />, or <see cref="F:System.Char.MinValue" /> if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-901">Der Rückgabewert ist das Ergebnis des Aufrufs der <xref:System.IConvertible.ToChar%2A?displayProperty=nameWithType>-Methode des zugrunde liegenden Typs `value`.</span><span class="sxs-lookup"><span data-stu-id="d59d4-901">The return value is the result of invoking the <xref:System.IConvertible.ToChar%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="d59d4-902">`provider` ermöglicht es dem Benutzer, kulturspezifische Konvertierungs Informationen zum Inhalt von `value`anzugeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-902">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="d59d4-903">Die Basis Typen ignorieren `provider`; der-Parameter kann jedoch verwendet werden, wenn `value` ein benutzerdefinierter Typ ist, der die <xref:System.IConvertible>-Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-903">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-904">Im folgenden Beispiel wird eine Klasse definiert, die <xref:System.IConvertible> und eine Klasse implementiert, die <xref:System.IFormatProvider>implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-904">The following example defines a class that implements <xref:System.IConvertible> and a class that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="d59d4-905">Objekte der Klasse, die implementiert <xref:System.IConvertible> ein Array von <xref:System.Double> Werten enthalten.</span><span class="sxs-lookup"><span data-stu-id="d59d4-905">Objects of the class that implements <xref:System.IConvertible> hold an array of <xref:System.Double> values.</span></span> <span data-ttu-id="d59d4-906">Ein Objekt jeder Klasse wird an die `ToChar`-Methode übermittelt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-906">An object of each class is passed to the `ToChar` method.</span></span> <span data-ttu-id="d59d4-907">Diese Methode gibt ein Zeichen zurück, dessen Unicode-Wert der Durchschnitt des Arrays von <xref:System.Double> Werten ist, wobei das Objekt verwendet wird, das <xref:System.IFormatProvider> implementiert, um zu bestimmen, wie der Durchschnitt berechnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="d59d4-907">This method returns a character whose Unicode value is the average of the array of <xref:System.Double> values, using the object that implements <xref:System.IFormatProvider> to determine how to calculate the average.</span></span>  
  
 [!code-cpp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CPP/objectifp.cpp#1)]
 [!code-csharp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CS/objectifp.cs#1)]
 [!code-vb[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/VB/objectifp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d59d4-908"><paramref name="value" /> ist eine NULL-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d59d4-908"><paramref name="value" /> is a null string.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-909">Die <paramref name="value" />-Schnittstelle wird von <see cref="T:System.IConvertible" /> nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-909"><paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span></span>  
  
<span data-ttu-id="d59d4-910">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-910">-or-</span></span> 
<span data-ttu-id="d59d4-911">Die Konvertierung von <paramref name="value" /> in <see cref="T:System.Char" /> wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-911">The conversion of <paramref name="value" /> to a <see cref="T:System.Char" /> is not supported.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-912"><paramref name="value" /> ist kleiner als <see cref="F:System.Char.MinValue" /> oder größer als <see cref="F:System.Char.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-912"><paramref name="value" /> is less than <see cref="F:System.Char.MinValue" /> or greater than <see cref="F:System.Char.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As String, provider As IFormatProvider) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToChar : string * IFormatProvider -&gt; char" Usage="System.Convert.ToChar (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-913">Eine Zeichenfolge mit der Länge 1, oder <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-913">A string of length 1 or <see langword="null" />.</span></span></param>
        <param name="provider"><span data-ttu-id="d59d4-914">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-914">An object that supplies culture-specific formatting information.</span></span> <span data-ttu-id="d59d4-915">Dieser Parameter wird ignoriert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-915">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="d59d4-916">Konvertiert das erste Zeichen einer angegebenen Zeichenfolge unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in ein Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-916">Converts the first character of a specified string to a Unicode character, using specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="d59d4-917">Ein Unicode-Zeichen, das dem einzigen Zeichen in <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-917">A Unicode character that is equivalent to the first and only character in <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-918">`value` muss eine Zeichenfolge sein, die ein einzelnes Zeichen enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-918">`value` must be a string that contains a single character.</span></span>  
  
 <span data-ttu-id="d59d4-919">Wenn eine Ausnahme nicht behandelt werden soll, wenn bei der Konvertierung ein Fehler auftritt, können Sie stattdessen die <xref:System.Char.TryParse%2A?displayProperty=nameWithType>-Methode abrufen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-919">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Char.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="d59d4-920">Sie gibt einen <xref:System.Boolean> Wert zurück, der angibt, ob die Konvertierung erfolgreich war oder fehlgeschlagen ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-920">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-921">Im folgenden Beispiel wird eine Zeichen folgen Darstellung eines <xref:System.Char> Werts mit der `ToChar`-Methode konvertiert, wobei ein <xref:System.IFormatProvider>-Objekt verwendet wird, das den Typ des Format Anbieters anzeigt, für den er aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-921">The following example converts a string representation of a <xref:System.Char> value with the `ToChar` method, using an <xref:System.IFormatProvider> object that displays the type of the format provider for which it is called.</span></span> <span data-ttu-id="d59d4-922">Das Beispiel zeigt, dass auf den Format Anbieter nicht verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-922">The example shows that the format provider is not referenced.</span></span>  
  
 [!code-cpp[System.Convert.ToNonNum_String#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToNonNum_String/CPP/stringnonnum.cpp#2)]
 [!code-csharp[System.Convert.ToNonNum_String#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToNonNum_String/CS/stringnonnum.cs#2)]
 [!code-vb[System.Convert.ToNonNum_String#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToNonNum_String/VB/stringnonnum.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d59d4-923"><paramref name="value" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-923"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-924">Die Länge von <paramref name="value" /> ist nicht 1.</span><span class="sxs-lookup"><span data-stu-id="d59d4-924">The length of <paramref name="value" /> is not 1.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToDateTime">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d59d4-925">Konvertiert einen angegebenen Wert in einen <see cref="T:System.DateTime" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-925">Converts a specified value to a <see cref="T:System.DateTime" /> value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Boolean) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(bool value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : bool -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-926">Der zu konvertierende boolesche Wert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-926">The Boolean value to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-927">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d59d4-927">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="d59d4-928">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-928">This conversion is not supported.</span></span> <span data-ttu-id="d59d4-929">Es wird kein Wert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-929">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-930">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-930">This conversion is not supported.</span></span></exception>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Byte) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : byte -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-931">Die zu konvertierende 8-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-931">The 8-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-932">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d59d4-932">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="d59d4-933">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-933">This conversion is not supported.</span></span> <span data-ttu-id="d59d4-934">Es wird kein Wert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-934">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-935">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-935">This conversion is not supported.</span></span></exception>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Char) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(char value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : char -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-936">Das zu konvertierende Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-936">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-937">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d59d4-937">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="d59d4-938">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-938">This conversion is not supported.</span></span> <span data-ttu-id="d59d4-939">Es wird kein Wert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-939">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-940">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-940">This conversion is not supported.</span></span></exception>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As DateTime) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : DateTime -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-941">Ein Datums- und Uhrzeitwert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-941">A date and time value.</span></span></param>
        <summary><span data-ttu-id="d59d4-942">Gibt das angegebene <see cref="T:System.DateTime" /> Objekt zurück. Es wird keine wirkliche Konvertierung durchgeführt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-942">Returns the specified <see cref="T:System.DateTime" /> object; no actual conversion is performed.</span></span></summary>
        <returns><span data-ttu-id="d59d4-943"><paramref name="value" /> wird unverändert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-943"><paramref name="value" /> is returned unchanged.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Decimal) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : decimal -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-944">Die zu konvertierende Zahl.</span><span class="sxs-lookup"><span data-stu-id="d59d4-944">The number to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-945">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d59d4-945">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="d59d4-946">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-946">This conversion is not supported.</span></span> <span data-ttu-id="d59d4-947">Es wird kein Wert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-947">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-948">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-948">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Double) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(double value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : double -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-949">Der zu konvertierende Gleitkommawert mit doppelter Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-949">The double-precision floating-point value to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-950">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d59d4-950">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="d59d4-951">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-951">This conversion is not supported.</span></span> <span data-ttu-id="d59d4-952">Es wird kein Wert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-952">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-953">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-953">This conversion is not supported.</span></span></exception>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Short) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(short value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : int16 -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-954">Die zu konvertierende 16-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-954">The 16-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-955">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d59d4-955">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="d59d4-956">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-956">This conversion is not supported.</span></span> <span data-ttu-id="d59d4-957">Es wird kein Wert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-957">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-958">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-958">This conversion is not supported.</span></span></exception>
        <altmember cref="T:System.Int16" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(int value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : int -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-959">Die zu konvertierende 32-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-959">The 32-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-960">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d59d4-960">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="d59d4-961">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-961">This conversion is not supported.</span></span> <span data-ttu-id="d59d4-962">Es wird kein Wert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-962">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-963">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-963">This conversion is not supported.</span></span></exception>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Long) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(long value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : int64 -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-964">Die zu konvertierende 64-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-964">The 64-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-965">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d59d4-965">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="d59d4-966">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-966">This conversion is not supported.</span></span> <span data-ttu-id="d59d4-967">Es wird kein Wert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-967">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-968">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-968">This conversion is not supported.</span></span></exception>
        <altmember cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Object) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : obj -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-969">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert, oder <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-969">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="d59d4-970">Konvertiert den Wert des angegebenen Objekts in ein <see cref="T:System.DateTime" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-970">Converts the value of the specified object to a <see cref="T:System.DateTime" /> object.</span></span></summary>
        <returns><span data-ttu-id="d59d4-971">Die Datums- und Uhrzeitentsprechung des Werts von <paramref name="value" /> oder eine Datums- und Uhrzeitentsprechung von <see cref="F:System.DateTime.MinValue" />, wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-971">The date and time equivalent of the value of <paramref name="value" />, or a date and time equivalent of <see cref="F:System.DateTime.MinValue" /> if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-972">Damit die Konvertierung erfolgreich durchgeführt werden kann, muss der Lauf Zeittyp des `value`-Parameters entweder <xref:System.DateTime> oder ein <xref:System.String>sein, oder `value` muss `null`sein.</span><span class="sxs-lookup"><span data-stu-id="d59d4-972">For the conversion to succeed, the runtime type of the `value` parameter must be either a <xref:System.DateTime> or a <xref:System.String>, or `value` must be `null`.</span></span> <span data-ttu-id="d59d4-973">Andernfalls löst die Methode eine <xref:System.InvalidCastException>aus.</span><span class="sxs-lookup"><span data-stu-id="d59d4-973">Otherwise, the method throws an <xref:System.InvalidCastException>.</span></span> <span data-ttu-id="d59d4-974">Wenn `value` eine Zeichenfolge ist, muss Sie außerdem eine gültige Darstellung eines Datums-und Uhrzeitwerts in der aktuellen Kultur enthalten, oder es wird eine <xref:System.FormatException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d59d4-974">In addition, if `value` is a string, it must contain a valid representation of a date and time value in the current culture or a <xref:System.FormatException> is thrown.</span></span>  
  
 <span data-ttu-id="d59d4-975">Der Rückgabewert ist das Ergebnis des Aufrufs der <xref:System.IConvertible.ToDateTime%2A?displayProperty=nameWithType>-Methode des zugrunde liegenden Typs `value`.</span><span class="sxs-lookup"><span data-stu-id="d59d4-975">The return value is the result of invoking the <xref:System.IConvertible.ToDateTime%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-976">Im folgenden Beispiel wird die <xref:System.Convert.ToDateTime%28System.Object%29>-Methode mit einer Vielzahl von <xref:System.Object> Variablen aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-976">The following example calls the <xref:System.Convert.ToDateTime%28System.Object%29> method with a variety of <xref:System.Object> variables.</span></span>  
  
 [!code-csharp[System.Convert.ToDateTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToDateTime/cs/ToDateTime1.cs#1)]
 [!code-vb[System.Convert.ToDateTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToDateTime/vb/ToDateTime1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-977"><paramref name="value" /> ist kein gültiger Datums- und Uhrzeitwert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-977"><paramref name="value" /> is not a valid date and time value.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-978">Die <paramref name="value" />-Schnittstelle wird von <see cref="T:System.IConvertible" /> nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-978"><paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span></span>  
  
<span data-ttu-id="d59d4-979">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-979">-or-</span></span> 
<span data-ttu-id="d59d4-980">Die Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-980">The conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As SByte) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : sbyte -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-981">Die zu konvertierende 8-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-981">The 8-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-982">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d59d4-982">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="d59d4-983">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-983">This conversion is not supported.</span></span> <span data-ttu-id="d59d4-984">Es wird kein Wert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-984">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-985">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-985">This conversion is not supported.</span></span></exception>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Single) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(float value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : single -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-986">Der zu konvertierende Gleitkommawert mit einfacher Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-986">The single-precision floating-point value to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-987">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d59d4-987">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="d59d4-988">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-988">This conversion is not supported.</span></span> <span data-ttu-id="d59d4-989">Es wird kein Wert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-989">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-990">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-990">This conversion is not supported.</span></span></exception>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : string -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-991">Die Zeichenfolgendarstellung eines Datums- und Uhrzeitwerts.</span><span class="sxs-lookup"><span data-stu-id="d59d4-991">The string representation of a date and time.</span></span></param>
        <summary><span data-ttu-id="d59d4-992">Konvertiert die angegebene Zeichenfolgendarstellung eines Datums und einer Uhrzeit in einen entsprechenden Datums- und Uhrzeitwert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-992">Converts the specified string representation of a date and time to an equivalent date and time value.</span></span></summary>
        <returns><span data-ttu-id="d59d4-993">Die Datums- und Uhrzeitentsprechung des Werts von <paramref name="value" /> oder die Datums- und Uhrzeitentsprechung von <see cref="F:System.DateTime.MinValue" />, wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-993">The date and time equivalent of the value of <paramref name="value" />, or the date and time equivalent of <see cref="F:System.DateTime.MinValue" /> if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-994">Wenn `value` nicht `null`ist, ist der Rückgabewert das Ergebnis des Aufrufs der <xref:System.DateTime.Parse%2A?displayProperty=nameWithType>-Methode auf `value` mithilfe der Formatierungsinformationen in einem <xref:System.Globalization.DateTimeFormatInfo> Objekt, das für die aktuelle Kultur initialisiert wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-994">If `value` is not `null`, the return value is the result of invoking the <xref:System.DateTime.Parse%2A?displayProperty=nameWithType> method on `value` using the formatting information in a <xref:System.Globalization.DateTimeFormatInfo> object that is initialized for the current culture.</span></span> <span data-ttu-id="d59d4-995">Das `value`-Argument muss die Darstellung eines Datums und einer Uhrzeit in einem der Formate enthalten, die im <xref:System.Globalization.DateTimeFormatInfo> Thema beschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="d59d4-995">The `value` argument must contain the representation of a date and time in one of the formats described in the <xref:System.Globalization.DateTimeFormatInfo> topic.</span></span> <span data-ttu-id="d59d4-996">Wenn `value` gleich `null` ist, gibt die Methode <xref:System.DateTime.MinValue?displayProperty=nameWithType> zurück.</span><span class="sxs-lookup"><span data-stu-id="d59d4-996">If `value` is `null`, the method returns <xref:System.DateTime.MinValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d59d4-997">Diese Methode versucht, `value` vollständig zu analysieren und das Auslösen einer <xref:System.FormatException>zu vermeiden.</span><span class="sxs-lookup"><span data-stu-id="d59d4-997">This method tries to parse `value` completely and avoid throwing a <xref:System.FormatException>.</span></span> <span data-ttu-id="d59d4-998">Es werden fehlende Monats-, Tages-und Jahres Informationen mit dem aktuellen Datum abgeschlossen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-998">It completes missing month, day, and year information with the current date.</span></span> <span data-ttu-id="d59d4-999">Wenn `value` nur ein Datum und keine Uhrzeit enthält, nimmt diese Methode eine Uhrzeit von Mitternacht an.</span><span class="sxs-lookup"><span data-stu-id="d59d4-999">If `value` contains only a date and no time, this method assumes a time of midnight.</span></span> <span data-ttu-id="d59d4-1000">Alle führenden, inneren oder nachfolgenden Leerzeichen in `value` werden ignoriert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1000">Any leading, inner, or trailing white-space characters in `value` are ignored.</span></span>  
  
 <span data-ttu-id="d59d4-1001">Wenn eine Ausnahme nicht behandelt werden soll, wenn bei der Konvertierung ein Fehler auftritt, können Sie stattdessen die <xref:System.DateTime.TryParse%2A?displayProperty=nameWithType>-Methode abrufen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1001">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.DateTime.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="d59d4-1002">Sie gibt einen <xref:System.Boolean> Wert zurück, der angibt, ob die Konvertierung erfolgreich war oder fehlgeschlagen ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1002">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-1003">Im folgenden Beispiel wird die <xref:System.Convert.ToDateTime%2A>-Methode verwendet, um verschiedene Zeichen folgen Darstellungen von Datums-und Uhrzeitwerten in <xref:System.DateTime> Werte zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1003">The following example uses the <xref:System.Convert.ToDateTime%2A> method to convert various string representations of dates and times to <xref:System.DateTime> values.</span></span>  
  
 [!code-csharp[System.Convert.ToDateTime#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToDateTime/cs/ToDateTime2.cs#2)]
 [!code-vb[System.Convert.ToDateTime#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToDateTime/vb/ToDateTime2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-1004"><paramref name="value" /> ist keine ordnungsgemäß formatierte Datums- und Zeitzeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1004"><paramref name="value" /> is not a properly formatted date and time string.</span></span></exception>
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <related type="Article" href="~/docs/standard/base-types/parsing-datetime.md"><span data-ttu-id="d59d4-1005">Analysieren von Zeichenfolgen für Datum und Uhrzeit in .NET Framework</span><span class="sxs-lookup"><span data-stu-id="d59d4-1005">Parsing Date and Time Strings in the .NET Framework</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As UShort) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : uint16 -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1006">Die zu konvertierende 16-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1006">The 16-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1007">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1007">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1008">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1008">This conversion is not supported.</span></span> <span data-ttu-id="d59d4-1009">Es wird kein Wert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1009">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-1010">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1010">This conversion is not supported.</span></span></exception>
        <altmember cref="T:System.UInt16" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As UInteger) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : uint32 -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1011">Die zu konvertierende 32-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1011">The 32-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1012">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1012">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1013">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1013">This conversion is not supported.</span></span> <span data-ttu-id="d59d4-1014">Es wird kein Wert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1014">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-1015">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1015">This conversion is not supported.</span></span></exception>
        <altmember cref="T:System.UInt32" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As ULong) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : uint64 -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1016">Die zu konvertierende 64-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1016">The 64-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1017">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1017">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1018">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1018">This conversion is not supported.</span></span> <span data-ttu-id="d59d4-1019">Es wird kein Wert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1019">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-1020">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1020">This conversion is not supported.</span></span></exception>
        <altmember cref="T:System.UInt64" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Object, provider As IFormatProvider) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : obj * IFormatProvider -&gt; DateTime" Usage="System.Convert.ToDateTime (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1021">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1021">An object that implements the <see cref="T:System.IConvertible" /> interface.</span></span></param>
        <param name="provider"><span data-ttu-id="d59d4-1022">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1022">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="d59d4-1023">Konvertiert den Wert des angegebenen Objekts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in ein <see cref="T:System.DateTime" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1023">Converts the value of the specified object to a <see cref="T:System.DateTime" /> object, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1024">Die Datums- und Uhrzeitentsprechung des Werts von <paramref name="value" /> oder die Datums- und Uhrzeitentsprechung von <see cref="F:System.DateTime.MinValue" />, wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1024">The date and time equivalent of the value of <paramref name="value" />, or the date and time equivalent of <see cref="F:System.DateTime.MinValue" /> if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-1025">Der Rückgabewert ist das Ergebnis des Aufrufs der <xref:System.IConvertible.ToDateTime%2A?displayProperty=nameWithType>-Methode des zugrunde liegenden Typs `value`.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1025">The return value is the result of invoking the <xref:System.IConvertible.ToDateTime%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="d59d4-1026">`provider` ermöglicht es dem Benutzer, kulturspezifische Konvertierungs Informationen zum Inhalt von `value`anzugeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1026">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="d59d4-1027">Wenn `value` z. b. ein <xref:System.String> ist, das ein Datum darstellt, können `provider` kulturspezifische Informationen über die Notation bereitstellen, die für dieses Datum verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1027">For example, if `value` is a <xref:System.String> that represents a date, `provider` could supply culture-specific information about the notation used to represent that date.</span></span> <span data-ttu-id="d59d4-1028">`provider` ist an der Konvertierung von `value` beteiligt, wenn der Lauf Zeittyp von `value` ein <xref:System.String>ist, oder wenn `value` ein benutzerdefinierter Typ ist, dessen <xref:System.IConvertible.ToDateTime%2A?displayProperty=nameWithType> Implementierung `provider`verwendet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1028">`provider` is involved in the conversion of `value` if the runtime type of `value` is a <xref:System.String>, or if `value` is a user-defined type whose <xref:System.IConvertible.ToDateTime%2A?displayProperty=nameWithType> implementation makes use of `provider`.</span></span> <span data-ttu-id="d59d4-1029">Wenn der Lauf Zeittyp von `value` <xref:System.String> und `provider` `null`ist, wird das <xref:System.Globalization.CultureInfo> Objekt verwendet, das die aktuelle Thread Kultur darstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1029">If the runtime type of `value` is <xref:System.String> and `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that represents the current thread culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-1030">Im folgenden Beispiel wird ein benutzerdefinierter Format Anbieter definiert, `CustomProvider`, dessen <xref:System.IFormatProvider.GetFormat%2A> Methode eine Meldung an die aufgerufene Konsole ausgibt und dann das <xref:System.Globalization.DateTimeFormatInfo> Objekt der Kultur zurückgibt, deren Name als Parameter an seinen Klassenkonstruktor übergeben wurde.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1030">The following example defines a custom format provider, `CustomProvider`, whose <xref:System.IFormatProvider.GetFormat%2A> method outputs a message to the console that it has been invoked, and then returns the <xref:System.Globalization.DateTimeFormatInfo> object of the culture whose name was passed as a parameter to its class constructor.</span></span> <span data-ttu-id="d59d4-1031">Jedes dieser `CustomProvider` Objekte wird verwendet, um die Elemente in einem Objekt Array in Datums-und Uhrzeitwerte zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1031">Each of these `CustomProvider` objects is used to convert the elements in an object array to date and time values.</span></span> <span data-ttu-id="d59d4-1032">Die Ausgabe gibt an, dass das `CustomProvider` Objekt nur in der Konvertierung verwendet wird, wenn der Typ des `value`-Parameters ein <xref:System.String>ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1032">The output indicates that the `CustomProvider` object is used in the conversion only when the type of the `value` parameter is a <xref:System.String>.</span></span>  
  
 [!code-csharp[System.Convert.ToDateTime#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToDateTime/cs/todatetime4.cs#4)]
 [!code-vb[System.Convert.ToDateTime#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToDateTime/vb/todatetime4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-1033"><paramref name="value" /> ist kein gültiger Datums- und Uhrzeitwert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1033"><paramref name="value" /> is not a valid date and time value.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-1034">Die <paramref name="value" />-Schnittstelle wird von <see cref="T:System.IConvertible" /> nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1034"><paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span></span>  
  
<span data-ttu-id="d59d4-1035">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-1035">-or-</span></span> 
<span data-ttu-id="d59d4-1036">Die Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1036">The conversion is not supported.</span></span></exception>
        <related type="Article" href="~/docs/standard/base-types/parsing-datetime.md"><span data-ttu-id="d59d4-1037">Analysieren von Zeichenfolgen für Datum und Uhrzeit in .NET Framework</span><span class="sxs-lookup"><span data-stu-id="d59d4-1037">Parsing Date and Time Strings in the .NET Framework</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As String, provider As IFormatProvider) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : string * IFormatProvider -&gt; DateTime" Usage="System.Convert.ToDateTime (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1038">Eine Zeichenfolge, die eine zu konvertierende Datums- und Zeitangabe enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1038">A string that contains a date and time to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="d59d4-1039">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1039">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="d59d4-1040">Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in ein entsprechendes Datum und eine entsprechende Uhrzeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1040">Converts the specified string representation of a number to an equivalent date and time, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1041">Die Datums- und Uhrzeitentsprechung des Werts von <paramref name="value" /> oder die Datums- und Uhrzeitentsprechung von <see cref="F:System.DateTime.MinValue" />, wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1041">The date and time equivalent of the value of <paramref name="value" />, or the date and time equivalent of <see cref="F:System.DateTime.MinValue" /> if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-1042">Der Rückgabewert ist das Ergebnis des Aufrufs der <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>-Methode auf `value`.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1042">The return value is the result of invoking the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method on `value`.</span></span>  
  
 <span data-ttu-id="d59d4-1043">`provider` ist eine <xref:System.IFormatProvider> Instanz, die ein <xref:System.Globalization.DateTimeFormatInfo>-Objekt abruft.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1043">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.DateTimeFormatInfo> object.</span></span> <span data-ttu-id="d59d4-1044">Das <xref:System.Globalization.DateTimeFormatInfo>-Objekt stellt kulturspezifische Informationen zum Format von `value`bereit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1044">The <xref:System.Globalization.DateTimeFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="d59d4-1045">Wenn `provider` `null`ist, wird der <xref:System.Globalization.DateTimeFormatInfo> für die aktuelle Kultur verwendet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1045">If `provider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="d59d4-1046">Wenn eine Ausnahme nicht behandelt werden soll, wenn bei der Konvertierung ein Fehler auftritt, können Sie stattdessen die <xref:System.DateTime.TryParse%2A?displayProperty=nameWithType>-Methode abrufen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1046">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.DateTime.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="d59d4-1047">Sie gibt einen <xref:System.Boolean> Wert zurück, der angibt, ob die Konvertierung erfolgreich war oder fehlgeschlagen ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1047">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-1048">Im folgenden Beispiel werden Zeichen folgen Darstellungen von Datums Werten mit der `ToDateTime`-Methode konvertiert, wobei ein <xref:System.IFormatProvider>-Objekt verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1048">The following example converts string representations of date values with the `ToDateTime` method, using an <xref:System.IFormatProvider> object.</span></span>  
  
 [!code-csharp[System.Convert.ToDateTime#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToDateTime/cs/ToDateTime3.cs#3)]
 [!code-vb[System.Convert.ToDateTime#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToDateTime/vb/ToDateTime3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-1049"><paramref name="value" /> ist keine ordnungsgemäß formatierte Datums- und Zeitzeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1049"><paramref name="value" /> is not a properly formatted date and time string.</span></span></exception>
        <related type="Article" href="~/docs/standard/base-types/parsing-datetime.md"><span data-ttu-id="d59d4-1050">Analysieren von Zeichenfolgen für Datum und Uhrzeit in .NET Framework</span><span class="sxs-lookup"><span data-stu-id="d59d4-1050">Parsing Date and Time Strings in the .NET Framework</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToDecimal">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d59d4-1051">Konvertiert einen angegebenen Wert in eine Dezimalzahl.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1051">Converts a specified value to a decimal number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Boolean) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(bool value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : bool -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1052">Der zu konvertierende boolesche Wert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1052">The Boolean value to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1053">Konvertiert den angegebenen booleschen Wert in die entsprechende Dezimalzahl.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1053">Converts the specified Boolean value to the equivalent decimal number.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1054">Die Zahl 1, wenn <paramref name="value" /><see langword="true" /> ist, andernfalls 0 (null).</span><span class="sxs-lookup"><span data-stu-id="d59d4-1054">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1055">Das folgende Beispiel veranschaulicht die Konvertierung von <xref:System.Boolean> in <xref:System.Decimal> Werte.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1055">The following example illustrates the conversion of <xref:System.Boolean> to <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#1)]
 [!code-vb[System.Convert.ToDecimal2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Byte) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : byte -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1056">Die zu konvertierende 8-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1056">The 8-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1057">Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl ohne Vorzeichen in die entsprechende Dezimalzahl.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1057">Converts the value of the specified 8-bit unsigned integer to the equivalent decimal number.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1058">Die Dezimalzahl, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1058">The decimal number that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1059">Im folgenden Beispiel wird ein <xref:System.Byte> Wert in einen <xref:System.Decimal>-Wert konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1059">The following example converts a <xref:System.Byte> value to a <xref:System.Decimal> value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#18](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#18)]
 [!code-csharp[System.Convert Snippets#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#18)]
 [!code-vb[System.Convert Snippets#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#18)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Char) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(char value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : char -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1060">Das zu konvertierende Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1060">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1061">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1061">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1062">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1062">This conversion is not supported.</span></span> <span data-ttu-id="d59d4-1063">Es wird kein Wert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1063">No value is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1064">Im folgenden Beispiel wird versucht, einen <xref:System.Char> Wert in <xref:System.Decimal>zu konvertieren, und bei einem Fehler wird <xref:System.InvalidCastException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1064">The following example attempts to convert a <xref:System.Char> value to <xref:System.Decimal>, and throws <xref:System.InvalidCastException> upon failure.</span></span>  
  
 [!code-cpp[System.Convert Snippets#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#17)]
 [!code-csharp[System.Convert Snippets#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#17)]
 [!code-vb[System.Convert Snippets#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-1065">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1065">This conversion is not supported.</span></span></exception>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As DateTime) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : DateTime -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1066">Der Datums- und Uhrzeitwert, der konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1066">The date and time value to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1067">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1067">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1068">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1068">This conversion is not supported.</span></span> <span data-ttu-id="d59d4-1069">Es wird kein Wert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1069">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-1070">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1070">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : decimal -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1071">Eine Dezimalzahl.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1071">A decimal number.</span></span></param>
        <summary><span data-ttu-id="d59d4-1072">Gibt die angegebene Dezimalzahl zurück. Es wird keine wirkliche Konvertierung durchgeführt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1072">Returns the specified decimal number; no actual conversion is performed.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1073"><paramref name="value" /> wird unverändert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1073"><paramref name="value" /> is returned unchanged.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Double) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(double value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : double -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1074">Die zu konvertierende Gleitkommazahl mit doppelter Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1074">The double-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1075">Konvertiert den Wert der angegebenen Gleitkommazahl mit doppelter Genauigkeit in eine entsprechende Dezimalzahl.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1075">Converts the value of the specified double-precision floating-point number to an equivalent decimal number.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1076">Eine Dezimalzahl, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1076">A decimal number that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-1077">Der von dieser Methode zurückgegebene <xref:System.Decimal> Wert enthält maximal 15 signifikante Ziffern.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1077">The <xref:System.Decimal> value returned by this method contains a maximum of 15 significant digits.</span></span> <span data-ttu-id="d59d4-1078">Wenn der `value`-Parameter mehr als 15 signifikante Ziffern enthält, wird er mit Rundung zum nächsten gerundet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1078">If the `value` parameter contains more than 15 significant digits, it is rounded using rounding to nearest.</span></span> <span data-ttu-id="d59d4-1079">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Convert.ToDecimal%28System.Double%29?displayProperty=nameWithType>-Methode Rundungen zum nächsten verwendet, um einen <xref:System.Decimal> Wert mit 15 signifikanten Ziffern zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1079">The following example illustrates how the <xref:System.Convert.ToDecimal%28System.Double%29?displayProperty=nameWithType> method uses rounding to nearest to return a <xref:System.Decimal> value with 15 significant digits.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToDecimal/cs/ToDecimal1.cs#2)]
 [!code-vb[System.Convert.ToDecimal#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToDecimal/vb/ToDecimal1.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-1080">Im folgenden Beispiel wird ein <xref:System.Double> Wert in einen <xref:System.Decimal>-Wert konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1080">The following example converts a <xref:System.Double> value to a <xref:System.Decimal> value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#5)]
 [!code-csharp[System.Convert Snippets#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#5)]
 [!code-vb[System.Convert Snippets#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1081"><paramref name="value" /> ist größer als <see cref="F:System.Decimal.MaxValue" /> oder kleiner als <see cref="F:System.Decimal.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1081"><paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.</span></span></exception>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Short) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(short value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : int16 -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1082">Die zu konvertierende 16-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1082">The 16-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1083">Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl mit Vorzeichen in eine entsprechende Dezimalzahl.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1083">Converts the value of the specified 16-bit signed integer to an equivalent decimal number.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1084">Eine Dezimalzahl, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1084">A decimal number that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1085">Im folgenden Beispiel wird ein Array von 16-Bit-Ganzzahlen mit Vorzeichen in <xref:System.Decimal> Werte konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1085">The following example converts an array of 16-bit signed integers to <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#2)]
 [!code-vb[System.Convert.ToDecimal2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(int value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : int -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1086">Die zu konvertierende 32-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1086">The 32-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1087">Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl mit Vorzeichen in eine entsprechende Dezimalzahl.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1087">Converts the value of the specified 32-bit signed integer to an equivalent decimal number.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1088">Eine Dezimalzahl, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1088">A decimal number that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1089">Im folgenden Beispiel wird ein Array von Ganzzahlen mit Vorzeichen in <xref:System.Decimal> Werte konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1089">The following example converts an array of signed integers to <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#3)]
 [!code-vb[System.Convert.ToDecimal2#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Long) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(long value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : int64 -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1090">Die zu konvertierende 64-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1090">The 64-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1091">Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl mit Vorzeichen in eine entsprechende Dezimalzahl.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1091">Converts the value of the specified 64-bit signed integer to an equivalent decimal number.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1092">Eine Dezimalzahl, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1092">A decimal number that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1093">Im folgenden Beispiel wird ein <xref:System.Int64> Wert in einen <xref:System.Decimal>-Wert konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1093">The following example converts an <xref:System.Int64> value to a <xref:System.Decimal> value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#10)]
 [!code-csharp[System.Convert Snippets#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#10)]
 [!code-vb[System.Convert Snippets#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Object) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : obj -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1094">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert, oder <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1094">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="d59d4-1095">Konvertiert den Wert des angegebenen Objekts in eine entsprechende Dezimalzahl.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1095">Converts the value of the specified object to an equivalent decimal number.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1096">Eine Dezimalzahl, die <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1096">A decimal number that is equivalent to <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-1097">Der Rückgabewert ist das Ergebnis des Aufrufs der <xref:System.IConvertible.ToDecimal%2A?displayProperty=nameWithType>-Methode des zugrunde liegenden Typs `value`.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1097">The return value is the result of invoking the <xref:System.IConvertible.ToDecimal%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-1098">Im folgenden Beispiel wird versucht, jedes Element in einem Objekt Array in einen <xref:System.Decimal> Wert zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1098">The following example tries to convert each element in an object array to a <xref:System.Decimal> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#4)]
 [!code-vb[System.Convert.ToDecimal2#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-1099"><paramref name="value" /> weist kein geeignetes Format für einen <see cref="T:System.Decimal" />-Typ auf.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1099"><paramref name="value" /> is not in an appropriate format for a <see cref="T:System.Decimal" /> type.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-1100">Die <paramref name="value" />-Schnittstelle wird von <see cref="T:System.IConvertible" /> nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1100"><paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span></span>  
  
<span data-ttu-id="d59d4-1101">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-1101">-or-</span></span> 
<span data-ttu-id="d59d4-1102">Die Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1102">The conversion is not supported.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1103"><paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Decimal.MinValue" /> oder größer als <see cref="F:System.Decimal.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1103"><paramref name="value" /> represents a number that is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As SByte) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : sbyte -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1104">Die zu konvertierende 8-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1104">The 8-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1105">Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl mit Vorzeichen in die entsprechende Dezimalzahl.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1105">Converts the value of the specified 8-bit signed integer to the equivalent decimal number.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1106">Eine Dezimalzahl, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1106">A decimal number that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1107">Im folgenden Beispiel wird jedes Element in einem Array von signierten Bytes in einen <xref:System.Decimal> Wert konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1107">The following example converts each element in an array of signed bytes to a <xref:System.Decimal> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#5)]
 [!code-vb[System.Convert.ToDecimal2#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Single) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(float value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : single -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1108">Die zu konvertierende Gleitkommazahl mit einfacher Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1108">The single-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1109">Konvertiert den Wert der angegebenen Gleitkommazahl mit einfacher Genauigkeit in die entsprechende Dezimalzahl.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1109">Converts the value of the specified single-precision floating-point number to the equivalent decimal number.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1110">Eine Dezimalzahl, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1110">A decimal number that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-1111">Der von dieser Methode zurückgegebene <xref:System.Decimal> Wert enthält maximal sieben signifikante Ziffern.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1111">The <xref:System.Decimal> value returned by this method contains a maximum of seven significant digits.</span></span> <span data-ttu-id="d59d4-1112">Wenn der `value`-Parameter mehr als sieben signifikante Ziffern enthält, wird er mit Rundung zum nächsten gerundet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1112">If the `value` parameter contains more than seven significant digits, it is rounded using rounding to nearest.</span></span> <span data-ttu-id="d59d4-1113">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Convert.ToDecimal%28System.Single%29>-Methode Rundungen zum nächsten verwendet, um einen <xref:System.Decimal> Wert mit sieben signifikanten Ziffern zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1113">The following example illustrates how the <xref:System.Convert.ToDecimal%28System.Single%29> method uses rounding to nearest to return a <xref:System.Decimal> value with seven significant digits.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToDecimal/cs/ToDecimal1.cs#1)]
 [!code-vb[System.Convert.ToDecimal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToDecimal/vb/ToDecimal1.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-1114">Im folgenden Beispiel wird versucht, jedes Element in einem Array von <xref:System.Single>-Werten in einen <xref:System.Decimal>-Wert zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1114">The following example tries to convert each element in an array of <xref:System.Single> values to a <xref:System.Decimal> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#6)]
 [!code-vb[System.Convert.ToDecimal2#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1115"><paramref name="value" /> ist größer als <see cref="F:System.Decimal.MaxValue" /> oder kleiner als <see cref="F:System.Decimal.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1115"><paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.</span></span></exception>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As String) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : string -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1116">Eine Zeichenfolge, die eine zu konvertierende Zahl enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1116">A string that contains a number to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1117">Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl in eine entsprechende Dezimalzahl.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1117">Converts the specified string representation of a number to an equivalent decimal number.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1118">Eine Dezimalzahl, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1118">A decimal number that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-1119">Die Verwendung der <xref:System.Convert.ToDecimal%28System.String%29>-Methode entspricht der Übergabe von `value` an die <xref:System.Decimal.Parse%28System.String%29?displayProperty=nameWithType>-Methode.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1119">Using the <xref:System.Convert.ToDecimal%28System.String%29> method is equivalent to passing `value` to the <xref:System.Decimal.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="d59d4-1120">`value` wird mithilfe der Formatierungskonventionen der aktuellen Threadkultur interpretiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1120">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="d59d4-1121">Wenn eine Ausnahme nicht behandelt werden soll, wenn bei der Konvertierung ein Fehler auftritt, können Sie stattdessen die <xref:System.Decimal.TryParse%2A?displayProperty=nameWithType>-Methode abrufen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1121">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Decimal.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="d59d4-1122">Sie gibt einen <xref:System.Boolean> Wert zurück, der angibt, ob die Konvertierung erfolgreich war oder fehlgeschlagen ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1122">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-1123">Im folgenden Beispiel wird die Verwendung von `ToDecimal`veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1123">The following example illustrates the use of `ToDecimal`.</span></span> <span data-ttu-id="d59d4-1124">Er versucht, eine <xref:System.String> in eine <xref:System.Decimal>zu konvertieren, und löst die möglichen Ausnahmen aus, die während der Konvertierung auftreten können.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1124">It attempts to convert a <xref:System.String> to a <xref:System.Decimal>, and throws the possible exceptions that may arise during the conversion.</span></span>  
  
 [!code-cpp[System.Convert Snippets#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#15)]
 [!code-csharp[System.Convert Snippets#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#15)]
 [!code-vb[System.Convert Snippets#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-1125"><paramref name="value" /> stellt keine Zahl in einem gültigen Format dar.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1125"><paramref name="value" /> is not a number in a valid format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1126"><paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Decimal.MinValue" /> oder größer als <see cref="F:System.Decimal.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1126"><paramref name="value" /> represents a number that is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As UShort) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : uint16 -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1127">Die zu konvertierende 16-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1127">The 16-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1128">Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende Dezimalzahl.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1128">Converts the value of the specified 16-bit unsigned integer to an equivalent decimal number.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1129">Die Dezimalzahl, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1129">The decimal number that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1130">Im folgenden Beispiel wird ein Array von 16-Bit-Ganzzahlen ohne Vorzeichen in <xref:System.Decimal> Werte konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1130">The following example converts an array of 16-bit unsigned integers to <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#7)]
 [!code-vb[System.Convert.ToDecimal2#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As UInteger) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : uint32 -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1131">Die zu konvertierende 32-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1131">The 32-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1132">Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende Dezimalzahl.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1132">Converts the value of the specified 32-bit unsigned integer to an equivalent decimal number.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1133">Eine Dezimalzahl, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1133">A decimal number that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1134">Im folgenden Beispiel wird ein Array von Ganzzahlen ohne Vorzeichen in <xref:System.Decimal> Werte konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1134">The following example converts an array of unsigned integers to <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#8)]
 [!code-vb[System.Convert.ToDecimal2#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As ULong) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : uint64 -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1135">Die zu konvertierende 64-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1135">The 64-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1136">Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende Dezimalzahl.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1136">Converts the value of the specified 64-bit unsigned integer to an equivalent decimal number.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1137">Eine Dezimalzahl, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1137">A decimal number that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1138">Im folgenden Beispiel wird ein Array von Long-Ganzzahlen ohne Vorzeichen in <xref:System.Decimal>-Werte konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1138">The following example converts an array of unsigned long integers to <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#9)]
 [!code-vb[System.Convert.ToDecimal2#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Object, provider As IFormatProvider) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : obj * IFormatProvider -&gt; decimal" Usage="System.Convert.ToDecimal (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1139">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1139">An object that implements the <see cref="T:System.IConvertible" /> interface.</span></span></param>
        <param name="provider"><span data-ttu-id="d59d4-1140">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1140">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="d59d4-1141">Konvertiert den Wert des angegebenen Objekts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in eine entsprechende Dezimalzahl.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1141">Converts the value of the specified object to an equivalent decimal number, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1142">Eine Dezimalzahl, die <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1142">A decimal number that is equivalent to <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-1143">Der Rückgabewert ist das Ergebnis des Aufrufs der <xref:System.IConvertible.ToDecimal%2A?displayProperty=nameWithType>-Methode des zugrunde liegenden Typs `value`.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1143">The return value is the result of invoking the <xref:System.IConvertible.ToDecimal%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="d59d4-1144">`provider` ermöglicht es dem Benutzer, kulturspezifische Konvertierungs Informationen zum Inhalt von `value`anzugeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1144">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="d59d4-1145">Die Basis Typen ignorieren `provider`; der-Parameter kann jedoch verwendet werden, wenn `value` ein benutzerdefinierter Typ ist, der die <xref:System.IConvertible>-Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1145">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-1146">Im folgenden Beispiel wird eine `Temperature` -Klasse definiert, die die <xref:System.IConvertible> -Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1146">The following example defines a `Temperature` class that implements the <xref:System.IConvertible> interface.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal2.cs#10)]
 [!code-vb[System.Convert.ToDecimal2#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal2.vb#10)]  
  
 <span data-ttu-id="d59d4-1147">Das folgende Beispiel zeigt, dass die <xref:System.IConvertible.ToDecimal%2A?displayProperty=nameWithType> Implementierung der `Temperature`-Klasse aufgerufen wird, um die Konvertierung auszuführen, wenn ein `Temperature` Objekt als Parameter an die <xref:System.Convert.ToDecimal%28System.Object%2CSystem.IFormatProvider%29>-Methode übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1147">The following example shows that when a `Temperature` object is passed as a parameter to the <xref:System.Convert.ToDecimal%28System.Object%2CSystem.IFormatProvider%29> method, the <xref:System.IConvertible.ToDecimal%2A?displayProperty=nameWithType> implementation of the `Temperature` class is called to perform the conversion.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal2.cs#11)]
 [!code-vb[System.Convert.ToDecimal2#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal2.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-1148"><paramref name="value" /> weist kein geeignetes Format für einen <see cref="T:System.Decimal" />-Typ auf.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1148"><paramref name="value" /> is not in an appropriate format for a <see cref="T:System.Decimal" /> type.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-1149">Die <paramref name="value" />-Schnittstelle wird von <see cref="T:System.IConvertible" /> nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1149"><paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span></span>  
  
<span data-ttu-id="d59d4-1150">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-1150">-or-</span></span> 
<span data-ttu-id="d59d4-1151">Die Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1151">The conversion is not supported.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1152"><paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Decimal.MinValue" /> oder größer als <see cref="F:System.Decimal.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1152"><paramref name="value" /> represents a number that is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As String, provider As IFormatProvider) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : string * IFormatProvider -&gt; decimal" Usage="System.Convert.ToDecimal (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1153">Eine Zeichenfolge, die eine zu konvertierende Zahl enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1153">A string that contains a number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="d59d4-1154">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1154">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="d59d4-1155">Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in eine entsprechende Dezimalzahl.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1155">Converts the specified string representation of a number to an equivalent decimal number, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1156">Eine Dezimalzahl, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1156">A decimal number that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-1157">Der Rückgabewert ist das Ergebnis des Aufrufs der <xref:System.Decimal.Parse%2A?displayProperty=nameWithType>-Methode auf `value`.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1157">The return value is the result of invoking the <xref:System.Decimal.Parse%2A?displayProperty=nameWithType> method on `value`.</span></span>  
  
 <span data-ttu-id="d59d4-1158">`provider` ist eine <xref:System.IFormatProvider> Instanz, die ein <xref:System.Globalization.NumberFormatInfo>-Objekt abruft.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1158">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="d59d4-1159">Das <xref:System.Globalization.NumberFormatInfo>-Objekt stellt kulturspezifische Informationen zum Format von `value`bereit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1159">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="d59d4-1160">Wenn `provider` `null`ist, wird der <xref:System.Globalization.NumberFormatInfo> für die aktuelle Kultur verwendet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1160">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="d59d4-1161">Wenn eine Ausnahme nicht behandelt werden soll, wenn bei der Konvertierung ein Fehler auftritt, können Sie stattdessen die <xref:System.Decimal.TryParse%2A?displayProperty=nameWithType>-Methode abrufen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1161">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Decimal.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="d59d4-1162">Sie gibt einen <xref:System.Boolean> Wert zurück, der angibt, ob die Konvertierung erfolgreich war oder fehlgeschlagen ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1162">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-1163">Im folgenden Beispiel wird versucht, ein Array von Zeichen folgen mithilfe <xref:System.Globalization.NumberFormatInfo>-Objekten, die zwei verschiedene Kulturen darstellen, in <xref:System.Decimal> Werte zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1163">The following example attempts to convert an array of strings to <xref:System.Decimal> values by using <xref:System.Globalization.NumberFormatInfo> objects that represent two different cultures.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal3.cs#12)]
 [!code-vb[System.Convert.ToDecimal2#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal3.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-1164"><paramref name="value" /> stellt keine Zahl in einem gültigen Format dar.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1164"><paramref name="value" /> is not a number in a valid format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1165"><paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Decimal.MinValue" /> oder größer als <see cref="F:System.Decimal.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1165"><paramref name="value" /> represents a number that is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToDouble">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d59d4-1166">Konvertiert einen angegebenen Wert in eine Gleitkommazahl mit doppelter Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1166">Converts a specified value to a double-precision floating-point number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(bool value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : bool -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1167">Der zu konvertierende boolesche Wert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1167">The Boolean value to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1168">Konvertiert den angegebenen booleschen Wert in die entsprechende Gleitkommazahl mit doppelter Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1168">Converts the specified Boolean value to the equivalent double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1169">Die Zahl 1, wenn <paramref name="value" /><see langword="true" /> ist, andernfalls 0 (null).</span><span class="sxs-lookup"><span data-stu-id="d59d4-1169">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1170">Im folgenden Beispiel wird ein <xref:System.Boolean> Wert in einen <xref:System.Double>-Wert konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1170">The following example converts a <xref:System.Boolean> value to a <xref:System.Double> value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#1)]
 [!code-csharp[System.Convert Snippets#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#1)]
 [!code-vb[System.Convert Snippets#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Byte) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : byte -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1171">Die zu konvertierende 8-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1171">The 8-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1172">Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl ohne Vorzeichen in die entsprechende Gleitkommazahl mit doppelter Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1172">Converts the value of the specified 8-bit unsigned integer to the equivalent double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1173">Die Gleitkommazahl mit doppelter Genauigkeit, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1173">The double-precision floating-point number that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1174">Im folgenden Beispiel wird ein <xref:System.Byte> Wert in einen <xref:System.Double>-Wert konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1174">The following example converts a <xref:System.Byte> value to a <xref:System.Double> value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#2)]
 [!code-csharp[System.Convert Snippets#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#2)]
 [!code-vb[System.Convert Snippets#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Char) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(char value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : char -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1175">Das zu konvertierende Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1175">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1176">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1176">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1177">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1177">This conversion is not supported.</span></span> <span data-ttu-id="d59d4-1178">Es wird kein Wert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1178">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-1179">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1179">This conversion is not supported.</span></span></exception>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As DateTime) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : DateTime -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1180">Der Datums- und Uhrzeitwert, der konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1180">The date and time value to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1181">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1181">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1182">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1182">This conversion is not supported.</span></span> <span data-ttu-id="d59d4-1183">Es wird kein Wert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1183">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-1184">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1184">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Decimal) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : decimal -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1185">Die zu konvertierende Dezimalzahl.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1185">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1186">Konvertiert den Wert der angegebenen Dezimalzahl in eine entsprechende Gleitkommazahl mit doppelter Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1186">Converts the value of the specified decimal number to an equivalent double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1187">Eine Gleitkommazahl mit doppelter Genauigkeit, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1187">A double-precision floating-point number that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1188">Im folgenden Beispiel wird ein <xref:System.Decimal> Wert in einen <xref:System.Double>-Wert konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1188">The following example converts a <xref:System.Decimal> value to a <xref:System.Double> value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#5)]
 [!code-csharp[System.Convert Snippets#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#5)]
 [!code-vb[System.Convert Snippets#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(double value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : double -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1189">Die zurückzugebende Gleitkommazahl mit doppelter Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1189">The double-precision floating-point number to return.</span></span></param>
        <summary><span data-ttu-id="d59d4-1190">Gibt die angegebene Gleitkommazahl mit doppelter Genauigkeit zurück. Es wird keine wirkliche Konvertierung durchgeführt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1190">Returns the specified double-precision floating-point number; no actual conversion is performed.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1191"><paramref name="value" /> wird unverändert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1191"><paramref name="value" /> is returned unchanged.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Short) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(short value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : int16 -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1192">Die zu konvertierende 16-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1192">The 16-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1193">Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl mit Vorzeichen in die entsprechende Gleitkommazahl mit doppelter Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1193">Converts the value of the specified 16-bit signed integer to an equivalent double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1194">Eine Gleitkommazahl mit doppelter Genauigkeit, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1194">A double-precision floating-point number equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1195">Im folgenden Beispiel wird jedes Element in einem Array von 16-Bit-Ganzzahlen mit Vorzeichen in einen <xref:System.Double> Wert konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1195">The following example converts each element in an array of 16-bit signed integers to a <xref:System.Double> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDouble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todouble/cs/todouble1.cs#1)]
 [!code-vb[System.Convert.ToDouble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todouble/vb/todouble1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(int value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : int -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1196">Die zu konvertierende 32-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1196">The 32-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1197">Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl mit Vorzeichen in die entsprechende Gleitkommazahl mit doppelter Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1197">Converts the value of the specified 32-bit signed integer to an equivalent double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1198">Eine Gleitkommazahl mit doppelter Genauigkeit, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1198">A double-precision floating-point number that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1199">Im folgenden Beispiel wird ein <xref:System.Int32> Wert in einen <xref:System.Double>-Wert konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1199">The following example converts an <xref:System.Int32> value to a <xref:System.Double> value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#3)]
 [!code-csharp[System.Convert Snippets#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#3)]
 [!code-vb[System.Convert Snippets#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Long) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(long value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : int64 -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1200">Die zu konvertierende 64-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1200">The 64-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1201">Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl mit Vorzeichen in die entsprechende Gleitkommazahl mit doppelter Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1201">Converts the value of the specified 64-bit signed integer to an equivalent double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1202">Eine Gleitkommazahl mit doppelter Genauigkeit, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1202">A double-precision floating-point number that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1203">Im folgenden Beispiel wird jedes Element in einem Array von Long-Ganzzahlen mit Vorzeichen in einen <xref:System.Double> Wert konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1203">The following example converts each element in an array of signed long integers to a <xref:System.Double> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDouble#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todouble/cs/todouble1.cs#2)]
 [!code-vb[System.Convert.ToDouble#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todouble/vb/todouble1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : obj -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1204">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert, oder <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1204">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="d59d4-1205">Konvertiert den Wert des angegebenen Objekts in eine Gleitkommazahl mit doppelter Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1205">Converts the value of the specified object to a double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1206">Eine Gleitkommazahl mit doppelter Genauigkeit, die <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1206">A double-precision floating-point number that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-1207">Wenn `value` nicht `null`wird, umschließt diese Methode einen aufzurufenden <xref:System.IConvertible.ToDouble%2A?displayProperty=nameWithType> Implementierung des zugrunde liegenden Typs `value`.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1207">If `value` is not `null`, this method wraps a call to the <xref:System.IConvertible.ToDouble%2A?displayProperty=nameWithType> implementation of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-1208">Im folgenden Beispiel wird versucht, die einzelnen Werte in einem Objekt Array in eine <xref:System.Double>zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1208">The following example attempts to convert each value in an object array to a <xref:System.Double>.</span></span>  
  
 [!code-csharp[System.Convert.ToDouble#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todouble/cs/todouble1.cs#3)]
 [!code-vb[System.Convert.ToDouble#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todouble/vb/todouble1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-1209"><paramref name="value" /> weist kein geeignetes Format für einen <see cref="T:System.Double" />-Typ auf.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1209"><paramref name="value" /> is not in an appropriate format for a <see cref="T:System.Double" /> type.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-1210">Die <paramref name="value" />-Schnittstelle wird von <see cref="T:System.IConvertible" /> nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1210"><paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span></span>  
  
<span data-ttu-id="d59d4-1211">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-1211">-or-</span></span> 
<span data-ttu-id="d59d4-1212">Die Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1212">The conversion is not supported.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1213"><paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Double.MinValue" /> oder größer als <see cref="F:System.Double.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1213"><paramref name="value" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As SByte) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : sbyte -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1214">Die zu konvertierende 8-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1214">The 8-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1215">Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl mit Vorzeichen in die entsprechende Gleitkommazahl mit doppelter Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1215">Converts the value of the specified 8-bit signed integer to the equivalent double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1216">Die 8-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1216">The 8-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1217">Im folgenden Beispiel wird jedes Element in einem Array von <xref:System.SByte>-Werten in einen <xref:System.Double>-Wert konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1217">The following example converts each element in an array of <xref:System.SByte> values to a <xref:System.Double> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDouble#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todouble/cs/todouble1.cs#4)]
 [!code-vb[System.Convert.ToDouble#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todouble/vb/todouble1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Single) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(float value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : single -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1218">Die Gleitkommazahl mit einfacher Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1218">The single-precision floating-point number.</span></span></param>
        <summary><span data-ttu-id="d59d4-1219">Konvertiert den Wert der angegebenen Gleitkommazahl mit einfacher Genauigkeit in die entsprechende Gleitkommazahl mit doppelter Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1219">Converts the value of the specified single-precision floating-point number to an equivalent double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1220">Eine Gleitkommazahl mit doppelter Genauigkeit, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1220">A double-precision floating-point number that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1221">Im folgenden Beispiel wird ein <xref:System.Single> Wert in einen <xref:System.Double>-Wert konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1221">The following example converts a <xref:System.Single> value to a <xref:System.Double> value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#6)]
 [!code-csharp[System.Convert Snippets#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#6)]
 [!code-vb[System.Convert Snippets#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : string -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1222">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1222">A string that contains the number to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1223">Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl in eine entsprechende Gleitkommazahl mit doppelter Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1223">Converts the specified string representation of a number to an equivalent double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1224">Eine Gleitkommazahl mit doppelter Genauigkeit, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1224">A double-precision floating-point number that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-1225">Die Verwendung der <xref:System.Convert.ToDouble%28System.String%29>-Methode entspricht der Übergabe von `value` an die <xref:System.Double.Parse%28System.String%29?displayProperty=nameWithType>-Methode.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1225">Using the <xref:System.Convert.ToDouble%28System.String%29> method is equivalent to passing `value` to the <xref:System.Double.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="d59d4-1226">`value` wird mithilfe der Formatierungskonventionen der aktuellen Threadkultur interpretiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1226">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="d59d4-1227">Wenn eine Ausnahme nicht behandelt werden soll, wenn bei der Konvertierung ein Fehler auftritt, können Sie stattdessen die <xref:System.Double.TryParse%2A?displayProperty=nameWithType>-Methode abrufen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1227">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Double.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="d59d4-1228">Sie gibt einen <xref:System.Boolean> Wert zurück, der angibt, ob die Konvertierung erfolgreich war oder fehlgeschlagen ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1228">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-1229">Im folgenden Beispiel wird versucht, jedes Element in einem Array numerischer Zeichen folgen in einen <xref:System.Double>zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1229">The following example attempts to convert each element in an array of numeric strings to a <xref:System.Double>.</span></span> <span data-ttu-id="d59d4-1230">Die Ausgabe des Beispiels erfolgt aus einem System, dessen aktuelle Kultur en-US ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1230">The example's output is from a system whose current culture is en-US.</span></span>  
  
 [!code-csharp[System.Convert.ToDouble#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todouble/cs/example8.cs#8)]
 [!code-vb[System.Convert.ToDouble#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todouble/vb/example8.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-1231"><paramref name="value" /> stellt keine Zahl in einem gültigen Format dar.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1231"><paramref name="value" /> is not a number in a valid format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1232"><paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Double.MinValue" /> oder größer als <see cref="F:System.Double.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1232"><paramref name="value" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As UShort) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : uint16 -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1233">Die zu konvertierende 16-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1233">The 16-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1234">Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl ohne Vorzeichen in die entsprechende Gleitkommazahl mit doppelter Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1234">Converts the value of the specified 16-bit unsigned integer to the equivalent double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1235">Eine Gleitkommazahl mit doppelter Genauigkeit, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1235">A double-precision floating-point number that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1236">Im folgenden Beispiel wird jedes Element in einem Array von <xref:System.UInt16>-Werten in einen <xref:System.Double>-Wert konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1236">The following example converts each element in an array of <xref:System.UInt16> values to a <xref:System.Double> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDouble#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todouble/cs/todouble1.cs#5)]
 [!code-vb[System.Convert.ToDouble#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todouble/vb/todouble1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As UInteger) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : uint32 -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1237">Die zu konvertierende 32-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1237">The 32-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1238">Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl ohne Vorzeichen in die entsprechende Gleitkommazahl mit doppelter Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1238">Converts the value of the specified 32-bit unsigned integer to an equivalent double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1239">Eine Gleitkommazahl mit doppelter Genauigkeit, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1239">A double-precision floating-point number that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1240">Im folgenden Beispiel wird jedes Element in einem Array von <xref:System.UInt32>-Werten in einen <xref:System.Double>-Wert konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1240">The following example converts each element in an array of <xref:System.UInt32> values to a <xref:System.Double> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDouble#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todouble/cs/todouble1.cs#6)]
 [!code-vb[System.Convert.ToDouble#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todouble/vb/todouble1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As ULong) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : uint64 -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1241">Die zu konvertierende 64-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1241">The 64-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1242">Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl ohne Vorzeichen in die entsprechende Gleitkommazahl mit doppelter Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1242">Converts the value of the specified 64-bit unsigned integer to an equivalent double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1243">Eine Gleitkommazahl mit doppelter Genauigkeit, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1243">A double-precision floating-point number that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1244">Im folgenden Beispiel wird jedes Element in einem Array von <xref:System.UInt64>-Werten in einen <xref:System.Double>-Wert konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1244">The following example converts each element in an array of <xref:System.UInt64> values to a <xref:System.Double> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDouble#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todouble/cs/todouble1.cs#7)]
 [!code-vb[System.Convert.ToDouble#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todouble/vb/todouble1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Object, provider As IFormatProvider) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToDouble : obj * IFormatProvider -&gt; double" Usage="System.Convert.ToDouble (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1245">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1245">An object that implements the <see cref="T:System.IConvertible" /> interface.</span></span></param>
        <param name="provider"><span data-ttu-id="d59d4-1246">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1246">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="d59d4-1247">Konvertiert den Wert des angegebenen Objekts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in eine Gleitkommazahl mit doppelter Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1247">Converts the value of the specified object to an double-precision floating-point number, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1248">Eine Gleitkommazahl mit doppelter Genauigkeit, die <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1248">A double-precision floating-point number that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-1249">Der Rückgabewert ist das Ergebnis des Aufrufs der <xref:System.IConvertible.ToDouble%2A?displayProperty=nameWithType>-Methode des zugrunde liegenden Typs `value`.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1249">The return value is the result of invoking the <xref:System.IConvertible.ToDouble%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="d59d4-1250">`provider` ermöglicht es dem Benutzer, kulturspezifische Konvertierungs Informationen zum Inhalt von `value`anzugeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1250">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="d59d4-1251">Wenn `value` z. b. ein <xref:System.String> ist, das eine Zahl darstellt, können `provider` kulturspezifische Informationen über die Notation bereitstellen, die für diese Zahl verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1251">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="d59d4-1252">Die Basis Typen ignorieren `provider`; der-Parameter kann jedoch verwendet werden, wenn `value` ein benutzerdefinierter Typ ist, der die <xref:System.IConvertible>-Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1252">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-1253">Im folgenden Beispiel wird eine Klasse definiert, die <xref:System.IConvertible> und eine Klasse implementiert, die <xref:System.IFormatProvider>implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1253">The following example defines a class that implements <xref:System.IConvertible> and a class that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="d59d4-1254">Objekte der Klasse, die implementiert <xref:System.IConvertible> ein Array von <xref:System.Double> Werten enthalten.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1254">Objects of the class that implements <xref:System.IConvertible> hold an array of <xref:System.Double> values.</span></span> <span data-ttu-id="d59d4-1255">Ein Objekt jeder Klasse wird an die `ToDouble`-Methode übermittelt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1255">An object of each class is passed to the `ToDouble` method.</span></span> <span data-ttu-id="d59d4-1256">Diese Methode gibt einen Durchschnitt des Arrays von <xref:System.Double> Werten zurück, wobei das Objekt verwendet wird, das <xref:System.IFormatProvider> implementiert, um zu bestimmen, wie der Durchschnitt berechnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1256">This method returns an average of the array of <xref:System.Double> values, using the object that implements <xref:System.IFormatProvider> to determine how to calculate the average.</span></span>  
  
 [!code-cpp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CPP/objectifp.cpp#1)]
 [!code-csharp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CS/objectifp.cs#1)]
 [!code-vb[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/VB/objectifp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-1257"><paramref name="value" /> weist kein geeignetes Format für einen <see cref="T:System.Double" />-Typ auf.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1257"><paramref name="value" /> is not in an appropriate format for a <see cref="T:System.Double" /> type.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-1258">Die <paramref name="value" />-Schnittstelle wird von <see cref="T:System.IConvertible" /> nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1258"><paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1259"><paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Double.MinValue" /> oder größer als <see cref="F:System.Double.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1259"><paramref name="value" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As String, provider As IFormatProvider) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToDouble : string * IFormatProvider -&gt; double" Usage="System.Convert.ToDouble (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1260">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1260">A string that contains the number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="d59d4-1261">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1261">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="d59d4-1262">Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende Gleitkommazahl mit doppelter Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1262">Converts the specified string representation of a number to an equivalent double-precision floating-point number, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1263">Eine Gleitkommazahl mit doppelter Genauigkeit, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1263">A double-precision floating-point number that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-1264">Der Rückgabewert ist das Ergebnis des Aufrufs der <xref:System.Double.Parse%2A?displayProperty=nameWithType>-Methode auf `value`.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1264">The return value is the result of invoking the <xref:System.Double.Parse%2A?displayProperty=nameWithType> method on `value`.</span></span>  
  
 <span data-ttu-id="d59d4-1265">`provider` ist eine <xref:System.IFormatProvider> Instanz, die ein <xref:System.Globalization.NumberFormatInfo>-Objekt abruft.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1265">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="d59d4-1266">Das <xref:System.Globalization.NumberFormatInfo>-Objekt stellt kulturspezifische Informationen zum Format von `value`bereit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1266">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="d59d4-1267">Wenn `provider` `null`ist, wird der <xref:System.Globalization.NumberFormatInfo> für die aktuelle Kultur verwendet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1267">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="d59d4-1268">Wenn eine Ausnahme nicht behandelt werden soll, wenn bei der Konvertierung ein Fehler auftritt, können Sie stattdessen die <xref:System.Double.TryParse%2A?displayProperty=nameWithType>-Methode abrufen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1268">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Double.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="d59d4-1269">Sie gibt einen <xref:System.Boolean> Wert zurück, der angibt, ob die Konvertierung erfolgreich war oder fehlgeschlagen ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1269">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-1270">Im folgenden Beispiel werden Zeichen folgen Darstellungen von <xref:System.Double>-Werten mit der `ToDouble`-Methode konvertiert, wobei ein <xref:System.IFormatProvider>-Objekt verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1270">The following example converts string representations of <xref:System.Double> values with the `ToDouble` method, using an <xref:System.IFormatProvider> object.</span></span>  
  
 [!code-csharp[System.Convert.ToReals_String#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToReals_String/CS/todouble.cs#2)]
 [!code-vb[System.Convert.ToReals_String#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToReals_String/VB/todouble.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-1271"><paramref name="value" /> stellt keine Zahl in einem gültigen Format dar.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1271"><paramref name="value" /> is not a number in a valid format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1272"><paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Double.MinValue" /> oder größer als <see cref="F:System.Double.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1272"><paramref name="value" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToInt16">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d59d4-1273">Konvertiert einen angegebenen Wert in eine 16-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1273">Converts a specified value to a 16-bit signed integer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Boolean) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(bool value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : bool -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1274">Der zu konvertierende boolesche Wert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1274">The Boolean value to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1275">Konvertiert den angegebenen booleschen Wert in die entsprechende 16-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1275">Converts the specified Boolean value to the equivalent 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1276">Die Zahl 1, wenn <paramref name="value" /><see langword="true" /> ist, andernfalls 0 (null).</span><span class="sxs-lookup"><span data-stu-id="d59d4-1276">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1277">Im folgenden Beispiel werden die booleschen Werte `true` und `false` in <xref:System.Int16> Werte konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1277">The following example converts the Boolean values `true` and `false` to <xref:System.Int16> values.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#1)]
 [!code-vb[System.Convert.ToInt16#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Byte) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : byte -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1278">Die zu konvertierende 8-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1278">The 8-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1279">Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl ohne Vorzeichen in die entsprechende 16-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1279">Converts the value of the specified 8-bit unsigned integer to the equivalent 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1280">Eine 16-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1280">A 16-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1281">Im folgenden Beispiel wird jedes Element in einem Array von <xref:System.Byte>-Werten in eine 16-Bit-Ganzzahl mit Vorzeichen konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1281">The following example converts each element in an array of <xref:System.Byte> values to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#2)]
 [!code-vb[System.Convert.ToInt16#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Char) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(char value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : char -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1282">Das zu konvertierende Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1282">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1283">Konvertiert den Wert des angegebenen Unicode-Zeichens in die entsprechende 16-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1283">Converts the value of the specified Unicode character to the equivalent 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1284">Eine 16-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1284">A 16-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1285">Im folgenden Beispiel wird versucht, jedes Element in einem Array von <xref:System.Char>-Werten in eine 16-Bit-Ganzzahl mit Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1285">The following example attempts to convert each element in an array of <xref:System.Char> values to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#3)]
 [!code-vb[System.Convert.ToInt16#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1286"><paramref name="value" /> ist größer als <see cref="F:System.Int16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1286"><paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As DateTime) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : DateTime -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1287">Der Datums- und Uhrzeitwert, der konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1287">The date and time value to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1288">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1288">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1289">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1289">This conversion is not supported.</span></span> <span data-ttu-id="d59d4-1290">Es wird kein Wert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1290">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-1291">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1291">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Decimal) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : decimal -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1292">Die zu konvertierende Dezimalzahl.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1292">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1293">Konvertiert den Wert der angegebenen Dezimalzahl in eine entsprechende 16-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1293">Converts the value of the specified decimal number to an equivalent 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1294"><paramref name="value" />, auf die nächste 16-Bit-Ganzzahl mit Vorzeichen gerundet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1294"><paramref name="value" />, rounded to the nearest 16-bit signed integer.</span></span> <span data-ttu-id="d59d4-1295">Wenn <paramref name="value" /> genau zwischen zwei ganzen Zahlen liegt, wird die gerade Zahl zurückgegeben (d. h. 4,5 wird in 4 und 5,5 in 6 konvertiert).</span><span class="sxs-lookup"><span data-stu-id="d59d4-1295">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1296">Im folgenden Beispiel wird versucht, jedes Element in einem Array von <xref:System.Decimal>-Werten in eine 16-Bit-Ganzzahl mit Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1296">The following example attempts to convert each element in an array of <xref:System.Decimal> values to a 16-bit signed integer.</span></span> <span data-ttu-id="d59d4-1297">Das Beispiel veranschaulicht, dass alle Bruchteile eines <xref:System.Decimal> Werts beim Durchführen der Konvertierung gerundet werden.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1297">The example illustrates that any fractional part of a <xref:System.Decimal> value is rounded when performing the conversion.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#4)]
 [!code-vb[System.Convert.ToInt16#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1298"><paramref name="value" /> ist größer als <see cref="F:System.Int16.MaxValue" /> oder kleiner als <see cref="F:System.Int16.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1298"><paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" /> or less than <see cref="F:System.Int16.MinValue" />.</span></span></exception>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Double) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(double value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : double -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1299">Die zu konvertierende Gleitkommazahl mit doppelter Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1299">The double-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1300">Konvertiert den Wert der angegebenen Gleitkommazahl mit doppelter Genauigkeit in die entsprechende 16-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1300">Converts the value of the specified double-precision floating-point number to an equivalent 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1301"><paramref name="value" />, auf die nächste 16-Bit-Ganzzahl mit Vorzeichen gerundet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1301"><paramref name="value" />, rounded to the nearest 16-bit signed integer.</span></span> <span data-ttu-id="d59d4-1302">Wenn <paramref name="value" /> genau zwischen zwei ganzen Zahlen liegt, wird die gerade Zahl zurückgegeben (d. h. 4,5 wird in 4 und 5,5 in 6 konvertiert).</span><span class="sxs-lookup"><span data-stu-id="d59d4-1302">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1303">Im folgenden Beispiel wird jedes Element in einem Array von <xref:System.Double>-Werten in eine 16-Bit-Ganzzahl mit Vorzeichen konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1303">The following example converts each element in an array of <xref:System.Double> values to a 16-bit signed integer.</span></span> <span data-ttu-id="d59d4-1304">Das Beispiel veranschaulicht, dass alle Bruchteile eines <xref:System.Double> Werts gerundet werden, bevor die Konvertierung durchgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1304">The example illustrates that any fractional part of a <xref:System.Double> value is rounded before performing the conversion.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#5)]
 [!code-vb[System.Convert.ToInt16#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1305"><paramref name="value" /> ist größer als <see cref="F:System.Int16.MaxValue" /> oder kleiner als <see cref="F:System.Int16.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1305"><paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" /> or less than <see cref="F:System.Int16.MinValue" />.</span></span></exception>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(short value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : int16 -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1306">Die zurückzugebende 16-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1306">The 16-bit signed integer to return.</span></span></param>
        <summary><span data-ttu-id="d59d4-1307">Gibt die angegebene 16-Bit-Ganzzahl mit Vorzeichen zurück. Es wird keine wirkliche Konvertierung durchgeführt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1307">Returns the specified 16-bit signed integer; no actual conversion is performed.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1308"><paramref name="value" /> wird unverändert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1308"><paramref name="value" /> is returned unchanged.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(int value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : int -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1309">Die zu konvertierende 32-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1309">The 32-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1310">Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl mit Vorzeichen in eine entsprechende 16-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1310">Converts the value of the specified 32-bit signed integer to an equivalent 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1311">Die 16-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1311">The 16-bit signed integer equivalent of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1312">Im folgenden Beispiel wird versucht, jedes Element in einem Array von ganzen Zahlen in eine 16-Bit-Ganzzahl mit Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1312">The following example attempts to convert each element in an array of integers to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#6)]
 [!code-vb[System.Convert.ToInt16#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1313"><paramref name="value" /> ist größer als <see cref="F:System.Int16.MaxValue" /> oder kleiner als <see cref="F:System.Int16.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1313"><paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" /> or less than <see cref="F:System.Int16.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Long) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(long value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : int64 -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1314">Die zu konvertierende 64-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1314">The 64-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1315">Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl mit Vorzeichen in eine entsprechende 16-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1315">Converts the value of the specified 64-bit signed integer to an equivalent 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1316">Eine 16-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1316">A 16-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1317">Im folgenden Beispiel wird versucht, jedes Element in einem Array mit langen Ganzzahlen in eine 16-Bit-Ganzzahl mit Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1317">The following example attempts to convert each element in an array of long integers to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#7)]
 [!code-vb[System.Convert.ToInt16#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1318"><paramref name="value" /> ist größer als <see cref="F:System.Int16.MaxValue" /> oder kleiner als <see cref="F:System.Int16.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1318"><paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" /> or less than <see cref="F:System.Int16.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Object) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : obj -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1319">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert, oder <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1319">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="d59d4-1320">Konvertiert den Wert des angegebenen Objekts in eine 16-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1320">Converts the value of the specified object to a 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1321">Eine 16-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1321">A 16-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-1322">Wenn `value` nicht `null`wird, umschließt diese Methode einen aufzurufenden <xref:System.IConvertible.ToInt16%2A?displayProperty=nameWithType> Implementierung des zugrunde liegenden Typs `value`.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1322">If `value` is not `null`, this method wraps a call to the <xref:System.IConvertible.ToInt16%2A?displayProperty=nameWithType> implementation of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-1323">Im folgenden Beispiel wird versucht, jedes Element in einem Objekt Array in eine 16-Bit-Ganzzahl mit Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1323">The following example attempts to convert each element in an object array to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#8)]
 [!code-vb[System.Convert.ToInt16#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-1324"><paramref name="value" /> weist kein geeignetes Format für einen <see cref="T:System.Int16" />-Typ auf.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1324"><paramref name="value" /> is not in an appropriate format for an <see cref="T:System.Int16" /> type.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-1325">Die <paramref name="value" />-Schnittstelle wird von <see cref="T:System.IConvertible" /> nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1325"><paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span></span>  
  
<span data-ttu-id="d59d4-1326">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-1326">-or-</span></span> 
<span data-ttu-id="d59d4-1327">Die Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1327">The conversion is not supported.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1328"><paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Int16.MinValue" /> oder größer als <see cref="F:System.Int16.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1328"><paramref name="value" /> represents a number that is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As SByte) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : sbyte -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1329">Die zu konvertierende 8-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1329">The 8-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1330">Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl mit Vorzeichen in die entsprechende 16-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1330">Converts the value of the specified 8-bit signed integer to the equivalent 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1331">Eine 8-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1331">A 8-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1332">Im folgenden Beispiel wird jedes Element in einem Array von signierten Bytes in eine 16-Bit-Ganzzahl mit Vorzeichen konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1332">The following example converts each element in an array of signed bytes to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#9)]
 [!code-vb[System.Convert.ToInt16#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Single) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(float value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : single -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1333">Die zu konvertierende Gleitkommazahl mit einfacher Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1333">The single-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1334">Konvertiert den Wert der angegebenen Gleitkommazahl mit einfacher Genauigkeit in die entsprechende 16-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1334">Converts the value of the specified single-precision floating-point number to an equivalent 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1335"><paramref name="value" />, auf die nächste 16-Bit-Ganzzahl mit Vorzeichen gerundet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1335"><paramref name="value" />, rounded to the nearest 16-bit signed integer.</span></span> <span data-ttu-id="d59d4-1336">Wenn <paramref name="value" /> genau zwischen zwei ganzen Zahlen liegt, wird die gerade Zahl zurückgegeben (d. h. 4,5 wird in 4 und 5,5 in 6 konvertiert).</span><span class="sxs-lookup"><span data-stu-id="d59d4-1336">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1337">Im folgenden Beispiel wird versucht, jedes Element in einem Array von <xref:System.Single>-Werten in eine 16-Bit-Ganzzahl mit Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1337">The following example attempts to convert each element in an array of <xref:System.Single> values to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#10)]
 [!code-vb[System.Convert.ToInt16#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1338"><paramref name="value" /> ist größer als <see cref="F:System.Int16.MaxValue" /> oder kleiner als <see cref="F:System.Int16.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1338"><paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" /> or less than <see cref="F:System.Int16.MinValue" />.</span></span></exception>
        <altmember cref="T:System.Single" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As String) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : string -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1339">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1339">A string that contains the number to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1340">Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl in eine entsprechende 16-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1340">Converts the specified string representation of a number to an equivalent 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1341">Eine 16-Bit-Ganzzahl mit Vorzeichen, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1341">A 16-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-1342">Die Verwendung der <xref:System.Convert.ToInt16%28System.String%29>-Methode entspricht der Übergabe von `value` an die <xref:System.Int16.Parse%28System.String%29?displayProperty=nameWithType>-Methode.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1342">Using the <xref:System.Convert.ToInt16%28System.String%29> method is equivalent to passing `value` to the <xref:System.Int16.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="d59d4-1343">`value` wird mithilfe der Formatierungskonventionen der aktuellen Threadkultur interpretiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1343">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="d59d4-1344">Wenn eine Ausnahme nicht behandelt werden soll, wenn bei der Konvertierung ein Fehler auftritt, können Sie stattdessen die <xref:System.Int16.TryParse%2A?displayProperty=nameWithType>-Methode abrufen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1344">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Int16.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="d59d4-1345">Sie gibt einen <xref:System.Boolean> Wert zurück, der angibt, ob die Konvertierung erfolgreich war oder fehlgeschlagen ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1345">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-1346">Im folgenden Beispiel werden Zeichen folgen Darstellungen von 16-Bit-Ganzzahlen mit der `ToInt16`-Methode unter Verwendung der Standard Formatierung konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1346">The following example converts string representations of 16-bit integers with the `ToInt16` method, using default formatting.</span></span>  
  
 [!code-cpp[System.Convert.ToSInts_String#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToSInts_String/CPP/toint16.cpp#3)]
 [!code-csharp[System.Convert.ToSInts_String#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToSInts_String/CS/toint16.cs#3)]
 [!code-vb[System.Convert.ToSInts_String#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToSInts_String/VB/toint16.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-1347"><paramref name="value" /> besteht nicht aus einem optionalen Vorzeichen und einer Folge von Ziffern (0 bis 9).</span><span class="sxs-lookup"><span data-stu-id="d59d4-1347"><paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1348"><paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Int16.MinValue" /> oder größer als <see cref="F:System.Int16.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1348"><paramref name="value" /> represents a number that is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Int16.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As UShort) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : uint16 -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1349">Die zu konvertierende 16-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1349">The 16-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1350">Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl ohne Vorzeichen in die entsprechende 16-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1350">Converts the value of the specified 16-bit unsigned integer to the equivalent 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1351">Eine 16-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1351">A 16-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1352">Im folgenden Beispiel wird versucht, jedes Element in einem Array von 16-Bit-Ganzzahlen ohne Vorzeichen in eine 16-Bit-Ganzzahl mit Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1352">The following example attempts to convert each element in an array of unsigned 16-bit integers to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#11)]
 [!code-vb[System.Convert.ToInt16#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1353"><paramref name="value" /> ist größer als <see cref="F:System.Int16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1353"><paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As UInteger) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : uint32 -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1354">Die zu konvertierende 32-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1354">The 32-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1355">Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende 16-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1355">Converts the value of the specified 32-bit unsigned integer to an equivalent 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1356">Eine 16-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1356">A 16-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1357">Im folgenden Beispiel wird versucht, jedes Element in einem Array von Ganzzahlen ohne Vorzeichen in eine 16-Bit-Ganzzahl mit Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1357">The following example attempts to convert each element in an array of unsigned integers to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#12)]
 [!code-vb[System.Convert.ToInt16#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1358"><paramref name="value" /> ist größer als <see cref="F:System.Int16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1358"><paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As ULong) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : uint64 -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1359">Die zu konvertierende 64-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1359">The 64-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1360">Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende 16-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1360">Converts the value of the specified 64-bit unsigned integer to an equivalent 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1361">Eine 16-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1361">A 16-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1362">Im folgenden Beispiel wird versucht, jedes Element in einem Array von Long-Ganzzahlen ohne Vorzeichen in eine 16-Bit-Ganzzahl mit Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1362">The following example attempts to convert each element in an array of unsigned long integers to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#13)]
 [!code-vb[System.Convert.ToInt16#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1363"><paramref name="value" /> ist größer als <see cref="F:System.Int16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1363"><paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Object, provider As IFormatProvider) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : obj * IFormatProvider -&gt; int16" Usage="System.Convert.ToInt16 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1364">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1364">An object that implements the <see cref="T:System.IConvertible" /> interface.</span></span></param>
        <param name="provider"><span data-ttu-id="d59d4-1365">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1365">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="d59d4-1366">Konvertiert den Wert des angegebenen Objekts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in eine 16-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1366">Converts the value of the specified object to a 16-bit signed integer, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1367">Eine 16-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1367">A 16-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-1368">`provider` ermöglicht es dem Benutzer, kulturspezifische Konvertierungs Informationen zum Inhalt von `value`anzugeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1368">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="d59d4-1369">Wenn `value` z. b. ein <xref:System.String> ist, das eine Zahl darstellt, können `provider` kulturspezifische Informationen über die Notation bereitstellen, die für diese Zahl verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1369">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="d59d4-1370">Die Basis Typen ignorieren `provider`; der-Parameter kann jedoch verwendet werden, wenn `value` ein benutzerdefinierter Typ ist, der die <xref:System.IConvertible>-Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1370">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-1371">Im folgenden Beispiel wird eine Klasse definiert, die <xref:System.IConvertible> und eine Klasse implementiert, die <xref:System.IFormatProvider>implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1371">The following example defines a class that implements <xref:System.IConvertible> and a class that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="d59d4-1372">Objekte der Klasse, die implementiert <xref:System.IConvertible> ein Array von <xref:System.Double> Werten enthalten.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1372">Objects of the class that implements <xref:System.IConvertible> hold an array of <xref:System.Double> values.</span></span> <span data-ttu-id="d59d4-1373">Ein Objekt jeder Klasse wird an die `ToInt16`-Methode übermittelt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1373">An object of each class is passed to the `ToInt16` method.</span></span> <span data-ttu-id="d59d4-1374">Diese Methode gibt einen Durchschnitt des Arrays von <xref:System.Double> Werten zurück, wobei das Objekt verwendet wird, das <xref:System.IFormatProvider> implementiert, um zu bestimmen, wie der Durchschnitt berechnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1374">This method returns an average of the array of <xref:System.Double> values, using the object that implements <xref:System.IFormatProvider> to determine how to calculate the average.</span></span>  
  
 [!code-cpp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CPP/objectifp.cpp#1)]
 [!code-csharp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CS/objectifp.cs#1)]
 [!code-vb[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/VB/objectifp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-1375"><paramref name="value" /> weist kein geeignetes Format für einen <see cref="T:System.Int16" />-Typ auf.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1375"><paramref name="value" /> is not in an appropriate format for an <see cref="T:System.Int16" /> type.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-1376"><paramref name="value" /> implementiert nicht <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1376"><paramref name="value" /> does not implement <see cref="T:System.IConvertible" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1377"><paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Int16.MinValue" /> oder größer als <see cref="F:System.Int16.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1377"><paramref name="value" /> represents a number that is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As String, provider As IFormatProvider) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : string * IFormatProvider -&gt; int16" Usage="System.Convert.ToInt16 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1378">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1378">A string that contains the number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="d59d4-1379">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1379">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="d59d4-1380">Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende 16-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1380">Converts the specified string representation of a number to an equivalent 16-bit signed integer, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1381">Eine 16-Bit-Ganzzahl mit Vorzeichen, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1381">A 16-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-1382">`provider` ist eine <xref:System.IFormatProvider> Instanz, die ein <xref:System.Globalization.NumberFormatInfo>-Objekt abruft.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1382">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="d59d4-1383">Das <xref:System.Globalization.NumberFormatInfo>-Objekt stellt kulturspezifische Informationen zum Format von `value`bereit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1383">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="d59d4-1384">Wenn `provider` `null`ist, wird der <xref:System.Globalization.NumberFormatInfo> für die aktuelle Kultur verwendet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1384">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="d59d4-1385">Wenn eine Ausnahme nicht behandelt werden soll, wenn bei der Konvertierung ein Fehler auftritt, können Sie stattdessen die <xref:System.Int16.TryParse%2A?displayProperty=nameWithType>-Methode abrufen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1385">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Int16.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="d59d4-1386">Sie gibt einen <xref:System.Boolean> Wert zurück, der angibt, ob die Konvertierung erfolgreich war oder fehlgeschlagen ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1386">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-1387">Im folgenden Beispiel werden Zeichen folgen Darstellungen von 16-Bit-Ganzzahlen mit der `ToInt16`-Methode unter Verwendung eines <xref:System.IFormatProvider> Objekts konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1387">The following example converts string representations of 16-bit integers with the `ToInt16` method, using an <xref:System.IFormatProvider> object.</span></span>  
  
 [!code-cpp[System.Convert.ToSInts_String#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToSInts_String/CPP/toint16.cpp#3)]
 [!code-csharp[System.Convert.ToSInts_String#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToSInts_String/CS/toint16.cs#3)]
 [!code-vb[System.Convert.ToSInts_String#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToSInts_String/VB/toint16.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-1388"><paramref name="value" /> besteht nicht aus einem optionalen Vorzeichen und einer Folge von Ziffern (0 bis 9).</span><span class="sxs-lookup"><span data-stu-id="d59d4-1388"><paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1389"><paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Int16.MinValue" /> oder größer als <see cref="F:System.Int16.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1389"><paramref name="value" /> represents a number that is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Int16.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (string value, int fromBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(string value, int32 fromBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As String, fromBase As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::String ^ value, int fromBase);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : string * int -&gt; int16" Usage="System.Convert.ToInt16 (value, fromBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1390">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1390">A string that contains the number to convert.</span></span></param>
        <param name="fromBase"><span data-ttu-id="d59d4-1391">Die Basis der Zahl in <paramref name="value" />, die 2, 8, 10 oder 16 sein muss.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1391">The base of the number in <paramref name="value" />, which must be 2, 8, 10, or 16.</span></span></param>
        <summary><span data-ttu-id="d59d4-1392">Konvertiert die Zeichenfolgendarstellung einer Zahl in einer angegebenen Basis in eine entsprechende 16-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1392">Converts the string representation of a number in a specified base to an equivalent 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1393">Eine 16-Bit-Ganzzahl mit Vorzeichen, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1393">A 16-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-1394">Wenn `fromBase` 16 ist, können Sie die durch den `value`-Parameter angegebene Zahl mit "0x" oder "0x" als Präfix versehen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1394">If `fromBase` is 16, you can prefix the number specified by the `value` parameter with "0x" or "0X".</span></span>  
  
 <span data-ttu-id="d59d4-1395">Da das negative Vorzeichen für numerische Darstellungen ohne Basis 10 nicht unterstützt wird, geht die <xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29>-Methode davon aus, dass negative Zahlen eine zwei Komplement Darstellung verwenden.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1395">Because the negative sign is not supported for non-base 10 numeric representations, the <xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29> method assumes that negative numbers use two's complement representation.</span></span> <span data-ttu-id="d59d4-1396">Mit anderen Worten: die Methode interpretiert immer das binäre Bit der höchsten Ordnung einer Ganzzahl (Bit 15) als Vorzeichen-Bit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1396">In other words, the method always interprets the highest-order binary bit of an integer (bit 15) as its sign bit.</span></span> <span data-ttu-id="d59d4-1397">Folglich ist es möglich, Code zu schreiben, in dem eine nicht-Base-10-Zahl außerhalb des Bereichs des <xref:System.Int16>-Datentyps in einen <xref:System.Int16>-Wert konvertiert wird, ohne dass die Methode eine Ausnahme auslöst.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1397">As a result, it is possible to write code in which a non-base 10 number that is out of the range of the <xref:System.Int16> data type is converted to an <xref:System.Int16> value without the method throwing an exception.</span></span> <span data-ttu-id="d59d4-1398">Im folgenden Beispiel werden <xref:System.Int16.MaxValue?displayProperty=nameWithType> um eins erhöht, die resultierende Zahl in die hexadezimale Zeichen folgen Darstellung konvertiert und dann die <xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29>-Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1398">The following example increments <xref:System.Int16.MaxValue?displayProperty=nameWithType> by one, converts the resulting number to its hexadecimal string representation, and then calls the <xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="d59d4-1399">Anstatt eine Ausnahme auszulösen, zeigt die Methode die Meldung "0X8000 konvertiert in-32768" an.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1399">Instead of throwing an exception, the method displays the message, "0x8000 converts to -32768."</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#5)]
 [!code-vb[System.Convert.BaseConversion#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#5)]  
  
 <span data-ttu-id="d59d4-1400">Beim Durchführen von binären Vorgängen oder numerischen Konvertierungen liegt es immer in der Verantwortung des Entwicklers, zu überprüfen, ob eine Methode die entsprechende numerische Darstellung verwendet, um einen bestimmten Wert zu interpretieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1400">When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method is using the appropriate numeric representation to interpret a particular value.</span></span> <span data-ttu-id="d59d4-1401">Wie im folgenden Beispiel veranschaulicht, können Sie sicherstellen, dass die-Methode Überläufe entsprechend behandelt, indem Sie zuerst das Vorzeichen des numerischen Werts abrufen, bevor Sie es in die hexadezimale Zeichen folgen Darstellung umwandelt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1401">As the following example illustrates, you can ensure that the method handles overflows appropriately by first retrieving the sign of the numeric value before converting it to its hexadecimal string representation.</span></span> <span data-ttu-id="d59d4-1402">Lösen Sie eine Ausnahme aus, wenn der ursprüngliche Wert positiv war, aber die Konvertierung zurück in eine ganze Zahl einen negativen Wert ergibt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1402">Throw an exception if the original value was positive but the conversion back to an integer yields a negative value.</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#6)]
 [!code-vb[System.Convert.BaseConversion#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#6)]  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-1403">Im folgenden Beispiel wird versucht, jedes Element in einem Zeichen folgen Array als hexadezimale Zeichenfolge zu interpretieren und in eine 16-Bit-Ganzzahl mit Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1403">The following example attempts to interpret each element in a string array as a hexadecimal string and to convert it to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_2.cs#14)]
 [!code-vb[System.Convert.ToInt16#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_2.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d59d4-1404"><paramref name="fromBase" /> ist nicht 2, 8, 10 oder 16.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1404"><paramref name="fromBase" /> is not 2, 8, 10, or 16.</span></span>  
  
<span data-ttu-id="d59d4-1405">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-1405">-or-</span></span> 
 <span data-ttu-id="d59d4-1406"><paramref name="value" />, der eine nicht zur Basis 10 gehörende Zahl mit Vorzeichen darstellt, weist ein negatives Vorzeichen als Präfix auf.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1406"><paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d59d4-1407"><paramref name="value" /> ist <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1407"><paramref name="value" /> is <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-1408"><paramref name="value" /> enthält ein Zeichen, das in der von <paramref name="fromBase" /> angegebenen Basis keine gültige Ziffer ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1408"><paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span></span> <span data-ttu-id="d59d4-1409">Die Ausnahmemeldung gibt an, dass keine zu konvertierenden Ziffern vorhanden sind, wenn das erste Zeichen in <paramref name="value" /> ungültig ist. Andernfalls gibt die Meldung an, dass <paramref name="value" /> ungültige nachfolgende Zeichen enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1409">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1410"><paramref name="value" />, der eine nicht zur Basis 10 gehörende Zahl mit Vorzeichen darstellt, weist ein negatives Vorzeichen als Präfix auf.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1410"><paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span></span>  
  
<span data-ttu-id="d59d4-1411">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-1411">-or-</span></span> 
 <span data-ttu-id="d59d4-1412"><paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Int16.MinValue" /> oder größer als <see cref="F:System.Int16.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1412"><paramref name="value" /> represents a number that is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToInt32">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d59d4-1413">Konvertiert einen angegebenen Wert in eine 32-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1413">Converts a specified value to a 32-bit signed integer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(bool value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : bool -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1414">Der zu konvertierende boolesche Wert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1414">The Boolean value to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1415">Konvertiert den angegebenen booleschen Wert in die entsprechende 32-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1415">Converts the specified Boolean value to the equivalent 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1416">Die Zahl 1, wenn <paramref name="value" /><see langword="true" /> ist, andernfalls 0 (null).</span><span class="sxs-lookup"><span data-stu-id="d59d4-1416">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1417">Im folgenden Beispiel werden die <xref:System.Boolean> Werte `true` und `false` in ganze Zahlen konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1417">The following example converts the <xref:System.Boolean> values `true` and `false` to integers.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#1)]
 [!code-vb[System.Convert.ToInt32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Byte) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : byte -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1418">Die zu konvertierende 8-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1418">The 8-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1419">Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl ohne Vorzeichen in die entsprechende 32-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1419">Converts the value of the specified 8-bit unsigned integer to the equivalent 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1420">Eine 32-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1420">A 32-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1421">Im folgenden Beispiel wird jedes Element in einem Bytearray in eine ganze Zahl konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1421">The following example converts each element in an array of bytes to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#2)]
 [!code-vb[System.Convert.ToInt32#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(char value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : char -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1422">Das zu konvertierende Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1422">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1423">Konvertiert den Wert des angegebenen Unicode-Zeichens in die entsprechende 32-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1423">Converts the value of the specified Unicode character to the equivalent 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1424">Eine 32-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1424">A 32-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-1425">Die <xref:System.Convert.ToInt32%28System.Char%29>-Methode gibt eine 32-Bit-Ganzzahl mit Vorzeichen zurück, die die UTF-16-codierte Code Einheit des `value` Arguments darstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1425">The <xref:System.Convert.ToInt32%28System.Char%29> method returns a 32-bit signed integer that represents the UTF-16 encoded code unit of the `value` argument.</span></span> <span data-ttu-id="d59d4-1426">Wenn `value` kein niedriges Ersatz Zeichen oder ein hohes Ersatz Zeichen ist, stellt dieser Rückgabewert auch den Unicode-Codepunkt des Werts dar.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1426">If `value` is not a low surrogate or a high surrogate, this return value also represents the Unicode code point of value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-1427">Im folgenden Beispiel wird jedes Element in einem Array von <xref:System.Char>-Werten in eine ganze Zahl konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1427">The following example converts each element in an array of <xref:System.Char> values to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#3)]
 [!code-vb[System.Convert.ToInt32#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : DateTime -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1428">Der Datums- und Uhrzeitwert, der konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1428">The date and time value to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1429">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1429">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1430">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1430">This conversion is not supported.</span></span> <span data-ttu-id="d59d4-1431">Es wird kein Wert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1431">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-1432">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1432">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : decimal -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1433">Die zu konvertierende Dezimalzahl.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1433">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1434">Konvertiert den Wert der angegebenen Dezimalzahl in eine entsprechende 32-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1434">Converts the value of the specified decimal number to an equivalent 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1435"><paramref name="value" />, auf die nächste 32-Bit-Ganzzahl mit Vorzeichen gerundet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1435"><paramref name="value" />, rounded to the nearest 32-bit signed integer.</span></span> <span data-ttu-id="d59d4-1436">Wenn <paramref name="value" /> genau zwischen zwei ganzen Zahlen liegt, wird die gerade Zahl zurückgegeben (d. h. 4,5 wird in 4 und 5,5 in 6 konvertiert).</span><span class="sxs-lookup"><span data-stu-id="d59d4-1436">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1437">Im folgenden Beispiel wird versucht, jedes Element in einem Array von <xref:System.Decimal>-Werten in eine ganze Zahl zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1437">The following example attempts to convert each element in an array of <xref:System.Decimal> values to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#4)]
 [!code-vb[System.Convert.ToInt32#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1438"><paramref name="value" /> ist größer als <see cref="F:System.Int32.MaxValue" /> oder kleiner als <see cref="F:System.Int32.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1438"><paramref name="value" /> is greater than <see cref="F:System.Int32.MaxValue" /> or less than <see cref="F:System.Int32.MinValue" />.</span></span></exception>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Double) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(double value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : double -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1439">Die zu konvertierende Gleitkommazahl mit doppelter Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1439">The double-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1440">Konvertiert den Wert der angegebenen Gleitkommazahl mit doppelter Genauigkeit in eine entsprechende 32-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1440">Converts the value of the specified double-precision floating-point number to an equivalent 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1441"><paramref name="value" />, auf die nächste 32-Bit-Ganzzahl mit Vorzeichen gerundet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1441"><paramref name="value" />, rounded to the nearest 32-bit signed integer.</span></span> <span data-ttu-id="d59d4-1442">Wenn <paramref name="value" /> genau zwischen zwei ganzen Zahlen liegt, wird die gerade Zahl zurückgegeben (d. h. 4,5 wird in 4 und 5,5 in 6 konvertiert).</span><span class="sxs-lookup"><span data-stu-id="d59d4-1442">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1443">Im folgenden Beispiel wird versucht, jedes Element in einem Array von <xref:System.Double>-Werten in eine ganze Zahl zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1443">The following example attempts to convert each element in an array of <xref:System.Double> values to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#5)]
 [!code-vb[System.Convert.ToInt32#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1444"><paramref name="value" /> ist größer als <see cref="F:System.Int32.MaxValue" /> oder kleiner als <see cref="F:System.Int32.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1444"><paramref name="value" /> is greater than <see cref="F:System.Int32.MaxValue" /> or less than <see cref="F:System.Int32.MinValue" />.</span></span></exception>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Short) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(short value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : int16 -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1445">Die zu konvertierende 16-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1445">The 16-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1446">Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl mit Vorzeichen in eine entsprechende 32-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1446">Converts the value of the specified 16-bit signed integer to an equivalent 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1447">Eine 32-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1447">A 32-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1448">Im folgenden Beispiel wird jedes Element in einem Array von 16-Bit-Ganzzahlen mit Vorzeichen in eine ganze Zahl konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1448">The following example converts each element in an array of 16-bit signed integers to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#6)]
 [!code-vb[System.Convert.ToInt32#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(int value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : int -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1449">Die zurückzugebende 32-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1449">The 32-bit signed integer to return.</span></span></param>
        <summary><span data-ttu-id="d59d4-1450">Gibt die angegebene 32-Bit-Ganzzahl mit Vorzeichen zurück. Es wird keine wirkliche Konvertierung durchgeführt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1450">Returns the specified 32-bit signed integer; no actual conversion is performed.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1451"><paramref name="value" /> wird unverändert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1451"><paramref name="value" /> is returned unchanged.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Long) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(long value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : int64 -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1452">Die zu konvertierende 64-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1452">The 64-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1453">Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl mit Vorzeichen in eine entsprechende 32-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1453">Converts the value of the specified 64-bit signed integer to an equivalent 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1454">Eine 32-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1454">A 32-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1455">Im folgenden Beispiel wird versucht, jedes Element in einem Array von langen ganzen Zahlen in eine ganze Zahl zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1455">The following example attempts to convert each element in an array of long integers to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#7)]
 [!code-vb[System.Convert.ToInt32#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1456"><paramref name="value" /> ist größer als <see cref="F:System.Int32.MaxValue" /> oder kleiner als <see cref="F:System.Int32.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1456"><paramref name="value" /> is greater than <see cref="F:System.Int32.MaxValue" /> or less than <see cref="F:System.Int32.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : obj -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1457">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert, oder <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1457">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="d59d4-1458">Konvertiert den Wert des angegebenen Objekts in eine 32-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1458">Converts the value of the specified object to a 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1459">Eine 32-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1459">A 32-bit signed integer equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-1460">Wenn`value` nicht `null`wird, umschließt diese Methode einen aufzurufenden <xref:System.IConvertible.ToInt32%2A?displayProperty=nameWithType> Implementierung des zugrunde liegenden Typs `value`.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1460">If`value` is not `null`, this method wraps a call to the <xref:System.IConvertible.ToInt32%2A?displayProperty=nameWithType> implementation of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-1461">Im folgenden Beispiel wird versucht, jedes Element in einem Objekt Array in eine ganze Zahl zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1461">The following example attempts to convert each element in an object array to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#8)]
 [!code-vb[System.Convert.ToInt32#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-1462"><paramref name="value" /> weist kein geeignetes Format auf.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1462"><paramref name="value" /> is not in an appropriate format.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-1463">Die <paramref name="value" />-Schnittstelle wird von <see cref="T:System.IConvertible" /> nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1463"><paramref name="value" /> does not implement the  <see cref="T:System.IConvertible" /> interface.</span></span>  
  
<span data-ttu-id="d59d4-1464">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-1464">-or-</span></span> 
<span data-ttu-id="d59d4-1465">Die Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1465">The conversion is not supported.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1466"><paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Int32.MinValue" /> oder größer als <see cref="F:System.Int32.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1466"><paramref name="value" /> represents a number that is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As SByte) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : sbyte -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1467">Die zu konvertierende 8-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1467">The 8-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1468">Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl mit Vorzeichen in die entsprechende 32-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1468">Converts the value of the specified 8-bit signed integer to the equivalent 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1469">Eine 8-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1469">A 8-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1470">Im folgenden Beispiel wird jedes Element in einem Array von signierten Bytes in eine ganze Zahl konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1470">The following example converts each element in an array of signed bytes to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#9)]
 [!code-vb[System.Convert.ToInt32#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Single) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(float value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : single -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1471">Die zu konvertierende Gleitkommazahl mit einfacher Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1471">The single-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1472">Konvertiert den Wert der angegebenen Gleitkommazahl mit einfacher Genauigkeit in die entsprechende 32-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1472">Converts the value of the specified single-precision floating-point number to an equivalent 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1473"><paramref name="value" />, auf die nächste 32-Bit-Ganzzahl mit Vorzeichen gerundet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1473"><paramref name="value" />, rounded to the nearest 32-bit signed integer.</span></span> <span data-ttu-id="d59d4-1474">Wenn <paramref name="value" /> genau zwischen zwei ganzen Zahlen liegt, wird die gerade Zahl zurückgegeben (d. h. 4,5 wird in 4 und 5,5 in 6 konvertiert).</span><span class="sxs-lookup"><span data-stu-id="d59d4-1474">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1475">Im folgenden Beispiel wird versucht, jedes Element in einem Array von <xref:System.Single>-Werten in eine ganze Zahl zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1475">The following example attempts to convert each element in an array of <xref:System.Single> values to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#10)]
 [!code-vb[System.Convert.ToInt32#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1476"><paramref name="value" /> ist größer als <see cref="F:System.Int32.MaxValue" /> oder kleiner als <see cref="F:System.Int32.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1476"><paramref name="value" /> is greater than <see cref="F:System.Int32.MaxValue" /> or less than <see cref="F:System.Int32.MinValue" />.</span></span></exception>
        <altmember cref="T:System.Single" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : string -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1477">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1477">A string that contains the number to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1478">Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl in die entsprechende 32-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1478">Converts the specified string representation of a number to an equivalent 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1479">Eine 32-Bit-Ganzzahl mit Vorzeichen, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1479">A 32-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-1480">Die Verwendung der <xref:System.Convert.ToInt32%28System.String%29>-Methode entspricht der Übergabe von `value` an die <xref:System.Int32.Parse%28System.String%29?displayProperty=nameWithType>-Methode.`value`</span><span class="sxs-lookup"><span data-stu-id="d59d4-1480">Using the <xref:System.Convert.ToInt32%28System.String%29> method is equivalent to passing `value` to the <xref:System.Int32.Parse%28System.String%29?displayProperty=nameWithType> method.`value`</span></span> <span data-ttu-id="d59d4-1481">wird unter Verwendung der Formatierungs Konventionen der aktuellen Thread Kultur interpretiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1481">is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="d59d4-1482">Wenn eine Ausnahme nicht behandelt werden soll, wenn bei der Konvertierung ein Fehler auftritt, können Sie stattdessen die <xref:System.Int32.TryParse%2A?displayProperty=nameWithType>-Methode abrufen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1482">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="d59d4-1483">Sie gibt einen <xref:System.Boolean> Wert zurück, der angibt, ob die Konvertierung erfolgreich war oder fehlgeschlagen ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1483">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-1484">Im folgenden Beispiel wird versucht, jedes Element in einem numerischen Zeichen folgen Array in eine ganze Zahl zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1484">The following example attempts to convert each element in a numeric string array to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#11)]
 [!code-vb[System.Convert.ToInt32#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-1485"><paramref name="value" /> besteht nicht aus einem optionalen Vorzeichen und einer Folge von Ziffern (0 bis 9).</span><span class="sxs-lookup"><span data-stu-id="d59d4-1485"><paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1486"><paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Int32.MinValue" /> oder größer als <see cref="F:System.Int32.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1486"><paramref name="value" /> represents a number that is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As UShort) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : uint16 -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1487">Die zu konvertierende 16-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1487">The 16-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1488">Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl ohne Vorzeichen in die entsprechende 32-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1488">Converts the value of the specified 16-bit unsigned integer to the equivalent 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1489">Eine 32-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1489">A 32-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1490">Im folgenden Beispiel wird jedes Element in einem Array von 16-Bit-Ganzzahlen ohne Vorzeichen in eine ganze Zahl konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1490">The following example converts each element in an array of 16-bit unsigned integers to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#12)]
 [!code-vb[System.Convert.ToInt32#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As UInteger) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : uint32 -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1491">Die zu konvertierende 32-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1491">The 32-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1492">Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende 32-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1492">Converts the value of the specified 32-bit unsigned integer to an equivalent 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1493">Eine 32-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1493">A 32-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1494">Im folgenden Beispiel wird versucht, jedes Element in einem Array von Ganzzahlen ohne Vorzeichen in eine Ganzzahl mit Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1494">The following example attempts to convert each element in an array of unsigned integers to a signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#13)]
 [!code-vb[System.Convert.ToInt32#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1495"><paramref name="value" /> ist größer als <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1495"><paramref name="value" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As ULong) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : uint64 -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1496">Die zu konvertierende 64-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1496">The 64-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1497">Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende 32-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1497">Converts the value of the specified 64-bit unsigned integer to an equivalent 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1498">Eine 32-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1498">A 32-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1499">Im folgenden Beispiel wird versucht, jedes Element in einem Array von Long-Ganzzahlen ohne Vorzeichen in eine Ganzzahl mit Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1499">The following example attempts to convert each element in an array of unsigned long integers to a signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#14)]
 [!code-vb[System.Convert.ToInt32#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1500"><paramref name="value" /> ist größer als <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1500"><paramref name="value" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Object, provider As IFormatProvider) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : obj * IFormatProvider -&gt; int" Usage="System.Convert.ToInt32 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1501">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1501">An object that implements the <see cref="T:System.IConvertible" /> interface.</span></span></param>
        <param name="provider"><span data-ttu-id="d59d4-1502">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1502">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="d59d4-1503">Konvertiert den Wert des angegebenen Objekts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in eine 32-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1503">Converts the value of the specified object to a 32-bit signed integer, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1504">Eine 32-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1504">A 32-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-1505">Der Rückgabewert ist das Ergebnis des Aufrufs der <xref:System.IConvertible.ToInt32%2A?displayProperty=nameWithType>-Methode des zugrunde liegenden Typs `value`.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1505">The return value is the result of invoking the <xref:System.IConvertible.ToInt32%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="d59d4-1506">`provider` ermöglicht es dem Benutzer, kulturspezifische Konvertierungs Informationen zum Inhalt von `value`anzugeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1506">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="d59d4-1507">Wenn `value` z. b. ein <xref:System.String> ist, das eine Zahl darstellt, können `provider` kulturspezifische Informationen über die Notation bereitstellen, die für diese Zahl verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1507">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="d59d4-1508">Die Basis Typen ignorieren `provider`; der-Parameter kann jedoch verwendet werden, wenn `value` ein benutzerdefinierter Typ ist, der die <xref:System.IConvertible>-Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1508">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-1509">Im folgenden Beispiel wird eine Klasse definiert, die <xref:System.IConvertible> und eine Klasse implementiert, die <xref:System.IFormatProvider>implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1509">The following example defines a class that implements <xref:System.IConvertible> and a class that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="d59d4-1510">Objekte der Klasse, die implementiert <xref:System.IConvertible> ein Array von <xref:System.Double> Werten enthalten.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1510">Objects of the class that implements <xref:System.IConvertible> hold an array of <xref:System.Double> values.</span></span> <span data-ttu-id="d59d4-1511">Ein Objekt jeder Klasse wird an die `ToInt32`-Methode übermittelt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1511">An object of each class is passed to the `ToInt32` method.</span></span> <span data-ttu-id="d59d4-1512">Diese Methode gibt einen Durchschnitt des Arrays von <xref:System.Double> Werten zurück, wobei das Objekt verwendet wird, das <xref:System.IFormatProvider> implementiert, um zu bestimmen, wie der Durchschnitt berechnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1512">This method returns an average of the array of <xref:System.Double> values, using the object that implements <xref:System.IFormatProvider> to determine how to calculate the average.</span></span>  
  
 [!code-cpp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CPP/objectifp.cpp#1)]
 [!code-csharp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CS/objectifp.cs#1)]
 [!code-vb[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/VB/objectifp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-1513"><paramref name="value" /> weist kein geeignetes Format auf.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1513"><paramref name="value" /> is not in an appropriate format.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-1514"><paramref name="value" /> implementiert nicht <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1514"><paramref name="value" /> does not implement <see cref="T:System.IConvertible" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1515"><paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Int32.MinValue" /> oder größer als <see cref="F:System.Int32.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1515"><paramref name="value" /> represents a number that is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As String, provider As IFormatProvider) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : string * IFormatProvider -&gt; int" Usage="System.Convert.ToInt32 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1516">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1516">A string that contains the number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="d59d4-1517">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1517">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="d59d4-1518">Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende 32-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1518">Converts the specified string representation of a number to an equivalent 32-bit signed integer, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1519">Eine 32-Bit-Ganzzahl mit Vorzeichen, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1519">A 32-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-1520">Der Rückgabewert ist das Ergebnis des Aufrufs der <xref:System.Int32.Parse%2A?displayProperty=nameWithType>-Methode auf `value`.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1520">The return value is the result of invoking the <xref:System.Int32.Parse%2A?displayProperty=nameWithType> method on `value`.</span></span>  
  
 <span data-ttu-id="d59d4-1521">`provider` ist eine <xref:System.IFormatProvider> Instanz, die ein <xref:System.Globalization.NumberFormatInfo>-Objekt abruft.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1521">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="d59d4-1522">Das <xref:System.Globalization.NumberFormatInfo>-Objekt stellt kulturspezifische Informationen zum Format von `value`bereit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1522">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="d59d4-1523">Wenn `provider` `null`ist, wird der <xref:System.Globalization.NumberFormatInfo> für die aktuelle Kultur verwendet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1523">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="d59d4-1524">Wenn eine Ausnahme nicht behandelt werden soll, wenn bei der Konvertierung ein Fehler auftritt, können Sie stattdessen die <xref:System.Int32.TryParse%2A?displayProperty=nameWithType>-Methode abrufen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1524">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="d59d4-1525">Sie gibt einen <xref:System.Boolean> Wert zurück, der angibt, ob die Konvertierung erfolgreich war oder fehlgeschlagen ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1525">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-1526">Im folgenden Beispiel wird ein benutzerdefiniertes <xref:System.Globalization.NumberFormatInfo> Objekt definiert, das die Zeichenfolge "POS" als positives Vorzeichen und die Zeichenfolge "NETg" als negatives Vorzeichen erkennt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1526">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> object that recognizes the string "pos" as the positive sign and the string "neg" as the negative sign.</span></span> <span data-ttu-id="d59d4-1527">Anschließend wird versucht, jedes Element eines numerischen Zeichen folgen Arrays mit diesem Anbieter und dem <xref:System.Globalization.NumberFormatInfo> Anbieter für die invariante Kultur in eine ganze Zahl zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1527">It then attempts to convert each element of a numeric string array to an integer using both this provider and the <xref:System.Globalization.NumberFormatInfo> provider for the invariant culture.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_2.cs#15)]
 [!code-vb[System.Convert.ToInt32#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_2.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-1528"><paramref name="value" /> besteht nicht aus einem optionalen Vorzeichen und einer Folge von Ziffern (0 bis 9).</span><span class="sxs-lookup"><span data-stu-id="d59d4-1528"><paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1529"><paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Int32.MinValue" /> oder größer als <see cref="F:System.Int32.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1529"><paramref name="value" /> represents a number that is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (string value, int fromBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(string value, int32 fromBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As String, fromBase As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::String ^ value, int fromBase);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : string * int -&gt; int" Usage="System.Convert.ToInt32 (value, fromBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1530">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1530">A string that contains the number to convert.</span></span></param>
        <param name="fromBase"><span data-ttu-id="d59d4-1531">Die Basis der Zahl in <paramref name="value" />, die 2, 8, 10 oder 16 sein muss.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1531">The base of the number in <paramref name="value" />, which must be 2, 8, 10, or 16.</span></span></param>
        <summary><span data-ttu-id="d59d4-1532">Konvertiert die Zeichenfolgendarstellung einer Zahl in einer angegebenen Basis in eine entsprechende 32-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1532">Converts the string representation of a number in a specified base to an equivalent 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1533">Eine 32-Bit-Ganzzahl mit Vorzeichen, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1533">A 32-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-1534">Wenn `fromBase` 16 ist, können Sie die durch den `value`-Parameter angegebene Zahl mit "0x" oder "0x" als Präfix versehen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1534">If `fromBase` is 16, you can prefix the number specified by the `value` parameter with "0x" or "0X".</span></span>  
  
 <span data-ttu-id="d59d4-1535">Da das negative Vorzeichen für numerische Darstellungen ohne Basis 10 nicht unterstützt wird, geht die <xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29>-Methode davon aus, dass negative Zahlen eine zwei Komplement Darstellung verwenden.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1535">Because the negative sign is not supported for non-base 10 numeric representations, the <xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29> method assumes that negative numbers use two's complement representation.</span></span> <span data-ttu-id="d59d4-1536">Mit anderen Worten: die Methode interpretiert immer das binäre Bit der höchsten Ordnung einer Ganzzahl (Bit 31) als Signier Bit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1536">In other words, the method always interprets the highest-order binary bit of an integer (bit 31) as its sign bit.</span></span> <span data-ttu-id="d59d4-1537">Folglich ist es möglich, Code zu schreiben, in dem eine nicht-Base-10-Zahl außerhalb des Bereichs des <xref:System.Int32>-Datentyps in einen <xref:System.Int32>-Wert konvertiert wird, ohne dass die Methode eine Ausnahme auslöst.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1537">As a result, it is possible to write code in which a non-base 10 number that is out of the range of the <xref:System.Int32> data type is converted to an <xref:System.Int32> value without the method throwing an exception.</span></span> <span data-ttu-id="d59d4-1538">Im folgenden Beispiel werden <xref:System.Int32.MaxValue?displayProperty=nameWithType> um eins erhöht, die resultierende Zahl in die hexadezimale Zeichen folgen Darstellung konvertiert und dann die <xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29>-Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1538">The following example increments <xref:System.Int32.MaxValue?displayProperty=nameWithType> by one, converts the resulting number to its hexadecimal string representation, and then calls the <xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="d59d4-1539">Anstatt eine Ausnahme auszulösen, zeigt die Methode die Meldung "0x80000000 konvertiert in-2147483648" an.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1539">Instead of throwing an exception, the method displays the message, "0x80000000 converts to -2147483648."</span></span>  
  
 [!code-cpp[System.Convert.BaseConversion#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cpp/toint_str_int32.cpp#1)]
 [!code-csharp[System.Convert.BaseConversion#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#1)]
 [!code-vb[System.Convert.BaseConversion#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#1)]  
  
 <span data-ttu-id="d59d4-1540">Beim Durchführen von binären Vorgängen oder numerischen Konvertierungen liegt es immer in der Verantwortung des Entwicklers, zu überprüfen, ob eine Methode die entsprechende numerische Darstellung verwendet, um einen bestimmten Wert zu interpretieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1540">When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method is using the appropriate numeric representation to interpret a particular value.</span></span> <span data-ttu-id="d59d4-1541">Wie im folgenden Beispiel veranschaulicht, können Sie sicherstellen, dass die-Methode Überläufe entsprechend behandelt, indem Sie zuerst das Vorzeichen des numerischen Werts abrufen, bevor Sie es in die hexadezimale Zeichen folgen Darstellung umwandelt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1541">As the following example illustrates, you can ensure that the method handles overflows appropriately by first retrieving the sign of the numeric value before converting it to its hexadecimal string representation.</span></span> <span data-ttu-id="d59d4-1542">Lösen Sie eine Ausnahme aus, wenn der ursprüngliche Wert positiv war, aber die Konvertierung zurück in eine ganze Zahl einen negativen Wert ergibt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1542">Throw an exception if the original value was positive but the conversion back to an integer yields a negative value.</span></span>  
  
 [!code-cpp[System.Convert.BaseConversion#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cpp/toint_str_int32.cpp#2)]
 [!code-csharp[System.Convert.BaseConversion#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#2)]
 [!code-vb[System.Convert.BaseConversion#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d59d4-1543"><paramref name="fromBase" /> ist nicht 2, 8, 10 oder 16.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1543"><paramref name="fromBase" /> is not 2, 8, 10, or 16.</span></span>  
  
<span data-ttu-id="d59d4-1544">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-1544">-or-</span></span> 
 <span data-ttu-id="d59d4-1545"><paramref name="value" />, der eine nicht zur Basis 10 gehörende Zahl mit Vorzeichen darstellt, weist ein negatives Vorzeichen als Präfix auf.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1545"><paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d59d4-1546"><paramref name="value" /> ist <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1546"><paramref name="value" /> is <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-1547"><paramref name="value" /> enthält ein Zeichen, das in der von <paramref name="fromBase" /> angegebenen Basis keine gültige Ziffer ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1547"><paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span></span> <span data-ttu-id="d59d4-1548">Die Ausnahmemeldung gibt an, dass keine zu konvertierenden Ziffern vorhanden sind, wenn das erste Zeichen in <paramref name="value" /> ungültig ist. Andernfalls gibt die Meldung an, dass <paramref name="value" /> ungültige nachfolgende Zeichen enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1548">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1549"><paramref name="value" />, der eine nicht zur Basis 10 gehörende Zahl mit Vorzeichen darstellt, weist ein negatives Vorzeichen als Präfix auf.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1549"><paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span></span>  
  
<span data-ttu-id="d59d4-1550">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-1550">-or-</span></span> 
 <span data-ttu-id="d59d4-1551"><paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Int32.MinValue" /> oder größer als <see cref="F:System.Int32.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1551"><paramref name="value" /> represents a number that is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToInt64">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d59d4-1552">Konvertiert einen angegebenen Wert in eine 64-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1552">Converts a specified value to a 64-bit signed integer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Boolean) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(bool value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : bool -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1553">Der zu konvertierende boolesche Wert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1553">The Boolean value to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1554">Konvertiert den angegebenen booleschen Wert in die entsprechende 64-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1554">Converts the specified Boolean value to the equivalent 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1555">Die Zahl 1, wenn <paramref name="value" /><see langword="true" /> ist, andernfalls 0 (null).</span><span class="sxs-lookup"><span data-stu-id="d59d4-1555">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1556">Im folgenden Beispiel werden die <xref:System.Boolean> Werte `true` und `false` in lange ganze Zahlen konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1556">The following example converts the <xref:System.Boolean> values `true` and `false` to long integers.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#1)]
 [!code-vb[System.Convert.ToInt64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Byte) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : byte -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1557">Die zu konvertierende 8-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1557">The 8-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1558">Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl ohne Vorzeichen in die entsprechende 64-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1558">Converts the value of the specified 8-bit unsigned integer to the equivalent 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1559">Eine 64-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1559">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1560">Im folgenden Beispiel wird jedes Element in einem Bytearray in eine lange ganze Zahl konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1560">The following example converts each element in an array of bytes to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#2)]
 [!code-vb[System.Convert.ToInt64#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Char) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(char value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : char -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1561">Das zu konvertierende Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1561">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1562">Konvertiert den Wert des angegebenen Unicode-Zeichens in die entsprechende 64-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1562">Converts the value of the specified Unicode character to the equivalent 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1563">Eine 64-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1563">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1564">Im folgenden Beispiel wird jedes Element in einem <xref:System.Char> Arrays in eine lange ganze Zahl konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1564">The following example converts each element in a <xref:System.Char> array to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#3)]
 [!code-vb[System.Convert.ToInt64#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As DateTime) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : DateTime -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1565">Der Datums- und Uhrzeitwert, der konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1565">The date and time value to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1566">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1566">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1567">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1567">This conversion is not supported.</span></span> <span data-ttu-id="d59d4-1568">Es wird kein Wert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1568">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-1569">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1569">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Decimal) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : decimal -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1570">Die zu konvertierende Dezimalzahl.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1570">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1571">Konvertiert den Wert der angegebenen Dezimalzahl in eine entsprechende 64-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1571">Converts the value of the specified decimal number to an equivalent 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1572"><paramref name="value" />, auf die nächste 64-Bit-Ganzzahl mit Vorzeichen gerundet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1572"><paramref name="value" />, rounded to the nearest 64-bit signed integer.</span></span> <span data-ttu-id="d59d4-1573">Wenn <paramref name="value" /> genau zwischen zwei ganzen Zahlen liegt, wird die gerade Zahl zurückgegeben (d. h. 4,5 wird in 4 und 5,5 in 6 konvertiert).</span><span class="sxs-lookup"><span data-stu-id="d59d4-1573">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1574">Im folgenden Beispiel wird versucht, jedes Element in einem Array von <xref:System.Decimal>-Werten in eine lange ganze Zahl zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1574">The following example attempts to convert each element in an array of <xref:System.Decimal> values to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#4)]
 [!code-vb[System.Convert.ToInt64#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1575"><paramref name="value" /> ist größer als <see cref="F:System.Int64.MaxValue" /> oder kleiner als <see cref="F:System.Int64.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1575"><paramref name="value" /> is greater than <see cref="F:System.Int64.MaxValue" /> or less than <see cref="F:System.Int64.MinValue" />.</span></span></exception>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Double) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(double value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : double -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1576">Die zu konvertierende Gleitkommazahl mit doppelter Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1576">The double-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1577">Konvertiert den Wert der angegebenen Gleitkommazahl mit doppelter Genauigkeit in eine entsprechende 64-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1577">Converts the value of the specified double-precision floating-point number to an equivalent 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1578"><paramref name="value" />, auf die nächste 64-Bit-Ganzzahl mit Vorzeichen gerundet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1578"><paramref name="value" />, rounded to the nearest 64-bit signed integer.</span></span> <span data-ttu-id="d59d4-1579">Wenn <paramref name="value" /> genau zwischen zwei ganzen Zahlen liegt, wird die gerade Zahl zurückgegeben (d. h. 4,5 wird in 4 und 5,5 in 6 konvertiert).</span><span class="sxs-lookup"><span data-stu-id="d59d4-1579">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1580">Im folgenden Beispiel wird versucht, jedes Element in einem Array von <xref:System.Double>-Werten in eine lange ganze Zahl zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1580">The following example attempts to convert each element in an array of <xref:System.Double> values to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#5)]
 [!code-vb[System.Convert.ToInt64#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1581"><paramref name="value" /> ist größer als <see cref="F:System.Int64.MaxValue" /> oder kleiner als <see cref="F:System.Int64.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1581"><paramref name="value" /> is greater than <see cref="F:System.Int64.MaxValue" /> or less than <see cref="F:System.Int64.MinValue" />.</span></span></exception>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Short) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(short value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : int16 -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1582">Die zu konvertierende 16-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1582">The 16-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1583">Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl mit Vorzeichen in eine entsprechende 64-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1583">Converts the value of the specified 16-bit signed integer to an equivalent 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1584">Eine 64-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1584">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1585">Im folgenden Beispiel wird jedes Element in einem Array von 16-Bit-Ganzzahlen in eine lange ganze Zahl konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1585">The following example converts each element in an array of 16-bit integers to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#6)]
 [!code-vb[System.Convert.ToInt64#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(int value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : int -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1586">Die zu konvertierende 32-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1586">The 32-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1587">Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl mit Vorzeichen in eine entsprechende 64-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1587">Converts the value of the specified 32-bit signed integer to an equivalent 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1588">Eine 64-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1588">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(long value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : int64 -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1589">Eine 64-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1589">A 64-bit signed integer.</span></span></param>
        <summary><span data-ttu-id="d59d4-1590">Gibt die angegebene 64-Bit-Ganzzahl mit Vorzeichen zurück. Es wird keine wirkliche Konvertierung durchgeführt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1590">Returns the specified 64-bit signed integer; no actual conversion is performed.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1591"><paramref name="value" /> wird unverändert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1591"><paramref name="value" /> is returned unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1592">Im folgenden Beispiel wird jedes Element in einem Array von ganzen Zahlen in eine lange ganze Zahl konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1592">The following example converts each element in an array of integers to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#7)]
 [!code-vb[System.Convert.ToInt64#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Object) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : obj -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1593">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert, oder <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1593">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="d59d4-1594">Konvertiert den Wert des angegebenen Objekts in eine 64-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1594">Converts the value of the specified object to a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1595">Eine 64-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1595">A 64-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-1596">Wenn `value` nicht `null`wird, umschließt diese Methode einen aufzurufenden <xref:System.IConvertible.ToInt64%2A?displayProperty=nameWithType> Implementierung des zugrunde liegenden Typs `value`.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1596">If `value` is not `null`, this method wraps a call to the <xref:System.IConvertible.ToInt64%2A?displayProperty=nameWithType> implementation of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-1597">Im folgenden Beispiel wird versucht, jedes Element in einem Objekt Array in eine lange ganze Zahl zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1597">The following example attempts to convert each element in an object array to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#8)]
 [!code-vb[System.Convert.ToInt64#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-1598"><paramref name="value" /> weist kein geeignetes Format auf.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1598"><paramref name="value" /> is not in an appropriate format.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-1599">Die <paramref name="value" />-Schnittstelle wird von <see cref="T:System.IConvertible" /> nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1599"><paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span></span>  
  
<span data-ttu-id="d59d4-1600">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-1600">-or-</span></span> 
<span data-ttu-id="d59d4-1601">Die Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1601">The conversion is not supported.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1602"><paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Int64.MinValue" /> oder größer als <see cref="F:System.Int64.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1602"><paramref name="value" /> represents a number that is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As SByte) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : sbyte -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1603">Die zu konvertierende 8-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1603">The 8-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1604">Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl mit Vorzeichen in die entsprechende 64-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1604">Converts the value of the specified 8-bit signed integer to the equivalent 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1605">Eine 64-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1605">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1606">Im folgenden Beispiel wird jedes Element in einem Bytearray mit Vorzeichen in eine lange ganze Zahl konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1606">The following example converts each element in a signed byte array to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#9)]
 [!code-vb[System.Convert.ToInt64#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Single) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(float value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : single -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1607">Die zu konvertierende Gleitkommazahl mit einfacher Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1607">The single-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1608">Konvertiert den Wert der angegebenen Gleitkommazahl mit einfacher Genauigkeit in die entsprechende 64-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1608">Converts the value of the specified single-precision floating-point number to an equivalent 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1609"><paramref name="value" />, auf die nächste 64-Bit-Ganzzahl mit Vorzeichen gerundet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1609"><paramref name="value" />, rounded to the nearest 64-bit signed integer.</span></span> <span data-ttu-id="d59d4-1610">Wenn <paramref name="value" /> genau zwischen zwei ganzen Zahlen liegt, wird die gerade Zahl zurückgegeben (d. h. 4,5 wird in 4 und 5,5 in 6 konvertiert).</span><span class="sxs-lookup"><span data-stu-id="d59d4-1610">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1611">Im folgenden Beispiel wird versucht, jedes Element in einem Array von <xref:System.Single>-Werten in eine lange ganze Zahl zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1611">The following example attempts to convert each element in an array of <xref:System.Single> values to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#10)]
 [!code-vb[System.Convert.ToInt64#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1612"><paramref name="value" /> ist größer als <see cref="F:System.Int64.MaxValue" /> oder kleiner als <see cref="F:System.Int64.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1612"><paramref name="value" /> is greater than <see cref="F:System.Int64.MaxValue" /> or less than <see cref="F:System.Int64.MinValue" />.</span></span></exception>
        <altmember cref="T:System.Single" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As String) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : string -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1613">Eine Zeichenfolge, die eine zu konvertierende Zahl enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1613">A string that contains a number to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1614">Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl in die entsprechende 64-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1614">Converts the specified string representation of a number to an equivalent 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1615">Eine 64-Bit-Ganzzahl mit Vorzeichen, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1615">A 64-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-1616">Die Verwendung der <xref:System.Convert.ToInt64%28System.String%29>-Methode entspricht der Übergabe von `value` an die <xref:System.Int64.Parse%28System.String%29?displayProperty=nameWithType>-Methode.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1616">Using the <xref:System.Convert.ToInt64%28System.String%29> method is equivalent to passing `value` to the <xref:System.Int64.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="d59d4-1617">`value` wird mithilfe der Formatierungskonventionen der aktuellen Threadkultur interpretiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1617">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="d59d4-1618">Wenn eine Ausnahme nicht behandelt werden soll, wenn bei der Konvertierung ein Fehler auftritt, können Sie stattdessen die <xref:System.Int64.TryParse%2A?displayProperty=nameWithType>-Methode abrufen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1618">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Int64.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="d59d4-1619">Sie gibt einen <xref:System.Boolean> Wert zurück, der angibt, ob die Konvertierung erfolgreich war oder fehlgeschlagen ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1619">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-1620">Im folgenden Beispiel wird versucht, jedes Element in einem Array numerischer Zeichen folgen in eine lange ganze Zahl zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1620">The following example attempts to convert each element in an array of numeric strings to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#11)]
 [!code-vb[System.Convert.ToInt64#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-1621"><paramref name="value" /> besteht nicht aus einem optionalen Vorzeichen und einer Folge von Ziffern (0 bis 9).</span><span class="sxs-lookup"><span data-stu-id="d59d4-1621"><paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1622"><paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Int64.MinValue" /> oder größer als <see cref="F:System.Int64.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1622"><paramref name="value" /> represents a number that is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As UShort) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : uint16 -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1623">Die zu konvertierende 16-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1623">The 16-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1624">Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl ohne Vorzeichen in die entsprechende 64-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1624">Converts the value of the specified 16-bit unsigned integer to the equivalent 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1625">Eine 64-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1625">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1626">Im folgenden Beispiel wird jedes Element in einem Array von 16-Bit-Ganzzahlen ohne Vorzeichen in eine lange ganze Zahl konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1626">The following example converts each element in an array of 16-bit unsigned integers to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#12)]
 [!code-vb[System.Convert.ToInt64#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As UInteger) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : uint32 -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1627">Die zu konvertierende 32-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1627">The 32-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1628">Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende 64-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1628">Converts the value of the specified 32-bit unsigned integer to an equivalent 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1629">Eine 64-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1629">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1630">Im folgenden Beispiel wird jedes Element in einem Array von Ganzzahlen ohne Vorzeichen in eine lange ganze Zahl konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1630">The following example converts each element in an array of unsigned integers to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#13)]
 [!code-vb[System.Convert.ToInt64#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As ULong) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : uint64 -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1631">Die zu konvertierende 64-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1631">The 64-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1632">Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende 64-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1632">Converts the value of the specified 64-bit unsigned integer to an equivalent 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1633">Eine 64-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1633">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1634">Im folgenden Beispiel wird versucht, jedes Element in einem Array von Long-Ganzzahlen ohne Vorzeichen in eine lange ganze Zahl zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1634">The following example attempts to convert each element in an array of unsigned long integers to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#14)]
 [!code-vb[System.Convert.ToInt64#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1635"><paramref name="value" /> ist größer als <see cref="F:System.Int64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1635"><paramref name="value" /> is greater than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Object, provider As IFormatProvider) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : obj * IFormatProvider -&gt; int64" Usage="System.Convert.ToInt64 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1636">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1636">An object that implements the <see cref="T:System.IConvertible" /> interface.</span></span></param>
        <param name="provider"><span data-ttu-id="d59d4-1637">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1637">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="d59d4-1638">Konvertiert den Wert des angegebenen Objekts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in eine 64-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1638">Converts the value of the specified object to a 64-bit signed integer, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1639">Eine 64-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1639">A 64-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-1640">Der Rückgabewert ist das Ergebnis des Aufrufs der <xref:System.IConvertible.ToInt64%2A?displayProperty=nameWithType>-Methode des zugrunde liegenden Typs `value`.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1640">The return value is the result of invoking the <xref:System.IConvertible.ToInt64%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="d59d4-1641">`provider` ermöglicht es dem Benutzer, kulturspezifische Konvertierungs Informationen zum Inhalt von `value`anzugeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1641">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="d59d4-1642">Wenn `value` z. b. ein <xref:System.String> ist, das eine Zahl darstellt, können `provider` kulturspezifische Informationen über die Notation bereitstellen, die für diese Zahl verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1642">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="d59d4-1643">Die Basis Typen ignorieren `provider`; der-Parameter kann jedoch verwendet werden, wenn `value` ein benutzerdefinierter Typ ist, der die <xref:System.IConvertible>-Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1643">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-1644">Im folgenden Beispiel wird eine Klasse definiert, die <xref:System.IConvertible> und eine Klasse implementiert, die <xref:System.IFormatProvider>implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1644">The following example defines a class that implements <xref:System.IConvertible> and a class that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="d59d4-1645">Objekte der Klasse, die implementiert <xref:System.IConvertible> ein Array von <xref:System.Double> Werten enthalten.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1645">Objects of the class that implements <xref:System.IConvertible> hold an array of <xref:System.Double> values.</span></span> <span data-ttu-id="d59d4-1646">Ein Objekt jeder Klasse wird an die `ToInt64`-Methode übermittelt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1646">An object of each class is passed to the `ToInt64` method.</span></span> <span data-ttu-id="d59d4-1647">Diese Methode gibt einen Durchschnitt des Arrays von <xref:System.Double> Werten zurück, wobei das Objekt verwendet wird, das <xref:System.IFormatProvider> implementiert, um zu bestimmen, wie der Durchschnitt berechnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1647">This method returns an average of the array of <xref:System.Double> values, using the object that implements <xref:System.IFormatProvider> to determine how to calculate the average.</span></span>  
  
 [!code-cpp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CPP/objectifp.cpp#1)]
 [!code-csharp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CS/objectifp.cs#1)]
 [!code-vb[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/VB/objectifp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-1648"><paramref name="value" /> weist kein geeignetes Format auf.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1648"><paramref name="value" /> is not in an appropriate format.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-1649">Die <paramref name="value" />-Schnittstelle wird von <see cref="T:System.IConvertible" /> nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1649"><paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span></span>  
  
<span data-ttu-id="d59d4-1650">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-1650">-or-</span></span> 
<span data-ttu-id="d59d4-1651">Die Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1651">The conversion is not supported.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1652"><paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Int64.MinValue" /> oder größer als <see cref="F:System.Int64.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1652"><paramref name="value" /> represents a number that is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As String, provider As IFormatProvider) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : string * IFormatProvider -&gt; int64" Usage="System.Convert.ToInt64 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1653">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1653">A string that contains the number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="d59d4-1654">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1654">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="d59d4-1655">Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende 64-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1655">Converts the specified string representation of a number to an equivalent 64-bit signed integer, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1656">Eine 64-Bit-Ganzzahl mit Vorzeichen, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1656">A 64-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-1657">Der Rückgabewert ist das Ergebnis des Aufrufs der <xref:System.Int64.Parse%2A?displayProperty=nameWithType>-Methode auf `value`.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1657">The return value is the result of invoking the <xref:System.Int64.Parse%2A?displayProperty=nameWithType> method on `value`.</span></span>  
  
 <span data-ttu-id="d59d4-1658">`provider` ist eine `IFormatProvider` Instanz, die ein <xref:System.Globalization.NumberFormatInfo>-Objekt abruft.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1658">`provider` is an `IFormatProvider` instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="d59d4-1659">Das `NumberFormatInfo`-Objekt stellt kulturspezifische Informationen zum Format von `value`bereit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1659">The `NumberFormatInfo` object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="d59d4-1660">Wenn `provider` `null`ist, wird der `NumberFormatInfo` für die aktuelle Kultur verwendet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1660">If `provider` is `null`, the `NumberFormatInfo` for the current culture is used.</span></span>  
  
 <span data-ttu-id="d59d4-1661">Wenn eine Ausnahme nicht behandelt werden soll, wenn bei der Konvertierung ein Fehler auftritt, können Sie stattdessen die <xref:System.Int64.TryParse%2A?displayProperty=nameWithType>-Methode abrufen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1661">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Int64.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="d59d4-1662">Sie gibt einen <xref:System.Boolean> Wert zurück, der angibt, ob die Konvertierung erfolgreich war oder fehlgeschlagen ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1662">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-1663">Im folgenden Beispiel wird ein benutzerdefiniertes <xref:System.Globalization.NumberFormatInfo> Objekt definiert, das die Zeichenfolge "POS" als positives Vorzeichen und die Zeichenfolge "NETg" als negatives Vorzeichen erkennt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1663">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> object that recognizes the string "pos" as the positive sign and the string "neg" as the negative sign.</span></span> <span data-ttu-id="d59d4-1664">Anschließend wird versucht, jedes Element eines numerischen Zeichen folgen Arrays mit diesem Anbieter und dem <xref:System.Globalization.NumberFormatInfo> Anbieter für die invariante Kultur in eine ganze Zahl zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1664">It then attempts to convert each element of a numeric string array to an integer using both this provider and the <xref:System.Globalization.NumberFormatInfo> provider for the invariant culture.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_3.cs#16)]
 [!code-vb[System.Convert.ToInt64#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_3.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-1665"><paramref name="value" /> besteht nicht aus einem optionalen Vorzeichen und einer Folge von Ziffern (0 bis 9).</span><span class="sxs-lookup"><span data-stu-id="d59d4-1665"><paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1666"><paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Int64.MinValue" /> oder größer als <see cref="F:System.Int64.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1666"><paramref name="value" /> represents a number that is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (string value, int fromBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(string value, int32 fromBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As String, fromBase As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::String ^ value, int fromBase);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : string * int -&gt; int64" Usage="System.Convert.ToInt64 (value, fromBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1667">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1667">A string that contains the number to convert.</span></span></param>
        <param name="fromBase"><span data-ttu-id="d59d4-1668">Die Basis der Zahl in <paramref name="value" />, die 2, 8, 10 oder 16 sein muss.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1668">The base of the number in <paramref name="value" />, which must be 2, 8, 10, or 16.</span></span></param>
        <summary><span data-ttu-id="d59d4-1669">Konvertiert die Zeichenfolgendarstellung einer Zahl in einer angegebenen Basis in eine entsprechende 64-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1669">Converts the string representation of a number in a specified base to an equivalent 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1670">Eine 64-Bit-Ganzzahl mit Vorzeichen, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1670">A 64-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-1671">Wenn `fromBase` 16 ist, können Sie die durch den `value`-Parameter angegebene Zahl mit "0x" oder "0x" als Präfix versehen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1671">If `fromBase` is 16, you can prefix the number specified by the `value` parameter with "0x" or "0X".</span></span>  
  
 <span data-ttu-id="d59d4-1672">Da das negative Vorzeichen für numerische Darstellungen ohne Basis 10 nicht unterstützt wird, geht die <xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29>-Methode davon aus, dass negative Zahlen eine zwei Komplement Darstellung verwenden.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1672">Because the negative sign is not supported for non-base 10 numeric representations, the <xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29> method assumes that negative numbers use two's complement representation.</span></span> <span data-ttu-id="d59d4-1673">Mit anderen Worten: die Methode interpretiert immer das binäre Bit der höchsten Ordnung einer langen ganzen Zahl (Bit 63) als Vorzeichen-Bit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1673">In other words, the method always interprets the highest-order binary bit of a long integer (bit 63) as its sign bit.</span></span> <span data-ttu-id="d59d4-1674">Folglich ist es möglich, Code zu schreiben, in dem eine nicht-Base-10-Zahl außerhalb des Bereichs des <xref:System.Int64>-Datentyps in einen <xref:System.Int64>-Wert konvertiert wird, ohne dass die Methode eine Ausnahme auslöst.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1674">As a result, it is possible to write code in which a non-base 10 number that is out of the range of the <xref:System.Int64> data type is converted to an <xref:System.Int64> value without the method throwing an exception.</span></span> <span data-ttu-id="d59d4-1675">Im folgenden Beispiel wird <xref:System.UInt64.MaxValue> in die hexadezimale Zeichen folgen Darstellung konvertiert und dann die <xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29>-Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1675">The following example converts <xref:System.UInt64.MaxValue> to its hexadecimal string representation, and then calls the <xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="d59d4-1676">Anstatt eine Ausnahme auszulösen, zeigt die Methode die Meldung "0xFFFFFFFFFFFFFFFF konvertiert in-1" an.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1676">Instead of throwing an exception, the method displays the message, "0xFFFFFFFFFFFFFFFF converts to -1."</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#7)]
 [!code-vb[System.Convert.BaseConversion#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#7)]  
  
 <span data-ttu-id="d59d4-1677">Beim Durchführen von binären Vorgängen oder numerischen Konvertierungen liegt es immer in der Verantwortung des Entwicklers, zu überprüfen, ob eine Methode die entsprechende numerische Darstellung verwendet, um einen bestimmten Wert zu interpretieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1677">When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method is using the appropriate numeric representation to interpret a particular value.</span></span> <span data-ttu-id="d59d4-1678">Wie im folgenden Beispiel veranschaulicht, können Sie sicherstellen, dass die-Methode Überläufe ordnungsgemäß behandelt, indem Sie zuerst bestimmen, ob ein Wert einen unsignierten oder einen signierten Typ darstellt, wenn Sie ihn in die hexadezimale Zeichen folgen Darstellung umwandelt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1678">As the following example illustrates, you can ensure that the method handles overflows appropriately by first determining whether a value represents an unsigned or a signed type when converting it to its hexadecimal string representation.</span></span> <span data-ttu-id="d59d4-1679">Löst eine Ausnahme aus, wenn der ursprüngliche Wert ein nicht signierter Typ war, die Konvertierung zurück in eine ganze Zahl jedoch einen Wert ergibt, dessen Signier Bit auf on gesetzt ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1679">Throw an exception if the original value was an unsigned type but the conversion back to an integer yields a value whose sign bit is on.</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#8)]
 [!code-vb[System.Convert.BaseConversion#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#8)]  
  
 <span data-ttu-id="d59d4-1680">Im folgenden Beispiel wird versucht, jedes Element in einem Zeichen folgen Array als hexadezimale Zeichenfolge zu interpretieren und in eine lange ganze Zahl zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1680">The following example attempts to interpret each element in a string array as a hexadecimal string and convert it to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_2.cs#15)]
 [!code-vb[System.Convert.ToInt64#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_2.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d59d4-1681"><paramref name="fromBase" /> ist nicht 2, 8, 10 oder 16.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1681"><paramref name="fromBase" /> is not 2, 8, 10, or 16.</span></span>  
  
<span data-ttu-id="d59d4-1682">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-1682">-or-</span></span> 
 <span data-ttu-id="d59d4-1683"><paramref name="value" />, der eine nicht zur Basis 10 gehörende Zahl mit Vorzeichen darstellt, weist ein negatives Vorzeichen als Präfix auf.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1683"><paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d59d4-1684"><paramref name="value" /> ist <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1684"><paramref name="value" /> is <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-1685"><paramref name="value" /> enthält ein Zeichen, das in der von <paramref name="fromBase" /> angegebenen Basis keine gültige Ziffer ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1685"><paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span></span> <span data-ttu-id="d59d4-1686">Die Ausnahmemeldung gibt an, dass keine zu konvertierenden Ziffern vorhanden sind, wenn das erste Zeichen in <paramref name="value" /> ungültig ist. Andernfalls gibt die Meldung an, dass <paramref name="value" /> ungültige nachfolgende Zeichen enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1686">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1687"><paramref name="value" />, der eine nicht zur Basis 10 gehörende Zahl mit Vorzeichen darstellt, weist ein negatives Vorzeichen als Präfix auf.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1687"><paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span></span>  
  
<span data-ttu-id="d59d4-1688">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-1688">-or-</span></span> 
 <span data-ttu-id="d59d4-1689"><paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Int64.MinValue" /> oder größer als <see cref="F:System.Int64.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1689"><paramref name="value" /> represents a number that is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToSByte">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d59d4-1690">Konvertiert einen angegebenen Wert in eine 8-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1690">Converts a specified value to an 8-bit signed integer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Boolean) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(bool value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : bool -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1691">Der zu konvertierende boolesche Wert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1691">The Boolean value to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1692">Konvertiert den angegebenen booleschen Wert in die entsprechende 8-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1692">Converts the specified Boolean value to the equivalent 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1693">Die Zahl 1, wenn <paramref name="value" /><see langword="true" /> ist, andernfalls 0 (null).</span><span class="sxs-lookup"><span data-stu-id="d59d4-1693">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1694">Im folgenden Beispiel werden die booleschen Werte `true` und `false` in Byte Werte mit Vorzeichen konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1694">The following example converts the Boolean values `true` and `false` to signed byte values.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#1)]
 [!code-vb[System.Convert.ToSByte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Byte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : byte -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1695">Die zu konvertierende 8-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1695">The 8-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1696">Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl ohne Vorzeichen in die entsprechende 8-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1696">Converts the value of the specified 8-bit unsigned integer to the equivalent 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1697">Eine 8-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1697">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1698">Im folgenden Beispiel wird versucht, jedes Element in einem Bytearray in ein Byte mit Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1698">The following example attempts to convert each element in a byte array to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#2)]
 [!code-vb[System.Convert.ToSByte#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1699"><paramref name="value" /> ist größer als <see cref="F:System.SByte.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1699"><paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Char) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(char value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : char -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1700">Das zu konvertierende Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1700">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1701">Konvertiert den Wert des angegebenen Unicode-Zeichens in die entsprechende 8-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1701">Converts the value of the specified Unicode character to the equivalent 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1702">Eine 8-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1702">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1703">Im folgenden Beispiel wird versucht, jedes Element in einem Array von <xref:System.Char>-Werten in ein Byte mit Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1703">The following example attempts to convert each element in an array of <xref:System.Char> values to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#3)]
 [!code-vb[System.Convert.ToSByte#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1704"><paramref name="value" /> ist größer als <see cref="F:System.SByte.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1704"><paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As DateTime) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : DateTime -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1705">Der Datums- und Uhrzeitwert, der konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1705">The date and time value to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1706">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1706">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1707">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1707">This conversion is not supported.</span></span> <span data-ttu-id="d59d4-1708">Es wird kein Wert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1708">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-1709">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1709">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Decimal) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : decimal -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1710">Die zu konvertierende Dezimalzahl.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1710">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1711">Konvertiert den Wert der angegebenen Dezimalzahl in eine entsprechende 8-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1711">Converts the value of the specified decimal number to an equivalent 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1712"><paramref name="value" />, auf die nächste 8-Bit-Ganzzahl mit Vorzeichen gerundet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1712"><paramref name="value" />, rounded to the nearest 8-bit signed integer.</span></span> <span data-ttu-id="d59d4-1713">Wenn <paramref name="value" /> genau zwischen zwei ganzen Zahlen liegt, wird die gerade Zahl zurückgegeben (d. h. 4,5 wird in 4 und 5,5 in 6 konvertiert).</span><span class="sxs-lookup"><span data-stu-id="d59d4-1713">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1714">Im folgenden Beispiel wird versucht, jedes Element in einem Array von <xref:System.Decimal>-Werten in ein Byte mit Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1714">The following example attempts to convert each element in an array of <xref:System.Decimal> values to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#4)]
 [!code-vb[System.Convert.ToSByte#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1715"><paramref name="value" /> ist größer als <see cref="F:System.SByte.MaxValue" /> oder kleiner als <see cref="F:System.SByte.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1715"><paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span></span></exception>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Double) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(double value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : double -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1716">Die zu konvertierende Gleitkommazahl mit doppelter Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1716">The double-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1717">Konvertiert den Wert der angegebenen Gleitkommazahl mit doppelter Genauigkeit in eine entsprechende 8-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1717">Converts the value of the specified double-precision floating-point number to an equivalent 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1718"><paramref name="value" />, auf die nächste 8-Bit-Ganzzahl mit Vorzeichen gerundet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1718"><paramref name="value" />, rounded to the nearest 8-bit signed integer.</span></span> <span data-ttu-id="d59d4-1719">Wenn <paramref name="value" /> genau zwischen zwei ganzen Zahlen liegt, wird die gerade Zahl zurückgegeben (d. h. 4,5 wird in 4 und 5,5 in 6 konvertiert).</span><span class="sxs-lookup"><span data-stu-id="d59d4-1719">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1720">Im folgenden Beispiel wird versucht, jedes Element in einem Array von <xref:System.Double>-Werten in ein Byte mit Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1720">The following example attempts to convert each element in an array of <xref:System.Double> values to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#5)]
 [!code-vb[System.Convert.ToSByte#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1721"><paramref name="value" /> ist größer als <see cref="F:System.SByte.MaxValue" /> oder kleiner als <see cref="F:System.SByte.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1721"><paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span></span></exception>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Short) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(short value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : int16 -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1722">Die zu konvertierende 16-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1722">The 16-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1723">Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl mit Vorzeichen in die entsprechende 8-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1723">Converts the value of the specified 16-bit signed integer to the equivalent 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1724">Eine 8-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1724">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1725">Im folgenden Beispiel wird versucht, jedes Element in einem Array von 16-Bit-Ganzzahlen mit Vorzeichen in ein Byte mit Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1725">The following example attempts to convert each element in an array of signed 16-bit integers to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#6)]
 [!code-vb[System.Convert.ToSByte#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1726"><paramref name="value" /> ist größer als <see cref="F:System.SByte.MaxValue" /> oder kleiner als <see cref="F:System.SByte.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1726"><paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Integer) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(int value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : int -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1727">Die zu konvertierende 32-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1727">The 32-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1728">Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl mit Vorzeichen in eine entsprechende 8-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1728">Converts the value of the specified 32-bit signed integer to an equivalent 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1729">Eine 8-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1729">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1730">Im folgenden Beispiel wird versucht, jedes Element in einem Array von Ganzzahlen mit Vorzeichen in ein Byte mit Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1730">The following example attempts to convert each element in an array of signed integers to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#7)]
 [!code-vb[System.Convert.ToSByte#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1731"><paramref name="value" /> ist größer als <see cref="F:System.SByte.MaxValue" /> oder kleiner als <see cref="F:System.SByte.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1731"><paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Long) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(long value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : int64 -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1732">Die zu konvertierende 64-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1732">The 64-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1733">Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl mit Vorzeichen in eine entsprechende 8-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1733">Converts the value of the specified 64-bit signed integer to an equivalent 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1734">Eine 8-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1734">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1735">Im folgenden Beispiel wird versucht, jedes Element in einem Array von langen ganzen Zahlen in ein Byte mit Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1735">The following example attempts to convert each element in an array of long integers to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#8)]
 [!code-vb[System.Convert.ToSByte#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1736"><paramref name="value" /> ist größer als <see cref="F:System.SByte.MaxValue" /> oder kleiner als <see cref="F:System.SByte.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1736"><paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Object) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : obj -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1737">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert, oder <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1737">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="d59d4-1738">Konvertiert den Wert des angegebenen Objekts in eine 8-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1738">Converts the value of the specified object to an 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1739">Eine 8-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1739">An 8-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-1740">Der Rückgabewert ist das Ergebnis des Aufrufs der <xref:System.IConvertible.ToSByte%2A?displayProperty=nameWithType>-Methode des zugrunde liegenden Typs `value`.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1740">The return value is the result of invoking the <xref:System.IConvertible.ToSByte%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-1741">Im folgenden Beispiel wird versucht, jedes Element in einem Objekt Array in ein Byte mit Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1741">The following example attempts to convert each element in an object array to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#9)]
 [!code-vb[System.Convert.ToSByte#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-1742"><paramref name="value" /> weist kein geeignetes Format auf.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1742"><paramref name="value" /> is not in an appropriate format.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-1743">Die <paramref name="value" />-Schnittstelle wird von <see cref="T:System.IConvertible" /> nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1743"><paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span></span>  
  
<span data-ttu-id="d59d4-1744">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-1744">-or-</span></span> 
<span data-ttu-id="d59d4-1745">Die Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1745">The conversion is not supported.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1746"><paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.SByte.MinValue" /> oder größer als <see cref="F:System.SByte.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1746"><paramref name="value" /> represents a number that is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : sbyte -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1747">Die zurückzugebende 8-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1747">The 8-bit signed integer to return.</span></span></param>
        <summary><span data-ttu-id="d59d4-1748">Gibt die angegebene 8-Bit-Ganzzahl mit Vorzeichen zurück. Es wird keine wirkliche Konvertierung durchgeführt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1748">Returns the specified 8-bit signed integer; no actual conversion is performed.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1749"><paramref name="value" /> wird unverändert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1749"><paramref name="value" /> is returned unchanged.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Single) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(float value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : single -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1750">Die zu konvertierende Gleitkommazahl mit einfacher Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1750">The single-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1751">Konvertiert den Wert der angegebenen Gleitkommazahl mit einfacher Genauigkeit in die entsprechende 8-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1751">Converts the value of the specified single-precision floating-point number to an equivalent 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1752"><paramref name="value" />, auf die nächste 8-Bit-Ganzzahl mit Vorzeichen gerundet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1752"><paramref name="value" />, rounded to the nearest 8-bit signed integer.</span></span> <span data-ttu-id="d59d4-1753">Wenn <paramref name="value" /> genau zwischen zwei ganzen Zahlen liegt, wird die gerade Zahl zurückgegeben (d. h. 4,5 wird in 4 und 5,5 in 6 konvertiert).</span><span class="sxs-lookup"><span data-stu-id="d59d4-1753">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1754">Im folgenden Beispiel wird versucht, jedes Element in einem Array von <xref:System.Single>-Werten in ein Byte mit Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1754">The following example attempts to convert each element in an array of <xref:System.Single> values to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#9)]
 [!code-vb[System.Convert.ToSByte#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1755"><paramref name="value" /> ist größer als <see cref="F:System.SByte.MaxValue" /> oder kleiner als <see cref="F:System.SByte.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1755"><paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span></span></exception>
        <altmember cref="T:System.Single" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As String) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : string -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1756">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1756">A string that contains the number to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1757">Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl in eine entsprechende 8-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1757">Converts the specified string representation of a number to an equivalent 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1758">Eine 8-Bit-Ganzzahl mit Vorzeichen, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn der Wert gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1758">An 8-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if value is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-1759">Die Verwendung der <xref:System.Convert.ToSByte%28System.String%29>-Methode entspricht der Übergabe von `value` an die <xref:System.SByte.Parse%28System.String%29?displayProperty=nameWithType>-Methode.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1759">Using the <xref:System.Convert.ToSByte%28System.String%29> method is equivalent to passing `value` to the <xref:System.SByte.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="d59d4-1760">`value` wird mithilfe der Formatierungskonventionen der aktuellen Threadkultur interpretiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1760">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="d59d4-1761">Wenn eine Ausnahme nicht behandelt werden soll, wenn bei der Konvertierung ein Fehler auftritt, können Sie stattdessen die <xref:System.SByte.TryParse%2A?displayProperty=nameWithType>-Methode abrufen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1761">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.SByte.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="d59d4-1762">Sie gibt einen <xref:System.Boolean> Wert zurück, der angibt, ob die Konvertierung erfolgreich war oder fehlgeschlagen ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1762">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-1763">Im folgenden Beispiel werden Zeichen folgen Darstellungen von <xref:System.SByte>-Werten mit der `ToSByte`-Methode unter Verwendung der Standard Formatierung konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1763">The following example converts string representations of <xref:System.SByte> values with the `ToSByte` method, using default formatting.</span></span>  
  
 [!code-cpp[System.Convert.ToSInts_String#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToSInts_String/CPP/tosbyte.cpp#4)]
 [!code-csharp[System.Convert.ToSInts_String#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToSInts_String/CS/tosbyte.cs#4)]
 [!code-vb[System.Convert.ToSInts_String#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToSInts_String/VB/tosbyte.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-1764"><paramref name="value" /> besteht nicht aus einem optionalen Vorzeichen und einer Folge von Ziffern (0 bis 9).</span><span class="sxs-lookup"><span data-stu-id="d59d4-1764"><paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1765"><paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.SByte.MinValue" /> oder größer als <see cref="F:System.SByte.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1765"><paramref name="value" /> represents a number that is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.SByte.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As UShort) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : uint16 -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1766">Die zu konvertierende 16-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1766">The 16-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1767">Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl ohne Vorzeichen in die entsprechende 8-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1767">Converts the value of the specified 16-bit unsigned integer to the equivalent 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1768">Eine 8-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1768">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1769">Im folgenden Beispiel wird versucht, jedes Element in einem Array von 16-Bit-Ganzzahlen ohne Vorzeichen in ein Byte mit Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1769">The following example attempts to convert each element in an array of unsigned 16-bit integers to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#11)]
 [!code-vb[System.Convert.ToSByte#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1770"><paramref name="value" /> ist größer als <see cref="F:System.SByte.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1770"><paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As UInteger) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : uint32 -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1771">Die zu konvertierende 32-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1771">The 32-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1772">Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende 8-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1772">Converts the value of the specified 32-bit unsigned integer to an equivalent 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1773">Eine 8-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1773">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1774">Im folgenden Beispiel wird versucht, jedes Element in einem ganzzahligen Array in ein Byte mit Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1774">The following example attempts to convert each element in an integer array to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#12)]
 [!code-vb[System.Convert.ToSByte#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1775"><paramref name="value" /> ist größer als <see cref="F:System.SByte.MaxValue" /> oder kleiner als <see cref="F:System.SByte.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1775"><paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As ULong) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : uint64 -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1776">Die zu konvertierende 64-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1776">The 64-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1777">Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende 8-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1777">Converts the value of the specified 64-bit unsigned integer to an equivalent 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1778">Eine 8-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1778">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1779">Im folgenden Beispiel wird versucht, jedes Element in einem Array von langen ganzen Zahlen in ein Byte mit Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1779">The following example attempts to convert each element in an array of long integers to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#13)]
 [!code-vb[System.Convert.ToSByte#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1780"><paramref name="value" /> ist größer als <see cref="F:System.SByte.MaxValue" /> oder kleiner als <see cref="F:System.SByte.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1780"><paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Object, provider As IFormatProvider) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToSByte : obj * IFormatProvider -&gt; sbyte" Usage="System.Convert.ToSByte (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1781">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1781">An object that implements the <see cref="T:System.IConvertible" /> interface.</span></span></param>
        <param name="provider"><span data-ttu-id="d59d4-1782">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1782">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="d59d4-1783">Konvertiert den Wert des angegebenen Objekts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in eine 8-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1783">Converts the value of the specified object to an 8-bit signed integer, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1784">Eine 8-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1784">An 8-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-1785">`provider` ermöglicht es dem Benutzer, kulturspezifische Konvertierungs Informationen zum Inhalt von `value`anzugeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1785">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="d59d4-1786">Wenn `value` z. b. ein <xref:System.String> ist, das eine Zahl darstellt, können `provider` kulturspezifische Informationen über die Notation bereitstellen, die für diese Zahl verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1786">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="d59d4-1787">Die Basis Typen ignorieren `provider`; der-Parameter kann jedoch verwendet werden, wenn `value` ein benutzerdefinierter Typ ist, der die <xref:System.IConvertible>-Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1787">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-1788">Im folgenden Beispiel wird eine `ByteString` Klasse definiert, die sowohl signierte als auch unsignierte Bytes als hexadezimale Zeichen folgen und ein Feld, das das Vorzeichen des Bytes angibt, speichert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1788">The following example defines a `ByteString` class that stores both signed and unsigned bytes as hexadecimal strings along with a field that indicates the sign of the byte.</span></span> <span data-ttu-id="d59d4-1789">Die `ByteString`-Klasse implementiert die <xref:System.IConvertible>-Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1789">The `ByteString` class implements the <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d59d4-1790">Die <xref:System.IConvertible.ToSByte%2A?displayProperty=nameWithType>-Methode ruft die <xref:System.SByte.Parse%28System.String%2CSystem.IFormatProvider%29>-Methode auf, um die Konvertierung auszuführen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1790">Its <xref:System.IConvertible.ToSByte%2A?displayProperty=nameWithType> method calls the <xref:System.SByte.Parse%28System.String%2CSystem.IFormatProvider%29> method to perform the conversion.</span></span> <span data-ttu-id="d59d4-1791">Wenn dies nicht möglich ist, wird ein <xref:System.OverflowException>ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1791">If it fails, it throws an <xref:System.OverflowException>.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte2.cs#14)]
 [!code-vb[System.Convert.ToSByte#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte2.vb#14)]  
  
 <span data-ttu-id="d59d4-1792">Im folgenden Beispiel wird gezeigt, wie die <xref:System.IConvertible.ToSByte%2A?displayProperty=nameWithType> Implementierung der `ByteString`-Klasse von der <xref:System.Convert.ToSByte%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType>-Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1792">The following example shows how the <xref:System.IConvertible.ToSByte%2A?displayProperty=nameWithType> implementation of the `ByteString` class is called by the <xref:System.Convert.ToSByte%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte2.cs#15)]
 [!code-vb[System.Convert.ToSByte#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte2.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-1793"><paramref name="value" /> weist kein geeignetes Format auf.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1793"><paramref name="value" /> is not in an appropriate format.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-1794">Die <paramref name="value" />-Schnittstelle wird von <see cref="T:System.IConvertible" /> nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1794"><paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span></span>  
  
<span data-ttu-id="d59d4-1795">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-1795">-or-</span></span> 
<span data-ttu-id="d59d4-1796">Die Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1796">The conversion is not supported.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1797"><paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.SByte.MinValue" /> oder größer als <see cref="F:System.SByte.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1797"><paramref name="value" /> represents a number that is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As String, provider As IFormatProvider) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToSByte : string * IFormatProvider -&gt; sbyte" Usage="System.Convert.ToSByte (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1798">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1798">A string that contains the number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="d59d4-1799">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1799">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="d59d4-1800">Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende 8-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1800">Converts the specified string representation of a number to an equivalent 8-bit signed integer, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1801">Eine 8-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1801">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-1802">`provider` ist eine <xref:System.IFormatProvider> Instanz, die ein <xref:System.Globalization.NumberFormatInfo>-Objekt abruft.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1802">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="d59d4-1803">Das <xref:System.Globalization.NumberFormatInfo>-Objekt stellt kulturspezifische Informationen zum Format von `value`bereit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1803">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="d59d4-1804">Wenn `provider` `null`ist, wird der <xref:System.Globalization.NumberFormatInfo> für die aktuelle Kultur verwendet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1804">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="d59d4-1805">Wenn eine Ausnahme nicht behandelt werden soll, wenn bei der Konvertierung ein Fehler auftritt, können Sie stattdessen die <xref:System.SByte.TryParse%2A?displayProperty=nameWithType>-Methode abrufen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1805">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.SByte.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="d59d4-1806">Sie gibt einen <xref:System.Boolean> Wert zurück, der angibt, ob die Konvertierung erfolgreich war oder fehlgeschlagen ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1806">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-1807">Im folgenden Beispiel werden Zeichen folgen Darstellungen von <xref:System.SByte>-Werten mit der `ToSByte`-Methode konvertiert, wobei ein <xref:System.IFormatProvider>-Objekt verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1807">The following example converts string representations of <xref:System.SByte> values with the `ToSByte` method, using an <xref:System.IFormatProvider> object.</span></span>  
  
 [!code-cpp[System.Convert.ToSInts_String#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToSInts_String/CPP/tosbyte.cpp#4)]
 [!code-csharp[System.Convert.ToSInts_String#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToSInts_String/CS/tosbyte.cs#4)]
 [!code-vb[System.Convert.ToSInts_String#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToSInts_String/VB/tosbyte.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d59d4-1808"><paramref name="value" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1808"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-1809"><paramref name="value" /> besteht nicht aus einem optionalen Vorzeichen und einer Folge von Ziffern (0 bis 9).</span><span class="sxs-lookup"><span data-stu-id="d59d4-1809"><paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1810"><paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.SByte.MinValue" /> oder größer als <see cref="F:System.SByte.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1810"><paramref name="value" /> represents a number that is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.SByte.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (string value, int fromBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(string value, int32 fromBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As String, fromBase As Integer) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::String ^ value, int fromBase);" />
      <MemberSignature Language="F#" Value="static member ToSByte : string * int -&gt; sbyte" Usage="System.Convert.ToSByte (value, fromBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1811">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1811">A string that contains the number to convert.</span></span></param>
        <param name="fromBase"><span data-ttu-id="d59d4-1812">Die Basis der Zahl in <paramref name="value" />, die 2, 8, 10 oder 16 sein muss.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1812">The base of the number in <paramref name="value" />, which must be 2, 8, 10, or 16.</span></span></param>
        <summary><span data-ttu-id="d59d4-1813">Konvertiert die Zeichenfolgendarstellung einer Zahl in einer angegebenen Basis in eine entsprechende 8-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1813">Converts the string representation of a number in a specified base to an equivalent 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1814">Eine 8-Bit-Ganzzahl mit Vorzeichen, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1814">An 8-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-1815">Wenn `fromBase` 16 ist, können Sie die durch den `value`-Parameter angegebene Zahl mit "0x" oder "0x" als Präfix versehen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1815">If `fromBase` is 16, you can prefix the number specified by the `value` parameter with "0x" or "0X".</span></span>  
  
 <span data-ttu-id="d59d4-1816">Da das negative Vorzeichen für numerische Darstellungen ohne Basis 10 nicht unterstützt wird, geht die <xref:System.Convert.ToSByte%28System.String%2CSystem.Int32%29>-Methode davon aus, dass negative Zahlen eine zwei Komplement Darstellung verwenden.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1816">Because the negative sign is not supported for non-base 10 numeric representations, the <xref:System.Convert.ToSByte%28System.String%2CSystem.Int32%29> method assumes that negative numbers use two's complement representation.</span></span> <span data-ttu-id="d59d4-1817">Anders ausgedrückt: die-Methode interpretiert immer das höherwertige Bit eines Byte (Bit 7) als Vorzeichen-Bit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1817">In other words, the method always interprets the high-order bit of a byte (bit 7) as its sign bit.</span></span> <span data-ttu-id="d59d4-1818">Folglich ist es möglich, Code zu schreiben, in dem eine nicht-Base-10-Zahl außerhalb des Bereichs des <xref:System.SByte>-Datentyps in einen <xref:System.SByte>-Wert konvertiert wird, ohne dass die Methode eine Ausnahme auslöst.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1818">As a result, it is possible to write code in which a non-base 10 number that is out of the range of the <xref:System.SByte> data type is converted to an <xref:System.SByte> value without the method throwing an exception.</span></span> <span data-ttu-id="d59d4-1819">Im folgenden Beispiel wird <xref:System.Byte.MaxValue> in die hexadezimale Zeichen folgen Darstellung konvertiert und dann die <xref:System.Convert.ToSByte%28System.String%2CSystem.Int32%29>-Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1819">The following example converts <xref:System.Byte.MaxValue> to its hexadecimal string representation, and then calls the <xref:System.Convert.ToSByte%28System.String%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="d59d4-1820">Anstatt eine Ausnahme auszulösen, zeigt die Methode die Meldung "0xFF konvertiert in-1" an.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1820">Instead of throwing an exception, the method displays the message, "0xff converts to -1."</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#9)]
 [!code-vb[System.Convert.BaseConversion#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#9)]  
  
 <span data-ttu-id="d59d4-1821">Beim Durchführen von binären Vorgängen oder numerischen Konvertierungen liegt es immer in der Verantwortung des Entwicklers, zu überprüfen, ob eine Methode die entsprechende numerische Darstellung verwendet, um einen bestimmten Wert zu interpretieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1821">When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method is using the appropriate numeric representation to interpret a particular value.</span></span> <span data-ttu-id="d59d4-1822">Wie im folgenden Beispiel veranschaulicht, können Sie sicherstellen, dass die-Methode Überläufe ordnungsgemäß behandelt, indem Sie zuerst bestimmen, ob ein Wert einen unsignierten oder einen signierten Typ darstellt, wenn Sie ihn in die hexadezimale Zeichen folgen Darstellung umwandelt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1822">As the following example illustrates, you can ensure that the method handles overflows appropriately by first determining whether a value represents an unsigned or a signed type when converting it to its hexadecimal string representation.</span></span> <span data-ttu-id="d59d4-1823">Lösen Sie eine Ausnahme aus, wenn der ursprüngliche Wert ein nicht signierter Typ war, aber die Konvertierung zurück in ein signiertes Byte einen Wert ergibt, dessen Signier Bit auf on gesetzt ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1823">Throw an exception if the original value was an unsigned type but the conversion back to a signed byte yields a value whose sign bit is on.</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#10)]
 [!code-vb[System.Convert.BaseConversion#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#10)]  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-1824">Im folgenden Beispiel wird versucht, die Elemente in einem Zeichen folgen Array als binäre, oktale und hexadezimale Darstellung numerischer Werte zu interpretieren, um Sie in nicht signierte Bytes zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1824">The following example attempts to interpret the elements in a string array as the binary, octal, and hexadecimal representation of numeric values in order to convert them to unsigned bytes.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte3.cs#16)]
 [!code-vb[System.Convert.ToSByte#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte3.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d59d4-1825"><paramref name="fromBase" /> ist nicht 2, 8, 10 oder 16.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1825"><paramref name="fromBase" /> is not 2, 8, 10, or 16.</span></span>  
  
<span data-ttu-id="d59d4-1826">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-1826">-or-</span></span> 
 <span data-ttu-id="d59d4-1827"><paramref name="value" />, der eine nicht zur Basis 10 gehörende Zahl mit Vorzeichen darstellt, weist ein negatives Vorzeichen als Präfix auf.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1827"><paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d59d4-1828"><paramref name="value" /> ist <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1828"><paramref name="value" /> is <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-1829"><paramref name="value" /> enthält ein Zeichen, das in der von <paramref name="fromBase" /> angegebenen Basis keine gültige Ziffer ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1829"><paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span></span> <span data-ttu-id="d59d4-1830">Die Ausnahmemeldung gibt an, dass keine zu konvertierenden Ziffern vorhanden sind, wenn das erste Zeichen in <paramref name="value" /> ungültig ist. Andernfalls gibt die Meldung an, dass <paramref name="value" /> ungültige nachfolgende Zeichen enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1830">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1831"><paramref name="value" />, der eine nicht zur Basis 10 gehörende Zahl mit Vorzeichen darstellt, weist ein negatives Vorzeichen als Präfix auf.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1831"><paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span></span>  
  
<span data-ttu-id="d59d4-1832">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-1832">-or-</span></span> 
 <span data-ttu-id="d59d4-1833"><paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.SByte.MinValue" /> oder größer als <see cref="F:System.SByte.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1833"><paramref name="value" /> represents a number that is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToSingle">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d59d4-1834">Konvertiert einen angegebenen Wert in eine Gleitkommazahl mit einfacher Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1834">Converts a specified value to a single-precision floating-point number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Boolean) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(bool value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : bool -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1835">Der zu konvertierende boolesche Wert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1835">The Boolean value to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1836">Konvertiert den angegebenen booleschen Wert in die entsprechende Gleitkommazahl mit einfacher Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1836">Converts the specified Boolean value to the equivalent single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1837">Die Zahl 1, wenn <paramref name="value" /><see langword="true" /> ist, andernfalls 0 (null).</span><span class="sxs-lookup"><span data-stu-id="d59d4-1837">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1838">Im folgenden Beispiel werden die booleschen Werte `true` und `false` in <xref:System.Single> Werte konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1838">The following example converts the Boolean values `true` and `false` to <xref:System.Single> values.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#1)]
 [!code-vb[System.Convert.ToSingle#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Byte) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : byte -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1839">Die zu konvertierende 8-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1839">The 8-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1840">Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl ohne Vorzeichen in die entsprechende Gleitkommazahl mit einfacher Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1840">Converts the value of the specified 8-bit unsigned integer to the equivalent single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1841">Eine Gleitkommazahl mit einfacher Genauigkeit, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1841">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1842">Im folgenden Beispiel wird jedes Element in einem Array von Byte Werten in einen <xref:System.Single> Wert konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1842">The following example converts each element in an array of byte values to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#2)]
 [!code-vb[System.Convert.ToSingle#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Char) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(char value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : char -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1843">Das zu konvertierende Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1843">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1844">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1844">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1845">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1845">This conversion is not supported.</span></span> <span data-ttu-id="d59d4-1846">Es wird kein Wert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1846">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-1847">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1847">This conversion is not supported.</span></span></exception>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As DateTime) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : DateTime -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1848">Der Datums- und Uhrzeitwert, der konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1848">The date and time value to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1849">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1849">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1850">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1850">This conversion is not supported.</span></span> <span data-ttu-id="d59d4-1851">Es wird kein Wert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1851">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-1852">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1852">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Decimal) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : decimal -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1853">Die zu konvertierende Dezimalzahl.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1853">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1854">Konvertiert den Wert der angegebenen Dezimalzahl in eine entsprechende Gleitkommazahl mit einfacher Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1854">Converts the value of the specified decimal number to an equivalent single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1855">Eine Gleitkommazahl mit einfacher Genauigkeit, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1855">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="d59d4-1856"><paramref name="value" /> wird auf den nächsten Wert gerundet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1856"><paramref name="value" /> is rounded using rounding to nearest.</span></span> <span data-ttu-id="d59d4-1857">Der Wert 2,345 wird z. B. bei einer Rundung auf zwei Dezimalziffern zu 2,34, und der Wert 2,355 wird zu 2,36.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1857">For example, when rounded to two decimals, the value 2.345 becomes 2.34 and the value 2.355 becomes 2.36.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1858">Im folgenden Beispiel wird jedes Element in einem Array von <xref:System.Decimal>-Werten in einen <xref:System.Single>-Wert konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1858">The following example converts each element in an array of <xref:System.Decimal> values to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#3)]
 [!code-vb[System.Convert.ToSingle#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Double) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(double value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : double -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1859">Die zu konvertierende Gleitkommazahl mit doppelter Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1859">The double-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1860">Konvertiert den Wert der angegebenen Gleitkommazahl mit doppelter Genauigkeit in eine entsprechende Gleitkommazahl mit einfacher Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1860">Converts the value of the specified double-precision floating-point number to an equivalent single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1861">Eine Gleitkommazahl mit einfacher Genauigkeit, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1861">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="d59d4-1862"><paramref name="value" /> wird auf den nächsten Wert gerundet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1862"><paramref name="value" /> is rounded using rounding to nearest.</span></span> <span data-ttu-id="d59d4-1863">Der Wert 2,345 wird z. B. bei einer Rundung auf zwei Dezimalziffern zu 2,34, und der Wert 2,355 wird zu 2,36.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1863">For example, when rounded to two decimals, the value 2.345 becomes 2.34 and the value 2.355 becomes 2.36.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1864">Im folgenden Beispiel wird jedes Element in einem Array von <xref:System.Double>-Werten in einen <xref:System.Single>-Wert konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1864">The following example converts each element in an array of <xref:System.Double> values to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#4)]
 [!code-vb[System.Convert.ToSingle#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Short) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(short value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : int16 -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1865">Die zu konvertierende 16-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1865">The 16-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1866">Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl mit Vorzeichen in eine entsprechende Gleitkommazahl mit einfacher Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1866">Converts the value of the specified 16-bit signed integer to an equivalent single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1867">Eine Gleitkommazahl mit einfacher Genauigkeit, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1867">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1868">Im folgenden Beispiel wird jedes Element in einem Array von 16-Bit-Ganzzahlen in einen <xref:System.Single> Wert konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1868">The following example converts each element in an array of 16-bit integers to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#5)]
 [!code-vb[System.Convert.ToSingle#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(int value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : int -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1869">Die zu konvertierende 32-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1869">The 32-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1870">Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl mit Vorzeichen in eine entsprechende Gleitkommazahl mit einfacher Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1870">Converts the value of the specified 32-bit signed integer to an equivalent single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1871">Eine Gleitkommazahl mit einfacher Genauigkeit, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1871">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1872">Im folgenden Beispiel wird jedes Element in einem ganzzahligen Array in einen <xref:System.Single> Wert konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1872">The following example converts each element in an integer array to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#6)]
 [!code-vb[System.Convert.ToSingle#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Long) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(long value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : int64 -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1873">Die zu konvertierende 64-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1873">The 64-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1874">Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl mit Vorzeichen in eine entsprechende Gleitkommazahl mit einfacher Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1874">Converts the value of the specified 64-bit signed integer to an equivalent single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1875">Eine Gleitkommazahl mit einfacher Genauigkeit, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1875">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1876">Im folgenden Beispiel wird jedes Element in einem Array von Long Integer-Werten in einen <xref:System.Single> Wert konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1876">The following example converts each element in an array of long integers to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#7)]
 [!code-vb[System.Convert.ToSingle#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Object) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : obj -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1877">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert, oder <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1877">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="d59d4-1878">Konvertiert den Wert des angegebenen Objekts in eine Gleitkommazahl mit einfacher Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1878">Converts the value of the specified object to a single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1879">Eine Gleitkommazahl mit einfacher Genauigkeit, die <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1879">A single-precision floating-point number that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-1880">Der Rückgabewert ist das Ergebnis des Aufrufs der <xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType>-Methode des zugrunde liegenden Typs `value`.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1880">The return value is the result of invoking the <xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-1881">Im folgenden Beispiel wird versucht, jedes Element in einem Objekt Array in einen <xref:System.Single> Wert zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1881">The following example attempts to convert each element in an object array to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#8)]
 [!code-vb[System.Convert.ToSingle#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-1882"><paramref name="value" /> weist kein geeignetes Format auf.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1882"><paramref name="value" /> is not in an appropriate format.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-1883">Die <paramref name="value" />-Schnittstelle wird von <see cref="T:System.IConvertible" /> nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1883"><paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span></span>  
  
<span data-ttu-id="d59d4-1884">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-1884">-or-</span></span> 
<span data-ttu-id="d59d4-1885">Die Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1885">The conversion is not supported.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1886"><paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Single.MinValue" /> oder größer als <see cref="F:System.Single.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1886"><paramref name="value" /> represents a number that is less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As SByte) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : sbyte -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1887">Die zu konvertierende 8-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1887">The 8-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1888">Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl mit Vorzeichen in die entsprechende Gleitkommazahl mit einfacher Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1888">Converts the value of the specified 8-bit signed integer to the equivalent single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1889">Eine 8-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1889">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1890">Im folgenden Beispiel wird jedes Element in einem Byte-Array mit Vorzeichen in einen <xref:System.Single> Wert konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1890">The following example converts each element in a signed byte array to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#9)]
 [!code-vb[System.Convert.ToSingle#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(float value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : single -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1891">Die zurückzugebende Gleitkommazahl mit einfacher Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1891">The single-precision floating-point number to return.</span></span></param>
        <summary><span data-ttu-id="d59d4-1892">Gibt die angegebene Gleitkommazahl mit einfacher Genauigkeit zurück. Es wird keine wirkliche Konvertierung durchgeführt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1892">Returns the specified single-precision floating-point number; no actual conversion is performed.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1893"><paramref name="value" /> wird unverändert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1893"><paramref name="value" /> is returned unchanged.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As String) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : string -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1894">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1894">A string that contains the number to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1895">Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl in eine entsprechende Gleitkommazahl mit einfacher Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1895">Converts the specified string representation of a number to an equivalent single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1896">Eine Gleitkommazahl mit einfacher Genauigkeit, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1896">A single-precision floating-point number that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-1897">Die Verwendung der <xref:System.Convert.ToSingle%28System.String%29>-Methode entspricht der Übergabe von `value` an die <xref:System.Single.Parse%28System.String%29?displayProperty=nameWithType>-Methode.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1897">Using the <xref:System.Convert.ToSingle%28System.String%29> method is equivalent to passing `value` to the <xref:System.Single.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="d59d4-1898">`value` wird mithilfe der Formatierungskonventionen der aktuellen Threadkultur interpretiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1898">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="d59d4-1899">Wenn eine Ausnahme nicht behandelt werden soll, wenn bei der Konvertierung ein Fehler auftritt, können Sie stattdessen die <xref:System.Single.TryParse%2A?displayProperty=nameWithType>-Methode abrufen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1899">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Single.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="d59d4-1900">Sie gibt einen <xref:System.Boolean> Wert zurück, der angibt, ob die Konvertierung erfolgreich war oder fehlgeschlagen ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1900">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-1901">Im folgenden Beispiel wird versucht, jedes Element in einem Array numerischer Zeichen folgen in einen <xref:System.Single> Wert zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1901">The following example attempts to convert each element in an array of numeric strings to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#10)]
 [!code-vb[System.Convert.ToSingle#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-1902"><paramref name="value" /> stellt keine Zahl in einem gültigen Format dar.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1902"><paramref name="value" /> is not a number in a valid format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1903"><paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Single.MinValue" /> oder größer als <see cref="F:System.Single.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1903"><paramref name="value" /> represents a number that is less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As UShort) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : uint16 -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1904">Die zu konvertierende 16-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1904">The 16-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1905">Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl ohne Vorzeichen in die entsprechende Gleitkommazahl mit einfacher Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1905">Converts the value of the specified 16-bit unsigned integer to the equivalent single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1906">Eine Gleitkommazahl mit einfacher Genauigkeit, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1906">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1907">Im folgenden Beispiel wird jedes Element in einem Array von 16-Bit-Ganzzahlen ohne Vorzeichen in einen <xref:System.Single> Wert konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1907">The following example converts each element in an array of unsigned 16-bit integers to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#11)]
 [!code-vb[System.Convert.ToSingle#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As UInteger) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : uint32 -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1908">Die zu konvertierende 32-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1908">The 32-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1909">Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende Gleitkommazahl mit einfacher Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1909">Converts the value of the specified 32-bit unsigned integer to an equivalent single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1910">Eine Gleitkommazahl mit einfacher Genauigkeit, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1910">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1911">Im folgenden Beispiel wird jedes Element in einem Array von Ganzzahlen ohne Vorzeichen in einen <xref:System.Single> Wert konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1911">The following example converts each element in an array of unsigned integers to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#12)]
 [!code-vb[System.Convert.ToSingle#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As ULong) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : uint64 -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1912">Die zu konvertierende 64-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1912">The 64-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1913">Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende Gleitkommazahl mit einfacher Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1913">Converts the value of the specified 64-bit unsigned integer to an equivalent single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1914">Eine Gleitkommazahl mit einfacher Genauigkeit, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1914">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-1915">Im folgenden Beispiel wird jedes Element in einem Array von Long-Ganzzahlen ohne Vorzeichen in einen <xref:System.Single> Wert konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1915">The following example converts each element in an array of unsigned long integers to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#13)]
 [!code-vb[System.Convert.ToSingle#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Object, provider As IFormatProvider) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToSingle : obj * IFormatProvider -&gt; single" Usage="System.Convert.ToSingle (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1916">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1916">An object that implements the <see cref="T:System.IConvertible" /> interface.</span></span></param>
        <param name="provider"><span data-ttu-id="d59d4-1917">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1917">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="d59d4-1918">Konvertiert den Wert des angegebenen Objekts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in eine Gleitkommazahl mit einfacher Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1918">Converts the value of the specified object to an single-precision floating-point number, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1919">Eine Gleitkommazahl mit einfacher Genauigkeit, die <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1919">A single-precision floating-point number that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-1920">Der Rückgabewert ist das Ergebnis des Aufrufs der <xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType>-Methode des zugrunde liegenden Typs `value`.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1920">The return value is the result of invoking the <xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="d59d4-1921">`provider` ermöglicht es dem Benutzer, kulturspezifische Konvertierungs Informationen zum Inhalt von `value`anzugeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1921">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="d59d4-1922">Wenn `value` z. b. ein <xref:System.String> ist, das eine Zahl darstellt, können `provider` kulturspezifische Informationen über die Notation bereitstellen, die für diese Zahl verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1922">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="d59d4-1923">Die Basis Typen ignorieren `provider`; der-Parameter kann jedoch verwendet werden, wenn `value` ein benutzerdefinierter Typ ist, der die <xref:System.IConvertible>-Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1923">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-1924">Im folgenden Beispiel wird eine `Temperature` -Klasse definiert, die die <xref:System.IConvertible> -Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1924">The following example defines a `Temperature` class that implements the <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d59d4-1925">Die Implementierung der <xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType>-Methode gibt den internen Wert einer privaten <xref:System.Single> Variablen zurück, die die Temperatur darstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1925">Its implementation of the <xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType> method returns the internal value of a private <xref:System.Single> variable that represents the temperature.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle2.cs#14)]
 [!code-vb[System.Convert.ToSingle#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle2.vb#14)]  
  
 <span data-ttu-id="d59d4-1926">Im folgenden Beispiel wird veranschaulicht, wie ein Aufruf der <xref:System.Convert.ToSingle%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType>-Methode wiederum die <xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType> Implementierung der `Temperature`-Klasse aufruft.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1926">The following example illustrates how a call to the <xref:System.Convert.ToSingle%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method, in turn, calls the <xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType> implementation of the `Temperature` class.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle2.cs#15)]
 [!code-vb[System.Convert.ToSingle#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle2.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-1927"><paramref name="value" /> weist kein geeignetes Format auf.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1927"><paramref name="value" /> is not in an appropriate format.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-1928"><paramref name="value" /> implementiert nicht <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1928"><paramref name="value" /> does not implement <see cref="T:System.IConvertible" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1929"><paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Single.MinValue" /> oder größer als <see cref="F:System.Single.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1929"><paramref name="value" /> represents a number that is less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As String, provider As IFormatProvider) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToSingle : string * IFormatProvider -&gt; single" Usage="System.Convert.ToSingle (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1930">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1930">A string that contains the number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="d59d4-1931">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1931">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="d59d4-1932">Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in eine entsprechende Gleitkommazahl mit einfacher Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1932">Converts the specified string representation of a number to an equivalent single-precision floating-point number, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1933">Eine Gleitkommazahl mit einfacher Genauigkeit, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1933">A single-precision floating-point number that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-1934">Der Rückgabewert ist das Ergebnis des Aufrufs der <xref:System.Single.Parse%2A?displayProperty=nameWithType>-Methode auf `value`.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1934">The return value is the result of invoking the <xref:System.Single.Parse%2A?displayProperty=nameWithType> method on `value`.</span></span>  
  
 <span data-ttu-id="d59d4-1935">`provider` ist eine <xref:System.IFormatProvider> Instanz, die ein <xref:System.Globalization.NumberFormatInfo>-Objekt abruft.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1935">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="d59d4-1936">Das <xref:System.Globalization.NumberFormatInfo>-Objekt stellt kulturspezifische Informationen zum Format von `value`bereit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1936">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="d59d4-1937">Wenn `provider` `null`ist, wird der <xref:System.Globalization.NumberFormatInfo> für die aktuelle Kultur verwendet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1937">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="d59d4-1938">Wenn eine Ausnahme nicht behandelt werden soll, wenn bei der Konvertierung ein Fehler auftritt, können Sie stattdessen die <xref:System.Single.TryParse%2A?displayProperty=nameWithType>-Methode abrufen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1938">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Single.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="d59d4-1939">Sie gibt einen <xref:System.Boolean> Wert zurück, der angibt, ob die Konvertierung erfolgreich war oder fehlgeschlagen ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1939">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-1940">Im folgenden Beispiel werden <xref:System.IFormatProvider> Objekte verwendet, die die Kulturen "en-US" und "fr-FR" darstellen, wenn die Elemente in einem Array numerischer Zeichen folgen in <xref:System.Single> Werte konvertiert werden.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1940">The following example uses <xref:System.IFormatProvider> objects that represent the en-US and fr-FR cultures when it converts the elements in an array of numeric strings to <xref:System.Single> values.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle3.cs#16)]
 [!code-vb[System.Convert.ToSingle#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle3.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-1941"><paramref name="value" /> stellt keine Zahl in einem gültigen Format dar.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1941"><paramref name="value" /> is not a number in a valid format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-1942"><paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Single.MinValue" /> oder größer als <see cref="F:System.Single.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1942"><paramref name="value" /> represents a number that is less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d59d4-1943">Konvertiert den angegebenen Wert in die entsprechende Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1943">Converts the specified value to its equivalent string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(bool value);" />
      <MemberSignature Language="F#" Value="static member ToString : bool -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1944">Der zu konvertierende boolesche Wert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1944">The Boolean value to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1945">Konvertiert den angegebenen booleschen Wert in die entsprechende Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1945">Converts the specified Boolean value to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1946">Eine Zeichenfolgendarstellung von <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1946">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-1947">Diese Implementierung ist mit <xref:System.Boolean.ToString%2A?displayProperty=nameWithType>identisch.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1947">This implementation is identical to <xref:System.Boolean.ToString%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d59d4-1948">Er gibt <xref:System.Boolean.TrueString?displayProperty=nameWithType> für `true` Werte zurück und <xref:System.Boolean.FalseString?displayProperty=nameWithType> für `false` Werte.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1948">It returns <xref:System.Boolean.TrueString?displayProperty=nameWithType> for `true` values and <xref:System.Boolean.FalseString?displayProperty=nameWithType> for `false` values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-1949">Das folgende Beispiel veranschaulicht die Konvertierung einer <xref:System.Boolean> in eine <xref:System.String>mithilfe von `ToString`.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1949">The following example illustrates the conversion of a <xref:System.Boolean> to a <xref:System.String>, using `ToString`.</span></span> <span data-ttu-id="d59d4-1950">Außerdem wird veranschaulicht, dass die von der Konvertierung zurückgegebene Zeichenfolge entweder <xref:System.Boolean.TrueString?displayProperty=nameWithType> oder <xref:System.Boolean.FalseString?displayProperty=nameWithType>ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1950">It also illustrates that the string returned by the conversion equals either <xref:System.Boolean.TrueString?displayProperty=nameWithType> or <xref:System.Boolean.FalseString?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Convert.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToString/cs/ToString_Bool1.cs#1)]
 [!code-vb[System.Convert.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToString/vb/ToString_Bool1.vb#1)]  
 [!code-fsharp[System.Convert.ToString#1](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.Convert.ToString/fs/ToString_Bool1.fs#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Byte) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToString : byte -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1951">Die zu konvertierende 8-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1951">The 8-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1952">Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl ohne Vorzeichen in die entsprechende Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1952">Converts the value of the specified 8-bit unsigned integer to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1953">Eine Zeichenfolgendarstellung von <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1953">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-1954">Diese Implementierung ist mit <xref:System.Byte.ToString?displayProperty=nameWithType>identisch.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1954">This implementation is identical to <xref:System.Byte.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-1955">Im folgenden Beispiel wird jeder Wert in einem <xref:System.Byte> Array in eine Zeichenfolge konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1955">The following example converts each value in a <xref:System.Byte> array to a string.</span></span>  
  
 [!code-csharp[System.Convert.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToString/cs/ToString.Byte1.cs#3)]
 [!code-vb[System.Convert.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToString/vb/ToString.Byte1.vb#3)]
 [!code-fsharp[System.Convert.ToString#3](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.Convert.ToString/fs/ToString_Byte1.fs#3)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(char value);" />
      <MemberSignature Language="F#" Value="static member ToString : char -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1956">Das zu konvertierende Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1956">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1957">Konvertiert den Wert des angegebenen Unicode-Zeichens in die entsprechende Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1957">Converts the value of the specified Unicode character to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1958">Eine Zeichenfolgendarstellung von <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1958">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-1959">Diese Implementierung ist mit <xref:System.Char.ToString%2A?displayProperty=nameWithType>identisch.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1959">This implementation is identical to <xref:System.Char.ToString%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-1960">Im folgenden Beispiel wird eine <xref:System.Char> in eine <xref:System.String>konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1960">The following example converts a <xref:System.Char> to a <xref:System.String>.</span></span>  
  
 [!code-cpp[System.Convert Snippets#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#14)]
 [!code-csharp[System.Convert Snippets#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#14)]
 [!code-vb[System.Convert Snippets#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As DateTime) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToString : DateTime -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1961">Der Datums- und Uhrzeitwert, der konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1961">The date and time value to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1962">Konvertiert den Wert der angegebenen <see cref="T:System.DateTime" /> in die entsprechende Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1962">Converts the value of the specified <see cref="T:System.DateTime" /> to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1963">Eine Zeichenfolgendarstellung von <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1963">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-1964">Diese Implementierung ist mit <xref:System.DateTime.ToString?displayProperty=nameWithType>identisch.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1964">This implementation is identical to <xref:System.DateTime.ToString?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d59d4-1965">Er verwendet die Formatierungs Konventionen der aktuellen Kultur und den Format Bezeichner "G", um einen <xref:System.DateTime> Wert in seine Zeichen folgen Darstellung zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1965">It uses the formatting conventions of the current culture and the "G" format specifier to convert a <xref:System.DateTime> value to its string representation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-1966">Im folgenden Beispiel wird jedes Element in einem Array eines <xref:System.DateTime> Werts in einen <xref:System.String>-Wert konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1966">The following example converts each element in an array of a <xref:System.DateTime> value to a <xref:System.String> value.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring1.cs#1)]
 [!code-vb[System.Convert.ToString2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Decimal) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToString : decimal -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1967">Die zu konvertierende Dezimalzahl.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1967">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1968">Konvertiert den Wert der angegebenen Dezimalzahl in die entsprechende Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1968">Converts the value of the specified decimal number to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1969">Eine Zeichenfolgendarstellung von <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1969">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-1970">Diese Implementierung ist mit <xref:System.Decimal.ToString?displayProperty=nameWithType>identisch.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1970">This implementation is identical to <xref:System.Decimal.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-1971">Im folgenden Beispiel wird eine <xref:System.Decimal> in eine <xref:System.String>konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1971">The following example converts a <xref:System.Decimal> to a <xref:System.String>.</span></span>  
  
 [!code-cpp[System.Convert Snippets#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#15)]
 [!code-csharp[System.Convert Snippets#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#15)]
 [!code-vb[System.Convert Snippets#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Double) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(double value);" />
      <MemberSignature Language="F#" Value="static member ToString : double -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1972">Die zu konvertierende Gleitkommazahl mit doppelter Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1972">The double-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1973">Konvertiert den Wert der angegebenen Gleitkommazahl mit doppelter Genauigkeit in die entsprechende Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1973">Converts the value of the specified double-precision floating-point number to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1974">Eine Zeichenfolgendarstellung von <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1974">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-1975">Diese Implementierung ist mit <xref:System.Double.ToString?displayProperty=nameWithType>identisch.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1975">This implementation is identical to <xref:System.Double.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-1976">Im folgenden Beispiel wird eine <xref:System.Double> in eine <xref:System.String>konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1976">The following example converts a <xref:System.Double> to a <xref:System.String>.</span></span>  
  
 [!code-cpp[System.Convert Snippets#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#7)]
 [!code-csharp[System.Convert Snippets#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#7)]
 [!code-vb[System.Convert Snippets#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Short) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(short value);" />
      <MemberSignature Language="F#" Value="static member ToString : int16 -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1977">Die zu konvertierende 16-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1977">The 16-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1978">Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl mit Vorzeichen in die entsprechende Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1978">Converts the value of the specified 16-bit signed integer to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1979">Eine Zeichenfolgendarstellung von <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1979">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-1980">Diese Implementierung ist mit <xref:System.Int16.ToString?displayProperty=nameWithType>identisch.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1980">This implementation is identical to <xref:System.Int16.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-1981">Im folgenden Beispiel wird jedes Element in einem Array von 16-Bit-Ganzzahlen in die entsprechende Zeichen folgen Darstellung konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1981">The following example converts each element in an array of 16-bit integers to its equivalent string representation.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring1.cs#2)]
 [!code-vb[System.Convert.ToString2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(int value);" />
      <MemberSignature Language="F#" Value="static member ToString : int -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1982">Die zu konvertierende 32-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1982">The 32-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1983">Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl mit Vorzeichen in die entsprechende Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1983">Converts the value of the specified 32-bit signed integer to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1984">Eine Zeichenfolgendarstellung von <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1984">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-1985">Diese Implementierung ist mit <xref:System.Int32.ToString?displayProperty=nameWithType>identisch.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1985">This implementation is identical to <xref:System.Int32.ToString?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d59d4-1986">`value` werden mithilfe der Formatierungs Konventionen der aktuellen Thread Kultur formatiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1986">It formats `value` by using the formatting conventions of the current thread culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-1987">Im folgenden Beispiel wird die <xref:System.Convert.ToString%28System.Int32%29>-Methode mit der <xref:System.Convert.ToString%28System.UInt16%2CSystem.IFormatProvider%29>-Methode verglichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1987">The following example compares the <xref:System.Convert.ToString%28System.Int32%29> method with the <xref:System.Convert.ToString%28System.UInt16%2CSystem.IFormatProvider%29> method.</span></span> <span data-ttu-id="d59d4-1988">Er definiert ein benutzerdefiniertes <xref:System.Globalization.NumberFormatInfo> Objekt, das das "Minus"-Zeichen verwendet, um das negative Zeichen darzustellen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1988">It defines a custom <xref:System.Globalization.NumberFormatInfo> object that uses the sting "minus" to represent the negative sign.</span></span> <span data-ttu-id="d59d4-1989">Dabei werden die einzelnen Elemente in einem ganzzahligen Array mithilfe der Standard Formatierung (die Formatierungs Konventionen der aktuellen Kultur) und des benutzerdefinierten Format Anbieters in die entsprechende Zeichen folgen Darstellung konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1989">It converts each element in an integer array to its equivalent string representation using default formatting (the formatting conventions of the current culture) and the custom format provider.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#27](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring7.cs#27)]
 [!code-vb[System.Convert.ToString2#27](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring7.vb#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Long) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(long value);" />
      <MemberSignature Language="F#" Value="static member ToString : int64 -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1990">Die zu konvertierende 64-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1990">The 64-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-1991">Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl mit Vorzeichen in die entsprechende Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1991">Converts the value of the specified 64-bit signed integer to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1992">Eine Zeichenfolgendarstellung von <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1992">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-1993">Diese Implementierung ist mit <xref:System.Int64.ToString?displayProperty=nameWithType>identisch.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1993">This implementation is identical to <xref:System.Int64.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-1994">Im folgenden Beispiel wird jedes Element in einem Long-ganzzahligen Array in die entsprechende Zeichen folgen Darstellung konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1994">The following example converts each element in a long integer array to its equivalent string representation.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#28](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring6.cs#28)]
 [!code-vb[System.Convert.ToString2#28](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring6.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToString : obj -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-1995">Ein Objekt, das den zu konvertierenden Wert angibt, oder <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1995">An object that supplies the value to convert, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="d59d4-1996">Konvertiert den Wert des angegebenen Objekts in die entsprechende Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1996">Converts the value of the specified object to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="d59d4-1997">Die Zeichenfolgendarstellung von <paramref name="value" />, oder <see cref="F:System.String.Empty" />, wenn <paramref name="value" /><see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1997">The string representation of <paramref name="value" />, or <see cref="F:System.String.Empty" /> if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-1998">Um `value` in seine Zeichen folgen Darstellung zu konvertieren, versucht die-Methode, die <xref:System.IConvertible.ToString%2A?displayProperty=nameWithType>-Implementierung von `value`aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1998">To convert `value` to its string representation, the method tries to call the <xref:System.IConvertible.ToString%2A?displayProperty=nameWithType> implementation of `value`.</span></span> <span data-ttu-id="d59d4-1999">Wenn `value` die <xref:System.IConvertible>-Schnittstelle nicht implementiert, versucht die-Methode, die <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType>-Implementierung `value`aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-1999">If `value` does not implement the <xref:System.IConvertible> interface, the method tries to call the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> implementation of `value`.</span></span> <span data-ttu-id="d59d4-2000">Wenn value die <xref:System.IFormattable>-Schnittstelle nicht implementiert, ruft die-Methode die `ToString`-Methode des zugrunde liegenden `value`Typs auf.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2000">If value does not implement the <xref:System.IFormattable> interface, the method calls the `ToString` method of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-2001">Im folgenden Beispiel wird jedes Element in einem Objekt Array in die entsprechende Zeichen folgen Darstellung konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2001">The following example converts each element in an object array to its equivalent string representation.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring1.cs#3)]
 [!code-vb[System.Convert.ToString2#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As SByte) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToString : sbyte -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2002">Die zu konvertierende 8-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2002">The 8-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-2003">Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl mit Vorzeichen in die entsprechende Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2003">Converts the value of the specified 8-bit signed integer to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2004">Eine Zeichenfolgendarstellung von <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2004">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-2005">Diese Implementierung ist mit <xref:System.SByte.ToString?displayProperty=nameWithType>identisch.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2005">This implementation is identical to <xref:System.SByte.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-2006">Im folgenden Beispiel wird jedes Element in einem Bytearray mit Vorzeichen in die entsprechende Zeichen folgen Darstellung konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2006">The following example converts each element in a signed byte array to its equivalent string representation.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring1.cs#4)]
 [!code-vb[System.Convert.ToString2#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Single) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(float value);" />
      <MemberSignature Language="F#" Value="static member ToString : single -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2007">Die zu konvertierende Gleitkommazahl mit einfacher Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2007">The single-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-2008">Konvertiert den Wert der angegebenen Gleitkommazahl mit einfacher Genauigkeit in die entsprechende Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2008">Converts the value of the specified single-precision floating-point number to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2009">Eine Zeichenfolgendarstellung von <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2009">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-2010">Diese Implementierung ist mit <xref:System.Single.ToString?displayProperty=nameWithType>identisch.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2010">This implementation is identical to <xref:System.Single.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-2011">Im folgenden Beispiel wird jedes Element in einem Array von <xref:System.Single>-Werten in die entsprechende Zeichen folgen Darstellung konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2011">The following example converts each element in an array of <xref:System.Single> values to its equivalent string representation.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring1.cs#5)]
 [!code-vb[System.Convert.ToString2#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToString : string -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2012">Die zurückzugebende Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2012">The string to return.</span></span></param>
        <summary><span data-ttu-id="d59d4-2013">Gibt die angegebene Zeichenfolgeninstanz zurück. Es wird keine wirkliche Konvertierung durchgeführt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2013">Returns the specified string instance; no actual conversion is performed.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2014"><paramref name="value" /> wird unverändert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2014"><paramref name="value" /> is returned unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-2015">Im folgenden Beispiel wird eine Zeichenfolge an die <xref:System.Convert.ToString%28System.String%29>-Methode weitergeleitet und die <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType>-Methode aufgerufen, um zu bestätigen, dass die Methode die ursprüngliche Zeichenfolge zurückgibt</span><span class="sxs-lookup"><span data-stu-id="d59d4-2015">The following example passes a string to the <xref:System.Convert.ToString%28System.String%29> method and calls the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method to confirm that the method returns the original string.</span></span> <span data-ttu-id="d59d4-2016">Im Beispiel wird auch die <xref:System.String.IsInterned%2A?displayProperty=nameWithType>-Methode aufgerufen, um sicherzustellen, dass die beiden Zeichen folgen nicht identisch sind, da die ursprüngliche Zeichenfolge interniert ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2016">The example also calls the <xref:System.String.IsInterned%2A?displayProperty=nameWithType> method to ensure that the two strings are not identical because the original string is interned.</span></span>  
  
 [!code-csharp[System.Convert.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToString/cs/tostring_string1.cs#2)]
 [!code-vb[System.Convert.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToString/vb/tostring_string1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As UShort) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToString : uint16 -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2017">Die zu konvertierende 16-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2017">The 16-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-2018">Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl ohne Vorzeichen in die entsprechende Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2018">Converts the value of the specified 16-bit unsigned integer to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2019">Eine Zeichenfolgendarstellung von <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2019">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-2020">Diese Implementierung ist mit <xref:System.UInt16.ToString?displayProperty=nameWithType>identisch.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2020">This implementation is identical to <xref:System.UInt16.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-2021">Im folgenden Beispiel wird jedes Element in einem Array von 16-Bit-Ganzzahl-Werten ohne Vorzeichen in die entsprechende Zeichen folgen Darstellung konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2021">The following example converts each element in an array of unsigned 16-bit integer values to its equivalent string representation.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring1.cs#6)]
 [!code-vb[System.Convert.ToString2#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As UInteger) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToString : uint32 -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2022">Die zu konvertierende 32-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2022">The 32-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-2023">Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl ohne Vorzeichen in die entsprechende Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2023">Converts the value of the specified 32-bit unsigned integer to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2024">Eine Zeichenfolgendarstellung von <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2024">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-2025">Diese Implementierung ist mit <xref:System.UInt32.ToString?displayProperty=nameWithType>identisch.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2025">This implementation is identical to <xref:System.UInt32.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-2026">Im folgenden Beispiel wird jedes Element in einem Array von Ganzzahlen ohne Vorzeichen in die entsprechende Zeichen folgen Darstellung konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2026">The following example converts each element in an unsigned integer array to its equivalent string representation.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring1.cs#7)]
 [!code-vb[System.Convert.ToString2#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As ULong) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToString : uint64 -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2027">Die zu konvertierende 64-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2027">The 64-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-2028">Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl ohne Vorzeichen in die entsprechende Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2028">Converts the value of the specified 64-bit unsigned integer to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2029">Eine Zeichenfolgendarstellung von <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2029">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-2030">Diese Implementierung ist mit <xref:System.UInt64.ToString?displayProperty=nameWithType>identisch.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2030">This implementation is identical to <xref:System.UInt64.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-2031">Im folgenden Beispiel wird jedes Element in einem Array ohne Vorzeichen ohne Vorzeichen in die entsprechende Zeichen folgen Darstellung konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2031">The following example converts each element in an unsigned long integer array to its equivalent string representation.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring1.cs#8)]
 [!code-vb[System.Convert.ToString2#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (bool value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(bool value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Boolean,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Boolean, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(bool value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : bool * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2032">Der zu konvertierende boolesche Wert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2032">The Boolean value to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="d59d4-2033">Eine Instanz eines Objekts.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2033">An instance of an object.</span></span> <span data-ttu-id="d59d4-2034">Dieser Parameter wird ignoriert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2034">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="d59d4-2035">Konvertiert den angegebenen booleschen Wert in die entsprechende Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2035">Converts the specified Boolean value to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2036">Eine Zeichenfolgendarstellung von <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2036">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-2037">Diese Implementierung ist mit <xref:System.Boolean.ToString%2A?displayProperty=nameWithType>identisch.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2037">This implementation is identical to <xref:System.Boolean.ToString%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d59d4-2038">Er gibt <xref:System.Boolean.TrueString?displayProperty=nameWithType> für `true` Werte zurück und <xref:System.Boolean.FalseString?displayProperty=nameWithType> für `false` Werte.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2038">It returns <xref:System.Boolean.TrueString?displayProperty=nameWithType> for `true` values and <xref:System.Boolean.FalseString?displayProperty=nameWithType> for `false` values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-2039">Im folgenden Beispiel wird ein <xref:System.Boolean> Wert in eine <xref:System.String> mit der `ToString`-Methode konvertiert, wobei ein <xref:System.IFormatProvider> Objekt verwendet wird, das den Typ des Format Anbieters anzeigt, für den er aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2039">The following example converts a <xref:System.Boolean> value to a <xref:System.String> with the `ToString` method, using an <xref:System.IFormatProvider> object that displays the type of the format provider for which it is called.</span></span> <span data-ttu-id="d59d4-2040">Das Beispiel zeigt, dass auf das <xref:System.IFormatProvider> Objekt nicht verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2040">The example shows that the <xref:System.IFormatProvider> object is not referenced.</span></span>  
  
 [!code-cpp[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/CPP/nonnumeric.cpp#2)]
 [!code-csharp[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/CS/nonnumeric.cs#2)]
 [!code-vb[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/VB/nonnumeric.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (byte value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int8 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Byte,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Byte, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Byte value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : byte * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2041">Die zu konvertierende 8-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2041">The 8-bit unsigned integer to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="d59d4-2042">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2042">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="d59d4-2043">Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl ohne Vorzeichen unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2043">Converts the value of the specified 8-bit unsigned integer to its equivalent string representation, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2044">Eine Zeichenfolgendarstellung von <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2044">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-2045">Diese Implementierung ist mit <xref:System.Byte.ToString%2A?displayProperty=nameWithType>identisch.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2045">This implementation is identical to <xref:System.Byte.ToString%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-2046">Im folgenden Beispiel wird jedes Element in einem Bytearray ohne Vorzeichen in die entsprechende Zeichen folgen Darstellung unter Verwendung der Formatierungs Konventionen der Kultur en-US und fr-FR konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2046">The following example converts each element in an unsigned byte array to its equivalent string representation using the formatting conventions of the en-US and fr-FR cultures.</span></span> <span data-ttu-id="d59d4-2047">Da der "G"-Spezifizierer standardmäßig nur Dezimalziffern in der Zeichen folgen Darstellung eines Bytewerts ausgibt, wirkt sich der `provider` Parameter nicht auf die Formatierung der zurückgegebenen Zeichenfolge aus.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2047">Because the "G" specifier by default outputs only decimal digits in a byte value's string representation, the `provider` parameter does not affect the formatting of the returned string.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#16)]
 [!code-vb[System.Convert.ToString2#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (byte value, int toBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int8 value, int32 toBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Byte,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Byte, toBase As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Byte value, int toBase);" />
      <MemberSignature Language="F#" Value="static member ToString : byte * int -&gt; string" Usage="System.Convert.ToString (value, toBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
        <Parameter Name="toBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2048">Die zu konvertierende 8-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2048">The 8-bit unsigned integer to convert.</span></span></param>
        <param name="toBase"><span data-ttu-id="d59d4-2049">Die Basis des Rückgabewerts, die 2, 8, 10 oder 16 sein muss.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2049">The base of the return value, which must be 2, 8, 10, or 16.</span></span></param>
        <summary><span data-ttu-id="d59d4-2050">Konvertiert den Wert einer 8-Bit-Ganzzahl ohne Vorzeichen in die entsprechende Zeichenfolgendarstellung in einer angegebenen Basis.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2050">Converts the value of an 8-bit unsigned integer to its equivalent string representation in a specified base.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2051">Die Zeichenfolgendarstellung von <paramref name="value" /> zur Basis <paramref name="toBase" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2051">The string representation of <paramref name="value" /> in base <paramref name="toBase" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-2052">Wenn `toBase` nicht gleich 10 ist, stellt die Zeichenfolge, die von der <xref:System.Convert.ToString%28System.Byte%2CSystem.Int32%29?displayProperty=nameWithType>-Methode zurückgegeben wird, `value` nur durch die Größe dar.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2052">If `toBase` does not equal 10, the string that is returned by the <xref:System.Convert.ToString%28System.Byte%2CSystem.Int32%29?displayProperty=nameWithType> method represents `value` by its magnitude only.</span></span> <span data-ttu-id="d59d4-2053">Wenn die-Methode aufgerufen wird, um eine Zeichenfolge zu erstellen, die später wieder in eine Zahl konvertiert wird, sollte eine entsprechende Methode aufgerufen werden, die nur eine numerische Darstellung in der Größe annimmt, um die Konvertierung auszuführen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2053">If the method is called to create a string that will later be converted back to a number, a corresponding method that assumes a magnitude-only numeric representation should be called to perform the conversion.</span></span> <span data-ttu-id="d59d4-2054">Zu diesen Methoden gehören <xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> oder <xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2054">Such methods include <xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> or <xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-2055">Im folgenden Beispiel wird jedes Element in einem Bytearray in seine äquivalente binär-, hexadezimale, Dezimal und hexadezimale Zeichen folgen Darstellungen konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2055">The following example converts each element in a byte array to its equivalent binary, hexadecimal, decimal, and hexadecimal string representations.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring2.cs#9)]
 [!code-vb[System.Convert.ToString2#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring2.vb#9)]
 [!code-fsharp[System.Convert.ToString2#9](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.convert.tostring2/fs/tostring2.fs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d59d4-2056"><paramref name="toBase" /> ist nicht 2, 8, 10 oder 16.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2056"><paramref name="toBase" /> is not 2, 8, 10, or 16.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (char value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(char value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Char,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Char, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(char value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : char * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2057">Das zu konvertierende Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2057">The Unicode character to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="d59d4-2058">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2058">An object that supplies culture-specific formatting information.</span></span> <span data-ttu-id="d59d4-2059">Dieser Parameter wird ignoriert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2059">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="d59d4-2060">Konvertiert den Wert des angegebenen Unicode-Zeichens unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2060">Converts the value of the specified Unicode character to its equivalent string representation, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2061">Eine Zeichenfolgendarstellung von <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2061">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-2062">Diese Implementierung ist mit <xref:System.Char.ToString?displayProperty=nameWithType>identisch.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2062">This implementation is identical to <xref:System.Char.ToString?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d59d4-2063">Der `provider`-Parameter wird ignoriert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2063">The `provider` parameter is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-2064">Im folgenden Beispiel wird ein <xref:System.Char> Wert in eine <xref:System.String> mit der `ToString`-Methode konvertiert, wobei ein <xref:System.IFormatProvider> Objekt verwendet wird, das den Typ des Format Anbieters anzeigt, für den er aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2064">The following example converts a <xref:System.Char> value to a <xref:System.String> with the `ToString` method, using an <xref:System.IFormatProvider> object that displays the type of the format provider for which it is called.</span></span> <span data-ttu-id="d59d4-2065">Das Beispiel zeigt, dass auf das <xref:System.IFormatProvider> Objekt nicht verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2065">The example shows that the <xref:System.IFormatProvider> object is not referenced.</span></span>  
  
 [!code-cpp[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/CPP/nonnumeric.cpp#2)]
 [!code-csharp[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/CS/nonnumeric.cs#2)]
 [!code-vb[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/VB/nonnumeric.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (DateTime value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.DateTime value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.DateTime,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As DateTime, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(DateTime value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : DateTime * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2066">Der Datums- und Uhrzeitwert, der konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2066">The date and time value to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="d59d4-2067">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2067">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="d59d4-2068">Konvertiert den Wert der angegebenen <see cref="T:System.DateTime" /> unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2068">Converts the value of the specified <see cref="T:System.DateTime" /> to its equivalent string representation, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2069">Eine Zeichenfolgendarstellung von <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2069">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-2070">Diese Implementierung ist mit <xref:System.DateTime.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>identisch.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2070">This implementation is identical to <xref:System.DateTime.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-2071">Im folgenden Beispiel wird ein <xref:System.DateTime> Wert in die entsprechende Zeichen folgen Darstellung in acht verschiedenen Kulturen konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2071">The following example converts a <xref:System.DateTime> value to its equivalent string representation in eight different cultures.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#13)]
 [!code-vb[System.Convert.ToString2#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (decimal value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.Decimal value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Decimal,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Decimal, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Decimal value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : decimal * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2072">Die zu konvertierende Dezimalzahl.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2072">The decimal number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="d59d4-2073">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2073">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="d59d4-2074">Konvertiert den Wert der angegebenen Dezimalzahl unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2074">Converts the value of the specified decimal number to its equivalent string representation, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2075">Eine Zeichenfolgendarstellung von <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2075">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-2076">Diese Implementierung ist mit <xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>identisch.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2076">This implementation is identical to <xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-2077">Im folgenden Beispiel wird jedes Element in einem Array von <xref:System.Decimal>-Werten in die entsprechende Zeichen folgen Darstellung in vier verschiedenen Kulturen konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2077">The following example converts each element in an array of <xref:System.Decimal> values to its equivalent string representation in four different cultures.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#14)]
 [!code-vb[System.Convert.ToString2#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (double value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(float64 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Double,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Double, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(double value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : double * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2078">Die zu konvertierende Gleitkommazahl mit doppelter Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2078">The double-precision floating-point number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="d59d4-2079">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2079">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="d59d4-2080">Konvertiert den Wert der angegebenen Gleitkommazahl mit doppelter Genauigkeit in die entsprechende Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2080">Converts the value of the specified double-precision floating-point number to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2081">Eine Zeichenfolgendarstellung von <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2081">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-2082">Diese Implementierung ist identisch mit <xref:System.Double.ToString%28System.IFormatProvider%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="d59d4-2082">This implementation is identical to <xref:System.Double.ToString%28System.IFormatProvider%29?displayProperty=nameWithType></span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-2083">Im folgenden Beispiel wird jedes Element in einem Array von <xref:System.Double>-Werten in die entsprechende Zeichen folgen Darstellung in vier verschiedenen Kulturen konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2083">The following example converts each element in an array of <xref:System.Double> values to its equivalent string representation in four different cultures.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#15)]
 [!code-vb[System.Convert.ToString2#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (short value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int16 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int16,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Short, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(short value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : int16 * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2084">Die zu konvertierende 16-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2084">The 16-bit signed integer to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="d59d4-2085">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2085">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="d59d4-2086">Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl mit Vorzeichen unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2086">Converts the value of the specified 16-bit signed integer to its equivalent string representation, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2087">Eine Zeichenfolgendarstellung von <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2087">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-2088">Diese Implementierung ist mit <xref:System.Int16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>identisch.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2088">This implementation is identical to <xref:System.Int16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-2089">Im folgenden Beispiel wird eine benutzerdefinierte <xref:System.Globalization.NumberFormatInfo> Klasse definiert, die das negative Vorzeichen als die Zeichenfolge "~" und das positive Zeichen als Zeichenfolge "!" definiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2089">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> class that defines its negative sign as the string "~" and its positive sign as the string "!".</span></span> <span data-ttu-id="d59d4-2090">Anschließend wird die <xref:System.Convert.ToString%28System.Int16%2CSystem.IFormatProvider%29>-Methode aufgerufen, um jedes Element in einem Array von 16-Bit-Ganzzahlen in die entsprechende Zeichen folgen Darstellung zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2090">It then calls the <xref:System.Convert.ToString%28System.Int16%2CSystem.IFormatProvider%29> method to convert each element in an array of 16-bit integers to its equivalent string representation.</span></span> <span data-ttu-id="d59d4-2091">Die Konvertierung verwendet die invariante Kultur und das benutzerdefinierte <xref:System.Globalization.NumberFormatInfo> Objekt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2091">The conversion uses the invariant culture as well as the custom <xref:System.Globalization.NumberFormatInfo> object.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#19)]
 [!code-vb[System.Convert.ToString2#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (short value, int toBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int16 value, int32 toBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int16,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Short, toBase As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(short value, int toBase);" />
      <MemberSignature Language="F#" Value="static member ToString : int16 * int -&gt; string" Usage="System.Convert.ToString (value, toBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
        <Parameter Name="toBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2092">Die zu konvertierende 16-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2092">The 16-bit signed integer to convert.</span></span></param>
        <param name="toBase"><span data-ttu-id="d59d4-2093">Die Basis des Rückgabewerts, die 2, 8, 10 oder 16 sein muss.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2093">The base of the return value, which must be 2, 8, 10, or 16.</span></span></param>
        <summary><span data-ttu-id="d59d4-2094">Konvertiert den Wert einer 16-Bit-Ganzzahl mit Vorzeichen in die entsprechende Zeichenfolgendarstellung in einer angegebenen Basis.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2094">Converts the value of a 16-bit signed integer to its equivalent string representation in a specified base.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2095">Die Zeichenfolgendarstellung von <paramref name="value" /> zur Basis <paramref name="toBase" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2095">The string representation of <paramref name="value" /> in base <paramref name="toBase" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-2096">Wenn `value` positiv und `toBase` 2, 8 oder 16 ist, verwendet die zurückgegebene Zeichenfolge die Darstellung der Signatur und der Größe.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2096">If `value` is positive and `toBase` is 2, 8, or 16, the returned string uses sign-and-magnitude representation.</span></span> <span data-ttu-id="d59d4-2097">Wenn `value` negativ ist und `toBase` 2, 8 oder 16 ist, verwendet die zurückgegebene Zeichenfolge die zwei Komplement-Darstellung.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2097">If `value` is negative and `toBase` is 2, 8, or 16, the returned string uses two's complement representation.</span></span> <span data-ttu-id="d59d4-2098">Dies bedeutet, dass das höchst wertige Bit des höherwertigen Bytes (Bit 15) als Signier Bit interpretiert wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2098">This means that the high-order bit of the high-order byte (bit 15) is interpreted as the sign bit.</span></span> <span data-ttu-id="d59d4-2099">Wenn die <xref:System.Convert.ToString%28System.Int16%2CSystem.Int32%29>-Methode aufgerufen wird, um eine Zeichenfolge zu erstellen, die später wieder in eine Zahl konvertiert wird, sollte eine entsprechende Methode, die eine ähnliche numerische Darstellung annimmt, aufgerufen werden, um die Konvertierung auszuführen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2099">If the <xref:System.Convert.ToString%28System.Int16%2CSystem.Int32%29> method is called to create a string that will later be converted back to a number, a corresponding method that assumes a similar numeric representation should be called to perform the conversion.</span></span> <span data-ttu-id="d59d4-2100">Zu diesen Methoden gehören <xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> und <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2100">Such methods include <xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> and <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-2101">Im folgenden Beispiel wird jedes Element in einem Array von 16-Bit-Ganzzahlen mit Vorzeichen in die entsprechenden binären, oktalen, dezimalen und hexadezimalen Zeichen folgen Darstellungen konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2101">The following example converts each element in an array of 16-bit signed integers to its equivalent binary, octal, decimal, and hexadecimal string representations.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring2.cs#10)]
 [!code-vb[System.Convert.ToString2#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring2.vb#10)]
 [!code-fsharp[System.Convert.ToString2#10](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.convert.tostring2/fs/tostring2.fs#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d59d4-2102"><paramref name="toBase" /> ist nicht 2, 8, 10 oder 16.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2102"><paramref name="toBase" /> is not 2, 8, 10, or 16.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (int value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int32 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int32,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Integer, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(int value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : int * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2103">Die zu konvertierende 32-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2103">The 32-bit signed integer to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="d59d4-2104">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2104">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="d59d4-2105">Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl mit Vorzeichen unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2105">Converts the value of the specified 32-bit signed integer to its equivalent string representation, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2106">Eine Zeichenfolgendarstellung von <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2106">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-2107">Diese Implementierung ist mit <xref:System.Int32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>identisch.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2107">This implementation is identical to <xref:System.Int32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-2108">Im folgenden Beispiel wird eine benutzerdefinierte <xref:System.Globalization.NumberFormatInfo> Klasse definiert, die das negative Vorzeichen als die Zeichenfolge "~" und das positive Zeichen als Zeichenfolge "!" definiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2108">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> class that defines its negative sign as the string "~" and its positive sign as the string "!".</span></span> <span data-ttu-id="d59d4-2109">Anschließend wird die <xref:System.Convert.ToString%28System.Int32%2CSystem.IFormatProvider%29>-Methode aufgerufen, um jedes Element in einem Array von ganzen Zahlen in die entsprechende Zeichen folgen Darstellung zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2109">It then calls the <xref:System.Convert.ToString%28System.Int32%2CSystem.IFormatProvider%29> method to convert each element in an array of integers to its equivalent string representation.</span></span> <span data-ttu-id="d59d4-2110">Die Konvertierung verwendet die invariante Kultur und das benutzerdefinierte <xref:System.Globalization.NumberFormatInfo> Objekt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2110">The conversion uses the invariant culture as well as the custom <xref:System.Globalization.NumberFormatInfo> object.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#20)]
 [!code-vb[System.Convert.ToString2#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (int value, int toBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int32 value, int32 toBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Integer, toBase As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(int value, int toBase);" />
      <MemberSignature Language="F#" Value="static member ToString : int * int -&gt; string" Usage="System.Convert.ToString (value, toBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="toBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2111">Die zu konvertierende 32-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2111">The 32-bit signed integer to convert.</span></span></param>
        <param name="toBase"><span data-ttu-id="d59d4-2112">Die Basis des Rückgabewerts, die 2, 8, 10 oder 16 sein muss.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2112">The base of the return value, which must be 2, 8, 10, or 16.</span></span></param>
        <summary><span data-ttu-id="d59d4-2113">Konvertiert den Wert einer 32-Bit-Ganzzahl mit Vorzeichen in die entsprechende Zeichenfolgendarstellung in einer angegebenen Basis.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2113">Converts the value of a 32-bit signed integer to its equivalent string representation in a specified base.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2114">Die Zeichenfolgendarstellung von <paramref name="value" /> zur Basis <paramref name="toBase" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2114">The string representation of <paramref name="value" /> in base <paramref name="toBase" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-2115">Wenn `value` positiv und `toBase` 2, 8 oder 16 ist, verwendet die zurückgegebene Zeichenfolge die Darstellung der Signatur und der Größe.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2115">If `value` is positive and `toBase` is 2, 8, or 16, the returned string uses sign-and-magnitude representation.</span></span> <span data-ttu-id="d59d4-2116">Wenn `value` negativ ist und `toBase` 2, 8 oder 16 ist, verwendet die zurückgegebene Zeichenfolge die zwei Komplement-Darstellung.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2116">If `value` is negative and `toBase` is 2, 8, or 16, the returned string uses two's complement representation.</span></span> <span data-ttu-id="d59d4-2117">Dies bedeutet, dass das höchst wertige Bit des Byte der höchsten Ordnung (Bit 31) als Signier Bit interpretiert wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2117">This means that the high-order bit of the highest-order byte (bit 31) is interpreted as the sign bit.</span></span> <span data-ttu-id="d59d4-2118">Wenn die <xref:System.Convert.ToString%28System.Int32%2CSystem.Int32%29>-Methode aufgerufen wird, um eine Zeichenfolge zu erstellen, die später wieder in eine Zahl konvertiert wird, sollte eine entsprechende Methode, die eine ähnliche numerische Darstellung annimmt, aufgerufen werden, um die Konvertierung auszuführen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2118">If the <xref:System.Convert.ToString%28System.Int32%2CSystem.Int32%29> method is called to create a string that will later be converted back to a number, a corresponding method that assumes a similar numeric representation should be called to perform the conversion.</span></span> <span data-ttu-id="d59d4-2119">Zu diesen Methoden gehören <xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> und <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2119">Such methods include <xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> and <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-2120">Im folgenden Beispiel wird jedes Element in einem ganzzahligen Array in seine äquivalente binär-, hexadezimale, Dezimal und hexadezimale Zeichen folgen Darstellungen konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2120">The following example converts each element in an integer array to its equivalent binary, hexadecimal, decimal, and hexadecimal string representations.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring2.cs#11)]
 [!code-vb[System.Convert.ToString2#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring2.vb#11)]
 [!code-fsharp[System.Convert.ToString2#11](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.convert.tostring2/fs/tostring2.fs#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d59d4-2121"><paramref name="toBase" /> ist nicht 2, 8, 10 oder 16.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2121"><paramref name="toBase" /> is not 2, 8, 10, or 16.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (long value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int64 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int64,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Long, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(long value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : int64 * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2122">Die zu konvertierende 64-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2122">The 64-bit signed integer to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="d59d4-2123">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2123">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="d59d4-2124">Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl mit Vorzeichen unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2124">Converts the value of the specified 64-bit signed integer to its equivalent string representation, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2125">Eine Zeichenfolgendarstellung von <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2125">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-2126">Diese Implementierung ist mit <xref:System.Int64.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>identisch.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2126">This implementation is identical to <xref:System.Int64.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-2127">Im folgenden Beispiel wird eine benutzerdefinierte <xref:System.Globalization.NumberFormatInfo> Klasse definiert, die das negative Vorzeichen als die Zeichenfolge "~" und das positive Zeichen als Zeichenfolge "!" definiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2127">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> class that defines its negative sign as the string "~" and its positive sign as the string "!".</span></span> <span data-ttu-id="d59d4-2128">Anschließend wird die <xref:System.Convert.ToString%28System.Int64%2CSystem.IFormatProvider%29>-Methode aufgerufen, um jedes Element in einem Long-ganzzahligen Array in die entsprechende Zeichen folgen Darstellung zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2128">It then calls the <xref:System.Convert.ToString%28System.Int64%2CSystem.IFormatProvider%29> method to convert each element in a long integer array to its equivalent string representation.</span></span> <span data-ttu-id="d59d4-2129">Die Konvertierung verwendet die invariante Kultur und das benutzerdefinierte <xref:System.Globalization.NumberFormatInfo> Objekt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2129">The conversion uses the invariant culture as well as the custom <xref:System.Globalization.NumberFormatInfo> object.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#21)]
 [!code-vb[System.Convert.ToString2#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (long value, int toBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int64 value, int32 toBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int64,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Long, toBase As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(long value, int toBase);" />
      <MemberSignature Language="F#" Value="static member ToString : int64 * int -&gt; string" Usage="System.Convert.ToString (value, toBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="toBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2130">Die zu konvertierende 64-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2130">The 64-bit signed integer to convert.</span></span></param>
        <param name="toBase"><span data-ttu-id="d59d4-2131">Die Basis des Rückgabewerts, die 2, 8, 10 oder 16 sein muss.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2131">The base of the return value, which must be 2, 8, 10, or 16.</span></span></param>
        <summary><span data-ttu-id="d59d4-2132">Konvertiert den Wert einer 64-Bit-Ganzzahl mit Vorzeichen in die entsprechende Zeichenfolgendarstellung in einer angegebenen Basis.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2132">Converts the value of a 64-bit signed integer to its equivalent string representation in a specified base.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2133">Die Zeichenfolgendarstellung von <paramref name="value" /> zur Basis <paramref name="toBase" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2133">The string representation of <paramref name="value" /> in base <paramref name="toBase" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-2134">Wenn `value` positiv und `toBase` nicht 10 ist, wird in der zurückgegebenen Zeichenfolge die Darstellung der Signatur und der Größe verwendet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2134">If `value` is positive and `toBase` is not 10, the returned string uses sign-and-magnitude representation.</span></span> <span data-ttu-id="d59d4-2135">Wenn `value` negativ und `toBase` nicht 10 ist, verwendet die zurückgegebene Zeichenfolge die zwei Komplement-Darstellung.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2135">If `value` is negative and `toBase` is not 10, the returned string uses two's complement representation.</span></span> <span data-ttu-id="d59d4-2136">Dies bedeutet, dass das höchst wertige Bit des Byte der höchsten Ordnung (Bit 63) als Signier Bit interpretiert wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2136">This means that the high-order bit of the highest-order byte (bit 63) is interpreted as the sign bit.</span></span> <span data-ttu-id="d59d4-2137">Wenn die <xref:System.Convert.ToString%28System.Int64%2CSystem.Int32%29>-Methode aufgerufen wird, um eine Zeichenfolge zu erstellen, die später wieder in eine Zahl konvertiert wird, sollte eine entsprechende Methode, die eine ähnliche numerische Darstellung annimmt, aufgerufen werden, um die Konvertierung auszuführen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2137">If the <xref:System.Convert.ToString%28System.Int64%2CSystem.Int32%29> method is called to create a string that will later be converted back to a number, a corresponding method that assumes a similar numeric representation should be called to perform the conversion.</span></span> <span data-ttu-id="d59d4-2138">Zu diesen Methoden gehören <xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> und <xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2138">Such methods include <xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> and <xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-2139">Im folgenden Beispiel wird jedes Element in einem Long-ganzzahligen Array in die entsprechenden binär-, hexadezimal-, Dezimal-und hexadezimalen Zeichen folgen Darstellungen konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2139">The following example converts each element in a long integer array to its equivalent binary, hexadecimal, decimal, and hexadecimal string representations.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring2.cs#12)]
 [!code-vb[System.Convert.ToString2#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring2.vb#12)]  
 [!code-fsharp[System.Convert.ToString2#12](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.convert.tostring2/fs/tostring2.fs#12)]  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d59d4-2140"><paramref name="toBase" /> ist nicht 2, 8, 10 oder 16.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2140"><paramref name="toBase" /> is not 2, 8, 10, or 16.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Object, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : obj * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2141">Ein Objekt, das den zu konvertierenden Wert angibt, oder <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2141">An object that supplies the value to convert, or <see langword="null" />.</span></span></param>
        <param name="provider"><span data-ttu-id="d59d4-2142">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2142">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="d59d4-2143">Konvertiert den Wert des angegebenen Objekts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2143">Converts the value of the specified object to its equivalent string representation using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2144">Die Zeichenfolgendarstellung von <paramref name="value" /> oder <see cref="F:System.String.Empty" />, wenn <paramref name="value" /> ein Objekt ist, dessen Wert <see langword="null" /> beträgt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2144">The string representation of <paramref name="value" />, or <see cref="F:System.String.Empty" /> if <paramref name="value" /> is an object whose value is <see langword="null" />.</span></span> <span data-ttu-id="d59d4-2145">Wenn <paramref name="value" /> gleich <see langword="null" /> ist, gibt die Methode <see langword="null" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2145">If <paramref name="value" /> is <see langword="null" />, the method returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-2146">Wenn der `value`-Parameter die <xref:System.IConvertible>-Schnittstelle implementiert, ruft die-Methode die <xref:System.IConvertible.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>-Implementierung `value`auf.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2146">If the `value` parameter implements the <xref:System.IConvertible> interface, the method calls the <xref:System.IConvertible.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> implementation of `value`.</span></span> <span data-ttu-id="d59d4-2147">Andernfalls ruft die-Methode die <xref:System.IFormattable.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>-Implementierung auf, wenn der `value` Parameter die <xref:System.IFormattable>-Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2147">Otherwise, if the `value` parameter implements the <xref:System.IFormattable> interface, the method calls its <xref:System.IFormattable.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="d59d4-2148">Wenn `value` keine-Schnittstelle implementiert, ruft die-Methode die `ToString()`-Methode des `value`-Parameters auf, und der `provider`-Parameter wird ignoriert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2148">If `value` implements neither interface, the method calls the `value` parameter's `ToString()` method, and the `provider` parameter is ignored.</span></span>  
  
 <span data-ttu-id="d59d4-2149">Der `provider`-Parameter wird verwendet, wenn der `value` Parameter die <xref:System.IConvertible> oder <xref:System.IFormattable> Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2149">The `provider` parameter is used if the `value` parameter implements the <xref:System.IConvertible> or <xref:System.IFormattable> interface.</span></span> <span data-ttu-id="d59d4-2150">Der `provider`-Parameter wird am häufigsten verwendet, um kulturspezifische Informationen anzugeben, die bei der Konvertierung von `value`verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2150">The most common use of the `provider` parameter is to specify culture-specific information used in the conversion of `value`.</span></span> <span data-ttu-id="d59d4-2151">Wenn der `value`-Parameter z. b. eine negative Dezimalzahl ist, kann der `provider`-Parameter kulturspezifische Informationen über die Notation bereitstellen, die für das negative Zeichen und das Dezimaltrennzeichen verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2151">For example, if the `value` parameter is a negative decimal number, the `provider` parameter can supply culture-specific information about the notation used for the negative sign and decimal separator.</span></span> <span data-ttu-id="d59d4-2152">Das zweite Beispiel im nächsten Abschnitt veranschaulicht einen Format Anbieter, der keine Kultur abhängigen Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2152">The second example in the next section illustrates a format provider that does not supply culture-sensitive formatting information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-2153">Im folgenden Beispiel wird eine `Temperature` Klasse definiert, die die <xref:System.Object.ToString%2A?displayProperty=nameWithType>-Methode überschreibt, jedoch nicht die <xref:System.IConvertible>-Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2153">The following example defines a `Temperature` class that overrides the <xref:System.Object.ToString%2A?displayProperty=nameWithType> method but does not implement the <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d59d4-2154">Das Beispiel veranschaulicht, wie Aufrufe der <xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType>-Methode wiederum die `Temperature.ToString`-Methode aufrufen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2154">The example illustrates how calls to the <xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method, in turn, call the `Temperature.ToString` method.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#26](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring5.cs#26)]
 [!code-vb[System.Convert.ToString2#26](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring5.vb#26)]  
  
 <span data-ttu-id="d59d4-2155">Im folgenden Beispiel wird eine `Temperature` Klasse definiert, die die <xref:System.IFormattable>-Schnittstelle implementiert, aber die <xref:System.IConvertible>-Schnittstelle nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2155">The following example defines a `Temperature` class that implements the <xref:System.IFormattable> interface but does not implement the <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d59d4-2156">Die <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType>-Implementierung stellt den `Temperature` Wert in Celsius, Fahrenheit oder Kelvin dar, abhängig von der Format Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2156">Its <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> implementation represents the `Temperature` value in Celsius, Fahrenheit, or Kelvin, depending on the format  string.</span></span> <span data-ttu-id="d59d4-2157">Im Beispiel wird auch eine `TemperatureProvider` Klasse definiert, die <xref:System.IFormatProvider> implementiert und eine zufällig generierte Format Zeichenfolge bereitstellt, die von der <xref:System.IFormattable> Implementierung der `Temperature`-Klasse verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2157">The example also defines a `TemperatureProvider` class that implements <xref:System.IFormatProvider> and provides a randomly generated format string that is used by the <xref:System.IFormattable> implementation of the `Temperature` class.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#30](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring_obj30.cs#30)]
 [!code-vb[System.Convert.ToString2#30](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring_obj30.vb#30)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (sbyte value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int8 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.SByte,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As SByte, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::SByte value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : sbyte * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2158">Die zu konvertierende 8-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2158">The 8-bit signed integer to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="d59d4-2159">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2159">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="d59d4-2160">Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl mit Vorzeichen unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2160">Converts the value of the specified 8-bit signed integer to its equivalent string representation, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2161">Eine Zeichenfolgendarstellung von <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2161">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-2162">Diese Implementierung ist mit <xref:System.SByte.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>identisch.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2162">This implementation is identical to <xref:System.SByte.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-2163">Im folgenden Beispiel wird eine benutzerdefinierte <xref:System.Globalization.NumberFormatInfo> Klasse definiert, die das negative Vorzeichen als die Zeichenfolge "~" und das positive Zeichen als Zeichenfolge "!" definiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2163">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> class that defines its negative sign as the string "~" and its positive sign as the string "!".</span></span> <span data-ttu-id="d59d4-2164">Anschließend wird die <xref:System.Convert.ToString%28System.SByte%2CSystem.IFormatProvider%29?displayProperty=nameWithType>-Methode aufgerufen, um jedes Element im Bytearray mit Vorzeichen in die entsprechende Zeichen folgen Darstellung zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2164">It then calls the <xref:System.Convert.ToString%28System.SByte%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method to convert each element in signed byte array to its equivalent string representation.</span></span> <span data-ttu-id="d59d4-2165">Die Konvertierung verwendet die invariante Kultur und das benutzerdefinierte <xref:System.Globalization.NumberFormatInfo> Objekt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2165">The conversion uses the invariant culture as well as the custom <xref:System.Globalization.NumberFormatInfo> object.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#17)]
 [!code-vb[System.Convert.ToString2#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (float value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(float32 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Single,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Single, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(float value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : single * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2166">Die zu konvertierende Gleitkommazahl mit einfacher Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2166">The single-precision floating-point number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="d59d4-2167">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2167">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="d59d4-2168">Konvertiert den Wert der angegebenen Gleitkommazahl mit einfacher Genauigkeit unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2168">Converts the value of the specified single-precision floating-point number to its equivalent string representation, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2169">Eine Zeichenfolgendarstellung von <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2169">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-2170">Diese Implementierung ist mit <xref:System.Single.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>identisch.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2170">This implementation is identical to <xref:System.Single.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-2171">Im folgenden Beispiel wird jedes Element in einem Array von <xref:System.Single>-Werten in die entsprechende Zeichen folgen Darstellung in vier verschiedenen Kulturen konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2171">The following example converts each element in an array of <xref:System.Single> values to its equivalent string representation in four different cultures.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#18)]
 [!code-vb[System.Convert.ToString2#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : string * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2172">Die zurückzugebende Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2172">The string to return.</span></span></param>
        <param name="provider"><span data-ttu-id="d59d4-2173">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2173">An object that supplies culture-specific formatting information.</span></span> <span data-ttu-id="d59d4-2174">Dieser Parameter wird ignoriert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2174">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="d59d4-2175">Gibt die angegebene Zeichenfolgeninstanz zurück. Es wird keine wirkliche Konvertierung durchgeführt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2175">Returns the specified string instance; no actual conversion is performed.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2176"><paramref name="value" /> wird unverändert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2176"><paramref name="value" /> is returned unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-2177">Im folgenden Beispiel wird die `ToString`-Methode mit einem <xref:System.String>-Parameter aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2177">The following example calls the `ToString` method with a <xref:System.String> parameter.</span></span> <span data-ttu-id="d59d4-2178">Die-Methode gibt die unveränderte <xref:System.String> ohne Verweis auf das <xref:System.IFormatProvider>-Objekt zurück.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2178">The method returns the unmodified <xref:System.String> without referencing the <xref:System.IFormatProvider> object.</span></span>  
  
 [!code-cpp[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/CPP/nonnumeric.cpp#2)]
 [!code-csharp[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/CS/nonnumeric.cs#2)]
 [!code-vb[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/VB/nonnumeric.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (ushort value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int16 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.UInt16,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As UShort, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::UInt16 value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : uint16 * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2179">Die zu konvertierende 16-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2179">The 16-bit unsigned integer to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="d59d4-2180">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2180">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="d59d4-2181">Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl ohne Vorzeichen unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2181">Converts the value of the specified 16-bit unsigned integer to its equivalent string representation, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2182">Eine Zeichenfolgendarstellung von <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2182">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-2183">Diese Implementierung ist mit <xref:System.UInt16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>identisch.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2183">This implementation is identical to <xref:System.UInt16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-2184">Im folgenden Beispiel wird eine benutzerdefinierte <xref:System.Globalization.NumberFormatInfo> Klasse definiert, die das negative Vorzeichen als die Zeichenfolge "~" und das positive Zeichen als Zeichenfolge "!" definiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2184">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> class that defines its negative sign as the string "~" and its positive sign as the string "!".</span></span> <span data-ttu-id="d59d4-2185">Anschließend wird die <xref:System.Convert.ToString%28System.UInt16%2CSystem.IFormatProvider%29>-Methode aufgerufen, um den Wert einer 16-Bit-Ganzzahl ohne Vorzeichen in die entsprechende Zeichen folgen Darstellung zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2185">It then calls the <xref:System.Convert.ToString%28System.UInt16%2CSystem.IFormatProvider%29> method to convert a 16-bit unsigned integer value to its equivalent string representation.</span></span> <span data-ttu-id="d59d4-2186">Die Konvertierung verwendet sowohl die invariante Kultur als auch das benutzerdefinierte <xref:System.Globalization.NumberFormatInfo> Objekt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2186">The conversion uses both the invariant culture and the custom <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="d59d4-2187">Die Ausgabe gibt an, dass diese Formatierungsinformationen nicht verwendet werden, da der Format Bezeichner "G" standardmäßig kein positives Vorzeichen mit positiven Werten enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2187">The output indicates that this formatting information is not used, because by default the "G" format specifier does not include a positive sign with positive values.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#22](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#22)]
 [!code-vb[System.Convert.ToString2#22](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (uint value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int32 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.UInt32,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As UInteger, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::UInt32 value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : uint32 * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2188">Die zu konvertierende 32-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2188">The 32-bit unsigned integer to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="d59d4-2189">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2189">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="d59d4-2190">Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl ohne Vorzeichen unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2190">Converts the value of the specified 32-bit unsigned integer to its equivalent string representation, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2191">Eine Zeichenfolgendarstellung von <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2191">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-2192">Diese Implementierung ist mit <xref:System.UInt32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>identisch.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2192">This implementation is identical to <xref:System.UInt32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-2193">Im folgenden Beispiel wird eine benutzerdefinierte <xref:System.Globalization.NumberFormatInfo> Klasse definiert, die das negative Vorzeichen als die Zeichenfolge "~" und das positive Zeichen als Zeichenfolge "!" definiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2193">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> class that defines its negative sign as the string "~" and its positive sign as the string "!".</span></span> <span data-ttu-id="d59d4-2194">Anschließend wird die <xref:System.Convert.ToString%28System.UInt32%2CSystem.IFormatProvider%29>-Methode aufgerufen, um einen ganzzahligen Wert ohne Vorzeichen in die entsprechende Zeichen folgen Darstellung zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2194">It then calls the <xref:System.Convert.ToString%28System.UInt32%2CSystem.IFormatProvider%29> method to convert an unsigned integer value to its equivalent string representation.</span></span> <span data-ttu-id="d59d4-2195">Die Konvertierung verwendet sowohl die invariante Kultur als auch das benutzerdefinierte <xref:System.Globalization.NumberFormatInfo> Objekt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2195">The conversion uses both the invariant culture and the custom <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="d59d4-2196">Die Ausgabe gibt an, dass diese Formatierungsinformationen nicht verwendet werden, da der Format Bezeichner "G" standardmäßig kein positives Vorzeichen mit positiven Werten enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2196">The output indicates that this formatting information is not used, because by default the "G" format specifier does not include a positive sign with positive values.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#23)]
 [!code-vb[System.Convert.ToString2#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (ulong value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int64 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.UInt64,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As ULong, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::UInt64 value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : uint64 * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2197">Die zu konvertierende 64-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2197">The 64-bit unsigned integer to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="d59d4-2198">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2198">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="d59d4-2199">Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl ohne Vorzeichen unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2199">Converts the value of the specified 64-bit unsigned integer to its equivalent string representation, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2200">Eine Zeichenfolgendarstellung von <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2200">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-2201">Diese Implementierung ist mit <xref:System.UInt64.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>identisch.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2201">This implementation is identical to <xref:System.UInt64.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-2202">Im folgenden Beispiel wird eine benutzerdefinierte <xref:System.Globalization.NumberFormatInfo> Klasse definiert, die das negative Vorzeichen als die Zeichenfolge "~" und das positive Zeichen als Zeichenfolge "!" definiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2202">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> class that defines its negative sign as the string "~" and its positive sign as the string "!".</span></span> <span data-ttu-id="d59d4-2203">Anschließend wird die <xref:System.Convert.ToString%28System.UInt64%2CSystem.IFormatProvider%29>-Methode aufgerufen, um einen Ganzzahl ohne Vorzeichen Long Integer-Wert in die entsprechende Zeichen folgen Darstellung zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2203">It then calls the <xref:System.Convert.ToString%28System.UInt64%2CSystem.IFormatProvider%29> method to convert an unsigned long integer value to its equivalent string representation.</span></span> <span data-ttu-id="d59d4-2204">Die Konvertierung verwendet sowohl die invariante Kultur als auch das benutzerdefinierte <xref:System.Globalization.NumberFormatInfo> Objekt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2204">The conversion uses both the invariant culture and the custom <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="d59d4-2205">Die Ausgabe gibt an, dass diese Formatierungsinformationen nicht verwendet werden, da der Format Bezeichner "G" standardmäßig kein positives Vorzeichen mit positiven Werten enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2205">The output indicates that this formatting information is not used, because by default the "G" format specifier does not include a positive sign with positive values.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#24)]
 [!code-vb[System.Convert.ToString2#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToUInt16">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d59d4-2206">Konvertiert einen angegebenen Wert in eine 16-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2206">Converts a specified value to a 16-bit unsigned integer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Boolean) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(bool value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : bool -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2207">Der zu konvertierende boolesche Wert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2207">The Boolean value to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-2208">Konvertiert den angegebenen booleschen Wert in die entsprechende 16-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2208">Converts the specified Boolean value to the equivalent 16-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2209">Die Zahl 1, wenn <paramref name="value" /><see langword="true" /> ist, andernfalls 0 (null).</span><span class="sxs-lookup"><span data-stu-id="d59d4-2209">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-2210">Im folgenden Beispiel werden die booleschen Werte `true` und `false` in ganze 16-Bit-Ganzzahlen ohne Vorzeichen konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2210">The following example converts the Boolean values `true` and `false` to unsigned 16-bit integers.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#1)]
 [!code-vb[System.Convert.ToUInt16#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Byte) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : byte -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2211">Die zu konvertierende 8-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2211">The 8-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-2212">Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl ohne Vorzeichen in die entsprechende 16-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2212">Converts the value of the specified 8-bit unsigned integer to the equivalent 16-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2213">Eine 16-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2213">A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-2214">Im folgenden Beispiel wird jedes Element in einem Bytearray in eine 16-Bit-Ganzzahl ohne Vorzeichen konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2214">The following example converts each element in a byte array to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#2)]
 [!code-vb[System.Convert.ToUInt16#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Char) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(char value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : char -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2215">Das zu konvertierende Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2215">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-2216">Konvertiert den Wert des angegebenen Unicode-Zeichens in die entsprechende 16-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2216">Converts the value of the specified Unicode character to the equivalent 16-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2217">Die 16-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2217">The 16-bit unsigned integer equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-2218">Im folgenden Beispiel wird jedes Element in einem Zeichen Array in eine 16-Bit-Ganzzahl ohne Vorzeichen konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2218">The following example converts each element in a character array to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#3)]
 [!code-vb[System.Convert.ToUInt16#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As DateTime) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : DateTime -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2219">Der Datums- und Uhrzeitwert, der konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2219">The date and time value to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-2220">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2220">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2221">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2221">This conversion is not supported.</span></span> <span data-ttu-id="d59d4-2222">Es wird kein Wert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2222">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-2223">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2223">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Decimal) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : decimal -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2224">Die zu konvertierende Dezimalzahl.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2224">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-2225">Konvertiert den Wert der angegebenen Dezimalzahl in die entsprechende 16-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2225">Converts the value of the specified decimal number to an equivalent 16-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2226"><paramref name="value" />, auf die nächste 16-Bit-Ganzzahl ohne Vorzeichen gerundet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2226"><paramref name="value" />, rounded to the nearest 16-bit unsigned integer.</span></span> <span data-ttu-id="d59d4-2227">Wenn <paramref name="value" /> genau zwischen zwei ganzen Zahlen liegt, wird die gerade Zahl zurückgegeben (d. h. 4,5 wird in 4 und 5,5 in 6 konvertiert).</span><span class="sxs-lookup"><span data-stu-id="d59d4-2227">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-2228">Im folgenden Beispiel wird jedes Element in einem Array von <xref:System.Decimal>-Werten in eine 16-Bit-Ganzzahl ohne Vorzeichen konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2228">The following example converts each element in an array of <xref:System.Decimal> values to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#4)]
 [!code-vb[System.Convert.ToUInt16#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-2229"><paramref name="value" /> ist kleiner als 0 (null) oder größer als <see cref="F:System.UInt16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2229"><paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Double) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(double value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : double -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2230">Die zu konvertierende Gleitkommazahl mit doppelter Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2230">The double-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-2231">Konvertiert den Wert der angegebenen Gleitkommazahl mit doppelter Genauigkeit in eine entsprechende 16-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2231">Converts the value of the specified double-precision floating-point number to an equivalent 16-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2232"><paramref name="value" />, auf die nächste 16-Bit-Ganzzahl ohne Vorzeichen gerundet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2232"><paramref name="value" />, rounded to the nearest 16-bit unsigned integer.</span></span> <span data-ttu-id="d59d4-2233">Wenn <paramref name="value" /> genau zwischen zwei ganzen Zahlen liegt, wird die gerade Zahl zurückgegeben (d. h. 4,5 wird in 4 und 5,5 in 6 konvertiert).</span><span class="sxs-lookup"><span data-stu-id="d59d4-2233">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-2234">Im folgenden Beispiel wird jedes Element in einem Array von <xref:System.Double>-Werten in eine 16-Bit-Ganzzahl ohne Vorzeichen konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2234">The following example converts each element in an array of <xref:System.Double> values to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#5)]
 [!code-vb[System.Convert.ToUInt16#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-2235"><paramref name="value" /> ist kleiner als 0 (null) oder größer als <see cref="F:System.UInt16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2235"><paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Short) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(short value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : int16 -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2236">Die zu konvertierende 16-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2236">The 16-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-2237">Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl mit Vorzeichen in die entsprechende 16-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2237">Converts the value of the specified 16-bit signed integer to the equivalent 16-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2238">Eine 16-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2238">A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-2239">Im folgenden Beispiel wird versucht, jedes Element in einem 16-Bit-ganzzahligen Array in eine 16-Bit-Ganzzahl ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2239">The following example attempts to convert each element in a 16-bit integer array to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#6)]
 [!code-vb[System.Convert.ToUInt16#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-2240"><paramref name="value" /> ist kleiner als Null.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2240"><paramref name="value" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Integer) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(int value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : int -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2241">Die zu konvertierende 32-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2241">The 32-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-2242">Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl mit Vorzeichen in eine entsprechende 16-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2242">Converts the value of the specified 32-bit signed integer to an equivalent 16-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2243">Eine 16-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2243">A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-2244">Im folgenden Beispiel wird jedes Element in einem ganzzahligen Array in eine 16-Bit-Ganzzahl ohne Vorzeichen konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2244">The following example converts each element in an integer array to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#7)]
 [!code-vb[System.Convert.ToUInt16#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-2245"><paramref name="value" /> ist kleiner als 0 (null) oder größer als <see cref="F:System.UInt16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2245"><paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Long) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(long value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : int64 -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2246">Die zu konvertierende 64-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2246">The 64-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-2247">Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl mit Vorzeichen in eine entsprechende 16-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2247">Converts the value of the specified 64-bit signed integer to an equivalent 16-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2248">Eine 16-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2248">A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-2249">Im folgenden Beispiel wird jedes Element in einem Long-ganzzahligen Array in eine 16-Bit-Ganzzahl ohne Vorzeichen konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2249">The following example converts each element in a long integer array to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#8)]
 [!code-vb[System.Convert.ToUInt16#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-2250"><paramref name="value" /> ist kleiner als 0 (null) oder größer als <see cref="F:System.UInt16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2250"><paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Object) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : obj -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2251">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert, oder <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2251">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="d59d4-2252">Konvertiert den Wert des angegebenen Objekts in eine 16-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2252">Converts the value of the specified object to a 16-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2253">Eine 16-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2253">A 16-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-2254">Der Rückgabewert ist das Ergebnis des Aufrufs der <xref:System.IConvertible.ToUInt16%2A?displayProperty=nameWithType>-Methode des zugrunde liegenden Typs `value`.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2254">The return value is the result of invoking the <xref:System.IConvertible.ToUInt16%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-2255">Im folgenden Beispiel wird versucht, jedes Element in einem Objekt Array in eine 16-Bit-Ganzzahl ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2255">The following example attempts to convert each element in an object array to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#9)]
 [!code-vb[System.Convert.ToUInt16#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-2256"><paramref name="value" /> weist kein geeignetes Format auf.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2256"><paramref name="value" /> is not in an appropriate format.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-2257">Die <paramref name="value" />-Schnittstelle wird von <see cref="T:System.IConvertible" /> nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2257"><paramref name="value" /> does not implement the  <see cref="T:System.IConvertible" /> interface.</span></span>  
  
<span data-ttu-id="d59d4-2258">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-2258">-or-</span></span> 
<span data-ttu-id="d59d4-2259">Die Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2259">The conversion is not supported.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-2260"><paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.UInt16.MinValue" /> oder größer als <see cref="F:System.UInt16.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2260"><paramref name="value" /> represents a number that is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As SByte) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : sbyte -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2261">Die zu konvertierende 8-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2261">The 8-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-2262">Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl mit Vorzeichen in die entsprechende 16-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2262">Converts the value of the specified 8-bit signed integer to the equivalent 16-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2263">Eine 16-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2263">A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-2264">Im folgenden Beispiel wird jedes Element in einem Byte-Array mit Vorzeichen in eine 16-Bit-Ganzzahl ohne Vorzeichen konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2264">The following example converts each element in a signed byte array to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#10)]
 [!code-vb[System.Convert.ToUInt16#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-2265"><paramref name="value" /> ist kleiner als Null.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2265"><paramref name="value" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Single) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(float value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : single -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2266">Die zu konvertierende Gleitkommazahl mit einfacher Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2266">The single-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-2267">Konvertiert den Wert der angegebenen Gleitkommazahl mit einfacher Genauigkeit in die entsprechende 16-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2267">Converts the value of the specified single-precision floating-point number to an equivalent 16-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2268"><paramref name="value" />, auf die nächste 16-Bit-Ganzzahl ohne Vorzeichen gerundet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2268"><paramref name="value" />, rounded to the nearest 16-bit unsigned integer.</span></span> <span data-ttu-id="d59d4-2269">Wenn <paramref name="value" /> genau zwischen zwei ganzen Zahlen liegt, wird die gerade Zahl zurückgegeben (d. h. 4,5 wird in 4 und 5,5 in 6 konvertiert).</span><span class="sxs-lookup"><span data-stu-id="d59d4-2269">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-2270">Im folgenden Beispiel wird jedes Element in einem Array von <xref:System.String>-Werten in eine 16-Bit-Ganzzahl ohne Vorzeichen konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2270">The following example converts each element in an array of <xref:System.String> values to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#11)]
 [!code-vb[System.Convert.ToUInt16#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-2271"><paramref name="value" /> ist kleiner als 0 (null) oder größer als <see cref="F:System.UInt16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2271"><paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Single" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As String) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : string -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2272">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2272">A string that contains the number to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-2273">Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl in die entsprechende 16-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2273">Converts the specified string representation of a number to an equivalent 16-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2274">Eine 16-Bit-Ganzzahl ohne Vorzeichen, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2274">A 16-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-2275">Die Verwendung der <xref:System.Convert.ToUInt16%28System.String%29>-Methode entspricht der Übergabe von `value` an die <xref:System.UInt16.Parse%28System.String%29?displayProperty=nameWithType>-Methode.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2275">Using the <xref:System.Convert.ToUInt16%28System.String%29> method is equivalent to passing `value` to the <xref:System.UInt16.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="d59d4-2276">`value` wird mithilfe der Formatierungskonventionen der aktuellen Threadkultur interpretiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2276">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="d59d4-2277">Wenn eine Ausnahme nicht behandelt werden soll, wenn bei der Konvertierung ein Fehler auftritt, können Sie stattdessen die <xref:System.UInt16.TryParse%2A?displayProperty=nameWithType>-Methode abrufen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2277">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.UInt16.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="d59d4-2278">Sie gibt einen <xref:System.Boolean> Wert zurück, der angibt, ob die Konvertierung erfolgreich war oder fehlgeschlagen ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2278">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-2279">Im folgenden Beispiel wird versucht, jedes Element in einem numerischen Zeichen folgen Array in eine 16-Bit-Ganzzahl ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2279">The following example attempts to convert each element in a numeric string array to a 16-bit unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#12)]
 [!code-vb[System.Convert.ToUInt16#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-2280"><paramref name="value" /> besteht nicht aus einem optionalen Vorzeichen und einer Folge von Ziffern (0 bis 9).</span><span class="sxs-lookup"><span data-stu-id="d59d4-2280"><paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-2281"><paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.UInt16.MinValue" /> oder größer als <see cref="F:System.UInt16.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2281"><paramref name="value" /> represents a number that is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As UShort) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : uint16 -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2282">Die zurückzugebende 16-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2282">The 16-bit unsigned integer to return.</span></span></param>
        <summary><span data-ttu-id="d59d4-2283">Gibt die angegebene 16-Bit-Ganzzahl ohne Vorzeichen zurück. Es wird keine wirkliche Konvertierung durchgeführt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2283">Returns the specified 16-bit unsigned integer; no actual conversion is performed.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2284"><paramref name="value" /> wird unverändert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2284"><paramref name="value" /> is returned unchanged.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As UInteger) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : uint32 -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2285">Die zu konvertierende 32-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2285">The 32-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-2286">Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende 16-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2286">Converts the value of the specified 32-bit unsigned integer to an equivalent 16-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2287">Eine 16-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2287">A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-2288">Im folgenden Beispiel wird versucht, jedes Element in einem Array von Ganzzahlen ohne Vorzeichen in eine 16-Bit-Ganzzahl ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2288">The following example attempts to convert each element in an array of unsigned integers to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#13)]
 [!code-vb[System.Convert.ToUInt16#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-2289"><paramref name="value" /> ist größer als <see cref="F:System.UInt16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2289"><paramref name="value" /> is greater than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As ULong) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : uint64 -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2290">Die zu konvertierende 64-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2290">The 64-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-2291">Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende 16-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2291">Converts the value of the specified 64-bit unsigned integer to an equivalent 16-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2292">Eine 16-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2292">A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-2293">Im folgenden Beispiel wird versucht, jedes Element in einem Array von Long-Ganzzahlen ohne Vorzeichen in eine 16-Bit-Ganzzahl ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2293">The following example attempts to convert each element in an array of unsigned long integers to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#14)]
 [!code-vb[System.Convert.ToUInt16#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-2294"><paramref name="value" /> ist größer als <see cref="F:System.UInt16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2294"><paramref name="value" /> is greater than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Object, provider As IFormatProvider) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : obj * IFormatProvider -&gt; uint16" Usage="System.Convert.ToUInt16 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2295">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2295">An object that implements the <see cref="T:System.IConvertible" /> interface.</span></span></param>
        <param name="provider"><span data-ttu-id="d59d4-2296">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2296">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="d59d4-2297">Konvertiert den Wert des angegebenen Objekts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in eine 16-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2297">Converts the value of the specified object to a 16-bit unsigned integer, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2298">Eine 16-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2298">A 16-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-2299">Der Rückgabewert ist das Ergebnis des Aufrufs der <xref:System.IConvertible.ToUInt16%2A?displayProperty=nameWithType>-Methode des zugrunde liegenden Typs `value`.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2299">The return value is the result of invoking the <xref:System.IConvertible.ToUInt16%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="d59d4-2300">`provider` ermöglicht es dem Benutzer, kulturspezifische Konvertierungs Informationen zum Inhalt von `value`anzugeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2300">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="d59d4-2301">Wenn `value` z. b. ein <xref:System.String> ist, das eine Zahl darstellt, können `provider` kulturspezifische Informationen über die Notation bereitstellen, die für diese Zahl verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2301">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="d59d4-2302">Die Basis Typen ignorieren `provider`; der-Parameter kann jedoch verwendet werden, wenn `value` ein benutzerdefinierter Typ ist, der die <xref:System.IConvertible>-Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2302">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-2303">Im folgenden Beispiel wird eine `HexString` Klasse definiert, die die <xref:System.IConvertible>-Schnittstelle implementiert, und die die Zeichen folgen Darstellung von 16-Bit-und 16-Bit-Werten ohne Vorzeichen enthalten soll.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2303">The following example defines a `HexString` class that implements the <xref:System.IConvertible> interface and that is designed to hold the string representation of both 16-bit signed and 16-bit unsigned values.</span></span> <span data-ttu-id="d59d4-2304">Die-Klasse enthält eine `Sign`-Eigenschaft, die das Vorzeichen des hexadezimal Werts angibt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2304">The class includes a `Sign` property that indicates the sign of its hexadecimal value.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_3.cs#16)]
 [!code-vb[System.Convert.ToUInt16#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_3.vb#16)]  
  
 <span data-ttu-id="d59d4-2305">Das folgende Beispiel zeigt, dass ein Aufruf der <xref:System.Convert.ToUInt16%28System.Object%2CSystem.IFormatProvider%29>-Methode, die ein `HexString`-Objekt als Parameter übergibt, wiederum die <xref:System.IConvertible.ToUInt16%2A?displayProperty=nameWithType>-Implementierung der `HexString`-Klasse aufruft.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2305">The following example shows that a call to the <xref:System.Convert.ToUInt16%28System.Object%2CSystem.IFormatProvider%29> method that passes a `HexString` object as a parameter, in turn, calls the <xref:System.IConvertible.ToUInt16%2A?displayProperty=nameWithType> implementation of the `HexString` class.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_3.cs#17)]
 [!code-vb[System.Convert.ToUInt16#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_3.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-2306"><paramref name="value" /> weist kein geeignetes Format auf.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2306"><paramref name="value" /> is not in an appropriate format.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-2307">Die <paramref name="value" />-Schnittstelle wird von <see cref="T:System.IConvertible" /> nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2307"><paramref name="value" /> does not implement the  <see cref="T:System.IConvertible" /> interface.</span></span>  
  
<span data-ttu-id="d59d4-2308">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-2308">-or-</span></span> 
<span data-ttu-id="d59d4-2309">Die Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2309">The conversion is not supported.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-2310"><paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.UInt16.MinValue" /> oder größer als <see cref="F:System.UInt16.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2310"><paramref name="value" /> represents a number that is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As String, provider As IFormatProvider) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : string * IFormatProvider -&gt; uint16" Usage="System.Convert.ToUInt16 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2311">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2311">A string that contains the number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="d59d4-2312">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2312">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="d59d4-2313">Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in eine entsprechende 16-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2313">Converts the specified string representation of a number to an equivalent 16-bit unsigned integer, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2314">Eine 16-Bit-Ganzzahl ohne Vorzeichen, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2314">A 16-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-2315">Der Rückgabewert ist das Ergebnis des Aufrufs von <xref:System.UInt16.Parse%2A?displayProperty=nameWithType> auf `value`.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2315">The return value is the result of invoking <xref:System.UInt16.Parse%2A?displayProperty=nameWithType> on `value`.</span></span>  
  
 <span data-ttu-id="d59d4-2316">`provider` ist eine <xref:System.IFormatProvider> Instanz, die ein <xref:System.Globalization.NumberFormatInfo>-Objekt abruft.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2316">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="d59d4-2317">Das <xref:System.Globalization.NumberFormatInfo>-Objekt stellt kulturspezifische Informationen zum Format von `value`bereit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2317">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="d59d4-2318">Wenn `provider` `null`ist, wird der <xref:System.Globalization.NumberFormatInfo> für die aktuelle Kultur verwendet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2318">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="d59d4-2319">Wenn eine Ausnahme nicht behandelt werden soll, wenn bei der Konvertierung ein Fehler auftritt, können Sie stattdessen die <xref:System.UInt16.TryParse%2A?displayProperty=nameWithType>-Methode abrufen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2319">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.UInt16.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="d59d4-2320">Sie gibt einen <xref:System.Boolean> Wert zurück, der angibt, ob die Konvertierung erfolgreich war oder fehlgeschlagen ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2320">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-2321">Im folgenden Beispiel wird ein benutzerdefiniertes <xref:System.Globalization.NumberFormatInfo> Objekt definiert, das die Zeichenfolge "POS" als positives Vorzeichen und die Zeichenfolge "NETg" als negatives Vorzeichen erkennt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2321">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> object that recognizes the string "pos" as the positive sign and the string "neg" as the negative sign.</span></span> <span data-ttu-id="d59d4-2322">Anschließend wird versucht, jedes Element eines numerischen Zeichen folgen Arrays mit diesem Anbieter und dem <xref:System.Globalization.NumberFormatInfo> Anbieter für die invariante Kultur in eine ganze Zahl zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2322">It then attempts to convert each element of a numeric string array to an integer using both this provider and the <xref:System.Globalization.NumberFormatInfo> provider for the invariant culture.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_4.cs#18)]
 [!code-vb[System.Convert.ToUInt16#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_4.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-2323"><paramref name="value" /> besteht nicht aus einem optionalen Vorzeichen und einer Folge von Ziffern (0 bis 9).</span><span class="sxs-lookup"><span data-stu-id="d59d4-2323"><paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-2324"><paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.UInt16.MinValue" /> oder größer als <see cref="F:System.UInt16.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2324"><paramref name="value" /> represents a number that is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (string value, int fromBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(string value, int32 fromBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As String, fromBase As Integer) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::String ^ value, int fromBase);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : string * int -&gt; uint16" Usage="System.Convert.ToUInt16 (value, fromBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2325">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2325">A string that contains the number to convert.</span></span></param>
        <param name="fromBase"><span data-ttu-id="d59d4-2326">Die Basis der Zahl in <paramref name="value" />, die 2, 8, 10 oder 16 sein muss.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2326">The base of the number in <paramref name="value" />, which must be 2, 8, 10, or 16.</span></span></param>
        <summary><span data-ttu-id="d59d4-2327">Konvertiert die Zeichenfolgendarstellung einer Zahl in einer angegebenen Basis in eine entsprechende 16-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2327">Converts the string representation of a number in a specified base to an equivalent 16-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2328">Eine 16-Bit-Ganzzahl ohne Vorzeichen, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2328">A 16-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-2329">Wenn `fromBase` 16 ist, können Sie die durch den `value`-Parameter angegebene Zahl mit "0x" oder "0x" als Präfix versehen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2329">If `fromBase` is 16, you can prefix the number specified by the `value` parameter with "0x" or "0X".</span></span>  
  
 <span data-ttu-id="d59d4-2330">Da der <xref:System.UInt16>-Datentyp nur unsignierte Werte unterstützt, geht die <xref:System.Convert.ToUInt16%28System.String%2CSystem.Int32%29>-Methode davon aus, dass `value` mithilfe der unsignierten binären Darstellung ausgedrückt wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2330">Because the <xref:System.UInt16> data type supports unsigned values only, the <xref:System.Convert.ToUInt16%28System.String%2CSystem.Int32%29> method assumes that `value` is expressed using unsigned binary representation.</span></span> <span data-ttu-id="d59d4-2331">Mit anderen Worten: alle 16 Bits werden zur Darstellung des numerischen Werts verwendet, und ein Vorzeichen-Bit ist nicht vorhanden.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2331">In other words, all 16 bits are used to represent the numeric value, and a sign bit is absent.</span></span> <span data-ttu-id="d59d4-2332">Folglich ist es möglich, Code zu schreiben, in dem ein ganzzahliger Wert mit Vorzeichen, der außerhalb des Bereichs des <xref:System.UInt16>-Datentyps liegt, in einen <xref:System.UInt16> Wert konvertiert wird, ohne dass die-Methode eine Ausnahme auslöst.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2332">As a result, it is possible to write code in which a signed integer value that is out of the range of the <xref:System.UInt16> data type is converted to a <xref:System.UInt16> value without the method throwing an exception.</span></span> <span data-ttu-id="d59d4-2333">Im folgenden Beispiel wird <xref:System.Int16.MinValue?displayProperty=nameWithType> in die hexadezimale Zeichen folgen Darstellung konvertiert und dann die <xref:System.Convert.ToUInt16%28System.String%2CSystem.Int32%29>-Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2333">The following example converts <xref:System.Int16.MinValue?displayProperty=nameWithType> to its hexadecimal string representation, and then calls the <xref:System.Convert.ToUInt16%28System.String%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="d59d4-2334">Anstatt eine Ausnahme auszulösen, zeigt die Methode die Meldung "0X8000 wird in 32768 konvertiert" an.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2334">Instead of throwing an exception, the method displays the message, "0x8000 converts to 32768."</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#11)]
 [!code-vb[System.Convert.BaseConversion#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#11)]  
  
 <span data-ttu-id="d59d4-2335">Beim Durchführen von binären Vorgängen oder numerischen Konvertierungen liegt es immer in der Verantwortung des Entwicklers, zu überprüfen, ob eine Methode oder ein Operator die entsprechende numerische Darstellung verwendet, um einen bestimmten Wert zu interpretieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2335">When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method or operator is using the appropriate numeric representation to interpret a particular value.</span></span> <span data-ttu-id="d59d4-2336">Das folgende Beispiel veranschaulicht ein Verfahren, mit dem sichergestellt wird, dass die-Methode die binäre Darstellung nicht in angemessener Weise verwendet, um einen Wert zu interpretieren, der die zwei Komplement Darstellung verwendet, wenn eine hexadezimale Zeichenfolge in einen <xref:System.UInt16> Wert</span><span class="sxs-lookup"><span data-stu-id="d59d4-2336">The following example illustrates one technique for ensuring that the method does not inappropriately use binary representation to interpret a value that uses two's complement representation when converting a hexadecimal string to a <xref:System.UInt16> value.</span></span> <span data-ttu-id="d59d4-2337">Das Beispiel bestimmt, ob ein-Wert eine ganze Zahl mit oder ohne Vorzeichen darstellt, während er diesen Wert in seine Zeichen folgen Darstellung umwandelt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2337">The example determines whether a value represents a signed or an unsigned integer while it is converting that value to its string representation.</span></span> <span data-ttu-id="d59d4-2338">Wenn im Beispiel der Wert in einen <xref:System.UInt16> Wert konvertiert wird, wird überprüft, ob der ursprüngliche Wert eine ganze Zahl mit Vorzeichen ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2338">When the example converts the value to a <xref:System.UInt16> value, it checks whether the original value was a signed integer.</span></span> <span data-ttu-id="d59d4-2339">Wenn dies der Fall ist und das höchst wertige Bit festgelegt ist (was bedeutet, dass der ursprüngliche Wert negativ war), löst die Methode eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2339">If so, and if its high-order bit is set (which indicates that the original value was negative), the method throws an exception.</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#12)]
 [!code-vb[System.Convert.BaseConversion#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#12)]  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-2340">Im folgenden Beispiel wird versucht, jedes Element in einem Array numerischer Zeichen folgen als Hexadezimalwert zu interpretieren und in eine 16-Bit-Ganzzahl ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2340">The following example attempts to interpret each element in an array of numeric strings as a hexadecimal value and to convert it to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_2.cs#15)]
 [!code-vb[System.Convert.ToUInt16#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_2.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d59d4-2341"><paramref name="fromBase" /> ist nicht 2, 8, 10 oder 16.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2341"><paramref name="fromBase" /> is not 2, 8, 10, or 16.</span></span>  
  
<span data-ttu-id="d59d4-2342">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-2342">-or-</span></span> 
 <span data-ttu-id="d59d4-2343"><paramref name="value" />, der eine nicht zur Basis 10 gehörende Zahl ohne Vorzeichen darstellt, weist ein negatives Vorzeichen als Präfix auf.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2343"><paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d59d4-2344"><paramref name="value" /> ist <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2344"><paramref name="value" /> is <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-2345"><paramref name="value" /> enthält ein Zeichen, das in der von <paramref name="fromBase" /> angegebenen Basis keine gültige Ziffer ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2345"><paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span></span> <span data-ttu-id="d59d4-2346">Die Ausnahmemeldung gibt an, dass keine zu konvertierenden Ziffern vorhanden sind, wenn das erste Zeichen in <paramref name="value" /> ungültig ist. Andernfalls gibt die Meldung an, dass <paramref name="value" /> ungültige nachfolgende Zeichen enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2346">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-2347"><paramref name="value" />, der eine nicht zur Basis 10 gehörende Zahl ohne Vorzeichen darstellt, weist ein negatives Vorzeichen als Präfix auf.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2347"><paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</span></span>  
  
<span data-ttu-id="d59d4-2348">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-2348">-or-</span></span> 
 <span data-ttu-id="d59d4-2349"><paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.UInt16.MinValue" /> oder größer als <see cref="F:System.UInt16.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2349"><paramref name="value" /> represents a number that is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToUInt32">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d59d4-2350">Konvertiert einen angegebenen Wert in eine 32-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2350">Converts a specified value to a 32-bit unsigned integer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Boolean) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(bool value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : bool -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2351">Der zu konvertierende boolesche Wert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2351">The Boolean value to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-2352">Konvertiert den angegebenen booleschen Wert in die entsprechende 32-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2352">Converts the specified Boolean value to the equivalent 32-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2353">Die Zahl 1, wenn <paramref name="value" /><see langword="true" /> ist, andernfalls 0 (null).</span><span class="sxs-lookup"><span data-stu-id="d59d4-2353">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-2354">Im folgenden Beispiel werden die booleschen Werte `true` und `false` in ganze Zahlen ohne Vorzeichen konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2354">The following example converts the Boolean values `true` and `false` to unsigned integers.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#1)]
 [!code-vb[System.Convert.ToUInt32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Byte) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : byte -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2355">Die zu konvertierende 8-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2355">The 8-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-2356">Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl ohne Vorzeichen in die entsprechende 32-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2356">Converts the value of the specified 8-bit unsigned integer to the equivalent 32-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2357">Eine 32-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2357">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-2358">Im folgenden Beispiel wird jedes Element in einem Bytearray in eine ganze Zahl ohne Vorzeichen konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2358">The following example converts each element in a byte array to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#2)]
 [!code-vb[System.Convert.ToUInt32#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Char) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(char value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : char -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2359">Das zu konvertierende Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2359">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-2360">Konvertiert den Wert des angegebenen Unicode-Zeichens in die entsprechende 32-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2360">Converts the value of the specified Unicode character to the equivalent 32-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2361">Eine 32-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2361">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-2362">Im folgenden Beispiel wird jedes Element in einem Zeichen Array in eine ganze Zahl ohne Vorzeichen konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2362">The following example converts each element in a character array to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#3)]
 [!code-vb[System.Convert.ToUInt32#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As DateTime) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : DateTime -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2363">Der Datums- und Uhrzeitwert, der konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2363">The date and time value to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-2364">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2364">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2365">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2365">This conversion is not supported.</span></span> <span data-ttu-id="d59d4-2366">Es wird kein Wert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2366">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-2367">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2367">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Decimal) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : decimal -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2368">Die zu konvertierende Dezimalzahl.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2368">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-2369">Konvertiert den Wert der angegebenen Dezimalzahl in die entsprechende 32-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2369">Converts the value of the specified decimal number to an equivalent 32-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2370"><paramref name="value" />, auf die nächste 32-Bit-Ganzzahl ohne Vorzeichen gerundet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2370"><paramref name="value" />, rounded to the nearest 32-bit unsigned integer.</span></span> <span data-ttu-id="d59d4-2371">Wenn <paramref name="value" /> genau zwischen zwei ganzen Zahlen liegt, wird die gerade Zahl zurückgegeben (d. h. 4,5 wird in 4 und 5,5 in 6 konvertiert).</span><span class="sxs-lookup"><span data-stu-id="d59d4-2371">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-2372">Im folgenden Beispiel wird versucht, jedes Element in einem Array von <xref:System.Decimal>-Werten in eine ganze Zahl ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2372">The following example attempts to convert each element in an array of <xref:System.Decimal> values to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#4)]
 [!code-vb[System.Convert.ToUInt32#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-2373"><paramref name="value" /> ist kleiner als 0 (null) oder größer als <see cref="F:System.UInt32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2373"><paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Double) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(double value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : double -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2374">Die zu konvertierende Gleitkommazahl mit doppelter Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2374">The double-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-2375">Konvertiert den Wert der angegebenen Gleitkommazahl mit doppelter Genauigkeit in eine entsprechende 32-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2375">Converts the value of the specified double-precision floating-point number to an equivalent 32-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2376"><paramref name="value" />, auf die nächste 32-Bit-Ganzzahl ohne Vorzeichen gerundet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2376"><paramref name="value" />, rounded to the nearest 32-bit unsigned integer.</span></span> <span data-ttu-id="d59d4-2377">Wenn <paramref name="value" /> genau zwischen zwei ganzen Zahlen liegt, wird die gerade Zahl zurückgegeben (d. h. 4,5 wird in 4 und 5,5 in 6 konvertiert).</span><span class="sxs-lookup"><span data-stu-id="d59d4-2377">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-2378">Im folgenden Beispiel wird versucht, jedes Element in einem Array von <xref:System.Double>-Werten in eine ganze Zahl ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2378">The following example attempts to convert each element in an array of <xref:System.Double> values to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#5)]
 [!code-vb[System.Convert.ToUInt32#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-2379"><paramref name="value" /> ist kleiner als 0 (null) oder größer als <see cref="F:System.UInt32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2379"><paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Short) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(short value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : int16 -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2380">Die zu konvertierende 16-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2380">The 16-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-2381">Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl mit Vorzeichen in die entsprechende 32-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2381">Converts the value of the specified 16-bit signed integer to the equivalent 32-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2382">Eine 32-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2382">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-2383">Im folgenden Beispiel wird versucht, jedes Element in einem 16-Bit-ganzzahligen Array in eine ganze Zahl ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2383">The following example attempts to convert each element in a 16-bit integer array to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#6)]
 [!code-vb[System.Convert.ToUInt32#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-2384"><paramref name="value" /> ist kleiner als Null.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2384"><paramref name="value" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Integer) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(int value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : int -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2385">Die zu konvertierende 32-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2385">The 32-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-2386">Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl mit Vorzeichen in eine entsprechende 32-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2386">Converts the value of the specified 32-bit signed integer to an equivalent 32-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2387">Eine 32-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2387">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-2388">Im folgenden Beispiel wird versucht, jedes Element in einem ganzzahligen Array in eine ganze Zahl ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2388">The following example attempts to convert each element in an integer array to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#7)]
 [!code-vb[System.Convert.ToUInt32#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-2389"><paramref name="value" /> ist kleiner als Null.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2389"><paramref name="value" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Long) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(long value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : int64 -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2390">Die zu konvertierende 64-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2390">The 64-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-2391">Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl mit Vorzeichen in eine entsprechende 32-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2391">Converts the value of the specified 64-bit signed integer to an equivalent 32-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2392">Eine 32-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2392">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-2393">Im folgenden Beispiel wird versucht, jedes Element in einem Long-ganzzahligen Array in eine ganze Zahl ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2393">The following example attempts to convert each element in a long integer array to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#8)]
 [!code-vb[System.Convert.ToUInt32#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-2394"><paramref name="value" /> ist kleiner als 0 (null) oder größer als <see cref="F:System.UInt32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2394"><paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Object) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : obj -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2395">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert, oder <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2395">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="d59d4-2396">Konvertiert den Wert des angegebenen Objekts in eine 32-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2396">Converts the value of the specified object to a 32-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2397">Eine 32-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2397">A 32-bit unsigned integer that is equivalent to <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-2398">Der Rückgabewert ist das Ergebnis des Aufrufs der <xref:System.IConvertible.ToUInt32%2A?displayProperty=nameWithType>-Methode des zugrunde liegenden Typs `value`.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2398">The return value is the result of invoking the <xref:System.IConvertible.ToUInt32%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-2399">Im folgenden Beispiel wird versucht, jedes Element in einem Objekt Array in eine ganze Zahl ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2399">The following example attempts to convert each element in an object array to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#9)]
 [!code-vb[System.Convert.ToUInt32#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-2400"><paramref name="value" /> weist kein geeignetes Format auf.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2400"><paramref name="value" /> is not in an appropriate format.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-2401">Die <paramref name="value" />-Schnittstelle wird von <see cref="T:System.IConvertible" /> nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2401"><paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span></span>  
  
<span data-ttu-id="d59d4-2402">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-2402">-or-</span></span> 
<span data-ttu-id="d59d4-2403">Die Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2403">The conversion is not supported.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-2404"><paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.UInt32.MinValue" /> oder größer als <see cref="F:System.UInt32.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2404"><paramref name="value" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As SByte) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : sbyte -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2405">Die zu konvertierende 8-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2405">The 8-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-2406">Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl mit Vorzeichen in die entsprechende 32-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2406">Converts the value of the specified 8-bit signed integer to the equivalent 32-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2407">Eine 32-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2407">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-2408">Im folgenden Beispiel wird versucht, jedes Element in einem Byte-Array mit Vorzeichen in eine Ganzzahl ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2408">The following example attempts to convert each element in a signed byte array to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#10)]
 [!code-vb[System.Convert.ToUInt32#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-2409"><paramref name="value" /> ist kleiner als Null.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2409"><paramref name="value" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Single) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(float value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : single -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2410">Die zu konvertierende Gleitkommazahl mit einfacher Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2410">The single-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-2411">Konvertiert den Wert der angegebenen Gleitkommazahl mit einfacher Genauigkeit in die entsprechende 32-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2411">Converts the value of the specified single-precision floating-point number to an equivalent 32-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2412"><paramref name="value" />, auf die nächste 32-Bit-Ganzzahl ohne Vorzeichen gerundet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2412"><paramref name="value" />, rounded to the nearest 32-bit unsigned integer.</span></span> <span data-ttu-id="d59d4-2413">Wenn <paramref name="value" /> genau zwischen zwei ganzen Zahlen liegt, wird die gerade Zahl zurückgegeben (d. h. 4,5 wird in 4 und 5,5 in 6 konvertiert).</span><span class="sxs-lookup"><span data-stu-id="d59d4-2413">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-2414">Im folgenden Beispiel wird versucht, jedes Element in einem Array von <xref:System.Single>-Werten in eine ganze Zahl ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2414">The following example attempts to convert each element in an array of <xref:System.Single> values to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#11)]
 [!code-vb[System.Convert.ToUInt32#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-2415"><paramref name="value" /> ist kleiner als 0 (null) oder größer als <see cref="F:System.UInt32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2415"><paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Single" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As String) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : string -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2416">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2416">A string that contains the number to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-2417">Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl in die entsprechende 32-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2417">Converts the specified string representation of a number to an equivalent 32-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2418">Eine 32-Bit-Ganzzahl ohne Vorzeichen, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2418">A 32-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-2419">Die Verwendung der <xref:System.Convert.ToUInt32%28System.String%29>-Methode entspricht der Übergabe von `value` an die <xref:System.UInt32.Parse%28System.String%29?displayProperty=nameWithType>-Methode.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2419">Using the <xref:System.Convert.ToUInt32%28System.String%29> method is equivalent to passing `value` to the <xref:System.UInt32.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="d59d4-2420">`value` wird mithilfe der Formatierungskonventionen der aktuellen Threadkultur interpretiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2420">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="d59d4-2421">Wenn eine Ausnahme nicht behandelt werden soll, wenn bei der Konvertierung ein Fehler auftritt, können Sie stattdessen die <xref:System.UInt32.TryParse%2A?displayProperty=nameWithType>-Methode abrufen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2421">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.UInt32.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="d59d4-2422">Sie gibt einen <xref:System.Boolean> Wert zurück, der angibt, ob die Konvertierung erfolgreich war oder fehlgeschlagen ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2422">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-2423">Im folgenden Beispiel werden die Elemente in einem Zeichen folgen Array als numerische Zeichen folgen interpretiert, und es wird versucht, Sie in ganze Zahlen ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2423">The following example interprets the elements in a string array as numeric strings and attempts to convert them to unsigned integers.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#12)]
 [!code-vb[System.Convert.ToUInt32#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-2424"><paramref name="value" /> besteht nicht aus einem optionalen Vorzeichen und einer Folge von Ziffern (0 bis 9).</span><span class="sxs-lookup"><span data-stu-id="d59d4-2424"><paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-2425"><paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.UInt32.MinValue" /> oder größer als <see cref="F:System.UInt32.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2425"><paramref name="value" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As UShort) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : uint16 -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2426">Die zu konvertierende 16-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2426">The 16-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-2427">Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl ohne Vorzeichen in die entsprechende 32-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2427">Converts the value of the specified 16-bit unsigned integer to the equivalent 32-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2428">Eine 32-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2428">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-2429">Im folgenden Beispiel wird jedes Element in einem 16-Bit-ganz Zahl Array ohne Vorzeichen in einen ganzzahligen Wert ohne Vorzeichen konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2429">The following example converts each element in an unsigned 16-bit integer array to an unsigned integer value.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#13)]
 [!code-vb[System.Convert.ToUInt32#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As UInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : uint32 -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2430">Die zurückzugebende 32-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2430">The 32-bit unsigned integer to return.</span></span></param>
        <summary><span data-ttu-id="d59d4-2431">Gibt die angegebene 32-Bit-Ganzzahl ohne Vorzeichen zurück. Es wird keine wirkliche Konvertierung durchgeführt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2431">Returns the specified 32-bit unsigned integer; no actual conversion is performed.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2432"><paramref name="value" /> wird unverändert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2432"><paramref name="value" /> is returned unchanged.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As ULong) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : uint64 -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2433">Die zu konvertierende 64-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2433">The 64-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-2434">Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende 32-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2434">Converts the value of the specified 64-bit unsigned integer to an equivalent 32-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2435">Eine 32-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2435">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-2436">Im folgenden Beispiel wird versucht, jedes Element in einem Array einer langen ganzen Zahl ohne Vorzeichen in einen ganzzahligen Wert ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2436">The following example attempts to convert each element in an unsigned long integer array to an unsigned integer value.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#14)]
 [!code-vb[System.Convert.ToUInt32#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-2437"><paramref name="value" /> ist größer als <see cref="F:System.UInt32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2437"><paramref name="value" /> is greater than <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Object, provider As IFormatProvider) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : obj * IFormatProvider -&gt; uint32" Usage="System.Convert.ToUInt32 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2438">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2438">An object that implements the <see cref="T:System.IConvertible" /> interface.</span></span></param>
        <param name="provider"><span data-ttu-id="d59d4-2439">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2439">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="d59d4-2440">Konvertiert den Wert des angegebenen Objekts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in eine 32-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2440">Converts the value of the specified object to a 32-bit unsigned integer, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2441">Eine 32-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2441">A 32-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-2442">Der Rückgabewert ist das Ergebnis des Aufrufs der <xref:System.IConvertible.ToUInt32%2A?displayProperty=nameWithType>-Methode des zugrunde liegenden Typs `value`.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2442">The return value is the result of invoking the <xref:System.IConvertible.ToUInt32%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="d59d4-2443">`provider` ermöglicht es dem Benutzer, kulturspezifische Konvertierungs Informationen zum Inhalt von `value`anzugeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2443">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="d59d4-2444">Wenn `value` z. b. ein <xref:System.String> ist, das eine Zahl darstellt, können `provider` kulturspezifische Informationen über die Notation bereitstellen, die für diese Zahl verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2444">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="d59d4-2445">Die Basis Typen ignorieren `provider`; der-Parameter kann jedoch verwendet werden, wenn `value` ein benutzerdefinierter Typ ist, der die <xref:System.IConvertible>-Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2445">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-2446">Im folgenden Beispiel wird eine `HexString` Klasse definiert, die die <xref:System.IConvertible>-Schnittstelle implementiert, und die die Zeichen folgen Darstellung von 32-Bit-Werten mit Vorzeichen und 32-Bit ohne Vorzeichen enthalten soll.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2446">The following example defines a `HexString` class that implements the <xref:System.IConvertible> interface and that is designed to hold the string representation of both 32-bit signed and 32-bit unsigned values.</span></span> <span data-ttu-id="d59d4-2447">Die-Klasse enthält eine `Sign`-Eigenschaft, die das Vorzeichen des hexadezimal Werts angibt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2447">The class includes a `Sign` property that indicates the sign of its hexadecimal value.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_4.cs#17)]
 [!code-vb[System.Convert.ToUInt32#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_4.vb#17)]  
  
 <span data-ttu-id="d59d4-2448">Das folgende Beispiel zeigt, dass ein Aufruf der <xref:System.Convert.ToUInt32%28System.Object%2CSystem.IFormatProvider%29>-Methode, die ein `HexString`-Objekt als Parameter übergibt, wiederum die <xref:System.IConvertible.ToUInt32%2A?displayProperty=nameWithType>-Implementierung der `HexString`-Klasse aufruft.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2448">The following example shows that a call to the <xref:System.Convert.ToUInt32%28System.Object%2CSystem.IFormatProvider%29> method that passes a `HexString` object as a parameter, in turn, calls the <xref:System.IConvertible.ToUInt32%2A?displayProperty=nameWithType> implementation of the `HexString` class.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_4.cs#18)]
 [!code-vb[System.Convert.ToUInt32#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_4.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-2449"><paramref name="value" /> weist kein geeignetes Format auf.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2449"><paramref name="value" /> is not in an appropriate format.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-2450">Die <paramref name="value" />-Schnittstelle wird von <see cref="T:System.IConvertible" /> nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2450"><paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span></span>  
  
<span data-ttu-id="d59d4-2451">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-2451">-or-</span></span> 
<span data-ttu-id="d59d4-2452">Die Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2452">The conversion is not supported.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-2453"><paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.UInt32.MinValue" /> oder größer als <see cref="F:System.UInt32.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2453"><paramref name="value" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As String, provider As IFormatProvider) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : string * IFormatProvider -&gt; uint32" Usage="System.Convert.ToUInt32 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2454">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2454">A string that contains the number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="d59d4-2455">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2455">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="d59d4-2456">Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in eine entsprechende 32-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2456">Converts the specified string representation of a number to an equivalent 32-bit unsigned integer, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2457">Eine 32-Bit-Ganzzahl ohne Vorzeichen, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2457">A 32-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-2458">Der Rückgabewert ist das Ergebnis des Aufrufs von <xref:System.UInt32.Parse%2A?displayProperty=nameWithType> auf `value`.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2458">The return value is the result of invoking <xref:System.UInt32.Parse%2A?displayProperty=nameWithType> on `value`.</span></span>  
  
 <span data-ttu-id="d59d4-2459">`provider` ist eine <xref:System.IFormatProvider> Instanz, die ein <xref:System.Globalization.NumberFormatInfo>-Objekt abruft.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2459">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="d59d4-2460">Das <xref:System.Globalization.NumberFormatInfo>-Objekt stellt kulturspezifische Informationen zum Format von `value`bereit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2460">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="d59d4-2461">Wenn `provider` `null`ist, wird der <xref:System.Globalization.NumberFormatInfo> für die aktuelle Kultur verwendet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2461">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="d59d4-2462">Wenn eine Ausnahme nicht behandelt werden soll, wenn bei der Konvertierung ein Fehler auftritt, können Sie stattdessen die <xref:System.UInt32.TryParse%2A?displayProperty=nameWithType>-Methode abrufen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2462">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.UInt32.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="d59d4-2463">Sie gibt einen <xref:System.Boolean> Wert zurück, der angibt, ob die Konvertierung erfolgreich war oder fehlgeschlagen ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2463">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-2464">Im folgenden Beispiel wird ein benutzerdefiniertes <xref:System.Globalization.NumberFormatInfo> Objekt definiert, das die Zeichenfolge "POS" als positives Vorzeichen und die Zeichenfolge "NETg" als negatives Vorzeichen erkennt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2464">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> object that recognizes the string "pos" as the positive sign and the string "neg" as the negative sign.</span></span> <span data-ttu-id="d59d4-2465">Anschließend wird versucht, jedes Element eines numerischen Zeichen folgen Arrays mit diesem Anbieter und dem <xref:System.Globalization.NumberFormatInfo> Anbieter für die invariante Kultur in eine ganze Zahl zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2465">It then attempts to convert each element of a numeric string array to an integer using both this provider and the <xref:System.Globalization.NumberFormatInfo> provider for the invariant culture.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_2.cs#15)]
 [!code-vb[System.Convert.ToUInt32#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_2.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-2466"><paramref name="value" /> besteht nicht aus einem optionalen Vorzeichen und einer Folge von Ziffern (0 bis 9).</span><span class="sxs-lookup"><span data-stu-id="d59d4-2466"><paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-2467"><paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.UInt32.MinValue" /> oder größer als <see cref="F:System.UInt32.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2467"><paramref name="value" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (string value, int fromBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(string value, int32 fromBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As String, fromBase As Integer) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::String ^ value, int fromBase);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : string * int -&gt; uint32" Usage="System.Convert.ToUInt32 (value, fromBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2468">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2468">A string that contains the number to convert.</span></span></param>
        <param name="fromBase"><span data-ttu-id="d59d4-2469">Die Basis der Zahl in <paramref name="value" />, die 2, 8, 10 oder 16 sein muss.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2469">The base of the number in <paramref name="value" />, which must be 2, 8, 10, or 16.</span></span></param>
        <summary><span data-ttu-id="d59d4-2470">Konvertiert die Zeichenfolgendarstellung einer Zahl in einer angegebenen Basis in eine entsprechende 32-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2470">Converts the string representation of a number in a specified base to an equivalent 32-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2471">Eine 32-Bit-Ganzzahl ohne Vorzeichen, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2471">A 32-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-2472">Wenn `fromBase` 16 ist, können Sie die durch den `value`-Parameter angegebene Zahl mit "0x" oder "0x" als Präfix versehen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2472">If `fromBase` is 16, you can prefix the number specified by the `value` parameter with "0x" or "0X".</span></span>  
  
 <span data-ttu-id="d59d4-2473">Da der <xref:System.UInt32>-Datentyp nur unsignierte Werte unterstützt, geht die <xref:System.Convert.ToUInt32%28System.String%2CSystem.Int32%29>-Methode davon aus, dass `value` mithilfe der unsignierten binären Darstellung ausgedrückt wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2473">Because the <xref:System.UInt32> data type supports unsigned values only, the <xref:System.Convert.ToUInt32%28System.String%2CSystem.Int32%29> method assumes that `value` is expressed using unsigned binary representation.</span></span> <span data-ttu-id="d59d4-2474">Mit anderen Worten: alle 32 Bits werden zur Darstellung des numerischen Werts verwendet, und ein Vorzeichen-Bit ist nicht vorhanden.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2474">In other words, all 32 bits are used to represent the numeric value, and a sign bit is absent.</span></span> <span data-ttu-id="d59d4-2475">Folglich ist es möglich, Code zu schreiben, in dem ein ganzzahliger Wert mit Vorzeichen, der außerhalb des Bereichs des <xref:System.UInt32>-Datentyps liegt, in einen <xref:System.UInt32> Wert konvertiert wird, ohne dass die-Methode eine Ausnahme auslöst.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2475">As a result, it is possible to write code in which a signed integer value that is out of the range of the <xref:System.UInt32> data type is converted to a <xref:System.UInt32> value without the method throwing an exception.</span></span> <span data-ttu-id="d59d4-2476">Im folgenden Beispiel wird <xref:System.Int32.MinValue> in die hexadezimale Zeichen folgen Darstellung konvertiert und dann die <xref:System.Convert.ToUInt32%28System.String%2CSystem.Int32%29>-Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2476">The following example converts <xref:System.Int32.MinValue> to its hexadecimal string representation, and then calls the <xref:System.Convert.ToUInt32%28System.String%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="d59d4-2477">Anstatt eine Ausnahme auszulösen, zeigt die Methode die Meldung "0x80000000 konvertiert in 2147483648" an.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2477">Instead of throwing an exception, the method displays the message, "0x80000000 converts to 2147483648."</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#13)]
 [!code-vb[System.Convert.BaseConversion#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#13)]  
  
 <span data-ttu-id="d59d4-2478">Beim Durchführen von binären Vorgängen oder numerischen Konvertierungen liegt es immer in der Verantwortung des Entwicklers, zu überprüfen, ob eine Methode oder ein Operator die entsprechende numerische Darstellung verwendet, um einen bestimmten Wert zu interpretieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2478">When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method or operator is using the appropriate numeric representation to interpret a particular value.</span></span> <span data-ttu-id="d59d4-2479">Das folgende Beispiel veranschaulicht ein Verfahren, mit dem sichergestellt wird, dass die-Methode die binäre Darstellung nicht in angemessener Weise verwendet, um einen Wert zu interpretieren, der die zwei Komplement Darstellung verwendet, wenn eine hexadezimale Zeichenfolge in einen <xref:System.UInt32> Wert</span><span class="sxs-lookup"><span data-stu-id="d59d4-2479">The following example illustrates one technique for ensuring that the method does not inappropriately use binary representation to interpret a value that uses two's complement representation when converting a hexadecimal string to a <xref:System.UInt32> value.</span></span> <span data-ttu-id="d59d4-2480">Das Beispiel bestimmt, ob ein-Wert eine ganze Zahl mit oder ohne Vorzeichen darstellt, während er diesen Wert in seine Zeichen folgen Darstellung umwandelt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2480">The example determines whether a value represents a signed or an unsigned integer while it is converting that value to its string representation.</span></span> <span data-ttu-id="d59d4-2481">Wenn im Beispiel der Wert in einen <xref:System.UInt32> Wert konvertiert wird, wird überprüft, ob der ursprüngliche Wert eine ganze Zahl mit Vorzeichen ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2481">When the example converts the value to a <xref:System.UInt32> value, it checks whether the original value was a signed integer.</span></span> <span data-ttu-id="d59d4-2482">Wenn dies der Fall ist und das höchst wertige Bit festgelegt ist (was bedeutet, dass der ursprüngliche Wert negativ war), löst die Methode eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2482">If so, and if its high-order bit is set (which indicates that the original value was negative), the method throws an exception.</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#14)]
 [!code-vb[System.Convert.BaseConversion#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#14)]  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-2483">Im folgenden Beispiel wird versucht, jedes Element in einem Array numerischer Zeichen folgen als Hexadezimalwert zu interpretieren und in eine Ganzzahl ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2483">The following example attempts to interpret each element in an array of numeric strings as a hexadecimal value and to convert it to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_3.cs#16)]
 [!code-vb[System.Convert.ToUInt32#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_3.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d59d4-2484"><paramref name="fromBase" /> ist nicht 2, 8, 10 oder 16.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2484"><paramref name="fromBase" /> is not 2, 8, 10, or 16.</span></span>  
  
<span data-ttu-id="d59d4-2485">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-2485">-or-</span></span> 
 <span data-ttu-id="d59d4-2486"><paramref name="value" />, der eine nicht zur Basis 10 gehörende Zahl ohne Vorzeichen darstellt, weist ein negatives Vorzeichen als Präfix auf.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2486"><paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d59d4-2487"><paramref name="value" /> ist <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2487"><paramref name="value" /> is <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-2488"><paramref name="value" /> enthält ein Zeichen, das in der von <paramref name="fromBase" /> angegebenen Basis keine gültige Ziffer ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2488"><paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span></span> <span data-ttu-id="d59d4-2489">Die Ausnahmemeldung gibt an, dass keine zu konvertierenden Ziffern vorhanden sind, wenn das erste Zeichen in <paramref name="value" /> ungültig ist. Andernfalls gibt die Meldung an, dass <paramref name="value" /> ungültige nachfolgende Zeichen enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2489">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-2490"><paramref name="value" />, der eine nicht zur Basis 10 gehörende Zahl ohne Vorzeichen darstellt, weist ein negatives Vorzeichen als Präfix auf.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2490"><paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</span></span>  
  
<span data-ttu-id="d59d4-2491">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-2491">-or-</span></span> 
 <span data-ttu-id="d59d4-2492"><paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.UInt32.MinValue" /> oder größer als <see cref="F:System.UInt32.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2492"><paramref name="value" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToUInt64">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d59d4-2493">Konvertiert einen angegebenen Wert in eine 64-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2493">Converts a specified value to a 64-bit unsigned integer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Boolean) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(bool value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : bool -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2494">Der zu konvertierende boolesche Wert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2494">The Boolean value to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-2495">Konvertiert den angegebenen booleschen Wert in die entsprechende 64-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2495">Converts the specified Boolean value to the equivalent 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2496">Die Zahl 1, wenn <paramref name="value" /><see langword="true" /> ist, andernfalls 0 (null).</span><span class="sxs-lookup"><span data-stu-id="d59d4-2496">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-2497">Im folgenden Beispiel werden boolesche `true` und `false` Werte in lange ganze Zahlen ohne Vorzeichen konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2497">The following example converts Boolean `true` and `false` values to unsigned long integers.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#1)]
 [!code-vb[System.Convert.ToUInt64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Byte) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : byte -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2498">Die zu konvertierende 8-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2498">The 8-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-2499">Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl ohne Vorzeichen in die entsprechende 64-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2499">Converts the value of the specified 8-bit unsigned integer to the equivalent 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2500">Eine 64-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2500">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-2501">Im folgenden Beispiel wird jedes Element in einem Bytearray in eine lange ganze Zahl ohne Vorzeichen konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2501">The following example converts each element in a byte array to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#2)]
 [!code-vb[System.Convert.ToUInt64#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Char) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(char value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : char -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2502">Das zu konvertierende Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2502">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-2503">Konvertiert den Wert des angegebenen Unicode-Zeichens in die entsprechende 64-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2503">Converts the value of the specified Unicode character to the equivalent 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2504">Eine 64-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2504">A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-2505">Im folgenden Beispiel wird jedes Element in einem Zeichen Array in eine lange ganze Zahl ohne Vorzeichen konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2505">The following example converts each element in a character array to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#3)]
 [!code-vb[System.Convert.ToUInt64#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As DateTime) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : DateTime -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2506">Der Datums- und Uhrzeitwert, der konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2506">The date and time value to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-2507">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2507">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2508">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2508">This conversion is not supported.</span></span> <span data-ttu-id="d59d4-2509">Es wird kein Wert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2509">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-2510">Diese Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2510">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Decimal) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : decimal -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2511">Die zu konvertierende Dezimalzahl.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2511">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-2512">Konvertiert den Wert der angegebenen Dezimalzahl in die entsprechende 64-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2512">Converts the value of the specified decimal number to an equivalent 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2513"><paramref name="value" />, auf die nächste 64-Bit-Ganzzahl ohne Vorzeichen gerundet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2513"><paramref name="value" />, rounded to the nearest 64-bit unsigned integer.</span></span> <span data-ttu-id="d59d4-2514">Wenn <paramref name="value" /> genau zwischen zwei ganzen Zahlen liegt, wird die gerade Zahl zurückgegeben (d. h. 4,5 wird in 4 und 5,5 in 6 konvertiert).</span><span class="sxs-lookup"><span data-stu-id="d59d4-2514">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-2515">Im folgenden Beispiel wird versucht, jedes Element in einem Array von <xref:System.Decimal>-Werten in eine lange ganze Zahl ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2515">The following example attempts to convert each element in an array of <xref:System.Decimal> values to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#4)]
 [!code-vb[System.Convert.ToUInt64#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-2516"><paramref name="value" /> ist kleiner als 0 (null) oder größer als <see cref="F:System.UInt64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2516"><paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span></exception>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Double) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(double value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : double -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2517">Die zu konvertierende Gleitkommazahl mit doppelter Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2517">The double-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-2518">Konvertiert den Wert der angegebenen Gleitkommazahl mit doppelter Genauigkeit in eine entsprechende 64-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2518">Converts the value of the specified double-precision floating-point number to an equivalent 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2519"><paramref name="value" />, auf die nächste 64-Bit-Ganzzahl ohne Vorzeichen gerundet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2519"><paramref name="value" />, rounded to the nearest 64-bit unsigned integer.</span></span> <span data-ttu-id="d59d4-2520">Wenn <paramref name="value" /> genau zwischen zwei ganzen Zahlen liegt, wird die gerade Zahl zurückgegeben (d. h. 4,5 wird in 4 und 5,5 in 6 konvertiert).</span><span class="sxs-lookup"><span data-stu-id="d59d4-2520">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-2521">Im folgenden Beispiel wird versucht, jedes Element in einem Array von <xref:System.Double>-Werten in eine lange ganze Zahl ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2521">The following example attempts to convert each element in an array of <xref:System.Double> values to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#5)]
 [!code-vb[System.Convert.ToUInt64#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-2522"><paramref name="value" /> ist kleiner als 0 (null) oder größer als <see cref="F:System.UInt64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2522"><paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Short) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(short value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : int16 -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2523">Die zu konvertierende 16-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2523">The 16-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-2524">Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl mit Vorzeichen in die entsprechende 64-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2524">Converts the value of the specified 16-bit signed integer to the equivalent 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2525">Eine 64-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2525">A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-2526">Im folgenden Beispiel wird versucht, jedes Element in einem Array von 16-Bit-Ganzzahlen in eine lange ganze Zahl ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2526">The following example attempts to convert each element in an array of 16-bit integers to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#6)]
 [!code-vb[System.Convert.ToUInt64#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-2527"><paramref name="value" /> ist kleiner als Null.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2527"><paramref name="value" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Integer) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(int value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : int -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2528">Die zu konvertierende 32-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2528">The 32-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-2529">Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl mit Vorzeichen in eine entsprechende 64-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2529">Converts the value of the specified 32-bit signed integer to an equivalent 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2530">Eine 64-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2530">A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-2531">Im folgenden Beispiel wird versucht, jedes Element in einem Array von ganzen Zahlen in eine lange ganze Zahl ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2531">The following example attempts to convert each element in an array of integers to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#7)]
 [!code-vb[System.Convert.ToUInt64#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-2532"><paramref name="value" /> ist kleiner als Null.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2532"><paramref name="value" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Long) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(long value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : int64 -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2533">Die zu konvertierende 64-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2533">The 64-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-2534">Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl mit Vorzeichen in eine entsprechende 64-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2534">Converts the value of the specified 64-bit signed integer to an equivalent 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2535">Eine 64-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2535">A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-2536">Im folgenden Beispiel wird versucht, jedes Element in einem Array von Long Integer in eine lange ganze Zahl ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2536">The following example attempts to convert each element in an array of long integers to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#8)]
 [!code-vb[System.Convert.ToUInt64#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-2537"><paramref name="value" /> ist kleiner als Null.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2537"><paramref name="value" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Object) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : obj -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2538">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert, oder <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2538">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="d59d4-2539">Konvertiert den Wert des angegebenen Objekts in eine 64-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2539">Converts the value of the specified object to a 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2540">Eine 64-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2540">A 64-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-2541">Der Rückgabewert ist das Ergebnis des Aufrufs der <xref:System.IConvertible.ToUInt64%2A?displayProperty=nameWithType>-Methode des zugrunde liegenden Typs `value`.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2541">The return value is the result of invoking the <xref:System.IConvertible.ToUInt64%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-2542">Im folgenden Beispiel wird versucht, jedes Element in einem Objekt Array in eine lange ganze Zahl ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2542">The following example attempts to convert each element in an object array to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#9)]
 [!code-vb[System.Convert.ToUInt64#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-2543"><paramref name="value" /> weist kein geeignetes Format auf.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2543"><paramref name="value" /> is not in an appropriate format.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-2544">Die <paramref name="value" />-Schnittstelle wird von <see cref="T:System.IConvertible" /> nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2544"><paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span></span>  
  
<span data-ttu-id="d59d4-2545">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-2545">-or-</span></span> 
<span data-ttu-id="d59d4-2546">Die Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2546">The conversion is not supported.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-2547"><paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.UInt64.MinValue" /> oder größer als <see cref="F:System.UInt64.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2547"><paramref name="value" /> represents a number that is less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As SByte) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : sbyte -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2548">Die zu konvertierende 8-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2548">The 8-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-2549">Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl mit Vorzeichen in die entsprechende 64-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2549">Converts the value of the specified 8-bit signed integer to the equivalent 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2550">Eine 64-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2550">A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-2551">Im folgenden Beispiel wird versucht, jedes Element in einem Byte-Array mit Vorzeichen in eine lange ganze Zahl ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2551">The following example attempts to convert each element in a signed byte array to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#10)]
 [!code-vb[System.Convert.ToUInt64#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-2552"><paramref name="value" /> ist kleiner als Null.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2552"><paramref name="value" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Single) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(float value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : single -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2553">Die zu konvertierende Gleitkommazahl mit einfacher Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2553">The single-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-2554">Konvertiert den Wert der angegebenen Gleitkommazahl mit einfacher Genauigkeit in die entsprechende 64-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2554">Converts the value of the specified single-precision floating-point number to an equivalent 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2555"><paramref name="value" />, auf die nächste 64-Bit-Ganzzahl ohne Vorzeichen gerundet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2555"><paramref name="value" />, rounded to the nearest 64-bit unsigned integer.</span></span> <span data-ttu-id="d59d4-2556">Wenn <paramref name="value" /> genau zwischen zwei ganzen Zahlen liegt, wird die gerade Zahl zurückgegeben (d. h. 4,5 wird in 4 und 5,5 in 6 konvertiert).</span><span class="sxs-lookup"><span data-stu-id="d59d4-2556">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-2557">Im folgenden Beispiel wird versucht, jedes Element in einem Array von <xref:System.Single>-Werten in eine lange ganze Zahl ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2557">The following example attempts to convert each element in an array of <xref:System.Single> values to an unsigned long integer.</span></span> <span data-ttu-id="d59d4-2558">Die Ausgabe zeigt, dass Bruchzahlen gerundet werden, bevor die Konvertierung durchgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2558">The output shows that fractional values are rounded before the conversion is performed.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#11)]
 [!code-vb[System.Convert.ToUInt64#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-2559"><paramref name="value" /> ist kleiner als 0 (null) oder größer als <see cref="F:System.UInt64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2559"><paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Single" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As String) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : string -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2560">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2560">A string that contains the number to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-2561">Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl in eine entsprechende 64-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2561">Converts the specified string representation of a number to an equivalent 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2562">Eine 64-Bit-Ganzzahl mit Vorzeichen, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2562">A 64-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-2563">Die Verwendung der <xref:System.Convert.ToInt64%28System.String%29>-Methode entspricht der Übergabe von `value` an die <xref:System.Int64.Parse%28System.String%29?displayProperty=nameWithType>-Methode.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2563">Using the <xref:System.Convert.ToInt64%28System.String%29> method is equivalent to passing `value` to the <xref:System.Int64.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="d59d4-2564">`value` wird mithilfe der Formatierungskonventionen der aktuellen Threadkultur interpretiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2564">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="d59d4-2565">Wenn eine Ausnahme nicht behandelt werden soll, wenn bei der Konvertierung ein Fehler auftritt, können Sie stattdessen die <xref:System.UInt64.TryParse%2A?displayProperty=nameWithType>-Methode abrufen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2565">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.UInt64.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="d59d4-2566">Sie gibt einen <xref:System.Boolean> Wert zurück, der angibt, ob die Konvertierung erfolgreich war oder fehlgeschlagen ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2566">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-2567">Im folgenden Beispiel werden die Elemente eines Zeichen folgen Arrays als numerische Zeichen folgen interpretiert, und es wird versucht, Sie in lange ganze Zahlen ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2567">The following example interprets the elements of a string array as numeric strings and attempts to convert them to unsigned long integers.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#12)]
 [!code-vb[System.Convert.ToUInt64#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-2568"><paramref name="value" /> besteht nicht aus einem optionalen Vorzeichen und einer Folge von Ziffern (0 bis 9).</span><span class="sxs-lookup"><span data-stu-id="d59d4-2568"><paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-2569"><paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.UInt64.MinValue" /> oder größer als <see cref="F:System.UInt64.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2569"><paramref name="value" /> represents a number that is less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As UShort) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : uint16 -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2570">Die zu konvertierende 16-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2570">The 16-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-2571">Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl ohne Vorzeichen in die entsprechende 64-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2571">Converts the value of the specified 16-bit unsigned integer to the equivalent 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2572">Eine 64-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2572">A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-2573">Im folgenden Beispiel wird jedes Element in einem Array von 16-Bit-Ganzzahlen ohne Vorzeichen in eine lange ganze Zahl ohne Vorzeichen konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2573">The following example converts each element in an array of unsigned 16-bit integers to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#13)]
 [!code-vb[System.Convert.ToUInt64#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As UInteger) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : uint32 -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2574">Die zu konvertierende 32-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2574">The 32-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="d59d4-2575">Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende 64-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2575">Converts the value of the specified 32-bit unsigned integer to an equivalent 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2576">Eine 64-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2576">A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59d4-2577">Im folgenden Beispiel wird jedes Element in einem Array von ganzen Zahlen ohne Vorzeichen in eine lange ganze Zahl ohne Vorzeichen konvertiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2577">The following example converts each element in an unsigned integer array to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#14)]
 [!code-vb[System.Convert.ToUInt64#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As ULong) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : uint64 -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2578">Die zurückzugebende 64-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2578">The 64-bit unsigned integer to return.</span></span></param>
        <summary><span data-ttu-id="d59d4-2579">Gibt die angegebene 64-Bit-Ganzzahl ohne Vorzeichen zurück. Es wird keine wirkliche Konvertierung durchgeführt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2579">Returns the specified 64-bit unsigned integer; no actual conversion is performed.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2580"><paramref name="value" /> wird unverändert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2580"><paramref name="value" /> is returned unchanged.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Object, provider As IFormatProvider) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : obj * IFormatProvider -&gt; uint64" Usage="System.Convert.ToUInt64 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2581">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2581">An object that implements the <see cref="T:System.IConvertible" /> interface.</span></span></param>
        <param name="provider"><span data-ttu-id="d59d4-2582">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2582">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="d59d4-2583">Konvertiert den Wert des angegebenen Objekts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in eine 64-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2583">Converts the value of the specified object to a 64-bit unsigned integer, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2584">Eine 64-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2584">A 64-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-2585">Der Rückgabewert ist das Ergebnis des Aufrufs der <xref:System.IConvertible.ToUInt64%2A?displayProperty=nameWithType>-Methode des zugrunde liegenden Typs `value`.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2585">The return value is the result of invoking the <xref:System.IConvertible.ToUInt64%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="d59d4-2586">`provider` ermöglicht es dem Benutzer, kulturspezifische Konvertierungs Informationen zum Inhalt von `value`anzugeben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2586">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="d59d4-2587">Wenn `value` z. b. ein <xref:System.String> ist, das eine Zahl darstellt, können `provider` kulturspezifische Informationen über die Notation bereitstellen, die für diese Zahl verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2587">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="d59d4-2588">Die Basis Typen ignorieren `provider`; der-Parameter kann jedoch verwendet werden, wenn `value` ein benutzerdefinierter Typ ist, der die <xref:System.IConvertible>-Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2588">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-2589">Im folgenden Beispiel wird eine `HexString` Klasse definiert, die die <xref:System.IConvertible>-Schnittstelle implementiert, und die die Zeichen folgen Darstellung von 64-Bit-Werten mit Vorzeichen und 64-Bit ohne Vorzeichen enthalten soll.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2589">The following example defines a `HexString` class that implements the <xref:System.IConvertible> interface and that is designed to hold the string representation of both 64-bit signed and 64-bit unsigned values.</span></span> <span data-ttu-id="d59d4-2590">Die-Klasse enthält eine `Sign`-Eigenschaft, die das Vorzeichen des hexadezimal Werts angibt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2590">The class includes a `Sign` property that indicates the sign of its hexadecimal value.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_4.cs#17)]
 [!code-vb[System.Convert.ToUInt64#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_4.vb#17)]  
  
 <span data-ttu-id="d59d4-2591">Das folgende Beispiel zeigt, dass ein Aufruf der <xref:System.Convert.ToUInt64%28System.Object%2CSystem.IFormatProvider%29>-Methode, die ein `HexString`-Objekt als Parameter übergibt, wiederum die <xref:System.IConvertible.ToUInt64%2A?displayProperty=nameWithType>-Implementierung der `HexString`-Klasse aufruft.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2591">The following example shows that a call to the <xref:System.Convert.ToUInt64%28System.Object%2CSystem.IFormatProvider%29> method that passes a `HexString` object as a parameter, in turn, calls the <xref:System.IConvertible.ToUInt64%2A?displayProperty=nameWithType> implementation of the `HexString` class.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_4.cs#18)]
 [!code-vb[System.Convert.ToUInt64#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_4.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-2592"><paramref name="value" /> weist kein geeignetes Format auf.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2592"><paramref name="value" /> is not in an appropriate format.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d59d4-2593">Die <paramref name="value" />-Schnittstelle wird von <see cref="T:System.IConvertible" /> nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2593"><paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span></span>  
  
<span data-ttu-id="d59d4-2594">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-2594">-or-</span></span> 
<span data-ttu-id="d59d4-2595">Die Konvertierung wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2595">The conversion is not supported.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-2596"><paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.UInt64.MinValue" /> oder größer als <see cref="F:System.UInt64.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2596"><paramref name="value" /> represents a number that is less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As String, provider As IFormatProvider) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : string * IFormatProvider -&gt; uint64" Usage="System.Convert.ToUInt64 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2597">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2597">A string that contains the number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="d59d4-2598">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2598">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="d59d4-2599">Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in eine entsprechende 64-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2599">Converts the specified string representation of a number to an equivalent 64-bit unsigned integer, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2600">Eine 64-Bit-Ganzzahl ohne Vorzeichen, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2600">A 64-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-2601">Der Rückgabewert ist das Ergebnis des Aufrufs von <xref:System.UInt64.Parse%2A?displayProperty=nameWithType> auf `value`.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2601">The return value is the result of invoking <xref:System.UInt64.Parse%2A?displayProperty=nameWithType> on `value`.</span></span>  
  
 <span data-ttu-id="d59d4-2602">`provider` ist eine <xref:System.IFormatProvider> Implementierung, die ein <xref:System.Globalization.NumberFormatInfo>-Objekt abruft.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2602">`provider` is an <xref:System.IFormatProvider> implementation that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="d59d4-2603">Das <xref:System.Globalization.NumberFormatInfo>-Objekt stellt kulturspezifische Informationen zum Format von `value`bereit.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2603">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="d59d4-2604">Wenn `provider` `null`ist, wird das <xref:System.Globalization.NumberFormatInfo>-Objekt für die aktuelle Kultur verwendet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2604">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
 <span data-ttu-id="d59d4-2605">Wenn eine Ausnahme nicht behandelt werden soll, wenn bei der Konvertierung ein Fehler auftritt, können Sie stattdessen die <xref:System.UInt64.TryParse%2A?displayProperty=nameWithType>-Methode abrufen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2605">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.UInt64.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="d59d4-2606">Sie gibt einen <xref:System.Boolean> Wert zurück, der angibt, ob die Konvertierung erfolgreich war oder fehlgeschlagen ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2606">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-2607">Im folgenden Beispiel wird ein benutzerdefiniertes <xref:System.Globalization.NumberFormatInfo> Objekt definiert, das die Zeichenfolge "POS" als positives Vorzeichen und die Zeichenfolge "NETg" als negatives Vorzeichen erkennt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2607">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> object that recognizes the string "pos" as the positive sign and the string "neg" as the negative sign.</span></span> <span data-ttu-id="d59d4-2608">Anschließend wird versucht, jedes Element eines numerischen Zeichen folgen Arrays in eine lange ganze Zahl ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2608">It then attempts to convert each element of a numeric string array to an unsigned long integer.</span></span> <span data-ttu-id="d59d4-2609">Bei der Konvertierung werden sowohl der benutzerdefinierte Anbieter als auch der <xref:System.Globalization.NumberFormatInfo> Anbieter für die invariante Kultur verwendet.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2609">The conversion uses both the custom provider and the <xref:System.Globalization.NumberFormatInfo> provider for the invariant culture.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_2.cs#15)]
 [!code-vb[System.Convert.ToUInt64#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_2.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-2610"><paramref name="value" /> besteht nicht aus einem optionalen Vorzeichen und einer Folge von Ziffern (0 bis 9).</span><span class="sxs-lookup"><span data-stu-id="d59d4-2610"><paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-2611"><paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.UInt64.MinValue" /> oder größer als <see cref="F:System.UInt64.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2611"><paramref name="value" /> represents a number that is less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (string value, int fromBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(string value, int32 fromBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As String, fromBase As Integer) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::String ^ value, int fromBase);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : string * int -&gt; uint64" Usage="System.Convert.ToUInt64 (value, fromBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59d4-2612">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2612">A string that contains the number to convert.</span></span></param>
        <param name="fromBase"><span data-ttu-id="d59d4-2613">Die Basis der Zahl in <paramref name="value" />, die 2, 8, 10 oder 16 sein muss.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2613">The base of the number in <paramref name="value" />, which must be 2, 8, 10, or 16.</span></span></param>
        <summary><span data-ttu-id="d59d4-2614">Konvertiert die Zeichenfolgendarstellung einer Zahl in einer angegebenen Basis in eine entsprechende 64-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2614">Converts the string representation of a number in a specified base to an equivalent 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2615">Eine 64-Bit-Ganzzahl ohne Vorzeichen, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2615">A 64-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59d4-2616">Wenn `fromBase` 16 ist, können Sie die durch den `value`-Parameter angegebene Zahl mit "0x" oder "0x" als Präfix versehen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2616">If `fromBase` is 16, you can prefix the number specified by the `value` parameter with "0x" or "0X".</span></span>  
  
 <span data-ttu-id="d59d4-2617">Da der <xref:System.UInt64>-Datentyp nur unsignierte Werte unterstützt, geht die <xref:System.Convert.ToUInt64%28System.String%2CSystem.Int32%29>-Methode davon aus, dass `value` mithilfe der unsignierten binären Darstellung ausgedrückt wird.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2617">Because the <xref:System.UInt64> data type supports unsigned values only, the <xref:System.Convert.ToUInt64%28System.String%2CSystem.Int32%29> method assumes that `value` is expressed using unsigned binary representation.</span></span> <span data-ttu-id="d59d4-2618">Mit anderen Worten: alle 64 Bits werden zur Darstellung des numerischen Werts verwendet, und ein Vorzeichen-Bit ist nicht vorhanden.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2618">In other words, all 64 bits are used to represent the numeric value, and a sign bit is absent.</span></span> <span data-ttu-id="d59d4-2619">Folglich ist es möglich, Code zu schreiben, in dem ein Wert mit langer Ganzzahl mit Vorzeichen, der außerhalb des Bereichs des <xref:System.UInt64>-Datentyps liegt, in einen <xref:System.UInt64> Wert konvertiert wird, ohne dass die Methode eine Ausnahme auslöst.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2619">As a result, it is possible to write code in which a signed long integer value that is out of the range of the <xref:System.UInt64> data type is converted to a <xref:System.UInt64> value without the method throwing an exception.</span></span> <span data-ttu-id="d59d4-2620">Im folgenden Beispiel wird <xref:System.Int64.MinValue> in die hexadezimale Zeichen folgen Darstellung konvertiert und dann die <xref:System.Convert.ToUInt64%28System.String%2CSystem.Int32%29>-Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2620">The following example converts <xref:System.Int64.MinValue> to its hexadecimal string representation, and then calls the <xref:System.Convert.ToUInt64%28System.String%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="d59d4-2621">Anstatt eine Ausnahme auszulösen, zeigt die Methode die Meldung "0x8000000000000000 konvertiert in 9.223.372.036.854.775.808" an.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2621">Instead of throwing an exception, the method displays the message, "0x8000000000000000 converts to 9223372036854775808."</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#15)]
 [!code-vb[System.Convert.BaseConversion#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#15)]  
  
 <span data-ttu-id="d59d4-2622">Beim Durchführen von binären Vorgängen oder numerischen Konvertierungen liegt es immer in der Verantwortung des Entwicklers, zu überprüfen, ob eine Methode oder ein Operator die entsprechende numerische Darstellung verwendet, um einen bestimmten Wert zu interpretieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2622">When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method or operator is using the appropriate numeric representation to interpret a particular value.</span></span> <span data-ttu-id="d59d4-2623">Das folgende Beispiel veranschaulicht ein Verfahren, mit dem sichergestellt wird, dass die-Methode die binäre Darstellung nicht in angemessener Weise verwendet, um einen Wert zu interpretieren, der die zwei Komplement Darstellung verwendet, wenn eine hexadezimale Zeichenfolge in einen <xref:System.UInt64> Wert</span><span class="sxs-lookup"><span data-stu-id="d59d4-2623">The following example illustrates one technique for ensuring that the method does not inappropriately use binary representation to interpret a value that uses two's complement representation when converting a hexadecimal string to a <xref:System.UInt64> value.</span></span> <span data-ttu-id="d59d4-2624">Das Beispiel bestimmt, ob ein-Wert eine ganze Zahl mit oder ohne Vorzeichen darstellt, während er diesen Wert in seine Zeichen folgen Darstellung umwandelt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2624">The example determines whether a value represents a signed or an unsigned integer while it is converting that value to its string representation.</span></span> <span data-ttu-id="d59d4-2625">Wenn im Beispiel der Wert in einen <xref:System.UInt64> Wert konvertiert wird, wird überprüft, ob der ursprüngliche Wert eine ganze Zahl mit Vorzeichen ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2625">When the example converts the value to a <xref:System.UInt64> value, it checks whether the original value was a signed integer.</span></span> <span data-ttu-id="d59d4-2626">Wenn dies der Fall ist und das höchst wertige Bit festgelegt ist (was bedeutet, dass der ursprüngliche Wert negativ war), löst die Methode eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2626">If so, and if its high-order bit is set (which indicates that the original value was negative), the method throws an exception.</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#16)]
 [!code-vb[System.Convert.BaseConversion#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#16)]  
  
   
  
## Examples  
 <span data-ttu-id="d59d4-2627">Im folgenden Beispiel wird versucht, jedes Element in einem Array numerischer Zeichen folgen als Hexadezimalwert zu interpretieren und in eine lange ganze Zahl ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2627">The following example attempts to interpret each element in an array of numeric strings as a hexadecimal value and to convert it to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_3.cs#16)]
 [!code-vb[System.Convert.ToUInt64#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_3.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d59d4-2628"><paramref name="fromBase" /> ist nicht 2, 8, 10 oder 16.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2628"><paramref name="fromBase" /> is not 2, 8, 10, or 16.</span></span>  
  
<span data-ttu-id="d59d4-2629">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-2629">-or-</span></span> 
 <span data-ttu-id="d59d4-2630"><paramref name="value" />, der eine nicht zur Basis 10 gehörende Zahl ohne Vorzeichen darstellt, weist ein negatives Vorzeichen als Präfix auf.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2630"><paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d59d4-2631"><paramref name="value" /> ist <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2631"><paramref name="value" /> is <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59d4-2632"><paramref name="value" /> enthält ein Zeichen, das in der von <paramref name="fromBase" /> angegebenen Basis keine gültige Ziffer ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2632"><paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span></span> <span data-ttu-id="d59d4-2633">Die Ausnahmemeldung gibt an, dass keine zu konvertierenden Ziffern vorhanden sind, wenn das erste Zeichen in <paramref name="value" /> ungültig ist. Andernfalls gibt die Meldung an, dass <paramref name="value" /> ungültige nachfolgende Zeichen enthält.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2633">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59d4-2634"><paramref name="value" />, der eine nicht zur Basis 10 gehörende Zahl ohne Vorzeichen darstellt, weist ein negatives Vorzeichen als Präfix auf.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2634"><paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</span></span>  
  
<span data-ttu-id="d59d4-2635">- oder -</span><span class="sxs-lookup"><span data-stu-id="d59d4-2635">-or-</span></span> 
 <span data-ttu-id="d59d4-2636"><paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.UInt64.MinValue" /> oder größer als <see cref="F:System.UInt64.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2636"><paramref name="value" /> represents a number that is less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryFromBase64Chars">
      <MemberSignature Language="C#" Value="public static bool TryFromBase64Chars (ReadOnlySpan&lt;char&gt; chars, Span&lt;byte&gt; bytes, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFromBase64Chars(valuetype System.ReadOnlySpan`1&lt;char&gt; chars, valuetype System.Span`1&lt;unsigned int8&gt; bytes, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.TryFromBase64Chars(System.ReadOnlySpan{System.Char},System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFromBase64Chars (chars As ReadOnlySpan(Of Char), bytes As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryFromBase64Chars(ReadOnlySpan&lt;char&gt; chars, Span&lt;System::Byte&gt; bytes, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="static member TryFromBase64Chars : ReadOnlySpan&lt;char&gt; * Span&lt;byte&gt; * int -&gt; bool" Usage="System.Convert.TryFromBase64Chars (chars, bytes, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="bytes" Type="System.Span&lt;System.Byte&gt;" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="d59d4-2637">Eine Spanne mit der Zeichenfolgendarstellung, die mit Base64-Ziffern codiert ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2637">A span containing the string representation that is encoded with base-64 digits.</span></span></param>
        <param name="bytes"><span data-ttu-id="d59d4-2638">Wenn diese Methode <see langword="true" /> zurückgibt, sind die konvertierten 8-Bit-Ganzzahlen ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2638">When this method returns <see langword="true" />, the converted 8-bit unsigned integers.</span></span> <span data-ttu-id="d59d4-2639">Wenn diese Methode <see langword="false" /> zurückgibt, bleibt entweder die Spanne unverändert oder sie enthält eine unvollständige Konvertierung von <paramref name="chars" /> bis zum letzten gültigen Zeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2639">When this method returns <see langword="false" />, either the span remains unmodified or contains an incomplete conversion of <paramref name="chars" />, up to the last valid character.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="d59d4-2640">Mit dieser Methode wird die Anzahl von Bytes zurückgegeben, die in <paramref name="bytes" /> geschrieben wurden.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2640">When this method returns, the number of bytes that were written in <paramref name="bytes" />.</span></span></param>
        <summary><span data-ttu-id="d59d4-2641">Versucht, die angegebene Spanne mit einer Zeichenfolgendarstellung, die mit Base64-Ziffern codiert ist, in eine Spanne von 8-Bit-Ganzzahlen ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2641">Tries to convert the specified span containing a string representation that is encoded with base-64 digits into a span of 8-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2642"><see langword="true" />, wenn die Konvertierung erfolgreich war, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2642"><see langword="true" /> if the conversion was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFromBase64String">
      <MemberSignature Language="C#" Value="public static bool TryFromBase64String (string s, Span&lt;byte&gt; bytes, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFromBase64String(string s, valuetype System.Span`1&lt;unsigned int8&gt; bytes, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.TryFromBase64String(System.String,System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFromBase64String (s As String, bytes As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryFromBase64String(System::String ^ s, Span&lt;System::Byte&gt; bytes, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="static member TryFromBase64String : string * Span&lt;byte&gt; * int -&gt; bool" Usage="System.Convert.TryFromBase64String (s, bytes, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="bytes" Type="System.Span&lt;System.Byte&gt;" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="d59d4-2643">Die Zeichenfolgendarstellung, die mit Base64-Ziffern codiert ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2643">The string representation that is encoded with base-64 digits.</span></span></param>
        <param name="bytes"><span data-ttu-id="d59d4-2644">Wenn diese Methode <see langword="true" /> zurückgibt, sind die konvertierten 8-Bit-Ganzzahlen ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2644">When this method returns <see langword="true" />, the converted 8-bit unsigned integers.</span></span> <span data-ttu-id="d59d4-2645">Wenn diese Methode <see langword="false" /> zurückgibt, bleibt entweder die Spanne unverändert oder sie enthält eine unvollständige Konvertierung von <paramref name="s" /> bis zum letzten gültigen Zeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2645">When this method returns <see langword="false" />, either the span remains unmodified or contains an incomplete conversion of <paramref name="s" />, up to the last valid character.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="d59d4-2646">Mit dieser Methode wird die Anzahl von Bytes zurückgegeben, die in <paramref name="bytes" /> geschrieben wurden.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2646">When this method returns, the number of bytes that were written in <paramref name="bytes" />.</span></span></param>
        <summary><span data-ttu-id="d59d4-2647">Versucht, die angegebene Zeichenfolgendarstellung, die mit Base64-Ziffern codiert ist, in eine Spanne von 8-Bit-Ganzzahlen ohne Vorzeichen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2647">Tries to convert the specified string representation that is encoded with base-64 digits into a span of 8-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2648"><see langword="true" />, wenn die Konvertierung erfolgreich war, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2648"><see langword="true" /> if the conversion was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d59d4-2649"><paramref name="s" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2649"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryToBase64Chars">
      <MemberSignature Language="C#" Value="public static bool TryToBase64Chars (ReadOnlySpan&lt;byte&gt; bytes, Span&lt;char&gt; chars, out int charsWritten, Base64FormattingOptions options = System.Base64FormattingOptions.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryToBase64Chars(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes, valuetype System.Span`1&lt;char&gt; chars, [out] int32&amp; charsWritten, valuetype System.Base64FormattingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.TryToBase64Chars(System.ReadOnlySpan{System.Byte},System.Span{System.Char},System.Int32@,System.Base64FormattingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryToBase64Chars (bytes As ReadOnlySpan(Of Byte), chars As Span(Of Char), ByRef charsWritten As Integer, Optional options As Base64FormattingOptions = System.Base64FormattingOptions.None) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryToBase64Chars : ReadOnlySpan&lt;byte&gt; * Span&lt;char&gt; * int * Base64FormattingOptions -&gt; bool" Usage="System.Convert.TryToBase64Chars (bytes, chars, charsWritten, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="chars" Type="System.Span&lt;System.Char&gt;" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="options" Type="System.Base64FormattingOptions" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="d59d4-2650">Eine schreibgeschützte Spanne von 8-Bit-Ganzzahlen ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2650">A read-only span of 8-bit unsigned integers.</span></span></param>
        <param name="chars"><span data-ttu-id="d59d4-2651">Wenn diese Methode <see langword="true" /> zurückgibt, wird eine Spanne mit der Zeichenfolgendarstellung in Base64 der Elemente in <paramref name="bytes" /> angezeigt.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2651">When this method returns <see langword="true" />, a span containing the string representation in base 64 of the elements in <paramref name="bytes" />.</span></span> <span data-ttu-id="d59d4-2652">Wenn die Länge von <paramref name="bytes" /> 0 ist oder diese Methode <paramref name="false" /> zurückgibt, wird nichts in diesen Parameter geschrieben.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2652">If the length of <paramref name="bytes" /> is 0, or when this method returns <paramref name="false" />, nothing is written into this parameter.</span></span></param>
        <param name="charsWritten"><span data-ttu-id="d59d4-2653">Die Rückgabe dieser Methode ist die Gesamtzahl der in <paramref name="chars" /> geschriebenen Zeichen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2653">When this method returns, the total number of characters written into <paramref name="chars" />.</span></span></param>
        <param name="options"><span data-ttu-id="d59d4-2654">Einer der Enumerationswerte, die angeben, ob im Rückgabewert Zeilenumbrüche eingefügt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2654">One of the enumeration values that specify whether to insert line breaks in the return value.</span></span> <span data-ttu-id="d59d4-2655">Der Standardwert ist <see cref="F:System.Base64FormattingOptions.None" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2655">The default value is <see cref="F:System.Base64FormattingOptions.None" />.</span></span></param>
        <summary><span data-ttu-id="d59d4-2656">Versucht, die 8-Bit-Ganzzahlen ohne Vorzeichen in der angegebenen schreibgeschützten Spanne in eine entsprechende Zeichenfolgendarstellung zu konvertieren, die mit Base64-Ziffern codiert ist.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2656">Tries to convert the 8-bit unsigned integers inside the specified read-only span into their equivalent string representation that is encoded with base-64 digits.</span></span> <span data-ttu-id="d59d4-2657">Sie können optional angeben, ob im Rückgabewert Zeilenumbrüche eingefügt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2657">You can optionally specify whether to insert line breaks in the return value.</span></span></summary>
        <returns><span data-ttu-id="d59d4-2658"><see langword="true" />, wenn die Konvertierung erfolgreich war, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2658"><see langword="true" /> if the conversion is successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d59d4-2659"><paramref name="options" /> ist kein gültiger <see cref="T:System.Base64FormattingOptions" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="d59d4-2659"><paramref name="options" /> is not a valid <see cref="T:System.Base64FormattingOptions" /> value.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
