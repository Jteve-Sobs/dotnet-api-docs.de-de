<Type Name="Math" FullName="System.Math">
  <TypeSignature Language="C#" Value="public static class Math" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Math extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Math" />
  <TypeSignature Language="VB.NET" Value="Public Class Math" />
  <TypeSignature Language="C++ CLI" Value="public ref class Math abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4aed7-101">Stellt Konstanten und statische Methoden für trigonometrische, logarithmische und andere gebräuchliche mathematische Funktionen bereit.</span><span class="sxs-lookup"><span data-stu-id="4aed7-101">Provides constants and static methods for trigonometric, logarithmic, and other common mathematical functions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4aed7-102">Im folgende Beispiel werden verschiedene mathematische und trigonometrische Funktionen aus der <xref:System.Math> Klasse, um die inneren Winkel, der ein Trapez zu berechnen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-102">The following example uses several mathematical and trigonometric functions from the <xref:System.Math> class to calculate the inner angles of a trapezoid.</span></span>  
  
 [!code-cpp[MathSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/MathSample/CPP/mathsample.cpp#1)]
 [!code-csharp[MathSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/MathSample/CS/mathsample.cs#1)]
 [!code-vb[MathSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MathSample/VB/mathsample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Abs">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4aed7-103">Gibt den absoluten Wert einer angegebenen Zahl zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-103">Returns the absolute value of a specified number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static decimal Abs (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Abs(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Abs(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4aed7-104">Eine Zahl, die größer oder gleich <see cref="F:System.Decimal.MinValue" />, aber kleiner oder gleich <see cref="F:System.Decimal.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="4aed7-104">A number that is greater than or equal to <see cref="F:System.Decimal.MinValue" />, but less than or equal to <see cref="F:System.Decimal.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="4aed7-105">Gibt den Absolutbetrag einer <see cref="T:System.Decimal" />-Zahl zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-105">Returns the absolute value of a <see cref="T:System.Decimal" /> number.</span></span></summary>
        <returns><span data-ttu-id="4aed7-106">Eine Dezimalzahl x im Bereich 0 ≤ x ≤<see cref="F:System.Decimal.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="4aed7-106">A decimal number, x, such that 0 ≤ x ≤<see cref="F:System.Decimal.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aed7-107">Der Absolute Wert einer <xref:System.Decimal> ist der numerische Wert ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-107">The absolute value of a <xref:System.Decimal> is its numeric value without its sign.</span></span> <span data-ttu-id="4aed7-108">Beispielsweise ist der Absolute Wert von 1,2 und -1,2 1.2.</span><span class="sxs-lookup"><span data-stu-id="4aed7-108">For example, the absolute value of both 1.2 and -1.2 is 1.2.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4aed7-109">Im folgenden Beispiel wird die <xref:System.Math.Abs%28System.Decimal%29> Methode zum Abrufen der Absolute Wert einer Reihe von <xref:System.Decimal> Werte.</span><span class="sxs-lookup"><span data-stu-id="4aed7-109">The following example uses the <xref:System.Math.Abs%28System.Decimal%29> method to get the absolute value of a number of <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/Abs1.cs#1)]
 [!code-vb[System.Math.Abs#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/Abs1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static double Abs (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Abs(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Abs(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4aed7-110">Eine Zahl, die größer oder gleich <see cref="F:System.Double.MinValue" />, aber kleiner oder gleich <see cref="F:System.Double.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="4aed7-110">A number that is greater than or equal to <see cref="F:System.Double.MinValue" />, but less than or equal to <see cref="F:System.Double.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="4aed7-111">Gibt den absoluten Wert einer Gleitkommazahl mit doppelter Genauigkeit zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-111">Returns the absolute value of a double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="4aed7-112">Eine Gleitkommazahl x mit doppelter Genauigkeit im Bereich 0 ≤ x ≤<see cref="F:System.Double.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="4aed7-112">A double-precision floating-point number, x, such that 0 ≤ x ≤<see cref="F:System.Double.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aed7-113">Der Absolute Wert einer <xref:System.Double> ist der numerische Wert ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-113">The absolute value of a <xref:System.Double> is its numeric value without its sign.</span></span> <span data-ttu-id="4aed7-114">Beispielsweise ist der Absolute Wert von sowohl-1.2e03 und-1.2e03 1.2e03.</span><span class="sxs-lookup"><span data-stu-id="4aed7-114">For example, the absolute value of both 1.2e03 and -1.2e03 is 1.2e03.</span></span>  
  
 <span data-ttu-id="4aed7-115">Wenn `value` gleich <xref:System.Double.NegativeInfinity> oder <xref:System.Double.PositiveInfinity>, ist der Rückgabewert <xref:System.Double.PositiveInfinity>.</span><span class="sxs-lookup"><span data-stu-id="4aed7-115">If `value` is equal to <xref:System.Double.NegativeInfinity> or <xref:System.Double.PositiveInfinity>, the return value is <xref:System.Double.PositiveInfinity>.</span></span> <span data-ttu-id="4aed7-116">Wenn `value` gleich <xref:System.Double.NaN>, ist der Rückgabewert <xref:System.Double.NaN>.</span><span class="sxs-lookup"><span data-stu-id="4aed7-116">If `value` is equal to <xref:System.Double.NaN>, the return value is <xref:System.Double.NaN>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4aed7-117">Im folgenden Beispiel wird die <xref:System.Math.Abs%28System.Double%29> Methode zum Abrufen der Absolute Wert einer Reihe von <xref:System.Double> Werte.</span><span class="sxs-lookup"><span data-stu-id="4aed7-117">The following example uses the <xref:System.Math.Abs%28System.Double%29> method to get the absolute value of a number of <xref:System.Double> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs2.cs#2)]
 [!code-vb[System.Math.Abs#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static short Abs (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Abs(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Abs(short value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4aed7-118">Eine Zahl, die größer als <see cref="F:System.Int16.MinValue" />, aber kleiner oder gleich <see cref="F:System.Int16.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="4aed7-118">A number that is greater than <see cref="F:System.Int16.MinValue" />, but less than or equal to <see cref="F:System.Int16.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="4aed7-119">Gibt den absoluten Wert einer 16-Bit-Ganzzahl mit Vorzeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-119">Returns the absolute value of a 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="4aed7-120">Eine ganze 16-Bit-Zahl x mit Vorzeichen im Bereich 0 ≤ x ≤<see cref="F:System.Int16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="4aed7-120">A 16-bit signed integer, x, such that 0 ≤ x ≤<see cref="F:System.Int16.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aed7-121">Der Absolute Wert einer <xref:System.Int16> ist der numerische Wert ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-121">The absolute value of an <xref:System.Int16> is its numeric value without its sign.</span></span> <span data-ttu-id="4aed7-122">Beispielsweise ist der Absolute Wert von-123 und 123 123.</span><span class="sxs-lookup"><span data-stu-id="4aed7-122">For example, the absolute value of both 123 and -123 is 123.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4aed7-123">Im folgenden Beispiel wird die <xref:System.Math.Abs%28System.Int16%29> Methode zum Abrufen der Absolute Wert einer Reihe von <xref:System.Int16> Werte.</span><span class="sxs-lookup"><span data-stu-id="4aed7-123">The following example uses the <xref:System.Math.Abs%28System.Int16%29> method to get the absolute value of a number of <xref:System.Int16> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs3.cs#3)]
 [!code-vb[System.Math.Abs#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4aed7-124"><paramref name="value" /> ist gleich <see cref="F:System.Int16.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="4aed7-124"><paramref name="value" /> equals <see cref="F:System.Int16.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static int Abs (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Abs(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Abs(int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4aed7-125">Eine Zahl, die größer als <see cref="F:System.Int32.MinValue" />, aber kleiner oder gleich <see cref="F:System.Int32.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="4aed7-125">A number that is greater than <see cref="F:System.Int32.MinValue" />, but less than or equal to <see cref="F:System.Int32.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="4aed7-126">Gibt den absoluten Wert einer 32-Bit-Ganzzahl mit Vorzeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-126">Returns the absolute value of a 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="4aed7-127">Eine ganze 32-Bit-Zahl x mit Vorzeichen im Bereich 0 ≤ x ≤<see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="4aed7-127">A 32-bit signed integer, x, such that 0 ≤ x ≤<see cref="F:System.Int32.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aed7-128">Der Absolute Wert einer <xref:System.Int32> ist der numerische Wert ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-128">The absolute value of an <xref:System.Int32> is its numeric value without its sign.</span></span> <span data-ttu-id="4aed7-129">Beispielsweise ist der Absolute Wert von-123 und 123 123.</span><span class="sxs-lookup"><span data-stu-id="4aed7-129">For example, the absolute value of both 123 and -123 is 123.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4aed7-130">Im folgenden Beispiel wird die <xref:System.Math.Abs%28System.Int32%29> Methode zum Abrufen der Absolute Wert einer Reihe von <xref:System.Int32> Werte.</span><span class="sxs-lookup"><span data-stu-id="4aed7-130">The following example uses the <xref:System.Math.Abs%28System.Int32%29> method to get the absolute value of a number of <xref:System.Int32> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs4.cs#4)]
 [!code-vb[System.Math.Abs#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4aed7-131"><paramref name="value" /> ist gleich <see cref="F:System.Int32.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="4aed7-131"><paramref name="value" /> equals <see cref="F:System.Int32.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static long Abs (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Abs(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Abs(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4aed7-132">Eine Zahl, die größer als <see cref="F:System.Int64.MinValue" />, aber kleiner oder gleich <see cref="F:System.Int64.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="4aed7-132">A number that is greater than <see cref="F:System.Int64.MinValue" />, but less than or equal to <see cref="F:System.Int64.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="4aed7-133">Gibt den absoluten Wert einer 64-Bit-Ganzzahl mit Vorzeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-133">Returns the absolute value of a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="4aed7-134">Eine ganze 64-Bit-Zahl x mit Vorzeichen im Bereich 0 ≤ x ≤<see cref="F:System.Int64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="4aed7-134">A 64-bit signed integer, x, such that 0 ≤ x ≤<see cref="F:System.Int64.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aed7-135">Der Absolute Wert einer <xref:System.Int64> ist der numerische Wert ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-135">The absolute value of an <xref:System.Int64> is its numeric value without its sign.</span></span> <span data-ttu-id="4aed7-136">Beispielsweise ist der Absolute Wert von-123 und 123 123.</span><span class="sxs-lookup"><span data-stu-id="4aed7-136">For example, the absolute value of both 123 and -123 is 123.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4aed7-137">Im folgenden Beispiel wird die <xref:System.Math.Abs%28System.Int64%29> Methode zum Abrufen der Absolute Wert einer Reihe von <xref:System.Int64> Werte.</span><span class="sxs-lookup"><span data-stu-id="4aed7-137">The following example uses the <xref:System.Math.Abs%28System.Int64%29> method to get the absolute value of a number of <xref:System.Int64> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs5.cs#5)]
 [!code-vb[System.Math.Abs#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4aed7-138"><paramref name="value" /> ist gleich <see cref="F:System.Int64.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="4aed7-138"><paramref name="value" /> equals <see cref="F:System.Int64.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static sbyte Abs (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 Abs(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte Abs(System::SByte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4aed7-139">Eine Zahl, die größer als <see cref="F:System.SByte.MinValue" />, aber kleiner oder gleich <see cref="F:System.SByte.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="4aed7-139">A number that is greater than <see cref="F:System.SByte.MinValue" />, but less than or equal to <see cref="F:System.SByte.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="4aed7-140">Gibt den absoluten Wert einer 8-Bit-Ganzzahl mit Vorzeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-140">Returns the absolute value of an 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="4aed7-141">Eine ganze 8-Bit-Zahl x mit Vorzeichen im Bereich 0 ≤ x ≤<see cref="F:System.SByte.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="4aed7-141">An 8-bit signed integer, x, such that 0 ≤ x ≤<see cref="F:System.SByte.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aed7-142">Der Absolute Wert eines Bytewerts mit Vorzeichen ist der numerische Wert ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-142">The absolute value of a signed byte is its numeric value without its sign.</span></span> <span data-ttu-id="4aed7-143">Beispielsweise ist der Absolute Wert von 12 und-12 12.</span><span class="sxs-lookup"><span data-stu-id="4aed7-143">For example, the absolute value of both 12 and -12 is 12.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4aed7-144">Im folgenden Beispiel wird die <xref:System.Math.Abs%28System.SByte%29> Methode zum Abrufen der Absolute Wert einer Reihe von <xref:System.SByte> Werte.</span><span class="sxs-lookup"><span data-stu-id="4aed7-144">The following example uses the <xref:System.Math.Abs%28System.SByte%29> method to get the absolute value of a number of <xref:System.SByte> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs6.cs#6)]
 [!code-vb[System.Math.Abs#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs6.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4aed7-145"><paramref name="value" /> ist gleich <see cref="F:System.SByte.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="4aed7-145"><paramref name="value" /> equals <see cref="F:System.SByte.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static float Abs (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Abs(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Abs(float value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4aed7-146">Eine Zahl, die größer oder gleich <see cref="F:System.Single.MinValue" />, aber kleiner oder gleich <see cref="F:System.Single.MaxValue" /> ist.</span><span class="sxs-lookup"><span data-stu-id="4aed7-146">A number that is greater than or equal to <see cref="F:System.Single.MinValue" />, but less than or equal to <see cref="F:System.Single.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="4aed7-147">Gibt den absoluten Wert einer Gleitkommazahl mit einfacher Genauigkeit zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-147">Returns the absolute value of a single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="4aed7-148">Eine Gleitkommazahl x mit einfacher Genauigkeit im Bereich 0 ≤ x ≤<see cref="F:System.Single.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="4aed7-148">A single-precision floating-point number, x, such that 0 ≤ x ≤<see cref="F:System.Single.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aed7-149">Der Absolute Wert einer <xref:System.Single> ist der numerische Wert ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-149">The absolute value of a <xref:System.Single> is its numeric value without its sign.</span></span> <span data-ttu-id="4aed7-150">Z. B. den absoluten Wert von 1.2e-03 und-1.2e03 ist-1.2e03.</span><span class="sxs-lookup"><span data-stu-id="4aed7-150">For example, the absolute value of both 1.2e-03 and -1.2e03 is 1.2e03.</span></span>  
  
 <span data-ttu-id="4aed7-151">Wenn `value` gleich <xref:System.Single.NegativeInfinity> oder <xref:System.Single.PositiveInfinity>, ist der Rückgabewert <xref:System.Single.PositiveInfinity>.</span><span class="sxs-lookup"><span data-stu-id="4aed7-151">If `value` is equal to <xref:System.Single.NegativeInfinity> or <xref:System.Single.PositiveInfinity>, the return value is <xref:System.Single.PositiveInfinity>.</span></span> <span data-ttu-id="4aed7-152">Wenn `value` gleich <xref:System.Single.NaN>, ist der Rückgabewert <xref:System.Single.NaN>.</span><span class="sxs-lookup"><span data-stu-id="4aed7-152">If `value` is equal to <xref:System.Single.NaN>, the return value is <xref:System.Single.NaN>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4aed7-153">Im folgenden Beispiel wird die <xref:System.Math.Abs%28System.Single%29> Methode zum Abrufen der Absolute Wert einer Reihe von <xref:System.Single> Werte.</span><span class="sxs-lookup"><span data-stu-id="4aed7-153">The following example uses the <xref:System.Math.Abs%28System.Single%29> method to get the absolute value of a number of <xref:System.Single> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs7.cs#7)]
 [!code-vb[System.Math.Abs#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs7.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Acos">
      <MemberSignature Language="C#" Value="public static double Acos (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Acos(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Acos(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Acos (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Acos(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="4aed7-154">Eine Zahl, die einen Kosinus darstellt, wobei <c>d</c> größer oder gleich –1, aber kleiner oder gleich 1 sein muss.</span><span class="sxs-lookup"><span data-stu-id="4aed7-154">A number representing a cosine, where <c>d</c> must be greater than or equal to -1, but less than or equal to 1.</span></span></param>
        <summary><span data-ttu-id="4aed7-155">Gibt einen Winkel zurück, dessen Kosinus die angegebene Zahl ist.</span><span class="sxs-lookup"><span data-stu-id="4aed7-155">Returns the angle whose cosine is the specified number.</span></span></summary>
        <returns><span data-ttu-id="4aed7-156">Ein Winkel (θ) im Bogenmaß im Bereich 0 ≤θ≤π</span><span class="sxs-lookup"><span data-stu-id="4aed7-156">An angle, θ, measured in radians, such that 0 ≤θ≤π</span></span>  
  
 <span data-ttu-id="4aed7-157">- oder - </span><span class="sxs-lookup"><span data-stu-id="4aed7-157">-or-</span></span>  
  
 <span data-ttu-id="4aed7-158"><see cref="F:System.Double.NaN" />, wenn <paramref name="d" /> &lt; –1 oder <paramref name="d" /> &gt; 1 oder <paramref name="d" /> gleich <see cref="F:System.Double.NaN" /> ist.</span><span class="sxs-lookup"><span data-stu-id="4aed7-158"><see cref="F:System.Double.NaN" /> if <paramref name="d" /> &lt; -1 or <paramref name="d" /> &gt; 1 or <paramref name="d" /> equals <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aed7-159">Multiplizieren Sie den Rückgabewert mit 180 /<xref:System.Math.PI?displayProperty=nameWithType> zum Konvertieren von Bogenmaß in Grad.</span><span class="sxs-lookup"><span data-stu-id="4aed7-159">Multiply the return value by 180/<xref:System.Math.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4aed7-160">Im folgenden Beispiel wird die <xref:System.Math.Acos%2A> Methode, um die Berechnung der inneren Winkel von einer bestimmten Trapez zu unterstützen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-160">The following example uses the <xref:System.Math.Acos%2A> method to assist in the computation of the inner angles of a given trapezoid.</span></span>  
  
 [!code-cpp[MathSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/MathSample/CPP/mathsample.cpp#1)]
 [!code-csharp[MathSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/MathSample/CS/mathsample.cs#1)]
 [!code-vb[MathSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MathSample/VB/mathsample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Asin">
      <MemberSignature Language="C#" Value="public static double Asin (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Asin(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Asin(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Asin (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Asin(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="4aed7-161">Eine Zahl, die einen Sinus darstellt, wobei <c>s</c> größer oder gleich –1, aber kleiner oder gleich 1 sein muss.</span><span class="sxs-lookup"><span data-stu-id="4aed7-161">A number representing a sine, where <c>d</c> must be greater than or equal to -1, but less than or equal to 1.</span></span></param>
        <summary><span data-ttu-id="4aed7-162">Gibt einen Winkel zurück, dessen Sinus die angegebene Zahl ist.</span><span class="sxs-lookup"><span data-stu-id="4aed7-162">Returns the angle whose sine is the specified number.</span></span></summary>
        <returns><span data-ttu-id="4aed7-163">Ein Winkel (θ) im Bogenmaß im Bereich –π/2 ≤θ≤π/2</span><span class="sxs-lookup"><span data-stu-id="4aed7-163">An angle, θ, measured in radians, such that -π/2 ≤θ≤π/2</span></span>  
  
 <span data-ttu-id="4aed7-164">- oder - </span><span class="sxs-lookup"><span data-stu-id="4aed7-164">-or-</span></span>  
  
 <span data-ttu-id="4aed7-165"><see cref="F:System.Double.NaN" />, wenn <paramref name="d" /> &lt; –1 oder <paramref name="d" /> &gt; 1 oder <paramref name="d" /> gleich <see cref="F:System.Double.NaN" /> ist.</span><span class="sxs-lookup"><span data-stu-id="4aed7-165"><see cref="F:System.Double.NaN" /> if <paramref name="d" /> &lt; -1 or <paramref name="d" /> &gt; 1 or <paramref name="d" /> equals <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aed7-166">Ein positiver Rückgabewert stellt einen gegen den Uhrzeigersinn Winkel von der x-Achse dar; ein negativer Wert stellt einen Winkel im Uhrzeigersinn.</span><span class="sxs-lookup"><span data-stu-id="4aed7-166">A positive return value represents a counterclockwise angle from the x-axis; a negative return value represents a clockwise angle.</span></span>  
  
 <span data-ttu-id="4aed7-167">Multiplizieren Sie den Rückgabewert mit 180 /<xref:System.Math.PI?displayProperty=nameWithType> zum Konvertieren von Bogenmaß in Grad.</span><span class="sxs-lookup"><span data-stu-id="4aed7-167">Multiply the return value by 180/<xref:System.Math.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4aed7-168">Im folgenden Beispiel wird <xref:System.Math.Asin%2A> , die in die Berechnung der inneren Winkel von einer bestimmten Trapez helfen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-168">The following example uses <xref:System.Math.Asin%2A> to assist in the computation of the inner angles of a given trapezoid.</span></span>  
  
 [!code-cpp[MathSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/MathSample/CPP/mathsample.cpp#1)]
 [!code-csharp[MathSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/MathSample/CS/mathsample.cs#1)]
 [!code-vb[MathSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MathSample/VB/mathsample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Atan">
      <MemberSignature Language="C#" Value="public static double Atan (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Atan(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Atan(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Atan (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Atan(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="4aed7-169">Eine Zahl, die einen Tangens darstellt.</span><span class="sxs-lookup"><span data-stu-id="4aed7-169">A number representing a tangent.</span></span></param>
        <summary><span data-ttu-id="4aed7-170">Gibt einen Winkel zurück, dessen Tangens die angegebene Zahl ist.</span><span class="sxs-lookup"><span data-stu-id="4aed7-170">Returns the angle whose tangent is the specified number.</span></span></summary>
        <returns><span data-ttu-id="4aed7-171">Ein Winkel (θ) im Bogenmaß im Bereich –π/2 ≤θ≤π/2.</span><span class="sxs-lookup"><span data-stu-id="4aed7-171">An angle, θ, measured in radians, such that -π/2 ≤θ≤π/2.</span></span>  
  
 <span data-ttu-id="4aed7-172">- oder - </span><span class="sxs-lookup"><span data-stu-id="4aed7-172">-or-</span></span>  
  
 <span data-ttu-id="4aed7-173"><see cref="F:System.Double.NaN" />, wenn <paramref name="d" /> gleich <see cref="F:System.Double.NaN" /> ist, –π/2 auf doppelte Genauigkeit gerundet (–1,5707963267949), wenn <paramref name="d" /> gleich <see cref="F:System.Double.NegativeInfinity" /> ist oder π/2 auf doppelte Genauigkeit gerundet (1,5707963267949), wenn <paramref name="d" /> gleich <see cref="F:System.Double.PositiveInfinity" /> ist.</span><span class="sxs-lookup"><span data-stu-id="4aed7-173"><see cref="F:System.Double.NaN" /> if <paramref name="d" /> equals <see cref="F:System.Double.NaN" />, -π/2 rounded to double precision (-1.5707963267949) if <paramref name="d" /> equals <see cref="F:System.Double.NegativeInfinity" />, or π/2 rounded to double precision (1.5707963267949) if <paramref name="d" /> equals <see cref="F:System.Double.PositiveInfinity" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aed7-174">Ein positiver Rückgabewert stellt einen gegen den Uhrzeigersinn Winkel von der x-Achse dar; ein negativer Wert stellt einen Winkel im Uhrzeigersinn.</span><span class="sxs-lookup"><span data-stu-id="4aed7-174">A positive return value represents a counterclockwise angle from the x-axis; a negative return value represents a clockwise angle.</span></span>  
  
 <span data-ttu-id="4aed7-175">Multiplizieren Sie den Rückgabewert mit 180 /<xref:System.Math.PI?displayProperty=nameWithType> zum Konvertieren von Bogenmaß in Grad.</span><span class="sxs-lookup"><span data-stu-id="4aed7-175">Multiply the return value by 180/<xref:System.Math.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4aed7-176">Im folgenden Beispiel wird veranschaulicht, wie berechnet den Arkustangens eines Werts und auf der Konsole anzeigt.</span><span class="sxs-lookup"><span data-stu-id="4aed7-176">The following example demonstrates how to calculate the arctangent of a value and display it to the console.</span></span>  
  
 [!code-cpp[math.atanx#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.atanx/CPP/atan.cpp#1)]
 [!code-csharp[math.atanx#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.atanx/CS/atan.cs#1)]
 [!code-vb[math.atanx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.atanx/VB/atan.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Atan2">
      <MemberSignature Language="C#" Value="public static double Atan2 (double y, double x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Atan2(float64 y, float64 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Atan2(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Atan2 (y As Double, x As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Atan2(double y, double x);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="y" Type="System.Double" />
        <Parameter Name="x" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="y"><span data-ttu-id="4aed7-177">Die y-Koordinate eines Punkts.</span><span class="sxs-lookup"><span data-stu-id="4aed7-177">The y coordinate of a point.</span></span></param>
        <param name="x"><span data-ttu-id="4aed7-178">Die x-Koordinate eines Punkts.</span><span class="sxs-lookup"><span data-stu-id="4aed7-178">The x coordinate of a point.</span></span></param>
        <summary><span data-ttu-id="4aed7-179">Gibt einen Winkel zurück, dessen Tangens der Quotient zweier angegebener Zahlen ist.</span><span class="sxs-lookup"><span data-stu-id="4aed7-179">Returns the angle whose tangent is the quotient of two specified numbers.</span></span></summary>
        <returns><span data-ttu-id="4aed7-180">Ein Winkel (θ) im Bogenmaß im Bereich –π≤θ≤π, und tan(θ) = <paramref name="y" /> / <paramref name="x" />, wobei (<paramref name="x" />, <paramref name="y" />) einen Punkt in der kartesischen Ebene darstellt.</span><span class="sxs-lookup"><span data-stu-id="4aed7-180">An angle, θ, measured in radians, such that -π≤θ≤π, and tan(θ) = <paramref name="y" /> / <paramref name="x" />, where (<paramref name="x" />, <paramref name="y" />) is a point in the Cartesian plane.</span></span> <span data-ttu-id="4aed7-181">Beachten Sie dabei:</span><span class="sxs-lookup"><span data-stu-id="4aed7-181">Observe the following:</span></span>  
  
-   <span data-ttu-id="4aed7-182">Wenn (<paramref name="x" />, <paramref name="y" />) im 1. Quadranten liegt, gilt 0 &lt; θ &lt; π/2.</span><span class="sxs-lookup"><span data-stu-id="4aed7-182">For (<paramref name="x" />, <paramref name="y" />) in quadrant 1, 0 &lt; θ &lt; π/2.</span></span>  
  
-   <span data-ttu-id="4aed7-183">Wenn (<paramref name="x" />, <paramref name="y" />) im 2. Quadranten liegt, gilt π/2 &lt; θ≤π.</span><span class="sxs-lookup"><span data-stu-id="4aed7-183">For (<paramref name="x" />, <paramref name="y" />) in quadrant 2, π/2 &lt; θ≤π.</span></span>  
  
-   <span data-ttu-id="4aed7-184">Wenn (<paramref name="x" />, <paramref name="y" />) im 3. Quadranten liegt, gilt –π &lt; θ &lt; –π/2.</span><span class="sxs-lookup"><span data-stu-id="4aed7-184">For (<paramref name="x" />, <paramref name="y" />) in quadrant 3, -π &lt; θ &lt; -π/2.</span></span>  
  
-   <span data-ttu-id="4aed7-185">Wenn (<paramref name="x" />, <paramref name="y" />) im 4. Quadranten liegt, gilt –π/2 &lt; θ &lt; 0.</span><span class="sxs-lookup"><span data-stu-id="4aed7-185">For (<paramref name="x" />, <paramref name="y" />) in quadrant 4, -π/2 &lt; θ &lt; 0.</span></span>  
  
 <span data-ttu-id="4aed7-186">Für Punkte an den Begrenzungen der Quadranten wird der folgende Rückgabewert zurückgegeben:</span><span class="sxs-lookup"><span data-stu-id="4aed7-186">For points on the boundaries of the quadrants, the return value is the following:</span></span>  
  
-   <span data-ttu-id="4aed7-187">Wenn y gleich 0 und x nicht negativ ist, gilt θ = 0.</span><span class="sxs-lookup"><span data-stu-id="4aed7-187">If y is 0 and x is not negative, θ = 0.</span></span>  
  
-   <span data-ttu-id="4aed7-188">Wenn y gleich 0 und x negativ ist, gilt θ = π.</span><span class="sxs-lookup"><span data-stu-id="4aed7-188">If y is 0 and x is negative, θ = π.</span></span>  
  
-   <span data-ttu-id="4aed7-189">Wenn y positiv und x gleich 0 ist, gilt θ = π/2.</span><span class="sxs-lookup"><span data-stu-id="4aed7-189">If y is positive and x is 0, θ = π/2.</span></span>  
  
-   <span data-ttu-id="4aed7-190">Wenn y negativ ist und x gleich 0 ist, gilt θ = -π/2.</span><span class="sxs-lookup"><span data-stu-id="4aed7-190">If y is negative and x is 0, θ = -π/2.</span></span>  
  
-   <span data-ttu-id="4aed7-191">Wenn y gleich 0 ist und x gleich 0 ist, gilt θ = 0.</span><span class="sxs-lookup"><span data-stu-id="4aed7-191">If y is 0 and x is 0, θ = 0.</span></span>  
  
 <span data-ttu-id="4aed7-192">Wenn <paramref name="x" /> oder <paramref name="y" /> gleich <see cref="F:System.Double.NaN" /> ist oder wenn <paramref name="x" /> und <paramref name="y" /> entweder gleich <see cref="F:System.Double.PositiveInfinity" /> oder gleich <see cref="F:System.Double.NegativeInfinity" /> sind, gibt die Methode <see cref="F:System.Double.NaN" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-192">If <paramref name="x" /> or <paramref name="y" /> is <see cref="F:System.Double.NaN" />, or if <paramref name="x" /> and <paramref name="y" /> are either <see cref="F:System.Double.PositiveInfinity" /> or <see cref="F:System.Double.NegativeInfinity" />, the method returns <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aed7-193">Der Rückgabewert ist der Winkel in der kartesischen Ebene zwischen der x-Achse und einen Vektor vom Ursprung (0,0) starten und beenden, an dem Punkt, (X, y).</span><span class="sxs-lookup"><span data-stu-id="4aed7-193">The return value is the angle in the Cartesian plane formed by the x-axis, and a vector starting from the origin, (0,0), and terminating at the point, (x,y).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4aed7-194">Im folgende Beispiel wird veranschaulicht, wie berechnet den Arkustangens des einen Winkel und einen Vektor.</span><span class="sxs-lookup"><span data-stu-id="4aed7-194">The following example demonstrates how to calculate the arctangent of an angle and a vector.</span></span> <span data-ttu-id="4aed7-195">Der resultierende Wert wird in der Konsole angezeigt.</span><span class="sxs-lookup"><span data-stu-id="4aed7-195">The resulting value is displayed in the console.</span></span>  
  
 [!code-cpp[math.atanx#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.atanx/CPP/atan.cpp#1)]
 [!code-csharp[math.atanx#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.atanx/CS/atan.cs#1)]
 [!code-vb[math.atanx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.atanx/VB/atan.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BigMul">
      <MemberSignature Language="C#" Value="public static long BigMul (int a, int b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 BigMul(int32 a, int32 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.BigMul(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BigMul (a As Integer, b As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long BigMul(int a, int b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="4aed7-196">Die erste zu multiplizierende Zahl.</span><span class="sxs-lookup"><span data-stu-id="4aed7-196">The first number to multiply.</span></span></param>
        <param name="b"><span data-ttu-id="4aed7-197">Die zweite zu multiplizierende Zahl.</span><span class="sxs-lookup"><span data-stu-id="4aed7-197">The second number to multiply.</span></span></param>
        <summary><span data-ttu-id="4aed7-198">Berechnet das vollständige Produkt aus zwei 32-Bit-Zahlen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-198">Produces the full product of two 32-bit numbers.</span></span></summary>
        <returns><span data-ttu-id="4aed7-199">Die Zahl, die das Produkt der angegebenen Zahlen enthält.</span><span class="sxs-lookup"><span data-stu-id="4aed7-199">The number containing the product of the specified numbers.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4aed7-200">Das folgende Beispiel veranschaulicht die Verwendung von der <xref:System.Math.BigMul%2A> Methode, um das Produkt von zwei ganzzahligen Werten zu berechnen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-200">The following example demonstrates the use of the <xref:System.Math.BigMul%2A> method to calculate the product of two integer values.</span></span>  
  
 [!code-cpp[math.bigmul#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.bigmul/CPP/bigmul.cpp#1)]
 [!code-csharp[math.bigmul#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.bigmul/CS/bigmul.cs#1)]
 [!code-vb[math.bigmul#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.bigmul/VB/bigmul.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Ceiling">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4aed7-201">Gibt die kleinste Ganzzahl zurück, die größer oder gleich der angegebenen Zahl ist.</span><span class="sxs-lookup"><span data-stu-id="4aed7-201">Returns the smallest integral value greater than or equal to the specified number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aed7-202">Das Verhalten dieser Methode folgt Standard IEEE-754, Abschnitt 4.</span><span class="sxs-lookup"><span data-stu-id="4aed7-202">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="4aed7-203">Diese Art von Rundung wird manchmal bezeichnet runden in Richtung plus unendlich.</span><span class="sxs-lookup"><span data-stu-id="4aed7-203">This kind of rounding is sometimes called rounding toward positive infinity.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Ceiling">
      <MemberSignature Language="C#" Value="public static decimal Ceiling (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Ceiling(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Ceiling(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Ceiling (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Ceiling(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="4aed7-204">Eine Dezimalzahl.</span><span class="sxs-lookup"><span data-stu-id="4aed7-204">A decimal number.</span></span></param>
        <summary><span data-ttu-id="4aed7-205">Gibt den kleinsten ganzzahligen Wert zurück, der größer oder gleich der angegebenen Dezimalzahl ist.</span><span class="sxs-lookup"><span data-stu-id="4aed7-205">Returns the smallest integral value that is greater than or equal to the specified decimal number.</span></span></summary>
        <returns><span data-ttu-id="4aed7-206">Der kleinste ganzzahlige Wert, der größer oder gleich <paramref name="d" /> ist.</span><span class="sxs-lookup"><span data-stu-id="4aed7-206">The smallest integral value that is greater than or equal to <paramref name="d" />.</span></span> <span data-ttu-id="4aed7-207">Beachten Sie, dass diese Methode einen <see cref="T:System.Decimal" /> anstelle eines ganzzahligen Typs zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="4aed7-207">Note that this method returns a <see cref="T:System.Decimal" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aed7-208">Das Verhalten dieser Methode folgt Standard IEEE-754, Abschnitt 4.</span><span class="sxs-lookup"><span data-stu-id="4aed7-208">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="4aed7-209">Diese Art von Rundung wird manchmal bezeichnet runden in Richtung plus unendlich.</span><span class="sxs-lookup"><span data-stu-id="4aed7-209">This kind of rounding is sometimes called rounding toward positive infinity.</span></span> <span data-ttu-id="4aed7-210">Das heißt, wenn `d` positiv ist, wird das Vorhandensein von jeder Nachkommawert Ursachen `d` auf die nächsthöhere ganze Zahl gerundet werden.</span><span class="sxs-lookup"><span data-stu-id="4aed7-210">In other words, if `d` is positive, the presence of any fractional component causes `d` to be rounded to the next highest integer.</span></span> <span data-ttu-id="4aed7-211">Wenn `d` ist negativ, Rundung bewirkt, dass alle Nachkommawert von `d` verworfen werden.</span><span class="sxs-lookup"><span data-stu-id="4aed7-211">If `d` is negative, the rounding operation causes any fractional component of `d` to be discarded.</span></span> <span data-ttu-id="4aed7-212">Die Ausführung von dieser Methode unterscheidet sich von der <xref:System.Math.Floor%28System.Decimal%29> -Methode, die runden in Richtung minus unendlich unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4aed7-212">The operation of this method differs from the <xref:System.Math.Floor%28System.Decimal%29> method, which supports rounding toward negative infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4aed7-213">Das folgende Beispiel veranschaulicht die <xref:System.Math.Ceiling%28System.Decimal%29?displayProperty=nameWithType> Methode und Unterschiede aufgezeigt, mit der <xref:System.Math.Floor%28System.Decimal%29> Methode.</span><span class="sxs-lookup"><span data-stu-id="4aed7-213">The following example illustrates the <xref:System.Math.Ceiling%28System.Decimal%29?displayProperty=nameWithType> method and contrasts it with the <xref:System.Math.Floor%28System.Decimal%29> method.</span></span>  
  
 [!code-csharp[System.Math.Ceiling#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Ceiling/cs/Ceiling1.cs#1)]
 [!code-vb[System.Math.Ceiling#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Ceiling/vb/Ceiling1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Ceiling">
      <MemberSignature Language="C#" Value="public static double Ceiling (double a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Ceiling(float64 a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Ceiling(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Ceiling (a As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Ceiling(double a);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="4aed7-214">Eine Gleitkommazahl mit doppelter Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="4aed7-214">A double-precision floating-point number.</span></span></param>
        <summary><span data-ttu-id="4aed7-215">Gibt den kleinsten ganzzahligen Wert zurück, der größer oder gleich der angegebenen Gleitkommazahl mit doppelter Genauigkeit ist.</span><span class="sxs-lookup"><span data-stu-id="4aed7-215">Returns the smallest integral value that is greater than or equal to the specified double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="4aed7-216">Der kleinste ganzzahlige Wert, der größer oder gleich <paramref name="a" /> ist.</span><span class="sxs-lookup"><span data-stu-id="4aed7-216">The smallest integral value that is greater than or equal to <paramref name="a" />.</span></span> <span data-ttu-id="4aed7-217">Wenn <paramref name="a" /> gleich <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> oder <see cref="F:System.Double.PositiveInfinity" /> ist, wird dieser Wert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="4aed7-217">If <paramref name="a" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, that value is returned.</span></span> <span data-ttu-id="4aed7-218">Beachten Sie, dass diese Methode einen <see cref="T:System.Double" /> anstelle eines ganzzahligen Typs zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="4aed7-218">Note that this method returns a <see cref="T:System.Double" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aed7-219">Das Verhalten dieser Methode folgt Standard IEEE-754, Abschnitt 4.</span><span class="sxs-lookup"><span data-stu-id="4aed7-219">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="4aed7-220">Diese Art von Rundung wird manchmal bezeichnet runden in Richtung plus unendlich.</span><span class="sxs-lookup"><span data-stu-id="4aed7-220">This kind of rounding is sometimes called rounding toward positive infinity.</span></span> <span data-ttu-id="4aed7-221">Das heißt, wenn `a` positiv ist, wird das Vorhandensein von jeder Nachkommawert Ursachen `a` auf die nächsthöhere ganze Zahl gerundet werden.</span><span class="sxs-lookup"><span data-stu-id="4aed7-221">In other words, if `a` is positive, the presence of any fractional component causes `a` to be rounded to the next highest integer.</span></span> <span data-ttu-id="4aed7-222">Wenn `a` ist negativ, Rundung bewirkt, dass alle Nachkommawert von `a` verworfen werden.</span><span class="sxs-lookup"><span data-stu-id="4aed7-222">If `a` is negative, the rounding operation causes any fractional component of `a` to be discarded.</span></span> <span data-ttu-id="4aed7-223">Die Ausführung von dieser Methode unterscheidet sich von der <xref:System.Math.Floor%28System.Double%29> -Methode, die runden in Richtung minus unendlich unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4aed7-223">The operation of this method differs from the <xref:System.Math.Floor%28System.Double%29> method, which supports rounding toward negative infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4aed7-224">Das folgende Beispiel veranschaulicht die <xref:System.Math.Ceiling%28System.Double%29?displayProperty=nameWithType> Methode und Unterschiede aufgezeigt, mit der <xref:System.Math.Floor%28System.Double%29> Methode.</span><span class="sxs-lookup"><span data-stu-id="4aed7-224">The following example illustrates the <xref:System.Math.Ceiling%28System.Double%29?displayProperty=nameWithType> method and contrasts it with the <xref:System.Math.Floor%28System.Double%29> method.</span></span>  
  
 [!code-csharp[System.Math.Ceiling#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Ceiling/cs/Ceiling1.cs#2)]
 [!code-vb[System.Math.Ceiling#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Ceiling/vb/Ceiling1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static byte Clamp (byte value, byte min, byte max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Clamp(unsigned int8 value, unsigned int8 min, unsigned int8 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Byte,System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Byte, min As Byte, max As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Clamp(System::Byte value, System::Byte min, System::Byte max);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
        <Parameter Name="min" Type="System.Byte" />
        <Parameter Name="max" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static decimal Clamp (decimal value, decimal min, decimal max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Clamp(valuetype System.Decimal value, valuetype System.Decimal min, valuetype System.Decimal max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Decimal,System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Decimal, min As Decimal, max As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Clamp(System::Decimal value, System::Decimal min, System::Decimal max);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
        <Parameter Name="min" Type="System.Decimal" />
        <Parameter Name="max" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static double Clamp (double value, double min, double max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Clamp(float64 value, float64 min, float64 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Double, min As Double, max As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Clamp(double value, double min, double max);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="min" Type="System.Double" />
        <Parameter Name="max" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static short Clamp (short value, short min, short max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Clamp(int16 value, int16 min, int16 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Int16,System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Short, min As Short, max As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Clamp(short value, short min, short max);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
        <Parameter Name="min" Type="System.Int16" />
        <Parameter Name="max" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static int Clamp (int value, int min, int max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Clamp(int32 value, int32 min, int32 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Integer, min As Integer, max As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Clamp(int value, int min, int max);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="min" Type="System.Int32" />
        <Parameter Name="max" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static long Clamp (long value, long min, long max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Clamp(int64 value, int64 min, int64 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Int64,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Long, min As Long, max As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Clamp(long value, long min, long max);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="min" Type="System.Int64" />
        <Parameter Name="max" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static sbyte Clamp (sbyte value, sbyte min, sbyte max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 Clamp(int8 value, int8 min, int8 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.SByte,System.SByte,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As SByte, min As SByte, max As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte Clamp(System::SByte value, System::SByte min, System::SByte max);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
        <Parameter Name="min" Type="System.SByte" />
        <Parameter Name="max" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static float Clamp (float value, float min, float max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Clamp(float32 value, float32 min, float32 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Single, min As Single, max As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Clamp(float value, float min, float max);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
        <Parameter Name="min" Type="System.Single" />
        <Parameter Name="max" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static ushort Clamp (ushort value, ushort min, ushort max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Clamp(unsigned int16 value, unsigned int16 min, unsigned int16 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.UInt16,System.UInt16,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As UShort, min As UShort, max As UShort) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Clamp(System::UInt16 value, System::UInt16 min, System::UInt16 max);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
        <Parameter Name="min" Type="System.UInt16" />
        <Parameter Name="max" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static uint Clamp (uint value, uint min, uint max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Clamp(unsigned int32 value, unsigned int32 min, unsigned int32 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.UInt32,System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As UInteger, min As UInteger, max As UInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 Clamp(System::UInt32 value, System::UInt32 min, System::UInt32 max);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="min" Type="System.UInt32" />
        <Parameter Name="max" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static ulong Clamp (ulong value, ulong min, ulong max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Clamp(unsigned int64 value, unsigned int64 min, unsigned int64 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.UInt64,System.UInt64,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As ULong, min As ULong, max As ULong) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Clamp(System::UInt64 value, System::UInt64 min, System::UInt64 max);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
        <Parameter Name="min" Type="System.UInt64" />
        <Parameter Name="max" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cos">
      <MemberSignature Language="C#" Value="public static double Cos (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Cos(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Cos(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Cos (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Cos(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="4aed7-225">Ein im Bogenmaß angegebener Winkel.</span><span class="sxs-lookup"><span data-stu-id="4aed7-225">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="4aed7-226">Gibt den Kosinus des angegebenen Winkels zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-226">Returns the cosine of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="4aed7-227">Der Kosinus von <paramref name="d" />.</span><span class="sxs-lookup"><span data-stu-id="4aed7-227">The cosine of <paramref name="d" />.</span></span> <span data-ttu-id="4aed7-228">Wenn <paramref name="d" /> gleich <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> oder <see cref="F:System.Double.PositiveInfinity" /> ist, wird <see cref="F:System.Double.NaN" /> von dieser Methode zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="4aed7-228">If <paramref name="d" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, this method returns <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aed7-229">Der Winkel `d`, im Bogenmaß angegeben werden muss.</span><span class="sxs-lookup"><span data-stu-id="4aed7-229">The angle, `d`, must be in radians.</span></span> <span data-ttu-id="4aed7-230">Multiplizieren von <xref:System.Math.PI?displayProperty=nameWithType>/180, Grad in Bogenmaß konvertiert werden.</span><span class="sxs-lookup"><span data-stu-id="4aed7-230">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
 <span data-ttu-id="4aed7-231">Zulässige Werte von `d` reichen von ungefähr-9223372036854775295 bis ungefähr 9223372036854775295.</span><span class="sxs-lookup"><span data-stu-id="4aed7-231">Acceptable values of `d` range from approximately -9223372036854775295 to approximately 9223372036854775295.</span></span> <span data-ttu-id="4aed7-232">Für Werte außerhalb dieses Bereichs die <xref:System.Math.Cos%2A> -Methode zurückkehrt `d` unverändert, anstatt eine Ausnahme auszulösen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-232">For values outside this range, the <xref:System.Math.Cos%2A> method returns `d` unchanged rather than throwing an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4aed7-233">Im folgenden Beispiel wird <xref:System.Math.Cos%2A> bestimmte trigonometrischen Identitäten für ausgewählte Winkel ausgewertet.</span><span class="sxs-lookup"><span data-stu-id="4aed7-233">The following example uses <xref:System.Math.Cos%2A> to evaluate certain trigonometric identities for selected angles.</span></span>  
  
 [!code-cpp[System.Math.SinCos#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.SinCos/CPP/sincos.cpp#1)]
 [!code-csharp[System.Math.SinCos#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.SinCos/CS/sincos.cs#1)]
 [!code-vb[System.Math.SinCos#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.SinCos/VB/sincos.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cosh">
      <MemberSignature Language="C#" Value="public static double Cosh (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Cosh(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Cosh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Cosh (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Cosh(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4aed7-234">Ein im Bogenmaß angegebener Winkel.</span><span class="sxs-lookup"><span data-stu-id="4aed7-234">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="4aed7-235">Gibt den Hyperbelkosinus des angegebenen Winkels zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-235">Returns the hyperbolic cosine of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="4aed7-236">Der Hyperbelkosinus von <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="4aed7-236">The hyperbolic cosine of <paramref name="value" />.</span></span> <span data-ttu-id="4aed7-237">Wenn <paramref name="value" /> gleich <see cref="F:System.Double.NegativeInfinity" /> oder <see cref="F:System.Double.PositiveInfinity" /> ist, wird <see cref="F:System.Double.PositiveInfinity" /> zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="4aed7-237">If <paramref name="value" /> is equal to <see cref="F:System.Double.NegativeInfinity" /> or <see cref="F:System.Double.PositiveInfinity" />, <see cref="F:System.Double.PositiveInfinity" /> is returned.</span></span> <span data-ttu-id="4aed7-238">Wenn <paramref name="value" /> gleich <see cref="F:System.Double.NaN" /> ist, wird <see cref="F:System.Double.NaN" /> zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="4aed7-238">If <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aed7-239">Der Winkel `value`, im Bogenmaß angegeben werden muss.</span><span class="sxs-lookup"><span data-stu-id="4aed7-239">The angle, `value`, must be in radians.</span></span> <span data-ttu-id="4aed7-240">Multiplizieren von <xref:System.Math.PI?displayProperty=nameWithType>/180, Grad in Bogenmaß konvertiert werden.</span><span class="sxs-lookup"><span data-stu-id="4aed7-240">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4aed7-241">Im folgenden Beispiel wird <xref:System.Math.Cosh%2A> bestimmte hyperbolischen Identitäten für ausgewählte Werte ausgewertet.</span><span class="sxs-lookup"><span data-stu-id="4aed7-241">The following example uses <xref:System.Math.Cosh%2A> to evaluate certain hyperbolic identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.SinhCosh#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.SinhCosh/CPP/sinhcosh.cpp#1)]
 [!code-csharp[System.Math.SinhCosh#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.SinhCosh/CS/sinhcosh.cs#1)]
 [!code-vb[System.Math.SinhCosh#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.SinhCosh/VB/sinhcosh.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DivRem">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4aed7-242">Berechnet den Quotienten zweier Zahlen und gibt außerdem den Rest als Ausgabeparameter zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-242">Calculates the quotient of two numbers and also returns the remainder in an output parameter.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DivRem">
      <MemberSignature Language="C#" Value="public static int DivRem (int a, int b, out int result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DivRem(int32 a, int32 b, [out] int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.DivRem(System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivRem (a As Integer, b As Integer, ByRef result As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DivRem(int a, int b, [Runtime::InteropServices::Out] int % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int32" />
        <Parameter Name="result" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="4aed7-243">Der Dividend.</span><span class="sxs-lookup"><span data-stu-id="4aed7-243">The dividend.</span></span></param>
        <param name="b"><span data-ttu-id="4aed7-244">Der Divisor.</span><span class="sxs-lookup"><span data-stu-id="4aed7-244">The divisor.</span></span></param>
        <param name="result"><span data-ttu-id="4aed7-245">Der Rest.</span><span class="sxs-lookup"><span data-stu-id="4aed7-245">The remainder.</span></span></param>
        <summary><span data-ttu-id="4aed7-246">Berechnet den Quotienten zweier 32-Bit-Ganzzahlen mit Vorzeichen und gibt außerdem den Rest als Ausgabeparameter zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-246">Calculates the quotient of two 32-bit signed integers and also returns the remainder in an output parameter.</span></span></summary>
        <returns><span data-ttu-id="4aed7-247">Der Quotient der angegebenen Zahlen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-247">The quotient of the specified numbers.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aed7-248">Der Rest wird berechnet, indem mithilfe der Modulo-Operation.</span><span class="sxs-lookup"><span data-stu-id="4aed7-248">The remainder is calculated by using the modulus operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4aed7-249">Das folgende Beispiel veranschaulicht die <xref:System.Math.DivRem%28System.Int32%2CSystem.Int32%2CSystem.Int32%40%29> Methode.</span><span class="sxs-lookup"><span data-stu-id="4aed7-249">The following example demonstrates the <xref:System.Math.DivRem%28System.Int32%2CSystem.Int32%2CSystem.Int32%40%29> method.</span></span>  
  
 [!code-csharp[System.Math.DivRem#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.divrem/cs/divrem1.cs#1)]
 [!code-vb[System.Math.DivRem#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.divrem/vb/divrem1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException">
          <span data-ttu-id="4aed7-250"><paramref name="b" /> ist 0 (null).</span><span class="sxs-lookup"><span data-stu-id="4aed7-250"><paramref name="b" /> is zero.</span></span></exception>
        <altmember cref="M:System.Math.IEEERemainder(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="DivRem">
      <MemberSignature Language="C#" Value="public static long DivRem (long a, long b, out long result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 DivRem(int64 a, int64 b, [out] int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.DivRem(System.Int64,System.Int64,System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivRem (a As Long, b As Long, ByRef result As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long DivRem(long a, long b, [Runtime::InteropServices::Out] long % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int64" />
        <Parameter Name="b" Type="System.Int64" />
        <Parameter Name="result" Type="System.Int64&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="4aed7-251">Der Dividend.</span><span class="sxs-lookup"><span data-stu-id="4aed7-251">The dividend.</span></span></param>
        <param name="b"><span data-ttu-id="4aed7-252">Der Divisor.</span><span class="sxs-lookup"><span data-stu-id="4aed7-252">The divisor.</span></span></param>
        <param name="result"><span data-ttu-id="4aed7-253">Der Rest.</span><span class="sxs-lookup"><span data-stu-id="4aed7-253">The remainder.</span></span></param>
        <summary><span data-ttu-id="4aed7-254">Berechnet den Quotienten zweier 64-Bit-Ganzzahlen mit Vorzeichen und gibt außerdem den Rest als Ausgabeparameter zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-254">Calculates the quotient of two 64-bit signed integers and also returns the remainder in an output parameter.</span></span></summary>
        <returns><span data-ttu-id="4aed7-255">Der Quotient der angegebenen Zahlen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-255">The quotient of the specified numbers.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aed7-256">Der Rest wird berechnet, indem mithilfe der Modulo-Operation.</span><span class="sxs-lookup"><span data-stu-id="4aed7-256">The remainder is calculated by using the modulus operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4aed7-257">Das folgende Beispiel veranschaulicht die <xref:System.Math.DivRem%28System.Int64%2CSystem.Int64%2CSystem.Int64%40%29> Methode.</span><span class="sxs-lookup"><span data-stu-id="4aed7-257">The following example demonstrates the <xref:System.Math.DivRem%28System.Int64%2CSystem.Int64%2CSystem.Int64%40%29> method.</span></span>  
  
 [!code-csharp[System.Math.DivRem#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.divrem/cs/divrem2.cs#2)]
 [!code-vb[System.Math.DivRem#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.divrem/vb/divrem2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException">
          <span data-ttu-id="4aed7-258"><paramref name="b" /> ist 0 (null).</span><span class="sxs-lookup"><span data-stu-id="4aed7-258"><paramref name="b" /> is zero.</span></span></exception>
        <altmember cref="M:System.Math.IEEERemainder(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="E">
      <MemberSignature Language="C#" Value="public const double E = 2.71828182845905;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 E = (2.71828182845905)" />
      <MemberSignature Language="DocId" Value="F:System.Math.E" />
      <MemberSignature Language="VB.NET" Value="Public Const E As Double  = 2.71828182845905" />
      <MemberSignature Language="C++ CLI" Value="public: double E = 2.71828182845905;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>2.71828182845905</MemberValue>
      <Docs>
        <summary><span data-ttu-id="4aed7-259">Stellt die Basis des natürlichen Logarithmus durch die Konstante <see langword="e" /> dar.</span><span class="sxs-lookup"><span data-stu-id="4aed7-259">Represents the natural logarithmic base, specified by the constant, <see langword="e" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aed7-260">Der Wert dieses Felds ist 2.7182818284590452354.</span><span class="sxs-lookup"><span data-stu-id="4aed7-260">The value of this field is 2.7182818284590452354.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4aed7-261">Das folgende Beispiel vergleicht <xref:System.Math.E> mit dem Wert aus einer Reihe von Power berechnet.</span><span class="sxs-lookup"><span data-stu-id="4aed7-261">The following example compares <xref:System.Math.E> with the value calculated from a power series.</span></span>  
  
 [!code-cpp[System.Math.E#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.E/CPP/efield.cpp#1)]
 [!code-csharp[System.Math.E#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.E/CS/efield.cs#1)]
 [!code-vb[System.Math.E#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.E/VB/efield.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exp">
      <MemberSignature Language="C#" Value="public static double Exp (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Exp(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Exp(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exp (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Exp(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="4aed7-262">Eine Zahl, die einen Exponenten angibt.</span><span class="sxs-lookup"><span data-stu-id="4aed7-262">A number specifying a power.</span></span></param>
        <summary><span data-ttu-id="4aed7-263">Gibt den Wert von <see langword="e" /> hoch angegebenem Exponenten zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-263">Returns <see langword="e" /> raised to the specified power.</span></span></summary>
        <returns><span data-ttu-id="4aed7-264">Die Zahl <see langword="e" /> hoch <paramref name="d" />.</span><span class="sxs-lookup"><span data-stu-id="4aed7-264">The number <see langword="e" /> raised to the power <paramref name="d" />.</span></span> <span data-ttu-id="4aed7-265">Wenn <paramref name="d" /> gleich <see cref="F:System.Double.NaN" /> oder <see cref="F:System.Double.PositiveInfinity" /> ist, wird dieser Wert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="4aed7-265">If <paramref name="d" /> equals <see cref="F:System.Double.NaN" /> or <see cref="F:System.Double.PositiveInfinity" />, that value is returned.</span></span> <span data-ttu-id="4aed7-266">Wenn <paramref name="d" /> gleich <see cref="F:System.Double.NegativeInfinity" /> ist, wird 0 zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="4aed7-266">If <paramref name="d" /> equals <see cref="F:System.Double.NegativeInfinity" />, 0 is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aed7-267">`e` ist eine mathematische Konstante, deren Wert ca. 2,71828 entspricht.</span><span class="sxs-lookup"><span data-stu-id="4aed7-267">`e` is a mathematical constant whose value is approximately 2.71828.</span></span>  
  
 <span data-ttu-id="4aed7-268">Verwenden der <xref:System.Math.Pow%2A> Methode, um Potenzen von anderen Basen zu berechnen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-268">Use the <xref:System.Math.Pow%2A> method to calculate powers of other bases.</span></span>  
  
 <span data-ttu-id="4aed7-269"><xref:System.Math.Exp%2A> ist das Gegenteil der <xref:System.Math.Log%2A>.</span><span class="sxs-lookup"><span data-stu-id="4aed7-269"><xref:System.Math.Exp%2A> is the inverse of <xref:System.Math.Log%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4aed7-270">Im folgenden Beispiel wird <xref:System.Math.Exp%2A> bestimmte exponentiellen und logarithmischen Identitäten für ausgewählte Werte ausgewertet.</span><span class="sxs-lookup"><span data-stu-id="4aed7-270">The following example uses <xref:System.Math.Exp%2A> to evaluate certain exponential and logarithmic identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.Exp#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.Exp/CPP/exp.cpp#1)]
 [!code-csharp[System.Math.Exp#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Exp/CS/exp.cs#1)]
 [!code-vb[System.Math.Exp#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Exp/VB/exp.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Math.E" />
        <altmember cref="M:System.Math.Pow(System.Double,System.Double)" />
        <altmember cref="M:System.Math.Log(System.Double)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Floor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4aed7-271">Gibt die größte Ganzzahl zurück, die kleiner oder gleich der angegebenen Zahl ist.</span><span class="sxs-lookup"><span data-stu-id="4aed7-271">Returns the largest integral value less than or equal to the specified number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aed7-272">Das Verhalten dieser Methode folgt Standard IEEE-754, Abschnitt 4.</span><span class="sxs-lookup"><span data-stu-id="4aed7-272">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="4aed7-273">Diese Art von Rundung wird manchmal bezeichnet runden in Richtung minus unendlich.</span><span class="sxs-lookup"><span data-stu-id="4aed7-273">This kind of rounding is sometimes called rounding toward negative infinity.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public static decimal Floor (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Floor(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Floor(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Floor (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Floor(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="4aed7-274">Eine Dezimalzahl.</span><span class="sxs-lookup"><span data-stu-id="4aed7-274">A decimal number.</span></span></param>
        <summary><span data-ttu-id="4aed7-275">Gibt die größte Ganzzahl zurück, die kleiner oder gleich der angegebenen Dezimalzahl ist.</span><span class="sxs-lookup"><span data-stu-id="4aed7-275">Returns the largest integral value less than or equal to the specified decimal number.</span></span></summary>
        <returns><span data-ttu-id="4aed7-276">Die größte Ganzzahl, die kleiner oder gleich <paramref name="d" /> ist.</span><span class="sxs-lookup"><span data-stu-id="4aed7-276">The largest integral value less than or equal to <paramref name="d" />.</span></span>  <span data-ttu-id="4aed7-277">Beachten Sie, dass die Methode einen Ganzzahlwert vom Typ <see cref="T:System.Decimal" /> zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="4aed7-277">Note that the method returns an integral value of type <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aed7-278">Das Verhalten dieser Methode folgt Standard IEEE-754, Abschnitt 4.</span><span class="sxs-lookup"><span data-stu-id="4aed7-278">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="4aed7-279">Diese Art von Rundung wird manchmal bezeichnet runden in Richtung minus unendlich.</span><span class="sxs-lookup"><span data-stu-id="4aed7-279">This kind of rounding is sometimes called rounding toward negative infinity.</span></span> <span data-ttu-id="4aed7-280">Das heißt, wenn `d` positiv ist, alle Nachkommawert wird abgeschnitten.</span><span class="sxs-lookup"><span data-stu-id="4aed7-280">In other words, if `d` is positive, any fractional component is truncated.</span></span> <span data-ttu-id="4aed7-281">Wenn `d` ist negativ ist, das Vorhandensein von jeder Nachkommawert bewirkt, dass es auf die nächste ganze Zahl gerundet.</span><span class="sxs-lookup"><span data-stu-id="4aed7-281">If `d` is negative, the presence of any fractional component causes it to be rounded to the smaller integer.</span></span> <span data-ttu-id="4aed7-282">Die Ausführung von dieser Methode unterscheidet sich von der <xref:System.Math.Ceiling%2A> -Methode, die Rundung in Richtung plus unendlich unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4aed7-282">The operation of this method differs from the <xref:System.Math.Ceiling%2A> method, which supports rounding toward positive infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4aed7-283">Das folgende Beispiel veranschaulicht die <xref:System.Math.Floor%28System.Decimal%29?displayProperty=nameWithType> Methode und Unterschiede aufgezeigt, mit der <xref:System.Math.Ceiling%28System.Decimal%29> Methode.</span><span class="sxs-lookup"><span data-stu-id="4aed7-283">The following example illustrates the <xref:System.Math.Floor%28System.Decimal%29?displayProperty=nameWithType> method and contrasts it with the <xref:System.Math.Ceiling%28System.Decimal%29> method.</span></span>  
  
 [!code-csharp[System.Math.Ceiling#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Ceiling/cs/Ceiling1.cs#1)]
 [!code-vb[System.Math.Ceiling#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Ceiling/vb/Ceiling1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Ceiling(System.Decimal)" />
        <altmember cref="M:System.Decimal.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public static double Floor (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Floor(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Floor(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Floor (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Floor(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="4aed7-284">Eine Gleitkommazahl mit doppelter Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="4aed7-284">A double-precision floating-point number.</span></span></param>
        <summary><span data-ttu-id="4aed7-285">Gibt die größte Ganzzahl zurück, die kleiner oder gleich der angegebenen Gleitkommazahl mit doppelter Genauigkeit ist.</span><span class="sxs-lookup"><span data-stu-id="4aed7-285">Returns the largest integral value less than or equal to the specified double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="4aed7-286">Die größte Ganzzahl, die kleiner oder gleich <paramref name="d" /> ist.</span><span class="sxs-lookup"><span data-stu-id="4aed7-286">The largest integral value less than or equal to <paramref name="d" />.</span></span> <span data-ttu-id="4aed7-287">Wenn <paramref name="d" /> gleich <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> oder <see cref="F:System.Double.PositiveInfinity" /> ist, wird dieser Wert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="4aed7-287">If <paramref name="d" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, that value is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aed7-288">Das Verhalten dieser Methode folgt Standard IEEE-754, Abschnitt 4.</span><span class="sxs-lookup"><span data-stu-id="4aed7-288">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="4aed7-289">Diese Art von Rundung wird manchmal bezeichnet runden in Richtung minus unendlich.</span><span class="sxs-lookup"><span data-stu-id="4aed7-289">This kind of rounding is sometimes called rounding toward negative infinity.</span></span> <span data-ttu-id="4aed7-290">Das heißt, wenn `d` positiv ist, alle Nachkommawert wird abgeschnitten.</span><span class="sxs-lookup"><span data-stu-id="4aed7-290">In other words, if `d` is positive, any fractional component is truncated.</span></span> <span data-ttu-id="4aed7-291">Wenn `d` ist negativ ist, das Vorhandensein von jeder Nachkommawert bewirkt, dass es auf die nächste ganze Zahl gerundet.</span><span class="sxs-lookup"><span data-stu-id="4aed7-291">If `d` is negative, the presence of any fractional component causes it to be rounded to the smaller integer.</span></span> <span data-ttu-id="4aed7-292">Die Ausführung von dieser Methode unterscheidet sich von der <xref:System.Math.Ceiling%2A> -Methode, die Rundung in Richtung plus unendlich unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4aed7-292">The operation of this method differs from the <xref:System.Math.Ceiling%2A> method, which supports rounding toward positive infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4aed7-293">Das folgende Beispiel veranschaulicht die <xref:System.Math.Floor%28System.Double%29?displayProperty=nameWithType> Methode und Unterschiede aufgezeigt, mit der <xref:System.Math.Ceiling%28System.Double%29> Methode.</span><span class="sxs-lookup"><span data-stu-id="4aed7-293">The following example illustrates the <xref:System.Math.Floor%28System.Double%29?displayProperty=nameWithType> method and contrasts it with the <xref:System.Math.Ceiling%28System.Double%29> method.</span></span>  
  
 [!code-csharp[System.Math.Ceiling#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Ceiling/cs/Ceiling1.cs#2)]
 [!code-vb[System.Math.Ceiling#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Ceiling/vb/Ceiling1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="IEEERemainder">
      <MemberSignature Language="C#" Value="public static double IEEERemainder (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 IEEERemainder(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.IEEERemainder(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IEEERemainder (x As Double, y As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double IEEERemainder(double x, double y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="4aed7-294">Ein Dividend.</span><span class="sxs-lookup"><span data-stu-id="4aed7-294">A dividend.</span></span></param>
        <param name="y"><span data-ttu-id="4aed7-295">Ein Divisor.</span><span class="sxs-lookup"><span data-stu-id="4aed7-295">A divisor.</span></span></param>
        <summary><span data-ttu-id="4aed7-296">Gibt den Rest der Division zweier angegebener Zahlen zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-296">Returns the remainder resulting from the division of a specified number by another specified number.</span></span></summary>
        <returns><span data-ttu-id="4aed7-297">Eine Zahl gleich <paramref name="x" /> – (<paramref name="y" /> Q), wobei Q der auf die nächste ganze Zahl gerundete Quotient von <paramref name="x" /> / <paramref name="y" /> ist (wenn <paramref name="x" /> / <paramref name="y" /> genau in der Mitte zwischen zwei ganzen Zahlen liegt, wird die gerade ganze Zahl zurückgegeben).</span><span class="sxs-lookup"><span data-stu-id="4aed7-297">A number equal to <paramref name="x" /> - (<paramref name="y" /> Q), where Q is the quotient of <paramref name="x" /> / <paramref name="y" /> rounded to the nearest integer (if <paramref name="x" /> / <paramref name="y" /> falls halfway between two integers, the even integer is returned).</span></span>  
  
 <span data-ttu-id="4aed7-298">Wenn <paramref name="x" /> - (<paramref name="y" />Q) gleich 0 ist, wird bei positivem <paramref name="x" /> +0 und bei negativem <paramref name="x" /> -0 zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="4aed7-298">If <paramref name="x" /> - (<paramref name="y" /> Q) is zero, the value +0 is returned if <paramref name="x" /> is positive, or -0 if <paramref name="x" /> is negative.</span></span>  
  
 <span data-ttu-id="4aed7-299">Wenn <paramref name="y" /> = 0 ist, wird <see cref="F:System.Double.NaN" /> zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="4aed7-299">If <paramref name="y" /> = 0, <see cref="F:System.Double.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aed7-300">Dieser Vorgang entspricht, mit dem Rest-Vorgang in Abschnitt 5.1 ANSI/IEEE Std 754-1985 definiert; IEEE-Standard für binäre Gleitkommaarithmetik; Institute of Electrical and Electronics Engineers, Inc.; 1985.</span><span class="sxs-lookup"><span data-stu-id="4aed7-300">This operation complies with the remainder operation defined in Section 5.1 of ANSI/IEEE Std 754-1985; IEEE Standard for Binary Floating-Point Arithmetic; Institute of Electrical and Electronics Engineers, Inc; 1985.</span></span>  
  
 <span data-ttu-id="4aed7-301">Die <xref:System.Math.IEEERemainder%2A> Methode ist nicht identisch mit der Modulo-Operator.</span><span class="sxs-lookup"><span data-stu-id="4aed7-301">The <xref:System.Math.IEEERemainder%2A> method is not the same as the modulus operator.</span></span> <span data-ttu-id="4aed7-302">Obwohl beide den Rest nach der Division zurückgeben, unterscheiden sich die Formeln, die sie verwenden.</span><span class="sxs-lookup"><span data-stu-id="4aed7-302">Although both return the remainder after division, the formulas they use are different.</span></span> <span data-ttu-id="4aed7-303">Die Formel für die <xref:System.Math.IEEERemainder%2A> Methode ist:</span><span class="sxs-lookup"><span data-stu-id="4aed7-303">The formula for the <xref:System.Math.IEEERemainder%2A> method is:</span></span>  
  
```  
IEEERemainder = dividend - (divisor * Math.Round(dividend / divisor))  
```  
  
 <span data-ttu-id="4aed7-304">Im Gegensatz dazu wird die Formel für den Moduloperator:</span><span class="sxs-lookup"><span data-stu-id="4aed7-304">In contrast, the formula for the modulus operator is:</span></span>  
  
```  
Modulus = (Math.Abs(dividend) - (Math.Abs(divisor) *   
          (Math.Floor(Math.Abs(dividend) / Math.Abs(divisor))))) *   
          Math.Sign(dividend)  
```  
  
   
  
## Examples  
 <span data-ttu-id="4aed7-305">Im folgende Beispiel werden die Unterschiede zwischen des Rest zurückgegebenes die <xref:System.Math.IEEERemainder%2A> Methode mit den übrigen zurückgegebenes Modulo-Divisionsoperator.</span><span class="sxs-lookup"><span data-stu-id="4aed7-305">The following example contrasts the remainder returned by the <xref:System.Math.IEEERemainder%2A> method with the remainder returned by the modulus division operator.</span></span>  
  
 [!code-csharp[System.Math.IEEERemainder#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.ieeeremainder/cs/ieeeremainder1.cs#1)]
 [!code-vb[System.Math.IEEERemainder#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.ieeeremainder/vb/ieeeremainder1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Log">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4aed7-306">Gibt den Logarithmus der angegebenen Zahl zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-306">Returns the logarithm of a specified number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static double Log (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Log(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="4aed7-307">Die Zahl, deren Logarithmus bestimmt werden soll.</span><span class="sxs-lookup"><span data-stu-id="4aed7-307">The number whose logarithm is to be found.</span></span></param>
        <summary><span data-ttu-id="4aed7-308">Gibt den natürlichen Logarithmus (zur Basis <see langword="e" />) der angegebenen Zahl zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-308">Returns the natural (base <see langword="e" />) logarithm of a specified number.</span></span></summary>
        <returns><span data-ttu-id="4aed7-309">Einer der Werte aus der folgenden Tabelle.</span><span class="sxs-lookup"><span data-stu-id="4aed7-309">One of the values in the following table.</span></span>  
  
 <span data-ttu-id="4aed7-310"><list type="table"><listheader><term><paramref name="d" /> Parameter</span><span class="sxs-lookup"><span data-stu-id="4aed7-310"><list type="table"><listheader><term><paramref name="d" /> parameter</span></span>  
  
 <span data-ttu-id="4aed7-311"></term><description> Rückgabewert</span><span class="sxs-lookup"><span data-stu-id="4aed7-311"></term><description> Return value</span></span>  
  
 <span data-ttu-id="4aed7-312"></description></listheader><item><term> Positiv</span><span class="sxs-lookup"><span data-stu-id="4aed7-312"></description></listheader><item><term> Positive</span></span>  
  
 <span data-ttu-id="4aed7-313"></term><description> Der natürliche Logarithmus von <paramref name="d" />, d.h. ln <paramref name="d" /> oder log e <paramref name="d" /></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="4aed7-313"></term><description> The natural logarithm of <paramref name="d" />; that is, ln <paramref name="d" />, or log e <paramref name="d" /></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="4aed7-314"></term><description><see cref="F:System.Double.NegativeInfinity" /></description></item><item><term> Negativ</span><span class="sxs-lookup"><span data-stu-id="4aed7-314"></term><description><see cref="F:System.Double.NegativeInfinity" /></description></item><item><term> Negative</span></span>  
  
 <span data-ttu-id="4aed7-315"></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> ist gleich <see cref="F:System.Double.NaN" /></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> ist gleich <see cref="F:System.Double.PositiveInfinity" /></term><description><see cref="F:System.Double.PositiveInfinity" /></description></item></list></span><span class="sxs-lookup"><span data-stu-id="4aed7-315"></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> Equal to <see cref="F:System.Double.NaN" /></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> Equal to <see cref="F:System.Double.PositiveInfinity" /></term><description><see cref="F:System.Double.PositiveInfinity" /></description></item></list></span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aed7-316">Parameter `d` wird als Zahl zur Basis 10 angegeben.</span><span class="sxs-lookup"><span data-stu-id="4aed7-316">Parameter `d` is specified as a base 10 number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4aed7-317">Das folgende Beispiel veranschaulicht die <xref:System.Math.Log%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="4aed7-317">The following example illustrates the <xref:System.Math.Log%2A> method.</span></span>  
  
 [!code-csharp[System.Math.Log_Overloads#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Log_Overloads/CS/log1.cs#2)]
 [!code-vb[System.Math.Log_Overloads#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Log_Overloads/VB/log1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Math.E" />
        <altmember cref="M:System.Math.Exp(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static double Log (double a, double newBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log(float64 a, float64 newBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Log(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log (a As Double, newBase As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log(double a, double newBase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
        <Parameter Name="newBase" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="4aed7-318">Die Zahl, deren Logarithmus bestimmt werden soll.</span><span class="sxs-lookup"><span data-stu-id="4aed7-318">The number whose logarithm is to be found.</span></span></param>
        <param name="newBase"><span data-ttu-id="4aed7-319">Die Basis des Logarithmus.</span><span class="sxs-lookup"><span data-stu-id="4aed7-319">The base of the logarithm.</span></span></param>
        <summary><span data-ttu-id="4aed7-320">Gibt den Logarithmus einer angegebenen Zahl bezüglich einer angegebenen Basis zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-320">Returns the logarithm of a specified number in a specified base.</span></span></summary>
        <returns><span data-ttu-id="4aed7-321">Einer der Werte aus der folgenden Tabelle.</span><span class="sxs-lookup"><span data-stu-id="4aed7-321">One of the values in the following table.</span></span> <span data-ttu-id="4aed7-322">(Plus unendlich steht für <see cref="F:System.Double.PositiveInfinity" />, minus unendlich für <see cref="F:System.Double.NegativeInfinity" /> und NaN für <see cref="F:System.Double.NaN" />.)</span><span class="sxs-lookup"><span data-stu-id="4aed7-322">(+Infinity denotes <see cref="F:System.Double.PositiveInfinity" />, -Infinity denotes <see cref="F:System.Double.NegativeInfinity" />, and NaN denotes <see cref="F:System.Double.NaN" />.)</span></span>  
  
 <span data-ttu-id="4aed7-323"><list type="table"><listheader><term><paramref name="a" /></term><description><paramref name="newBase" /></description><description> Rückgabewert</span><span class="sxs-lookup"><span data-stu-id="4aed7-323"><list type="table"><listheader><term><paramref name="a" /></term><description><paramref name="newBase" /></description><description> Return value</span></span>  
  
 <span data-ttu-id="4aed7-324"></description></listheader><item><term><paramref name="a" />&gt; 0</span><span class="sxs-lookup"><span data-stu-id="4aed7-324"></description></listheader><item><term><paramref name="a" />&gt; 0</span></span>  
  
 <span data-ttu-id="4aed7-325"></term><description> (0 &lt;<paramref name="newBase" />&lt; 1) oder (<paramref name="newBase" />&gt; 1)</span><span class="sxs-lookup"><span data-stu-id="4aed7-325"></term><description> (0 &lt;<paramref name="newBase" />&lt; 1) -or-(<paramref name="newBase" />&gt; 1)</span></span>  
  
 <span data-ttu-id="4aed7-326"></description><description> lognewBase(a)</span><span class="sxs-lookup"><span data-stu-id="4aed7-326"></description><description> lognewBase(a)</span></span>  
  
 <span data-ttu-id="4aed7-327"></description></item><item><term><paramref name="a" />&lt; 0</span><span class="sxs-lookup"><span data-stu-id="4aed7-327"></description></item><item><term><paramref name="a" />&lt; 0</span></span>  
  
 <span data-ttu-id="4aed7-328"></term><description> (beliebiger Wert)</span><span class="sxs-lookup"><span data-stu-id="4aed7-328"></term><description> (any value)</span></span>  
  
 <span data-ttu-id="4aed7-329"></description><description> NaN</span><span class="sxs-lookup"><span data-stu-id="4aed7-329"></description><description> NaN</span></span>  
  
 <span data-ttu-id="4aed7-330"></description></item><item><term> (beliebiger Wert)</span><span class="sxs-lookup"><span data-stu-id="4aed7-330"></description></item><item><term> (any value)</span></span>  
  
 <span data-ttu-id="4aed7-331"></term><description><paramref name="newBase" />&lt; 0</span><span class="sxs-lookup"><span data-stu-id="4aed7-331"></term><description><paramref name="newBase" />&lt; 0</span></span>  
  
 <span data-ttu-id="4aed7-332"></description><description> NaN</span><span class="sxs-lookup"><span data-stu-id="4aed7-332"></description><description> NaN</span></span>  
  
 <span data-ttu-id="4aed7-333"></description></item><item><term><paramref name="a" /> != 1</span><span class="sxs-lookup"><span data-stu-id="4aed7-333"></description></item><item><term><paramref name="a" /> != 1</span></span>  
  
 <span data-ttu-id="4aed7-334"></term><description><paramref name="newBase" /> = 0</span><span class="sxs-lookup"><span data-stu-id="4aed7-334"></term><description><paramref name="newBase" /> = 0</span></span>  
  
 <span data-ttu-id="4aed7-335"></description><description> NaN</span><span class="sxs-lookup"><span data-stu-id="4aed7-335"></description><description> NaN</span></span>  
  
 <span data-ttu-id="4aed7-336"></description></item><item><term><paramref name="a" /> != 1</span><span class="sxs-lookup"><span data-stu-id="4aed7-336"></description></item><item><term><paramref name="a" /> != 1</span></span>  
  
 <span data-ttu-id="4aed7-337"></term><description><paramref name="newBase" /> = +Infinity</span><span class="sxs-lookup"><span data-stu-id="4aed7-337"></term><description><paramref name="newBase" /> = +Infinity</span></span>  
  
 <span data-ttu-id="4aed7-338"></description><description> NaN</span><span class="sxs-lookup"><span data-stu-id="4aed7-338"></description><description> NaN</span></span>  
  
 <span data-ttu-id="4aed7-339"></description></item><item><term><paramref name="a" /> = NaN</span><span class="sxs-lookup"><span data-stu-id="4aed7-339"></description></item><item><term><paramref name="a" /> = NaN</span></span>  
  
 <span data-ttu-id="4aed7-340"></term><description> (beliebiger Wert)</span><span class="sxs-lookup"><span data-stu-id="4aed7-340"></term><description> (any value)</span></span>  
  
 <span data-ttu-id="4aed7-341"></description><description> NaN</span><span class="sxs-lookup"><span data-stu-id="4aed7-341"></description><description> NaN</span></span>  
  
 <span data-ttu-id="4aed7-342"></description></item><item><term> (beliebiger Wert)</span><span class="sxs-lookup"><span data-stu-id="4aed7-342"></description></item><item><term> (any value)</span></span>  
  
 <span data-ttu-id="4aed7-343"></term><description><paramref name="newBase" /> = NaN</span><span class="sxs-lookup"><span data-stu-id="4aed7-343"></term><description><paramref name="newBase" /> = NaN</span></span>  
  
 <span data-ttu-id="4aed7-344"></description><description> NaN</span><span class="sxs-lookup"><span data-stu-id="4aed7-344"></description><description> NaN</span></span>  
  
 <span data-ttu-id="4aed7-345"></description></item><item><term> (beliebiger Wert)</span><span class="sxs-lookup"><span data-stu-id="4aed7-345"></description></item><item><term> (any value)</span></span>  
  
 <span data-ttu-id="4aed7-346"></term><description><paramref name="newBase" /> = 1</span><span class="sxs-lookup"><span data-stu-id="4aed7-346"></term><description><paramref name="newBase" /> = 1</span></span>  
  
 <span data-ttu-id="4aed7-347"></description><description> NaN</span><span class="sxs-lookup"><span data-stu-id="4aed7-347"></description><description> NaN</span></span>  
  
 <span data-ttu-id="4aed7-348"></description></item><item><term><paramref name="a" /> = 0</span><span class="sxs-lookup"><span data-stu-id="4aed7-348"></description></item><item><term><paramref name="a" /> = 0</span></span>  
  
 <span data-ttu-id="4aed7-349"></term><description> 0 &lt;<paramref name="newBase" />&lt; 1</span><span class="sxs-lookup"><span data-stu-id="4aed7-349"></term><description> 0 &lt;<paramref name="newBase" />&lt; 1</span></span>  
  
 <span data-ttu-id="4aed7-350"></description><description> +Infinity</span><span class="sxs-lookup"><span data-stu-id="4aed7-350"></description><description> +Infinity</span></span>  
  
 <span data-ttu-id="4aed7-351"></description></item><item><term><paramref name="a" /> = 0</span><span class="sxs-lookup"><span data-stu-id="4aed7-351"></description></item><item><term><paramref name="a" /> = 0</span></span>  
  
 <span data-ttu-id="4aed7-352"></term><description><paramref name="newBase" />&gt; 1</span><span class="sxs-lookup"><span data-stu-id="4aed7-352"></term><description><paramref name="newBase" />&gt; 1</span></span>  
  
 <span data-ttu-id="4aed7-353"></description><description> –Infinity</span><span class="sxs-lookup"><span data-stu-id="4aed7-353"></description><description> -Infinity</span></span>  
  
 <span data-ttu-id="4aed7-354"></description></item><item><term><paramref name="a" /> =  +Infinity</span><span class="sxs-lookup"><span data-stu-id="4aed7-354"></description></item><item><term><paramref name="a" /> =  +Infinity</span></span>  
  
 <span data-ttu-id="4aed7-355"></term><description> 0 &lt;<paramref name="newBase" />&lt; 1</span><span class="sxs-lookup"><span data-stu-id="4aed7-355"></term><description> 0 &lt;<paramref name="newBase" />&lt; 1</span></span>  
  
 <span data-ttu-id="4aed7-356"></description><description> –Infinity</span><span class="sxs-lookup"><span data-stu-id="4aed7-356"></description><description> -Infinity</span></span>  
  
 <span data-ttu-id="4aed7-357"></description></item><item><term><paramref name="a" /> =  +Infinity</span><span class="sxs-lookup"><span data-stu-id="4aed7-357"></description></item><item><term><paramref name="a" /> =  +Infinity</span></span>  
  
 <span data-ttu-id="4aed7-358"></term><description><paramref name="newBase" />&gt; 1</span><span class="sxs-lookup"><span data-stu-id="4aed7-358"></term><description><paramref name="newBase" />&gt; 1</span></span>  
  
 <span data-ttu-id="4aed7-359"></description><description> +Infinity</span><span class="sxs-lookup"><span data-stu-id="4aed7-359"></description><description> +Infinity</span></span>  
  
 <span data-ttu-id="4aed7-360"></description></item><item><term><paramref name="a" /> = 1</span><span class="sxs-lookup"><span data-stu-id="4aed7-360"></description></item><item><term><paramref name="a" /> = 1</span></span>  
  
 <span data-ttu-id="4aed7-361"></term><description><paramref name="newBase" /> = 0</span><span class="sxs-lookup"><span data-stu-id="4aed7-361"></term><description><paramref name="newBase" /> = 0</span></span>  
  
 <span data-ttu-id="4aed7-362"></description><description> 0</span><span class="sxs-lookup"><span data-stu-id="4aed7-362"></description><description> 0</span></span>  
  
 <span data-ttu-id="4aed7-363"></description></item><item><term><paramref name="a" /> = 1</span><span class="sxs-lookup"><span data-stu-id="4aed7-363"></description></item><item><term><paramref name="a" /> = 1</span></span>  
  
 <span data-ttu-id="4aed7-364"></term><description><paramref name="newBase" /> = +Infinity</span><span class="sxs-lookup"><span data-stu-id="4aed7-364"></term><description><paramref name="newBase" /> = +Infinity</span></span>  
  
 <span data-ttu-id="4aed7-365"></description><description> 0</span><span class="sxs-lookup"><span data-stu-id="4aed7-365"></description><description> 0</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4aed7-366">Im folgenden Beispiel wird <xref:System.Math.Log%2A> bestimmte logarithmische Identitäten für ausgewählte Werte ausgewertet.</span><span class="sxs-lookup"><span data-stu-id="4aed7-366">The following example uses <xref:System.Math.Log%2A> to evaluate certain logarithmic identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.Log_Overloads#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.Log_Overloads/CPP/loggen.cpp#1)]
 [!code-csharp[System.Math.Log_Overloads#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Log_Overloads/CS/loggen.cs#1)]
 [!code-vb[System.Math.Log_Overloads#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Log_Overloads/VB/loggen.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Log10">
      <MemberSignature Language="C#" Value="public static double Log10 (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log10(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Log10(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log10 (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log10(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="4aed7-367">Eine Zahl, deren Logarithmus gesucht wird.</span><span class="sxs-lookup"><span data-stu-id="4aed7-367">A number whose logarithm is to be found.</span></span></param>
        <summary><span data-ttu-id="4aed7-368">Gibt den Logarithmus einer angegebenen Zahl zur Basis 10 zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-368">Returns the base 10 logarithm of a specified number.</span></span></summary>
        <returns><span data-ttu-id="4aed7-369">Einer der Werte aus der folgenden Tabelle.</span><span class="sxs-lookup"><span data-stu-id="4aed7-369">One of the values in the following table.</span></span>  
  
 <span data-ttu-id="4aed7-370"><list type="table"><listheader><term><paramref name="d" /> Parameter</span><span class="sxs-lookup"><span data-stu-id="4aed7-370"><list type="table"><listheader><term><paramref name="d" /> parameter</span></span>  
  
 <span data-ttu-id="4aed7-371"></term><description> Rückgabewert</span><span class="sxs-lookup"><span data-stu-id="4aed7-371"></term><description> Return value</span></span>  
  
 <span data-ttu-id="4aed7-372"></description></listheader><item><term> Positiv</span><span class="sxs-lookup"><span data-stu-id="4aed7-372"></description></listheader><item><term> Positive</span></span>  
  
 <span data-ttu-id="4aed7-373"></term><description> Der Logarithmus von <paramref name="d" /> zur Basis 10, d.h. log 10<paramref name="d" />.</span><span class="sxs-lookup"><span data-stu-id="4aed7-373"></term><description> The base 10 log of <paramref name="d" />; that is, log 10<paramref name="d" />.</span></span>  
  
 <span data-ttu-id="4aed7-374"></description></item><item><term> 0 (null)</span><span class="sxs-lookup"><span data-stu-id="4aed7-374"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="4aed7-375"></term><description><see cref="F:System.Double.NegativeInfinity" /></description></item><item><term> Negativ</span><span class="sxs-lookup"><span data-stu-id="4aed7-375"></term><description><see cref="F:System.Double.NegativeInfinity" /></description></item><item><term> Negative</span></span>  
  
 <span data-ttu-id="4aed7-376"></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> ist gleich <see cref="F:System.Double.NaN" /></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> ist gleich <see cref="F:System.Double.PositiveInfinity" /></term><description><see cref="F:System.Double.PositiveInfinity" /></description></item></list></span><span class="sxs-lookup"><span data-stu-id="4aed7-376"></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> Equal to <see cref="F:System.Double.NaN" /></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> Equal to <see cref="F:System.Double.PositiveInfinity" /></term><description><see cref="F:System.Double.PositiveInfinity" /></description></item></list></span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aed7-377">Parameter `d` wird als Zahl zur Basis 10 angegeben.</span><span class="sxs-lookup"><span data-stu-id="4aed7-377">Parameter `d` is specified as a base 10 number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4aed7-378">Im folgenden Beispiel wird die <xref:System.Math.Log10%2A> Methode, um den Logarithmus zur Basis 10 für ausgewählte Werte zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="4aed7-378">The following example uses the <xref:System.Math.Log10%2A> method to return the base 10 logarithm for selected values.</span></span>  
  
 [!code-csharp[System.Math.Log10#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Log10/CS/log10.cs#1)]
 [!code-vb[System.Math.Log10#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Log10/VB/log10.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Max">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4aed7-379">Gibt die größere von zwei angegebenen Zahlen zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-379">Returns the larger of two specified numbers.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static byte Max (byte val1, byte val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Max(unsigned int8 val1, unsigned int8 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Byte, val2 As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Max(System::Byte val1, System::Byte val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Byte" />
        <Parameter Name="val2" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="4aed7-380">Die erste von zwei zu vergleichenden 8-Bit-Ganzzahlen ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-380">The first of two 8-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="4aed7-381">Die zweite von zwei zu vergleichenden 8-Bit-Ganzzahlen ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-381">The second of two 8-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="4aed7-382">Gibt die größere von zwei 8-Bit-Ganzzahlen ohne Vorzeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-382">Returns the larger of two 8-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="4aed7-383">Der größere der Parameter <paramref name="val1" /> und <paramref name="val2" />.</span><span class="sxs-lookup"><span data-stu-id="4aed7-383">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4aed7-384">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Math.Max%2A> Methode zum Zurückgeben und Anzeigen der größeren von zwei Variablen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-384">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static decimal Max (decimal val1, decimal val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Max(valuetype System.Decimal val1, valuetype System.Decimal val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Decimal, val2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Max(System::Decimal val1, System::Decimal val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Decimal" />
        <Parameter Name="val2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="4aed7-385">Die erste von zwei zu vergleichenden Dezimalzahlen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-385">The first of two decimal numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="4aed7-386">Die zweite von zwei zu vergleichenden Dezimalzahlen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-386">The second of two decimal numbers to compare.</span></span></param>
        <summary><span data-ttu-id="4aed7-387">Gibt die größere von zwei Dezimalzahlen zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-387">Returns the larger of two decimal numbers.</span></span></summary>
        <returns><span data-ttu-id="4aed7-388">Der größere der Parameter <paramref name="val1" /> und <paramref name="val2" />.</span><span class="sxs-lookup"><span data-stu-id="4aed7-388">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4aed7-389">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Math.Max%2A> Methode zum Zurückgeben und Anzeigen der größeren von zwei Variablen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-389">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static double Max (double val1, double val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Max(float64 val1, float64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Double, val2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Max(double val1, double val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Double" />
        <Parameter Name="val2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="4aed7-390">Die erste von zwei zu vergleichenden Gleitkommazahlen mit doppelter Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="4aed7-390">The first of two double-precision floating-point numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="4aed7-391">Die zweite von zwei zu vergleichenden Gleitkommazahlen mit doppelter Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="4aed7-391">The second of two double-precision floating-point numbers to compare.</span></span></param>
        <summary><span data-ttu-id="4aed7-392">Gibt die größere von zwei Gleitkommazahlen mit doppelter Genauigkeit zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-392">Returns the larger of two double-precision floating-point numbers.</span></span></summary>
        <returns><span data-ttu-id="4aed7-393">Der größere der Parameter <paramref name="val1" /> und <paramref name="val2" />.</span><span class="sxs-lookup"><span data-stu-id="4aed7-393">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span> <span data-ttu-id="4aed7-394">Wenn entweder <paramref name="val1" /> oder <paramref name="val2" /> oder sowohl <paramref name="val1" /> als auch <paramref name="val2" /> gleich <see cref="F:System.Double.NaN" /> ist, wird <see cref="F:System.Double.NaN" /> zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="4aed7-394">If <paramref name="val1" />, <paramref name="val2" />, or both <paramref name="val1" /> and <paramref name="val2" /> are equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4aed7-395">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Math.Max%2A> Methode zum Zurückgeben und Anzeigen der größeren von zwei Variablen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-395">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static short Max (short val1, short val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Max(int16 val1, int16 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Short, val2 As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Max(short val1, short val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int16" />
        <Parameter Name="val2" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="4aed7-396">Die erste von zwei zu vergleichenden 16-Bit-Ganzzahlen mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-396">The first of two 16-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="4aed7-397">Die zweite von zwei zu vergleichenden 16-Bit-Ganzzahlen mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-397">The second of two 16-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="4aed7-398">Gibt die größere von zwei 16-Bit-Ganzzahlen mit Vorzeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-398">Returns the larger of two 16-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="4aed7-399">Der größere der Parameter <paramref name="val1" /> und <paramref name="val2" />.</span><span class="sxs-lookup"><span data-stu-id="4aed7-399">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4aed7-400">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Math.Max%2A> Methode zum Zurückgeben und Anzeigen der größeren von zwei Variablen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-400">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static int Max (int val1, int val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Max(int32 val1, int32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Integer, val2 As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Max(int val1, int val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int32" />
        <Parameter Name="val2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="4aed7-401">Die erste von zwei zu vergleichenden 32-Bit-Ganzzahlen mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-401">The first of two 32-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="4aed7-402">Die zweite von zwei zu vergleichenden 32-Bit-Ganzzahlen mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-402">The second of two 32-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="4aed7-403">Gibt die größere von zwei 32-Bit-Ganzzahlen mit Vorzeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-403">Returns the larger of two 32-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="4aed7-404">Der größere der Parameter <paramref name="val1" /> und <paramref name="val2" />.</span><span class="sxs-lookup"><span data-stu-id="4aed7-404">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4aed7-405">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Math.Max%2A> Methode zum Zurückgeben und Anzeigen der größeren von zwei Variablen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-405">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static long Max (long val1, long val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Max(int64 val1, int64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Long, val2 As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Max(long val1, long val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int64" />
        <Parameter Name="val2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="4aed7-406">Die erste von zwei zu vergleichenden 64-Bit-Ganzzahlen mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-406">The first of two 64-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="4aed7-407">Die zweite von zwei zu vergleichenden 64-Bit-Ganzzahlen mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-407">The second of two 64-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="4aed7-408">Gibt die größere von zwei 64-Bit-Ganzzahlen mit Vorzeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-408">Returns the larger of two 64-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="4aed7-409">Der größere der Parameter <paramref name="val1" /> und <paramref name="val2" />.</span><span class="sxs-lookup"><span data-stu-id="4aed7-409">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4aed7-410">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Math.Max%2A> Methode zum Zurückgeben und Anzeigen der größeren von zwei Variablen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-410">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static sbyte Max (sbyte val1, sbyte val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 Max(int8 val1, int8 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.SByte,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As SByte, val2 As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte Max(System::SByte val1, System::SByte val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.SByte" />
        <Parameter Name="val2" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="4aed7-411">Die erste von zwei zu vergleichenden 8-Bit-Ganzzahlen mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-411">The first of two 8-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="4aed7-412">Die zweite von zwei zu vergleichenden 8-Bit-Ganzzahlen mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-412">The second of two 8-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="4aed7-413">Gibt die größere von zwei 8-Bit-Ganzzahlen mit Vorzeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-413">Returns the larger of two 8-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="4aed7-414">Der größere der Parameter <paramref name="val1" /> und <paramref name="val2" />.</span><span class="sxs-lookup"><span data-stu-id="4aed7-414">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4aed7-415">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Math.Max%2A> Methode zum Zurückgeben und Anzeigen der größeren von zwei Variablen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-415">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static float Max (float val1, float val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Max(float32 val1, float32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Single, val2 As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Max(float val1, float val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Single" />
        <Parameter Name="val2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="4aed7-416">Die erste von zwei zu vergleichenden Gleitkommazahlen mit einfacher Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="4aed7-416">The first of two single-precision floating-point numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="4aed7-417">Die zweite von zwei zu vergleichenden Gleitkommazahlen mit einfacher Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="4aed7-417">The second of two single-precision floating-point numbers to compare.</span></span></param>
        <summary><span data-ttu-id="4aed7-418">Gibt die größere von zwei Gleitkommazahlen mit einfacher Genauigkeit zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-418">Returns the larger of two single-precision floating-point numbers.</span></span></summary>
        <returns><span data-ttu-id="4aed7-419">Der größere der Parameter <paramref name="val1" /> und <paramref name="val2" />.</span><span class="sxs-lookup"><span data-stu-id="4aed7-419">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span> <span data-ttu-id="4aed7-420">Wenn entweder <paramref name="val1" /> oder <paramref name="val2" /> oder sowohl <paramref name="val1" /> als auch <paramref name="val2" /> gleich <see cref="F:System.Single.NaN" /> ist, wird <see cref="F:System.Single.NaN" /> zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="4aed7-420">If <paramref name="val1" />, or <paramref name="val2" />, or both <paramref name="val1" /> and <paramref name="val2" /> are equal to <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4aed7-421">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Math.Max%2A> Methode zum Zurückgeben und Anzeigen der größeren von zwei Variablen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-421">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static ushort Max (ushort val1, ushort val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Max(unsigned int16 val1, unsigned int16 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.UInt16,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As UShort, val2 As UShort) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Max(System::UInt16 val1, System::UInt16 val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt16" />
        <Parameter Name="val2" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="4aed7-422">Die erste von zwei zu vergleichenden 16-Bit-Ganzzahlen ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-422">The first of two 16-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="4aed7-423">Die zweite von zwei zu vergleichenden 16-Bit-Ganzzahlen ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-423">The second of two 16-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="4aed7-424">Gibt die größere von zwei 16-Bit-Ganzzahlen ohne Vorzeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-424">Returns the larger of two 16-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="4aed7-425">Der größere der Parameter <paramref name="val1" /> und <paramref name="val2" />.</span><span class="sxs-lookup"><span data-stu-id="4aed7-425">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4aed7-426">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Math.Max%2A> Methode zum Zurückgeben und Anzeigen der größeren von zwei Variablen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-426">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static uint Max (uint val1, uint val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Max(unsigned int32 val1, unsigned int32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As UInteger, val2 As UInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 Max(System::UInt32 val1, System::UInt32 val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt32" />
        <Parameter Name="val2" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="4aed7-427">Die erste von zwei zu vergleichenden 32-Bit-Ganzzahlen ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-427">The first of two 32-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="4aed7-428">Die zweite von zwei zu vergleichenden 32-Bit-Ganzzahlen ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-428">The second of two 32-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="4aed7-429">Gibt die größere von zwei 32-Bit-Ganzzahlen ohne Vorzeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-429">Returns the larger of two 32-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="4aed7-430">Der größere der Parameter <paramref name="val1" /> und <paramref name="val2" />.</span><span class="sxs-lookup"><span data-stu-id="4aed7-430">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4aed7-431">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Math.Max%2A> Methode zum Zurückgeben und Anzeigen der größeren von zwei Variablen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-431">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static ulong Max (ulong val1, ulong val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Max(unsigned int64 val1, unsigned int64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.UInt64,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As ULong, val2 As ULong) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Max(System::UInt64 val1, System::UInt64 val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt64" />
        <Parameter Name="val2" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="4aed7-432">Die erste von zwei zu vergleichenden 64-Bit-Ganzzahlen ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-432">The first of two 64-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="4aed7-433">Die zweite von zwei zu vergleichenden 64-Bit-Ganzzahlen ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-433">The second of two 64-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="4aed7-434">Gibt die größere von zwei 64-Bit-Ganzzahlen ohne Vorzeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-434">Returns the larger of two 64-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="4aed7-435">Der größere der Parameter <paramref name="val1" /> und <paramref name="val2" />.</span><span class="sxs-lookup"><span data-stu-id="4aed7-435">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4aed7-436">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Math.Max%2A> Methode zum Zurückgeben und Anzeigen der größeren von zwei Variablen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-436">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Min">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4aed7-437">Gibt die kleinere von zwei Zahlen zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-437">Returns the smaller of two numbers.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static byte Min (byte val1, byte val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Min(unsigned int8 val1, unsigned int8 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Byte, val2 As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Min(System::Byte val1, System::Byte val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Byte" />
        <Parameter Name="val2" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="4aed7-438">Die erste von zwei zu vergleichenden 8-Bit-Ganzzahlen ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-438">The first of two 8-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="4aed7-439">Die zweite von zwei zu vergleichenden 8-Bit-Ganzzahlen ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-439">The second of two 8-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="4aed7-440">Gibt die kleinere von zwei 8-Bit-Ganzzahlen ohne Vorzeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-440">Returns the smaller of two 8-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="4aed7-441">Der kleinere der Parameter <paramref name="val1" /> und <paramref name="val2" />.</span><span class="sxs-lookup"><span data-stu-id="4aed7-441">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4aed7-442">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Math.Min%2A> Methode zum Zurückgeben und die kleinere von zwei Variablen anzeigen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-442">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static decimal Min (decimal val1, decimal val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Min(valuetype System.Decimal val1, valuetype System.Decimal val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Decimal, val2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Min(System::Decimal val1, System::Decimal val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Decimal" />
        <Parameter Name="val2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="4aed7-443">Die erste von zwei zu vergleichenden Dezimalzahlen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-443">The first of two decimal numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="4aed7-444">Die zweite von zwei zu vergleichenden Dezimalzahlen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-444">The second of two decimal numbers to compare.</span></span></param>
        <summary><span data-ttu-id="4aed7-445">Gibt die kleinere von zwei Dezimalzahlen zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-445">Returns the smaller of two decimal numbers.</span></span></summary>
        <returns><span data-ttu-id="4aed7-446">Der kleinere der Parameter <paramref name="val1" /> und <paramref name="val2" />.</span><span class="sxs-lookup"><span data-stu-id="4aed7-446">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4aed7-447">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Math.Min%2A> Methode zum Zurückgeben und die kleinere von zwei Variablen anzeigen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-447">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static double Min (double val1, double val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Min(float64 val1, float64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Double, val2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Min(double val1, double val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Double" />
        <Parameter Name="val2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="4aed7-448">Die erste von zwei zu vergleichenden Gleitkommazahlen mit doppelter Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="4aed7-448">The first of two double-precision floating-point numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="4aed7-449">Die zweite von zwei zu vergleichenden Gleitkommazahlen mit doppelter Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="4aed7-449">The second of two double-precision floating-point numbers to compare.</span></span></param>
        <summary><span data-ttu-id="4aed7-450">Gibt die kleinere von zwei Gleitkommazahlen mit doppelter Genauigkeit zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-450">Returns the smaller of two double-precision floating-point numbers.</span></span></summary>
        <returns><span data-ttu-id="4aed7-451">Der kleinere der Parameter <paramref name="val1" /> und <paramref name="val2" />.</span><span class="sxs-lookup"><span data-stu-id="4aed7-451">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span> <span data-ttu-id="4aed7-452">Wenn entweder <paramref name="val1" /> oder <paramref name="val2" /> oder sowohl <paramref name="val1" /> als auch <paramref name="val2" /> gleich <see cref="F:System.Double.NaN" /> ist, wird <see cref="F:System.Double.NaN" /> zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="4aed7-452">If <paramref name="val1" />, <paramref name="val2" />, or both <paramref name="val1" /> and <paramref name="val2" /> are equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4aed7-453">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Math.Min%2A> Methode zum Zurückgeben und die kleinere von zwei Variablen anzeigen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-453">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static short Min (short val1, short val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Min(int16 val1, int16 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Short, val2 As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Min(short val1, short val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int16" />
        <Parameter Name="val2" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="4aed7-454">Die erste von zwei zu vergleichenden 16-Bit-Ganzzahlen mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-454">The first of two 16-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="4aed7-455">Die zweite von zwei zu vergleichenden 16-Bit-Ganzzahlen mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-455">The second of two 16-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="4aed7-456">Gibt die kleinere von zwei 16-Bit-Ganzzahlen mit Vorzeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-456">Returns the smaller of two 16-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="4aed7-457">Der kleinere der Parameter <paramref name="val1" /> und <paramref name="val2" />.</span><span class="sxs-lookup"><span data-stu-id="4aed7-457">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4aed7-458">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Math.Min%2A> Methode zum Zurückgeben und die kleinere von zwei Variablen anzeigen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-458">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static int Min (int val1, int val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Min(int32 val1, int32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Integer, val2 As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Min(int val1, int val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int32" />
        <Parameter Name="val2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="4aed7-459">Die erste von zwei zu vergleichenden 32-Bit-Ganzzahlen mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-459">The first of two 32-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="4aed7-460">Die zweite von zwei zu vergleichenden 32-Bit-Ganzzahlen mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-460">The second of two 32-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="4aed7-461">Gibt die kleinere von zwei 32-Bit-Ganzzahlen mit Vorzeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-461">Returns the smaller of two 32-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="4aed7-462">Der kleinere der Parameter <paramref name="val1" /> und <paramref name="val2" />.</span><span class="sxs-lookup"><span data-stu-id="4aed7-462">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4aed7-463">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Math.Min%2A> Methode zum Zurückgeben und die kleinere von zwei Variablen anzeigen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-463">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static long Min (long val1, long val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Min(int64 val1, int64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Long, val2 As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Min(long val1, long val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int64" />
        <Parameter Name="val2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="4aed7-464">Die erste von zwei zu vergleichenden 64-Bit-Ganzzahlen mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-464">The first of two 64-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="4aed7-465">Die zweite von zwei zu vergleichenden 64-Bit-Ganzzahlen mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-465">The second of two 64-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="4aed7-466">Gibt die kleinere von zwei 64-Bit-Ganzzahlen mit Vorzeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-466">Returns the smaller of two 64-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="4aed7-467">Der kleinere der Parameter <paramref name="val1" /> und <paramref name="val2" />.</span><span class="sxs-lookup"><span data-stu-id="4aed7-467">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4aed7-468">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Math.Min%2A> Methode zum Zurückgeben und die kleinere von zwei Variablen anzeigen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-468">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static sbyte Min (sbyte val1, sbyte val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 Min(int8 val1, int8 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.SByte,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As SByte, val2 As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte Min(System::SByte val1, System::SByte val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.SByte" />
        <Parameter Name="val2" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="4aed7-469">Die erste von zwei zu vergleichenden 8-Bit-Ganzzahlen mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-469">The first of two 8-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="4aed7-470">Die zweite von zwei zu vergleichenden 8-Bit-Ganzzahlen mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-470">The second of two 8-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="4aed7-471">Gibt die kleinere von zwei 8-Bit-Ganzzahlen mit Vorzeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-471">Returns the smaller of two 8-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="4aed7-472">Der kleinere der Parameter <paramref name="val1" /> und <paramref name="val2" />.</span><span class="sxs-lookup"><span data-stu-id="4aed7-472">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4aed7-473">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Math.Min%2A> Methode zum Zurückgeben und die kleinere von zwei Variablen anzeigen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-473">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static float Min (float val1, float val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Min(float32 val1, float32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Single, val2 As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Min(float val1, float val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Single" />
        <Parameter Name="val2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="4aed7-474">Die erste von zwei zu vergleichenden Gleitkommazahlen mit einfacher Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="4aed7-474">The first of two single-precision floating-point numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="4aed7-475">Die zweite von zwei zu vergleichenden Gleitkommazahlen mit einfacher Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="4aed7-475">The second of two single-precision floating-point numbers to compare.</span></span></param>
        <summary><span data-ttu-id="4aed7-476">Gibt die kleinere von zwei Gleitkommazahlen mit einfacher Genauigkeit zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-476">Returns the smaller of two single-precision floating-point numbers.</span></span></summary>
        <returns><span data-ttu-id="4aed7-477">Der kleinere der Parameter <paramref name="val1" /> und <paramref name="val2" />.</span><span class="sxs-lookup"><span data-stu-id="4aed7-477">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span> <span data-ttu-id="4aed7-478">Wenn entweder <paramref name="val1" /> oder <paramref name="val2" /> oder sowohl <paramref name="val1" /> als auch <paramref name="val2" /> gleich <see cref="F:System.Single.NaN" /> ist, wird <see cref="F:System.Single.NaN" /> zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="4aed7-478">If <paramref name="val1" />, <paramref name="val2" />, or both <paramref name="val1" /> and <paramref name="val2" /> are equal to <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4aed7-479">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Math.Min%2A> Methode zum Zurückgeben und die kleinere von zwei Variablen anzeigen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-479">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static ushort Min (ushort val1, ushort val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Min(unsigned int16 val1, unsigned int16 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.UInt16,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As UShort, val2 As UShort) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Min(System::UInt16 val1, System::UInt16 val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt16" />
        <Parameter Name="val2" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="4aed7-480">Die erste von zwei zu vergleichenden 16-Bit-Ganzzahlen ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-480">The first of two 16-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="4aed7-481">Die zweite von zwei zu vergleichenden 16-Bit-Ganzzahlen ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-481">The second of two 16-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="4aed7-482">Gibt die kleinere von zwei 16-Bit-Ganzzahlen ohne Vorzeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-482">Returns the smaller of two 16-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="4aed7-483">Der kleinere der Parameter <paramref name="val1" /> und <paramref name="val2" />.</span><span class="sxs-lookup"><span data-stu-id="4aed7-483">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4aed7-484">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Math.Min%2A> Methode zum Zurückgeben und die kleinere von zwei Variablen anzeigen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-484">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static uint Min (uint val1, uint val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Min(unsigned int32 val1, unsigned int32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As UInteger, val2 As UInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 Min(System::UInt32 val1, System::UInt32 val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt32" />
        <Parameter Name="val2" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="4aed7-485">Die erste von zwei zu vergleichenden 32-Bit-Ganzzahlen ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-485">The first of two 32-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="4aed7-486">Die zweite von zwei zu vergleichenden 32-Bit-Ganzzahlen ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-486">The second of two 32-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="4aed7-487">Gibt die kleinere von zwei 32-Bit-Ganzzahlen ohne Vorzeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-487">Returns the smaller of two 32-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="4aed7-488">Der kleinere der Parameter <paramref name="val1" /> und <paramref name="val2" />.</span><span class="sxs-lookup"><span data-stu-id="4aed7-488">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4aed7-489">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Math.Min%2A> Methode zum Zurückgeben und die kleinere von zwei Variablen anzeigen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-489">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static ulong Min (ulong val1, ulong val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Min(unsigned int64 val1, unsigned int64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.UInt64,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As ULong, val2 As ULong) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Min(System::UInt64 val1, System::UInt64 val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt64" />
        <Parameter Name="val2" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="4aed7-490">Die erste von zwei zu vergleichenden 64-Bit-Ganzzahlen ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-490">The first of two 64-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="4aed7-491">Die zweite von zwei zu vergleichenden 64-Bit-Ganzzahlen ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-491">The second of two 64-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="4aed7-492">Gibt die kleinere von zwei 64-Bit-Ganzzahlen ohne Vorzeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-492">Returns the smaller of two 64-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="4aed7-493">Der kleinere der Parameter <paramref name="val1" /> und <paramref name="val2" />.</span><span class="sxs-lookup"><span data-stu-id="4aed7-493">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4aed7-494">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Math.Min%2A> Methode zum Zurückgeben und die kleinere von zwei Variablen anzeigen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-494">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PI">
      <MemberSignature Language="C#" Value="public const double PI = 3.14159265358979;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 PI = (3.14159265358979)" />
      <MemberSignature Language="DocId" Value="F:System.Math.PI" />
      <MemberSignature Language="VB.NET" Value="Public Const PI As Double  = 3.14159265358979" />
      <MemberSignature Language="C++ CLI" Value="public: double PI = 3.14159265358979;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>3.14159265358979</MemberValue>
      <Docs>
        <summary><span data-ttu-id="4aed7-495">Stellt das Verhältnis eines Kreisumfangs zum Kreisdurchmesser durch die Konstante π dar.</span><span class="sxs-lookup"><span data-stu-id="4aed7-495">Represents the ratio of the circumference of a circle to its diameter, specified by the constant, π.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aed7-496">Der Wert dieses Felds ist 3,14159265358979323846.</span><span class="sxs-lookup"><span data-stu-id="4aed7-496">The value of this field is 3.14159265358979323846.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4aed7-497">Im folgenden Beispiel wird <xref:System.Math.PI> , die in die Berechnung der inneren Winkel von einer bestimmten Trapez helfen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-497">The following example uses <xref:System.Math.PI> to assist in the computation of the inner angles of a given trapezoid.</span></span>  
  
 [!code-cpp[MathSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/MathSample/CPP/mathsample.cpp#1)]
 [!code-csharp[MathSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/MathSample/CS/mathsample.cs#1)]
 [!code-vb[MathSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MathSample/VB/mathsample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pow">
      <MemberSignature Language="C#" Value="public static double Pow (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Pow(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Pow(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Pow (x As Double, y As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Pow(double x, double y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="4aed7-498">Eine Gleitkommazahl mit doppelter Genauigkeit, die potenziert werden soll.</span><span class="sxs-lookup"><span data-stu-id="4aed7-498">A double-precision floating-point number to be raised to a power.</span></span></param>
        <param name="y"><span data-ttu-id="4aed7-499">Eine Gleitkommazahl mit doppelter Genauigkeit, die einen Exponenten darstellt.</span><span class="sxs-lookup"><span data-stu-id="4aed7-499">A double-precision floating-point number that specifies a power.</span></span></param>
        <summary><span data-ttu-id="4aed7-500">Potenziert eine angegebene Zahl mit dem angegebenen Exponenten.</span><span class="sxs-lookup"><span data-stu-id="4aed7-500">Returns a specified number raised to the specified power.</span></span></summary>
        <returns><span data-ttu-id="4aed7-501">Die Zahl <paramref name="x" /> hoch <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="4aed7-501">The number <paramref name="x" /> raised to the power <paramref name="y" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aed7-502">Die folgende Tabelle zeigt den Rückgabewert, wenn für verschiedene Werte oder Wertebereiche angegeben werden die `x` und `y` Parameter.</span><span class="sxs-lookup"><span data-stu-id="4aed7-502">The following table indicates the return value when various values or ranges of values are specified for the `x` and `y` parameters.</span></span> <span data-ttu-id="4aed7-503">Weitere Informationen finden Sie unter <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>, <xref:System.Double.NegativeInfinity?displayProperty=nameWithType> und <xref:System.Double.NaN?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4aed7-503">For more information, see <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>, <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, and <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span>  
  
|<span data-ttu-id="4aed7-504">Parameter</span><span class="sxs-lookup"><span data-stu-id="4aed7-504">Parameters</span></span>|<span data-ttu-id="4aed7-505">Rückgabewert</span><span class="sxs-lookup"><span data-stu-id="4aed7-505">Return value</span></span>|  
|----------------|------------------|  
|<span data-ttu-id="4aed7-506">`x` oder `y`  =  `NaN`.</span><span class="sxs-lookup"><span data-stu-id="4aed7-506">`x` or `y` = `NaN`.</span></span>|`NaN`|  
|<span data-ttu-id="4aed7-507">`x` = Jeder Wert außer `NaN`; `y` = 0.</span><span class="sxs-lookup"><span data-stu-id="4aed7-507">`x` = Any value except `NaN`; `y` = 0.</span></span>|<span data-ttu-id="4aed7-508">1</span><span class="sxs-lookup"><span data-stu-id="4aed7-508">1</span></span>|  
|<span data-ttu-id="4aed7-509">`x` = `NegativeInfinity`; `y` < 0.</span><span class="sxs-lookup"><span data-stu-id="4aed7-509">`x` = `NegativeInfinity`; `y` < 0.</span></span>|<span data-ttu-id="4aed7-510">0</span><span class="sxs-lookup"><span data-stu-id="4aed7-510">0</span></span>|  
|<span data-ttu-id="4aed7-511">`x` = `NegativeInfinity`; `y` ist eine positive ungerade ganze Zahl.</span><span class="sxs-lookup"><span data-stu-id="4aed7-511">`x` = `NegativeInfinity`; `y` is a positive odd integer.</span></span>|`NegativeInfinity`|  
|<span data-ttu-id="4aed7-512">`x` = `NegativeInfinity`; `y` ist positiv, aber keine ungerade ganze Zahl.</span><span class="sxs-lookup"><span data-stu-id="4aed7-512">`x` = `NegativeInfinity`; `y` is positive but not an odd integer.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="4aed7-513">`x` < 0, aber nicht `NegativeInfinity`; `y` ist keine Ganzzahl, `NegativeInfinity`, oder `PositiveInfinity`.</span><span class="sxs-lookup"><span data-stu-id="4aed7-513">`x` < 0 but not `NegativeInfinity`; `y` is not an integer, `NegativeInfinity`, or `PositiveInfinity`.</span></span>|`NaN`|  
|<span data-ttu-id="4aed7-514">`x` =-1; `y`  =  `NegativeInfinity` oder `PositiveInfinity`.</span><span class="sxs-lookup"><span data-stu-id="4aed7-514">`x` = -1; `y` = `NegativeInfinity` or `PositiveInfinity`.</span></span>|`NaN`|  
|<span data-ttu-id="4aed7-515">-1 < `x` < 1; `y` = `NegativeInfinity`.</span><span class="sxs-lookup"><span data-stu-id="4aed7-515">-1 < `x` < 1; `y` = `NegativeInfinity`.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="4aed7-516">-1 < `x` < 1; `y` = `PositiveInfinity`.</span><span class="sxs-lookup"><span data-stu-id="4aed7-516">-1 < `x` < 1; `y` = `PositiveInfinity`.</span></span>|<span data-ttu-id="4aed7-517">0</span><span class="sxs-lookup"><span data-stu-id="4aed7-517">0</span></span>|  
|<span data-ttu-id="4aed7-518">`x` <-1 oder `x` > 1. `y` = `NegativeInfinity`.</span><span class="sxs-lookup"><span data-stu-id="4aed7-518">`x` < -1 or `x` > 1; `y` = `NegativeInfinity`.</span></span>|<span data-ttu-id="4aed7-519">0</span><span class="sxs-lookup"><span data-stu-id="4aed7-519">0</span></span>|  
|<span data-ttu-id="4aed7-520">`x` <-1 oder `x` > 1. `y` = `PositiveInfinity`.</span><span class="sxs-lookup"><span data-stu-id="4aed7-520">`x` < -1 or `x` > 1; `y` = `PositiveInfinity`.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="4aed7-521">`x` = 0; `y` < 0.</span><span class="sxs-lookup"><span data-stu-id="4aed7-521">`x` = 0; `y` < 0.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="4aed7-522">`x` = 0; `y` > 0.</span><span class="sxs-lookup"><span data-stu-id="4aed7-522">`x` = 0; `y` > 0.</span></span>|<span data-ttu-id="4aed7-523">0</span><span class="sxs-lookup"><span data-stu-id="4aed7-523">0</span></span>|  
|<span data-ttu-id="4aed7-524">`x` = 1; `y` beliebiger Wert außer `NaN`.</span><span class="sxs-lookup"><span data-stu-id="4aed7-524">`x` = 1; `y` is any value except `NaN`.</span></span>|<span data-ttu-id="4aed7-525">1</span><span class="sxs-lookup"><span data-stu-id="4aed7-525">1</span></span>|  
|<span data-ttu-id="4aed7-526">`x` = `PositiveInfinity`; `y` < 0.</span><span class="sxs-lookup"><span data-stu-id="4aed7-526">`x` = `PositiveInfinity`; `y` < 0.</span></span>|<span data-ttu-id="4aed7-527">0</span><span class="sxs-lookup"><span data-stu-id="4aed7-527">0</span></span>|  
|<span data-ttu-id="4aed7-528">`x` = `PositiveInfinity`; `y` > 0.</span><span class="sxs-lookup"><span data-stu-id="4aed7-528">`x` = `PositiveInfinity`; `y` > 0.</span></span>|`PositiveInfinity`|  
  
   
  
## Examples  
 <span data-ttu-id="4aed7-529">Im folgenden Beispiel wird die <xref:System.Math.Pow%2A> Methode, um den Wert zu berechnen, die aus der durch das Auslösen 2 mit einem Exponenten zwischen 0 und 32.</span><span class="sxs-lookup"><span data-stu-id="4aed7-529">The following example uses the <xref:System.Math.Pow%2A> method to calculate the value that results from raising 2 to a power ranging from 0 to 32.</span></span>  
  
 [!code-csharp[System.Math.Pow#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.pow/cs/pow1.cs#1)]
 [!code-vb[System.Math.Pow#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.pow/vb/pow1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Math.Sqrt(System.Double)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Round">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4aed7-530">Rundet einen Wert auf die nächste Ganzzahl oder auf die angegebene Anzahl von Bruchstellen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-530">Rounds a value to the nearest integer or to the specified number of fractional digits.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aed7-531">In diesem Abschnitt</span><span class="sxs-lookup"><span data-stu-id="4aed7-531">In this section:</span></span>  
  
 <span data-ttu-id="4aed7-532">[Überladene Methodensyntax](#Syntax) </span><span class="sxs-lookup"><span data-stu-id="4aed7-532">[Overloaded method syntax](#Syntax) </span></span>  
 <span data-ttu-id="4aed7-533">[Parameter](#Params) </span><span class="sxs-lookup"><span data-stu-id="4aed7-533">[Parameters](#Params) </span></span>  
 <span data-ttu-id="4aed7-534">[Rückgabewert](#Returns) </span><span class="sxs-lookup"><span data-stu-id="4aed7-534">[Return value](#Returns) </span></span>  
 <span data-ttu-id="4aed7-535">[Ausnahmen](#Exceptions) </span><span class="sxs-lookup"><span data-stu-id="4aed7-535">[Exceptions](#Exceptions) </span></span>  
 <span data-ttu-id="4aed7-536">[Welche Methode werden aufgerufen?](#Tasks) </span><span class="sxs-lookup"><span data-stu-id="4aed7-536">[Which method do I call?](#Tasks) </span></span>  
 <span data-ttu-id="4aed7-537">[Werte für Mittelpunkt und Rundung Konventionen](#Midpoint) </span><span class="sxs-lookup"><span data-stu-id="4aed7-537">[Midpoint values and rounding conventions](#Midpoint) </span></span>  
 <span data-ttu-id="4aed7-538">[Rundung und Genauigkeit](#Precision) </span><span class="sxs-lookup"><span data-stu-id="4aed7-538">[Rounding and precision](#Precision) </span></span>  
 <span data-ttu-id="4aed7-539">[Rundung und mit einfacher Genauigkeit Gleitkommazahlen-Punktwerte](#Single) </span><span class="sxs-lookup"><span data-stu-id="4aed7-539">[Rounding and single-precision floating-point values](#Single) </span></span>  
 <span data-ttu-id="4aed7-540">Beispiele:</span><span class="sxs-lookup"><span data-stu-id="4aed7-540">Examples:</span></span>   
 [<span data-ttu-id="4aed7-541">Math.Round(Decimal)</span><span class="sxs-lookup"><span data-stu-id="4aed7-541">Math.Round(Decimal)</span></span>](#Round1_Example)  
 [<span data-ttu-id="4aed7-542">Math.Round(Double)</span><span class="sxs-lookup"><span data-stu-id="4aed7-542">Math.Round(Double)</span></span>](#Round2_Example)  
 [<span data-ttu-id="4aed7-543">Math.Round(Decimal, Int32)</span><span class="sxs-lookup"><span data-stu-id="4aed7-543">Math.Round(Decimal, Int32)</span></span>](#Round3_Example)  
 [<span data-ttu-id="4aed7-544">Math.Round (Decimal, MidpointRounding)</span><span class="sxs-lookup"><span data-stu-id="4aed7-544">Math.Round(Decimal, MidpointRounding)</span></span>](#Round4_Example)  
 [<span data-ttu-id="4aed7-545">Math.Round(Double, Int32)</span><span class="sxs-lookup"><span data-stu-id="4aed7-545">Math.Round(Double, Int32)</span></span>](#Round5_Example)  
 [<span data-ttu-id="4aed7-546">Math.Round(Double, MidpointRounding)</span><span class="sxs-lookup"><span data-stu-id="4aed7-546">Math.Round(Double, MidpointRounding)</span></span>](#Round6_Example)  
 [<span data-ttu-id="4aed7-547">Math.Round (Int32, Decimal MidpointRounding)</span><span class="sxs-lookup"><span data-stu-id="4aed7-547">Math.Round(Decimal, Int32, MidpointRounding)</span></span>](#Round7_Example)  
 [<span data-ttu-id="4aed7-548">Math.Round (Double, Int32, MidpointRounding)</span><span class="sxs-lookup"><span data-stu-id="4aed7-548">Math.Round(Double, Int32, MidpointRounding)</span></span>](#Round8_Example)  
[<span data-ttu-id="4aed7-549">Versionsinformationen</span><span class="sxs-lookup"><span data-stu-id="4aed7-549">Version information</span></span>](#Round_Versions)  
  
<a name="Syntax"></a>   
## <a name="overloaded-method-syntax"></a><span data-ttu-id="4aed7-550">Überladene Methodensyntax</span><span class="sxs-lookup"><span data-stu-id="4aed7-550">Overloaded method syntax</span></span>  
 <span data-ttu-id="4aed7-551">Weitere Anleitungen zum Auswählen einer Überladung finden Sie unter [welche Methode aufrufen?](#Tasks)</span><span class="sxs-lookup"><span data-stu-id="4aed7-551">For additional guidance on choosing an overload, see [Which method do I call?](#Tasks)</span></span>  
  
 <span data-ttu-id="4aed7-552">`Decimal Math.Round(Decimal` `d` `)`</span><span class="sxs-lookup"><span data-stu-id="4aed7-552">`Decimal Math.Round(Decimal` `d` `)`</span></span>  
 <span data-ttu-id="4aed7-553">Rundet einen Dezimalwert auf die nächste ganze Zahl und Mittelpunkt-Werte auf die nächste gerade Zahl gerundet ([Beispiel](#Round1_Example)).</span><span class="sxs-lookup"><span data-stu-id="4aed7-553">Rounds a decimal value to the nearest integer, and rounds midpoint values to the nearest even number ([example](#Round1_Example)).</span></span>  
  
 <span data-ttu-id="4aed7-554">`Double Math.Round(Double` `a` `)`</span><span class="sxs-lookup"><span data-stu-id="4aed7-554">`Double Math.Round(Double` `a` `)`</span></span>  
 <span data-ttu-id="4aed7-555">Rundet einen Gleitkommawert mit doppelter Genauigkeit-Wert auf die nächste Ganzzahl und Mittelpunkt-Werte auf die nächste gerade Zahl gerundet ([Beispiel](#Round2_Example)).</span><span class="sxs-lookup"><span data-stu-id="4aed7-555">Rounds a double-precision floating-point value to the nearest integer, and rounds midpoint values to the nearest even number ([example](#Round2_Example)).</span></span>  
  
 <span data-ttu-id="4aed7-556">`Decimal Math.Round(Decimal` `d` `, Int32`  `decimals` `)`</span><span class="sxs-lookup"><span data-stu-id="4aed7-556">`Decimal Math.Round(Decimal` `d` `, Int32`  `decimals` `)`</span></span>  
 <span data-ttu-id="4aed7-557">Rundet einen Dezimalwert auf eine angegebene Anzahl von Dezimalstellen und Mittelpunkt-Werte auf die nächste gerade Zahl gerundet ([Beispiel](#Round3_Example)).</span><span class="sxs-lookup"><span data-stu-id="4aed7-557">Rounds a decimal value to a specified number of fractional digits, and rounds midpoint values to the nearest even number ([example](#Round3_Example)).</span></span>  
  
 <span data-ttu-id="4aed7-558">`Double Math.Round(Double` `value` `, Int32`  `digits` `)`</span><span class="sxs-lookup"><span data-stu-id="4aed7-558">`Double Math.Round(Double` `value` `, Int32`  `digits` `)`</span></span>  
 <span data-ttu-id="4aed7-559">Rundet einen Gleitkommawert mit doppelter Genauigkeit den Wert auf eine angegebene Anzahl von Dezimalstellen und Mittelpunkt-Werte auf die nächste gerade Zahl gerundet ([Beispiel](#Round4_Example)).</span><span class="sxs-lookup"><span data-stu-id="4aed7-559">Rounds a double-precision floating-point value to a specified number of fractional digits, and rounds midpoint values to the nearest even number ([example](#Round4_Example)).</span></span>  
  
 <span data-ttu-id="4aed7-560">`Decimal Math.Round(Decimal` `d` `, MidpointRounding`  `mode` `)`</span><span class="sxs-lookup"><span data-stu-id="4aed7-560">`Decimal Math.Round(Decimal` `d` `, MidpointRounding`  `mode` `)`</span></span>  
 <span data-ttu-id="4aed7-561">Rundet einen Dezimalwert auf die nächste ganze Zahl, und verwendet die angegebene Rundung Konvention für Werte für Mittelpunkt ([Beispiel](#Round5_Example)).</span><span class="sxs-lookup"><span data-stu-id="4aed7-561">Rounds a decimal value to the nearest integer, and uses the specified rounding convention for midpoint values ([example](#Round5_Example)).</span></span>  
  
 <span data-ttu-id="4aed7-562">`Double Math.Round(Double` `value` `, MidpointRounding`  `mode` `)`</span><span class="sxs-lookup"><span data-stu-id="4aed7-562">`Double Math.Round(Double` `value` `, MidpointRounding`  `mode` `)`</span></span>  
 <span data-ttu-id="4aed7-563">Rundet einen Gleitkommawert mit doppelter Genauigkeit-Wert auf die nächste ganze Zahl, und verwendet die angegebene Rundung Konvention für Werte für Mittelpunkt ([Beispiel](#Round6_Example)).</span><span class="sxs-lookup"><span data-stu-id="4aed7-563">Rounds a double-precision floating-point value to the nearest integer, and uses the specified rounding convention for midpoint values ([example](#Round6_Example)).</span></span>  
  
 <span data-ttu-id="4aed7-564">`Decimal Math.Round(Decimal` `d` `, Int32`  `decimals` `, MidpointRounding`  `mode` `)`</span><span class="sxs-lookup"><span data-stu-id="4aed7-564">`Decimal Math.Round(Decimal` `d` `, Int32`  `decimals` `, MidpointRounding`  `mode` `)`</span></span>  
 <span data-ttu-id="4aed7-565">Rundet einen Dezimalwert auf eine angegebene Anzahl von Dezimalstellen und verwendet die angegebene Rundung Konvention für Werte für Mittelpunkt ([Beispiel](#Round7_Example)).</span><span class="sxs-lookup"><span data-stu-id="4aed7-565">Rounds a decimal value to a specified number of fractional digits, and uses the specified rounding convention for midpoint values ([example](#Round7_Example)).</span></span>  
  
 <span data-ttu-id="4aed7-566">`Double Math.Round(Double` `value` `, Int32`  `digits` `, MidpointRounding`  `mode` `)`</span><span class="sxs-lookup"><span data-stu-id="4aed7-566">`Double Math.Round(Double` `value` `, Int32`  `digits` `, MidpointRounding`  `mode` `)`</span></span>  
 <span data-ttu-id="4aed7-567">Rundet einen Gleitkommawert mit doppelter Genauigkeit den Wert auf eine angegebene Anzahl von Dezimalstellen und verwendet die angegebene Rundung Konvention für Werte für Mittelpunkt ([Beispiel](#Round8_Example)).</span><span class="sxs-lookup"><span data-stu-id="4aed7-567">Rounds a double-precision floating-point value to a specified number of fractional digits, and uses the specified rounding convention for midpoint values ([example](#Round8_Example)).</span></span>  
  
<a name="Params"></a>   
## <a name="parameters"></a><span data-ttu-id="4aed7-568">Parameter</span><span class="sxs-lookup"><span data-stu-id="4aed7-568">Parameters</span></span>  
 <span data-ttu-id="4aed7-569">Dies ist eine vollständige Liste der Parameter für die <xref:System.Math.Round%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="4aed7-569">This is a complete list of parameters for the <xref:System.Math.Round%2A> method.</span></span> <span data-ttu-id="4aed7-570">Die Parameter, die durch jede Überladung verwendet wird finden Sie in der obigen Syntax für Überladung.</span><span class="sxs-lookup"><span data-stu-id="4aed7-570">For the parameters used by each overload, see the overload syntax above.</span></span>  
  
|<span data-ttu-id="4aed7-571">Parameter</span><span class="sxs-lookup"><span data-stu-id="4aed7-571">Parameter</span></span>|<span data-ttu-id="4aed7-572">Typ</span><span class="sxs-lookup"><span data-stu-id="4aed7-572">Type</span></span>|<span data-ttu-id="4aed7-573">Beschreibung </span><span class="sxs-lookup"><span data-stu-id="4aed7-573">Description</span></span>|  
|---------------|----------|-----------------|  
|`d`|<xref:System.Decimal>|<span data-ttu-id="4aed7-574">Eine Zahl gerundet werden soll.</span><span class="sxs-lookup"><span data-stu-id="4aed7-574">A number to be rounded.</span></span>|  
|`a`<br /><br /> <span data-ttu-id="4aed7-575">- oder - </span><span class="sxs-lookup"><span data-stu-id="4aed7-575">-or-</span></span><br /><br /> `value`|<xref:System.Double>|<span data-ttu-id="4aed7-576">Eine zu rundende Gleitkommazahl mit doppelter Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="4aed7-576">A double-precision floating-point number to be rounded.</span></span>|  
|`decimals`<br /><br /> <span data-ttu-id="4aed7-577">- oder - </span><span class="sxs-lookup"><span data-stu-id="4aed7-577">-or-</span></span><br /><br /> `digits`|<xref:System.Int32>|<span data-ttu-id="4aed7-578">Die Anzahl von Dezimalstellen im Rückgabewert.</span><span class="sxs-lookup"><span data-stu-id="4aed7-578">The number of fractional digits in the return value.</span></span> <span data-ttu-id="4aed7-579">Für <xref:System.Decimal> , es kann Werte zwischen 0 und 28.</span><span class="sxs-lookup"><span data-stu-id="4aed7-579">For <xref:System.Decimal> values, it can range from 0 to 28.</span></span> <span data-ttu-id="4aed7-580">Für <xref:System.Double> , es kann Werte von 0 bis 15.</span><span class="sxs-lookup"><span data-stu-id="4aed7-580">For <xref:System.Double> values, it can range from 0 to 15.</span></span> <span data-ttu-id="4aed7-581">Beachten Sie, dass 15 die maximale Anzahl von ganzheitlichen Zahlen sowie Nachkommastellen Ziffern von unterstützt die <xref:System.Double> Typ.</span><span class="sxs-lookup"><span data-stu-id="4aed7-581">Note that 15 is the maximum number of integral and fractional digits supported by the <xref:System.Double> type.</span></span><br /><br /> <span data-ttu-id="4aed7-582">Standardwert: 0, d. h. in eine ganze Zahl gerundet.</span><span class="sxs-lookup"><span data-stu-id="4aed7-582">Default value: 0, which rounds to an integer</span></span>|  
|`mode`|<xref:System.MidpointRounding>|<span data-ttu-id="4aed7-583">Ein Flag, der angibt, die Aufrufkonvention an für die Rundung Mittelpunkt Werte verwendet.</span><span class="sxs-lookup"><span data-stu-id="4aed7-583">A flag that specifies the convention to use for rounding midpoint values.</span></span> <span data-ttu-id="4aed7-584">Finden Sie unter [Werte für Mittelpunkt und Rundung Konventionen](#Midpoint).</span><span class="sxs-lookup"><span data-stu-id="4aed7-584">See [Midpoint values and rounding conventions](#Midpoint).</span></span><br /><br /> <span data-ttu-id="4aed7-585">Standardwert: <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="4aed7-585">Default value: <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType></span></span>|  
  
<a name="Returns"></a>   
## <a name="return-value"></a><span data-ttu-id="4aed7-586">Rückgabewert</span><span class="sxs-lookup"><span data-stu-id="4aed7-586">Return value</span></span>  
 <span data-ttu-id="4aed7-587">Typ: <xref:System.Decimal> oder <xref:System.Double>, je nach dem Typ des Werts gerundet werden soll.</span><span class="sxs-lookup"><span data-stu-id="4aed7-587">Type: <xref:System.Decimal> or <xref:System.Double>, depending on the type of the value to be rounded.</span></span>   
<span data-ttu-id="4aed7-588">Ein numerischer Wert des gleichen Typs als `d`, `a`, oder `value`, aber gerundet, um eine ganze Zahl oder auf die angegebene Anzahl von Dezimalstellen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-588">A numeric value of the same type as `d`, `a`, or `value`, but rounded either to an integer or to the specified number of decimal digits.</span></span> <span data-ttu-id="4aed7-589">Finden Sie unter [Werte für Mittelpunkt und Rundung Konventionen](#Midpoint) Informationen zu runden von Zahlen mit Werten Mittelpunkt.</span><span class="sxs-lookup"><span data-stu-id="4aed7-589">See [Midpoint values and rounding conventions](#Midpoint) for information about rounding numbers with midpoint values.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="4aed7-590">Der runden Algorithmus führt einen Gleichheitstest, Werte für Mittelpunkt zu runden.</span><span class="sxs-lookup"><span data-stu-id="4aed7-590">When rounding midpoint values, the rounding algorithm performs an equality test.</span></span> <span data-ttu-id="4aed7-591">Aufgrund von Problemen mit der binären Darstellung und die Genauigkeit in die Gleitkommaformat kann von der Methode zurückgegebene Wert nicht erwartet werden.</span><span class="sxs-lookup"><span data-stu-id="4aed7-591">Because of problems of binary representation and precision in the floating-point format, the value returned by the method can be unexpected.</span></span> <span data-ttu-id="4aed7-592">Weitere Informationen finden Sie unter [Rundung und Genauigkeit](#Precision).</span><span class="sxs-lookup"><span data-stu-id="4aed7-592">For more information, see [Rounding and precision](#Precision).</span></span>  
  
 <span data-ttu-id="4aed7-593">Wenn eine Überladung mit einem <xref:System.Double> Parameter aufgerufen wird, und <xref:System.Double.NaN?displayProperty=nameWithType>, gibt die Methode <xref:System.Double.NaN?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4aed7-593">If an overload with a <xref:System.Double> parameter is called with <xref:System.Double.NaN?displayProperty=nameWithType>, the method returns <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4aed7-594">Wenn beim Aufruf <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> oder <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, der Methodenrückgabe <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> oder <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="4aed7-594">If it is called with <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, the method returns <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, respectively.</span></span>  
  
<a name="Exceptions"></a>   
## <a name="exceptions"></a><span data-ttu-id="4aed7-595">Ausnahmen</span><span class="sxs-lookup"><span data-stu-id="4aed7-595">Exceptions</span></span>  
  
|<span data-ttu-id="4aed7-596">Ausnahme</span><span class="sxs-lookup"><span data-stu-id="4aed7-596">Exception</span></span>|<span data-ttu-id="4aed7-597">Bedingung</span><span class="sxs-lookup"><span data-stu-id="4aed7-597">Condition</span></span>|<span data-ttu-id="4aed7-598">Ausgelöst von</span><span class="sxs-lookup"><span data-stu-id="4aed7-598">Thrown by</span></span>|  
|---------------|---------------|---------------|  
|<xref:System.OverflowException>|<span data-ttu-id="4aed7-599">Das Ergebnis liegt außerhalb des Bereichs von der <xref:System.Decimal> Typ.</span><span class="sxs-lookup"><span data-stu-id="4aed7-599">The result is outside the range of the <xref:System.Decimal> type.</span></span>|<xref:System.Math.Round%28System.Decimal%29><br /><br /> <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%29><br /><br /> <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29><br /><br /> <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>|  
|<xref:System.ArgumentOutOfRangeException>|<span data-ttu-id="4aed7-600">`decimals` ist kleiner als 0 (null) oder größer als 28.</span><span class="sxs-lookup"><span data-stu-id="4aed7-600">`decimals` is less than 0 or greater than 28.</span></span><br /><br /> <span data-ttu-id="4aed7-601">- oder - </span><span class="sxs-lookup"><span data-stu-id="4aed7-601">-or-</span></span><br /><br /> <span data-ttu-id="4aed7-602">`digits` ist kleiner als 0 (null) oder größer als 15.</span><span class="sxs-lookup"><span data-stu-id="4aed7-602">`digits` is less than 0 or greater than 15.</span></span>|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%29><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.Int32%29><br /><br /> <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29>|  
|<xref:System.ArgumentException>|<span data-ttu-id="4aed7-603">`mode` ist kein gültiger <xref:System.MidpointRounding>-Wert.</span><span class="sxs-lookup"><span data-stu-id="4aed7-603">`mode` is not a valid value of <xref:System.MidpointRounding>.</span></span>|<xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29><br /><br /> <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29>|  
  
<a name="Tasks"></a>   
## <a name="which-method-do-i-call"></a><span data-ttu-id="4aed7-604">Welche Methode werden aufgerufen?</span><span class="sxs-lookup"><span data-stu-id="4aed7-604">Which method do I call?</span></span>  
  
|<span data-ttu-id="4aed7-605">Beschreibung</span><span class="sxs-lookup"><span data-stu-id="4aed7-605">To</span></span>|<span data-ttu-id="4aed7-606">Call</span><span class="sxs-lookup"><span data-stu-id="4aed7-606">Call</span></span>|  
|--------|----------|  
|<span data-ttu-id="4aed7-607">Eine ganze Zahl gerundet wird, mit der runden auf die nächste Konvention.</span><span class="sxs-lookup"><span data-stu-id="4aed7-607">Round a number to an integer by using the rounding to nearest convention.</span></span>|<xref:System.Math.Round%28System.Decimal%29><br /><br /> <span data-ttu-id="4aed7-608">- oder - </span><span class="sxs-lookup"><span data-stu-id="4aed7-608">-or-</span></span><br /><br /> <xref:System.Math.Round%28System.Double%29>|  
|<span data-ttu-id="4aed7-609">Rundet eine Zahl auf eine ganze Zahl mit einem angegebenen Runden von Konvention.</span><span class="sxs-lookup"><span data-stu-id="4aed7-609">Round a number to an integer by using a specified rounding convention.</span></span>|<xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29><br /><br /> <span data-ttu-id="4aed7-610">- oder - </span><span class="sxs-lookup"><span data-stu-id="4aed7-610">-or-</span></span><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29>|  
|<span data-ttu-id="4aed7-611">Eine Zahl und eine angegebene Anzahl von Dezimalstellen gerundet wird, mit der runden auf die nächste Konvention.</span><span class="sxs-lookup"><span data-stu-id="4aed7-611">Round a number to a specified number of fractional digits by using the rounding to nearest convention.</span></span>|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%29><br /><br /> <span data-ttu-id="4aed7-612">- oder - </span><span class="sxs-lookup"><span data-stu-id="4aed7-612">-or-</span></span><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.Int32%29>|  
|<span data-ttu-id="4aed7-613">Rundet eine Zahl auf eine angegebene Anzahl von Dezimalstellen mithilfe eines angegebenen Runden von Konvention.</span><span class="sxs-lookup"><span data-stu-id="4aed7-613">Round a number to a specified number of fractional digits by using a specified rounding convention.</span></span>|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29><br /><br /> <span data-ttu-id="4aed7-614">- oder - </span><span class="sxs-lookup"><span data-stu-id="4aed7-614">-or-</span></span><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29>|  
|<span data-ttu-id="4aed7-615">Rundet einen <xref:System.Single> Wert auf eine angegebene Anzahl von Dezimalstellen mithilfe eines angegebenen Konvention Rundung und Minimieren des Verlust an Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="4aed7-615">Round a <xref:System.Single> value to a specified number of fractional digits by using a specified rounding convention and minimizing the loss of precision.</span></span>|<span data-ttu-id="4aed7-616">Konvertieren der <xref:System.Single> zu einem <xref:System.Decimal> , und rufen Sie <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>.</span><span class="sxs-lookup"><span data-stu-id="4aed7-616">Convert the <xref:System.Single> to a <xref:System.Decimal> and call <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>.</span></span>|  
|<span data-ttu-id="4aed7-617">Rundet eine Zahl und eine angegebene Anzahl von Dezimalstellen und minimiert gleichzeitig die Problemen mit der Genauigkeit im Mittelpunkt Werte gerundet.</span><span class="sxs-lookup"><span data-stu-id="4aed7-617">Round a number to a specified number of fractional digits while minimizing problems of precision in rounding midpoint values.</span></span>|<span data-ttu-id="4aed7-618">Rufen Sie eine Rundungsmethode, die einen "größer als oder ungefähr gleich"-Vergleich implementiert.</span><span class="sxs-lookup"><span data-stu-id="4aed7-618">Call a rounding method that implements a "greater than or approximately equal to" comparison.</span></span> <span data-ttu-id="4aed7-619">Finden Sie unter [Rundung und Genauigkeit](#Precision).</span><span class="sxs-lookup"><span data-stu-id="4aed7-619">See [Rounding and precision](#Precision).</span></span>|  
|<span data-ttu-id="4aed7-620">Round ein Dezimalstellenwert in eine ganze Zahl ist, die größer als der Dezimalstellenwert.</span><span class="sxs-lookup"><span data-stu-id="4aed7-620">Round a fractional value to an integer that is greater than the fractional value.</span></span> <span data-ttu-id="4aed7-621">Runden Sie z. B. 3.1 und 4 ein.</span><span class="sxs-lookup"><span data-stu-id="4aed7-621">For example, round 3.1 to 4.</span></span>|<xref:System.Math.Ceiling%2A>|  
|<span data-ttu-id="4aed7-622">Round ein Dezimalstellenwert in eine ganze Zahl ist, die kleiner als der Dezimalstellenwert.</span><span class="sxs-lookup"><span data-stu-id="4aed7-622">Round a fractional value to an integer that is less than the fractional value.</span></span> <span data-ttu-id="4aed7-623">Runden Sie z. B. 3.9 bis 3.</span><span class="sxs-lookup"><span data-stu-id="4aed7-623">For example, round 3.9 to 3.</span></span>|<xref:System.Math.Floor%2A>|  
  
<a name="Midpoint"></a>   
## <a name="midpoint-values-and-rounding-conventions"></a><span data-ttu-id="4aed7-624">Werte für Mittelpunkt und Rundung Konventionen</span><span class="sxs-lookup"><span data-stu-id="4aed7-624">Midpoint values and rounding conventions</span></span>  
 <span data-ttu-id="4aed7-625">Rundung umfasst einen numerischen Wert mit einer angegebenen Genauigkeit in den nächsten Wert mit geringerer Genauigkeit zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="4aed7-625">Rounding involves converting a numeric value with a specified precision to the nearest value with less precision.</span></span> <span data-ttu-id="4aed7-626">Können z. B. die <xref:System.Math.Round%28System.Double%29> Methode 3.4 bis 3.0 Wert gerundet wird, und die <xref:System.Math.Round%28System.Double%2CSystem.Int32%29> Methode 3.579 zu 3,58 Wert gerundet wird.</span><span class="sxs-lookup"><span data-stu-id="4aed7-626">For example, you can use the <xref:System.Math.Round%28System.Double%29> method to round a value of 3.4 to 3.0, and the <xref:System.Math.Round%28System.Double%2CSystem.Int32%29> method to round a value of 3.579 to 3.58.</span></span>  
  
 <span data-ttu-id="4aed7-627">In der Mitte liegenden Werten ist der Wert nach der am wenigsten signifikante Ziffer in das Ergebnis genau halbem Weg zwischen zwei Zahlen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-627">In a midpoint value, the value after the least significant digit in the result is precisely half way between two numbers.</span></span> <span data-ttu-id="4aed7-628">Beispielsweise ist 3.47500 Mitte liegenden Werten wird jedoch werden auf zwei Dezimalstellen gerundet und 7.500 ist Mitte liegenden Werten aus, wenn es auf eine ganze Zahl gerundet.</span><span class="sxs-lookup"><span data-stu-id="4aed7-628">For example, 3.47500 is a midpoint value if it is to be rounded two decimal places, and 7.500 is a midpoint value if it is to be rounded to an integer.</span></span> <span data-ttu-id="4aed7-629">In diesen Fällen kann nicht einfach der nächste Wert ohne eine Rundung Konvention identifiziert werden.</span><span class="sxs-lookup"><span data-stu-id="4aed7-629">In these cases, the nearest value can't be easily identified without a rounding convention.</span></span>  
  
 <span data-ttu-id="4aed7-630">Die <xref:System.Math.Round%2A> Methode zwei Rundung Konventionen für die Behandlung Mittelpunkt Werte unterstützt:</span><span class="sxs-lookup"><span data-stu-id="4aed7-630">The <xref:System.Math.Round%2A> method supports two rounding conventions for handling midpoint values:</span></span>  
  
 <span data-ttu-id="4aed7-631">**Aufgerundet**</span><span class="sxs-lookup"><span data-stu-id="4aed7-631">**Rounding away from zero**</span></span>  
 <span data-ttu-id="4aed7-632">Mittelpunkt Werte werden auf die nächste Zahl von NULL Weg gerundet.</span><span class="sxs-lookup"><span data-stu-id="4aed7-632">Midpoint values are rounded to the next number away from zero.</span></span> <span data-ttu-id="4aed7-633">3,75 abgerundet, 3.8, 3,85 runden, 3.9,-3.75 in-3.8, gerundet und-3.85 auf-3.9 gerundet.</span><span class="sxs-lookup"><span data-stu-id="4aed7-633">For example, 3.75 rounds to 3.8, 3.85 rounds to 3.9, -3.75 rounds to -3.8, and -3.85 rounds to -3.9.</span></span> <span data-ttu-id="4aed7-634">Diese Form der Rundung wird dargestellt, indem die <xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType> Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4aed7-634">This form of rounding is represented by the <xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType> enumeration member.</span></span>  
  
 <span data-ttu-id="4aed7-635">Aufgerundet ist die am häufigsten bekannten Form der Rundung.</span><span class="sxs-lookup"><span data-stu-id="4aed7-635">Rounding away from zero is the most widely known form of rounding.</span></span>  
  
 <span data-ttu-id="4aed7-636">**Auf den nächsten Wert runden oder unverzerrte Rundung**</span><span class="sxs-lookup"><span data-stu-id="4aed7-636">**Rounding to nearest, or banker's rounding**</span></span>  
 <span data-ttu-id="4aed7-637">Mittelpunkt Werte werden auf die nächste gerade Zahl gerundet.</span><span class="sxs-lookup"><span data-stu-id="4aed7-637">Midpoint values are rounded to the nearest even number.</span></span> <span data-ttu-id="4aed7-638">Beispielsweise 3,75 und 3,85 gerundet wird, um 3.8 und-3.75 und-3.85 gerundet wird, um-3.8.</span><span class="sxs-lookup"><span data-stu-id="4aed7-638">For example, both 3.75 and 3.85 round to 3.8, and both -3.75 and -3.85 round to -3.8.</span></span> <span data-ttu-id="4aed7-639">Diese Form der Rundung wird dargestellt, indem die <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType> Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4aed7-639">This form of rounding is represented by the <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType> enumeration member.</span></span>  
  
 <span data-ttu-id="4aed7-640">Auf den nächsten Wert gerundet wird der Standardform des Rundung in finanzielle und statistische Vorgängen verwendet.</span><span class="sxs-lookup"><span data-stu-id="4aed7-640">Rounding to nearest is the standard form of rounding used in financial and statistical operations.</span></span> <span data-ttu-id="4aed7-641">Es entspricht dem Standard IEEE 754, Abschnitt 4.</span><span class="sxs-lookup"><span data-stu-id="4aed7-641">It conforms to IEEE Standard 754, section 4.</span></span> <span data-ttu-id="4aed7-642">Bei Verwendung in mehreren Rundungsoperationen verringert sich die Rundungsfehler, die vom Mittelpunkt der Werte in einer Richtung runden verursacht wird.</span><span class="sxs-lookup"><span data-stu-id="4aed7-642">When used in multiple rounding operations, it reduces the rounding error that is caused by consistently rounding midpoint values in a single direction.</span></span> <span data-ttu-id="4aed7-643">In einigen Fällen kann diese Rundungsfehler erheblich sein.</span><span class="sxs-lookup"><span data-stu-id="4aed7-643">In some cases, this rounding error can be significant.</span></span>  
  
 <span data-ttu-id="4aed7-644">Das folgende Beispiel veranschaulicht die Verschiebung, die vom Mittelpunkt der Werte in einer Richtung runden auftreten können.</span><span class="sxs-lookup"><span data-stu-id="4aed7-644">The following example illustrates the bias that can result from consistently rounding midpoint values in a single direction.</span></span> <span data-ttu-id="4aed7-645">Im Beispiel berechnet den Mittelwert "true", eines Arrays von <xref:System.Decimal> schätzt, und klicken Sie dann den Mittelwert berechnet, wenn die Werte im Array mit den beiden Konventionen gerundet werden.</span><span class="sxs-lookup"><span data-stu-id="4aed7-645">The example computes the true mean of an array of <xref:System.Decimal> values, and then computes the mean when the values in the array are rounded by using the two conventions.</span></span> <span data-ttu-id="4aed7-646">In diesem Beispiel sind "true" Mittelwert "und" Mittelwert, der entsteht, wenn auf den nächsten Wert runden identisch.</span><span class="sxs-lookup"><span data-stu-id="4aed7-646">In this example, the true mean and the mean that results when rounding to nearest are the same.</span></span> <span data-ttu-id="4aed7-647">Unterscheidet jedoch der Mittelwert, der entsteht, wenn von NULL Weg gerundet indem.05 (oder 3,6 %) "true" bedeutet.</span><span class="sxs-lookup"><span data-stu-id="4aed7-647">However, the mean that results when rounding away from zero differs by .05 (or by 3.6%) from the true mean.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/mean1.cs#2)]
 [!code-vb[System.Math.Round.Overload#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/mean1.vb#2)]  
  
 <span data-ttu-id="4aed7-648">Wird standardmäßig die <xref:System.Math.Round%2A> Methode verwendet die Rundung auf die nächste Konvention.</span><span class="sxs-lookup"><span data-stu-id="4aed7-648">By default, the <xref:System.Math.Round%2A> method uses the rounding to nearest convention.</span></span> <span data-ttu-id="4aed7-649">Die folgende Tabelle enthält die Überladungen der <xref:System.Math.Round%2A> -Methode und die Rundung Konvention, dass jede verwendet.</span><span class="sxs-lookup"><span data-stu-id="4aed7-649">The following table lists the overloads of the <xref:System.Math.Round%2A> method and the rounding convention that each uses.</span></span>  
  
|<span data-ttu-id="4aed7-650">Überladung</span><span class="sxs-lookup"><span data-stu-id="4aed7-650">Overload</span></span>|<span data-ttu-id="4aed7-651">Konvention Rundung</span><span class="sxs-lookup"><span data-stu-id="4aed7-651">Rounding convention</span></span>|  
|--------------|-------------------------|  
|<xref:System.Math.Round%28System.Decimal%29>|<xref:System.MidpointRounding.ToEven>|  
|<xref:System.Math.Round%28System.Double%29>|<xref:System.MidpointRounding.ToEven>|  
|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%29>|<xref:System.MidpointRounding.ToEven>|  
|<xref:System.Math.Round%28System.Double%2CSystem.Int32%29>|<xref:System.MidpointRounding.ToEven>|  
|<xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29>|<span data-ttu-id="4aed7-652">Bestimmt, indem `mode` Parameter.</span><span class="sxs-lookup"><span data-stu-id="4aed7-652">Determined by `mode` parameter.</span></span>|  
|<xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29>|<span data-ttu-id="4aed7-653">Bestimmt, indem `mode` Parameter</span><span class="sxs-lookup"><span data-stu-id="4aed7-653">Determined by `mode` parameter</span></span>|  
|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>|<span data-ttu-id="4aed7-654">Bestimmt, indem `mode` Parameter</span><span class="sxs-lookup"><span data-stu-id="4aed7-654">Determined by `mode` parameter</span></span>|  
|<xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29>|<span data-ttu-id="4aed7-655">Bestimmt, indem `mode` Parameter</span><span class="sxs-lookup"><span data-stu-id="4aed7-655">Determined by `mode` parameter</span></span>|  
  
<a name="Precision"></a>   
## <a name="rounding-and-precision"></a><span data-ttu-id="4aed7-656">Rundung und Genauigkeit</span><span class="sxs-lookup"><span data-stu-id="4aed7-656">Rounding and precision</span></span>  
 <span data-ttu-id="4aed7-657">Um festzustellen, ob es sich bei einer Rundung auf einen Wert für den Mittelpunkt, umfasst die <xref:System.Math.Round%2A> -Methode multipliziert den ursprünglichen Wert von 10 gerundet werden<sup>n</sup>, wobei *n* ist die gewünschte Anzahl von Dezimalstellen Ziffern im Rückgabewert, und klicken Sie dann bestimmt, ob der verbleibenden Bruchteil des Werts größer als oder gleich.5 ist.</span><span class="sxs-lookup"><span data-stu-id="4aed7-657">In order to determine whether a rounding operation involves a midpoint value, the <xref:System.Math.Round%2A> method multiplies the original value to be rounded by 10<sup>n</sup>, where *n* is the desired number of fractional digits in the return value, and then determines whether the remaining fractional portion of the value is greater than or equal to .5.</span></span> <span data-ttu-id="4aed7-658">Dies ist eine leichte Abwandlung einen Test auf Gleichheit und wie erwähnt im Abschnitt "Testen für Gleichheit" die <xref:System.Double> Referenzthema, Gleichheit mit Gleitkommazahlen-Punktwerte sind problematisch, aufgrund der Gleitkommaformat Probleme bei der binären Darstellung und Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="4aed7-658">This is a slight variation on a test for equality, and as discussed in the "Testing for Equality" section of the <xref:System.Double> reference topic, tests for equality with floating-point values are problematic because of the floating-point format's issues with binary representation and precision.</span></span> <span data-ttu-id="4aed7-659">Dies bedeutet, dass jeder Bruchteil eine Zahl, die etwas weniger als.5 (aufgrund von einem Genauigkeitsverlust) wird nicht nach oben gerundet wird.</span><span class="sxs-lookup"><span data-stu-id="4aed7-659">This means that any fractional portion of a number that is slightly less than .5 (because of a loss of precision) will not be rounded upward.</span></span>  
  
 <span data-ttu-id="4aed7-660">Das Problem wird anhand des folgenden Beispiels veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="4aed7-660">The following example illustrates the problem.</span></span> <span data-ttu-id="4aed7-661">Wiederholte.1 auf 11.0 hinzugefügt, und rundet das Ergebnis auf die nächste ganze Zahl.</span><span class="sxs-lookup"><span data-stu-id="4aed7-661">It repeatedly adds .1 to 11.0 and rounds the result to the nearest integer.</span></span> <span data-ttu-id="4aed7-662">Unabhängig von der runden Konvention 11.5 12 gerundet.</span><span class="sxs-lookup"><span data-stu-id="4aed7-662">Regardless of the rounding convention, 11.5 should round to 12.</span></span> <span data-ttu-id="4aed7-663">Es wird jedoch wie die Ausgabe des Beispiels zeigt, nicht.</span><span class="sxs-lookup"><span data-stu-id="4aed7-663">However, as the output from the example shows, it does not.</span></span> <span data-ttu-id="4aed7-664">Im Beispiel wird der "R" [standardmäßige Zahlenformatzeichenfolge](~/docs/standard/base-types/standard-numeric-format-strings.md) zum Anzeigen der Gleitkommawert Zeitwerts vollständige Genauigkeit und zeigt, dass der zu rundende Wert mit einfacher Genauigkeit bei wiederholten Ergänzungen verloren hat, und ihr Wert ist tatsächlich 11.499999999999998.</span><span class="sxs-lookup"><span data-stu-id="4aed7-664">The example uses the "R" [standard numeric format string](~/docs/standard/base-types/standard-numeric-format-strings.md) to display the floating point value's full precision, and shows that the value to be rounded has lost precision during repeated additions, and its value is actually 11.499999999999998.</span></span> <span data-ttu-id="4aed7-665">Da.499999999999998 kleiner als.5 ist, wird der Wert nicht auf die nächsthöhere ganze Zahl gerundet.</span><span class="sxs-lookup"><span data-stu-id="4aed7-665">Because .499999999999998 is less than .5, the value is not rounded to the next highest integer.</span></span> <span data-ttu-id="4aed7-666">Wie das Beispiel auch zeigt, dieses Problem nicht ausgeführt, wenn es den konstanten Wert 11.5, weisen Sie einfach eine <xref:System.Double> Variable.</span><span class="sxs-lookup"><span data-stu-id="4aed7-666">As the example also shows, this problem does not occur if we simply assign the constant value 11.5 to a <xref:System.Double> variable.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/precision1.cs#7)]
 [!code-vb[System.Math.Round.Overload#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/precision1.vb#7)]  
  
 <span data-ttu-id="4aed7-667">Probleme bei der Genauigkeit im Mittelpunkt Werte gerundet werden höchstwahrscheinlich unter folgenden Umständen auftreten:</span><span class="sxs-lookup"><span data-stu-id="4aed7-667">Problems of precision in rounding midpoint values are most likely to arise in the following conditions:</span></span>  
  
-   <span data-ttu-id="4aed7-668">Wenn ein Dezimalstellenwert genau der Gleitkommatyp Binärformat ausgedrückt werden kann.</span><span class="sxs-lookup"><span data-stu-id="4aed7-668">When a fractional value cannot be expressed precisely in the floating-point type's binary format.</span></span>  
  
-   <span data-ttu-id="4aed7-669">Wenn der zu rundende Wert aus einen oder mehrere Operationen mit Gleitkommazahlen berechnet wird.</span><span class="sxs-lookup"><span data-stu-id="4aed7-669">When the value to be rounded is calculated from one or more floating-point operations.</span></span>  
  
-   <span data-ttu-id="4aed7-670">Wenn der Wert gerundet wird ist eine <xref:System.Single> anstelle eines <xref:System.Double> oder <xref:System.Decimal>.</span><span class="sxs-lookup"><span data-stu-id="4aed7-670">When the value to be rounded is a <xref:System.Single> rather than a <xref:System.Double> or <xref:System.Decimal>.</span></span> <span data-ttu-id="4aed7-671">Weitere Informationen finden Sie im nächsten Abschnitt [Rundung und Gleitkommawerten mit einfacher Genauigkeit](#Single).</span><span class="sxs-lookup"><span data-stu-id="4aed7-671">For more information, see the next section, [Rounding and single-precision floating-point values](#Single).</span></span>  
  
 <span data-ttu-id="4aed7-672">In Fällen, in denen der Mangel an Genauigkeit bei Operationen Rundung problematisch ist, können Sie Folgendes tun:</span><span class="sxs-lookup"><span data-stu-id="4aed7-672">In cases where the lack of precision in rounding operations is problematic, you can do the following:</span></span>  
  
-   <span data-ttu-id="4aed7-673">Rundung eine Überladung aufruft, der Rundet eine <xref:System.Double> -Wert, die Sie ändern die <xref:System.Double> auf eine <xref:System.Decimal> Wert ein, und rufen Sie eine Überladung, die Rundet eine <xref:System.Decimal> stattdessen Wert.</span><span class="sxs-lookup"><span data-stu-id="4aed7-673">If the rounding operation calls an overload that rounds a <xref:System.Double> value, you can change the <xref:System.Double> to a <xref:System.Decimal> value and call an overload that rounds a <xref:System.Decimal> value instead.</span></span> <span data-ttu-id="4aed7-674">Obwohl die <xref:System.Decimal> Datentyp verfügt außerdem über Probleme bei der Darstellung und Genauigkeitsverlust, diese Probleme sind weitaus weniger häufig.</span><span class="sxs-lookup"><span data-stu-id="4aed7-674">Although the <xref:System.Decimal> data type also has problems of representation and loss of precision, these issues are far less common.</span></span>  
  
-   <span data-ttu-id="4aed7-675">Definieren Sie einen benutzerdefinierten Rundung Algorithmus, der führt einen Test "nahezu gleich", um festzustellen, ob der zu rundende Wert nahe Mitte liegenden Werten akzeptabler Geschwindigkeit ist.</span><span class="sxs-lookup"><span data-stu-id="4aed7-675">Define a custom rounding algorithm that performs a "nearly equal" test to determine whether the value to be rounded is acceptably close to a midpoint value.</span></span> <span data-ttu-id="4aed7-676">Das folgende Beispiel definiert eine `RoundApproximate` Methode, die überprüft, ob ein Dezimalstellenwert ausreichend nahe Mitte liegenden Werten Mittelpunkt Rundung sein wird.</span><span class="sxs-lookup"><span data-stu-id="4aed7-676">The following example defines a `RoundApproximate` method that examines whether a fractional value is sufficiently near to a midpoint value to be subject to midpoint rounding.</span></span> <span data-ttu-id="4aed7-677">Wie die Ausgabe des Beispiels zeigt, behebt er das Runden Problem, das im vorherigen Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="4aed7-677">As the output from the example shows, it corrects the rounding problem shown in the previous example.</span></span>  
  
     [!code-csharp[System.Math.Round.Overload#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/precision2.cs#8)]
     [!code-vb[System.Math.Round.Overload#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/precision2.vb#8)]  
  
<a name="Single"></a>   
## <a name="rounding-and-single-precision-floating-point-values"></a><span data-ttu-id="4aed7-678">Rundung und mit einfacher Genauigkeit Gleitkommazahlen-Punktwerte</span><span class="sxs-lookup"><span data-stu-id="4aed7-678">Rounding and single-precision floating-point values</span></span>  
 <span data-ttu-id="4aed7-679">Die <xref:System.Math.Round%2A> Methode enthält, die Argumente des Typs akzeptieren Überladungen <xref:System.Decimal> und <xref:System.Double>.</span><span class="sxs-lookup"><span data-stu-id="4aed7-679">The <xref:System.Math.Round%2A> method includes overloads that accept arguments of type <xref:System.Decimal> and <xref:System.Double>.</span></span> <span data-ttu-id="4aed7-680">Es gibt keine Methoden, die Werte des Typs runden <xref:System.Single>.</span><span class="sxs-lookup"><span data-stu-id="4aed7-680">There are no methods that round values of type <xref:System.Single>.</span></span> <span data-ttu-id="4aed7-681">Wenn Sie übergeben ein <xref:System.Single> Wert auf eine der Überladungen der der <xref:System.Math.Round%2A> -Methode, es wird (in c#) umgewandelt oder konvertiert (in Visual Basic) eine <xref:System.Double>, und die entsprechende <xref:System.Math.Round%2A> -Überladung mit eine <xref:System.Double> Parameter aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="4aed7-681">If you pass a <xref:System.Single> value to one of the overloads of the <xref:System.Math.Round%2A> method, it is cast (in C#) or converted (in Visual Basic) to a <xref:System.Double>, and the corresponding <xref:System.Math.Round%2A> overload with a <xref:System.Double> parameter is called.</span></span> <span data-ttu-id="4aed7-682">Obwohl dies eine erweiternde Konvertierung ist, umfasst es häufig einem Genauigkeitsverlust, wie im folgenden Beispiel veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="4aed7-682">Although this is a widening conversion, it often involves a loss of precision, as the following example illustrates.</span></span> <span data-ttu-id="4aed7-683">Wenn eine <xref:System.Single> Wert des 16.325 wird zum Übergeben der <xref:System.Math.Round%2A> Methode und auf zwei Dezimalstellen, die mit der runden auf die nächste Konvention gerundet wird, ist das Ergebnis 16.32 16.33 und nicht das erwartete Ergebnis.</span><span class="sxs-lookup"><span data-stu-id="4aed7-683">When a <xref:System.Single> value of 16.325 is passed to the <xref:System.Math.Round%2A> method and rounded to two decimal places using the rounding to nearest convention, the result is 16.33 and not the expected result of 16.32.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/single1.cs#1)]
 [!code-vb[System.Math.Round.Overload#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/single1.vb#1)]  
  
 <span data-ttu-id="4aed7-684">Diese unerwartete Ergebnis ist aufgrund eines Verlusts Genauigkeit bei der Konvertierung von der <xref:System.Single> -Wert in einen <xref:System.Double>.</span><span class="sxs-lookup"><span data-stu-id="4aed7-684">This unexpected result is due to a loss of precision in the conversion of the <xref:System.Single> value to a <xref:System.Double>.</span></span> <span data-ttu-id="4aed7-685">Da die resultierende <xref:System.Double> Wert 16.325000762939453 ist kein Mittelpunkt Wert ist größer als 16.325, es wird immer nach oben gerundet.</span><span class="sxs-lookup"><span data-stu-id="4aed7-685">Because the resulting <xref:System.Double> value of 16.325000762939453 is not a midpoint value and is greater than 16.325, it is always rounded upward.</span></span>  
  
 <span data-ttu-id="4aed7-686">In vielen Fällen wie im Beispiel veranschaulicht, der Verlust an Genauigkeit kann werden minimiert oder beseitigt, indem Umwandlung oder Konvertierung der <xref:System.Single> -Wert in einen <xref:System.Decimal>.</span><span class="sxs-lookup"><span data-stu-id="4aed7-686">In many cases, as the example illustrates, the loss of precision can be minimized or eliminated by casting or converting the <xref:System.Single> value to a <xref:System.Decimal>.</span></span> <span data-ttu-id="4aed7-687">Beachten Sie, dass, da dies eine einschränkende Konvertierung ist, mithilfe der Cast-Operator oder eine Konvertierungsmethode aufgerufen muss.</span><span class="sxs-lookup"><span data-stu-id="4aed7-687">Note that, because this is a narrowing conversion, it requires using a cast operator or calling a conversion method.</span></span>  
  
<a name="Round1_Example"></a>   
## <a name="mathrounddecimal-example"></a><span data-ttu-id="4aed7-688">Math.Round(Decimal)-Beispiel</span><span class="sxs-lookup"><span data-stu-id="4aed7-688">Math.Round(Decimal) example</span></span>  
 <span data-ttu-id="4aed7-689">Das folgende Beispiel veranschaulicht die <xref:System.Math.Round%28System.Decimal%29> Methode.</span><span class="sxs-lookup"><span data-stu-id="4aed7-689">The following example demonstrates the <xref:System.Math.Round%28System.Decimal%29> method.</span></span> <span data-ttu-id="4aed7-690">Beachten Sie, dass die <xref:System.Decimal> Wert 4.5 rundet 4 statt 5, da diese Überladung die verwendet <xref:System.MidpointRounding.ToEven> Konvention.</span><span class="sxs-lookup"><span data-stu-id="4aed7-690">Note that the <xref:System.Decimal> value of 4.5 rounds to 4 rather than 5, because this overload uses the default <xref:System.MidpointRounding.ToEven> convention.</span></span>  
  
 [!code-csharp[System.Math.Round#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/rounddecimal1.cs#6)]
 [!code-vb[System.Math.Round#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/rounddecimal1.vb#6)]  
  
<a name="Round2_Example"></a>   
## <a name="mathrounddouble-example"></a><span data-ttu-id="4aed7-691">Math.Round(Double)-Beispiel</span><span class="sxs-lookup"><span data-stu-id="4aed7-691">Math.Round(Double) example</span></span>  
 <span data-ttu-id="4aed7-692">Das folgende Beispiel zeigt, auf die nächste Ganzzahl gerundet.</span><span class="sxs-lookup"><span data-stu-id="4aed7-692">The following example demonstrates rounding to the nearest integer value.</span></span>  
  
 [!code-cpp[Classic Math.Round Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Math.Round Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Math.Round Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Math.Round Example/CS/source.cs#1)]
 [!code-vb[Classic Math.Round Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Math.Round Example/VB/source.vb#1)]  
  
<a name="Round3_Example"></a>   
## <a name="mathrounddecimal-int32-example"></a><span data-ttu-id="4aed7-693">Math.Round (Decimal, Int32)-Beispiel</span><span class="sxs-lookup"><span data-stu-id="4aed7-693">Math.Round(Decimal, Int32) example</span></span>  
 <span data-ttu-id="4aed7-694">Im folgenden Beispiel wird die Dezimalwerte mit zwei Dezimalstellen auf Werte, die eine einzelne Dezimalstelle verfügen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-694">The following example rounds decimal values with two fractional digits to values that have a single fractional digit.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/source.cs#3)]
 [!code-vb[System.Math.Round.Overload#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/source.vb#3)]  
  
<a name="Round4_Example"></a>   
## <a name="mathrounddouble-int32-example"></a><span data-ttu-id="4aed7-695">Math.Round (Double, Int32) Beispiel</span><span class="sxs-lookup"><span data-stu-id="4aed7-695">Math.Round(Double, Int32) example</span></span>  
 <span data-ttu-id="4aed7-696">Im folgenden Beispiel wird die double-Werte mit zwei Dezimalstellen an Double-Werte, die eine einzelne Dezimalstelle verfügen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-696">The following example rounds double values with two fractional digits to doubles that have a single fractional digit.</span></span>  
  
 [!code-cpp[Classic Math.Round2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Math.Round2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Math.Round2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Math.Round2 Example/CS/source.cs#1)]
 [!code-vb[Classic Math.Round2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Math.Round2 Example/VB/source.vb#1)]  
  
<a name="Round5_Example"></a>   
## <a name="mathrounddecimal-midpointrounding-example"></a><span data-ttu-id="4aed7-697">Math.Round (Decimal, MidpointRounding)-Beispiel</span><span class="sxs-lookup"><span data-stu-id="4aed7-697">Math.Round(Decimal, MidpointRounding) example</span></span>  
 <span data-ttu-id="4aed7-698">Das folgende Beispiel zeigt die Rückgabewerte der <xref:System.Math.Round%28System.Decimal%29> -Methode, die <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> Methode mit eine `mode` Argument des <xref:System.MidpointRounding.ToEven>, und die <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> Methode mit einer `mode` Argument des <xref:System.MidpointRounding.AwayFromZero>.</span><span class="sxs-lookup"><span data-stu-id="4aed7-698">The following example displays values returned by the <xref:System.Math.Round%28System.Decimal%29> method, the <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.ToEven>, and the <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.AwayFromZero>.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/midpoint1.cs#5)]
 [!code-vb[System.Math.Round.Overload#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/midpoint1.vb#5)]  
  
<a name="Round6_Example"></a>   
## <a name="mathrounddouble-midpointrounding-example"></a><span data-ttu-id="4aed7-699">Math.Round (Double MidpointRounding) Beispiel</span><span class="sxs-lookup"><span data-stu-id="4aed7-699">Math.Round(Double, MidpointRounding) example</span></span>  
 <span data-ttu-id="4aed7-700">Das folgende Beispiel zeigt die Rückgabewerte der <xref:System.Math.Round%28System.Double%29> -Methode, die <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29> Methode mit eine `mode` Argument des <xref:System.MidpointRounding.ToEven>, und die <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29> Methode mit einer `mode` Argument des <xref:System.MidpointRounding.AwayFromZero>.</span><span class="sxs-lookup"><span data-stu-id="4aed7-700">The following example displays values returned by the <xref:System.Math.Round%28System.Double%29> method, the <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.ToEven>, and the <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.AwayFromZero>.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/midpoint2.cs#6)]
 [!code-vb[System.Math.Round.Overload#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/midpoint2.vb#6)]  
  
<a name="Round7_Example"></a>   
## <a name="mathrounddecimal-int32-midpointrounding-example"></a><span data-ttu-id="4aed7-701">Math.Round (Int32, Decimal MidpointRounding)-Beispiel</span><span class="sxs-lookup"><span data-stu-id="4aed7-701">Math.Round(Decimal, Int32, MidpointRounding) example</span></span>  
 <span data-ttu-id="4aed7-702">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Math.Round%2A> Methode mit dem <xref:System.MidpointRounding> Enumeration.</span><span class="sxs-lookup"><span data-stu-id="4aed7-702">The following example demonstrates how to use the <xref:System.Math.Round%2A> method with the <xref:System.MidpointRounding> enumeration.</span></span>  
  
 [!code-cpp[math.midpointrounding#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.midpointrounding/cpp/mpr.cpp#1)]
 [!code-csharp[math.midpointrounding#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.midpointrounding/CS/mpr.cs#1)]
 [!code-vb[math.midpointrounding#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.midpointrounding/VB/mpr.vb#1)]  
  
<a name="Round8_Example"></a>   
## <a name="mathrounddouble-int32-midpointrounding-example"></a><span data-ttu-id="4aed7-703">Math.Round (Int32 und Double MidpointRounding)-Beispiel</span><span class="sxs-lookup"><span data-stu-id="4aed7-703">Math.Round(Double, Int32, MidpointRounding) example</span></span>  
 <span data-ttu-id="4aed7-704">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29> Methode mit dem <xref:System.MidpointRounding> Enumeration.</span><span class="sxs-lookup"><span data-stu-id="4aed7-704">The following example demonstrates how to use the <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29> method with the <xref:System.MidpointRounding> enumeration.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/mpr.cs#4)]
 [!code-vb[System.Math.Round.Overload#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/mpr.vb#4)]  
  
<a name="Round_Versions"></a>   
## <a name="version-information"></a><span data-ttu-id="4aed7-705">Versionsinformationen</span><span class="sxs-lookup"><span data-stu-id="4aed7-705">Version information</span></span>  
 <span data-ttu-id="4aed7-706">.NET Framework</span><span class="sxs-lookup"><span data-stu-id="4aed7-706">.NET Framework</span></span>  
 <span data-ttu-id="4aed7-707">Überladungen ohne eine <xref:System.MidpointRounding> Parameter werden unterstützt: 4.5, 4, 3.5, 3.0, 2.0, 1.1, 1.0</span><span class="sxs-lookup"><span data-stu-id="4aed7-707">Overloads without a <xref:System.MidpointRounding> parameter are supported in: 4.5, 4, 3.5, 3.0, 2.0, 1.1, 1.0</span></span>  
<span data-ttu-id="4aed7-708">Überladungen mit einem <xref:System.MidpointRounding> Parameter werden unterstützt: 4.5, 4, 3.5, 3.0 und 2.0</span><span class="sxs-lookup"><span data-stu-id="4aed7-708">Overloads with a <xref:System.MidpointRounding> parameter are supported in: 4.5, 4, 3.5, 3.0, 2.0</span></span>  
  
 <span data-ttu-id="4aed7-709">.NET Framework Client Profile</span><span class="sxs-lookup"><span data-stu-id="4aed7-709">.NET Framework Client Profile</span></span>  
 <span data-ttu-id="4aed7-710">Alle Überladungen werden unterstützt: 4, 3.5 SP1</span><span class="sxs-lookup"><span data-stu-id="4aed7-710">All overloads are supported in: 4, 3.5 SP1</span></span>  
  
 <span data-ttu-id="4aed7-711">Portable Klassenbibliothek</span><span class="sxs-lookup"><span data-stu-id="4aed7-711">Portable Class Library</span></span>  
 <span data-ttu-id="4aed7-712">Alle Überladungen werden unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4aed7-712">All overloads are supported</span></span>  
  
 <span data-ttu-id="4aed7-713">.NET für Windows Store-Apps</span><span class="sxs-lookup"><span data-stu-id="4aed7-713">.NET for Windows Store apps</span></span>  
 <span data-ttu-id="4aed7-714">Alle Überladungen werden unterstützt: Windows 8</span><span class="sxs-lookup"><span data-stu-id="4aed7-714">All overloads are supported in: Windows 8</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Math.Ceiling(System.Decimal)" />
        <altmember cref="M:System.Math.Floor(System.Decimal)" />
        <altmember cref="M:System.Math.Truncate(System.Decimal)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="4aed7-715">Eine zu rundende Dezimalzahl.</span><span class="sxs-lookup"><span data-stu-id="4aed7-715">A decimal number to be rounded.</span></span></param>
        <summary><span data-ttu-id="4aed7-716">Rundet einen Dezimalwert auf den nächsten ganzzahligen Wert.</span><span class="sxs-lookup"><span data-stu-id="4aed7-716">Rounds a decimal value to the nearest integral value.</span></span></summary>
        <returns><span data-ttu-id="4aed7-717">Die zum Parameter <paramref name="d" /> nächste Ganzzahl.</span><span class="sxs-lookup"><span data-stu-id="4aed7-717">The integer nearest parameter <paramref name="d" />.</span></span> <span data-ttu-id="4aed7-718">Wenn der Nachkommawert von <paramref name="d" /> genau in der Mitte zwischen zwei Ganzzahlen liegt, von denen eine gerade und die andere ungerade ist, wird die gerade Zahl zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="4aed7-718">If the fractional component of <paramref name="d" /> is halfway between two integers, one of which is even and the other odd, the even number is returned.</span></span> <span data-ttu-id="4aed7-719">Beachten Sie, dass diese Methode einen <see cref="T:System.Decimal" /> anstelle eines ganzzahligen Typs zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="4aed7-719">Note that this method returns a <see cref="T:System.Decimal" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="4aed7-720">Beispiele und umfassende Verwendungsinformationen zu diesen und anderen Überladungen der `Round` -Methode finden Sie unter der <xref:System.Math.Round%2A> Referenzseite.</span><span class="sxs-lookup"><span data-stu-id="4aed7-720">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="4aed7-721">Das Ergebnis liegt außerhalb des Bereichs von <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="4aed7-721">The result is outside the range of a <see cref="T:System.Decimal" />.</span></span></exception>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static double Round (double a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Round(float64 a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (a As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Round(double a);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="4aed7-722">Eine zu rundende Gleitkommazahl mit doppelter Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="4aed7-722">A double-precision floating-point number to be rounded.</span></span></param>
        <summary><span data-ttu-id="4aed7-723">Rundet einen Gleitkommawert mit doppelter Genauigkeit auf den nächsten ganzzahligen Wert.</span><span class="sxs-lookup"><span data-stu-id="4aed7-723">Rounds a double-precision floating-point value to the nearest integral value.</span></span></summary>
        <returns><span data-ttu-id="4aed7-724">Die zu <paramref name="a" /> nächste Ganzzahl.</span><span class="sxs-lookup"><span data-stu-id="4aed7-724">The integer nearest <paramref name="a" />.</span></span> <span data-ttu-id="4aed7-725">Wenn der Nachkommawert von <paramref name="a" /> genau in der Mitte zwischen zwei Ganzzahlen liegt, von denen eine gerade und die andere ungerade ist, wird die gerade Zahl zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="4aed7-725">If the fractional component of <paramref name="a" /> is halfway between two integers, one of which is even and the other odd, then the even number is returned.</span></span> <span data-ttu-id="4aed7-726">Beachten Sie, dass diese Methode einen <see cref="T:System.Double" /> anstelle eines ganzzahligen Typs zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="4aed7-726">Note that this method returns a <see cref="T:System.Double" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="4aed7-727">Beispiele und umfassende Verwendungsinformationen zu diesen und anderen Überladungen der `Round` -Methode finden Sie unter der <xref:System.Math.Round%2A> Referenzseite.</span><span class="sxs-lookup"><span data-stu-id="4aed7-727">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para><span data-ttu-id="4aed7-728">Aufgrund der Verlust an Genauigkeit, die aus, die als Gleitkommazahlen Dezimalwerte darstellt oder arithmetische Vorgänge für Gleitkommawerte, in einigen Fällen kann die <see cref="M:System.Math.Round(System.Double)" /> Methode möglicherweise nicht angezeigt, Mittelpunkt Werte gerundet wird, die nächste gerade ganze Zahl.</span><span class="sxs-lookup"><span data-stu-id="4aed7-728">Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <see cref="M:System.Math.Round(System.Double)" /> method may not appear to round midpoint values to the nearest even integer.</span></span> <span data-ttu-id="4aed7-729">Im folgenden Beispiel, da der Gleitkommawert.1 keine endliche binäre Darstellung hat der erste Aufruf der <see cref="M:System.Math.Round(System.Double)" /> mit einem Wert von 11.5 Methodenrückgabe 11 statt 12.</span><span class="sxs-lookup"><span data-stu-id="4aed7-729">In the following example, because the floating-point value .1 has no finite binary representation, the first call to the <see cref="M:System.Math.Round(System.Double)" /> method with a value of 11.5 returns 11 instead of 12.</span></span>  
  
 [!code-csharp[System.Math.Round#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round2.cs#1)]
 [!code-vb[System.Math.Round#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round2.vb#1)]</para>
        </block>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, int decimals);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, int32 decimals) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Decimal,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, decimals As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, int decimals);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
        <Parameter Name="decimals" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="4aed7-730">Eine zu rundende Dezimalzahl.</span><span class="sxs-lookup"><span data-stu-id="4aed7-730">A decimal number to be rounded.</span></span></param>
        <param name="decimals"><span data-ttu-id="4aed7-731">Die Anzahl von Dezimalstellen im Rückgabewert.</span><span class="sxs-lookup"><span data-stu-id="4aed7-731">The number of decimal places in the return value.</span></span></param>
        <summary><span data-ttu-id="4aed7-732">Rundet einen Dezimalwert auf die angegebene Anzahl von Bruchziffern.</span><span class="sxs-lookup"><span data-stu-id="4aed7-732">Rounds a decimal value to a specified number of fractional digits.</span></span></summary>
        <returns><span data-ttu-id="4aed7-733">Die Zahl, die <paramref name="d" /> am nächsten liegt und deren Anzahl von Nachkommastellen gleich <paramref name="decimals" /> ist.</span><span class="sxs-lookup"><span data-stu-id="4aed7-733">The number nearest to <paramref name="d" /> that contains a number of fractional digits equal to <paramref name="decimals" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="4aed7-734">Beispiele und umfassende Verwendungsinformationen zu diesen und anderen Überladungen der `Round` -Methode finden Sie unter der <xref:System.Math.Round%2A> Referenzseite.</span><span class="sxs-lookup"><span data-stu-id="4aed7-734">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4aed7-735"><paramref name="decimals" /> ist kleiner als 0 (null) oder größer als 28.</span><span class="sxs-lookup"><span data-stu-id="4aed7-735"><paramref name="decimals" /> is less than 0 or greater than 28.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="4aed7-736">Das Ergebnis liegt außerhalb des Bereichs von <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="4aed7-736">The result is outside the range of a <see cref="T:System.Decimal" />.</span></span></exception>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Decimal,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, mode As MidpointRounding) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, MidpointRounding mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="4aed7-737">Eine zu rundende Dezimalzahl.</span><span class="sxs-lookup"><span data-stu-id="4aed7-737">A decimal number to be rounded.</span></span></param>
        <param name="mode"><span data-ttu-id="4aed7-738">Angabe, wie <c>d</c> gerundet werden soll, wenn der Wert in der Mitte zwischen zwei anderen Zahlen liegt.</span><span class="sxs-lookup"><span data-stu-id="4aed7-738">Specification for how to round <c>d</c> if it is midway between two other numbers.</span></span></param>
        <summary><span data-ttu-id="4aed7-739">Rundet einen Dezimalwert auf die nächste Ganzzahl.</span><span class="sxs-lookup"><span data-stu-id="4aed7-739">Rounds a decimal value to the nearest integer.</span></span> <span data-ttu-id="4aed7-740">Ein Parameter gibt an, wie der Wert gerundet wird, wenn er genau zwischen zwei Zahlen liegt.</span><span class="sxs-lookup"><span data-stu-id="4aed7-740">A parameter specifies how to round the value if it is midway between two numbers.</span></span></summary>
        <returns><span data-ttu-id="4aed7-741">Die zu <paramref name="d" /> nächste Ganzzahl.</span><span class="sxs-lookup"><span data-stu-id="4aed7-741">The integer nearest <paramref name="d" />.</span></span> <span data-ttu-id="4aed7-742">Wenn <paramref name="d" /> genau in der Mitte zwischen zwei Zahlen liegt, von denen eine gerade und die andere ungerade ist, bestimmt der <paramref name="mode" />-Parameter, welche der beiden Zahlen zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="4aed7-742">If <paramref name="d" /> is halfway between two numbers, one of which is even and the other odd, then <paramref name="mode" /> determines which of the two is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="4aed7-743">Beispiele und umfassende Verwendungsinformationen zu diesen und anderen Überladungen der `Round` -Methode finden Sie unter der <xref:System.Math.Round%2A> Referenzseite.</span><span class="sxs-lookup"><span data-stu-id="4aed7-743">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4aed7-744"><paramref name="mode" /> ist kein gültiger <see cref="T:System.MidpointRounding" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="4aed7-744"><paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="4aed7-745">Das Ergebnis liegt außerhalb des Bereichs von <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="4aed7-745">The result is outside the range of a <see cref="T:System.Decimal" />.</span></span></exception>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static double Round (double value, int digits);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Round(float64 value, int32 digits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (value As Double, digits As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Round(double value, int digits);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="digits" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4aed7-746">Eine zu rundende Gleitkommazahl mit doppelter Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="4aed7-746">A double-precision floating-point number to be rounded.</span></span></param>
        <param name="digits"><span data-ttu-id="4aed7-747">Die Anzahl von Dezimalstellen im Rückgabewert.</span><span class="sxs-lookup"><span data-stu-id="4aed7-747">The number of fractional digits in the return value.</span></span></param>
        <summary><span data-ttu-id="4aed7-748">Rundet einen Gleitkommawert mit doppelter Genauigkeit auf eine angegebene Anzahl von Bruchziffern.</span><span class="sxs-lookup"><span data-stu-id="4aed7-748">Rounds a double-precision floating-point value to a specified number of fractional digits.</span></span></summary>
        <returns><span data-ttu-id="4aed7-749">Die Zahl, die <paramref name="value" /> am nächsten liegt und deren Anzahl von Nachkommastellen gleich <paramref name="digits" /> ist.</span><span class="sxs-lookup"><span data-stu-id="4aed7-749">The number nearest to <paramref name="value" /> that contains a number of fractional digits equal to <paramref name="digits" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="4aed7-750">Beispiele und umfassende Verwendungsinformationen zu diesen und anderen Überladungen der `Round` -Methode finden Sie unter der <xref:System.Math.Round%2A> Referenzseite.</span><span class="sxs-lookup"><span data-stu-id="4aed7-750">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4aed7-751"><paramref name="digits" /> ist kleiner als 0 (null) oder größer als 15.</span><span class="sxs-lookup"><span data-stu-id="4aed7-751"><paramref name="digits" /> is less than 0 or greater than 15.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="4aed7-752">Aufgrund der Verlust an Genauigkeit, die aus, die als Gleitkommazahlen Dezimalwerte darstellt oder arithmetische Vorgänge für Gleitkommawerte, in einigen Fällen kann die <see cref="M:System.Math.Round(System.Double,System.Int32)" /> Methode möglicherweise nicht angezeigt, Mittelpunkt Werte gerundet wird, die nächsten geraden Wert in der <paramref name="digits" /> decimal Position.</span><span class="sxs-lookup"><span data-stu-id="4aed7-752">Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <see cref="M:System.Math.Round(System.Double,System.Int32)" /> method may not appear to round midpoint values to the nearest even value in the <paramref name="digits" /> decimal position.</span></span> <span data-ttu-id="4aed7-753">Dies wird im folgenden Beispiel veranschaulicht, in denen 2.135 2.13 statt 2.14 gerundet wird.</span><span class="sxs-lookup"><span data-stu-id="4aed7-753">This is illustrated in the following example, where 2.135 is rounded to 2.13 instead of 2.14.</span></span> <span data-ttu-id="4aed7-754">Dies geschieht, weil die Methode intern multipliziert <paramref name="value" /> von 10<sup>Ziffern</sup>, und die Multiplikation wird in diesem Fall aus einem Genauigkeitsverlust angehört.</span><span class="sxs-lookup"><span data-stu-id="4aed7-754">This occurs because internally the method multiplies <paramref name="value" /> by 10<sup>digits</sup>, and the multiplication operation in this case suffers from a loss of precision.</span></span>  
  
 [!code-csharp[System.Math.Round#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round3.cs#2)]
 [!code-vb[System.Math.Round#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round3.vb#2)]</para>
        </block>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static double Round (double value, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Round(float64 value, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Double,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (value As Double, mode As MidpointRounding) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Round(double value, MidpointRounding mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4aed7-755">Eine zu rundende Gleitkommazahl mit doppelter Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="4aed7-755">A double-precision floating-point number to be rounded.</span></span></param>
        <param name="mode"><span data-ttu-id="4aed7-756">Angabe, wie <c>value</c> gerundet werden soll, wenn der Wert in der Mitte zwischen zwei anderen Zahlen liegt.</span><span class="sxs-lookup"><span data-stu-id="4aed7-756">Specification for how to round <c>value</c> if it is midway between two other numbers.</span></span></param>
        <summary><span data-ttu-id="4aed7-757">Rundet einen Gleitkommawert mit doppelter Genauigkeit auf die nächste Ganzzahl.</span><span class="sxs-lookup"><span data-stu-id="4aed7-757">Rounds a double-precision floating-point value to the nearest integer.</span></span> <span data-ttu-id="4aed7-758">Ein Parameter gibt an, wie der Wert gerundet wird, wenn er genau zwischen zwei Zahlen liegt.</span><span class="sxs-lookup"><span data-stu-id="4aed7-758">A parameter specifies how to round the value if it is midway between two numbers.</span></span></summary>
        <returns><span data-ttu-id="4aed7-759">Die zu <paramref name="value" /> nächste Ganzzahl.</span><span class="sxs-lookup"><span data-stu-id="4aed7-759">The integer nearest <paramref name="value" />.</span></span> <span data-ttu-id="4aed7-760">Wenn <paramref name="value" /> genau in der Mitte zwischen zwei Ganzzahlen liegt, von denen eine gerade und die andere ungerade ist, bestimmt <paramref name="mode" />, welche der beiden Zahlen zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="4aed7-760">If <paramref name="value" /> is halfway between two integers, one of which is even and the other odd, then <paramref name="mode" /> determines which of the two is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="4aed7-761">Beispiele und umfassende Verwendungsinformationen zu diesen und anderen Überladungen der `Round` -Methode finden Sie unter der <xref:System.Math.Round%2A> Referenzseite.</span><span class="sxs-lookup"><span data-stu-id="4aed7-761">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4aed7-762"><paramref name="mode" /> ist kein gültiger <see cref="T:System.MidpointRounding" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="4aed7-762"><paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="4aed7-763">Aufgrund der Verlust an Genauigkeit, die aus, die als Gleitkommazahlen Dezimalwerte darstellt oder arithmetische Vorgänge für Gleitkommawerte, in einigen Fällen kann die <see cref="M:System.Math.Round(System.Double,System.MidpointRounding)" /> Methode möglicherweise nicht angezeigt, Mittelpunkt Werte gerundet wird, die nächste gerade ganze Zahl.</span><span class="sxs-lookup"><span data-stu-id="4aed7-763">Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <see cref="M:System.Math.Round(System.Double,System.MidpointRounding)" /> method may not appear to round midpoint values to the nearest even integer.</span></span> <span data-ttu-id="4aed7-764">Im folgenden Beispiel, da der Gleitkommawert.1 keine endliche binäre Darstellung hat der erste Aufruf der <see cref="M:System.Math.Round(System.Double)" /> mit einem Wert von 11.5 Methodenrückgabe 11 statt 12.</span><span class="sxs-lookup"><span data-stu-id="4aed7-764">In the following example, because the floating-point value .1 has no finite binary representation, the first call to the <see cref="M:System.Math.Round(System.Double)" /> method with a value of 11.5 returns 11 instead of 12.</span></span>  
  
 [!code-csharp[System.Math.Round#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round5.cs#4)]
 [!code-vb[System.Math.Round#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round5.vb#4)]</para>
        </block>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, int decimals, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, int32 decimals, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Decimal,System.Int32,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, decimals As Integer, mode As MidpointRounding) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, int decimals, MidpointRounding mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
        <Parameter Name="decimals" Type="System.Int32" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="4aed7-765">Eine zu rundende Dezimalzahl.</span><span class="sxs-lookup"><span data-stu-id="4aed7-765">A decimal number to be rounded.</span></span></param>
        <param name="decimals"><span data-ttu-id="4aed7-766">Die Anzahl von Dezimalstellen im Rückgabewert.</span><span class="sxs-lookup"><span data-stu-id="4aed7-766">The number of decimal places in the return value.</span></span></param>
        <param name="mode"><span data-ttu-id="4aed7-767">Angabe, wie <c>d</c> gerundet werden soll, wenn der Wert in der Mitte zwischen zwei anderen Zahlen liegt.</span><span class="sxs-lookup"><span data-stu-id="4aed7-767">Specification for how to round <c>d</c> if it is midway between two other numbers.</span></span></param>
        <summary><span data-ttu-id="4aed7-768">Rundet einen Dezimalwert auf die angegebene Anzahl von Bruchziffern.</span><span class="sxs-lookup"><span data-stu-id="4aed7-768">Rounds a decimal value to a specified number of fractional digits.</span></span> <span data-ttu-id="4aed7-769">Ein Parameter gibt an, wie der Wert gerundet wird, wenn er genau zwischen zwei Zahlen liegt.</span><span class="sxs-lookup"><span data-stu-id="4aed7-769">A parameter specifies how to round the value if it is midway between two numbers.</span></span></summary>
        <returns><span data-ttu-id="4aed7-770">Die Zahl, die <paramref name="d" /> am nächsten liegt und deren Anzahl von Nachkommastellen gleich <paramref name="decimals" /> ist.</span><span class="sxs-lookup"><span data-stu-id="4aed7-770">The number nearest to <paramref name="d" /> that contains a number of fractional digits equal to <paramref name="decimals" />.</span></span> <span data-ttu-id="4aed7-771">Wenn <paramref name="d" /> weniger Dezimalstellen als <paramref name="decimals" /> hat, wird <paramref name="d" /> unverändert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="4aed7-771">If <paramref name="d" /> has fewer fractional digits than <paramref name="decimals" />, <paramref name="d" /> is returned unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="4aed7-772">Beispiele und umfassende Verwendungsinformationen zu diesen und anderen Überladungen der `Round` -Methode finden Sie unter der <xref:System.Math.Round%2A> Referenzseite.</span><span class="sxs-lookup"><span data-stu-id="4aed7-772">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4aed7-773"><paramref name="decimals" /> ist kleiner als 0 (null) oder größer als 28.</span><span class="sxs-lookup"><span data-stu-id="4aed7-773"><paramref name="decimals" /> is less than 0 or greater than 28.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4aed7-774"><paramref name="mode" /> ist kein gültiger <see cref="T:System.MidpointRounding" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="4aed7-774"><paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="4aed7-775">Das Ergebnis liegt außerhalb des Bereichs von <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="4aed7-775">The result is outside the range of a <see cref="T:System.Decimal" />.</span></span></exception>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static double Round (double value, int digits, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Round(float64 value, int32 digits, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (value As Double, digits As Integer, mode As MidpointRounding) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Round(double value, int digits, MidpointRounding mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="digits" Type="System.Int32" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4aed7-776">Eine zu rundende Gleitkommazahl mit doppelter Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="4aed7-776">A double-precision floating-point number to be rounded.</span></span></param>
        <param name="digits"><span data-ttu-id="4aed7-777">Die Anzahl von Dezimalstellen im Rückgabewert.</span><span class="sxs-lookup"><span data-stu-id="4aed7-777">The number of fractional digits in the return value.</span></span></param>
        <param name="mode"><span data-ttu-id="4aed7-778">Angabe, wie <c>value</c> gerundet werden soll, wenn der Wert in der Mitte zwischen zwei anderen Zahlen liegt.</span><span class="sxs-lookup"><span data-stu-id="4aed7-778">Specification for how to round <c>value</c> if it is midway between two other numbers.</span></span></param>
        <summary><span data-ttu-id="4aed7-779">Rundet einen Gleitkommawert mit doppelter Genauigkeit auf eine angegebene Anzahl von Bruchziffern.</span><span class="sxs-lookup"><span data-stu-id="4aed7-779">Rounds a double-precision floating-point value to a specified number of fractional digits.</span></span> <span data-ttu-id="4aed7-780">Ein Parameter gibt an, wie der Wert gerundet wird, wenn er genau zwischen zwei Zahlen liegt.</span><span class="sxs-lookup"><span data-stu-id="4aed7-780">A parameter specifies how to round the value if it is midway between two numbers.</span></span></summary>
        <returns><span data-ttu-id="4aed7-781">Die Zahl, die <paramref name="value" /> am nächsten liegt und deren Anzahl von Dezimalstellen gleich <paramref name="digits" /> ist.</span><span class="sxs-lookup"><span data-stu-id="4aed7-781">The number nearest to <paramref name="value" /> that has a number of fractional digits equal to <paramref name="digits" />.</span></span> <span data-ttu-id="4aed7-782">Wenn <paramref name="value" /> weniger Dezimalstellen als <paramref name="digits" /> hat, wird <paramref name="value" /> unverändert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="4aed7-782">If <paramref name="value" /> has fewer fractional digits than <paramref name="digits" />, <paramref name="value" /> is returned unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="4aed7-783">Beispiele und umfassende Verwendungsinformationen zu diesen und anderen Überladungen der `Round` -Methode finden Sie unter der <xref:System.Math.Round%2A> Referenzseite.</span><span class="sxs-lookup"><span data-stu-id="4aed7-783">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4aed7-784"><paramref name="digits" /> ist kleiner als 0 (null) oder größer als 15.</span><span class="sxs-lookup"><span data-stu-id="4aed7-784"><paramref name="digits" /> is less than 0 or greater than 15.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4aed7-785"><paramref name="mode" /> ist kein gültiger <see cref="T:System.MidpointRounding" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="4aed7-785"><paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="4aed7-786">Aufgrund der Verlust an Genauigkeit, die aus, die als Gleitkommazahlen Dezimalwerte darstellt oder arithmetische Vorgänge für Gleitkommawerte, in einigen Fällen kann die <see cref="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)" /> Methode möglicherweise Mittelpunkt Werte entsprechend den Angaben gerundet wird, nicht angezeigt durch die <paramref name="mode" /> Parameter.</span><span class="sxs-lookup"><span data-stu-id="4aed7-786">Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <see cref="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)" /> method may not appear to round midpoint values as specified by the <paramref name="mode" /> parameter.</span></span> <span data-ttu-id="4aed7-787">Dies wird im folgenden Beispiel veranschaulicht, in denen 2.135 2.13 statt 2.14 gerundet wird.</span><span class="sxs-lookup"><span data-stu-id="4aed7-787">This is illustrated in the following example, where 2.135 is rounded to 2.13 instead of 2.14.</span></span> <span data-ttu-id="4aed7-788">Dies geschieht, weil die Methode intern multipliziert <paramref name="value" /> von 10<sup>Ziffern</sup>, und die Multiplikation wird in diesem Fall aus einem Genauigkeitsverlust angehört.</span><span class="sxs-lookup"><span data-stu-id="4aed7-788">This occurs because internally the method multiplies <paramref name="value" /> by 10<sup>digits</sup>, and the multiplication operation in this case suffers from a loss of precision.</span></span>  
  
 [!code-csharp[System.Math.Round#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round4.cs#3)]
 [!code-vb[System.Math.Round#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round4.vb#3)]</para>
        </block>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Sign">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4aed7-789">Gibt eine ganze Zahl zurück, die das Vorzeichen einer Zahl angibt.</span><span class="sxs-lookup"><span data-stu-id="4aed7-789">Returns an integer that indicates the sign of a number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4aed7-790">Eine Dezimalzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-790">A signed decimal number.</span></span></param>
        <summary><span data-ttu-id="4aed7-791">Gibt eine ganze Zahl zurück, die das Vorzeichen einer Dezimalzahl angibt.</span><span class="sxs-lookup"><span data-stu-id="4aed7-791">Returns an integer that indicates the sign of a decimal number.</span></span></summary>
        <returns><span data-ttu-id="4aed7-792">Eine Zahl, die das Vorzeichen von <paramref name="value" /> angibt, wie in der folgenden Tabelle veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="4aed7-792">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <span data-ttu-id="4aed7-793"><list type="table"><listheader><term> Rückgabewert</span><span class="sxs-lookup"><span data-stu-id="4aed7-793"><list type="table"><listheader><term> Return value</span></span>  
  
 <span data-ttu-id="4aed7-794"></term><description> Bedeutung</span><span class="sxs-lookup"><span data-stu-id="4aed7-794"></term><description> Meaning</span></span>  
  
 <span data-ttu-id="4aed7-795"></description></listheader><item><term> –1</span><span class="sxs-lookup"><span data-stu-id="4aed7-795"></description></listheader><item><term> -1</span></span>  
  
 <span data-ttu-id="4aed7-796"></term><description><paramref name="value" /> ist kleiner als 0 (null).</span><span class="sxs-lookup"><span data-stu-id="4aed7-796"></term><description><paramref name="value" /> is less than zero.</span></span>  
  
 <span data-ttu-id="4aed7-797"></description></item><item><term> 0 (null)</span><span class="sxs-lookup"><span data-stu-id="4aed7-797"></description></item><item><term> 0</span></span>  
  
 <span data-ttu-id="4aed7-798"></term><description><paramref name="value" /> ist gleich 0 (null).</span><span class="sxs-lookup"><span data-stu-id="4aed7-798"></term><description><paramref name="value" /> is equal to zero.</span></span>  
  
 <span data-ttu-id="4aed7-799"></description></item><item><term> 1</span><span class="sxs-lookup"><span data-stu-id="4aed7-799"></description></item><item><term> 1</span></span>  
  
 <span data-ttu-id="4aed7-800"></term><description><paramref name="value" /> ist größer als 0 (null).</span><span class="sxs-lookup"><span data-stu-id="4aed7-800"></term><description><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4aed7-801">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Math.Sign%28System.Decimal%29> Methode, um zu bestimmen, der die Vorzeichen einer <xref:System.Decimal> Wert und der Konsole anzeigt.</span><span class="sxs-lookup"><span data-stu-id="4aed7-801">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Decimal%29> method to determine the sign of a <xref:System.Decimal> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Double) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4aed7-802">Eine Zahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-802">A signed number.</span></span></param>
        <summary><span data-ttu-id="4aed7-803">Gibt eine ganze Zahl zurück, die das Vorzeichen einer Gleitkommazahl mit doppelter Genauigkeit angibt.</span><span class="sxs-lookup"><span data-stu-id="4aed7-803">Returns an integer that indicates the sign of a double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="4aed7-804">Eine Zahl, die das Vorzeichen von <paramref name="value" /> angibt, wie in der folgenden Tabelle veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="4aed7-804">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <span data-ttu-id="4aed7-805"><list type="table"><listheader><term> Rückgabewert</span><span class="sxs-lookup"><span data-stu-id="4aed7-805"><list type="table"><listheader><term> Return value</span></span>  
  
 <span data-ttu-id="4aed7-806"></term><description> Bedeutung</span><span class="sxs-lookup"><span data-stu-id="4aed7-806"></term><description> Meaning</span></span>  
  
 <span data-ttu-id="4aed7-807"></description></listheader><item><term> –1</span><span class="sxs-lookup"><span data-stu-id="4aed7-807"></description></listheader><item><term> -1</span></span>  
  
 <span data-ttu-id="4aed7-808"></term><description><paramref name="value" /> ist kleiner als 0 (null).</span><span class="sxs-lookup"><span data-stu-id="4aed7-808"></term><description><paramref name="value" /> is less than zero.</span></span>  
  
 <span data-ttu-id="4aed7-809"></description></item><item><term> 0 (null)</span><span class="sxs-lookup"><span data-stu-id="4aed7-809"></description></item><item><term> 0</span></span>  
  
 <span data-ttu-id="4aed7-810"></term><description><paramref name="value" /> ist gleich 0 (null).</span><span class="sxs-lookup"><span data-stu-id="4aed7-810"></term><description><paramref name="value" /> is equal to zero.</span></span>  
  
 <span data-ttu-id="4aed7-811"></description></item><item><term> 1</span><span class="sxs-lookup"><span data-stu-id="4aed7-811"></description></item><item><term> 1</span></span>  
  
 <span data-ttu-id="4aed7-812"></term><description><paramref name="value" /> ist größer als 0 (null).</span><span class="sxs-lookup"><span data-stu-id="4aed7-812"></term><description><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4aed7-813">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Math.Sign%28System.Double%29> Methode, um zu bestimmen, der die Vorzeichen einer <xref:System.Double> Wert und der Konsole anzeigt.</span><span class="sxs-lookup"><span data-stu-id="4aed7-813">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Double%29> method to determine the sign of a <xref:System.Double> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArithmeticException">
          <span data-ttu-id="4aed7-814"><paramref name="value" /> ist gleich <see cref="F:System.Double.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="4aed7-814"><paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Short) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(short value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4aed7-815">Eine Zahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-815">A signed number.</span></span></param>
        <summary><span data-ttu-id="4aed7-816">Gibt eine ganze Zahl zurück, die das Vorzeichen einer ganzen 16-Bit-Zahl mit Vorzeichen angibt.</span><span class="sxs-lookup"><span data-stu-id="4aed7-816">Returns an integer that indicates the sign of a 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="4aed7-817">Eine Zahl, die das Vorzeichen von <paramref name="value" /> angibt, wie in der folgenden Tabelle veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="4aed7-817">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <span data-ttu-id="4aed7-818"><list type="table"><listheader><term> Rückgabewert</span><span class="sxs-lookup"><span data-stu-id="4aed7-818"><list type="table"><listheader><term> Return value</span></span>  
  
 <span data-ttu-id="4aed7-819"></term><description> Bedeutung</span><span class="sxs-lookup"><span data-stu-id="4aed7-819"></term><description> Meaning</span></span>  
  
 <span data-ttu-id="4aed7-820"></description></listheader><item><term> –1</span><span class="sxs-lookup"><span data-stu-id="4aed7-820"></description></listheader><item><term> -1</span></span>  
  
 <span data-ttu-id="4aed7-821"></term><description><paramref name="value" /> ist kleiner als 0 (null).</span><span class="sxs-lookup"><span data-stu-id="4aed7-821"></term><description><paramref name="value" /> is less than zero.</span></span>  
  
 <span data-ttu-id="4aed7-822"></description></item><item><term> 0 (null)</span><span class="sxs-lookup"><span data-stu-id="4aed7-822"></description></item><item><term> 0</span></span>  
  
 <span data-ttu-id="4aed7-823"></term><description><paramref name="value" /> ist gleich 0 (null).</span><span class="sxs-lookup"><span data-stu-id="4aed7-823"></term><description><paramref name="value" /> is equal to zero.</span></span>  
  
 <span data-ttu-id="4aed7-824"></description></item><item><term> 1</span><span class="sxs-lookup"><span data-stu-id="4aed7-824"></description></item><item><term> 1</span></span>  
  
 <span data-ttu-id="4aed7-825"></term><description><paramref name="value" /> ist größer als 0 (null).</span><span class="sxs-lookup"><span data-stu-id="4aed7-825"></term><description><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4aed7-826">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Math.Sign%28System.Int16%29> Methode, um zu bestimmen, der die Vorzeichen einer <xref:System.Int16> Wert und der Konsole anzeigt.</span><span class="sxs-lookup"><span data-stu-id="4aed7-826">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Int16%29> method to determine the sign of an <xref:System.Int16> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4aed7-827">Eine Zahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-827">A signed number.</span></span></param>
        <summary><span data-ttu-id="4aed7-828">Gibt eine ganze Zahl zurück, die das Vorzeichen einer ganzen 32-Bit-Zahl mit Vorzeichen angibt.</span><span class="sxs-lookup"><span data-stu-id="4aed7-828">Returns an integer that indicates the sign of a 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="4aed7-829">Eine Zahl, die das Vorzeichen von <paramref name="value" /> angibt, wie in der folgenden Tabelle veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="4aed7-829">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <span data-ttu-id="4aed7-830"><list type="table"><listheader><term> Rückgabewert</span><span class="sxs-lookup"><span data-stu-id="4aed7-830"><list type="table"><listheader><term> Return value</span></span>  
  
 <span data-ttu-id="4aed7-831"></term><description> Bedeutung</span><span class="sxs-lookup"><span data-stu-id="4aed7-831"></term><description> Meaning</span></span>  
  
 <span data-ttu-id="4aed7-832"></description></listheader><item><term> –1</span><span class="sxs-lookup"><span data-stu-id="4aed7-832"></description></listheader><item><term> -1</span></span>  
  
 <span data-ttu-id="4aed7-833"></term><description><paramref name="value" /> ist kleiner als 0 (null).</span><span class="sxs-lookup"><span data-stu-id="4aed7-833"></term><description><paramref name="value" /> is less than zero.</span></span>  
  
 <span data-ttu-id="4aed7-834"></description></item><item><term> 0 (null)</span><span class="sxs-lookup"><span data-stu-id="4aed7-834"></description></item><item><term> 0</span></span>  
  
 <span data-ttu-id="4aed7-835"></term><description><paramref name="value" /> ist gleich 0 (null).</span><span class="sxs-lookup"><span data-stu-id="4aed7-835"></term><description><paramref name="value" /> is equal to zero.</span></span>  
  
 <span data-ttu-id="4aed7-836"></description></item><item><term> 1</span><span class="sxs-lookup"><span data-stu-id="4aed7-836"></description></item><item><term> 1</span></span>  
  
 <span data-ttu-id="4aed7-837"></term><description><paramref name="value" /> ist größer als 0 (null).</span><span class="sxs-lookup"><span data-stu-id="4aed7-837"></term><description><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4aed7-838">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Math.Sign%28System.Int32%29> Methode, um zu bestimmen, der die Vorzeichen einer <xref:System.Int32> Wert und der Konsole anzeigt.</span><span class="sxs-lookup"><span data-stu-id="4aed7-838">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Int32%29> method to determine the sign of an <xref:System.Int32> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Long) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4aed7-839">Eine Zahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-839">A signed number.</span></span></param>
        <summary><span data-ttu-id="4aed7-840">Gibt eine ganze Zahl zurück, die das Vorzeichen einer ganzen 64-Bit-Zahl mit Vorzeichen angibt.</span><span class="sxs-lookup"><span data-stu-id="4aed7-840">Returns an integer that indicates the sign of a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="4aed7-841">Eine Zahl, die das Vorzeichen von <paramref name="value" /> angibt, wie in der folgenden Tabelle veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="4aed7-841">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <span data-ttu-id="4aed7-842"><list type="table"><listheader><term> Rückgabewert</span><span class="sxs-lookup"><span data-stu-id="4aed7-842"><list type="table"><listheader><term> Return value</span></span>  
  
 <span data-ttu-id="4aed7-843"></term><description> Bedeutung</span><span class="sxs-lookup"><span data-stu-id="4aed7-843"></term><description> Meaning</span></span>  
  
 <span data-ttu-id="4aed7-844"></description></listheader><item><term> –1</span><span class="sxs-lookup"><span data-stu-id="4aed7-844"></description></listheader><item><term> -1</span></span>  
  
 <span data-ttu-id="4aed7-845"></term><description><paramref name="value" /> ist kleiner als 0 (null).</span><span class="sxs-lookup"><span data-stu-id="4aed7-845"></term><description><paramref name="value" /> is less than zero.</span></span>  
  
 <span data-ttu-id="4aed7-846"></description></item><item><term> 0 (null)</span><span class="sxs-lookup"><span data-stu-id="4aed7-846"></description></item><item><term> 0</span></span>  
  
 <span data-ttu-id="4aed7-847"></term><description><paramref name="value" /> ist gleich 0 (null).</span><span class="sxs-lookup"><span data-stu-id="4aed7-847"></term><description><paramref name="value" /> is equal to zero.</span></span>  
  
 <span data-ttu-id="4aed7-848"></description></item><item><term> 1</span><span class="sxs-lookup"><span data-stu-id="4aed7-848"></description></item><item><term> 1</span></span>  
  
 <span data-ttu-id="4aed7-849"></term><description><paramref name="value" /> ist größer als 0 (null).</span><span class="sxs-lookup"><span data-stu-id="4aed7-849"></term><description><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4aed7-850">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Math.Sign%28System.Int64%29> Methode, um zu bestimmen, der die Vorzeichen einer <xref:System.Int64> Wert und der Konsole anzeigt.</span><span class="sxs-lookup"><span data-stu-id="4aed7-850">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Int64%29> method to determine the sign of an <xref:System.Int64> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As SByte) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(System::SByte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4aed7-851">Eine Zahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-851">A signed number.</span></span></param>
        <summary><span data-ttu-id="4aed7-852">Gibt eine ganze Zahl zurück, die das Vorzeichen einer ganzen 8-Bit-Zahl mit Vorzeichen angibt.</span><span class="sxs-lookup"><span data-stu-id="4aed7-852">Returns an integer that indicates the sign of an 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="4aed7-853">Eine Zahl, die das Vorzeichen von <paramref name="value" /> angibt, wie in der folgenden Tabelle veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="4aed7-853">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <span data-ttu-id="4aed7-854"><list type="table"><listheader><term> Rückgabewert</span><span class="sxs-lookup"><span data-stu-id="4aed7-854"><list type="table"><listheader><term> Return value</span></span>  
  
 <span data-ttu-id="4aed7-855"></term><description> Bedeutung</span><span class="sxs-lookup"><span data-stu-id="4aed7-855"></term><description> Meaning</span></span>  
  
 <span data-ttu-id="4aed7-856"></description></listheader><item><term> –1</span><span class="sxs-lookup"><span data-stu-id="4aed7-856"></description></listheader><item><term> -1</span></span>  
  
 <span data-ttu-id="4aed7-857"></term><description><paramref name="value" /> ist kleiner als 0 (null).</span><span class="sxs-lookup"><span data-stu-id="4aed7-857"></term><description><paramref name="value" /> is less than zero.</span></span>  
  
 <span data-ttu-id="4aed7-858"></description></item><item><term> 0 (null)</span><span class="sxs-lookup"><span data-stu-id="4aed7-858"></description></item><item><term> 0</span></span>  
  
 <span data-ttu-id="4aed7-859"></term><description><paramref name="value" /> ist gleich 0 (null).</span><span class="sxs-lookup"><span data-stu-id="4aed7-859"></term><description><paramref name="value" /> is equal to zero.</span></span>  
  
 <span data-ttu-id="4aed7-860"></description></item><item><term> 1</span><span class="sxs-lookup"><span data-stu-id="4aed7-860"></description></item><item><term> 1</span></span>  
  
 <span data-ttu-id="4aed7-861"></term><description><paramref name="value" /> ist größer als 0 (null).</span><span class="sxs-lookup"><span data-stu-id="4aed7-861"></term><description><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4aed7-862">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Math.Sign%28System.SByte%29> Methode, um zu bestimmen, der die Vorzeichen einer <xref:System.SByte> Wert und der Konsole anzeigt.</span><span class="sxs-lookup"><span data-stu-id="4aed7-862">The following example demonstrates how to use the <xref:System.Math.Sign%28System.SByte%29> method to determine the sign of an <xref:System.SByte> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Single) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(float value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4aed7-863">Eine Zahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-863">A signed number.</span></span></param>
        <summary><span data-ttu-id="4aed7-864">Gibt eine ganze Zahl zurück, die das Vorzeichen einer Gleitkommazahl mit einfacher Genauigkeit angibt.</span><span class="sxs-lookup"><span data-stu-id="4aed7-864">Returns an integer that indicates the sign of a single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="4aed7-865">Eine Zahl, die das Vorzeichen von <paramref name="value" /> angibt, wie in der folgenden Tabelle veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="4aed7-865">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <span data-ttu-id="4aed7-866"><list type="table"><listheader><term> Rückgabewert</span><span class="sxs-lookup"><span data-stu-id="4aed7-866"><list type="table"><listheader><term> Return value</span></span>  
  
 <span data-ttu-id="4aed7-867"></term><description> Bedeutung</span><span class="sxs-lookup"><span data-stu-id="4aed7-867"></term><description> Meaning</span></span>  
  
 <span data-ttu-id="4aed7-868"></description></listheader><item><term> –1</span><span class="sxs-lookup"><span data-stu-id="4aed7-868"></description></listheader><item><term> -1</span></span>  
  
 <span data-ttu-id="4aed7-869"></term><description><paramref name="value" /> ist kleiner als 0 (null).</span><span class="sxs-lookup"><span data-stu-id="4aed7-869"></term><description><paramref name="value" /> is less than zero.</span></span>  
  
 <span data-ttu-id="4aed7-870"></description></item><item><term> 0 (null)</span><span class="sxs-lookup"><span data-stu-id="4aed7-870"></description></item><item><term> 0</span></span>  
  
 <span data-ttu-id="4aed7-871"></term><description><paramref name="value" /> ist gleich 0 (null).</span><span class="sxs-lookup"><span data-stu-id="4aed7-871"></term><description><paramref name="value" /> is equal to zero.</span></span>  
  
 <span data-ttu-id="4aed7-872"></description></item><item><term> 1</span><span class="sxs-lookup"><span data-stu-id="4aed7-872"></description></item><item><term> 1</span></span>  
  
 <span data-ttu-id="4aed7-873"></term><description><paramref name="value" /> ist größer als 0 (null).</span><span class="sxs-lookup"><span data-stu-id="4aed7-873"></term><description><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4aed7-874">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Math.Sign%28System.Single%29> Methode, um zu bestimmen, der die Vorzeichen einer <xref:System.Single> Wert und der Konsole anzeigt.</span><span class="sxs-lookup"><span data-stu-id="4aed7-874">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Single%29> method to determine the sign of a <xref:System.Single> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArithmeticException">
          <span data-ttu-id="4aed7-875"><paramref name="value" /> ist gleich <see cref="F:System.Single.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="4aed7-875"><paramref name="value" /> is equal to <see cref="F:System.Single.NaN" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sin">
      <MemberSignature Language="C#" Value="public static double Sin (double a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Sin(float64 a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sin(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sin (a As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Sin(double a);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="4aed7-876">Ein im Bogenmaß angegebener Winkel.</span><span class="sxs-lookup"><span data-stu-id="4aed7-876">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="4aed7-877">Gibt den Sinus des angegebenen Winkels zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-877">Returns the sine of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="4aed7-878">Der Sinus von <paramref name="a" />.</span><span class="sxs-lookup"><span data-stu-id="4aed7-878">The sine of <paramref name="a" />.</span></span> <span data-ttu-id="4aed7-879">Wenn <paramref name="a" /> gleich <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> oder <see cref="F:System.Double.PositiveInfinity" /> ist, wird <see cref="F:System.Double.NaN" /> von dieser Methode zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="4aed7-879">If <paramref name="a" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, this method returns <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aed7-880">Der Winkel `a`, im Bogenmaß angegeben werden muss.</span><span class="sxs-lookup"><span data-stu-id="4aed7-880">The angle, `a`, must be in radians.</span></span> <span data-ttu-id="4aed7-881">Multiplizieren von <xref:System.Math.PI?displayProperty=nameWithType>/180, Grad in Bogenmaß konvertiert werden.</span><span class="sxs-lookup"><span data-stu-id="4aed7-881">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
 <span data-ttu-id="4aed7-882">Zulässige Werte von `a` reichen von ungefähr-9223372036854775295 bis ungefähr 9223372036854775295.</span><span class="sxs-lookup"><span data-stu-id="4aed7-882">Acceptable values of `a` range from approximately -9223372036854775295 to approximately 9223372036854775295.</span></span> <span data-ttu-id="4aed7-883">Für Werte außerhalb dieses Bereichs die <xref:System.Math.Sin%2A> -Methode zurückkehrt `a` unverändert, anstatt eine Ausnahme auszulösen.</span><span class="sxs-lookup"><span data-stu-id="4aed7-883">For values outside of this range, the <xref:System.Math.Sin%2A> method returns `a` unchanged rather than throwing an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4aed7-884">Im folgenden Beispiel wird <xref:System.Math.Sin%2A> bestimmte trigonometrischen Identitäten für ausgewählte Winkel ausgewertet.</span><span class="sxs-lookup"><span data-stu-id="4aed7-884">The following example uses <xref:System.Math.Sin%2A> to evaluate certain trigonometric identities for selected angles.</span></span>  
  
 [!code-cpp[System.Math.SinCos#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.SinCos/CPP/sincos.cpp#1)]
 [!code-csharp[System.Math.SinCos#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.SinCos/CS/sincos.cs#1)]
 [!code-vb[System.Math.SinCos#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.SinCos/VB/sincos.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sinh">
      <MemberSignature Language="C#" Value="public static double Sinh (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Sinh(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sinh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sinh (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Sinh(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4aed7-885">Ein im Bogenmaß angegebener Winkel.</span><span class="sxs-lookup"><span data-stu-id="4aed7-885">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="4aed7-886">Gibt den Hyperbelsinus des angegebenen Winkels zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-886">Returns the hyperbolic sine of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="4aed7-887">Der Hyperbelsinus von <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="4aed7-887">The hyperbolic sine of <paramref name="value" />.</span></span> <span data-ttu-id="4aed7-888">Wenn <paramref name="value" /> gleich <see cref="F:System.Double.NegativeInfinity" />, <see cref="F:System.Double.PositiveInfinity" /> oder <see cref="F:System.Double.NaN" /> ist, gibt diese Methode einen <see cref="T:System.Double" /> mit dem Wert <paramref name="value" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-888">If <paramref name="value" /> is equal to <see cref="F:System.Double.NegativeInfinity" />, <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NaN" />, this method returns a <see cref="T:System.Double" /> equal to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aed7-889">Der Winkel `value`, im Bogenmaß angegeben werden muss.</span><span class="sxs-lookup"><span data-stu-id="4aed7-889">The angle, `value`, must be in radians.</span></span> <span data-ttu-id="4aed7-890">Multiplizieren von <xref:System.Math.PI?displayProperty=nameWithType>/180, Grad in Bogenmaß konvertiert werden.</span><span class="sxs-lookup"><span data-stu-id="4aed7-890">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4aed7-891">Im folgenden Beispiel wird <xref:System.Math.Sinh%2A> bestimmte hyperbolischen Identitäten für ausgewählte Werte ausgewertet.</span><span class="sxs-lookup"><span data-stu-id="4aed7-891">The following example uses <xref:System.Math.Sinh%2A> to evaluate certain hyperbolic identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.SinhCosh#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.SinhCosh/CPP/sinhcosh.cpp#1)]
 [!code-csharp[System.Math.SinhCosh#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.SinhCosh/CS/sinhcosh.cs#1)]
 [!code-vb[System.Math.SinhCosh#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.SinhCosh/VB/sinhcosh.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sqrt">
      <MemberSignature Language="C#" Value="public static double Sqrt (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Sqrt(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sqrt(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sqrt (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Sqrt(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="4aed7-892">Die Zahl, deren Quadratwurzel bestimmt werden soll.</span><span class="sxs-lookup"><span data-stu-id="4aed7-892">The number whose square root is to be found.</span></span></param>
        <summary><span data-ttu-id="4aed7-893">Gibt die Quadratwurzel einer angegebenen Zahl zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-893">Returns the square root of a specified number.</span></span></summary>
        <returns><span data-ttu-id="4aed7-894">Einer der Werte aus der folgenden Tabelle.</span><span class="sxs-lookup"><span data-stu-id="4aed7-894">One of the values in the following table.</span></span>  
  
 <span data-ttu-id="4aed7-895"><list type="table"><listheader><term><paramref name="d" /> Parameter</span><span class="sxs-lookup"><span data-stu-id="4aed7-895"><list type="table"><listheader><term><paramref name="d" /> parameter</span></span>  
  
 <span data-ttu-id="4aed7-896"></term><description> Rückgabewert</span><span class="sxs-lookup"><span data-stu-id="4aed7-896"></term><description> Return value</span></span>  
  
 <span data-ttu-id="4aed7-897"></description></listheader><item><term> 0 oder positiv</span><span class="sxs-lookup"><span data-stu-id="4aed7-897"></description></listheader><item><term> Zero or positive</span></span>  
  
 <span data-ttu-id="4aed7-898"></term><description> Die positive Quadratwurzel von <paramref name="d" />.</span><span class="sxs-lookup"><span data-stu-id="4aed7-898"></term><description> The positive square root of <paramref name="d" />.</span></span>  
  
 <span data-ttu-id="4aed7-899"></description></item><item><term> Negativ</span><span class="sxs-lookup"><span data-stu-id="4aed7-899"></description></item><item><term> Negative</span></span>  
  
 <span data-ttu-id="4aed7-900"></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> ist gleich <see cref="F:System.Double.NaN" /></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> ist gleich <see cref="F:System.Double.PositiveInfinity" /></term><description><see cref="F:System.Double.PositiveInfinity" /></description></item></list></span><span class="sxs-lookup"><span data-stu-id="4aed7-900"></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> Equals <see cref="F:System.Double.NaN" /></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> Equals <see cref="F:System.Double.PositiveInfinity" /></term><description><see cref="F:System.Double.PositiveInfinity" /></description></item></list></span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4aed7-901">Die Quadratwurzel des Bereichs eines Quadrats repräsentiert die Länge einer beliebigen Seite des Quadrats.</span><span class="sxs-lookup"><span data-stu-id="4aed7-901">The square root of the area of a square represents the length of any side of the square.</span></span> <span data-ttu-id="4aed7-902">Das folgende Beispiel zeigt den Bereich von einigen Städten in den Vereinigten Staaten und erhalten einen Eindruck von jeden Ort Größe aus, wenn er durch ein Quadrat dargestellt wurden.</span><span class="sxs-lookup"><span data-stu-id="4aed7-902">The following example displays the area of some cities in the United States and gives an impression of each city's size if it were represented by a square.</span></span>  
  
 [!code-csharp[System.Math.Sqrt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.sqrt/cs/sqrt1.cs#1)]
 [!code-vb[System.Math.Sqrt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.sqrt/vb/sqrt1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Math.Pow(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Tan">
      <MemberSignature Language="C#" Value="public static double Tan (double a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Tan(float64 a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Tan(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Tan (a As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Tan(double a);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="4aed7-903">Ein im Bogenmaß angegebener Winkel.</span><span class="sxs-lookup"><span data-stu-id="4aed7-903">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="4aed7-904">Gibt den Tangens des angegebenen Winkels zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-904">Returns the tangent of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="4aed7-905">Der Tangens von <paramref name="a" />.</span><span class="sxs-lookup"><span data-stu-id="4aed7-905">The tangent of <paramref name="a" />.</span></span> <span data-ttu-id="4aed7-906">Wenn <paramref name="a" /> gleich <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> oder <see cref="F:System.Double.PositiveInfinity" /> ist, wird <see cref="F:System.Double.NaN" /> von dieser Methode zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="4aed7-906">If <paramref name="a" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, this method returns <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aed7-907">Der Winkel `a`, im Bogenmaß angegeben werden muss.</span><span class="sxs-lookup"><span data-stu-id="4aed7-907">The angle, `a`, must be in radians.</span></span> <span data-ttu-id="4aed7-908">Multiplizieren von <xref:System.Math.PI?displayProperty=nameWithType>/180, Grad in Bogenmaß konvertiert werden.</span><span class="sxs-lookup"><span data-stu-id="4aed7-908">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4aed7-909">Im folgenden Beispiel wird veranschaulicht, wie berechnet den Tangens eines Winkels und in der Konsole anzeigt.</span><span class="sxs-lookup"><span data-stu-id="4aed7-909">The following example demonstrates how to calculate the tangent of an angle and display it to the console.</span></span>  
  
 [!code-cpp[math.atanx#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.atanx/CPP/atan.cpp#1)]
 [!code-csharp[math.atanx#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.atanx/CS/atan.cs#1)]
 [!code-vb[math.atanx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.atanx/VB/atan.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tanh">
      <MemberSignature Language="C#" Value="public static double Tanh (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Tanh(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Tanh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Tanh (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Tanh(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4aed7-910">Ein im Bogenmaß angegebener Winkel.</span><span class="sxs-lookup"><span data-stu-id="4aed7-910">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="4aed7-911">Gibt den Hyperbeltangens des angegebenen Winkels zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-911">Returns the hyperbolic tangent of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="4aed7-912">Der Hyperbeltangens von <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="4aed7-912">The hyperbolic tangent of <paramref name="value" />.</span></span> <span data-ttu-id="4aed7-913">Wenn <paramref name="value" /> gleich <see cref="F:System.Double.NegativeInfinity" /> ist, gibt diese Methode -1 zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-913">If <paramref name="value" /> is equal to <see cref="F:System.Double.NegativeInfinity" />, this method returns -1.</span></span> <span data-ttu-id="4aed7-914">Wenn "value" gleich <see cref="F:System.Double.PositiveInfinity" /> ist, gibt diese Methode 1 zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-914">If value is equal to <see cref="F:System.Double.PositiveInfinity" />, this method returns 1.</span></span> <span data-ttu-id="4aed7-915">Wenn <paramref name="value" /> gleich <see cref="F:System.Double.NaN" /> ist, gibt diese Methode <see cref="F:System.Double.NaN" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="4aed7-915">If <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />, this method returns <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aed7-916">Der Winkel `value`, im Bogenmaß angegeben werden muss.</span><span class="sxs-lookup"><span data-stu-id="4aed7-916">The angle, `value`, must be in radians.</span></span> <span data-ttu-id="4aed7-917">Multiplizieren von <xref:System.Math.PI?displayProperty=nameWithType>/180, Grad in Bogenmaß konvertiert werden.</span><span class="sxs-lookup"><span data-stu-id="4aed7-917">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4aed7-918">Im folgenden Beispiel wird <xref:System.Math.Tanh%2A> bestimmte hyperbolischen Tangenten Identitäten für ausgewählte Werte ausgewertet.</span><span class="sxs-lookup"><span data-stu-id="4aed7-918">The following example uses <xref:System.Math.Tanh%2A> to evaluate certain hyperbolic tangent identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.Tanh#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.Tanh/CPP/tanh.cpp#1)]
 [!code-csharp[System.Math.Tanh#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Tanh/CS/tanh.cs#1)]
 [!code-vb[System.Math.Tanh#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Tanh/VB/tanh.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Truncate">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4aed7-919">Berechnet den ganzzahligen Teil einer Zahl.</span><span class="sxs-lookup"><span data-stu-id="4aed7-919">Calculates the integral part of a number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aed7-920">Die Zahl wird auf die nächste Ganzzahl in Richtung 0 (null) gerundet.</span><span class="sxs-lookup"><span data-stu-id="4aed7-920">The number is rounded to the nearest integer towards zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Truncate">
      <MemberSignature Language="C#" Value="public static decimal Truncate (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Truncate(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Truncate(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Truncate (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Truncate(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="4aed7-921">Eine abzuschneidende Zahl.</span><span class="sxs-lookup"><span data-stu-id="4aed7-921">A number to truncate.</span></span></param>
        <summary><span data-ttu-id="4aed7-922">Berechnet den ganzzahligen Teil einer angegebenen Dezimalzahl.</span><span class="sxs-lookup"><span data-stu-id="4aed7-922">Calculates the integral part of a specified decimal number.</span></span></summary>
        <returns><span data-ttu-id="4aed7-923">Der ganzzahlige Teil von <paramref name="d" />, d. h, die Zahl, die nach dem Verwerfen der Dezimalstellen übrig bleibt.</span><span class="sxs-lookup"><span data-stu-id="4aed7-923">The integral part of <paramref name="d" />; that is, the number that remains after any fractional digits have been discarded.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aed7-924"><xref:System.Math.Truncate%2A> Rundet `d` auf die nächste Ganzzahl in Richtung 0 (null).</span><span class="sxs-lookup"><span data-stu-id="4aed7-924"><xref:System.Math.Truncate%2A> rounds `d` to the nearest integer towards zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4aed7-925">Im folgenden Beispiel wird die <xref:System.Math.Truncate%28System.Decimal%29> Methode, um eine Positive und Negative truncate <xref:System.Decimal> Wert.</span><span class="sxs-lookup"><span data-stu-id="4aed7-925">The following example calls the <xref:System.Math.Truncate%28System.Decimal%29> method to truncate both a positive and a negative <xref:System.Decimal> value.</span></span>  
  
 [!code-csharp[System.Math.Truncate#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Truncate/cs/Truncate1.cs#2)]
 [!code-vb[System.Math.Truncate#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Truncate/vb/Truncate1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Ceiling(System.Decimal)" />
        <altmember cref="M:System.Math.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Truncate">
      <MemberSignature Language="C#" Value="public static double Truncate (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Truncate(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Truncate(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Truncate (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Truncate(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="4aed7-926">Eine abzuschneidende Zahl.</span><span class="sxs-lookup"><span data-stu-id="4aed7-926">A number to truncate.</span></span></param>
        <summary><span data-ttu-id="4aed7-927">Berechnet den den ganzzahligen Teil einer angegebenen Gleitkommazahl mit doppelter Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="4aed7-927">Calculates the integral part of a specified double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="4aed7-928">Der ganzzahlige Teil von <paramref name="d" />, d. h. die Zahl, die übrig bleibt, wenn alle Dezimalstellen verworfen wurden, oder einer der Werte in der folgenden Tabelle.</span><span class="sxs-lookup"><span data-stu-id="4aed7-928">The integral part of <paramref name="d" />; that is, the number that remains after any fractional digits have been discarded, or one of the values listed in the following table.</span></span>  
  
 <span data-ttu-id="4aed7-929"><list type="table"><listheader><term><paramref name="d" /></term><description> Rückgabewert</span><span class="sxs-lookup"><span data-stu-id="4aed7-929"><list type="table"><listheader><term><paramref name="d" /></term><description> Return value</span></span>  
  
 </description></listheader><item><term><see cref="F:System.Double.NaN" /></term><description><see cref="F:System.Double.NaN" /></description></item><item><term><see cref="F:System.Double.NegativeInfinity" /></term><description><see cref="F:System.Double.NegativeInfinity" /></description></item><item><term><see cref="F:System.Double.PositiveInfinity" /></term><description><see cref="F:System.Double.PositiveInfinity" /></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aed7-930"><xref:System.Math.Truncate%2A> Rundet `d` auf die nächste Ganzzahl in Richtung 0 (null).</span><span class="sxs-lookup"><span data-stu-id="4aed7-930"><xref:System.Math.Truncate%2A> rounds `d` to the nearest integer towards zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4aed7-931">Im folgenden Beispiel wird die <xref:System.Math.Truncate%28System.Double%29> Methode, um eine Positive und Negative truncate <xref:System.Double> Wert.</span><span class="sxs-lookup"><span data-stu-id="4aed7-931">The following example calls the <xref:System.Math.Truncate%28System.Double%29> method to truncate both a positive and a negative <xref:System.Double> value.</span></span>  
  
 [!code-csharp[System.Math.Truncate#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Truncate/cs/Truncate1.cs#1)]
 [!code-vb[System.Math.Truncate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Truncate/vb/Truncate1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
      </Docs>
    </Member>
  </Members>
</Type>