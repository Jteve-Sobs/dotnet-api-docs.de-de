<Type Name="Exception" FullName="System.Exception">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d3cd7feda3f45d855645a0e6ecb699bd9f871df9" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34254660" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Exception : System.Runtime.InteropServices._Exception, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable beforefieldinit Exception extends System.Object implements class System.Runtime.InteropServices._Exception, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Exception" />
  <TypeSignature Language="VB.NET" Value="Public Class Exception&#xA;Implements _Exception, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Exception : System::Runtime::InteropServices::_Exception, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._Exception</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._Exception))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="caf2c-101">Stellt Fehler dar, die beim Ausführen einer Anwendung auftreten.</span>
      <span class="sxs-lookup">
        <span data-stu-id="caf2c-101">Represents errors that occur during application execution.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caf2c-102">Diese Klasse ist die Basisklasse für alle Ausnahmen.</span><span class="sxs-lookup"><span data-stu-id="caf2c-102">This class is the base class for all exceptions.</span></span> <span data-ttu-id="caf2c-103">Wenn ein Fehler auftritt, das System oder der aktuell ausgeführten Anwendung wird gemeldet durch Auslösen einer Ausnahme, die Informationen zum Fehler enthält.</span><span class="sxs-lookup"><span data-stu-id="caf2c-103">When an error occurs, either the system or the currently executing application reports it by throwing an exception that contains information about the error.</span></span> <span data-ttu-id="caf2c-104">Nachdem eine Ausnahme ausgelöst wird, wird sie von der Anwendung oder vom Standardausnahmehandler verarbeitet.</span><span class="sxs-lookup"><span data-stu-id="caf2c-104">After an exception is thrown, it is handled by the application or by the default exception handler.</span></span>  
  
 <span data-ttu-id="caf2c-105">In diesem Abschnitt</span><span class="sxs-lookup"><span data-stu-id="caf2c-105">In this section:</span></span>  
  
 <span data-ttu-id="caf2c-106">[Fehler und Ausnahmen](#Errors) </span><span class="sxs-lookup"><span data-stu-id="caf2c-106">[Errors and exceptions](#Errors) </span></span>  
 <span data-ttu-id="caf2c-107">[Try/Catch-Blöcke](#TryCatch) </span><span class="sxs-lookup"><span data-stu-id="caf2c-107">[Try/catch blocks](#TryCatch) </span></span>  
 <span data-ttu-id="caf2c-108">[Features von Ausnahmetypen](#Features) </span><span class="sxs-lookup"><span data-stu-id="caf2c-108">[Exception type features](#Features) </span></span>  
 <span data-ttu-id="caf2c-109">[Eigenschaften der Ausnahme-Klasse](#Properties) </span><span class="sxs-lookup"><span data-stu-id="caf2c-109">[Exception class properties](#Properties) </span></span>  
 <span data-ttu-id="caf2c-110">[Überlegungen zur Leistung](#Performance) </span><span class="sxs-lookup"><span data-stu-id="caf2c-110">[Performance considerations](#Performance) </span></span>  
 <span data-ttu-id="caf2c-111">[Eine Ausnahme auszulösen erneut.](#Rethrow) </span><span class="sxs-lookup"><span data-stu-id="caf2c-111">[Re-throwing an exception](#Rethrow) </span></span>  
 <span data-ttu-id="caf2c-112">[Standardausnahmen auswählen](#Standard) </span><span class="sxs-lookup"><span data-stu-id="caf2c-112">[Choosing standard exceptions](#Standard) </span></span>  
 [<span data-ttu-id="caf2c-113">Implementieren benutzerdefinierte Ausnahmen</span><span class="sxs-lookup"><span data-stu-id="caf2c-113">Implementing custom exceptions</span></span>](#Custom)  
  
<a name="Errors"></a>   
## <a name="errors-and-exceptions"></a><span data-ttu-id="caf2c-114">Fehler und Ausnahmen</span><span class="sxs-lookup"><span data-stu-id="caf2c-114">Errors and exceptions</span></span>  
 <span data-ttu-id="caf2c-115">Laufzeitfehler können eine Vielzahl von Gründen auftreten.</span><span class="sxs-lookup"><span data-stu-id="caf2c-115">Run-time errors can occur for a variety of reasons.</span></span> <span data-ttu-id="caf2c-116">Allerdings sollten nicht für alle Fehler als Ausnahmen im Code behandelt werden.</span><span class="sxs-lookup"><span data-stu-id="caf2c-116">However, not all errors should be handled as exceptions in your code.</span></span> <span data-ttu-id="caf2c-117">Hier sind einige Arten von Fehlern, die zur Laufzeit und die entsprechenden Methoden auf diese reagieren auftreten können.</span><span class="sxs-lookup"><span data-stu-id="caf2c-117">Here are some categories of errors that can occur at run time and the appropriate ways to respond to them.</span></span>  
  
-   <span data-ttu-id="caf2c-118">**Verwendungsfehler.**</span><span class="sxs-lookup"><span data-stu-id="caf2c-118">**Usage errors.**</span></span> <span data-ttu-id="caf2c-119">Anwendungsfehler stellt einen Fehler in der Programmlogik, die zu einer Ausnahme führen können.</span><span class="sxs-lookup"><span data-stu-id="caf2c-119">A usage error represents an error in program logic that can result in an exception.</span></span> <span data-ttu-id="caf2c-120">Der Fehler sollten jedoch nicht über die Behandlung von Ausnahmen, aber ändern den fehlerhaften Code behandelt werden.</span><span class="sxs-lookup"><span data-stu-id="caf2c-120">However, the error should be addressed not through exception handling but by modifying the faulty code.</span></span> <span data-ttu-id="caf2c-121">Z. B. die Außerkraftsetzung von der <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> Methode im folgenden Beispiel wird vorausgesetzt, dass die `obj` Argument muss immer ungleich Null sein.</span><span class="sxs-lookup"><span data-stu-id="caf2c-121">For example, the override of the <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> method in the following example assumes that the `obj` argument must always be non-null.</span></span>  
  
     [!code-csharp[System.Exception.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/usageerrors1.cs#4)]
     [!code-vb[System.Exception.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/usageerrors1.vb#4)]  
  
     <span data-ttu-id="caf2c-122">Die <xref:System.NullReferenceException> Ausnahme, die Ergebnisse beim `obj` ist `null` kann durch Ändern des Quellcodes So testen Sie explizit für Null-Zeichen vor dem Aufrufen nicht eliminiert werden die <xref:System.Object.Equals%2A?displayProperty=nameWithType> "Override" und dann neu kompilieren.</span><span class="sxs-lookup"><span data-stu-id="caf2c-122">The <xref:System.NullReferenceException> exception that results when `obj` is `null` can be eliminated by modifying the source code to explicitly test for null before calling the <xref:System.Object.Equals%2A?displayProperty=nameWithType> override and then re-compiling.</span></span> <span data-ttu-id="caf2c-123">Das folgende Beispiel enthält den korrigierten Quellcode, die behandelt eine `null` Argument.</span><span class="sxs-lookup"><span data-stu-id="caf2c-123">The following example contains the corrected source code that handles a `null` argument.</span></span>  
  
     [!code-csharp[System.Exception.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/usageerrors2.cs#5)]
     [!code-vb[System.Exception.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/usageerrors2.vb#5)]  
  
     <span data-ttu-id="caf2c-124">Anstatt die Ausnahmebehandlung für Fehler, können Sie die <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> Methode, um Fehler in der Debug-Builds zu identifizieren und die <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> Methode zur Identifizierung von Syntaxfehler in Debugversion und Releaseversion erstellt.</span><span class="sxs-lookup"><span data-stu-id="caf2c-124">Instead of using exception handling for usage errors, you can use the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method to identify usage errors in debug builds, and the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method to identify usage errors in both debug and release builds.</span></span> <span data-ttu-id="caf2c-125">Weitere Informationen finden Sie unter [Assertionen in verwaltetem Code](/visualstudio/debugger/assertions-in-managed-code).</span><span class="sxs-lookup"><span data-stu-id="caf2c-125">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
-   <span data-ttu-id="caf2c-126">**Programmfehler.**</span><span class="sxs-lookup"><span data-stu-id="caf2c-126">**Program errors.**</span></span> <span data-ttu-id="caf2c-127">Ein Programmfehler ist ein Laufzeitfehler auf, die unbedingt vermieden werden kann, fehlerfreien Code zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="caf2c-127">A program error is a run-time error that cannot necessarily be avoided by writing bug-free code.</span></span>  
  
     <span data-ttu-id="caf2c-128">In einigen Fällen kann ein Programmfehler erwartet oder routinemäßige Fehlerzustand wider.</span><span class="sxs-lookup"><span data-stu-id="caf2c-128">In some cases, a program error may reflect an expected or routine error condition.</span></span> <span data-ttu-id="caf2c-129">In diesem Fall empfiehlt es sich um zu vermeiden, verwenden der Ausnahmebehandlung auf die Anwendung Fehler behandeln und stattdessen wiederholen den Vorgang.</span><span class="sxs-lookup"><span data-stu-id="caf2c-129">In this case, you may want to avoid using exception handling to deal with the program error and instead retry the operation.</span></span> <span data-ttu-id="caf2c-130">Z. B. wenn der Benutzer zur Eingabe eines Datums in einem bestimmten Format erwartet wird, Sie können analysieren, die Datumszeichenfolge durch Aufrufen der <xref:System.DateTime.TryParseExact%2A?displayProperty=nameWithType> -Methode, die gibt eine <xref:System.Boolean> Wert, der angibt, ob der Analysevorgang erfolgreich war, anstatt die ,<xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType>-Methode, die löst eine <xref:System.FormatException> -Ausnahme aus, wenn in die Datumszeichenfolge konvertiert werden kann ein <xref:System.DateTime> Wert.</span><span class="sxs-lookup"><span data-stu-id="caf2c-130">For example, if the user is expected to input a date in a particular format, you can parse the date string by calling the <xref:System.DateTime.TryParseExact%2A?displayProperty=nameWithType> method, which returns a <xref:System.Boolean> value that indicates whether the parse operation succeeded, instead of using the <xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> method, which throws a <xref:System.FormatException> exception if the date string cannot be converted to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="caf2c-131">Auf ähnliche Weise, wenn ein Benutzer versucht, eine Datei zu öffnen, die nicht vorhanden ist, Sie können rufen Sie zuerst die <xref:System.IO.File.Exists%2A?displayProperty=nameWithType> -Methode überprüft, ob die Datei vorhanden ist, und wenn es nicht der Fall ist der Benutzer aufgefordert, ob er wünscht, ihn zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="caf2c-131">Similarly, if a user tries to open a file that does not exist, you can first call the <xref:System.IO.File.Exists%2A?displayProperty=nameWithType> method to check whether the file exists and, if it does not, prompt the user whether he or she wants to create it.</span></span>  
  
     <span data-ttu-id="caf2c-132">In anderen Fällen gibt ein Programmfehler einen Unerwarteter Fehlerzustand, der in Ihrem Code behandelt werden können.</span><span class="sxs-lookup"><span data-stu-id="caf2c-132">In other cases, a program error reflects an unexpected error condition that can be handled in your code.</span></span> <span data-ttu-id="caf2c-133">Beispielsweise, selbst wenn Sie sichergestellt haben, um sicherzustellen, dass eine Datei vorhanden ist, kann es gelöscht werden bevor können Sie es öffnen, oder sie ist beschädigt.</span><span class="sxs-lookup"><span data-stu-id="caf2c-133">For example, even if you've checked to ensure that a file exists, it may be deleted before you can open it, or it may be corrupted.</span></span> <span data-ttu-id="caf2c-134">In diesem Fall versuchen, beim Öffnen der Datei durch Instanziierung einer <xref:System.IO.StreamReader> -Objekts oder das Aufrufen der <xref:System.IO.File.Open%2A> Methode Auslösen einer <xref:System.IO.FileNotFoundException> Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="caf2c-134">In that case, trying to open the file by instantiating a <xref:System.IO.StreamReader> object or calling the <xref:System.IO.File.Open%2A> method may throw a <xref:System.IO.FileNotFoundException> exception.</span></span> <span data-ttu-id="caf2c-135">In diesen Fällen sollten Sie die Ausnahmebehandlung zum Beheben des Fehlers verwenden.</span><span class="sxs-lookup"><span data-stu-id="caf2c-135">In these cases, you should use exception handling to recover from the error.</span></span>  
  
-   <span data-ttu-id="caf2c-136">**Systemfehler.**</span><span class="sxs-lookup"><span data-stu-id="caf2c-136">**System failures.**</span></span> <span data-ttu-id="caf2c-137">Aufgrund eines Systemfehlers wird ein Laufzeitfehler auf, die programmgesteuert auf sinnvolle Weise behandelt werden kann.</span><span class="sxs-lookup"><span data-stu-id="caf2c-137">A system failure is a run-time error that cannot be handled programmatically in a meaningful way.</span></span> <span data-ttu-id="caf2c-138">Beispielsweise kann eine beliebige Methode Auslösen einer <xref:System.OutOfMemoryException> -Ausnahme aus, wenn die common Language Runtime keinen zusätzlichen Arbeitsspeicher zuweisen kann.</span><span class="sxs-lookup"><span data-stu-id="caf2c-138">For example, any method can throw an <xref:System.OutOfMemoryException> exception if the common language runtime is unable to allocate additional memory.</span></span> <span data-ttu-id="caf2c-139">Systemfehler werden normalerweise nicht mit der Behandlung von Ausnahmen behandelt.</span><span class="sxs-lookup"><span data-stu-id="caf2c-139">Ordinarily, system failures are not handled by using exception handling.</span></span> <span data-ttu-id="caf2c-140">Stattdessen möglicherweise auf ein Ereignis zu verwenden, z. B. <xref:System.AppDomain.UnhandledException?displayProperty=nameWithType> , und rufen Sie die <xref:System.Environment.FailFast%2A?displayProperty=nameWithType> Methode zum Protokollieren von Ausnahmeinformationen und den Benutzer des Fehlers zu benachrichtigen, bevor die Anwendung beendet wird.</span><span class="sxs-lookup"><span data-stu-id="caf2c-140">Instead, you may be able to use an event such as <xref:System.AppDomain.UnhandledException?displayProperty=nameWithType> and call the <xref:System.Environment.FailFast%2A?displayProperty=nameWithType> method to log exception information and notify the user of the failure before the application terminates.</span></span>  
  
<a name="TryCatch"></a>   
## <a name="trycatch-blocks"></a><span data-ttu-id="caf2c-141">Try/Catch-Blöcke</span><span class="sxs-lookup"><span data-stu-id="caf2c-141">Try/catch blocks</span></span>  
 <span data-ttu-id="caf2c-142">Die common Language Runtime stellt ein Modell zur Ausnahmebehandlung, die auf Basis der Darstellung von Ausnahmen als Objekte und die Trennung von Programmcode und Ausnahmebehandlungscode in `try` Blöcke und `catch` blockiert.</span><span class="sxs-lookup"><span data-stu-id="caf2c-142">The common language runtime provides an exception handling model that is based on the representation of exceptions as objects, and the separation of program code and exception handling code into `try` blocks and `catch` blocks.</span></span> <span data-ttu-id="caf2c-143">Es kann sein, eine oder mehrere `catch` blockiert wird, jeweils einen bestimmten Typ von Ausnahme oder ein Zeilenblock, die entwickelt, um eine spezifischere Ausnahme als einen anderen Block abfangen behandeln soll.</span><span class="sxs-lookup"><span data-stu-id="caf2c-143">There can be one or more `catch` blocks, each designed to handle a particular type of exception, or one block designed to catch a more specific exception than another block.</span></span>  
  
 <span data-ttu-id="caf2c-144">Wenn eine Anwendung Ausnahmen, die während der Ausführung eines Codeblocks Anwendungscode auftreten behandelt, muss der Code platziert werden, innerhalb einer `try` Anweisung aufgerufen, eine `try` Block.</span><span class="sxs-lookup"><span data-stu-id="caf2c-144">If an application handles exceptions that occur during the execution of a block of application code, the code must be placed within a `try` statement and is called a `try` block.</span></span> <span data-ttu-id="caf2c-145">Anwendungscode, der ausgelöste Ausnahmen behandelt eine `try` Block befindet sich innerhalb einer `catch` Anweisung und heißt ein `catch` Block.</span><span class="sxs-lookup"><span data-stu-id="caf2c-145">Application code that handles exceptions thrown by a `try` block is placed within a `catch` statement and is called a `catch` block.</span></span> <span data-ttu-id="caf2c-146">NULL oder mehr `catch` Blöcke zugeordnet sind ein `try` Block, und jedes `catch` -Block enthält einen Filter, der die Arten von Ausnahmen bestimmt es behandelt.</span><span class="sxs-lookup"><span data-stu-id="caf2c-146">Zero or more `catch` blocks are associated with a `try` block, and each `catch` block includes a type filter that determines the types of exceptions it handles.</span></span>  
  
 <span data-ttu-id="caf2c-147">Wenn eine Ausnahme auftritt, eine `try` Block, das System durchsucht die zugeordnete `catch` Blöcke in der Reihenfolge im Anwendungscode, bis er findet eine `catch` Block, der die Ausnahme behandelt.</span><span class="sxs-lookup"><span data-stu-id="caf2c-147">When an exception occurs in a `try` block, the system searches the associated `catch` blocks in the order they appear in application code, until it locates a `catch` block that handles the exception.</span></span> <span data-ttu-id="caf2c-148">Ein `catch` -Block verarbeitet eine Ausnahme vom Typ `T` Wenn Typfilter des Catch-Blockes gibt `T` oder einen Typ, der `T` abgeleitet.</span><span class="sxs-lookup"><span data-stu-id="caf2c-148">A `catch` block handles an exception of type `T` if the type filter of the catch block specifies `T` or any type that `T` derives from.</span></span> <span data-ttu-id="caf2c-149">Das System beendet die Suche nach dem Auffinden der ersten `catch` Block, der die Ausnahme behandelt.</span><span class="sxs-lookup"><span data-stu-id="caf2c-149">The system stops searching after it finds the first `catch` block that handles the exception.</span></span> <span data-ttu-id="caf2c-150">Aus diesem Grund in Anwendungscode eine `catch` Block, einen Typ behandelt, muss angegeben werden, bevor Sie eine `catch` Block, dessen Basistypen behandelt, wie im Beispiel veranschaulicht, die in diesem Abschnitt folgt.</span><span class="sxs-lookup"><span data-stu-id="caf2c-150">For this reason, in application code, a `catch` block that handles a type must be specified before a `catch` block that handles its base types, as demonstrated in the example that follows this section.</span></span> <span data-ttu-id="caf2c-151">Ein CatchBlock, behandelt `System.Exception` letzten angegeben ist.</span><span class="sxs-lookup"><span data-stu-id="caf2c-151">A catch block that handles `System.Exception` is specified last.</span></span>  
  
 <span data-ttu-id="caf2c-152">Wenn keines der `catch` blockiert den aktuellen zugeordnet `try` Block Behandeln der Ausnahme und die aktuelle `try` innerhalb anderer Block geschachtelt ist `try` im aktuellen Aufruf blockiert die `catch` Blöcke, die das nächste zugeordnet Einschließen von `try` Block durchsucht werden.</span><span class="sxs-lookup"><span data-stu-id="caf2c-152">If none of the `catch` blocks associated with the current `try` block handle the exception, and the current `try` block is nested within other `try` blocks in the current call, the `catch` blocks associated with the next enclosing `try` block are searched.</span></span> <span data-ttu-id="caf2c-153">Wenn kein `catch` Block für die Ausnahme gefunden wird, wird das System durchsucht Schachtelungsebenen im aktuellen Aufruf.</span><span class="sxs-lookup"><span data-stu-id="caf2c-153">If no `catch` block for the exception is found, the system searches previous nesting levels in the current call.</span></span> <span data-ttu-id="caf2c-154">Wenn kein `catch` -Block für die Ausnahme im aktuellen Aufruf gefunden wird, die Ausnahme der Aufrufliste übergeben wird und der vorherigen Stapelrahmen gesucht eine `catch` Block, der die Ausnahme behandelt.</span><span class="sxs-lookup"><span data-stu-id="caf2c-154">If no `catch` block for the exception is found in the current call, the exception is passed up the call stack, and the previous stack frame is searched for a `catch` block that handles the exception.</span></span> <span data-ttu-id="caf2c-155">Die Suche der Aufrufliste wird fortgesetzt, bis die Ausnahme behandelt wird oder in der Aufrufliste keine Frames mehr vorhanden.</span><span class="sxs-lookup"><span data-stu-id="caf2c-155">The search of the call stack continues until the exception is handled or until no more frames exist on the call stack.</span></span> <span data-ttu-id="caf2c-156">Wenn am Anfang der Aufrufliste, ohne suchen erreicht ist eine `catch` Block, die Ausnahme, die der Standardausnahmehandler behandelt, verarbeitet sie und die Anwendung beendet wird.</span><span class="sxs-lookup"><span data-stu-id="caf2c-156">If the top of the call stack is reached without finding a `catch` block that handles the exception, the default exception handler handles it and the application terminates.</span></span>  
  
<a name="Features"></a>   
## <a name="exception-type-features"></a><span data-ttu-id="caf2c-157">Features von Ausnahmetypen</span><span class="sxs-lookup"><span data-stu-id="caf2c-157">Exception type features</span></span>  
 <span data-ttu-id="caf2c-158">Ausnahmetypen unterstützen die folgenden Funktionen:</span><span class="sxs-lookup"><span data-stu-id="caf2c-158">Exception types support the following features:</span></span>  
  
-   <span data-ttu-id="caf2c-159">Einem von Menschen lesbaren Text, der den Fehler beschreibt.</span><span class="sxs-lookup"><span data-stu-id="caf2c-159">Human-readable text that describes the error.</span></span> <span data-ttu-id="caf2c-160">Wenn eine Ausnahme auftritt, wird die Common Language Runtime eine Textnachricht verfügbar, um die Benutzer über die Art des Fehlers zu informieren und Aktion wird empfohlen, um das Problem zu beheben.</span><span class="sxs-lookup"><span data-stu-id="caf2c-160">When an exception occurs, the runtime makes a text message available to inform the user of the nature of the error and to suggest action to resolve the problem.</span></span> <span data-ttu-id="caf2c-161">Diese Textnachricht gehalten wird, der <xref:System.Exception.Message%2A> -Eigenschaft des Ausnahmeobjekts.</span><span class="sxs-lookup"><span data-stu-id="caf2c-161">This text message is held in the <xref:System.Exception.Message%2A> property of the exception object.</span></span> <span data-ttu-id="caf2c-162">Während der Erstellung des Ausnahmeobjekts können Sie eine Textzeichenfolge an den Konstruktor aus, um die Details dieser bestimmten Ausnahme beschreiben übergeben.</span><span class="sxs-lookup"><span data-stu-id="caf2c-162">During the creation of the exception object, you can pass a text string to the constructor to describe the details of that particular exception.</span></span> <span data-ttu-id="caf2c-163">Wenn keine Fehler Argument für die Nachricht an den Konstruktor bereitgestellt wird, wird die Standardfehlermeldung verwendet.</span><span class="sxs-lookup"><span data-stu-id="caf2c-163">If no error message argument is supplied to the constructor, the default error message is used.</span></span> <span data-ttu-id="caf2c-164">Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Exception.Message%2A>-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="caf2c-164">For more information, see the <xref:System.Exception.Message%2A> property.</span></span>  
  
-   <span data-ttu-id="caf2c-165">Der Status der Aufrufliste, wenn die Ausnahme ausgelöst wurde.</span><span class="sxs-lookup"><span data-stu-id="caf2c-165">The state of the call stack when the exception was thrown.</span></span> <span data-ttu-id="caf2c-166">Die <xref:System.Exception.StackTrace%2A> Eigenschaft führt eine stapelüberwachung, die verwendet werden kann, um zu bestimmen, wo der Fehler im Code auftritt.</span><span class="sxs-lookup"><span data-stu-id="caf2c-166">The <xref:System.Exception.StackTrace%2A> property carries a stack trace that can be used to determine where the error occurs in the code.</span></span> <span data-ttu-id="caf2c-167">Die stapelüberwachung Listet alle aufgerufenen Methoden und die Zeilennummern in der Quelldatei, in denen die Aufrufe ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="caf2c-167">The stack trace lists all the called methods and the line numbers in the source file where the calls are made.</span></span>  
  
<a name="Properties"></a>   
## <a name="exception-class-properties"></a><span data-ttu-id="caf2c-168">Eigenschaften der Ausnahme-Klasse</span><span class="sxs-lookup"><span data-stu-id="caf2c-168">Exception class properties</span></span>  
 <span data-ttu-id="caf2c-169">Die <xref:System.Exception> Klasse umfasst eine Reihe von Eigenschaften, die den Speicherort der Code, den Typ der Hilfedatei und die Ursache der Ausnahme zu ermitteln: <xref:System.Exception.StackTrace%2A>, <xref:System.Exception.InnerException%2A>, <xref:System.Exception.Message%2A>, <xref:System.Exception.HelpLink%2A>, <xref:System.Exception.HResult%2A>, <xref:System.Exception.Source%2A>, <xref:System.Exception.TargetSite%2A>, und <xref:System.Exception.Data%2A>.</span><span class="sxs-lookup"><span data-stu-id="caf2c-169">The <xref:System.Exception> class includes a number of properties that help identify the code location, the type, the help file, and the reason for the exception: <xref:System.Exception.StackTrace%2A>, <xref:System.Exception.InnerException%2A>, <xref:System.Exception.Message%2A>, <xref:System.Exception.HelpLink%2A>, <xref:System.Exception.HResult%2A>, <xref:System.Exception.Source%2A>, <xref:System.Exception.TargetSite%2A>, and <xref:System.Exception.Data%2A>.</span></span>  
  
 <span data-ttu-id="caf2c-170">Wenn eine kausale Beziehung zwischen zwei oder mehr Ausnahmen besteht die <xref:System.Exception.InnerException%2A> Eigenschaft verwaltet diese Informationen.</span><span class="sxs-lookup"><span data-stu-id="caf2c-170">When a causal relationship exists between two or more exceptions, the <xref:System.Exception.InnerException%2A> property maintains this information.</span></span> <span data-ttu-id="caf2c-171">Die äußere Ausnahme wird als Antwort auf diese innere Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="caf2c-171">The outer exception is thrown in response to this inner exception.</span></span> <span data-ttu-id="caf2c-172">Der Code, der die äußeren Ausnahme behandelt kann die Informationen über die innere Ausnahme verwenden, um den Fehler besser zu behandeln.</span><span class="sxs-lookup"><span data-stu-id="caf2c-172">The code that handles the outer exception can use the information from the earlier inner exception to handle the error more appropriately.</span></span> <span data-ttu-id="caf2c-173">Zusätzliche Informationen über die Ausnahme kann gespeichert werden, als eine Auflistung von Schlüssel/Wert-Paare in der <xref:System.Exception.Data%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="caf2c-173">Supplementary information about the exception can be stored as a collection of key/value pairs in the <xref:System.Exception.Data%2A> property.</span></span>  
  
 <span data-ttu-id="caf2c-174">Die Zeichenfolge der Fehlermeldung, die an den Konstruktor, während der Erstellung des Ausnahmeobjekts übergeben wird lokalisiert werden soll, und aus einer Ressourcendatei angegeben werden, mithilfe der <xref:System.Resources.ResourceManager> Klasse.</span><span class="sxs-lookup"><span data-stu-id="caf2c-174">The error message string that is passed to the constructor during the creation of the exception object should be localized and can be supplied from a resource file by using the <xref:System.Resources.ResourceManager> class.</span></span> <span data-ttu-id="caf2c-175">Weitere Informationen über lokalisierte Ressourcen finden Sie unter der [Erstellen von Satellitenassemblys](~/docs/framework/resources/creating-satellite-assemblies-for-desktop-apps.md) und [Verpacken und Bereitstellen von Ressourcen](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md) Themen.</span><span class="sxs-lookup"><span data-stu-id="caf2c-175">For more information about localized resources, see the [Creating Satellite Assemblies](~/docs/framework/resources/creating-satellite-assemblies-for-desktop-apps.md) and [Packaging and Deploying Resources](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md) topics.</span></span>  
  
 <span data-ttu-id="caf2c-176">Ausführliche Informationen zur Ursache der Ausnahme bereitstellen, den Benutzer die <xref:System.Exception.HelpLink%2A> Eigenschaft kann eine URL (oder URN) zu einer Hilfedatei enthalten.</span><span class="sxs-lookup"><span data-stu-id="caf2c-176">To provide the user with extensive information about why the exception occurred, the <xref:System.Exception.HelpLink%2A> property can hold a URL (or URN) to a help file.</span></span>  
  
 <span data-ttu-id="caf2c-177">Die <xref:System.Exception> Klasse verwendet HRESULT COR_E_EXCEPTION mit den Wert 0 x 80131500.</span><span class="sxs-lookup"><span data-stu-id="caf2c-177">The <xref:System.Exception> class uses the HRESULT COR_E_EXCEPTION, which has the value 0x80131500.</span></span>  
  
 <span data-ttu-id="caf2c-178">Eine Liste der anfänglichen Eigenschaftenwerte für eine Instanz von der <xref:System.Exception> Klasse, finden Sie unter der <xref:System.Exception.%23ctor%2A> Konstruktoren.</span><span class="sxs-lookup"><span data-stu-id="caf2c-178">For a list of initial property values for an instance of the <xref:System.Exception> class, see the <xref:System.Exception.%23ctor%2A> constructors.</span></span>  
  
<a name="Performance"></a>   
## <a name="performance-considerations"></a><span data-ttu-id="caf2c-179">Überlegungen zur Leistung</span><span class="sxs-lookup"><span data-stu-id="caf2c-179">Performance considerations</span></span>  
 <span data-ttu-id="caf2c-180">Das Auslösen und die Behandlung von Ausnahmen nutzt eine beträchtliche Menge an Systemressourcen und Ausführungszeit.</span><span class="sxs-lookup"><span data-stu-id="caf2c-180">Throwing or handling an exception consumes a significant amount of system resources and execution time.</span></span> <span data-ttu-id="caf2c-181">Lösen Sie Ausnahmen nur um tatsächlich außergewöhnlicher Bedingungen, nicht um vorhersagbare Ereignisse behandeln oder die flusssteuerung zu behandeln.</span><span class="sxs-lookup"><span data-stu-id="caf2c-181">Throw exceptions only to handle truly extraordinary conditions, not to handle predictable events or flow control.</span></span> <span data-ttu-id="caf2c-182">In einigen Fällen, z. B. Wenn Sie eine Klassenbibliothek, entwickeln, ist es beispielsweise sinnvoll, eine Ausnahme auslöst, wenn das Argument für eine Methode ungültig ist, da Sie erwarten, dass die Methode, die mit gültigen Parametern aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="caf2c-182">For example, in some cases, such as when you're developing a class library, it's reasonable to throw an exception if a method argument is invalid, because you expect your method to be called with valid parameters.</span></span> <span data-ttu-id="caf2c-183">Ungültige Methodenargument, bedeutet ist er nicht das Ergebnis eines verwendungsfehlers, dass etwas außergewöhnliches aufgetreten ist.</span><span class="sxs-lookup"><span data-stu-id="caf2c-183">An invalid method argument, if it is not the result of a usage error, means that something extraordinary has occurred.</span></span> <span data-ttu-id="caf2c-184">Im Gegensatz dazu keine Ausnahme ausgelöst wenn Benutzereingaben ungültig ist, da Sie Benutzer gelegentlich ungültige Daten eingeben erwarten können.</span><span class="sxs-lookup"><span data-stu-id="caf2c-184">Conversely, do not throw an exception if user input is invalid, because you can expect users to occasionally enter invalid data.</span></span> <span data-ttu-id="caf2c-185">Stattdessen geben Sie einen Wiederholungsmechanismus, damit Benutzer eine gültige Eingabe eingeben können.</span><span class="sxs-lookup"><span data-stu-id="caf2c-185">Instead, provide a retry mechanism so users can enter valid input.</span></span> <span data-ttu-id="caf2c-186">Noch sollten Sie Ausnahmen verwenden, um Fehler zu behandeln.</span><span class="sxs-lookup"><span data-stu-id="caf2c-186">Nor should you use exceptions to handle usage errors.</span></span> <span data-ttu-id="caf2c-187">Verwenden Sie stattdessen [Assertionen](/visualstudio/debugger/assertions-in-managed-code) zu identifizieren und beheben Fehler.</span><span class="sxs-lookup"><span data-stu-id="caf2c-187">Instead, use [assertions](/visualstudio/debugger/assertions-in-managed-code) to identify and correct usage errors.</span></span>  
  
 <span data-ttu-id="caf2c-188">Darüber hinaus keine Ausnahme ausgelöst, wenn ein Rückgabecode ausreichend ist; Konvertieren Sie einen Rückgabecode nicht auf eine Ausnahme. und bewirken nicht routinemäßig Catch eine Ausnahme, ignorieren Sie ihn, und klicken Sie dann die Verarbeitung fortgesetzt.</span><span class="sxs-lookup"><span data-stu-id="caf2c-188">In addition, do not throw an exception when a return code is sufficient; do not convert a return code to an exception; and do not routinely catch an exception, ignore it, and then continue processing.</span></span>  
  
<a name="Rethrow"></a>   
## <a name="re-throwing-an-exception"></a><span data-ttu-id="caf2c-189">Erneutes Auslösen einer Ausnahme</span><span class="sxs-lookup"><span data-stu-id="caf2c-189">Re-throwing an exception</span></span>  
 <span data-ttu-id="caf2c-190">In vielen Fällen möchte ein Ausnahmehandler einfach die Ausnahme an den Aufrufer übergeben.</span><span class="sxs-lookup"><span data-stu-id="caf2c-190">In many cases, an exception handler simply wants to pass the exception on to the caller.</span></span> <span data-ttu-id="caf2c-191">Dieses Verfahren kommt besonders häufig:</span><span class="sxs-lookup"><span data-stu-id="caf2c-191">This most often occurs in:</span></span>  
  
-   <span data-ttu-id="caf2c-192">Eine Klassenbibliothek, die wiederum Aufrufe von Methoden in der .NET Framework-Klassenbibliothek oder anderen Klassenbibliotheken umschließt.</span><span class="sxs-lookup"><span data-stu-id="caf2c-192">A class library that in turn wraps calls to methods in the .NET Framework class library or other class libraries.</span></span>  
  
-   <span data-ttu-id="caf2c-193">Eine Anwendung oder eine Bibliothek, die eine schwerwiegende Ausnahme festgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="caf2c-193">An application or library that encounters a fatal exception.</span></span> <span data-ttu-id="caf2c-194">Der Ausnahmehandler kann die Ausnahme protokollieren und die Ausnahme erneut auslösen.</span><span class="sxs-lookup"><span data-stu-id="caf2c-194">The exception handler can log the exception and then re-throw the exception.</span></span>  
  
 <span data-ttu-id="caf2c-195">Die empfohlene Methode eine Ausnahme erneut ausgelöst wird, verwenden Sie einfach die [auslösen](~/docs/csharp/language-reference/keywords/throw.md) -Anweisung in c# und die [auslösen](~/docs/visual-basic/language-reference/statements/throw-statement.md) -Anweisung in Visual Basic, ohne einen Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="caf2c-195">The recommended way to re-throw an exception is to simply use the [throw](~/docs/csharp/language-reference/keywords/throw.md) statement in C# and the [Throw](~/docs/visual-basic/language-reference/statements/throw-statement.md) statement in Visual Basic without including an expression.</span></span> <span data-ttu-id="caf2c-196">Dadurch wird sichergestellt, dass alle Aufruflisteninformationen beibehalten wird, wenn die Ausnahme an den Aufrufer weitergegeben wird.</span><span class="sxs-lookup"><span data-stu-id="caf2c-196">This ensures that all call stack information is preserved when the exception is propagated to the caller.</span></span> <span data-ttu-id="caf2c-197">Dies wird anhand des folgenden Beispiels veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="caf2c-197">The following example illustrates this.</span></span> <span data-ttu-id="caf2c-198">Eine Erweiterungsmethode Zeichenfolge `FindOccurrences`, dient als Wrapper für eine oder mehrere Aufrufe von <xref:System.String.IndexOf%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> ohne Argumente im Vorfeld zu überprüfen.</span><span class="sxs-lookup"><span data-stu-id="caf2c-198">A string extension method, `FindOccurrences`, wraps one or more calls to <xref:System.String.IndexOf%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> without validating its arguments beforehand.</span></span>  
  
 [!code-csharp[System.Exception.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/rethrow1.cs#6)]
 [!code-vb[System.Exception.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/rethrow1.vb#6)]  
  
 <span data-ttu-id="caf2c-199">Ein Aufrufer ruft dann `FindOccurrences` zweimal.</span><span class="sxs-lookup"><span data-stu-id="caf2c-199">A caller then calls `FindOccurrences` twice.</span></span> <span data-ttu-id="caf2c-200">Im zweiten Aufruf `FindOccurrences`, der Aufrufer übergibt eine `null` als die zu suchende Zeichenfolge, welche Fälle der <xref:System.String.IndexOf%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> -Methode auslöst ein <xref:System.ArgumentNullException> Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="caf2c-200">In the second call to `FindOccurrences`, the caller passes a `null` as the search string, which cases the <xref:System.String.IndexOf%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> method to throw an <xref:System.ArgumentNullException> exception.</span></span> <span data-ttu-id="caf2c-201">Diese Ausnahme erfolgt durch die `FindOccurrences` -Methode und übergebene zurück an den Aufrufer.</span><span class="sxs-lookup"><span data-stu-id="caf2c-201">This exception is handled by the `FindOccurrences` method and passed back to the caller.</span></span> <span data-ttu-id="caf2c-202">Da die Throw-Anweisung ohne Ausdruck verwendet wird, zeigt die Ausgabe des Beispiels an, dass die Aufrufliste beibehalten wird.</span><span class="sxs-lookup"><span data-stu-id="caf2c-202">Because the throw statement is used with no expression, the output from the example shows that the call stack is preserved.</span></span>  
  
 [!code-csharp[System.Exception.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/rethrow1.cs#7)]
 [!code-vb[System.Exception.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/rethrow1.vb#7)]  
  
 <span data-ttu-id="caf2c-203">Im Gegensatz dazu wird die Ausnahme erneut mit ausgelöst wird die</span><span class="sxs-lookup"><span data-stu-id="caf2c-203">In contrast, if the exception is re-thrown by using the</span></span>  
  
```csharp  
throw e  
```  
  
```vb  
Throw e  
```  
  
 <span data-ttu-id="caf2c-204">die vollständige Aufrufliste-Anweisung wird nicht beibehalten, und das Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="caf2c-204">statement, the full call stack is not preserved, and the example would generate the following output:</span></span>  
  
```Output  
  
'a' occurs at the following character positions: 4, 7, 15  
  
An exception (ArgumentNullException) occurred.  
Message:  
   Value cannot be null.  
Parameter name: value  
  
Stack Trace:  
      at Library.FindOccurrences(String s, String f)  
   at Example.Main()  
  
```  
  
 <span data-ttu-id="caf2c-205">Eine Alternative etwas komplizierter ist eine neue Ausnahme ausgelöst und die ursprüngliche Ausnahme Aufruflisteninformationen in eine interne Ausnahme beibehalten.</span><span class="sxs-lookup"><span data-stu-id="caf2c-205">A slightly more cumbersome alternative is to throw a new exception, and to preserve the original exception's call stack information in an inner exception.</span></span> <span data-ttu-id="caf2c-206">Der Aufrufer können Sie der neuen Ausnahme <xref:System.Exception.InnerException%2A> abzurufende Stapelrahmen und andere Informationen über die ursprüngliche Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="caf2c-206">The caller can then use the new exception's <xref:System.Exception.InnerException%2A> property to retrieve stack frame and other information about the original exception.</span></span> <span data-ttu-id="caf2c-207">In diesem Fall wird die Throw-Anweisung aus:</span><span class="sxs-lookup"><span data-stu-id="caf2c-207">In this case, the throw statement is:</span></span>  
  
 [!code-csharp[System.Exception.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/rethrow3.cs#8)]
 [!code-vb[System.Exception.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/rethrow3.vb#8)]  
  
 <span data-ttu-id="caf2c-208">Der Benutzercode, der die Ausnahme behandelt hat, zu wissen, dass die <xref:System.Exception.InnerException%2A> Eigenschaft enthält Informationen über die ursprüngliche Ausnahme an, wie die folgenden Ausnahmehandler veranschaulicht wird.</span><span class="sxs-lookup"><span data-stu-id="caf2c-208">The user code that handles the exception has to know that the <xref:System.Exception.InnerException%2A> property contains information about the original exception, as the following exception handler illustrates.</span></span>  
  
 [!code-csharp[System.Exception.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/rethrow3.cs#9)]
 [!code-vb[System.Exception.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/rethrow3.vb#9)]  
  
<a name="Standard"></a>   
## <a name="choosing-standard-exceptions"></a><span data-ttu-id="caf2c-209">Standardausnahmen auswählen</span><span class="sxs-lookup"><span data-stu-id="caf2c-209">Choosing standard exceptions</span></span>  
 <span data-ttu-id="caf2c-210">Sie müssen eine Ausnahme auslöst, können Sie häufig einen vorhandenen Ausnahmetyp in .NET Framework statt Implementieren einer benutzerdefinierten Ausnahme ein.</span><span class="sxs-lookup"><span data-stu-id="caf2c-210">When you have to throw an exception, you can often use an existing exception type in the .NET Framework instead of implementing a custom exception.</span></span> <span data-ttu-id="caf2c-211">Verwenden Sie einen standard Ausnahmetyp unter diesen zwei Bedingungen:</span><span class="sxs-lookup"><span data-stu-id="caf2c-211">You should use a standard exception type under these two conditions:</span></span>  
  
-   <span data-ttu-id="caf2c-212">Sie sind eine Ausnahme, die durch einen Syntaxfehler verursacht wird (d. h. durch einen Fehler in der Programmlogik, die durch die Methode aufrufen Entwickler vorgenommen).</span><span class="sxs-lookup"><span data-stu-id="caf2c-212">You are throwing an exception that is caused by a usage error (that is, by an error in program logic made by the developer who is calling your method).</span></span> <span data-ttu-id="caf2c-213">In der Regel Sie eine Auslösung ausgeben würde z. B. <xref:System.ArgumentException>, <xref:System.ArgumentNullException>, <xref:System.InvalidOperationException>, oder <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="caf2c-213">Typically, you would throw an exception such as <xref:System.ArgumentException>, <xref:System.ArgumentNullException>, <xref:System.InvalidOperationException>, or <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="caf2c-214">Die Zeichenfolge, die Sie für das Ausnahmeobjekt-Konstruktor angeben, wenn instanziieren das Ausnahmeobjekt, das den Fehler beschreiben sollten, sodass der Entwickler sie diesen Fehler beheben kann.</span><span class="sxs-lookup"><span data-stu-id="caf2c-214">The string you supply to the exception object's constructor when instantiating the exception object should describe the error so that the developer can fix it.</span></span> <span data-ttu-id="caf2c-215">Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Exception.Message%2A>-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="caf2c-215">For more information, see the <xref:System.Exception.Message%2A> property.</span></span>  
  
-   <span data-ttu-id="caf2c-216">Sie sind einen Fehler behandeln, der an den Aufrufer mit einer vorhandenen .NET Framework-Ausnahme mitgeteilt werden kann.</span><span class="sxs-lookup"><span data-stu-id="caf2c-216">You are handling an error that can be communicated to the caller with an existing .NET Framework exception.</span></span> <span data-ttu-id="caf2c-217">Sie sollten die am stärksten abgeleitete mögliche Ausnahme auslösen.</span><span class="sxs-lookup"><span data-stu-id="caf2c-217">You should throw the most derived exception possible.</span></span> <span data-ttu-id="caf2c-218">Z. B. wenn eine Methode ein Argument ist ein gültiges Mitglied eines Enumerationstyps erforderlich ist, lösen Sie eine <xref:System.ComponentModel.InvalidEnumArgumentException> (am meisten abgeleitete Klasse) anstelle einer <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="caf2c-218">For example, if a method requires an argument to be a valid member of an enumeration type, you should throw an <xref:System.ComponentModel.InvalidEnumArgumentException> (the most derived class) rather than an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="caf2c-219">Die folgende Tabelle enthält allgemeine Ausnahmetypen und die Bedingungen, unter denen Sie diese auslösen würde.</span><span class="sxs-lookup"><span data-stu-id="caf2c-219">The following table lists common exception types and the conditions under which you would throw them.</span></span>  
  
|<span data-ttu-id="caf2c-220">Ausnahme</span><span class="sxs-lookup"><span data-stu-id="caf2c-220">Exception</span></span>|<span data-ttu-id="caf2c-221">Bedingung</span><span class="sxs-lookup"><span data-stu-id="caf2c-221">Condition</span></span>|  
|---------------|---------------|  
|<xref:System.ArgumentException>|<span data-ttu-id="caf2c-222">Ein nicht-Null-Argument, das an eine Methode übergeben wird, ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="caf2c-222">A non-null argument that is passed to a method is invalid.</span></span>|  
|<xref:System.ArgumentNullException>|<span data-ttu-id="caf2c-223">Ein Argument, das an eine Methode übergeben wird, ist `null`.</span><span class="sxs-lookup"><span data-stu-id="caf2c-223">An argument that is passed to a method is `null`.</span></span>|  
|<xref:System.ArgumentOutOfRangeException>|<span data-ttu-id="caf2c-224">Ein Argument liegt außerhalb des Bereichs der gültigen Werte.</span><span class="sxs-lookup"><span data-stu-id="caf2c-224">An argument is outside the range of valid values.</span></span>|  
|<xref:System.IO.DirectoryNotFoundException>|<span data-ttu-id="caf2c-225">Teil einen Verzeichnispfad ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="caf2c-225">Part of a directory path is not valid.</span></span>|  
|<xref:System.DivideByZeroException>|<span data-ttu-id="caf2c-226">Der Nenner in eine ganze Zahl oder <xref:System.Decimal> Divisionsvorgang ist 0 (null).</span><span class="sxs-lookup"><span data-stu-id="caf2c-226">The denominator in an integer or <xref:System.Decimal> division operation is zero.</span></span>|  
|<xref:System.IO.DriveNotFoundException>|<span data-ttu-id="caf2c-227">Ein Laufwerk ist nicht verfügbar oder nicht vorhanden.</span><span class="sxs-lookup"><span data-stu-id="caf2c-227">A drive is unavailable or does not exist.</span></span>|  
|<xref:System.IO.FileNotFoundException>|<span data-ttu-id="caf2c-228">Eine Datei ist nicht vorhanden.</span><span class="sxs-lookup"><span data-stu-id="caf2c-228">A file does not exist.</span></span>|  
|<xref:System.FormatException>|<span data-ttu-id="caf2c-229">Ein Wert ist kein geeignetes Format aus einer Zeichenfolge durch eine Konvertierungsmethode wie z. B. wechselkursmeasure `Parse`.</span><span class="sxs-lookup"><span data-stu-id="caf2c-229">A value is not in an appropriate format to be converted from a string by a conversion method such as `Parse`.</span></span>|  
|<xref:System.IndexOutOfRangeException>|<span data-ttu-id="caf2c-230">Ein Index ist außerhalb des gültigen Bereichs eines Arrays oder einer Auflistung.</span><span class="sxs-lookup"><span data-stu-id="caf2c-230">An index is outside the bounds of an array or collection.</span></span>|  
|<xref:System.InvalidOperationException>|<span data-ttu-id="caf2c-231">Ein Methodenaufruf ist im aktuellen Zustand des Objekts ungültig.</span><span class="sxs-lookup"><span data-stu-id="caf2c-231">A method call is invalid in an object's current state.</span></span>|  
|<xref:System.Collections.Generic.KeyNotFoundException>|<span data-ttu-id="caf2c-232">Der angegebene Schlüssel für den Zugriff auf ein Element in einer Auflistung kann nicht gefunden werden.</span><span class="sxs-lookup"><span data-stu-id="caf2c-232">The specified key for accessing a member in a collection cannot be found.</span></span>|  
|<xref:System.NotImplementedException>|<span data-ttu-id="caf2c-233">Eine Methode oder Operation ist nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="caf2c-233">A method or operation is not implemented.</span></span>|  
|<xref:System.NotSupportedException>|<span data-ttu-id="caf2c-234">Eine Methode oder Operation wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="caf2c-234">A method or operation is not supported.</span></span>|  
|<xref:System.ObjectDisposedException>|<span data-ttu-id="caf2c-235">Für ein Objekt, das verworfen wurde, wird ein Vorgang ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="caf2c-235">An operation is performed on an object that has been disposed.</span></span>|  
|<xref:System.OverflowException>|<span data-ttu-id="caf2c-236">Ein Arithmetik-, Umwandlungs- oder Konvertierungsvorgang führt zu einem Überlauf.</span><span class="sxs-lookup"><span data-stu-id="caf2c-236">An arithmetic, casting, or conversion operation results in an overflow.</span></span>|  
|<xref:System.IO.PathTooLongException>|<span data-ttu-id="caf2c-237">Ein Pfad oder Dateiname überschreitet die maximale Länge für den systemdefinierten.</span><span class="sxs-lookup"><span data-stu-id="caf2c-237">A path or file name exceeds the maximum system-defined length.</span></span>|  
|<xref:System.PlatformNotSupportedException>|<span data-ttu-id="caf2c-238">Der Vorgang wird auf der aktuellen Plattform nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="caf2c-238">The operation is not supported on the current platform.</span></span>|  
|<xref:System.RankException>|<span data-ttu-id="caf2c-239">Es wird ein Array mit der falschen Anzahl von Dimensionen an eine Methode übergeben.</span><span class="sxs-lookup"><span data-stu-id="caf2c-239">An array with the wrong number of dimensions is passed to a method.</span></span>|  
|<xref:System.TimeoutException>|<span data-ttu-id="caf2c-240">Das Zeitintervall für einen Vorgang vorgesehene ist abgelaufen.</span><span class="sxs-lookup"><span data-stu-id="caf2c-240">The time interval allotted to an operation has expired.</span></span>|  
|<xref:System.UriFormatException>|<span data-ttu-id="caf2c-241">Ein ungültiger Uniform Resource Identifier (URI) wird verwendet.</span><span class="sxs-lookup"><span data-stu-id="caf2c-241">An invalid Uniform Resource Identifier (URI) is used.</span></span>|  
  
<a name="Custom"></a>   
## <a name="implementing-custom-exceptions"></a><span data-ttu-id="caf2c-242">Implementieren benutzerdefinierte Ausnahmen</span><span class="sxs-lookup"><span data-stu-id="caf2c-242">Implementing custom exceptions</span></span>  
 <span data-ttu-id="caf2c-243">In den folgenden Fällen ist das Verwenden einer vorhandenen .NET Framework-Ausnahme behandeln eine fehlerbedingung nicht ausreichend:</span><span class="sxs-lookup"><span data-stu-id="caf2c-243">In the following cases, using an existing .NET Framework exception to handle an error condition is not adequate:</span></span>  
  
-   <span data-ttu-id="caf2c-244">Wenn die Ausnahme eine eindeutige Programmfehlern angibt, die eine vorhandene .NET Framework-Ausnahme zugeordnet werden kann.</span><span class="sxs-lookup"><span data-stu-id="caf2c-244">When the exception reflects a unique program error that cannot be mapped to an existing .NET Framework exception.</span></span>  
  
-   <span data-ttu-id="caf2c-245">Wenn die Ausnahme behandeln, die von der Bearbeitung unterscheidet, die für eine vorhandene .NET Framework-Ausnahme oder die Ausnahme eignet erfordert muss über eine ähnliche Ausnahme eindeutig gemacht werden.</span><span class="sxs-lookup"><span data-stu-id="caf2c-245">When the exception requires handling that is different from the handling that is appropriate for an existing .NET Framework exception, or the exception must be disambiguated from a similar exception.</span></span> <span data-ttu-id="caf2c-246">Angenommen, Sie löst eine <xref:System.ArgumentOutOfRangeException> -Ausnahme aus, wenn die numerische Darstellung einer Zeichenfolge zu analysieren, die außerhalb des gültigen Bereichs des ganzzahligen Zieltyps ist, Sie möchten nicht die gleiche Ausnahme bei einem Fehler verwenden, die vom Aufrufer keine Angabe der entsprechende Werte eingeschränkt, beim Aufrufen der Methode.</span><span class="sxs-lookup"><span data-stu-id="caf2c-246">For example, if you throw an <xref:System.ArgumentOutOfRangeException> exception when parsing the numeric representation of a string that is out of range of the target integral type, you would not want to use the same exception for an error that results from the caller not supplying the appropriate constrained values when calling the method.</span></span>  
  
 <span data-ttu-id="caf2c-247">Die <xref:System.Exception> Klasse ist die Basisklasse für alle Ausnahmen in .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="caf2c-247">The <xref:System.Exception> class is the base class of all exceptions in the .NET Framework.</span></span> <span data-ttu-id="caf2c-248">Viele abgeleitete Klassen die geerbte Verhalten der Elemente verwenden, die <xref:System.Exception> -Klasse überschreiben sie nicht die Mitglieder der <xref:System.Exception>, und definieren sie speziellen Elemente.</span><span class="sxs-lookup"><span data-stu-id="caf2c-248">Many derived classes rely on the inherited behavior of the members of the <xref:System.Exception> class; they do not override the members of <xref:System.Exception>, nor do they define any unique members.</span></span>  
  
 <span data-ttu-id="caf2c-249">So definieren Sie Ihre eigene Ausnahmeklasse</span><span class="sxs-lookup"><span data-stu-id="caf2c-249">To define your own exception class:</span></span>  
  
1.  <span data-ttu-id="caf2c-250">Definieren Sie eine Klasse, die von erben <xref:System.Exception>.</span><span class="sxs-lookup"><span data-stu-id="caf2c-250">Define a class that inherits from <xref:System.Exception>.</span></span> <span data-ttu-id="caf2c-251">Falls notwendig, definieren Sie speziellen Elemente von Ihrer Klasse benötigt wird, um zusätzliche Informationen zur Ausnahme bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="caf2c-251">If necessary, define any unique members needed by your class to provide additional information about the exception.</span></span> <span data-ttu-id="caf2c-252">Z. B. die <xref:System.ArgumentException> Klasse enthält eine <xref:System.ArgumentException.ParamName%2A> Eigenschaft, die den Namen des Parameters angibt, deren Argument der Ausnahme verursacht hat, und die <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> Eigenschaft enthält eine <xref:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout%2A> Eigenschaft, die das Timeoutintervall angibt.</span><span class="sxs-lookup"><span data-stu-id="caf2c-252">For example, the <xref:System.ArgumentException> class includes a <xref:System.ArgumentException.ParamName%2A> property that specifies the name of the parameter whose argument caused the exception, and the <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> property includes a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout%2A> property that indicates the time-out interval.</span></span>  
  
2.  <span data-ttu-id="caf2c-253">Überschreiben Sie ggf. alle geerbten Member, deren Funktionalität, die Sie ändern möchten.</span><span class="sxs-lookup"><span data-stu-id="caf2c-253">If necessary, override any inherited members whose functionality you want to change or modify.</span></span> <span data-ttu-id="caf2c-254">Beachten Sie, dass die meisten vorhandenen Klassen von abgeleitete <xref:System.Exception> nicht das Verhalten des geerbten Member überschreiben.</span><span class="sxs-lookup"><span data-stu-id="caf2c-254">Note that most existing derived classes of <xref:System.Exception> do not override the behavior of inherited members.</span></span>  
  
3.  <span data-ttu-id="caf2c-255">Bestimmen Sie, ob Ihre benutzerdefinierten Ausnahme ein Objekt serialisierbar ist.</span><span class="sxs-lookup"><span data-stu-id="caf2c-255">Determine whether your custom exception object is serializable.</span></span> <span data-ttu-id="caf2c-256">Serialisierung ermöglicht Ihnen das Speichern von Informationen über die Ausnahme und Ausnahmeinformationen in einem Remoting-Kontext durch einen Server und einem Clientproxy freigegeben werden kann.</span><span class="sxs-lookup"><span data-stu-id="caf2c-256">Serialization enables you to save information about the exception and permits exception information to be shared by a server and a client proxy in a remoting context.</span></span> <span data-ttu-id="caf2c-257">Um das Ausnahmeobjekt serialisierbar zu machen, kennzeichnen Sie ihn mit der <xref:System.SerializableAttribute> Attribut.</span><span class="sxs-lookup"><span data-stu-id="caf2c-257">To make the exception object serializable, mark it with the <xref:System.SerializableAttribute> attribute.</span></span>  
  
4.  <span data-ttu-id="caf2c-258">Definieren Sie die Konstruktoren der Exception-Klasse.</span><span class="sxs-lookup"><span data-stu-id="caf2c-258">Define the constructors of your exception class.</span></span> <span data-ttu-id="caf2c-259">In der Regel haben Ausnahmeklassen eine oder mehrere der folgenden Konstruktoren:</span><span class="sxs-lookup"><span data-stu-id="caf2c-259">Typically, exception classes have one or more of the following constructors:</span></span>  
  
    -   <span data-ttu-id="caf2c-260"><xref:System.Exception.%23ctor>, die Standardwerte verwendet, um die Eigenschaften eines neuen Objekts für die Ausnahme zu initialisieren.</span><span class="sxs-lookup"><span data-stu-id="caf2c-260"><xref:System.Exception.%23ctor>, which uses default values to initialize the properties of a new exception object.</span></span>  
  
    -   <span data-ttu-id="caf2c-261"><xref:System.Exception.%23ctor%28System.String%29>, der Initialisiert eine neue Ausnahmeobjekt mit einer angegebenen Fehlermeldung.</span><span class="sxs-lookup"><span data-stu-id="caf2c-261"><xref:System.Exception.%23ctor%28System.String%29>, which initializes a new exception object with a specified error message.</span></span>  
  
    -   <span data-ttu-id="caf2c-262"><xref:System.Exception.%23ctor%28System.String%2CSystem.Exception%29>, der Initialisiert eine neue Ausnahmeobjekt mit einer angegebenen Fehlermeldung und der internen Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="caf2c-262"><xref:System.Exception.%23ctor%28System.String%2CSystem.Exception%29>, which initializes a new exception object with a specified error message and inner exception.</span></span>  
  
    -   <span data-ttu-id="caf2c-263"><xref:System.Exception.%23ctor%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29>, also eine `protected` Konstruktor, initialisiert ein neues Ausnahmeobjekt aus, serialisierten Daten.</span><span class="sxs-lookup"><span data-stu-id="caf2c-263"><xref:System.Exception.%23ctor%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29>, which is a `protected` constructor that initializes a new exception object from serialized data.</span></span> <span data-ttu-id="caf2c-264">Sie sollten diesen Konstruktor implementieren, wenn Sie ausgewählt haben, dass Ihr Ausnahmeobjekt serialisierbar zu machen.</span><span class="sxs-lookup"><span data-stu-id="caf2c-264">You should implement this constructor if you've chosen to make your exception object serializable.</span></span>  
  
 <span data-ttu-id="caf2c-265">Das folgende Beispiel veranschaulicht die Verwendung einer benutzerdefinierten Ausnahme-Klasse.</span><span class="sxs-lookup"><span data-stu-id="caf2c-265">The following example illustrates the use of a custom exception class.</span></span> <span data-ttu-id="caf2c-266">Definiert eine `NotPrimeException` Ausnahme wird ausgelöst, wenn ein Client versucht, abzurufender eine Anfangszahl, die keine Primzahl ist eine Sequenz von Primzahlen enthalten.</span><span class="sxs-lookup"><span data-stu-id="caf2c-266">It defines a `NotPrimeException` exception that is thrown when a client tries to retrieve a sequence of prime numbers by specifying a starting number that is not prime.</span></span> <span data-ttu-id="caf2c-267">Die Ausnahme definiert eine neue Eigenschaft `NonPrime`, die nicht-Primzahlen gibt die Anzahl zurück, die die Ausnahme verursacht hat.</span><span class="sxs-lookup"><span data-stu-id="caf2c-267">The exception defines a new property, `NonPrime`, that returns the non-prime number that caused the exception.</span></span> <span data-ttu-id="caf2c-268">Zusätzlich implementieren einen geschützten parameterlosen Konstruktor und einen Konstruktor mit <xref:System.Runtime.Serialization.SerializationInfo> und <xref:System.Runtime.Serialization.StreamingContext> Parameter für die Serialisierung der `NotPrimeException` Klasse definiert drei zusätzliche Konstruktoren zur Unterstützung der `NonPrime` Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="caf2c-268">Besides implementing a protected parameterless constructor and a constructor with <xref:System.Runtime.Serialization.SerializationInfo> and <xref:System.Runtime.Serialization.StreamingContext> parameters for serialization, the `NotPrimeException` class defines three additional constructors to support the `NonPrime` property.</span></span>  <span data-ttu-id="caf2c-269">Jeder Konstruktor ruft einen Basisklassenkonstruktor zusätzlich zu den Wert des nicht-Primzahlen numerische beibehalten.</span><span class="sxs-lookup"><span data-stu-id="caf2c-269">Each constructor calls a base class constructor in addition to preserving the value of the non-prime number.</span></span> <span data-ttu-id="caf2c-270">Die `NotPrimeException` Klasse wird ebenfalls mit markiert die <xref:System.SerializableAttribute> Attribut.</span><span class="sxs-lookup"><span data-stu-id="caf2c-270">The `NotPrimeException` class is also marked with the <xref:System.SerializableAttribute> attribute.</span></span>  
  
 [!code-csharp[System.Exception.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/notprimeexception.cs#1)]
 [!code-vb[System.Exception.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/notprimeexception.vb#1)]  
  
 <span data-ttu-id="caf2c-271">Die `PrimeNumberGenerator` Klasse im folgenden Beispiel gezeigt die Sieb des Eratosthenes verwendet, um die Abfolge von Primzahlen von 2 eine Grenze angegeben, die vom Client im Aufruf an den Klassenkonstruktor zu berechnen.</span><span class="sxs-lookup"><span data-stu-id="caf2c-271">The `PrimeNumberGenerator` class shown in the following example uses the Sieve of Eratosthenes to calculate the sequence of prime numbers from 2 to a limit specified by the client in the call to its class constructor.</span></span> <span data-ttu-id="caf2c-272">Die `GetPrimesFrom` Methode gibt alle Primzahlen, die größer als oder gleich einem angegebenen Untergrenze sind, löst jedoch eine `NotPrimeException` Wenn unteren Grenzwerts keine Primzahl ist.</span><span class="sxs-lookup"><span data-stu-id="caf2c-272">The `GetPrimesFrom` method returns all prime numbers that are greater than or equal to a specified lower limit, but throws a `NotPrimeException` if that lower limit is not a prime number.</span></span>  
  
 [!code-csharp[System.Exception.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/primenumbergenerator.cs#2)]
 [!code-vb[System.Exception.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/primenumbergenerator.vb#2)]  
  
 <span data-ttu-id="caf2c-273">Im folgenden Beispiel wird die beiden Aufrufe von der `GetPrimesFrom` Methode mit nicht-Primzahlen, von denen Grenzen von Anwendungsdomänen hinweg überschreitet.</span><span class="sxs-lookup"><span data-stu-id="caf2c-273">The following example makes two calls to the `GetPrimesFrom` method with non-prime numbers, one of which crosses application domain boundaries.</span></span> <span data-ttu-id="caf2c-274">In beiden Fällen wird die Ausnahme ausgelöst und im Clientcode erfolgreich behandelt.</span><span class="sxs-lookup"><span data-stu-id="caf2c-274">In both cases, the exception is thrown and successfully handled in client code.</span></span>  
  
 [!code-csharp[System.Exception.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/example.cs#3)]
 [!code-vb[System.Exception.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/example.vb#3)]  
  
## <a name="windows-runtime-and-includenetv451includesnet-v451-mdmd"></a><span data-ttu-id="caf2c-275">Windows-Runtime und [!INCLUDE[net_v451](~/includes/net-v451-md.md)]</span><span class="sxs-lookup"><span data-stu-id="caf2c-275">Windows Runtime and [!INCLUDE[net_v451](~/includes/net-v451-md.md)]</span></span>  
 <span data-ttu-id="caf2c-276">In [!INCLUDE[net_win8_profile](~/includes/net-win8-profile-md.md)] für [!INCLUDE[win8](~/includes/win8-md.md)], einige Informationen zur Ausnahme ist in der Regel verloren, wenn eine Ausnahme über Stapelrahmen nicht in .NET Framework weitergegeben wird.</span><span class="sxs-lookup"><span data-stu-id="caf2c-276">In [!INCLUDE[net_win8_profile](~/includes/net-win8-profile-md.md)] for [!INCLUDE[win8](~/includes/win8-md.md)], some exception information is typically lost when an exception is propagated through non-.NET Framework stack frames.</span></span> <span data-ttu-id="caf2c-277">Beginnend mit der [!INCLUDE[net_v451](~/includes/net-v451-md.md)] und [!INCLUDE[win81](~/includes/win81-md.md)], die common Language Runtime verwendet weiterhin die ursprüngliche <xref:System.Exception> -Objekt, das ausgelöst wurde, es sei denn, diese Ausnahme in einem Stapelrahmen nicht in .NET Framework geändert wurde.</span><span class="sxs-lookup"><span data-stu-id="caf2c-277">Starting with the [!INCLUDE[net_v451](~/includes/net-v451-md.md)] and [!INCLUDE[win81](~/includes/win81-md.md)], the common language runtime continues to use the original <xref:System.Exception> object that was thrown unless that exception was modified in a non-.NET Framework stack frame.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="caf2c-278">Das folgende Beispiel zeigt eine `catch` blockieren, die definiert wird, um behandeln <xref:System.ArithmeticException> Fehler.</span><span class="sxs-lookup"><span data-stu-id="caf2c-278">The following example demonstrates a `catch` block that is defined to handle <xref:System.ArithmeticException> errors.</span></span> <span data-ttu-id="caf2c-279">Dies `catch` -Block fängt auch <xref:System.DivideByZeroException> Fehler, da <xref:System.DivideByZeroException> leitet sich von <xref:System.ArithmeticException> und es gibt keine `catch` Block für explizit definierte <xref:System.DivideByZeroException> Fehler.</span><span class="sxs-lookup"><span data-stu-id="caf2c-279">This `catch` block also catches <xref:System.DivideByZeroException> errors, because <xref:System.DivideByZeroException> derives from <xref:System.ArithmeticException> and there is no `catch` block explicitly defined for <xref:System.DivideByZeroException> errors.</span></span>  
  
 [!code-cpp[CatchException#1](~/samples/snippets/cpp/VS_Snippets_CLR/CatchException/CPP/catchexception.cpp#1)]
 [!code-csharp[CatchException#1](~/samples/snippets/csharp/VS_Snippets_CLR/CatchException/CS/catchexception.cs#1)]
 [!code-vb[CatchException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CatchException/VB/catchexception.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="caf2c-280">Initialisiert eine neue Instanz der <see cref="T:System.Exception" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caf2c-280">Initializes a new instance of the <see cref="T:System.Exception" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Exception ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="caf2c-281">Initialisiert eine neue Instanz der <see cref="T:System.Exception" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caf2c-281">Initializes a new instance of the <see cref="T:System.Exception" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caf2c-282">Dieser Konstruktor initialisiert die <xref:System.Exception.Message%2A>-Eigenschaft der neuen Instanz mit einer Systemmeldung, die den Fehler beschreibt und die aktuelle Systemkultur berücksichtigt.</span><span class="sxs-lookup"><span data-stu-id="caf2c-282">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error and takes into account the current system culture.</span></span>  
  
 <span data-ttu-id="caf2c-283">Die abgeleiteten Klassen sollten diese Standardkonstruktor bereit.</span><span class="sxs-lookup"><span data-stu-id="caf2c-283">All the derived classes should provide this default constructor.</span></span> <span data-ttu-id="caf2c-284">In der folgenden Tabelle werden die anfänglichen Eigenschaftenwerte für eine <xref:System.Exception>-Instanz aufgeführt.</span><span class="sxs-lookup"><span data-stu-id="caf2c-284">The following table shows the initial property values for an instance of <xref:System.Exception>.</span></span>  
  
|<span data-ttu-id="caf2c-285">Eigenschaft</span><span class="sxs-lookup"><span data-stu-id="caf2c-285">Property</span></span>|<span data-ttu-id="caf2c-286">Wert</span><span class="sxs-lookup"><span data-stu-id="caf2c-286">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="caf2c-287">Ein NULL-Verweis (`Nothing` in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="caf2c-287">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="caf2c-288">Eine im System enthaltene lokalisierte Beschreibung.</span><span class="sxs-lookup"><span data-stu-id="caf2c-288">A system-supplied localized description.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="caf2c-289">Im folgenden Codebeispiel wird abgeleitet ist ein `Exception` , verwendet eine vordefinierte Meldung.</span><span class="sxs-lookup"><span data-stu-id="caf2c-289">The following code example derives an `Exception` that uses a predefined message.</span></span> <span data-ttu-id="caf2c-290">Der Code veranschaulicht die Verwendung des parameterlosen Konstruktors für die abgeleitete Klasse und die Basis `Exception` Klasse.</span><span class="sxs-lookup"><span data-stu-id="caf2c-290">The code demonstrates the use of the parameterless constructor for the derived class and the base `Exception` class.</span></span>  
  
 [!code-cpp[System.Exception.Ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Ctor/CPP/new.cpp#1)]
 [!code-csharp[System.Exception.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Ctor/CS/new.cs#1)]
 [!code-vb[System.Exception.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Ctor/VB/new.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Exception (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception(System::String ^ message);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="caf2c-291">Die Meldung, in der der Fehler beschrieben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caf2c-291">The message that describes the error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="caf2c-292">Initialisiert eine neue Instanz der <see cref="T:System.Exception" />-Klasse mit einer angegebenen Fehlermeldung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caf2c-292">Initializes a new instance of the <see cref="T:System.Exception" /> class with a specified error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caf2c-293">Dieser Konstruktor initialisiert die <xref:System.Exception.Message%2A> Eigenschaft der neuen Instanz unter Verwendung der `message` Parameter.</span><span class="sxs-lookup"><span data-stu-id="caf2c-293">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance by using the `message` parameter.</span></span> <span data-ttu-id="caf2c-294">Wenn die `message` Parameter ist `null`, dies ist der gleiche wie das Aufrufen der <xref:System.Exception.%23ctor%2A> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="caf2c-294">If the `message` parameter is `null`, this is the same as calling the <xref:System.Exception.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="caf2c-295">In der folgenden Tabelle werden die anfänglichen Eigenschaftenwerte für eine <xref:System.Exception>-Instanz aufgeführt.</span><span class="sxs-lookup"><span data-stu-id="caf2c-295">The following table shows the initial property values for an instance of <xref:System.Exception>.</span></span>  
  
|<span data-ttu-id="caf2c-296">Eigenschaft</span><span class="sxs-lookup"><span data-stu-id="caf2c-296">Property</span></span>|<span data-ttu-id="caf2c-297">Wert</span><span class="sxs-lookup"><span data-stu-id="caf2c-297">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="caf2c-298">Ein NULL-Verweis (`Nothing` in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="caf2c-298">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="caf2c-299">Die Zeichenfolge der Fehlermeldung.</span><span class="sxs-lookup"><span data-stu-id="caf2c-299">The error message string.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="caf2c-300">Im folgenden Codebeispiel wird abgeleitet ist ein `Exception` für eine bestimmte Bedingung.</span><span class="sxs-lookup"><span data-stu-id="caf2c-300">The following code example derives an `Exception` for a specific condition.</span></span> <span data-ttu-id="caf2c-301">Das Codebeispiel veranschaulicht die Verwendung des Konstruktors, der eine Nachricht vom Aufrufer angegebenes als Parameter für die abgeleitete Klasse und die Basis akzeptiert `Exception` Klasse.</span><span class="sxs-lookup"><span data-stu-id="caf2c-301">The code demonstrates the use of the constructor that takes a caller-specified message as a parameter, for both the derived class and the base `Exception` class.</span></span>  
  
 [!code-cpp[System.Exception.Ctor#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Ctor/CPP/news.cpp#2)]
 [!code-csharp[System.Exception.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Ctor/CS/news.cs#2)]
 [!code-vb[System.Exception.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Ctor/VB/news.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Exception (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="caf2c-302">Die <see cref="T:System.Runtime.Serialization.SerializationInfo" />, die die serialisierten Objektdaten für die ausgelöste Ausnahme enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caf2c-302">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="caf2c-303">Der <see cref="T:System.Runtime.Serialization.StreamingContext" />, der die Kontextinformationen über die Quelle oder das Ziel enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caf2c-303">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="caf2c-304">Initialisiert eine neue Instanz der <see cref="T:System.Exception" />-Klasse mit serialisierten Daten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caf2c-304">Initializes a new instance of the <see cref="T:System.Exception" /> class with serialized data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caf2c-305">Dieser Konstruktor wird während der Deserialisierung aufgerufen, um das über einen Stream übertragene Ausnahmeobjekt wiederherzustellen.</span><span class="sxs-lookup"><span data-stu-id="caf2c-305">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span> <span data-ttu-id="caf2c-306">Weitere Informationen finden Sie unter [XML- und SOAP-Serialisierung](~/docs/standard/serialization/xml-and-soap-serialization.md).</span><span class="sxs-lookup"><span data-stu-id="caf2c-306">For more information, see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="caf2c-307">Das folgende Codebeispiel definiert eine abgeleitete serialisierbare `Exception` Klasse.</span><span class="sxs-lookup"><span data-stu-id="caf2c-307">The following code example defines a derived serializable `Exception` class.</span></span> <span data-ttu-id="caf2c-308">Der Code wird ein Fehler aufgrund einer Division durch 0 erzwungen und erstellt dann eine Instanz der abgeleiteten Ausnahme unter Verwendung der (<xref:System.Runtime.Serialization.SerializationInfo>, <xref:System.Runtime.Serialization.StreamingContext>) Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="caf2c-308">The code forces a divide-by-0 error and then creates an instance of the derived exception using the (<xref:System.Runtime.Serialization.SerializationInfo>, <xref:System.Runtime.Serialization.StreamingContext>) constructor.</span></span> <span data-ttu-id="caf2c-309">Der Code wird die Instanz in eine Datei serialisiert, deserialisiert Sie die Datei in eine neue Ausnahme ausgelöst und abgefangen werden Daten für die Ausnahme angezeigt.</span><span class="sxs-lookup"><span data-stu-id="caf2c-309">The code serializes the instance to a file, deserializes the file into a new exception, which it throws, and then catches and displays the exception's data.</span></span>  
  
 [!code-cpp[System.Exception.GetObjectData#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.GetObjectData/CPP/getobjdata.cpp#1)]
 [!code-csharp[System.Exception.GetObjectData#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.GetObjectData/CS/getobjdata.cs#1)]
 [!code-vb[System.Exception.GetObjectData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.GetObjectData/VB/getobjdata.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="caf2c-310">Der <paramref name="info" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caf2c-310">The <paramref name="info" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="caf2c-311">Der Klassenname ist <see langword="null" />, oder <see cref="P:System.Exception.HResult" /> ist 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="caf2c-311">The class name is <see langword="null" /> or <see cref="P:System.Exception.HResult" /> is zero (0).</span>
          </span>
        </exception>
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Exception (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception(System::String ^ message, Exception ^ innerException);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="caf2c-312">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caf2c-312">The error message that explains the reason for the exception.</span>
          </span>
        </param>
        <param name="innerException">
          <span data-ttu-id="caf2c-313">Die Ausnahme, die die aktuelle Ausnahme verursacht hat, oder ein Nullverweis (<see langword="Nothing" /> in Visual Basic), wenn keine innere Ausnahme angegeben ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caf2c-313">The exception that is the cause of the current exception, or a null reference (<see langword="Nothing" /> in Visual Basic) if no inner exception is specified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="caf2c-314">Initialisiert eine neue Instanz der <see cref="T:System.Exception" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caf2c-314">Initializes a new instance of the <see cref="T:System.Exception" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caf2c-315">Eine Ausnahme, die als direktes Ergebnis einer vorhergehenden Ausnahme ausgelöst wird, muss in der <xref:System.Exception.InnerException%2A>-Eigenschaft über einen Verweis auf die vorhergehende Ausnahme verfügen.</span><span class="sxs-lookup"><span data-stu-id="caf2c-315">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="caf2c-316">Die <xref:System.Exception.InnerException%2A>-Eigenschaft gibt denselben Wert zurück, der an den Konstruktor übergeben wurde, bzw. einen NULL-Verweis (`Nothing` in Visual Basic), wenn die <xref:System.Exception.InnerException%2A>-Eigenschaft nicht den Wert für die innere Ausnahme für den Konstruktor bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="caf2c-316">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or a null reference (`Nothing` in Visual Basic) if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="caf2c-317">In der folgenden Tabelle werden die anfänglichen Eigenschaftenwerte für eine <xref:System.Exception>-Instanz aufgeführt.</span><span class="sxs-lookup"><span data-stu-id="caf2c-317">The following table shows the initial property values for an instance of <xref:System.Exception>.</span></span>  
  
|<span data-ttu-id="caf2c-318">Eigenschaft</span><span class="sxs-lookup"><span data-stu-id="caf2c-318">Property</span></span>|<span data-ttu-id="caf2c-319">Wert</span><span class="sxs-lookup"><span data-stu-id="caf2c-319">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="caf2c-320">Der Verweis auf die interne Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="caf2c-320">The inner exception reference.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="caf2c-321">Die Zeichenfolge der Fehlermeldung.</span><span class="sxs-lookup"><span data-stu-id="caf2c-321">The error message string.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="caf2c-322">Im folgenden Codebeispiel wird abgeleitet ist ein `Exception` für eine bestimmte Bedingung.</span><span class="sxs-lookup"><span data-stu-id="caf2c-322">The following code example derives an `Exception` for a specific condition.</span></span> <span data-ttu-id="caf2c-323">Das Codebeispiel veranschaulicht die Verwendung des Konstruktors, der eine Nachricht und eine innere Ausnahme als Parameter für die abgeleitete Klasse und die Basis akzeptiert `Exception` Klasse.</span><span class="sxs-lookup"><span data-stu-id="caf2c-323">The code demonstrates the use of the constructor that takes a message and an inner exception as parameters, for both the derived class and the base `Exception` class.</span></span>  
  
 [!code-cpp[System.Exception.Ctor#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Ctor/CPP/newsi.cpp#3)]
 [!code-csharp[System.Exception.Ctor#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Ctor/CS/newsi.cs#3)]
 [!code-vb[System.Exception.Ctor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Ctor/VB/newsi.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IDictionary Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Data" />
      <MemberSignature Language="DocId" Value="P:System.Exception.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::IDictionary ^ Data { System::Collections::IDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="caf2c-324">Ruft eine Auflistung von Schlüssel-Wert-Paaren ab, die zusätzliche benutzerdefinierte Informationen über die Ausnahme bereitstellen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caf2c-324">Gets a collection of key/value pairs that provide additional user-defined information about the exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="caf2c-325">Ein Objekt, das die <see cref="T:System.Collections.IDictionary" />-Schnittstelle implementiert und eine Auflistung benutzerdefinierter Schlüssel-Wert-Paare enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caf2c-325">An object that implements the <see cref="T:System.Collections.IDictionary" /> interface and contains a collection of user-defined key/value pairs.</span>
          </span>
          <span data-ttu-id="caf2c-326">Der Standard ist eine leere Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caf2c-326">The default is an empty collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caf2c-327">Verwenden der <xref:System.Collections.IDictionary?displayProperty=nameWithType> zurückgegebenes Objekt die <xref:System.Exception.Data%2A> Eigenschaft zum Speichern und Abrufen von zusätzlichen Informationen über die Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="caf2c-327">Use the <xref:System.Collections.IDictionary?displayProperty=nameWithType> object returned by the <xref:System.Exception.Data%2A> property to store and retrieve supplementary information relevant to the exception.</span></span> <span data-ttu-id="caf2c-328">Die Informationen sind in Form von einer beliebigen Anzahl von benutzerdefinierten Schlüssel/Wert-Paaren.</span><span class="sxs-lookup"><span data-stu-id="caf2c-328">The information is in the form of an arbitrary number of user-defined key/value pairs.</span></span> <span data-ttu-id="caf2c-329">Die Schlüsselkomponente jedes Schlüssel/Wert-Paars ist in der Regel eine identifizierende Zeichenfolge ist, während die Wertkomponente des Paars Objekt beliebigen Typs sein kann.</span><span class="sxs-lookup"><span data-stu-id="caf2c-329">The key component of each key/value pair is typically an identifying string, whereas the value component of the pair can be any type of object.</span></span>  
  
## <a name="keyvalue-pair-security"></a><span data-ttu-id="caf2c-330">Schlüssel/Wert-Paar-Sicherheit</span><span class="sxs-lookup"><span data-stu-id="caf2c-330">Key/Value Pair Security</span></span>  
 <span data-ttu-id="caf2c-331">Die Schlüssel-/Wertpaaren, die in der Auflistung zurückgegebenes gespeicherten der <xref:System.Exception.Data%2A> Eigenschaft sind nicht sicher.</span><span class="sxs-lookup"><span data-stu-id="caf2c-331">The key/value pairs stored in the collection returned by the <xref:System.Exception.Data%2A> property are not secure.</span></span> <span data-ttu-id="caf2c-332">Wenn eine geschachtelte Reihe von Routinen, die von Ihrer Anwendung aufgerufen, und jede Routine Ausnahmehandler enthält, enthält die daraus entstehende Aufrufliste eine Hierarchie der Ausnahmehandler.</span><span class="sxs-lookup"><span data-stu-id="caf2c-332">If your application calls a nested series of routines, and each routine contains exception handlers, the resulting call stack contains a hierarchy of those exception handlers.</span></span> <span data-ttu-id="caf2c-333">Wenn eine Routine auf niedrigerer Ebene eine Ausnahme auslöst, kann alle oberen Ebene Ausnahmehandler in der Stapel Aufrufhierarchie lesen und/oder ändern die Schlüssel-Wert-Paare, die in der Auflistung, die von einem beliebigen anderen Ausnahmehandler gespeichert werden.</span><span class="sxs-lookup"><span data-stu-id="caf2c-333">If a lower-level routine throws an exception, any upper-level exception handler in the call stack hierarchy can read and/or modify the key/value pairs stored in the collection by any other exception handler.</span></span> <span data-ttu-id="caf2c-334">Dies bedeutet, dass Sie sicherstellen müssen, dass die Informationen in den Schlüssel/Wert-Paaren nicht vertraulich ist und dass die Anwendung ordnungsgemäß ausgeführt wird, wenn die Informationen in den Schlüssel/Wert-Paaren beschädigt ist.</span><span class="sxs-lookup"><span data-stu-id="caf2c-334">This means you must guarantee that the information in the key/value pairs is not confidential and that your application will operate correctly if the information in the key/value pairs is corrupted.</span></span>  
  
## <a name="key-conflicts"></a><span data-ttu-id="caf2c-335">ID-Konflikte</span><span class="sxs-lookup"><span data-stu-id="caf2c-335">Key Conflicts</span></span>  
 <span data-ttu-id="caf2c-336">Ein Schlüssel Konflikt tritt auf, wenn unterschiedliche Ausnahmehandler ein Schlüssel/Wert-Paar auf den gleichen Schlüssel angeben.</span><span class="sxs-lookup"><span data-stu-id="caf2c-336">A key conflict occurs when different exception handlers specify the same key to access a key/value pair.</span></span> <span data-ttu-id="caf2c-337">Seien Sie vorsichtig, wenn die Anwendung zu entwickeln, da die Folge eines Konflikts Schlüssel ist, dass Ausnahmehandler auf niedrigerer Ebene mit höherer Ausnahmehandler versehentlich kommunizieren können, und diese Kommunikation möglicherweise geringfügige Programmfehler.</span><span class="sxs-lookup"><span data-stu-id="caf2c-337">Use caution when developing your application because the consequence of a key conflict is that lower-level exception handlers can inadvertently communicate with higher-level exception handlers, and this communication might cause subtle program errors.</span></span> <span data-ttu-id="caf2c-338">Allerdings vorsichtig Domänenmodus können Konflikte Sie um Ihre Anwendung zu optimieren.</span><span class="sxs-lookup"><span data-stu-id="caf2c-338">However, if you are cautious you can use key conflicts to enhance your application.</span></span>  
  
## <a name="avoiding-key-conflicts"></a><span data-ttu-id="caf2c-339">Vermeiden von Konflikten Schlüssel</span><span class="sxs-lookup"><span data-stu-id="caf2c-339">Avoiding Key Conflicts</span></span>  
 <span data-ttu-id="caf2c-340">Vermeiden Sie nach Übernahme eine Benennungskonvention, um eindeutige Schlüssel für Schlüssel/Wert-Paare zu generieren.</span><span class="sxs-lookup"><span data-stu-id="caf2c-340">Avoid key conflicts by adopting a naming convention to generate unique keys for key/value pairs.</span></span> <span data-ttu-id="caf2c-341">Beispielsweise könnte eine Benennungskonvention ergeben, einen Schlüssel, der der Punkt getrennte Name der Anwendung besteht, die Methode, die zusätzliche Informationen für das Paar und einen eindeutigen Bezeichner enthält.</span><span class="sxs-lookup"><span data-stu-id="caf2c-341">For example, a naming convention might yield a key that consists of the period-delimited name of your application, the method that provides supplementary information for the pair, and a unique identifier.</span></span>  
  
 <span data-ttu-id="caf2c-342">Angenommen, zwei Anwendungen, mit dem Namen Produkte und Lieferanten, wurde jeweils eine Methode mit dem Namen Sales.</span><span class="sxs-lookup"><span data-stu-id="caf2c-342">Suppose two applications, named Products and Suppliers, each has a method named Sales.</span></span> <span data-ttu-id="caf2c-343">Die Sales-Methode in der Products-Anwendung enthält die ID-Nummer (die Stock keeping Unit bzw. SKU) eines Produkts.</span><span class="sxs-lookup"><span data-stu-id="caf2c-343">The Sales method in the Products application provides the identification number (the stock keeping unit or SKU) of a product.</span></span> <span data-ttu-id="caf2c-344">Die Sales-Methode in der Lieferanten-Anwendung enthält die ID oder die SID, von einem anderen Lieferanten.</span><span class="sxs-lookup"><span data-stu-id="caf2c-344">The Sales method in the Suppliers application provides the identification number, or SID, of a supplier.</span></span> <span data-ttu-id="caf2c-345">Die Namenskonvention für dieses Beispiel ergibt daher den Schlüssel "Products.Sales.SKU" und "Suppliers.Sales.SID".</span><span class="sxs-lookup"><span data-stu-id="caf2c-345">Consequently, the naming convention for this example yields the keys, "Products.Sales.SKU" and "Suppliers.Sales.SID".</span></span>  
  
## <a name="exploiting-key-conflicts"></a><span data-ttu-id="caf2c-346">Ausnutzen-Konflikte</span><span class="sxs-lookup"><span data-stu-id="caf2c-346">Exploiting Key Conflicts</span></span>  
 <span data-ttu-id="caf2c-347">Nutzen Sie aus, indem Sie einen oder mehrere spezielle, vordefinierten Schlüssel zur Steuerung der Verarbeitung verwenden.</span><span class="sxs-lookup"><span data-stu-id="caf2c-347">Exploit key conflicts by using the presence of one or more special, prearranged keys to control processing.</span></span> <span data-ttu-id="caf2c-348">Nehmen Sie an, in einem Szenario der höchsten Ebene Ausnahmehandler in der Stapel Aufrufhierarchie fängt alle Ausnahmen, die vom Ausnahmehandler auf niedrigerer Ebene ausgelöst wird, ab.</span><span class="sxs-lookup"><span data-stu-id="caf2c-348">Suppose, in one scenario, the highest level exception handler in the call stack hierarchy catches all exceptions thrown by lower-level exception handlers.</span></span> <span data-ttu-id="caf2c-349">Wenn ein Schlüssel/Wert-Paar mit einem speziellen Schlüssel vorhanden ist, formatiert der Ausnahmehandler auf höherer Ebene verbleibenden Schlüssel/Wert-Paare in der <xref:System.Collections.IDictionary> Objekt nicht dem Standard entsprechende folglich; andernfalls werden die verbleibenden Schlüssel/Wert-Paare in eine normale Weise formatiert.</span><span class="sxs-lookup"><span data-stu-id="caf2c-349">If a key/value pair with a special key exists, the high-level exception handler formats the remaining key/value pairs in the <xref:System.Collections.IDictionary> object in some nonstandard way; otherwise, the remaining key/value pairs are formatted in some normal manner.</span></span>  
  
 <span data-ttu-id="caf2c-350">Jetzt nehmen wir an, in einem anderen Szenario der Ausnahmehandler auf jeder Ebene der Hierarchie Stapel Aufruf von der nächsten untergeordneten Ausnahmehandler ausgelöste Ausnahme abgefangen.</span><span class="sxs-lookup"><span data-stu-id="caf2c-350">Now suppose, in another scenario, the exception handler at each level of the call stack hierarchy catches the exception thrown by the next lower-level exception handler.</span></span> <span data-ttu-id="caf2c-351">Darüber hinaus jeden Ausnahmehandler von zurückgegebene Auflistung kennt die <xref:System.Exception.Data%2A> -Eigenschaft enthält einen Satz von Schlüssel/Wert-Paaren, die zugegriffen werden kann, mit einem vordefinierten Satz von Schlüsseln.</span><span class="sxs-lookup"><span data-stu-id="caf2c-351">In addition, each exception handler knows the collection returned by the <xref:System.Exception.Data%2A> property contains a set of key/value pairs that can be accessed with a prearranged set of keys.</span></span>  
  
 <span data-ttu-id="caf2c-352">Jeder Ausnahmehandler verwendet den vordefinierten Satz von Schlüsseln, um die Wertkomponente des entsprechenden Schlüssel/Wert-Paar mit Informationen zu dieser Ausnahmehandler eindeutig zu aktualisieren.</span><span class="sxs-lookup"><span data-stu-id="caf2c-352">Each exception handler uses the prearranged set of keys to update the value component of the corresponding key/value pair with information unique to that exception handler.</span></span> <span data-ttu-id="caf2c-353">Nachdem das Update abgeschlossen ist, löst der Ausnahmehandler auf höherer Ebene Ausnahmehandler eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="caf2c-353">After the update process is complete, the exception handler throws the exception to the next higher-level exception handler.</span></span> <span data-ttu-id="caf2c-354">Schließlich wird der höchsten Ebene Ausnahmehandler greift auf die Schlüssel/Wert-Paare und zeigt die konsolidierten Updateinformationen über die auf niedrigerer Ebene Ausnahmehandler.</span><span class="sxs-lookup"><span data-stu-id="caf2c-354">Finally, the highest level exception handler accesses the key/value pairs and displays the consolidated update information from all the lower-level exception handlers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="caf2c-355">Im folgende Beispiel veranschaulicht das Hinzufügen und Abrufen von Informationen mithilfe der <xref:System.Exception.Data%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="caf2c-355">The following example demonstrates how to add and retrieve information using the <xref:System.Exception.Data%2A> property.</span></span>  
  
 [!code-cpp[exception.data#1](~/samples/snippets/cpp/VS_Snippets_CLR/exception.data/CPP/data.cpp#1)]
 [!code-csharp[exception.data#1](~/samples/snippets/csharp/VS_Snippets_CLR/exception.data/CS/data.cs#1)]
 [!code-vb[exception.data#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/exception.data/VB/data.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.DictionaryEntry" />
      </Docs>
    </Member>
    <Member MemberName="GetBaseException">
      <MemberSignature Language="C#" Value="public virtual Exception GetBaseException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Exception GetBaseException() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.GetBaseException" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBaseException () As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Exception ^ GetBaseException();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Exception.GetBaseException</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="caf2c-356">Gibt beim Überschreiben in einer abgeleiteten Klasse eine <see cref="T:System.Exception" /> zurück, die die ursprüngliche Ursache für eine oder mehrere nachfolgende Ausnahmen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caf2c-356">When overridden in a derived class, returns the <see cref="T:System.Exception" /> that is the root cause of one or more subsequent exceptions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="caf2c-357">Die erste Ausnahme, die in einer Kette von Ausnahmen ausgelöst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caf2c-357">The first exception thrown in a chain of exceptions.</span>
          </span>
          <span data-ttu-id="caf2c-358">Wenn die <see cref="P:System.Exception.InnerException" />-Eigenschaft der aktuellen Ausnahme ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic) ist, gibt diese Eigenschaft die aktuelle Ausnahme zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caf2c-358">If the <see cref="P:System.Exception.InnerException" /> property of the current exception is a null reference (<see langword="Nothing" /> in Visual Basic), this property returns the current exception.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caf2c-359">Eine Kette von Ausnahmen besteht aus einem Satz von Ausnahmen, dass jede Ausnahme in der Kette, als direktes Ergebnis der Ausnahme verwiesen wird ausgelöst wurde, dessen `InnerException` Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="caf2c-359">A chain of exceptions consists of a set of exceptions such that each exception in the chain was thrown as a direct result of the exception referenced in its `InnerException` property.</span></span> <span data-ttu-id="caf2c-360">Für eine bestimmte Kette kann genau eine Ausnahme, die die Ursache für alle anderen Ausnahmen in der Kette ist vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="caf2c-360">For a given chain, there can be exactly one exception that is the root cause of all other exceptions in the chain.</span></span> <span data-ttu-id="caf2c-361">Diese Ausnahme wird die Basisausnahme aufgerufen und die zugehörige `InnerException` Eigenschaft enthält immer einen null-Verweis.</span><span class="sxs-lookup"><span data-stu-id="caf2c-361">This exception is called the base exception and its `InnerException` property always contains a null reference.</span></span>  
  
 <span data-ttu-id="caf2c-362">Für alle Ausnahmen in einer Kette von Ausnahmen die `GetBaseException` Methode muss das gleiche Objekt (die Basisausnahme) zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="caf2c-362">For all exceptions in a chain of exceptions, the `GetBaseException` method must return the same object (the base exception).</span></span>  
  
 <span data-ttu-id="caf2c-363">Verwenden der `GetBaseException` Methode, wenn Sie die Ursache einer Ausnahme suchen möchten, jedoch Informationen zu Ausnahmen, die möglicherweise zwischen der aktuellen Ausnahme und die erste Ausnahme aufgetreten ist nicht erforderlich.</span><span class="sxs-lookup"><span data-stu-id="caf2c-363">Use the `GetBaseException` method when you want to find the root cause of an exception but do not need information about exceptions that may have occurred between the current exception and the first exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="caf2c-364">Das folgende Codebeispiel definiert zwei abgeleitete `Exception` Klassen.</span><span class="sxs-lookup"><span data-stu-id="caf2c-364">The following code example defines two derived `Exception` classes.</span></span> <span data-ttu-id="caf2c-365">Erzwingt, dass eine Ausnahme, und klicken Sie dann mit jedem der abgeleiteten Klassen erneut auslöst.</span><span class="sxs-lookup"><span data-stu-id="caf2c-365">It forces an exception and then throws it again with each of the derived classes.</span></span> <span data-ttu-id="caf2c-366">Der Code zeigt die Verwendung der `GetBaseException` Methode, um die ursprüngliche Ausnahme abzurufen.</span><span class="sxs-lookup"><span data-stu-id="caf2c-366">The code shows the use of the `GetBaseException` method to retrieve the original exception.</span></span>  
  
 [!code-cpp[System.Exception.GetBaseException#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.GetBaseException/CPP/getbaseexc.cpp#1)]
 [!code-csharp[System.Exception.GetBaseException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.GetBaseException/CS/getbaseexc.cs#1)]
 [!code-vb[System.Exception.GetBaseException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.GetBaseException/VB/getbaseexc.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="caf2c-367">
            <para>Die <see langword="GetBaseException" /> in Klassen, die Kontrolle über den Inhalt oder das Format erfordern-Methode überschrieben wird.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="caf2c-367">
              <para>The <see langword="GetBaseException" /> method is overridden in classes that require control over the exception content or format.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
        <InterfaceMember>M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="caf2c-368">Die <see cref="T:System.Runtime.Serialization.SerializationInfo" />, die die serialisierten Objektdaten für die ausgelöste Ausnahme enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caf2c-368">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="caf2c-369">Der <see cref="T:System.Runtime.Serialization.StreamingContext" />, der die Kontextinformationen über die Quelle oder das Ziel enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caf2c-369">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="caf2c-370">Legt beim Überschreiben in einer abgeleiteten Klasse die <see cref="T:System.Runtime.Serialization.SerializationInfo" /> mit Informationen über die Ausnahme fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caf2c-370">When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caf2c-371">`GetObjectData` legt die <xref:System.Runtime.Serialization.SerializationInfo> mit allen Daten für das Ausnahmeobjekt fest, das für die Serialisierung vorgesehen ist.</span><span class="sxs-lookup"><span data-stu-id="caf2c-371">`GetObjectData` sets a <xref:System.Runtime.Serialization.SerializationInfo> with all the exception object data targeted for serialization.</span></span> <span data-ttu-id="caf2c-372">Während der Deserialisierung wird die Ausnahme aus der über den Stream übertragenen `SerializationInfo` wiederhergestellt.</span><span class="sxs-lookup"><span data-stu-id="caf2c-372">During deserialization, the exception is reconstituted from the `SerializationInfo` transmitted over the stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="caf2c-373">Das folgende Codebeispiel definiert eine abgeleitete serialisierbare `Exception` Klasse, die implementiert `GetObjectData`, wodurch kleinere Änderungen an zwei Eigenschaften, und dann Ruft die Basisklasse aus, die Serialisierungen durchführen.</span><span class="sxs-lookup"><span data-stu-id="caf2c-373">The following code example defines a derived serializable `Exception` class that implements `GetObjectData`, which makes minor changes to two properties and then calls the base class to perform the serialization.</span></span> <span data-ttu-id="caf2c-374">Im Beispiel wird ein Fehler aufgrund einer Division durch 0 erzwungen und dann eine Instanz der abgeleiteten Ausnahme erstellt.</span><span class="sxs-lookup"><span data-stu-id="caf2c-374">The example forces a divide-by-0 error and then creates an instance of the derived exception.</span></span> <span data-ttu-id="caf2c-375">Der Code wird die Instanz in eine Datei serialisiert, deserialisiert Sie die Datei in eine neue Ausnahme ausgelöst und abgefangen werden Daten für die Ausnahme angezeigt.</span><span class="sxs-lookup"><span data-stu-id="caf2c-375">The code serializes the instance to a file, deserializes the file into a new exception, which it throws, and then catches and displays the exception's data.</span></span>  
  
 [!code-cpp[System.Exception.GetObjectData#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.GetObjectData/CPP/getobjdata.cpp#1)]
 [!code-csharp[System.Exception.GetObjectData#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.GetObjectData/CS/getobjdata.cs#1)]
 [!code-vb[System.Exception.GetObjectData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.GetObjectData/VB/getobjdata.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="caf2c-376">Der <paramref name="info" />-Parameter ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="caf2c-376">The <paramref name="info" /> parameter is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="caf2c-377">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caf2c-377">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="caf2c-378">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caf2c-378">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetType();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Exception.GetType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="caf2c-379">Ruft den Laufzeittyp der aktuellen Instanz ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caf2c-379">Gets the runtime type of the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="caf2c-380">Ein <see cref="T:System.Type" />-Objekt, das den exakten Laufzeittyp der aktuellen Instanz darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caf2c-380">A <see cref="T:System.Type" /> object that represents the exact runtime type of the current instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caf2c-381">Die <xref:System.Exception.GetType%2A> Methode zur Unterstützung von .NET Framework-Infrastruktur vorhanden ist und intern Ruft die grundlegende Methode <xref:System.Object.GetType%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="caf2c-381">The <xref:System.Exception.GetType%2A> method exists to support the .NET Framework infrastructure, and internally invokes the fundamental method, <xref:System.Object.GetType%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="HelpLink">
      <MemberSignature Language="C#" Value="public virtual string HelpLink { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpLink" />
      <MemberSignature Language="DocId" Value="P:System.Exception.HelpLink" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HelpLink As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HelpLink { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.HelpLink</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="caf2c-382">Ruft einen Link zu der mit dieser Ausnahme verbundenen Hilfedatei ab oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caf2c-382">Gets or sets a link to the help file associated with this exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="caf2c-383">Der URN (Uniform Resource Name) oder die URL (Uniform Resource Locator).</span>
          <span class="sxs-lookup">
            <span data-stu-id="caf2c-383">The Uniform Resource Name (URN) or Uniform Resource Locator (URL).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caf2c-384">Der Rückgabewert, der eine Hilfedatei darstellt, ist ein URN oder ein URL.</span><span class="sxs-lookup"><span data-stu-id="caf2c-384">The return value, which represents a help file, is a URN or URL.</span></span> <span data-ttu-id="caf2c-385">Z. B. die `HelpLink` Wert kann sein:</span><span class="sxs-lookup"><span data-stu-id="caf2c-385">For example, the `HelpLink` value could be:</span></span>  
  
 <span data-ttu-id="caf2c-386">"file:///C:/Applications/Bazzal/help.html#ErrorNum42"</span><span class="sxs-lookup"><span data-stu-id="caf2c-386">"file:///C:/Applications/Bazzal/help.html#ErrorNum42"</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="caf2c-387">Das folgende Codebeispiel löst das Beispiel ein `Exception` festlegt, die die `HelpLink` Eigenschaft in ihren Konstruktor ein, und fängt die Ausnahme und zeigt `HelpLink`.</span><span class="sxs-lookup"><span data-stu-id="caf2c-387">The following code example throws an `Exception` that sets the `HelpLink` property in its constructor and then catches the exception and displays `HelpLink`.</span></span>  
  
 [!code-cpp[System.Exception.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.Exception.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Properties/CS/properties.cs#1)]
 [!code-vb[System.Exception.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HResult">
      <MemberSignature Language="C#" Value="public int HResult { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HResult" />
      <MemberSignature Language="DocId" Value="P:System.Exception.HResult" />
      <MemberSignature Language="VB.NET" Value="Public Property HResult As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:  property int HResult {  public:&#xA;int get(); protected:&#xA; void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="caf2c-388">Ruft HRESULT ab oder legt HRESULT fest. Dies ist ein codierter Wert, der einer bestimmten Ausnahme zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caf2c-388">Gets or sets HRESULT, a coded numerical value that is assigned to a specific exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="caf2c-389">Der HRESULT-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caf2c-389">The HRESULT value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caf2c-390">HRESULT ist eine 32-Bit-Wert, der in drei separate Felder unterteilt: fehlergewichtung, Funktionscode und Fehlercode.</span><span class="sxs-lookup"><span data-stu-id="caf2c-390">HRESULT is a 32-bit value, divided into three different fields: a severity code, a facility code, and an error code.</span></span> <span data-ttu-id="caf2c-391">Die fehlergewichtung gibt an, ob der Rückgabewert Informationen, Warnung oder Fehler darstellt.</span><span class="sxs-lookup"><span data-stu-id="caf2c-391">The severity code indicates whether the return value represents information, warning, or error.</span></span> <span data-ttu-id="caf2c-392">Der Funktionscode identifiziert den Bereich des Systems für den Fehler verantwortlich.</span><span class="sxs-lookup"><span data-stu-id="caf2c-392">The facility code identifies the area of the system responsible for the error.</span></span> <span data-ttu-id="caf2c-393">Der Fehlercode ist eine eindeutige Nummer, die zum Darstellen der Ausnahme zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="caf2c-393">The error code is a unique number that is assigned to represent the exception.</span></span> <span data-ttu-id="caf2c-394">Jede Ausnahme ist einem eindeutigen HRESULT zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="caf2c-394">Each exception is mapped to a distinct HRESULT.</span></span> <span data-ttu-id="caf2c-395">Wenn verwalteter Code eine Ausnahme auslöst, übergibt die Common Language Runtime HRESULT an COM-Client.</span><span class="sxs-lookup"><span data-stu-id="caf2c-395">When managed code throws an exception, the runtime passes the HRESULT to the COM client.</span></span> <span data-ttu-id="caf2c-396">Bei nicht verwalteter Code einen Fehler zurückgibt, wird HRESULT auf eine Ausnahme konvertiert, die dann von der Laufzeit ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="caf2c-396">When unmanaged code returns an error, the HRESULT is converted to an exception, which is then thrown by the runtime.</span></span> <span data-ttu-id="caf2c-397">Weitere Informationen zu HRESULT-Werte und ihre entsprechenden .NET Framework-Ausnahmen, finden Sie unter [Vorgehensweise: Zuordnen von HRESULTs und Ausnahmen](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span><span class="sxs-lookup"><span data-stu-id="caf2c-397">For information about HRESULT values and their corresponding .NET Framework exceptions, see [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span></span> <span data-ttu-id="caf2c-398">Finden Sie unter [häufig auftretende HRESULT-Werte](http://msdn.microsoft.com/library/windows/desktop/aa378137.aspx) in der Windows-Dokumentation finden Sie eine Liste der Werte, die am wahrscheinlichsten mit auftreten.</span><span class="sxs-lookup"><span data-stu-id="caf2c-398">See [Common HRESULT Values](http://msdn.microsoft.com/library/windows/desktop/aa378137.aspx) in the Windows documentation for a list of the values you are most likely to encounter.</span></span>  
  
 <span data-ttu-id="caf2c-399">Beginnend mit der [!INCLUDE[net_v45](~/includes/net-v45-md.md)]die <xref:System.Exception.HResult%2A> Setter für eine Eigenschaft des geschützt werden, während die Getter-Methode öffentlich ist.</span><span class="sxs-lookup"><span data-stu-id="caf2c-399">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <xref:System.Exception.HResult%2A> property's setter is protected, whereas its getter is public.</span></span>  <span data-ttu-id="caf2c-400">In früheren Versionen von .NET Framework sind Getter und Setter geschützt.</span><span class="sxs-lookup"><span data-stu-id="caf2c-400">In previous versions of the .NET Framework, both getter and setter are protected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="caf2c-401">Das folgende Codebeispiel definiert einen abgeleiteten `Exception` Klasse, die festlegt der `HResult` Eigenschaft, um einen benutzerdefinierten Wert im entsprechenden Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="caf2c-401">The following code example defines a derived `Exception` class that sets the `HResult` property to a custom value in its constructor.</span></span>  
  
 [!code-cpp[System.Exception.HResult#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.HResult/CPP/hresult.cpp#1)]
 [!code-csharp[System.Exception.HResult#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.HResult/CS/hresult.cs#1)]
 [!code-vb[System.Exception.HResult#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.HResult/VB/hresult.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerException">
      <MemberSignature Language="C#" Value="public Exception InnerException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception InnerException" />
      <MemberSignature Language="DocId" Value="P:System.Exception.InnerException" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InnerException As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ InnerException { Exception ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.InnerException</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="caf2c-402">Ruft die <see cref="T:System.Exception" />-Instanz ab, die die aktuelle Ausnahme verursacht hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caf2c-402">Gets the <see cref="T:System.Exception" /> instance that caused the current exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="caf2c-403">Eine Instanz, die den Fehler beschreibt, der die aktuelle Ausnahme verursacht hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caf2c-403">An object that describes the error that caused the current exception.</span>
          </span>
          <span data-ttu-id="caf2c-404">Die <see cref="P:System.Exception.InnerException" />-Eigenschaft gibt gleichen Wert zurück, der an den <see cref="M:System.Exception.#ctor(System.String,System.Exception)" />-Konstruktor übergeben wurde, oder <see langword="null" />, wenn der Wert der inneren Ausnahme nicht an den Konstruktor übergeben wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caf2c-404">The <see cref="P:System.Exception.InnerException" /> property returns the same value as was passed into the <see cref="M:System.Exception.#ctor(System.String,System.Exception)" /> constructor, or <see langword="null" /> if the inner exception value was not supplied to the constructor.</span>
          </span>
          <span data-ttu-id="caf2c-405">Diese Eigenschaft ist schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caf2c-405">This property is read-only.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caf2c-406">Wenn eine Ausnahme `X` , die als direktes Ergebnis einer vorhergehenden Ausnahme ausgelöst wird `Y`, <xref:System.Exception.InnerException%2A> Eigenschaft `X` sollten enthalten einen Verweis auf `Y`.</span><span class="sxs-lookup"><span data-stu-id="caf2c-406">When an exception `X` is thrown as a direct result of a previous exception `Y`, the <xref:System.Exception.InnerException%2A> property of `X` should contain a reference to `Y`.</span></span>  
  
 <span data-ttu-id="caf2c-407">Über die <xref:System.Exception.InnerException%2A>-Eigenschaft kann die Gruppe von Ausnahmen abgerufen werden, die zur aktuellen Ausnahme geführt hat.</span><span class="sxs-lookup"><span data-stu-id="caf2c-407">Use the <xref:System.Exception.InnerException%2A> property to obtain the set of exceptions that led to the current exception.</span></span>  
  
 <span data-ttu-id="caf2c-408">Sie können eine neue Ausnahme erstellen, die eine frühere Ausnahme abfängt.</span><span class="sxs-lookup"><span data-stu-id="caf2c-408">You can create a new exception that catches an earlier exception.</span></span> <span data-ttu-id="caf2c-409">Der Code, der Handles, die zweite Ausnahme vornehmen, kann, die zusätzlichen Informationen aus der früheren Ausnahme verwenden, um den Fehler besser zu behandeln.</span><span class="sxs-lookup"><span data-stu-id="caf2c-409">The code that handles the second exception can make use of the additional information from the earlier exception to handle the error more appropriately.</span></span>  
  
 <span data-ttu-id="caf2c-410">Nehmen Sie an, dass eine Funktion, die eine Datei liest und formatiert die Daten aus dieser Datei vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="caf2c-410">Suppose that there is a function that reads a file and formats the data from that file.</span></span> <span data-ttu-id="caf2c-411">In diesem Beispiel, wenn der Code versucht, zum Lesen der Datei ein <xref:System.IO.IOException> ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="caf2c-411">In this example, as the code tries to read the file, an <xref:System.IO.IOException> is thrown.</span></span> <span data-ttu-id="caf2c-412">Die Funktion fängt die <xref:System.IO.IOException> und löst eine <xref:System.IO.FileNotFoundException>.</span><span class="sxs-lookup"><span data-stu-id="caf2c-412">The function catches the <xref:System.IO.IOException> and throws a <xref:System.IO.FileNotFoundException>.</span></span> <span data-ttu-id="caf2c-413">Der <xref:System.IO.IOException> gespeichert werden konnten, der <xref:System.Exception.InnerException%2A> Eigenschaft der <xref:System.IO.FileNotFoundException>, aktivieren den Code, abfängt der <xref:System.IO.FileNotFoundException> untersuchen Sie die Ursache für den ursprünglichen Fehler.</span><span class="sxs-lookup"><span data-stu-id="caf2c-413">The <xref:System.IO.IOException> could be saved in the <xref:System.Exception.InnerException%2A> property of the <xref:System.IO.FileNotFoundException>, enabling the code that catches the <xref:System.IO.FileNotFoundException> to examine the cause of the initial error.</span></span>  
  
 <span data-ttu-id="caf2c-414">Die <xref:System.Exception.InnerException%2A> -Eigenschaft, die einen Verweis auf die innere Ausnahme enthält, bei der Initialisierung des Ausnahmeobjekts festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="caf2c-414">The <xref:System.Exception.InnerException%2A> property, which holds a reference to the inner exception, is set upon initialization of the exception object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="caf2c-415">Im folgende Beispiel wird veranschaulicht, auslösen und Abfangen einer Ausnahme, die eine innere Ausnahme verweist.</span><span class="sxs-lookup"><span data-stu-id="caf2c-415">The following example demonstrates throwing and catching an exception that references an inner exception.</span></span>  
  
 [!code-cpp[InnerEx#1](~/samples/snippets/cpp/VS_Snippets_CLR/InnerEx/CPP/innerex.cpp#1)]
 [!code-csharp[InnerEx#1](~/samples/snippets/csharp/VS_Snippets_CLR/InnerEx/CS/innerex.cs#1)]
 [!code-vb[InnerEx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/InnerEx/VB/innerex.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public virtual string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.Exception.Message" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Message { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.Message</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="caf2c-416">Ruft eine Meldung ab, die die aktuelle Ausnahme beschreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caf2c-416">Gets a message that describes the current exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="caf2c-417">Die Fehlermeldung, die die Ursache der Ausnahme erklärt, bzw. eine leere Zeichenfolge ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="caf2c-417">The error message that explains the reason for the exception, or an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caf2c-418">Fehlermeldungen als Ziel den Entwickler, der die Ausnahmebehandlung.</span><span class="sxs-lookup"><span data-stu-id="caf2c-418">Error messages target the developer who is handling the exception.</span></span> <span data-ttu-id="caf2c-419">Der Text, der die <xref:System.Exception.Message%2A> Eigenschaft sollte den Fehler vollständig beschreiben und nach Möglichkeit sollte auch erläutert, wie Sie den Fehler zu beheben.</span><span class="sxs-lookup"><span data-stu-id="caf2c-419">The text of the <xref:System.Exception.Message%2A> property should completely describe the error and, when possible, should also explain how to correct the error.</span></span> <span data-ttu-id="caf2c-420">Ausnahmehandler der obersten Ebene können Endbenutzer, die Meldung angezeigt, deshalb Sie sicherstellen sollten, dass sie grammatisch richtig ist und dass jeder Satz der Nachricht mit einem Punkt endet.</span><span class="sxs-lookup"><span data-stu-id="caf2c-420">Top-level exception handlers may display the message to end-users, so you should ensure that it is grammatically correct and that each sentence of the message ends with a period.</span></span> <span data-ttu-id="caf2c-421">Verwenden Sie Fragezeichen oder Ausrufezeichen.</span><span class="sxs-lookup"><span data-stu-id="caf2c-421">Do not use question marks or exclamation points.</span></span> <span data-ttu-id="caf2c-422">Wenn Ihre Anwendung lokalisierte ausnahmemeldungen verwendet, sollten Sie sicherstellen, dass sie genau übersetzt werden.</span><span class="sxs-lookup"><span data-stu-id="caf2c-422">If your application uses localized exception messages, you should ensure that they are accurately translated.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="caf2c-423">Legen Sie sicherheitsrelevante Informationen in der ausnahmemeldungen nicht ohne Überprüfung der erforderlichen Berechtigungen verfügen.</span><span class="sxs-lookup"><span data-stu-id="caf2c-423">Do not disclose sensitive information in exception messages without checking for the appropriate permissions.</span></span>  
  
 <span data-ttu-id="caf2c-424">Der Wert, der die <xref:System.Exception.Message%2A> Eigenschaft ist in der zurückgegebenen Informationen enthalten <xref:System.Exception.ToString%2A>. Die <xref:System.Exception.Message%2A> Eigenschaftensatz wird nur beim Erstellen einer <xref:System.Exception>.</span><span class="sxs-lookup"><span data-stu-id="caf2c-424">The value of the <xref:System.Exception.Message%2A> property is included in the information returned by <xref:System.Exception.ToString%2A>.The <xref:System.Exception.Message%2A> property is set only when creating an <xref:System.Exception>.</span></span> <span data-ttu-id="caf2c-425">Wenn keine Nachricht an den Konstruktor für die aktuelle Instanz angegeben wurde, stellt das System eine standardmeldung, die mit der aktuellen Systemkultur formatiert ist.</span><span class="sxs-lookup"><span data-stu-id="caf2c-425">If no message was supplied to the constructor for the current instance, the system supplies a default message that is formatted using the current system culture.</span></span>  
  
## <a name="windows-runtime-and-includenetv451includesnet-v451-mdmd"></a><span data-ttu-id="caf2c-426">Windows-Runtime und [!INCLUDE[net_v451](~/includes/net-v451-md.md)]</span><span class="sxs-lookup"><span data-stu-id="caf2c-426">Windows Runtime and [!INCLUDE[net_v451](~/includes/net-v451-md.md)]</span></span>  
 <span data-ttu-id="caf2c-427">Beginnend mit der [!INCLUDE[net_v451](~/includes/net-v451-md.md)] und [!INCLUDE[win81](~/includes/win81-md.md)], verbessert die Genauigkeit der Fehlermeldungen von Ausnahmen, die von Windows-Runtime-Typen und Member, die nicht Teil von .NET Framework sind weitergegeben werden.</span><span class="sxs-lookup"><span data-stu-id="caf2c-427">Starting with the [!INCLUDE[net_v451](~/includes/net-v451-md.md)] and [!INCLUDE[win81](~/includes/win81-md.md)], the fidelity of error messages from exceptions that are propagated from Windows Runtime types and members that are not part of the .NET Framework is improved.</span></span> <span data-ttu-id="caf2c-428">Insbesondere Ausnahme von Meldungen von Visual C++-komponentenerweiterungen (C + c++ / CX) werden nun wieder in .NET Framework weitergegeben <xref:System.Exception> Objekte.</span><span class="sxs-lookup"><span data-stu-id="caf2c-428">In particular, exception messages from Visual C++ component extensions (C++/CX) are now propagated back into .NET Framework <xref:System.Exception> objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="caf2c-429">Das folgende Codebeispiel löst aus, und klicken Sie dann fängt eine <xref:System.Exception> Ausnahme und zeigt die Ausnahme Text-Nachricht mithilfe der <xref:System.Exception.Message%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="caf2c-429">The following code example throws and then catches an <xref:System.Exception> exception and displays the exception's text message using the <xref:System.Exception.Message%2A> property.</span></span>
  
 [!code-cpp[System.Exception.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.Exception.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Properties/CS/properties.cs#1)]
 [!code-vb[System.Exception.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="caf2c-430">
            <para>Wenn eine aus einer Eigenschaft Ausnahme, und Sie im Text des verweisen müssen <see cref="P:System.Exception.Message" /> das Eigenschaft-Argument, das festgelegt oder abgerufen wird, verwenden Sie "Value" als Namen für das Eigenschaftsargument.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="caf2c-430">
              <para>If you throw an exception from a property, and you need to refer in the text of <see cref="P:System.Exception.Message" /> to the property argument that you set or get, use "value" as the name of the property argument.</para>
            </span>
          </span>
        </block>
        <block subset="none" type="overrides">
          <span data-ttu-id="caf2c-431">
            <para>Die <see cref="P:System.Exception.Message" /> Eigenschaft in Klassen, die Kontrolle über den Nachrichteninhalt oder Format erfordern überschrieben wird. Anwendungscode greift diese Eigenschaft in der Regel auf, wenn er muss zum Anzeigen von Informationen zu einer Ausnahme, die abgefangen wurde.  Die Fehlermeldung sollte lokalisiert werden.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="caf2c-431">
              <para>The <see cref="P:System.Exception.Message" /> property is overridden in classes that require control over message content or format. Application code typically accesses this property when it needs to display information about an exception that has been caught.  The error message should be localized.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SerializeObjectState">
      <MemberSignature Language="C#" Value="protected event EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt; SerializeObjectState;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Runtime.Serialization.SafeSerializationEventArgs&gt; SerializeObjectState" />
      <MemberSignature Language="DocId" Value="E:System.Exception.SerializeObjectState" />
      <MemberSignature Language="VB.NET" Value="Protected Custom Event SerializeObjectState As EventHandler(Of SafeSerializationEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; event EventHandler&lt;System::Runtime::Serialization::SafeSerializationEventArgs ^&gt; ^ SerializeObjectState;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="caf2c-432">Tritt auf, wenn eine Ausnahme serialisiert wird, um ein Ausnahmezustandsobjekt zu erstellen, das serialisierte Daten für die Ausnahme enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caf2c-432">Occurs when an exception is serialized to create an exception state object that contains serialized data about the exception.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caf2c-433">Die Ausnahmezustandsobjekt implementiert die <xref:System.Runtime.Serialization.ISafeSerializationData> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="caf2c-433">The exception state object implements the <xref:System.Runtime.Serialization.ISafeSerializationData> interface.</span></span>  
  
 <span data-ttu-id="caf2c-434">Wenn die <xref:System.Exception.SerializeObjectState> Ereignis abonniert ist, wird die Ausnahme deserialisiert und als leere Ausnahme erstellt.</span><span class="sxs-lookup"><span data-stu-id="caf2c-434">When the <xref:System.Exception.SerializeObjectState> event is subscribed to, the exception is deserialized and created as an empty exception.</span></span> <span data-ttu-id="caf2c-435">Der Konstruktor der Ausnahme nicht ausgeführt wird, und Ausnahmezustand auch deserialisiert wird.</span><span class="sxs-lookup"><span data-stu-id="caf2c-435">The exception's constructor is not run, and the exception state is also deserialized.</span></span> <span data-ttu-id="caf2c-436">Die <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A> Rückrufmethode des Ausnahmeobjekts Zustand wird dann benachrichtigt, damit es deserialisierte Daten in die leere Ausnahme per Push übertragen kann.</span><span class="sxs-lookup"><span data-stu-id="caf2c-436">The <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A> callback method of the exception state object is then notified so that it can push deserialized data into the empty exception.</span></span>  
  
 <span data-ttu-id="caf2c-437">Die <xref:System.Exception.SerializeObjectState> -Ereignis können transparente Ausnahmetypen zum Serialisieren und Deserialisieren der Ausnahmedaten.</span><span class="sxs-lookup"><span data-stu-id="caf2c-437">The <xref:System.Exception.SerializeObjectState> event enables transparent exception types to serialize and deserialize exception data.</span></span> <span data-ttu-id="caf2c-438">Transparenter Code kann Ausführungsbefehle innerhalb der Grenzen des Berechtigungssatzes, in denen sie innerhalb dieser ausgeführt wird, aber kann nicht ausgeführt, aufzurufen, abgeleitet oder kritischen Code enthalten.</span><span class="sxs-lookup"><span data-stu-id="caf2c-438">Transparent code can execute commands within the bounds of the permission set it is operating within, but cannot execute, call, derive from, or contain critical code.</span></span>  
  
 <span data-ttu-id="caf2c-439">Wenn die <xref:System.Exception.SerializeObjectState> Ereignis nicht abonniert ist, tritt die Deserialisierung wie gewohnt mithilfe der <xref:System.Exception.%23ctor%2A> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="caf2c-439">If the <xref:System.Exception.SerializeObjectState> event is not subscribed to, deserialization occurs as usual using the <xref:System.Exception.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="caf2c-440">In der Regel einen Handler für das <xref:System.Exception.SerializeObjectState> Ereignis im Konstruktor bereit, die Serialisierung der Ausnahme hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="caf2c-440">Typically, a handler for the <xref:System.Exception.SerializeObjectState> event is added in the exception's constructor to provide for its serialization.</span></span> <span data-ttu-id="caf2c-441">Weil der Konstruktor, nicht ist jedoch ausgeführt wird, wenn die <xref:System.Exception.SerializeObjectState> -Ereignishandler ausgeführt wird, serialisieren eine deserialisierte Ausnahme auslösen kann eine <xref:System.Runtime.Serialization.SerializationException> -Ausnahme aus, wenn Sie versuchen, die Ausnahme zu deserialisieren.</span><span class="sxs-lookup"><span data-stu-id="caf2c-441">But because the constructor is not executed when the <xref:System.Exception.SerializeObjectState> event handler executes, serializing a deserialized exception can throw a <xref:System.Runtime.Serialization.SerializationException> exception when you try to deserialize the exception.</span></span> <span data-ttu-id="caf2c-442">Um dies zu vermeiden, sollten Sie auch den Handler für Hinzufügen der <xref:System.Exception.SerializeObjectState> Ereignis in der <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="caf2c-442">To avoid this, you should also add the handler for the <xref:System.Exception.SerializeObjectState> event in the <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="caf2c-443">Finden Sie im Abschnitt Beispiele veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="caf2c-443">See the Examples section for an illustration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="caf2c-444">Das folgende Beispiel definiert eine `BadDivisionException` , verarbeitet die <xref:System.Exception.SerializeObjectState> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="caf2c-444">The following example defines a `BadDivisionException` that handles the <xref:System.Exception.SerializeObjectState> event.</span></span> <span data-ttu-id="caf2c-445">Es enthält auch ein Zustandsobjekt, also eine geschachtelte Struktur mit dem Namen `BadDivisionExceptionState` , implementiert die <xref:System.Runtime.Serialization.ISafeSerializationData> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="caf2c-445">It also contains a state object, which is a nested structure named `BadDivisionExceptionState` that implements the <xref:System.Runtime.Serialization.ISafeSerializationData> interface.</span></span>  
  
 [!code-csharp[System.Exception.SerializeObjectState#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.serializeobjectstate/cs/example2.cs#1)]
 [!code-vb[System.Exception.SerializeObjectState#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.serializeobjectstate/vb/example2.vb#1)]  
  
 <span data-ttu-id="caf2c-446">Die `BadDivisionException` Ausnahme wird ausgelöst, wenn eine Gleitkomma Division durch Null auftritt.</span><span class="sxs-lookup"><span data-stu-id="caf2c-446">The `BadDivisionException` exception is thrown when a floating-point division by zero occurs.</span></span> <span data-ttu-id="caf2c-447">Während der ersten Division durch 0 (null) werden im Beispiel wird instanziiert einen `BadDivisionException` -Objekt, serialisiert es und löst die Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="caf2c-447">During the first division by zero, the example instantiates a `BadDivisionException` object, serializes it, and throws the exception.</span></span> <span data-ttu-id="caf2c-448">Beim Auftreten von nachfolgenden Abteilungen durch 0 (null) wird im Beispiel das zuvor serialisierte Objekt deserialisiert, serialisiert es dann erneut und löst die Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="caf2c-448">When subsequent divisions by zero occur, the example deserializes the  previously serialized object, reserializes it, and throws the exception.</span></span> <span data-ttu-id="caf2c-449">Um für die Serialisierung, Deserialisierung, Reserialization und Deserialisierung zu ermöglichen, das Beispiel fügt die <xref:System.Exception.SerializeObjectState> -Ereignishandler sowohl in der `BadDivisionException` Klassenkonstruktor und klicken Sie in der <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A?displayProperty=nameWithType> Implementierung.</span><span class="sxs-lookup"><span data-stu-id="caf2c-449">To provide for object serialization, deserialization, reserialization, and deserialization, the example adds the <xref:System.Exception.SerializeObjectState> event handler both in the `BadDivisionException` class constructor and in the <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A?displayProperty=nameWithType> implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="caf2c-450">
            <para>Wenn dieses Ereignis abonniert und verwendet wird, müssen alle abgeleitete Typen, die in der Vererbungshierarchie folgen denselben Serialisierungsmechanismus implementieren.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="caf2c-450">
              <para>If this event is subscribed to and used, all derived types that follow in the inheritance hierarchy must implement the same serialization mechanism.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public virtual string Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Exception.Source" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Source { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.Source</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="caf2c-451">Gibt den Namen der Anwendung oder des Objekts zurück, die bzw. das den Fehler verursacht hat, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caf2c-451">Gets or sets the name of the application or the object that causes the error.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="caf2c-452">Der Name der Anwendung oder des Objekts, die bzw. das den Fehler verursacht hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caf2c-452">The name of the application or the object that causes the error.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caf2c-453">Wenn die <xref:System.Exception.Source%2A> Eigenschaft nicht explizit festgelegt wurde, die Common Language Runtime automatisch wird auf den Namen der Assembly, aus die Ausnahme stammt.</span><span class="sxs-lookup"><span data-stu-id="caf2c-453">If the <xref:System.Exception.Source%2A> property is not set explicitly, the runtime automatically sets it to the name of the assembly in which the exception originated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="caf2c-454">Das folgende Beispiel löst eine `Exception` festlegt, die die `Source` Eigenschaft in ihren Konstruktor ein, und fängt die Ausnahme und zeigt `Source`.</span><span class="sxs-lookup"><span data-stu-id="caf2c-454">The following example throws an `Exception` that sets the `Source` property in its constructor and then catches the exception and displays `Source`.</span></span>  
  
 [!code-cpp[System.Exception.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.Exception.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Properties/CS/properties.cs#1)]
 [!code-vb[System.Exception.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="caf2c-455">Das Objekt muss ein <see cref="N:System.Reflection" />-Laufzeitobjekt sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caf2c-455">The object must be a runtime <see cref="N:System.Reflection" /> object</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StackTrace">
      <MemberSignature Language="C#" Value="public virtual string StackTrace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StackTrace" />
      <MemberSignature Language="DocId" Value="P:System.Exception.StackTrace" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property StackTrace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ StackTrace { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.StackTrace</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="caf2c-456">Ruft eine Zeichenfolgendarstellung der unmittelbaren Frames in der Aufrufliste ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caf2c-456">Gets a string representation of the immediate frames on the call stack.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="caf2c-457">Eine Zeichenfolge, die die unmittelbaren Frames der Aufrufliste beschreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caf2c-457">A string that describes the immediate frames of the call stack.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caf2c-458">Der Ausführungsstapel verfolgt alle Methoden, die zu einem angegebenen Zeitpunkt gerade ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="caf2c-458">The execution stack keeps track of all the methods that are in execution at a given instant.</span></span> <span data-ttu-id="caf2c-459">Ein Überwachungsprotokoll der Methodenaufrufe wird als Stapelüberwachung bezeichnet.</span><span class="sxs-lookup"><span data-stu-id="caf2c-459">A trace of the method calls is called a stack trace.</span></span> <span data-ttu-id="caf2c-460">Der Stapel-Trace-Angebot bietet eine Möglichkeit, befolgen die Aufrufliste der Zeilennummer in der Methode, in der die Ausnahme auftritt.</span><span class="sxs-lookup"><span data-stu-id="caf2c-460">The stack trace listing provides a way to follow the call stack to the line number in the method where the exception occurs.</span></span>  
  
 <span data-ttu-id="caf2c-461">Die <xref:System.Exception.StackTrace%2A> Eigenschaft gibt die Frames der Aufrufliste, die am Speicherort stammen, in dem die Ausnahme ausgelöst wurde.</span><span class="sxs-lookup"><span data-stu-id="caf2c-461">The <xref:System.Exception.StackTrace%2A> property returns the frames of the call stack that originate at the location where the exception was thrown.</span></span> <span data-ttu-id="caf2c-462">Erhalten Sie Informationen zu zusätzlichen Frames in der Aufrufliste durch Erstellen einer neuen Instanz der <xref:System.Diagnostics.StackTrace?displayProperty=nameWithType> -Klasse festlegen und seine <xref:System.Diagnostics.StackTrace.ToString%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="caf2c-462">You can obtain information about additional frames in the call stack by creating a new instance of the <xref:System.Diagnostics.StackTrace?displayProperty=nameWithType> class and using its <xref:System.Diagnostics.StackTrace.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="caf2c-463">Die common Language Runtime (CLR) aktualisiert Stapelrahmen, sobald im Anwendungscode eine Ausnahme ausgelöst wird (mithilfe der `throw` Schlüsselwort).</span><span class="sxs-lookup"><span data-stu-id="caf2c-463">The common language runtime (CLR) updates the stack trace whenever an exception is thrown in application code (by using the `throw` keyword).</span></span> <span data-ttu-id="caf2c-464">Wenn die Ausnahme in einer Methode erneut, die unterscheidet sich von der Methode ausgelöst wurde, in dem es ursprünglich ausgelöst wurde, enthält die stapelüberwachung sowohl den Speicherort in der Methode, in dem die Ausnahme ursprünglich ausgelöst wurde, und den Speicherort in der Methode, in dem die Ausnahme war erneut ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="caf2c-464">If the exception was rethrown in a method that is different than the method where it was originally thrown, the stack trace contains both the location in the method where the exception was originally thrown, and the location in the method where the exception was rethrown.</span></span> <span data-ttu-id="caf2c-465">Wenn die Ausnahme ausgelöst wird, und später erneut ausgelöst, in der gleichen Methode enthält die stapelüberwachung nur den Speicherort, in dem die Ausnahme erneut ausgelöst wurde, und schließt nicht den Speicherort, in dem die Ausnahme ursprünglich ausgelöst wurde.</span><span class="sxs-lookup"><span data-stu-id="caf2c-465">If the exception is thrown, and later rethrown, in the same method, the stack trace only contains the location where the exception was rethrown and does not include the location where the exception was originally thrown.</span></span>  
  
 <span data-ttu-id="caf2c-466">Die <xref:System.Exception.StackTrace%2A> Eigenschaft meldet möglicherweise nicht so viele Methodenaufrufe erwartungsgemäß aufgrund Codetransformationen, z. B. inlining dar, die während der Optimierung auftreten.</span><span class="sxs-lookup"><span data-stu-id="caf2c-466">The <xref:System.Exception.StackTrace%2A> property may not report as many method calls as expected because of code transformations, such as inlining, that occur during optimization.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="caf2c-467">Das folgende Codebeispiel löst das Beispiel ein `Exception` abgefangen und zeigt einen Stapel datenzugriffsablaufverfolgung unter Verwendung der `StackTrace` Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="caf2c-467">The following code example throws an `Exception` and then catches it and displays a stack trace using the `StackTrace` property.</span></span>  
  
 [!code-cpp[System.Exception.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.Exception.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Properties/CS/properties.cs#1)]
 [!code-vb[System.Exception.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="caf2c-468">
            <para>Die <see langword="StackTrace" /> Eigenschaft in Klassen, die Kontrolle über den Stapel Ablaufverfolgungsinhalt oder das Format erfordern überschrieben wird.  Standardmäßig wird die stapelüberwachung erfasst, unmittelbar bevor ein Exception-Objekt ausgelöst wird. Verwendung <see cref="P:System.Environment.StackTrace" /> Stapelüberwachungsinformationen abgerufen, wenn keine Ausnahme ausgelöst wird.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="caf2c-468">
              <para>The <see langword="StackTrace" /> property is overridden in classes that require control over the stack trace content or format.  By default, the stack trace is captured immediately before an exception object is thrown. Use <see cref="P:System.Environment.StackTrace" /> to get stack trace information when no exception is being thrown.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Environment.StackTrace" />
      </Docs>
    </Member>
    <Member MemberName="TargetSite">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodBase TargetSite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodBase TargetSite" />
      <MemberSignature Language="DocId" Value="P:System.Exception.TargetSite" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetSite As MethodBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodBase ^ TargetSite { System::Reflection::MethodBase ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.TargetSite</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="caf2c-469">Ruft die Methode ab, die die aktuelle Ausnahme auslöst.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caf2c-469">Gets the method that throws the current exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="caf2c-470">Die <see cref="T:System.Reflection.MethodBase" />, die die aktuelle Ausnahme ausgelöst hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caf2c-470">The <see cref="T:System.Reflection.MethodBase" /> that threw the current exception.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caf2c-471">Wenn die Methode, die diese Ausnahme auslöst, nicht verfügbar ist, und es nicht die stapelüberwachung ein null-Verweis ist (`Nothing` in Visual Basic), <xref:System.Exception.TargetSite%2A> erhält die Methode von der stapelüberwachung.</span><span class="sxs-lookup"><span data-stu-id="caf2c-471">If the method that throws this exception is not available and the stack trace is not a null reference (`Nothing` in Visual Basic), <xref:System.Exception.TargetSite%2A> obtains the method from the stack trace.</span></span> <span data-ttu-id="caf2c-472">Wenn die Stapelüberwachung ein NULL-Verweis ist, gibt <xref:System.Exception.TargetSite%2A> ebenfalls einen NULL-Verweis zurück.</span><span class="sxs-lookup"><span data-stu-id="caf2c-472">If the stack trace is a null reference, <xref:System.Exception.TargetSite%2A> also returns a null reference.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="caf2c-473">Die <xref:System.Exception.TargetSite%2A> Eigenschaft möglicherweise nicht genau melden kann, den Namen der Methode in der eine Ausnahme ausgelöst wurde, wenn der Ausnahmehandler eine Ausnahme über Anwendungsdomänengrenzen hinweg behandelt.</span><span class="sxs-lookup"><span data-stu-id="caf2c-473">The <xref:System.Exception.TargetSite%2A> property may not accurately report the name of the method in which an exception was thrown if the exception handler handles an exception across application domain boundaries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="caf2c-474">Das folgende Codebeispiel löst das Beispiel ein `Exception` abgefangen und zeigt die ursprüngliche Methode mithilfe der `TargetSite` Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="caf2c-474">The following code example throws an `Exception` and then catches it and displays the originating method using the `TargetSite` property.</span></span>  
  
 [!code-cpp[System.Exception.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.Exception.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Properties/CS/properties.cs#1)]
 [!code-vb[System.Exception.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Exception.ToString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="caf2c-475">Erstellt eine Zeichenfolgendarstellung der aktuellen Ausnahme und gibt diese zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caf2c-475">Creates and returns a string representation of the current exception.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="caf2c-476">Eine Zeichenfolgendarstellung der aktuellen Ausnahme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="caf2c-476">A string representation of the current exception.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caf2c-477"><xref:System.Exception.ToString%2A> Gibt eine Darstellung der aktuellen Ausnahme, die vorgesehen ist, für Personen verständlich sein.</span><span class="sxs-lookup"><span data-stu-id="caf2c-477"><xref:System.Exception.ToString%2A> returns a representation of the current exception that is intended to be understood by humans.</span></span> <span data-ttu-id="caf2c-478">Die Ausnahme kulturabhängige Daten enthält, die Zeichenfolgendarstellung zurückgegebenes `ToString` ist erforderlich, um die aktuelle Systemkultur berücksichtigt.</span><span class="sxs-lookup"><span data-stu-id="caf2c-478">Where the exception contains culture-sensitive data, the string representation returned by `ToString` is required to take into account the current system culture.</span></span> <span data-ttu-id="caf2c-479">Es gibt, zwar keine Bindungen die Anforderungen für das Format der zurückgegebenen Zeichenfolge sollte es der Wert des Objekts als vom Benutzer wahrgenommene wider.</span><span class="sxs-lookup"><span data-stu-id="caf2c-479">Although there are no exact requirements for the format of the returned string, it should attempt to reflect the value of the object as perceived by the user.</span></span>  
  
 <span data-ttu-id="caf2c-480">Die standardmäßige Implementierung des <xref:System.Exception.ToString%2A> erhält den Namen der Klasse, die ausgelöst, die aktuelle Ausnahme, die die Nachricht, die das Ergebnis des Aufrufs hat <xref:System.Exception.ToString%2A> auf die innere Ausnahme und das Ergebnis des Aufrufs <xref:System.Environment.StackTrace%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="caf2c-480">The default implementation of <xref:System.Exception.ToString%2A> obtains the name of the class that threw the current exception, the message, the result of calling <xref:System.Exception.ToString%2A> on the inner exception, and the result of calling <xref:System.Environment.StackTrace%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="caf2c-481">Wenn eine dieser Member ist `null`, dessen Wert nicht in der zurückgegebenen Zeichenfolge enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="caf2c-481">If any of these members is `null`, its value is not included in the returned string.</span></span>  
  
 <span data-ttu-id="caf2c-482">Es ist keine Fehlermeldung oder ist eine leere Zeichenfolge (""), wird keine Fehlermeldung zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="caf2c-482">If there is no error message or if it is an empty string (""), then no error message is returned.</span></span> <span data-ttu-id="caf2c-483">Der Namen der inneren Ausnahme und die stapelüberwachung werden nur zurückgegeben, wenn sie nicht sind `null`.</span><span class="sxs-lookup"><span data-stu-id="caf2c-483">The name of the inner exception and the stack trace are returned only if they are not `null`.</span></span>  
  
 <span data-ttu-id="caf2c-484">Diese Methode überschreibt <xref:System.Object.ToString%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="caf2c-484">This method overrides <xref:System.Object.ToString%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="caf2c-485">Im folgenden Beispiel wird eine Ausnahme ausgelöst und zeigt das Ergebnis des Aufrufs <xref:System.Exception.ToString%2A> für diese Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="caf2c-485">The following example causes an exception and displays the result of calling <xref:System.Exception.ToString%2A> on that exception.</span></span> <span data-ttu-id="caf2c-486">Beachten Sie, dass die <xref:System.Exception.ToString%2A?displayProperty=nameWithType> Methode wird implizit aufgerufen, wenn die Instanz einer Klasse in der Argumentliste der angezeigt wird die <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="caf2c-486">Note that the <xref:System.Exception.ToString%2A?displayProperty=nameWithType> method is called implicitly when the Exception class instance appears in the argument list of the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[System.Exception.ToString#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.exception.tostring/cpp/ToStringEx1.cpp#1)]
 [!code-csharp[System.Exception.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.tostring/cs/ToStringEx1.cs#1)]
 [!code-vb[System.Exception.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.tostring/vb/ToStringEx1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>