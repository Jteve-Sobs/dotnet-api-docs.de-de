<Type Name="Exception" FullName="System.Exception">
  <Metadata><Meta Name="ms.openlocfilehash" Value="eb6797dc200c526dc268760dcd3d3d5aa9b6a1f4" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82293336" /></Metadata><TypeSignature Language="C#" Value="public class Exception" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Exception extends System.Object" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
  <TypeSignature Language="DocId" Value="T:System.Exception" />
  <TypeSignature Language="VB.NET" Value="Public Class Exception" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
  <TypeSignature Language="C++ CLI" Value="public ref class Exception" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
  <TypeSignature Language="F#" Value="type Exception = class" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
  <TypeSignature Language="C#" Value="public class Exception : System.Runtime.Serialization.ISerializable" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Exception extends System.Object implements class System.Runtime.Serialization.ISerializable" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="VB.NET" Value="Public Class Exception&#xA;Implements ISerializable" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8" />
  <TypeSignature Language="C++ CLI" Value="public ref class Exception : System::Runtime::Serialization::ISerializable" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8" />
  <TypeSignature Language="F#" Value="type Exception = class&#xA;    interface ISerializable" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Exception extends System.Object implements class System.Runtime.Serialization.ISerializable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C#" Value="public class Exception : System.Runtime.InteropServices._Exception, System.Runtime.Serialization.ISerializable" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Exception extends System.Object implements class System.Runtime.InteropServices._Exception, class System.Runtime.Serialization.ISerializable" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="VB.NET" Value="Public Class Exception&#xA;Implements _Exception, ISerializable" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class Exception : System::Runtime::InteropServices::_Exception, System::Runtime::Serialization::ISerializable" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type Exception = class&#xA;    interface ISerializable&#xA;    interface _Exception" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable beforefieldinit Exception extends System.Object implements class System.Runtime.Serialization.ISerializable" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable beforefieldinit Exception extends System.Object implements class System.Runtime.InteropServices._Exception, class System.Runtime.Serialization.ISerializable" FrameworkAlternate="xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._Exception</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._Exception))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDual)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="80c70-101">Stellt Fehler dar, die bei der Anwendungsausf√ºhrung auftreten.</span><span class="sxs-lookup"><span data-stu-id="80c70-101">Represents errors that occur during application execution.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80c70-102">Diese Klasse ist die Basisklasse f√ºr alle Ausnahmen.</span><span class="sxs-lookup"><span data-stu-id="80c70-102">This class is the base class for all exceptions.</span></span> <span data-ttu-id="80c70-103">Wenn ein Fehler auftritt, meldet das System oder die aktuell ausgef√ºhrte Anwendung Sie durch Ausl√∂sen einer Ausnahme, die Informationen √ºber den Fehler enth√§lt.</span><span class="sxs-lookup"><span data-stu-id="80c70-103">When an error occurs, either the system or the currently executing application reports it by throwing an exception that contains information about the error.</span></span> <span data-ttu-id="80c70-104">Nachdem eine Ausnahme ausgel√∂st wurde, wird Sie von der Anwendung oder vom Standard Ausnahmehandler behandelt.</span><span class="sxs-lookup"><span data-stu-id="80c70-104">After an exception is thrown, it is handled by the application or by the default exception handler.</span></span>  
  
 <span data-ttu-id="80c70-105">Inhalt dieses Abschnitts:</span><span class="sxs-lookup"><span data-stu-id="80c70-105">In this section:</span></span>  
  
 <span data-ttu-id="80c70-106">[Fehler und Ausnahmen](#Errors) </span><span class="sxs-lookup"><span data-stu-id="80c70-106">[Errors and exceptions](#Errors) </span></span>  
 <span data-ttu-id="80c70-107">[Try/catch-Bl√∂cke](#TryCatch) </span><span class="sxs-lookup"><span data-stu-id="80c70-107">[Try/catch blocks](#TryCatch) </span></span>  
 <span data-ttu-id="80c70-108">[Ausnahmetyp Features](#Features) </span><span class="sxs-lookup"><span data-stu-id="80c70-108">[Exception type features](#Features) </span></span>  
 <span data-ttu-id="80c70-109">[Eigenschaften der Ausnahme Klasse](#Properties) </span><span class="sxs-lookup"><span data-stu-id="80c70-109">[Exception class properties](#Properties) </span></span>  
 <span data-ttu-id="80c70-110">[√úberlegungen zur Leistung](#Performance) </span><span class="sxs-lookup"><span data-stu-id="80c70-110">[Performance considerations](#Performance) </span></span>  
 <span data-ttu-id="80c70-111">Erneutes Ausl√∂sen [einer Ausnahme](#Rethrow) </span><span class="sxs-lookup"><span data-stu-id="80c70-111">[Re-throwing an exception](#Rethrow) </span></span>  
 <span data-ttu-id="80c70-112">[Ausw√§hlen von Standard Ausnahmen](#Standard) </span><span class="sxs-lookup"><span data-stu-id="80c70-112">[Choosing standard exceptions](#Standard) </span></span>  
 [<span data-ttu-id="80c70-113">Implementieren von benutzerdefinierten Ausnahmen</span><span class="sxs-lookup"><span data-stu-id="80c70-113">Implementing custom exceptions</span></span>](#Custom)  
  
<a name="Errors"></a>   
## <a name="errors-and-exceptions"></a><span data-ttu-id="80c70-114">Fehler und Ausnahmen</span><span class="sxs-lookup"><span data-stu-id="80c70-114">Errors and exceptions</span></span>  
 <span data-ttu-id="80c70-115">Laufzeitfehler k√∂nnen aus einer Vielzahl von Gr√ºnden auftreten.</span><span class="sxs-lookup"><span data-stu-id="80c70-115">Run-time errors can occur for a variety of reasons.</span></span> <span data-ttu-id="80c70-116">Allerdings sollten nicht alle Fehler im Code als Ausnahmen behandelt werden.</span><span class="sxs-lookup"><span data-stu-id="80c70-116">However, not all errors should be handled as exceptions in your code.</span></span> <span data-ttu-id="80c70-117">Im folgenden finden Sie einige Fehlerkategorien, die zur Laufzeit auftreten k√∂nnen, sowie die entsprechenden M√∂glichkeiten, um darauf zu reagieren.</span><span class="sxs-lookup"><span data-stu-id="80c70-117">Here are some categories of errors that can occur at run time and the appropriate ways to respond to them.</span></span>  
  
-   <span data-ttu-id="80c70-118">**Verwendungs Fehler.**</span><span class="sxs-lookup"><span data-stu-id="80c70-118">**Usage errors.**</span></span> <span data-ttu-id="80c70-119">Ein Verwendungs Fehler stellt einen Fehler in der Programmlogik dar, der zu einer Ausnahme f√ºhren kann.</span><span class="sxs-lookup"><span data-stu-id="80c70-119">A usage error represents an error in program logic that can result in an exception.</span></span> <span data-ttu-id="80c70-120">Der Fehler sollte jedoch nicht durch die Ausnahmebehandlung behoben werden, sondern durch √Ñndern des fehlerhaften Codes.</span><span class="sxs-lookup"><span data-stu-id="80c70-120">However, the error should be addressed not through exception handling but by modifying the faulty code.</span></span> <span data-ttu-id="80c70-121">Beispielsweise wird bei der √úberschreibung der <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType>-Methode im folgenden Beispiel davon ausgegangen, dass das `obj`-Argument immer nicht NULL sein muss.</span><span class="sxs-lookup"><span data-stu-id="80c70-121">For example, the override of the <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> method in the following example assumes that the `obj` argument must always be non-null.</span></span>  
  
     [!code-csharp[System.Exception.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/usageerrors1.cs#4)]
     [!code-vb[System.Exception.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/usageerrors1.vb#4)]  
  
     <span data-ttu-id="80c70-122">Die <xref:System.NullReferenceException> Ausnahme, die sich ergibt, wenn `obj` `null` ist, kann durch √Ñndern des Quellcodes zum expliziten testen auf Null gel√∂scht werden, bevor der <xref:System.Object.Equals%2A?displayProperty=nameWithType> override aufgerufen und anschlie√üend erneut kompiliert wird.</span><span class="sxs-lookup"><span data-stu-id="80c70-122">The <xref:System.NullReferenceException> exception that results when `obj` is `null` can be eliminated by modifying the source code to explicitly test for null before calling the <xref:System.Object.Equals%2A?displayProperty=nameWithType> override and then re-compiling.</span></span> <span data-ttu-id="80c70-123">Das folgende Beispiel enth√§lt den korrigierten Quellcode, der ein `null` Argument behandelt.</span><span class="sxs-lookup"><span data-stu-id="80c70-123">The following example contains the corrected source code that handles a `null` argument.</span></span>  
  
     [!code-csharp[System.Exception.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/usageerrors2.cs#5)]
     [!code-vb[System.Exception.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/usageerrors2.vb#5)]  
  
     <span data-ttu-id="80c70-124">Anstatt die Ausnahmebehandlung bei Verwendungs Fehlern zu verwenden, k√∂nnen Sie die <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType>-Methode verwenden, um Verwendungs Fehler in Debugbuilds zu identifizieren, und die <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType>-Methode zum Identifizieren von Verwendungs Fehlern in Debug-und Releasebuilds.</span><span class="sxs-lookup"><span data-stu-id="80c70-124">Instead of using exception handling for usage errors, you can use the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method to identify usage errors in debug builds, and the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method to identify usage errors in both debug and release builds.</span></span> <span data-ttu-id="80c70-125">Weitere Informationen finden Sie unter [Assertionen in verwaltetem Code](/visualstudio/debugger/assertions-in-managed-code).</span><span class="sxs-lookup"><span data-stu-id="80c70-125">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
-   <span data-ttu-id="80c70-126">**Programmfehler.**</span><span class="sxs-lookup"><span data-stu-id="80c70-126">**Program errors.**</span></span> <span data-ttu-id="80c70-127">Ein Programmfehler ist ein Laufzeitfehler, der nicht zwangsl√§ufig vermieden werden kann, indem fehlerfreier Code geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="80c70-127">A program error is a run-time error that cannot necessarily be avoided by writing bug-free code.</span></span>  
  
     <span data-ttu-id="80c70-128">In einigen F√§llen kann ein Programmfehler eine erwartete oder routinem√§√üige Fehlerbedingung widerspiegeln.</span><span class="sxs-lookup"><span data-stu-id="80c70-128">In some cases, a program error may reflect an expected or routine error condition.</span></span> <span data-ttu-id="80c70-129">In diesem Fall sollten Sie die Verwendung der Ausnahmebehandlung bei der Behandlung des Programmfehlers vermeiden und stattdessen den Vorgang wiederholen.</span><span class="sxs-lookup"><span data-stu-id="80c70-129">In this case, you may want to avoid using exception handling to deal with the program error and instead retry the operation.</span></span> <span data-ttu-id="80c70-130">Wenn der Benutzer beispielsweise erwartet, dass ein Datum in einem bestimmten Format eingegeben wird, k√∂nnen Sie die Datums Zeichenfolge analysieren, indem Sie die <xref:System.DateTime.TryParseExact%2A?displayProperty=nameWithType>-Methode aufrufen, die einen <xref:System.Boolean> Wert zur√ºckgibt, der angibt, ob der Analyse Vorgang erfolgreich war, und nicht die <xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType>-Methode, die eine <xref:System.FormatException> Ausnahme ausl√∂st, wenn die Datums Zeichenfolge nicht in einen <xref:System.DateTime> Wert konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="80c70-130">For example, if the user is expected to input a date in a particular format, you can parse the date string by calling the <xref:System.DateTime.TryParseExact%2A?displayProperty=nameWithType> method, which returns a <xref:System.Boolean> value that indicates whether the parse operation succeeded, instead of using the <xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> method, which throws a <xref:System.FormatException> exception if the date string cannot be converted to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="80c70-131">Wenn ein Benutzer versucht, eine Datei zu √∂ffnen, die nicht vorhanden ist, k√∂nnen Sie zun√§chst die <xref:System.IO.File.Exists%2A?displayProperty=nameWithType>-Methode aufzurufen, um zu √ºberpr√ºfen, ob die Datei vorhanden ist. wenn dies nicht der Fall ist, k√∂nnen Sie den Benutzer auffordern, ihn zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="80c70-131">Similarly, if a user tries to open a file that does not exist, you can first call the <xref:System.IO.File.Exists%2A?displayProperty=nameWithType> method to check whether the file exists and, if it does not, prompt the user whether he or she wants to create it.</span></span>  
  
     <span data-ttu-id="80c70-132">In anderen F√§llen gibt ein Programmfehler eine unerwartete Fehlerbedingung wider, die im Code behandelt werden kann.</span><span class="sxs-lookup"><span data-stu-id="80c70-132">In other cases, a program error reflects an unexpected error condition that can be handled in your code.</span></span> <span data-ttu-id="80c70-133">Wenn Sie z. b. gepr√ºft haben, um sicherzustellen, dass eine Datei vorhanden ist, wird Sie m√∂glicherweise gel√∂scht, bevor Sie Sie √∂ffnen k√∂nnen, oder Sie ist m√∂glicherweise besch√§digt.</span><span class="sxs-lookup"><span data-stu-id="80c70-133">For example, even if you've checked to ensure that a file exists, it may be deleted before you can open it, or it may be corrupted.</span></span> <span data-ttu-id="80c70-134">In diesem Fall kann beim Versuch, die Datei zu √∂ffnen, indem ein <xref:System.IO.StreamReader> Objekt instanziiert oder die <xref:System.IO.File.Open%2A>-Methode aufgerufen wird, eine <xref:System.IO.FileNotFoundException> Ausnahme ausgel√∂st werden.</span><span class="sxs-lookup"><span data-stu-id="80c70-134">In that case, trying to open the file by instantiating a <xref:System.IO.StreamReader> object or calling the <xref:System.IO.File.Open%2A> method may throw a <xref:System.IO.FileNotFoundException> exception.</span></span> <span data-ttu-id="80c70-135">In diesen F√§llen sollten Sie die Ausnahmebehandlung verwenden, um nach dem Fehler eine Wiederherstellung durchf√ºhren zu k√∂nnen.</span><span class="sxs-lookup"><span data-stu-id="80c70-135">In these cases, you should use exception handling to recover from the error.</span></span>  
  
-   <span data-ttu-id="80c70-136">**System Fehler.**</span><span class="sxs-lookup"><span data-stu-id="80c70-136">**System failures.**</span></span> <span data-ttu-id="80c70-137">Ein Systemfehler ist ein Laufzeitfehler, der nicht Programm gesteuert auf sinnvolle Weise behandelt werden kann.</span><span class="sxs-lookup"><span data-stu-id="80c70-137">A system failure is a run-time error that cannot be handled programmatically in a meaningful way.</span></span> <span data-ttu-id="80c70-138">Beispielsweise kann jede Methode eine <xref:System.OutOfMemoryException> Ausnahme ausl√∂sen, wenn der Common Language Runtime keinen zus√§tzlichen Arbeitsspeicher zuordnen kann.</span><span class="sxs-lookup"><span data-stu-id="80c70-138">For example, any method can throw an <xref:System.OutOfMemoryException> exception if the common language runtime is unable to allocate additional memory.</span></span> <span data-ttu-id="80c70-139">Normalerweise werden Systemfehler nicht mithilfe der Ausnahmebehandlung behandelt.</span><span class="sxs-lookup"><span data-stu-id="80c70-139">Ordinarily, system failures are not handled by using exception handling.</span></span> <span data-ttu-id="80c70-140">Stattdessen k√∂nnen Sie ein Ereignis wie z. b. <xref:System.AppDomain.UnhandledException?displayProperty=nameWithType> verwenden und die <xref:System.Environment.FailFast%2A?displayProperty=nameWithType>-Methode aufzurufen, um Ausnahme Informationen zu protokollieren und den Benutzer √ºber den Fehler zu benachrichtigen, bevor die Anwendung beendet wird.</span><span class="sxs-lookup"><span data-stu-id="80c70-140">Instead, you may be able to use an event such as <xref:System.AppDomain.UnhandledException?displayProperty=nameWithType> and call the <xref:System.Environment.FailFast%2A?displayProperty=nameWithType> method to log exception information and notify the user of the failure before the application terminates.</span></span>  
  
<a name="TryCatch"></a>   
## <a name="trycatch-blocks"></a><span data-ttu-id="80c70-141">Try/catch-Bl√∂cke</span><span class="sxs-lookup"><span data-stu-id="80c70-141">Try/catch blocks</span></span>  
 <span data-ttu-id="80c70-142">Der Common Language Runtime stellt ein Modell f√ºr die Ausnahmebehandlung bereit, das auf der Darstellung von Ausnahmen als-Objekte und der Trennung von Programmcode und Ausnahme Behandlungs Code in `try` Bl√∂cke und `catch` Bl√∂cke basiert.</span><span class="sxs-lookup"><span data-stu-id="80c70-142">The common language runtime provides an exception handling model that is based on the representation of exceptions as objects, and the separation of program code and exception handling code into `try` blocks and `catch` blocks.</span></span> <span data-ttu-id="80c70-143">Es k√∂nnen ein oder mehrere `catch` Bl√∂cke vorhanden sein, die jeweils f√ºr die Behandlung eines bestimmten Ausnahme Typs entwickelt wurden, oder einen Block, der eine spezifischere Ausnahme als einen anderen Block abfangen soll.</span><span class="sxs-lookup"><span data-stu-id="80c70-143">There can be one or more `catch` blocks, each designed to handle a particular type of exception, or one block designed to catch a more specific exception than another block.</span></span>  
  
 <span data-ttu-id="80c70-144">Wenn eine Anwendung Ausnahmen behandelt, die w√§hrend der Ausf√ºhrung eines Blocks von Anwendungscode auftreten, muss der Code in einer `try`-Anweisung abgelegt und als `try` Block bezeichnet werden.</span><span class="sxs-lookup"><span data-stu-id="80c70-144">If an application handles exceptions that occur during the execution of a block of application code, the code must be placed within a `try` statement and is called a `try` block.</span></span> <span data-ttu-id="80c70-145">Anwendungscode, der von einem `try`-Block ausgel√∂ste Ausnahmen behandelt, wird in einer `catch`-Anweisung platziert und als `catch`-Block bezeichnet.</span><span class="sxs-lookup"><span data-stu-id="80c70-145">Application code that handles exceptions thrown by a `try` block is placed within a `catch` statement and is called a `catch` block.</span></span> <span data-ttu-id="80c70-146">0 (null) oder mehr `catch` Bl√∂cke sind einem `try` Block zugeordnet, und jeder `catch` Block enth√§lt einen Typfilter, der die Typen der von ihm verarbeiteten Ausnahmen bestimmt.</span><span class="sxs-lookup"><span data-stu-id="80c70-146">Zero or more `catch` blocks are associated with a `try` block, and each `catch` block includes a type filter that determines the types of exceptions it handles.</span></span>  
  
 <span data-ttu-id="80c70-147">Wenn eine Ausnahme in einem `try`-Block auftritt, durchsucht das System die zugeordneten `catch` Bl√∂cke in der Reihenfolge, in der Sie im Anwendungscode angezeigt werden, bis ein `catch` Block gesucht wird, der die Ausnahme behandelt.</span><span class="sxs-lookup"><span data-stu-id="80c70-147">When an exception occurs in a `try` block, the system searches the associated `catch` blocks in the order they appear in application code, until it locates a `catch` block that handles the exception.</span></span> <span data-ttu-id="80c70-148">Ein `catch`-Block behandelt eine Ausnahme vom Typ `T`, wenn der Typfilter des catch-Blocks `T` oder einen beliebigen Typ angibt, von dem `T` abgeleitet ist.</span><span class="sxs-lookup"><span data-stu-id="80c70-148">A `catch` block handles an exception of type `T` if the type filter of the catch block specifies `T` or any type that `T` derives from.</span></span> <span data-ttu-id="80c70-149">Das System beendet die Suche, nachdem es den ersten `catch`-Block gefunden hat, der die Ausnahme behandelt.</span><span class="sxs-lookup"><span data-stu-id="80c70-149">The system stops searching after it finds the first `catch` block that handles the exception.</span></span> <span data-ttu-id="80c70-150">Aus diesem Grund muss im Anwendungscode ein `catch` Block, der einen Typ behandelt, vor einem `catch`-Block angegeben werden, der seine Basis Typen behandelt, wie in dem Beispiel veranschaulicht, das diesem Abschnitt folgt.</span><span class="sxs-lookup"><span data-stu-id="80c70-150">For this reason, in application code, a `catch` block that handles a type must be specified before a `catch` block that handles its base types, as demonstrated in the example that follows this section.</span></span> <span data-ttu-id="80c70-151">Ein catch-Block, der `System.Exception` behandelt, wird zuletzt angegeben.</span><span class="sxs-lookup"><span data-stu-id="80c70-151">A catch block that handles `System.Exception` is specified last.</span></span>  
  
 <span data-ttu-id="80c70-152">Wenn keiner der `catch` Bl√∂cke, die dem aktuellen `try` Block zugeordnet sind, die Ausnahme behandelt und der aktuelle `try` Block innerhalb anderer `try` Bl√∂cke im aktuellen-Befehl geschachtelt ist, werden die `catch` Bl√∂cke durchsucht, die dem n√§chsten einschlie√üenden `try` Block zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="80c70-152">If none of the `catch` blocks associated with the current `try` block handle the exception, and the current `try` block is nested within other `try` blocks in the current call, the `catch` blocks associated with the next enclosing `try` block are searched.</span></span> <span data-ttu-id="80c70-153">Wenn kein `catch` Block f√ºr die Ausnahme gefunden wird, durchsucht das System vorherige Schachtelungs Ebenen im aktuellen-Befehl.</span><span class="sxs-lookup"><span data-stu-id="80c70-153">If no `catch` block for the exception is found, the system searches previous nesting levels in the current call.</span></span> <span data-ttu-id="80c70-154">Wenn im aktuellen-Befehl kein `catch` Block f√ºr die Ausnahme gefunden wird, wird die Ausnahme in der-R√ºckruf Stapel nach oben √ºbermittelt, und der vorherige Stapel Rahmen wird nach einem `catch` Block durchsucht, der die Ausnahme behandelt.</span><span class="sxs-lookup"><span data-stu-id="80c70-154">If no `catch` block for the exception is found in the current call, the exception is passed up the call stack, and the previous stack frame is searched for a `catch` block that handles the exception.</span></span> <span data-ttu-id="80c70-155">Die Suche der-Aufrufliste wird fortgesetzt, bis die Ausnahme behandelt wird, oder bis keine Frames mehr in der aufrufsliste vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="80c70-155">The search of the call stack continues until the exception is handled or until no more frames exist on the call stack.</span></span> <span data-ttu-id="80c70-156">Wenn der obere Rand der-Auflistung erreicht wird, ohne dass ein `catch`-Block gefunden wird, der die Ausnahme behandelt, verarbeitet der Standard Ausnahmehandler diesen, und die Anwendung wird beendet.</span><span class="sxs-lookup"><span data-stu-id="80c70-156">If the top of the call stack is reached without finding a `catch` block that handles the exception, the default exception handler handles it and the application terminates.</span></span>  
  
<a name="Features"></a>   
## <a name="exception-type-features"></a><span data-ttu-id="80c70-157">Ausnahmetyp Features</span><span class="sxs-lookup"><span data-stu-id="80c70-157">Exception type features</span></span>  
 <span data-ttu-id="80c70-158">Ausnahme Typen unterst√ºtzen die folgenden Funktionen:</span><span class="sxs-lookup"><span data-stu-id="80c70-158">Exception types support the following features:</span></span>  
  
-   <span data-ttu-id="80c70-159">Von Menschen lesbarer Text, der den Fehler beschreibt.</span><span class="sxs-lookup"><span data-stu-id="80c70-159">Human-readable text that describes the error.</span></span> <span data-ttu-id="80c70-160">Wenn eine Ausnahme auftritt, stellt die Laufzeit eine Textnachricht zur Verf√ºgung, um den Benutzer √ºber die Art des Fehlers zu informieren und Aktionen vorzuschlagen, um das Problem zu beheben.</span><span class="sxs-lookup"><span data-stu-id="80c70-160">When an exception occurs, the runtime makes a text message available to inform the user of the nature of the error and to suggest action to resolve the problem.</span></span> <span data-ttu-id="80c70-161">Diese Textnachricht wird in der <xref:System.Exception.Message%2A>-Eigenschaft des Ausnahme Objekts gespeichert.</span><span class="sxs-lookup"><span data-stu-id="80c70-161">This text message is held in the <xref:System.Exception.Message%2A> property of the exception object.</span></span> <span data-ttu-id="80c70-162">W√§hrend der Erstellung des Ausnahme Objekts k√∂nnen Sie eine Text Zeichenfolge an den Konstruktor √ºbergeben, um die Details dieser Ausnahme zu beschreiben.</span><span class="sxs-lookup"><span data-stu-id="80c70-162">During the creation of the exception object, you can pass a text string to the constructor to describe the details of that particular exception.</span></span> <span data-ttu-id="80c70-163">Wenn kein Fehlermeldungs Argument an den Konstruktor √ºbergeben wird, wird die Standard Fehlermeldung verwendet.</span><span class="sxs-lookup"><span data-stu-id="80c70-163">If no error message argument is supplied to the constructor, the default error message is used.</span></span> <span data-ttu-id="80c70-164">Weitere Informationen finden Sie unter den Ausf√ºhrungen zur Eigenschaft <xref:System.Exception.Message%2A>.</span><span class="sxs-lookup"><span data-stu-id="80c70-164">For more information, see the <xref:System.Exception.Message%2A> property.</span></span>  
  
-   <span data-ttu-id="80c70-165">Der Zustand der aufrufsstapel, als die Ausnahme ausgel√∂st wurde.</span><span class="sxs-lookup"><span data-stu-id="80c70-165">The state of the call stack when the exception was thrown.</span></span> <span data-ttu-id="80c70-166">Die <xref:System.Exception.StackTrace%2A>-Eigenschaft enth√§lt eine Stapel √úberwachung, die verwendet werden kann, um zu bestimmen, wo der Fehler im Code auftritt.</span><span class="sxs-lookup"><span data-stu-id="80c70-166">The <xref:System.Exception.StackTrace%2A> property carries a stack trace that can be used to determine where the error occurs in the code.</span></span> <span data-ttu-id="80c70-167">Die Stapel √úberwachung listet alle aufgerufenen Methoden und die Zeilennummern in der Quelldatei auf, in der die Aufrufe durchgef√ºhrt werden.</span><span class="sxs-lookup"><span data-stu-id="80c70-167">The stack trace lists all the called methods and the line numbers in the source file where the calls are made.</span></span>  
  
<a name="Properties"></a>   
## <a name="exception-class-properties"></a><span data-ttu-id="80c70-168">Eigenschaften der Ausnahme Klasse</span><span class="sxs-lookup"><span data-stu-id="80c70-168">Exception class properties</span></span>  
 <span data-ttu-id="80c70-169">Die <xref:System.Exception>-Klasse enth√§lt eine Reihe von Eigenschaften, mit denen der Code Speicherort, der Typ, die Hilfedatei und der Grund f√ºr die Ausnahme identifiziert werden k√∂nnen: <xref:System.Exception.StackTrace%2A>, <xref:System.Exception.InnerException%2A>, <xref:System.Exception.Message%2A>, <xref:System.Exception.HelpLink%2A>, <xref:System.Exception.HResult%2A>, <xref:System.Exception.Source%2A>, <xref:System.Exception.TargetSite%2A>und <xref:System.Exception.Data%2A>.</span><span class="sxs-lookup"><span data-stu-id="80c70-169">The <xref:System.Exception> class includes a number of properties that help identify the code location, the type, the help file, and the reason for the exception: <xref:System.Exception.StackTrace%2A>, <xref:System.Exception.InnerException%2A>, <xref:System.Exception.Message%2A>, <xref:System.Exception.HelpLink%2A>, <xref:System.Exception.HResult%2A>, <xref:System.Exception.Source%2A>, <xref:System.Exception.TargetSite%2A>, and <xref:System.Exception.Data%2A>.</span></span>  
  
 <span data-ttu-id="80c70-170">Wenn eine kausale Beziehung zwischen mindestens zwei Ausnahmen besteht, beh√§lt die <xref:System.Exception.InnerException%2A>-Eigenschaft diese Informationen bei.</span><span class="sxs-lookup"><span data-stu-id="80c70-170">When a causal relationship exists between two or more exceptions, the <xref:System.Exception.InnerException%2A> property maintains this information.</span></span> <span data-ttu-id="80c70-171">Die √§u√üere Ausnahme wird als Reaktion auf diese innere Ausnahme ausgel√∂st.</span><span class="sxs-lookup"><span data-stu-id="80c70-171">The outer exception is thrown in response to this inner exception.</span></span> <span data-ttu-id="80c70-172">Der Code, der die √§u√üere Ausnahme behandelt, kann die Informationen aus der fr√ºheren inneren Ausnahme verwenden, um den Fehler besser zu behandeln.</span><span class="sxs-lookup"><span data-stu-id="80c70-172">The code that handles the outer exception can use the information from the earlier inner exception to handle the error more appropriately.</span></span> <span data-ttu-id="80c70-173">Erg√§nzende Informationen zur Ausnahme k√∂nnen als eine Auflistung von Schl√ºssel-Wert-Paaren in der <xref:System.Exception.Data%2A>-Eigenschaft gespeichert werden.</span><span class="sxs-lookup"><span data-stu-id="80c70-173">Supplementary information about the exception can be stored as a collection of key/value pairs in the <xref:System.Exception.Data%2A> property.</span></span>  
  
 <span data-ttu-id="80c70-174">Die Fehlermeldungs Zeichenfolge, die w√§hrend der Erstellung des Ausnahme Objekts an den-Konstruktor √ºbergeben wird, muss lokalisiert werden und kann mithilfe der <xref:System.Resources.ResourceManager>-Klasse aus einer Ressourcen Datei bereitgestellt werden.</span><span class="sxs-lookup"><span data-stu-id="80c70-174">The error message string that is passed to the constructor during the creation of the exception object should be localized and can be supplied from a resource file by using the <xref:System.Resources.ResourceManager> class.</span></span> <span data-ttu-id="80c70-175">Weitere Informationen zu lokalisierten Ressourcen finden Sie in den Themen [Erstellen von Satellitenassemblys](~/docs/framework/resources/creating-satellite-assemblies-for-desktop-apps.md) und [Verpacken und](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md) Bereitstellen von Ressourcen.</span><span class="sxs-lookup"><span data-stu-id="80c70-175">For more information about localized resources, see the [Creating Satellite Assemblies](~/docs/framework/resources/creating-satellite-assemblies-for-desktop-apps.md) and [Packaging and Deploying Resources](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md) topics.</span></span>  
  
 <span data-ttu-id="80c70-176">Die <xref:System.Exception.HelpLink%2A>-Eigenschaft kann eine URL (oder einen URN) zu einer Hilfedatei enthalten, um dem Benutzer umfassende Informationen zur Ursache der Ausnahme bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="80c70-176">To provide the user with extensive information about why the exception occurred, the <xref:System.Exception.HelpLink%2A> property can hold a URL (or URN) to a help file.</span></span>  
  
 <span data-ttu-id="80c70-177">Die <xref:System.Exception>-Klasse verwendet die HRESULT-COR_E_EXCEPTION mit dem Wert 0x80131500.</span><span class="sxs-lookup"><span data-stu-id="80c70-177">The <xref:System.Exception> class uses the HRESULT COR_E_EXCEPTION, which has the value 0x80131500.</span></span>  
  
 <span data-ttu-id="80c70-178">Eine Liste der anf√§nglichen Eigenschaftswerte f√ºr eine Instanz der <xref:System.Exception>-Klasse finden Sie unter den <xref:System.Exception.%23ctor%2A>-Konstruktoren.</span><span class="sxs-lookup"><span data-stu-id="80c70-178">For a list of initial property values for an instance of the <xref:System.Exception> class, see the <xref:System.Exception.%23ctor%2A> constructors.</span></span>  
  
<a name="Performance"></a>   
## <a name="performance-considerations"></a><span data-ttu-id="80c70-179">√úberlegungen zur Leistung</span><span class="sxs-lookup"><span data-stu-id="80c70-179">Performance considerations</span></span>  
 <span data-ttu-id="80c70-180">Das ausl√∂sen oder behandeln einer Ausnahme beansprucht eine betr√§chtliche Menge an Systemressourcen und Ausf√ºhrungszeit.</span><span class="sxs-lookup"><span data-stu-id="80c70-180">Throwing or handling an exception consumes a significant amount of system resources and execution time.</span></span> <span data-ttu-id="80c70-181">L√∂sen Sie Ausnahmen nur aus, um wirklich au√üergew√∂hnliche Bedingungen zu behandeln, nicht zur Behandlung vorhersag barer Ereignisse oder Fluss Steuerung.</span><span class="sxs-lookup"><span data-stu-id="80c70-181">Throw exceptions only to handle truly extraordinary conditions, not to handle predictable events or flow control.</span></span> <span data-ttu-id="80c70-182">In einigen F√§llen, z. b. bei der Entwicklung einer Klassenbibliothek, ist es sinnvoll, eine Ausnahme auszul√∂sen, wenn ein Methoden Argument ung√ºltig ist, da Sie davon ausgehen, dass Ihre Methode mit g√ºltigen Parametern aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="80c70-182">For example, in some cases, such as when you're developing a class library, it's reasonable to throw an exception if a method argument is invalid, because you expect your method to be called with valid parameters.</span></span> <span data-ttu-id="80c70-183">Ein ung√ºltiges Methoden Argument, wenn es nicht das Ergebnis eines Verwendungs Fehlers ist, bedeutet, dass etwas Au√üergew√∂hnliches aufgetreten ist.</span><span class="sxs-lookup"><span data-stu-id="80c70-183">An invalid method argument, if it is not the result of a usage error, means that something extraordinary has occurred.</span></span> <span data-ttu-id="80c70-184">Im Gegensatz dazu l√∂sen Sie keine Ausnahme aus, wenn die Benutzereingabe ung√ºltig ist, da Sie davon ausgehen k√∂nnen, dass Benutzer gelegentlich ung√ºltige Daten eingeben.</span><span class="sxs-lookup"><span data-stu-id="80c70-184">Conversely, do not throw an exception if user input is invalid, because you can expect users to occasionally enter invalid data.</span></span> <span data-ttu-id="80c70-185">Stellen Sie stattdessen einen Wiederholungs Mechanismus bereit, damit Benutzer g√ºltige Eingaben eingeben k√∂nnen.</span><span class="sxs-lookup"><span data-stu-id="80c70-185">Instead, provide a retry mechanism so users can enter valid input.</span></span> <span data-ttu-id="80c70-186">Sie sollten auch keine Ausnahmen verwenden, um Verwendungs Fehler zu behandeln.</span><span class="sxs-lookup"><span data-stu-id="80c70-186">Nor should you use exceptions to handle usage errors.</span></span> <span data-ttu-id="80c70-187">Verwenden Sie stattdessen Assertionen, [um Verwendungs Fehler](/visualstudio/debugger/assertions-in-managed-code) zu identifizieren und zu korrigieren.</span><span class="sxs-lookup"><span data-stu-id="80c70-187">Instead, use [assertions](/visualstudio/debugger/assertions-in-managed-code) to identify and correct usage errors.</span></span>  
  
 <span data-ttu-id="80c70-188">Au√üerdem sollten Sie keine Ausnahme ausl√∂sen, wenn ein R√ºckgabecode ausreichend ist. Konvertieren Sie keinen R√ºckgabecode in eine Ausnahme. und fangen eine Ausnahme nicht regelm√§√üig ab, ignorieren Sie und setzen die Verarbeitung fort.</span><span class="sxs-lookup"><span data-stu-id="80c70-188">In addition, do not throw an exception when a return code is sufficient; do not convert a return code to an exception; and do not routinely catch an exception, ignore it, and then continue processing.</span></span>  
  
<a name="Rethrow"></a>   
## <a name="re-throwing-an-exception"></a><span data-ttu-id="80c70-189">Erneutes Ausl√∂sen einer Ausnahme</span><span class="sxs-lookup"><span data-stu-id="80c70-189">Re-throwing an exception</span></span>  
 <span data-ttu-id="80c70-190">In vielen F√§llen m√∂chte ein Ausnahmehandler einfach die Ausnahme an den Aufrufer √ºbergeben.</span><span class="sxs-lookup"><span data-stu-id="80c70-190">In many cases, an exception handler simply wants to pass the exception on to the caller.</span></span> <span data-ttu-id="80c70-191">Dies tritt am h√§ufigsten in folgenden F√§llen auf:</span><span class="sxs-lookup"><span data-stu-id="80c70-191">This most often occurs in:</span></span>  
  
-   <span data-ttu-id="80c70-192">Eine Klassenbibliothek, die wiederum Aufrufe von Methoden in der .NET Framework-Klassenbibliothek oder anderen Klassenbibliotheken umschlie√üt.</span><span class="sxs-lookup"><span data-stu-id="80c70-192">A class library that in turn wraps calls to methods in the .NET Framework class library or other class libraries.</span></span>  
  
-   <span data-ttu-id="80c70-193">Eine Anwendung oder Bibliothek, auf die eine schwerwiegende Ausnahme st√∂√üt.</span><span class="sxs-lookup"><span data-stu-id="80c70-193">An application or library that encounters a fatal exception.</span></span> <span data-ttu-id="80c70-194">Der Ausnahmehandler kann die Ausnahme protokollieren und die Ausnahme dann erneut ausl√∂sen.</span><span class="sxs-lookup"><span data-stu-id="80c70-194">The exception handler can log the exception and then re-throw the exception.</span></span>  
  
 <span data-ttu-id="80c70-195">Die empfohlene Methode, eine Ausnahme erneut auszul√∂sen, besteht darin, einfach die [throw](~/docs/csharp/language-reference/keywords/throw.md) -Anweisung C# in und die [throw](~/docs/visual-basic/language-reference/statements/throw-statement.md) -Anweisung in Visual Basic zu verwenden, ohne einen Ausdruck einzubeziehen.</span><span class="sxs-lookup"><span data-stu-id="80c70-195">The recommended way to re-throw an exception is to simply use the [throw](~/docs/csharp/language-reference/keywords/throw.md) statement in C# and the [Throw](~/docs/visual-basic/language-reference/statements/throw-statement.md) statement in Visual Basic without including an expression.</span></span> <span data-ttu-id="80c70-196">Dadurch wird sichergestellt, dass alle Aufruf Listen Informationen beibehalten werden, wenn die Ausnahme an den Aufrufer weitergegeben wird.</span><span class="sxs-lookup"><span data-stu-id="80c70-196">This ensures that all call stack information is preserved when the exception is propagated to the caller.</span></span> <span data-ttu-id="80c70-197">Dies wird anhand des folgenden Beispiels veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="80c70-197">The following example illustrates this.</span></span> <span data-ttu-id="80c70-198">Eine Zeichen folgen Erweiterungsmethode (`FindOccurrences`) umschlie√üt einen oder mehrere Aufrufe <xref:System.String.IndexOf%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>, ohne die Argumente vorab zu √ºberpr√ºfen.</span><span class="sxs-lookup"><span data-stu-id="80c70-198">A string extension method, `FindOccurrences`, wraps one or more calls to <xref:System.String.IndexOf%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> without validating its arguments beforehand.</span></span>  
  
 [!code-csharp[System.Exception.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/rethrow1.cs#6)]
 [!code-vb[System.Exception.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/rethrow1.vb#6)]  
  
 <span data-ttu-id="80c70-199">Ein Aufrufer ruft dann `FindOccurrences` zweimal auf.</span><span class="sxs-lookup"><span data-stu-id="80c70-199">A caller then calls `FindOccurrences` twice.</span></span> <span data-ttu-id="80c70-200">Beim zweiten Aufruf von `FindOccurrences`√ºbergibt der Aufrufer eine `null` als Such Zeichenfolge, in der die <xref:System.String.IndexOf%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> Methode eine <xref:System.ArgumentNullException> Ausnahme ausl√∂st.</span><span class="sxs-lookup"><span data-stu-id="80c70-200">In the second call to `FindOccurrences`, the caller passes a `null` as the search string, which cases the <xref:System.String.IndexOf%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> method to throw an <xref:System.ArgumentNullException> exception.</span></span> <span data-ttu-id="80c70-201">Diese Ausnahme wird von der `FindOccurrences`-Methode behandelt und an den Aufrufer zur√ºckgegeben.</span><span class="sxs-lookup"><span data-stu-id="80c70-201">This exception is handled by the `FindOccurrences` method and passed back to the caller.</span></span> <span data-ttu-id="80c70-202">Da die throw-Anweisung ohne Ausdruck verwendet wird, zeigt die Ausgabe des Beispiels, dass die-Anweisung beibehalten wird.</span><span class="sxs-lookup"><span data-stu-id="80c70-202">Because the throw statement is used with no expression, the output from the example shows that the call stack is preserved.</span></span>  
  
 [!code-csharp[System.Exception.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/rethrow1.cs#7)]
 [!code-vb[System.Exception.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/rethrow1.vb#7)]  
  
 <span data-ttu-id="80c70-203">Im Gegensatz dazu wird die Ausnahme, wenn die Ausnahme erneut ausgel√∂st wird, mithilfe des</span><span class="sxs-lookup"><span data-stu-id="80c70-203">In contrast, if the exception is re-thrown by using the</span></span>  
  
```csharp
throw e;
```  
  
```vb  
Throw e  
```  
  
 <span data-ttu-id="80c70-204">-Anweisung, die vollst√§ndige-Aufrufliste wird nicht beibehalten, und im Beispiel wird die folgende Ausgabe generiert:</span><span class="sxs-lookup"><span data-stu-id="80c70-204">statement, the full call stack is not preserved, and the example would generate the following output:</span></span>  
  
```Output  
  
'a' occurs at the following character positions: 4, 7, 15  
  
An exception (ArgumentNullException) occurred.  
Message:  
   Value cannot be null.  
Parameter name: value  
  
Stack Trace:  
      at Library.FindOccurrences(String s, String f)  
   at Example.Main()  
  
```  
  
 <span data-ttu-id="80c70-205">Eine etwas m√ºhlichere Alternative besteht darin, eine neue Ausnahme auszul√∂sen und die aufrufstackinformationen der urspr√ºnglichen Ausnahme in einer inneren Ausnahme beizubehalten.</span><span class="sxs-lookup"><span data-stu-id="80c70-205">A slightly more cumbersome alternative is to throw a new exception, and to preserve the original exception's call stack information in an inner exception.</span></span> <span data-ttu-id="80c70-206">Der Aufrufer kann dann die <xref:System.Exception.InnerException%2A>-Eigenschaft der neuen Ausnahme verwenden, um Stapel Rahmen und andere Informationen zur urspr√ºnglichen Ausnahme abzurufen.</span><span class="sxs-lookup"><span data-stu-id="80c70-206">The caller can then use the new exception's <xref:System.Exception.InnerException%2A> property to retrieve stack frame and other information about the original exception.</span></span> <span data-ttu-id="80c70-207">In diesem Fall lautet die throw-Anweisung wie folgt:</span><span class="sxs-lookup"><span data-stu-id="80c70-207">In this case, the throw statement is:</span></span>  
  
 [!code-csharp[System.Exception.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/rethrow3.cs#8)]
 [!code-vb[System.Exception.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/rethrow3.vb#8)]  
  
 <span data-ttu-id="80c70-208">Der Benutzercode, der die Ausnahme behandelt, muss wissen, dass die <xref:System.Exception.InnerException%2A>-Eigenschaft Informationen zur urspr√ºnglichen Ausnahme enth√§lt, wie der folgende Ausnahmehandler veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="80c70-208">The user code that handles the exception has to know that the <xref:System.Exception.InnerException%2A> property contains information about the original exception, as the following exception handler illustrates.</span></span>  
  
 [!code-csharp[System.Exception.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/rethrow3.cs#9)]
 [!code-vb[System.Exception.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/rethrow3.vb#9)]  
  
<a name="Standard"></a>   
## <a name="choosing-standard-exceptions"></a><span data-ttu-id="80c70-209">Ausw√§hlen von Standard Ausnahmen</span><span class="sxs-lookup"><span data-stu-id="80c70-209">Choosing standard exceptions</span></span>  
 <span data-ttu-id="80c70-210">Wenn Sie eine Ausnahme ausl√∂sen m√ºssen, k√∂nnen Sie in der .NET Framework h√§ufig einen vorhandenen Ausnahmetyp verwenden, anstatt eine benutzerdefinierte Ausnahme zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="80c70-210">When you have to throw an exception, you can often use an existing exception type in the .NET Framework instead of implementing a custom exception.</span></span> <span data-ttu-id="80c70-211">Sie sollten unter diesen beiden Bedingungen einen Standard Ausnahmetyp verwenden:</span><span class="sxs-lookup"><span data-stu-id="80c70-211">You should use a standard exception type under these two conditions:</span></span>  
  
-   <span data-ttu-id="80c70-212">Sie l√∂sen eine Ausnahme aus, die durch einen Verwendungs Fehler verursacht wird (d. h. durch einen Fehler in der Programmlogik des Entwicklers, der die-Methode aufgerufen hat).</span><span class="sxs-lookup"><span data-stu-id="80c70-212">You are throwing an exception that is caused by a usage error (that is, by an error in program logic made by the developer who is calling your method).</span></span> <span data-ttu-id="80c70-213">In der Regel l√∂sen Sie eine Ausnahme aus, z. b. <xref:System.ArgumentException>, <xref:System.ArgumentNullException>, <xref:System.InvalidOperationException>oder <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="80c70-213">Typically, you would throw an exception such as <xref:System.ArgumentException>, <xref:System.ArgumentNullException>, <xref:System.InvalidOperationException>, or <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="80c70-214">Die Zeichenfolge, die Sie f√ºr den Konstruktor des Ausnahme Objekts angeben, wenn Sie das Ausnahme Objekt instanziieren, sollte den Fehler beschreiben, damit er vom Entwickler behoben werden kann.</span><span class="sxs-lookup"><span data-stu-id="80c70-214">The string you supply to the exception object's constructor when instantiating the exception object should describe the error so that the developer can fix it.</span></span> <span data-ttu-id="80c70-215">Weitere Informationen finden Sie unter den Ausf√ºhrungen zur Eigenschaft <xref:System.Exception.Message%2A>.</span><span class="sxs-lookup"><span data-stu-id="80c70-215">For more information, see the <xref:System.Exception.Message%2A> property.</span></span>  
  
-   <span data-ttu-id="80c70-216">Sie behandeln einen Fehler, der dem Aufrufer √ºber eine vorhandene .NET Framework Ausnahme mitgeteilt werden kann.</span><span class="sxs-lookup"><span data-stu-id="80c70-216">You are handling an error that can be communicated to the caller with an existing .NET Framework exception.</span></span> <span data-ttu-id="80c70-217">Sie sollten die am meisten abgeleitete Ausnahme ausl√∂sen.</span><span class="sxs-lookup"><span data-stu-id="80c70-217">You should throw the most derived exception possible.</span></span> <span data-ttu-id="80c70-218">Wenn beispielsweise eine Methode erfordert, dass ein Argument ein g√ºltiger Member eines Enumerationstyps ist, sollten Sie eine <xref:System.ComponentModel.InvalidEnumArgumentException> (die am meisten abgeleitete Klasse) anstelle eines <xref:System.ArgumentException>ausl√∂sen.</span><span class="sxs-lookup"><span data-stu-id="80c70-218">For example, if a method requires an argument to be a valid member of an enumeration type, you should throw an <xref:System.ComponentModel.InvalidEnumArgumentException> (the most derived class) rather than an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="80c70-219">In der folgenden Tabelle sind allgemeine Ausnahme Typen und die Bedingungen aufgef√ºhrt, unter denen Sie ausgel√∂st werden.</span><span class="sxs-lookup"><span data-stu-id="80c70-219">The following table lists common exception types and the conditions under which you would throw them.</span></span>  
  
|<span data-ttu-id="80c70-220">Ausnahme</span><span class="sxs-lookup"><span data-stu-id="80c70-220">Exception</span></span>|<span data-ttu-id="80c70-221">Bedingung</span><span class="sxs-lookup"><span data-stu-id="80c70-221">Condition</span></span>|  
|---------------|---------------|  
|<xref:System.ArgumentException>|<span data-ttu-id="80c70-222">Ein nicht-NULL-Argument, das an eine Methode √ºbermittelt wird, ist ung√ºltig.</span><span class="sxs-lookup"><span data-stu-id="80c70-222">A non-null argument that is passed to a method is invalid.</span></span>|  
|<xref:System.ArgumentNullException>|<span data-ttu-id="80c70-223">Ein Argument, das an eine Methode √ºbermittelt wird, ist `null`.</span><span class="sxs-lookup"><span data-stu-id="80c70-223">An argument that is passed to a method is `null`.</span></span>|  
|<xref:System.ArgumentOutOfRangeException>|<span data-ttu-id="80c70-224">Ein Argument liegt au√üerhalb des Bereichs g√ºltiger Werte.</span><span class="sxs-lookup"><span data-stu-id="80c70-224">An argument is outside the range of valid values.</span></span>|  
|<xref:System.IO.DirectoryNotFoundException>|<span data-ttu-id="80c70-225">Ein Teil des Verzeichnis Pfads ist ung√ºltig.</span><span class="sxs-lookup"><span data-stu-id="80c70-225">Part of a directory path is not valid.</span></span>|  
|<xref:System.DivideByZeroException>|<span data-ttu-id="80c70-226">Der Nenner in einem Integer-oder <xref:System.Decimal> Division-Vorgang ist 0 (null).</span><span class="sxs-lookup"><span data-stu-id="80c70-226">The denominator in an integer or <xref:System.Decimal> division operation is zero.</span></span>|  
|<xref:System.IO.DriveNotFoundException>|<span data-ttu-id="80c70-227">Ein Laufwerk ist nicht verf√ºgbar oder nicht vorhanden.</span><span class="sxs-lookup"><span data-stu-id="80c70-227">A drive is unavailable or does not exist.</span></span>|  
|<xref:System.IO.FileNotFoundException>|<span data-ttu-id="80c70-228">Eine Datei ist nicht vorhanden.</span><span class="sxs-lookup"><span data-stu-id="80c70-228">A file does not exist.</span></span>|  
|<xref:System.FormatException>|<span data-ttu-id="80c70-229">Ein Wert liegt nicht in einem geeigneten Format vor, das von einer Zeichenfolge konvertiert werden soll, z. b. `Parse`.</span><span class="sxs-lookup"><span data-stu-id="80c70-229">A value is not in an appropriate format to be converted from a string by a conversion method such as `Parse`.</span></span>|  
|<xref:System.IndexOutOfRangeException>|<span data-ttu-id="80c70-230">Ein Index liegt au√üerhalb der Grenzen eines Arrays oder einer Auflistung.</span><span class="sxs-lookup"><span data-stu-id="80c70-230">An index is outside the bounds of an array or collection.</span></span>|  
|<xref:System.InvalidOperationException>|<span data-ttu-id="80c70-231">Ein Methoden Aufrufwert ist im aktuellen Zustand eines Objekts ung√ºltig.</span><span class="sxs-lookup"><span data-stu-id="80c70-231">A method call is invalid in an object's current state.</span></span>|  
|<xref:System.Collections.Generic.KeyNotFoundException>|<span data-ttu-id="80c70-232">Der angegebene Schl√ºssel f√ºr den Zugriff auf einen Member in einer Auflistung wurde nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="80c70-232">The specified key for accessing a member in a collection cannot be found.</span></span>|  
|<xref:System.NotImplementedException>|<span data-ttu-id="80c70-233">Eine Methode oder ein Vorgang ist nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="80c70-233">A method or operation is not implemented.</span></span>|  
|<xref:System.NotSupportedException>|<span data-ttu-id="80c70-234">Eine Methode oder ein Vorgang wird nicht unterst√ºtzt.</span><span class="sxs-lookup"><span data-stu-id="80c70-234">A method or operation is not supported.</span></span>|  
|<xref:System.ObjectDisposedException>|<span data-ttu-id="80c70-235">F√ºr ein Objekt, das verworfen wurde, wird ein Vorgang ausgef√ºhrt.</span><span class="sxs-lookup"><span data-stu-id="80c70-235">An operation is performed on an object that has been disposed.</span></span>|  
|<xref:System.OverflowException>|<span data-ttu-id="80c70-236">Ein arithmetischer Vorgang, ein Umwandlungs-oder Konvertierungs Vorgang f√ºhrt zu einem √úberlauf.</span><span class="sxs-lookup"><span data-stu-id="80c70-236">An arithmetic, casting, or conversion operation results in an overflow.</span></span>|  
|<xref:System.IO.PathTooLongException>|<span data-ttu-id="80c70-237">Ein Pfad-oder Dateiname √ºberschreitet die maximale System definierte L√§nge.</span><span class="sxs-lookup"><span data-stu-id="80c70-237">A path or file name exceeds the maximum system-defined length.</span></span>|  
|<xref:System.PlatformNotSupportedException>|<span data-ttu-id="80c70-238">Der Vorgang wird auf der aktuellen Plattform nicht unterst√ºtzt.</span><span class="sxs-lookup"><span data-stu-id="80c70-238">The operation is not supported on the current platform.</span></span>|  
|<xref:System.RankException>|<span data-ttu-id="80c70-239">Ein Array mit der falschen Anzahl von Dimensionen wird an eine-Methode √ºbermittelt.</span><span class="sxs-lookup"><span data-stu-id="80c70-239">An array with the wrong number of dimensions is passed to a method.</span></span>|  
|<xref:System.TimeoutException>|<span data-ttu-id="80c70-240">Das f√ºr einen Vorgang zugewiesene Zeitintervall ist abgelaufen.</span><span class="sxs-lookup"><span data-stu-id="80c70-240">The time interval allotted to an operation has expired.</span></span>|  
|<xref:System.UriFormatException>|<span data-ttu-id="80c70-241">Ein ung√ºltiger Uniform Resource Identifier (URI) wird verwendet.</span><span class="sxs-lookup"><span data-stu-id="80c70-241">An invalid Uniform Resource Identifier (URI) is used.</span></span>|  
  
<a name="Custom"></a>   
## <a name="implementing-custom-exceptions"></a><span data-ttu-id="80c70-242">Implementieren von benutzerdefinierten Ausnahmen</span><span class="sxs-lookup"><span data-stu-id="80c70-242">Implementing custom exceptions</span></span>  
 <span data-ttu-id="80c70-243">In den folgenden F√§llen ist die Verwendung einer vorhandenen .NET Framework Ausnahme zur Behandlung eines Fehler Zustands nicht ausreichend:</span><span class="sxs-lookup"><span data-stu-id="80c70-243">In the following cases, using an existing .NET Framework exception to handle an error condition is not adequate:</span></span>  
  
-   <span data-ttu-id="80c70-244">Wenn die Ausnahme einen eindeutigen Programmfehler widerspiegelt, der einer vorhandenen .NET Framework Ausnahme nicht zugeordnet werden kann.</span><span class="sxs-lookup"><span data-stu-id="80c70-244">When the exception reflects a unique program error that cannot be mapped to an existing .NET Framework exception.</span></span>  
  
-   <span data-ttu-id="80c70-245">Wenn die Ausnahme behandelt werden muss, die sich von der Behandlung unterscheidet, die f√ºr eine vorhandene .NET Framework Ausnahme geeignet ist, oder wenn die Ausnahme von einer √§hnlichen Ausnahme unterschieden werden muss.</span><span class="sxs-lookup"><span data-stu-id="80c70-245">When the exception requires handling that is different from the handling that is appropriate for an existing .NET Framework exception, or the exception must be disambiguated from a similar exception.</span></span> <span data-ttu-id="80c70-246">Wenn Sie z. b. beim Parsen der numerischen Darstellung einer Zeichenfolge, die sich au√üerhalb des Bereichs des integralen ganzzahligen Typs befindet, eine <xref:System.ArgumentOutOfRangeException> Ausnahme ausl√∂sen, sollten Sie nicht dieselbe Ausnahme f√ºr einen Fehler verwenden, der dazu f√ºhrt, dass der Aufrufer beim Aufrufen der-Methode nicht die erforderlichen eingeschr√§nkten Werte bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="80c70-246">For example, if you throw an <xref:System.ArgumentOutOfRangeException> exception when parsing the numeric representation of a string that is out of range of the target integral type, you would not want to use the same exception for an error that results from the caller not supplying the appropriate constrained values when calling the method.</span></span>  
  
 <span data-ttu-id="80c70-247">Die <xref:System.Exception>-Klasse ist die Basisklasse aller Ausnahmen in der .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="80c70-247">The <xref:System.Exception> class is the base class of all exceptions in the .NET Framework.</span></span> <span data-ttu-id="80c70-248">Viele abgeleitete Klassen basieren auf dem geerbten Verhalten der Member der <xref:System.Exception>-Klasse. Sie √ºberschreiben nicht die Member von <xref:System.Exception>und definieren auch keine eindeutigen Member.</span><span class="sxs-lookup"><span data-stu-id="80c70-248">Many derived classes rely on the inherited behavior of the members of the <xref:System.Exception> class; they do not override the members of <xref:System.Exception>, nor do they define any unique members.</span></span>  
  
 <span data-ttu-id="80c70-249">So definieren Sie eine eigene Ausnahme Klasse:</span><span class="sxs-lookup"><span data-stu-id="80c70-249">To define your own exception class:</span></span>  
  
1.  <span data-ttu-id="80c70-250">Definieren Sie eine Klasse, die von <xref:System.Exception>erbt.</span><span class="sxs-lookup"><span data-stu-id="80c70-250">Define a class that inherits from <xref:System.Exception>.</span></span> <span data-ttu-id="80c70-251">Definieren Sie ggf. alle eindeutigen Member, die von der Klasse ben√∂tigt werden, um zus√§tzliche Informationen zur Ausnahme bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="80c70-251">If necessary, define any unique members needed by your class to provide additional information about the exception.</span></span> <span data-ttu-id="80c70-252">Die <xref:System.ArgumentException>-Klasse enth√§lt z. b. eine <xref:System.ArgumentException.ParamName%2A>-Eigenschaft, die den Namen des Parameters angibt, dessen Argument die Ausnahme verursacht hat, und die <xref:System.Text.RegularExpressions.RegexMatchTimeoutException>-Eigenschaft enth√§lt eine <xref:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout%2A> Eigenschaft, die das Timeout Intervall angibt.</span><span class="sxs-lookup"><span data-stu-id="80c70-252">For example, the <xref:System.ArgumentException> class includes a <xref:System.ArgumentException.ParamName%2A> property that specifies the name of the parameter whose argument caused the exception, and the <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> property includes a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout%2A> property that indicates the time-out interval.</span></span>  
  
2.  <span data-ttu-id="80c70-253">√úberschreiben Sie ggf. geerbte Member, deren Funktionalit√§t Sie √§ndern oder √§ndern m√∂chten.</span><span class="sxs-lookup"><span data-stu-id="80c70-253">If necessary, override any inherited members whose functionality you want to change or modify.</span></span> <span data-ttu-id="80c70-254">Beachten Sie, dass die meisten vorhandenen abgeleiteten Klassen von <xref:System.Exception> das Verhalten von geerbten Membern nicht √ºberschreiben.</span><span class="sxs-lookup"><span data-stu-id="80c70-254">Note that most existing derived classes of <xref:System.Exception> do not override the behavior of inherited members.</span></span>  
  
3.  <span data-ttu-id="80c70-255">Bestimmen Sie, ob das benutzerdefinierte Exception-Objekt serialisierbar ist.</span><span class="sxs-lookup"><span data-stu-id="80c70-255">Determine whether your custom exception object is serializable.</span></span> <span data-ttu-id="80c70-256">Mithilfe der Serialisierung k√∂nnen Sie Informationen zu der Ausnahme speichern und zulassen, dass Ausnahme Informationen von einem Server und einem Client Proxy in einem Remotingkontext freigegeben werden.</span><span class="sxs-lookup"><span data-stu-id="80c70-256">Serialization enables you to save information about the exception and permits exception information to be shared by a server and a client proxy in a remoting context.</span></span> <span data-ttu-id="80c70-257">Um das Ausnahme Objekt serialisierbar zu machen, markieren Sie es mit dem <xref:System.SerializableAttribute>-Attribut.</span><span class="sxs-lookup"><span data-stu-id="80c70-257">To make the exception object serializable, mark it with the <xref:System.SerializableAttribute> attribute.</span></span>  
  
4.  <span data-ttu-id="80c70-258">Definieren Sie die Konstruktoren der Ausnahme Klasse.</span><span class="sxs-lookup"><span data-stu-id="80c70-258">Define the constructors of your exception class.</span></span> <span data-ttu-id="80c70-259">Normalerweise verf√ºgen Ausnahme Klassen √ºber einen oder mehrere der folgenden Konstruktoren:</span><span class="sxs-lookup"><span data-stu-id="80c70-259">Typically, exception classes have one or more of the following constructors:</span></span>  
  
    -   <span data-ttu-id="80c70-260"><xref:System.Exception.%23ctor>, der Standardwerte verwendet, um die Eigenschaften eines neuen Ausnahme Objekts zu initialisieren.</span><span class="sxs-lookup"><span data-stu-id="80c70-260"><xref:System.Exception.%23ctor>, which uses default values to initialize the properties of a new exception object.</span></span>  
  
    -   <span data-ttu-id="80c70-261"><xref:System.Exception.%23ctor%28System.String%29>, das ein neues Exception-Objekt mit einer angegebenen Fehlermeldung initialisiert.</span><span class="sxs-lookup"><span data-stu-id="80c70-261"><xref:System.Exception.%23ctor%28System.String%29>, which initializes a new exception object with a specified error message.</span></span>  
  
    -   <span data-ttu-id="80c70-262"><xref:System.Exception.%23ctor%28System.String%2CSystem.Exception%29>, das ein neues Exception-Objekt mit einer angegebenen Fehlermeldung und einer inneren Ausnahme initialisiert.</span><span class="sxs-lookup"><span data-stu-id="80c70-262"><xref:System.Exception.%23ctor%28System.String%2CSystem.Exception%29>, which initializes a new exception object with a specified error message and inner exception.</span></span>  
  
    -   <span data-ttu-id="80c70-263"><xref:System.Exception.%23ctor%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29>, bei dem es sich um einen `protected` Konstruktor handelt, der ein neues Ausnahme Objekt aus serialisierten Daten initialisiert.</span><span class="sxs-lookup"><span data-stu-id="80c70-263"><xref:System.Exception.%23ctor%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29>, which is a `protected` constructor that initializes a new exception object from serialized data.</span></span> <span data-ttu-id="80c70-264">Sie sollten diesen Konstruktor implementieren, wenn Sie ausgew√§hlt haben, dass das Ausnahme Objekt serialisierbar ist.</span><span class="sxs-lookup"><span data-stu-id="80c70-264">You should implement this constructor if you've chosen to make your exception object serializable.</span></span>  
  
 <span data-ttu-id="80c70-265">Das folgende Beispiel veranschaulicht die Verwendung einer benutzerdefinierten Ausnahme Klasse.</span><span class="sxs-lookup"><span data-stu-id="80c70-265">The following example illustrates the use of a custom exception class.</span></span> <span data-ttu-id="80c70-266">Es definiert eine `NotPrimeException` Ausnahme, die ausgel√∂st wird, wenn ein Client versucht, eine Sequenz von Primzahlen abzurufen, indem er eine Startnummer angibt, die nicht Primzahlen ist.</span><span class="sxs-lookup"><span data-stu-id="80c70-266">It defines a `NotPrimeException` exception that is thrown when a client tries to retrieve a sequence of prime numbers by specifying a starting number that is not prime.</span></span> <span data-ttu-id="80c70-267">Die Ausnahme definiert eine neue Eigenschaft, `NonPrime`, die die nicht-Primzahl zur√ºckgibt, die die Ausnahme verursacht hat.</span><span class="sxs-lookup"><span data-stu-id="80c70-267">The exception defines a new property, `NonPrime`, that returns the non-prime number that caused the exception.</span></span> <span data-ttu-id="80c70-268">Neben der Implementierung eines gesch√ºtzten Parameter losen Konstruktors und eines Konstruktors mit <xref:System.Runtime.Serialization.SerializationInfo> und <xref:System.Runtime.Serialization.StreamingContext> Parametern f√ºr die Serialisierung definiert die `NotPrimeException`-Klasse drei zus√§tzliche Konstruktoren zur Unterst√ºtzung der `NonPrime`-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="80c70-268">Besides implementing a protected parameterless constructor and a constructor with <xref:System.Runtime.Serialization.SerializationInfo> and <xref:System.Runtime.Serialization.StreamingContext> parameters for serialization, the `NotPrimeException` class defines three additional constructors to support the `NonPrime` property.</span></span>  <span data-ttu-id="80c70-269">Jeder Konstruktor ruft zus√§tzlich zur Beibehaltung des Werts der nicht-Primzahlen einen Basisklassenkonstruktor auf.</span><span class="sxs-lookup"><span data-stu-id="80c70-269">Each constructor calls a base class constructor in addition to preserving the value of the non-prime number.</span></span> <span data-ttu-id="80c70-270">Die `NotPrimeException`-Klasse wird auch mit dem <xref:System.SerializableAttribute>-Attribut gekennzeichnet.</span><span class="sxs-lookup"><span data-stu-id="80c70-270">The `NotPrimeException` class is also marked with the <xref:System.SerializableAttribute> attribute.</span></span>  
  
 [!code-csharp[System.Exception.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/notprimeexception.cs#1)]
 [!code-vb[System.Exception.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/notprimeexception.vb#1)]  
  
 <span data-ttu-id="80c70-271">Die `PrimeNumberGenerator`-Klasse, die im folgenden Beispiel gezeigt wird, verwendet das Sieve von Eratosthenes, um die Reihenfolge von Primzahlen von 2 bis zu einem Grenzwert zu berechnen, der vom Client im-Befehl an den Klassenkonstruktor angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="80c70-271">The `PrimeNumberGenerator` class shown in the following example uses the Sieve of Eratosthenes to calculate the sequence of prime numbers from 2 to a limit specified by the client in the call to its class constructor.</span></span> <span data-ttu-id="80c70-272">Die `GetPrimesFrom`-Methode gibt alle Primzahlen zur√ºck, die gr√∂√üer oder gleich einer angegebenen unteren Grenze sind, aber l√∂st eine `NotPrimeException` aus, wenn diese untere Grenze keine Primzahl ist.</span><span class="sxs-lookup"><span data-stu-id="80c70-272">The `GetPrimesFrom` method returns all prime numbers that are greater than or equal to a specified lower limit, but throws a `NotPrimeException` if that lower limit is not a prime number.</span></span>  
  
 [!code-csharp[System.Exception.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/primenumbergenerator.cs#2)]
 [!code-vb[System.Exception.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/primenumbergenerator.vb#2)]  
  
 <span data-ttu-id="80c70-273">Im folgenden Beispiel werden zwei Aufrufe der `GetPrimesFrom`-Methode mit nicht-Primzahlen durchf√ºhrt, von denen eine die Grenzen der Anwendungsdom√§ne √ºberschreitet.</span><span class="sxs-lookup"><span data-stu-id="80c70-273">The following example makes two calls to the `GetPrimesFrom` method with non-prime numbers, one of which crosses application domain boundaries.</span></span> <span data-ttu-id="80c70-274">In beiden F√§llen wird die Ausnahme ausgel√∂st und erfolgreich im Client Code behandelt.</span><span class="sxs-lookup"><span data-stu-id="80c70-274">In both cases, the exception is thrown and successfully handled in client code.</span></span>  
  
 [!code-csharp[System.Exception.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/example.cs#3)]
 [!code-vb[System.Exception.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/example.vb#3)]  
  
## <a name="windows-runtime-and-net_v451"></a><span data-ttu-id="80c70-275">Windows-Runtime und [!INCLUDE[net_v451](~/includes/net-v451-md.md)]</span><span class="sxs-lookup"><span data-stu-id="80c70-275">Windows Runtime and [!INCLUDE[net_v451](~/includes/net-v451-md.md)]</span></span>  
 <span data-ttu-id="80c70-276">In [!INCLUDE[net_win8_profile](~/includes/net-win8-profile-md.md)] f√ºr [!INCLUDE[win8](~/includes/win8-md.md)]gehen einige Ausnahme Informationen in der Regel verloren, wenn eine Ausnahme durch Non-.NET Framework-Stapel Rahmen weitergegeben wird.</span><span class="sxs-lookup"><span data-stu-id="80c70-276">In [!INCLUDE[net_win8_profile](~/includes/net-win8-profile-md.md)] for [!INCLUDE[win8](~/includes/win8-md.md)], some exception information is typically lost when an exception is propagated through non-.NET Framework stack frames.</span></span> <span data-ttu-id="80c70-277">Beginnend mit dem [!INCLUDE[net_v451](~/includes/net-v451-md.md)] und [!INCLUDE[win81](~/includes/win81-md.md)]verwendet der Common Language Runtime weiterhin das urspr√ºngliche <xref:System.Exception> Objekt, das ausgel√∂st wurde, es sei denn, diese Ausnahme wurde in einem Non-.NET Framework-Stapel Rahmen ge√§ndert.</span><span class="sxs-lookup"><span data-stu-id="80c70-277">Starting with the [!INCLUDE[net_v451](~/includes/net-v451-md.md)] and [!INCLUDE[win81](~/includes/win81-md.md)], the common language runtime continues to use the original <xref:System.Exception> object that was thrown unless that exception was modified in a non-.NET Framework stack frame.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80c70-278">Im folgenden Beispiel wird ein `catch`-Block veranschaulicht, der zum Behandeln von <xref:System.ArithmeticException> Fehlern definiert ist.</span><span class="sxs-lookup"><span data-stu-id="80c70-278">The following example demonstrates a `catch` block that is defined to handle <xref:System.ArithmeticException> errors.</span></span> <span data-ttu-id="80c70-279">Dieser `catch` Block f√§ngt auch <xref:System.DivideByZeroException> Fehler ab, da <xref:System.DivideByZeroException> von <xref:System.ArithmeticException> abgeleitet ist und kein `catch` Block explizit f√ºr <xref:System.DivideByZeroException> Fehler definiert ist.</span><span class="sxs-lookup"><span data-stu-id="80c70-279">This `catch` block also catches <xref:System.DivideByZeroException> errors, because <xref:System.DivideByZeroException> derives from <xref:System.ArithmeticException> and there is no `catch` block explicitly defined for <xref:System.DivideByZeroException> errors.</span></span>  
  
 [!code-cpp[CatchException#1](~/samples/snippets/cpp/VS_Snippets_CLR/CatchException/CPP/catchexception.cpp#1)]
 [!code-csharp[CatchException#1](~/samples/snippets/csharp/VS_Snippets_CLR/CatchException/CS/catchexception.cs#1)]
 [!code-vb[CatchException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CatchException/VB/catchexception.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="80c70-280">Behandeln und Ausl√∂sen von Ausnahmen</span><span class="sxs-lookup"><span data-stu-id="80c70-280">Handling and Throwing Exceptions</span></span></related>
    <related type="Article" href="~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md"><span data-ttu-id="80c70-281">Verpacken und Bereitstellen von Ressourcen in Desktop-Apps</span><span class="sxs-lookup"><span data-stu-id="80c70-281">Packaging and Deploying Resources in Desktop Apps</span></span></related>
    <related type="Article" href="/visualstudio/debugger/assertions-in-managed-code"><span data-ttu-id="80c70-282">Assertionen in verwaltetem Code</span><span class="sxs-lookup"><span data-stu-id="80c70-282">Assertions in Managed Code</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="80c70-283">Initialisiert eine neue Instanz der Klasse <see cref="T:System.Exception" />.</span><span class="sxs-lookup"><span data-stu-id="80c70-283">Initializes a new instance of the <see cref="T:System.Exception" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Exception ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="80c70-284">Initialisiert eine neue Instanz der Klasse <see cref="T:System.Exception" />.</span><span class="sxs-lookup"><span data-stu-id="80c70-284">Initializes a new instance of the <see cref="T:System.Exception" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80c70-285">Dieser Konstruktor initialisiert die <xref:System.Exception.Message%2A>-Eigenschaft der neuen Instanz mit einer Systemmeldung, die den Fehler beschreibt und die aktuelle Systemkultur ber√ºcksichtigt.</span><span class="sxs-lookup"><span data-stu-id="80c70-285">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error and takes into account the current system culture.</span></span>  
  
 <span data-ttu-id="80c70-286">Alle abgeleiteten Klassen sollten diesen Parameter losen Konstruktor bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="80c70-286">All the derived classes should provide this parameterless constructor.</span></span> <span data-ttu-id="80c70-287">In der folgenden Tabelle werden die anf√§nglichen Eigenschaftenwerte f√ºr eine <xref:System.Exception>-Instanz aufgef√ºhrt.</span><span class="sxs-lookup"><span data-stu-id="80c70-287">The following table shows the initial property values for an instance of <xref:System.Exception>.</span></span>  
  
|<span data-ttu-id="80c70-288">Eigenschaft</span><span class="sxs-lookup"><span data-stu-id="80c70-288">Property</span></span>|<span data-ttu-id="80c70-289">value</span><span class="sxs-lookup"><span data-stu-id="80c70-289">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="80c70-290">Ein NULL-Verweis (`Nothing` in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="80c70-290">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="80c70-291">Eine im System enthaltene lokalisierte Beschreibung.</span><span class="sxs-lookup"><span data-stu-id="80c70-291">A system-supplied localized description.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="80c70-292">Im folgenden Codebeispiel wird eine `Exception` abgeleitet, die eine vordefinierte Meldung verwendet.</span><span class="sxs-lookup"><span data-stu-id="80c70-292">The following code example derives an `Exception` that uses a predefined message.</span></span> <span data-ttu-id="80c70-293">Im Code wird die Verwendung des Parameter losen Konstruktors f√ºr die abgeleitete Klasse und die Basis `Exception` Klasse veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="80c70-293">The code demonstrates the use of the parameterless constructor for the derived class and the base `Exception` class.</span></span>  
  
 [!code-cpp[System.Exception.Ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Ctor/CPP/new.cpp#1)]
 [!code-csharp[System.Exception.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Ctor/CS/new.cs#1)]
 [!code-vb[System.Exception.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Ctor/VB/new.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Exception (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new Exception : string -&gt; Exception" Usage="new System.Exception message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="80c70-294">Die Meldung, die den Fehler beschreibt.</span><span class="sxs-lookup"><span data-stu-id="80c70-294">The message that describes the error.</span></span></param>
        <summary><span data-ttu-id="80c70-295">Initialisiert eine neue Instanz der <see cref="T:System.Exception" />-Klasse mit einer angegebenen Fehlermeldung.</span><span class="sxs-lookup"><span data-stu-id="80c70-295">Initializes a new instance of the <see cref="T:System.Exception" /> class with a specified error message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80c70-296">Dieser Konstruktor initialisiert die <xref:System.Exception.Message%2A>-Eigenschaft der neuen Instanz unter Verwendung des `message`-Parameters.</span><span class="sxs-lookup"><span data-stu-id="80c70-296">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance by using the `message` parameter.</span></span> <span data-ttu-id="80c70-297">Wenn der `message`-Parameter `null`ist, entspricht dies dem Aufrufen des <xref:System.Exception.%23ctor%2A>-Konstruktors.</span><span class="sxs-lookup"><span data-stu-id="80c70-297">If the `message` parameter is `null`, this is the same as calling the <xref:System.Exception.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="80c70-298">In der folgenden Tabelle werden die anf√§nglichen Eigenschaftenwerte f√ºr eine <xref:System.Exception>-Instanz aufgef√ºhrt.</span><span class="sxs-lookup"><span data-stu-id="80c70-298">The following table shows the initial property values for an instance of <xref:System.Exception>.</span></span>  
  
|<span data-ttu-id="80c70-299">Eigenschaft</span><span class="sxs-lookup"><span data-stu-id="80c70-299">Property</span></span>|<span data-ttu-id="80c70-300">value</span><span class="sxs-lookup"><span data-stu-id="80c70-300">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="80c70-301">Ein NULL-Verweis (`Nothing` in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="80c70-301">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="80c70-302">Die Zeichenfolge der Fehlermeldung.</span><span class="sxs-lookup"><span data-stu-id="80c70-302">The error message string.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="80c70-303">Im folgenden Codebeispiel wird eine `Exception` f√ºr eine bestimmte Bedingung abgeleitet.</span><span class="sxs-lookup"><span data-stu-id="80c70-303">The following code example derives an `Exception` for a specific condition.</span></span> <span data-ttu-id="80c70-304">Der Code veranschaulicht die Verwendung des-Konstruktors, der eine vom Aufrufer angegebene Meldung als Parameter f√ºr die abgeleitete Klasse und die Basis `Exception` Klasse annimmt.</span><span class="sxs-lookup"><span data-stu-id="80c70-304">The code demonstrates the use of the constructor that takes a caller-specified message as a parameter, for both the derived class and the base `Exception` class.</span></span>  
  
 [!code-cpp[System.Exception.Ctor#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Ctor/CPP/news.cpp#2)]
 [!code-csharp[System.Exception.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Ctor/CS/news.cs#2)]
 [!code-vb[System.Exception.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Ctor/VB/news.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Exception (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new Exception : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; Exception" Usage="new System.Exception (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="80c70-305">Der <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Wert, der die serialisierten Objektdaten zur ausgel√∂sten Ausnahme enth√§lt.</span><span class="sxs-lookup"><span data-stu-id="80c70-305">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</span></span></param>
        <param name="context"><span data-ttu-id="80c70-306">Der <see cref="T:System.Runtime.Serialization.StreamingContext" />-Wert, der Kontextinformationen zur Quelle oder zum Ziel enth√§lt.</span><span class="sxs-lookup"><span data-stu-id="80c70-306">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="80c70-307">Initialisiert eine neue Instanz der <see cref="T:System.Exception" />-Klasse mit serialisierten Daten.</span><span class="sxs-lookup"><span data-stu-id="80c70-307">Initializes a new instance of the <see cref="T:System.Exception" /> class with serialized data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80c70-308">Dieser Konstruktor wird w√§hrend der Deserialisierung aufgerufen, um das √ºber einen Datenstrom √ºbertragene Ausnahmeobjekt wieder zusammenzusetzen.</span><span class="sxs-lookup"><span data-stu-id="80c70-308">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span> <span data-ttu-id="80c70-309">Weitere Informationen finden Sie unter [XML- und SOAP-Serialisierung](~/docs/standard/serialization/xml-and-soap-serialization.md).</span><span class="sxs-lookup"><span data-stu-id="80c70-309">For more information, see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80c70-310">Im folgenden Codebeispiel wird eine abgeleitete, serialisierbare `Exception`-Klasse definiert.</span><span class="sxs-lookup"><span data-stu-id="80c70-310">The following code example defines a derived serializable `Exception` class.</span></span> <span data-ttu-id="80c70-311">Der Code erzwingt einen Fehler vom Typ "Division durch 0" und erstellt dann eine Instanz der abgeleiteten Ausnahme mithilfe des Konstruktors (<xref:System.Runtime.Serialization.SerializationInfo>, <xref:System.Runtime.Serialization.StreamingContext>).</span><span class="sxs-lookup"><span data-stu-id="80c70-311">The code forces a divide-by-0 error and then creates an instance of the derived exception using the (<xref:System.Runtime.Serialization.SerializationInfo>, <xref:System.Runtime.Serialization.StreamingContext>) constructor.</span></span> <span data-ttu-id="80c70-312">Der Code serialisiert die-Instanz in eine Datei, deserialisiert die Datei in eine neue Ausnahme, die ausgel√∂st wird, und f√§ngt dann die Daten der Ausnahme ab und zeigt Sie an.</span><span class="sxs-lookup"><span data-stu-id="80c70-312">The code serializes the instance to a file, deserializes the file into a new exception, which it throws, and then catches and displays the exception's data.</span></span>  
  
 [!code-cpp[System.Exception.GetObjectData#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.GetObjectData/CPP/getobjdata.cpp#1)]
 [!code-csharp[System.Exception.GetObjectData#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.GetObjectData/CS/getobjdata.cs#1)]
 [!code-vb[System.Exception.GetObjectData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.GetObjectData/VB/getobjdata.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="80c70-313"><paramref name="info" /> ist <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="80c70-313"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="80c70-314">Der Klassenname ist <see langword="null" />, oder <see cref="P:System.Exception.HResult" /> ist 0 (null).</span><span class="sxs-lookup"><span data-stu-id="80c70-314">The class name is <see langword="null" /> or <see cref="P:System.Exception.HResult" /> is zero (0).</span></span></exception>
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <related type="Article" href="~/docs/standard/serialization/xml-and-soap-serialization.md"><span data-ttu-id="80c70-315">XML- und SOAP-Serialisierung</span><span class="sxs-lookup"><span data-stu-id="80c70-315">XML and SOAP Serialization</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Exception (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new Exception : string * Exception -&gt; Exception" Usage="new System.Exception (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="80c70-316">Die Fehlermeldung, die den Grund f√ºr die Ausnahme erl√§utert.</span><span class="sxs-lookup"><span data-stu-id="80c70-316">The error message that explains the reason for the exception.</span></span></param>
        <param name="innerException"><span data-ttu-id="80c70-317">Die Ausnahme, die die aktuelle Ausnahme verursacht hat, oder ein Nullverweis (<see langword="Nothing" /> in Visual¬†Basic), wenn keine innere Ausnahme angegeben ist.</span><span class="sxs-lookup"><span data-stu-id="80c70-317">The exception that is the cause of the current exception, or a null reference (<see langword="Nothing" /> in Visual Basic) if no inner exception is specified.</span></span></param>
        <summary><span data-ttu-id="80c70-318">Initialisiert eine neue Instanz der <see cref="T:System.Exception" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die die Ursache f√ºr diese Ausnahme bildet.</span><span class="sxs-lookup"><span data-stu-id="80c70-318">Initializes a new instance of the <see cref="T:System.Exception" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80c70-319">Eine Ausnahme, die als direktes Ergebnis einer vorhergehenden Ausnahme ausgel√∂st wird, muss in der <xref:System.Exception.InnerException%2A>-Eigenschaft √ºber einen Verweis auf die vorhergehende Ausnahme verf√ºgen.</span><span class="sxs-lookup"><span data-stu-id="80c70-319">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="80c70-320">Die <xref:System.Exception.InnerException%2A>-Eigenschaft gibt denselben Wert zur√ºck, der an den Konstruktor √ºbergeben wurde, bzw. einen NULL-Verweis (`Nothing` in Visual Basic), wenn die <xref:System.Exception.InnerException%2A>-Eigenschaft nicht den Wert f√ºr die innere Ausnahme f√ºr den Konstruktor bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="80c70-320">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or a null reference (`Nothing` in Visual Basic) if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="80c70-321">In der folgenden Tabelle werden die anf√§nglichen Eigenschaftenwerte f√ºr eine <xref:System.Exception>-Instanz aufgef√ºhrt.</span><span class="sxs-lookup"><span data-stu-id="80c70-321">The following table shows the initial property values for an instance of <xref:System.Exception>.</span></span>  
  
|<span data-ttu-id="80c70-322">Eigenschaft</span><span class="sxs-lookup"><span data-stu-id="80c70-322">Property</span></span>|<span data-ttu-id="80c70-323">value</span><span class="sxs-lookup"><span data-stu-id="80c70-323">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="80c70-324">Der Verweis auf die interne Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="80c70-324">The inner exception reference.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="80c70-325">Die Zeichenfolge der Fehlermeldung.</span><span class="sxs-lookup"><span data-stu-id="80c70-325">The error message string.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="80c70-326">Im folgenden Codebeispiel wird eine `Exception` f√ºr eine bestimmte Bedingung abgeleitet.</span><span class="sxs-lookup"><span data-stu-id="80c70-326">The following code example derives an `Exception` for a specific condition.</span></span> <span data-ttu-id="80c70-327">Der Code veranschaulicht die Verwendung des Konstruktors, der eine Meldung und eine innere Ausnahme als Parameter f√ºr die abgeleitete Klasse und die Basis `Exception` Klasse annimmt.</span><span class="sxs-lookup"><span data-stu-id="80c70-327">The code demonstrates the use of the constructor that takes a message and an inner exception as parameters, for both the derived class and the base `Exception` class.</span></span>  
  
 [!code-cpp[System.Exception.Ctor#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Ctor/CPP/newsi.cpp#3)]
 [!code-csharp[System.Exception.Ctor#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Ctor/CS/newsi.cs#3)]
 [!code-vb[System.Exception.Ctor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Ctor/VB/newsi.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IDictionary Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Data" />
      <MemberSignature Language="DocId" Value="P:System.Exception.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::IDictionary ^ Data { System::Collections::IDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Data : System.Collections.IDictionary" Usage="System.Exception.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80c70-328">Ruft eine Auflistung von Schl√ºssel-Wert-Paaren ab, die zus√§tzliche benutzerdefinierte Informationen zur Ausnahme bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="80c70-328">Gets a collection of key/value pairs that provide additional user-defined information about the exception.</span></span></summary>
        <value><span data-ttu-id="80c70-329">Ein Objekt, das die <see cref="T:System.Collections.IDictionary" />-Schnittstelle implementiert und eine Auflistung benutzerdefinierter Schl√ºssel-Wert-Paare enth√§lt.</span><span class="sxs-lookup"><span data-stu-id="80c70-329">An object that implements the <see cref="T:System.Collections.IDictionary" /> interface and contains a collection of user-defined key/value pairs.</span></span> <span data-ttu-id="80c70-330">Der Standard ist eine leere Auflistung.</span><span class="sxs-lookup"><span data-stu-id="80c70-330">The default is an empty collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80c70-331">Verwenden Sie das von der <xref:System.Exception.Data%2A>-Eigenschaft zur√ºckgegebene <xref:System.Collections.IDictionary?displayProperty=nameWithType> Objekt, um erg√§nzende Informationen zu speichern und abzurufen, die f√ºr die Ausnahme relevant sind.</span><span class="sxs-lookup"><span data-stu-id="80c70-331">Use the <xref:System.Collections.IDictionary?displayProperty=nameWithType> object returned by the <xref:System.Exception.Data%2A> property to store and retrieve supplementary information relevant to the exception.</span></span> <span data-ttu-id="80c70-332">Die Informationen werden in Form einer beliebigen Anzahl benutzerdefinierter Schl√ºssel-Wert-Paare angegeben.</span><span class="sxs-lookup"><span data-stu-id="80c70-332">The information is in the form of an arbitrary number of user-defined key/value pairs.</span></span> <span data-ttu-id="80c70-333">Die Schl√ºsselkomponente jedes Schl√ºssel-Wert-Paars ist in der Regel eine identifizierende Zeichenfolge, w√§hrend die Wert Komponente des Paars einen beliebigen Objekttyp aufweisen kann.</span><span class="sxs-lookup"><span data-stu-id="80c70-333">The key component of each key/value pair is typically an identifying string, whereas the value component of the pair can be any type of object.</span></span>  
  
## <a name="keyvalue-pair-security"></a><span data-ttu-id="80c70-334">Schl√ºssel-Wert-Paar-Sicherheit</span><span class="sxs-lookup"><span data-stu-id="80c70-334">Key/Value Pair Security</span></span>  
 <span data-ttu-id="80c70-335">Die in der Auflistung gespeicherten Schl√ºssel-Wert-Paare, die von der <xref:System.Exception.Data%2A>-Eigenschaft zur√ºckgegeben werden, sind nicht sicher.</span><span class="sxs-lookup"><span data-stu-id="80c70-335">The key/value pairs stored in the collection returned by the <xref:System.Exception.Data%2A> property are not secure.</span></span> <span data-ttu-id="80c70-336">Wenn Ihre Anwendung eine schalte Reihe von Routinen aufruft und jede Routine Ausnahmehandler enth√§lt, enth√§lt die resultierende Aufruf Liste eine Hierarchie dieser Ausnahmehandler.</span><span class="sxs-lookup"><span data-stu-id="80c70-336">If your application calls a nested series of routines, and each routine contains exception handlers, the resulting call stack contains a hierarchy of those exception handlers.</span></span> <span data-ttu-id="80c70-337">Wenn eine Routine auf niedrigerer Ebene eine Ausnahme ausl√∂st, kann jeder Ausnahmehandler auf der obersten Ebene in der Hierarchie der Auflistungs Stapel die in der Auflistung gespeicherten Schl√ºssel-Wert-Paare von einem beliebigen anderen Ausnahmehandler lesen und/oder √§ndern.</span><span class="sxs-lookup"><span data-stu-id="80c70-337">If a lower-level routine throws an exception, any upper-level exception handler in the call stack hierarchy can read and/or modify the key/value pairs stored in the collection by any other exception handler.</span></span> <span data-ttu-id="80c70-338">Dies bedeutet, dass Sie sicherstellen m√ºssen, dass die Informationen in den Schl√ºssel-Wert-Paaren nicht vertraulich sind und dass Ihre Anwendung ordnungsgem√§√ü ausgef√ºhrt wird, wenn die Informationen in den Schl√ºssel-Wert-Paaren besch√§digt sind.</span><span class="sxs-lookup"><span data-stu-id="80c70-338">This means you must guarantee that the information in the key/value pairs is not confidential and that your application will operate correctly if the information in the key/value pairs is corrupted.</span></span>  
  
## <a name="key-conflicts"></a><span data-ttu-id="80c70-339">Schl√ºssel Konflikte</span><span class="sxs-lookup"><span data-stu-id="80c70-339">Key Conflicts</span></span>  
 <span data-ttu-id="80c70-340">Ein Schl√ºssel Konflikt tritt auf, wenn verschiedene Ausnahmehandler denselben Schl√ºssel f√ºr den Zugriff auf ein Schl√ºssel-Wert-Paar angeben.</span><span class="sxs-lookup"><span data-stu-id="80c70-340">A key conflict occurs when different exception handlers specify the same key to access a key/value pair.</span></span> <span data-ttu-id="80c70-341">Seien Sie vorsichtig, wenn Sie Ihre Anwendung entwickeln, da die Folge eines Schl√ºssel Konflikts darin besteht, dass Ausnahmehandler auf niedrigerer Ebene versehentlich mit Ausnahme Handlern auf h√∂herer Ebene kommunizieren k√∂nnen. diese Kommunikation kann zu geringf√ºgigen Programmfehlern f√ºhren.</span><span class="sxs-lookup"><span data-stu-id="80c70-341">Use caution when developing your application because the consequence of a key conflict is that lower-level exception handlers can inadvertently communicate with higher-level exception handlers, and this communication might cause subtle program errors.</span></span> <span data-ttu-id="80c70-342">Wenn Sie jedoch vorsichtig sind, k√∂nnen Sie Schl√ºssel Konflikte verwenden, um Ihre Anwendung zu verbessern.</span><span class="sxs-lookup"><span data-stu-id="80c70-342">However, if you are cautious you can use key conflicts to enhance your application.</span></span>  
  
## <a name="avoiding-key-conflicts"></a><span data-ttu-id="80c70-343">Vermeiden von Schl√ºssel Konflikten</span><span class="sxs-lookup"><span data-stu-id="80c70-343">Avoiding Key Conflicts</span></span>  
 <span data-ttu-id="80c70-344">Vermeiden Sie Schl√ºssel Konflikte, indem Sie eine Benennungs Konvention anwenden, um eindeutige Schl√ºssel f√ºr Schl√ºssel-Wert-Paare zu generieren.</span><span class="sxs-lookup"><span data-stu-id="80c70-344">Avoid key conflicts by adopting a naming convention to generate unique keys for key/value pairs.</span></span> <span data-ttu-id="80c70-345">Eine Benennungs Konvention kann z. b. einen Schl√ºssel erzeugen, der aus dem durch Punkte getrennten Namen Ihrer Anwendung, der Methode, die zus√§tzliche Informationen f√ºr das Paar bereitstellt, und einem eindeutigen Bezeichner besteht.</span><span class="sxs-lookup"><span data-stu-id="80c70-345">For example, a naming convention might yield a key that consists of the period-delimited name of your application, the method that provides supplementary information for the pair, and a unique identifier.</span></span>  
  
 <span data-ttu-id="80c70-346">Angenommen, zwei Anwendungen, mit dem Namen Products und Suppliers, verf√ºgen jeweils √ºber eine Methode mit dem Namen Sales.</span><span class="sxs-lookup"><span data-stu-id="80c70-346">Suppose two applications, named Products and Suppliers, each has a method named Sales.</span></span> <span data-ttu-id="80c70-347">Die Sales-Methode in der Products-Anwendung stellt die Identifikationsnummer (die Stock Keeping Unit oder SKU) eines Produkts bereit.</span><span class="sxs-lookup"><span data-stu-id="80c70-347">The Sales method in the Products application provides the identification number (the stock keeping unit or SKU) of a product.</span></span> <span data-ttu-id="80c70-348">Die Sales-Methode in der Suppliers-Anwendung gibt die Identifikationsnummer (SID) eines Lieferanten an.</span><span class="sxs-lookup"><span data-stu-id="80c70-348">The Sales method in the Suppliers application provides the identification number, or SID, of a supplier.</span></span> <span data-ttu-id="80c70-349">Folglich ergibt die Benennungs Konvention f√ºr dieses Beispiel die Schl√ºssel "Products. Sales. SKU" und "Suppliers. Sales. sid".</span><span class="sxs-lookup"><span data-stu-id="80c70-349">Consequently, the naming convention for this example yields the keys, "Products.Sales.SKU" and "Suppliers.Sales.SID".</span></span>  
  
## <a name="exploiting-key-conflicts"></a><span data-ttu-id="80c70-350">Ausnutzen von Schl√ºssel Konflikten</span><span class="sxs-lookup"><span data-stu-id="80c70-350">Exploiting Key Conflicts</span></span>  
 <span data-ttu-id="80c70-351">Exploitschl√ºsselkonflikte durch die Verwendung eines oder mehrerer spezieller, vorab angeordneter Schl√ºssel zur Steuerung der Verarbeitung.</span><span class="sxs-lookup"><span data-stu-id="80c70-351">Exploit key conflicts by using the presence of one or more special, prearranged keys to control processing.</span></span> <span data-ttu-id="80c70-352">Angenommen, in einem Szenario f√§ngt der Ausnahmehandler der h√∂chsten Ebene in der Hierarchie der aufrufsstapel alle Ausnahmen ab, die von Ausnahme Handlern auf niedrigerer Ebene ausgel√∂st werden.</span><span class="sxs-lookup"><span data-stu-id="80c70-352">Suppose, in one scenario, the highest level exception handler in the call stack hierarchy catches all exceptions thrown by lower-level exception handlers.</span></span> <span data-ttu-id="80c70-353">Wenn ein Schl√ºssel-Wert-Paar mit einem speziellen Schl√ºssel vorhanden ist, formatiert der Ausnahmehandler auf hoher Ebene die verbleibenden Schl√ºssel-Wert-Paare im <xref:System.Collections.IDictionary> Objekt auf eine nicht standardm√§√üige Art und Weise. Andernfalls werden die restlichen Schl√ºssel-Wert-Paare auf normale Weise formatiert.</span><span class="sxs-lookup"><span data-stu-id="80c70-353">If a key/value pair with a special key exists, the high-level exception handler formats the remaining key/value pairs in the <xref:System.Collections.IDictionary> object in some nonstandard way; otherwise, the remaining key/value pairs are formatted in some normal manner.</span></span>  
  
 <span data-ttu-id="80c70-354">Angenommen, in einem anderen Szenario f√§ngt der Ausnahmehandler auf jeder Ebene der Hierarchie der aufrufsstapel die vom n√§chsten Ausnahmehandler auf niedrigerer Ebene ausgel√∂ste Ausnahme ab.</span><span class="sxs-lookup"><span data-stu-id="80c70-354">Now suppose, in another scenario, the exception handler at each level of the call stack hierarchy catches the exception thrown by the next lower-level exception handler.</span></span> <span data-ttu-id="80c70-355">Au√üerdem kennt jeder Ausnahmehandler, dass die von der <xref:System.Exception.Data%2A>-Eigenschaft zur√ºckgegebene Auflistung einen Satz von Schl√ºssel-Wert-Paaren enth√§lt, auf die mit einem vordefinierten Satz von Schl√ºsseln zugegriffen werden kann.</span><span class="sxs-lookup"><span data-stu-id="80c70-355">In addition, each exception handler knows the collection returned by the <xref:System.Exception.Data%2A> property contains a set of key/value pairs that can be accessed with a prearranged set of keys.</span></span>  
  
 <span data-ttu-id="80c70-356">Jeder Ausnahmehandler verwendet den vordefinierten Satz von Schl√ºsseln, um die Wert Komponente des entsprechenden Schl√ºssel-Wert-Paars mit Informationen zu aktualisieren, die f√ºr diesen Ausnahmehandler eindeutig sind.</span><span class="sxs-lookup"><span data-stu-id="80c70-356">Each exception handler uses the prearranged set of keys to update the value component of the corresponding key/value pair with information unique to that exception handler.</span></span> <span data-ttu-id="80c70-357">Nach Abschluss des Aktualisierungs Vorgangs l√∂st der Ausnahmehandler die Ausnahme f√ºr den n√§chsten Ausnahmehandler auf h√∂herer Ebene aus.</span><span class="sxs-lookup"><span data-stu-id="80c70-357">After the update process is complete, the exception handler throws the exception to the next higher-level exception handler.</span></span> <span data-ttu-id="80c70-358">Schlie√ülich greift der Ausnahmehandler auf der h√∂chsten Ebene auf die Schl√ºssel-Wert-Paare zu und zeigt die konsolidierten Update Informationen aus allen Ausnahme Handlern auf niedrigerer Ebene an.</span><span class="sxs-lookup"><span data-stu-id="80c70-358">Finally, the highest level exception handler accesses the key/value pairs and displays the consolidated update information from all the lower-level exception handlers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80c70-359">Im folgenden Beispiel wird veranschaulicht, wie Informationen mithilfe der <xref:System.Exception.Data%2A>-Eigenschaft hinzugef√ºgt und abgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="80c70-359">The following example demonstrates how to add and retrieve information using the <xref:System.Exception.Data%2A> property.</span></span>  
  
 [!code-cpp[exception.data#1](~/samples/snippets/cpp/VS_Snippets_CLR/exception.data/CPP/data.cpp#1)]
 [!code-csharp[exception.data#1](~/samples/snippets/csharp/VS_Snippets_CLR/exception.data/CS/data.cs#1)]
 [!code-vb[exception.data#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/exception.data/VB/data.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.DictionaryEntry" />
      </Docs>
    </Member>
    <Member MemberName="GetBaseException">
      <MemberSignature Language="C#" Value="public virtual Exception GetBaseException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Exception GetBaseException() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.GetBaseException" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBaseException () As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Exception ^ GetBaseException();" />
      <MemberSignature Language="F#" Value="abstract member GetBaseException : unit -&gt; Exception&#xA;override this.GetBaseException : unit -&gt; Exception" Usage="exception.GetBaseException " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Exception.GetBaseException</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="80c70-360">Gibt beim √úberschreiben in einer abgeleiteten Klasse eine <see cref="T:System.Exception" /> zur√ºck, die die Grundursache f√ºr eine oder mehrere nachfolgende Ausnahmen ist.</span><span class="sxs-lookup"><span data-stu-id="80c70-360">When overridden in a derived class, returns the <see cref="T:System.Exception" /> that is the root cause of one or more subsequent exceptions.</span></span></summary>
        <returns><span data-ttu-id="80c70-361">Die erste Ausnahme, die in einer Kette von Ausnahmen ausgel√∂st wird.</span><span class="sxs-lookup"><span data-stu-id="80c70-361">The first exception thrown in a chain of exceptions.</span></span> <span data-ttu-id="80c70-362">Wenn die <see cref="P:System.Exception.InnerException" />-Eigenschaft der aktuellen Ausnahme ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic) ist, gibt diese Eigenschaft die aktuelle Ausnahme zur√ºck.</span><span class="sxs-lookup"><span data-stu-id="80c70-362">If the <see cref="P:System.Exception.InnerException" /> property of the current exception is a null reference (<see langword="Nothing" /> in Visual Basic), this property returns the current exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80c70-363">Eine Kette von Ausnahmen besteht aus einem Satz von Ausnahmen, sodass jede Ausnahme in der Kette als direktes Ergebnis der Ausnahme ausgel√∂st wurde, auf die in der `InnerException`-Eigenschaft verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="80c70-363">A chain of exceptions consists of a set of exceptions such that each exception in the chain was thrown as a direct result of the exception referenced in its `InnerException` property.</span></span> <span data-ttu-id="80c70-364">F√ºr eine bestimmte Kette kann es genau eine Ausnahme geben, die die Ursache f√ºr alle anderen Ausnahmen in der Kette ist.</span><span class="sxs-lookup"><span data-stu-id="80c70-364">For a given chain, there can be exactly one exception that is the root cause of all other exceptions in the chain.</span></span> <span data-ttu-id="80c70-365">Diese Ausnahme wird als Basis Ausnahme bezeichnet, und ihre `InnerException`-Eigenschaft enth√§lt immer einen NULL-Verweis.</span><span class="sxs-lookup"><span data-stu-id="80c70-365">This exception is called the base exception and its `InnerException` property always contains a null reference.</span></span>  
  
 <span data-ttu-id="80c70-366">F√ºr alle Ausnahmen in einer Kette von Ausnahmen muss die `GetBaseException`-Methode dasselbe Objekt zur√ºckgeben (die Basis Ausnahme).</span><span class="sxs-lookup"><span data-stu-id="80c70-366">For all exceptions in a chain of exceptions, the `GetBaseException` method must return the same object (the base exception).</span></span>  
  
 <span data-ttu-id="80c70-367">Verwenden Sie die `GetBaseException`-Methode, wenn Sie die Grundursache einer Ausnahme ermitteln m√∂chten, aber keine Informationen zu Ausnahmen ben√∂tigen, die m√∂glicherweise zwischen der aktuellen Ausnahme und der ersten Ausnahme aufgetreten sind.</span><span class="sxs-lookup"><span data-stu-id="80c70-367">Use the `GetBaseException` method when you want to find the root cause of an exception but do not need information about exceptions that may have occurred between the current exception and the first exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80c70-368">Im folgenden Codebeispiel werden zwei abgeleitete `Exception` Klassen definiert.</span><span class="sxs-lookup"><span data-stu-id="80c70-368">The following code example defines two derived `Exception` classes.</span></span> <span data-ttu-id="80c70-369">Sie erzwingt eine Ausnahme und l√∂st Sie dann erneut mit jeder der abgeleiteten Klassen aus.</span><span class="sxs-lookup"><span data-stu-id="80c70-369">It forces an exception and then throws it again with each of the derived classes.</span></span> <span data-ttu-id="80c70-370">Der Code zeigt die Verwendung der `GetBaseException`-Methode, um die urspr√ºngliche Ausnahme abzurufen.</span><span class="sxs-lookup"><span data-stu-id="80c70-370">The code shows the use of the `GetBaseException` method to retrieve the original exception.</span></span>  
  
 [!code-cpp[System.Exception.GetBaseException#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.GetBaseException/CPP/getbaseexc.cpp#1)]
 [!code-csharp[System.Exception.GetBaseException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.GetBaseException/CS/getbaseexc.cs#1)]
 [!code-vb[System.Exception.GetBaseException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.GetBaseException/VB/getbaseexc.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="80c70-371">Die <see langword="GetBaseException" />-Methode wird in Klassen, die die Kontrolle √ºber den Ausnahme Inhalt oder das-Format erfordern, √ºberschrieben.</span><span class="sxs-lookup"><span data-stu-id="80c70-371">The <see langword="GetBaseException" /> method is overridden in classes that require control over the exception content or format.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="exception.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
        <InterfaceMember>M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="80c70-372">Der <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Wert, der die serialisierten Objektdaten zur ausgel√∂sten Ausnahme enth√§lt.</span><span class="sxs-lookup"><span data-stu-id="80c70-372">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</span></span></param>
        <param name="context"><span data-ttu-id="80c70-373">Der <see cref="T:System.Runtime.Serialization.StreamingContext" />-Wert, der Kontextinformationen zur Quelle oder zum Ziel enth√§lt.</span><span class="sxs-lookup"><span data-stu-id="80c70-373">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="80c70-374">Legt beim √úberschreiben in einer abgeleiteten Klasse die <see cref="T:System.Runtime.Serialization.SerializationInfo" /> mit Informationen √ºber die Ausnahme fest.</span><span class="sxs-lookup"><span data-stu-id="80c70-374">When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80c70-375">Durch `GetObjectData` wird <xref:System.Runtime.Serialization.SerializationInfo> mit s√§mtlichen Ausnahmeobjektdaten festgelegt, die serialisiert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="80c70-375">`GetObjectData` sets a <xref:System.Runtime.Serialization.SerializationInfo> with all the exception object data targeted for serialization.</span></span> <span data-ttu-id="80c70-376">W√§hrend der Deserialisierung wird die Ausnahme aus der im Datenstrom √ºbertragenen `SerializationInfo` wieder zusammengesetzt.</span><span class="sxs-lookup"><span data-stu-id="80c70-376">During deserialization, the exception is reconstituted from the `SerializationInfo` transmitted over the stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80c70-377">Im folgenden Codebeispiel wird eine abgeleitete, serialisierbare `Exception` Klasse definiert, die `GetObjectData`implementiert, wodurch geringf√ºgige √Ñnderungen an zwei Eigenschaften vorgenommen werden und dann die-Basisklasse aufgerufen wird, um die Serialisierung auszuf√ºhren.</span><span class="sxs-lookup"><span data-stu-id="80c70-377">The following code example defines a derived serializable `Exception` class that implements `GetObjectData`, which makes minor changes to two properties and then calls the base class to perform the serialization.</span></span> <span data-ttu-id="80c70-378">Im Beispiel wird ein Fehler vom Typ "Division durch 0" erzwungen, und anschlie√üend wird eine Instanz der abgeleiteten Ausnahme erstellt.</span><span class="sxs-lookup"><span data-stu-id="80c70-378">The example forces a divide-by-0 error and then creates an instance of the derived exception.</span></span> <span data-ttu-id="80c70-379">Der Code serialisiert die-Instanz in eine Datei, deserialisiert die Datei in eine neue Ausnahme, die ausgel√∂st wird, und f√§ngt dann die Daten der Ausnahme ab und zeigt Sie an.</span><span class="sxs-lookup"><span data-stu-id="80c70-379">The code serializes the instance to a file, deserializes the file into a new exception, which it throws, and then catches and displays the exception's data.</span></span>  
  
 [!code-cpp[System.Exception.GetObjectData#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.GetObjectData/CPP/getobjdata.cpp#1)]
 [!code-csharp[System.Exception.GetObjectData#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.GetObjectData/CS/getobjdata.cs#1)]
 [!code-vb[System.Exception.GetObjectData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.GetObjectData/VB/getobjdata.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="80c70-380">Der <paramref name="info" />-Parameter ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="80c70-380">The <paramref name="info" /> parameter is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetType() cil managed" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Exception.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType();" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="F#" Value="override this.GetType : unit -&gt; Type" Usage="exception.GetType " />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType() cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetType();" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Exception.GetType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="80c70-381">Ruft den Laufzeittyp der aktuellen Instanz ab.</span><span class="sxs-lookup"><span data-stu-id="80c70-381">Gets the runtime type of the current instance.</span></span></summary>
        <returns><span data-ttu-id="80c70-382">Ein <see cref="T:System.Type" />-Objekt, das den exakten Laufzeittyp der aktuellen Instanz darstellt.</span><span class="sxs-lookup"><span data-stu-id="80c70-382">A <see cref="T:System.Type" /> object that represents the exact runtime type of the current instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80c70-383">Die <xref:System.Exception.GetType%2A>-Methode ist vorhanden, um die .NET Framework-Infrastruktur zu unterst√ºtzen, und ruft intern die grundlegende Methode auf, <xref:System.Object.GetType%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="80c70-383">The <xref:System.Exception.GetType%2A> method exists to support the .NET Framework infrastructure, and internally invokes the fundamental method, <xref:System.Object.GetType%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="HelpLink">
      <MemberSignature Language="C#" Value="public virtual string HelpLink { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpLink" />
      <MemberSignature Language="DocId" Value="P:System.Exception.HelpLink" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HelpLink As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HelpLink { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HelpLink : string with get, set" Usage="System.Exception.HelpLink" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.HelpLink</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80c70-384">Ruft einen Link zur Hilfedatei ab, die dieser Ausnahme zugeordnet ist, oder legt einen Link fest.</span><span class="sxs-lookup"><span data-stu-id="80c70-384">Gets or sets a link to the help file associated with this exception.</span></span></summary>
        <value><span data-ttu-id="80c70-385">Der URN (Uniform Resource Name) oder die URL (Uniform Resource Locator).</span><span class="sxs-lookup"><span data-stu-id="80c70-385">The Uniform Resource Name (URN) or Uniform Resource Locator (URL).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80c70-386">Der R√ºckgabewert, der eine Hilfedatei darstellt, ist ein URN oder ein URL.</span><span class="sxs-lookup"><span data-stu-id="80c70-386">The return value, which represents a help file, is a URN or URL.</span></span> <span data-ttu-id="80c70-387">Der `HelpLink` Wert k√∂nnte z. b. wie folgt lauten:</span><span class="sxs-lookup"><span data-stu-id="80c70-387">For example, the `HelpLink` value could be:</span></span>  
  
 <span data-ttu-id="80c70-388">"file:///C:/Applications/Bazzal/Help.html#ErrorNum42"</span><span class="sxs-lookup"><span data-stu-id="80c70-388">"file:///C:/Applications/Bazzal/help.html#ErrorNum42"</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80c70-389">Im folgenden Codebeispiel wird eine `Exception` ausgel√∂st, die die `HelpLink`-Eigenschaft im Konstruktor festlegt und dann die Ausnahme abf√§ngt und `HelpLink`anzeigt.</span><span class="sxs-lookup"><span data-stu-id="80c70-389">The following code example throws an `Exception` that sets the `HelpLink` property in its constructor and then catches the exception and displays `HelpLink`.</span></span>  
  
 [!code-cpp[System.Exception.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.Exception.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Properties/CS/properties.cs#1)]
 [!code-vb[System.Exception.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HResult">
      <MemberSignature Language="C#" Value="public int HResult { get; protected set; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HResult" />
      <MemberSignature Language="DocId" Value="P:System.Exception.HResult" />
      <MemberSignature Language="VB.NET" Value="Public Property HResult As Integer" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:  property int HResult {  public:&#xA;int get(); protected:&#xA; void set(int value); };" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.HResult : int with get, set" Usage="System.Exception.HResult" />
      <MemberSignature Language="C#" Value="public int HResult { get; set; }" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int HResult { int get(); void set(int value); };" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C#" Value="protected int HResult { get; set; }" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Protected Property HResult As Integer" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int HResult { int get(); void set(int value); };" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80c70-390">Ruft HRESULT ab oder legt HRESULT fest. Dies ist ein codierter Wert, der einer bestimmten Ausnahme zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="80c70-390">Gets or sets HRESULT, a coded numerical value that is assigned to a specific exception.</span></span></summary>
        <value><span data-ttu-id="80c70-391">Der HRESULT-Wert.</span><span class="sxs-lookup"><span data-stu-id="80c70-391">The HRESULT value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80c70-392">Bei HRESULT handelt es sich um einen 32-Bit-Wert, der in drei separate Felder unterteilt ist: Fehlergewichtung, Funktionscode und Fehlercode.</span><span class="sxs-lookup"><span data-stu-id="80c70-392">HRESULT is a 32-bit value, divided into three different fields: a severity code, a facility code, and an error code.</span></span> <span data-ttu-id="80c70-393">Die Fehlergewichtung gibt an, ob der R√ºckgabewert Informationen, eine Warnung oder einen Fehler darstellt.</span><span class="sxs-lookup"><span data-stu-id="80c70-393">The severity code indicates whether the return value represents information, warning, or error.</span></span> <span data-ttu-id="80c70-394">Der Funktionscode identifiziert den Bereich des Systems, der f√ºr den Fehler verantwortlich ist.</span><span class="sxs-lookup"><span data-stu-id="80c70-394">The facility code identifies the area of the system responsible for the error.</span></span> <span data-ttu-id="80c70-395">Der Fehlercode ist eine eindeutige Zahl, die zum Darstellen der Ausnahme zugewiesen wurde.</span><span class="sxs-lookup"><span data-stu-id="80c70-395">The error code is a unique number that is assigned to represent the exception.</span></span> <span data-ttu-id="80c70-396">Jede Ausnahme ist einem eindeutigen HRESULT zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="80c70-396">Each exception is mapped to a distinct HRESULT.</span></span> <span data-ttu-id="80c70-397">Wenn verwalteter Code eine Ausnahme ausl√∂st, √ºbergibt die Laufzeit das HRESULT an den com-Client.</span><span class="sxs-lookup"><span data-stu-id="80c70-397">When managed code throws an exception, the runtime passes the HRESULT to the COM client.</span></span> <span data-ttu-id="80c70-398">Wenn nicht verwalteter Code einen Fehler zur√ºckgibt, wird das HRESULT in eine Ausnahme konvertiert, die dann von der Laufzeit ausgel√∂st wird.</span><span class="sxs-lookup"><span data-stu-id="80c70-398">When unmanaged code returns an error, the HRESULT is converted to an exception, which is then thrown by the runtime.</span></span> <span data-ttu-id="80c70-399">Weitere Informationen zu HRESULT-Werten und den zugeh√∂rigen .NET Framework Ausnahmen finden [Sie unter Vorgehensweise: Zuordnen von HRESULTs und Ausnahmen](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span><span class="sxs-lookup"><span data-stu-id="80c70-399">For information about HRESULT values and their corresponding .NET Framework exceptions, see [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span></span> <span data-ttu-id="80c70-400">Eine Liste der Werte, auf die Sie am wahrscheinlichsten sto√üen, finden Sie unter [Allgemeine HRESULT-Werte](/windows/win32/seccrypto/common-hresult-values) in der Windows-Dokumentation.</span><span class="sxs-lookup"><span data-stu-id="80c70-400">See [Common HRESULT Values](/windows/win32/seccrypto/common-hresult-values) in the Windows documentation for a list of the values you are most likely to encounter.</span></span>  
  
 <span data-ttu-id="80c70-401">Beginnend mit dem [!INCLUDE[net_v45](~/includes/net-v45-md.md)]wird der Setter der <xref:System.Exception.HResult%2A> Eigenschaft gesch√ºtzt, w√§hrend der zugeh√∂rige Getter √∂ffentlich ist.</span><span class="sxs-lookup"><span data-stu-id="80c70-401">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <xref:System.Exception.HResult%2A> property's setter is protected, whereas its getter is public.</span></span>  <span data-ttu-id="80c70-402">In fr√ºheren Versionen der .NET Framework sind Getter und Setter gesch√ºtzt.</span><span class="sxs-lookup"><span data-stu-id="80c70-402">In previous versions of the .NET Framework, both getter and setter are protected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80c70-403">Im folgenden Codebeispiel wird eine abgeleitete `Exception` Klasse definiert, die die `HResult`-Eigenschaft auf einen benutzerdefinierten Wert in Ihrem Konstruktor festlegt.</span><span class="sxs-lookup"><span data-stu-id="80c70-403">The following code example defines a derived `Exception` class that sets the `HResult` property to a custom value in its constructor.</span></span>  
  
 [!code-cpp[System.Exception.HResult#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.HResult/CPP/hresult.cpp#1)]
 [!code-csharp[System.Exception.HResult#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.HResult/CS/hresult.cs#1)]
 [!code-vb[System.Exception.HResult#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.HResult/VB/hresult.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/interop/how-to-map-hresults-and-exceptions.md"><span data-ttu-id="80c70-404">Gewusst wie: Zuordnen von HRESULTs und Ausnahmen</span><span class="sxs-lookup"><span data-stu-id="80c70-404">How to: Map HRESULTs and Exceptions</span></span></related>
        <related type="ExternalDocumentation" href="/windows/win32/seccrypto/common-hresult-values"><span data-ttu-id="80c70-405">Allgemeine HRESULT-Werte</span><span class="sxs-lookup"><span data-stu-id="80c70-405">Common HRESULT Values</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InnerException">
      <MemberSignature Language="C#" Value="public Exception InnerException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception InnerException" />
      <MemberSignature Language="DocId" Value="P:System.Exception.InnerException" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InnerException As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ InnerException { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InnerException : Exception" Usage="System.Exception.InnerException" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.InnerException</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80c70-406">Ruft die <see cref="T:System.Exception" />-Instanz ab, die die aktuelle Ausnahme verursacht hat.</span><span class="sxs-lookup"><span data-stu-id="80c70-406">Gets the <see cref="T:System.Exception" /> instance that caused the current exception.</span></span></summary>
        <value><span data-ttu-id="80c70-407">Eine Instanz, die den Fehler beschreibt, der die aktuelle Ausnahme verursacht hat.</span><span class="sxs-lookup"><span data-stu-id="80c70-407">An object that describes the error that caused the current exception.</span></span> <span data-ttu-id="80c70-408">Die <see cref="P:System.Exception.InnerException" />-Eigenschaft gibt gleichen Wert zur√ºck, der an den <see cref="M:System.Exception.#ctor(System.String,System.Exception)" />-Konstruktor √ºbergeben wurde, oder <see langword="null" />, wenn der Wert der inneren Ausnahme nicht an den Konstruktor √ºbergeben wurde.</span><span class="sxs-lookup"><span data-stu-id="80c70-408">The <see cref="P:System.Exception.InnerException" /> property returns the same value as was passed into the <see cref="M:System.Exception.#ctor(System.String,System.Exception)" /> constructor, or <see langword="null" /> if the inner exception value was not supplied to the constructor.</span></span> <span data-ttu-id="80c70-409">Diese Eigenschaft ist schreibgesch√ºtzt.</span><span class="sxs-lookup"><span data-stu-id="80c70-409">This property is read-only.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80c70-410">Wenn eine Ausnahme `X` als direktes Ergebnis einer vorherigen Ausnahme `Y`ausgel√∂st wird, sollte die Eigenschaft <xref:System.Exception.InnerException%2A> von `X` einen Verweis auf `Y`enthalten.</span><span class="sxs-lookup"><span data-stu-id="80c70-410">When an exception `X` is thrown as a direct result of a previous exception `Y`, the <xref:System.Exception.InnerException%2A> property of `X` should contain a reference to `Y`.</span></span>  
  
 <span data-ttu-id="80c70-411">√úber die <xref:System.Exception.InnerException%2A>-Eigenschaft kann die Gruppe von Ausnahmen abgerufen werden, die zur aktuellen Ausnahme gef√ºhrt hat.</span><span class="sxs-lookup"><span data-stu-id="80c70-411">Use the <xref:System.Exception.InnerException%2A> property to obtain the set of exceptions that led to the current exception.</span></span>  
  
 <span data-ttu-id="80c70-412">Sie k√∂nnen eine neue Ausnahme erstellen, die eine fr√ºhere Ausnahme abf√§ngt.</span><span class="sxs-lookup"><span data-stu-id="80c70-412">You can create a new exception that catches an earlier exception.</span></span> <span data-ttu-id="80c70-413">Der Code, der die zweite Ausnahme behandelt, kann die zus√§tzlichen Informationen aus der fr√ºheren Ausnahme verwenden, um den Fehler besser zu behandeln.</span><span class="sxs-lookup"><span data-stu-id="80c70-413">The code that handles the second exception can make use of the additional information from the earlier exception to handle the error more appropriately.</span></span>  
  
 <span data-ttu-id="80c70-414">Angenommen, es gibt eine Funktion, die eine Datei liest und die Daten aus dieser Datei formatiert.</span><span class="sxs-lookup"><span data-stu-id="80c70-414">Suppose that there is a function that reads a file and formats the data from that file.</span></span> <span data-ttu-id="80c70-415">In diesem Beispiel wird ein <xref:System.IO.IOException> ausgel√∂st, wenn der Code versucht, die Datei zu lesen.</span><span class="sxs-lookup"><span data-stu-id="80c70-415">In this example, as the code tries to read the file, an <xref:System.IO.IOException> is thrown.</span></span> <span data-ttu-id="80c70-416">Die Funktion f√§ngt den <xref:System.IO.IOException> ab und l√∂st eine <xref:System.IO.FileNotFoundException>aus.</span><span class="sxs-lookup"><span data-stu-id="80c70-416">The function catches the <xref:System.IO.IOException> and throws a <xref:System.IO.FileNotFoundException>.</span></span> <span data-ttu-id="80c70-417">Der <xref:System.IO.IOException> kann in der <xref:System.Exception.InnerException%2A>-Eigenschaft des <xref:System.IO.FileNotFoundException>gespeichert werden, sodass der Code, der die <xref:System.IO.FileNotFoundException> abf√§ngt, die Ursache des anf√§nglichen Fehlers untersucht.</span><span class="sxs-lookup"><span data-stu-id="80c70-417">The <xref:System.IO.IOException> could be saved in the <xref:System.Exception.InnerException%2A> property of the <xref:System.IO.FileNotFoundException>, enabling the code that catches the <xref:System.IO.FileNotFoundException> to examine the cause of the initial error.</span></span>  
  
 <span data-ttu-id="80c70-418">Die <xref:System.Exception.InnerException%2A>-Eigenschaft, die einen Verweis auf die innere Ausnahme enth√§lt, wird bei der Initialisierung des Ausnahme Objekts festgelegt.</span><span class="sxs-lookup"><span data-stu-id="80c70-418">The <xref:System.Exception.InnerException%2A> property, which holds a reference to the inner exception, is set upon initialization of the exception object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80c70-419">Im folgenden Beispiel wird veranschaulicht, wie Sie eine Ausnahme ausl√∂sen und abfangen, die auf eine innere Ausnahme verweist.</span><span class="sxs-lookup"><span data-stu-id="80c70-419">The following example demonstrates throwing and catching an exception that references an inner exception.</span></span>  
  
 [!code-cpp[InnerEx#1](~/samples/snippets/cpp/VS_Snippets_CLR/InnerEx/CPP/innerex.cpp#1)]
 [!code-csharp[InnerEx#1](~/samples/snippets/csharp/VS_Snippets_CLR/InnerEx/CS/innerex.cs#1)]
 [!code-vb[InnerEx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/InnerEx/VB/innerex.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public virtual string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.Exception.Message" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Message { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Message : string" Usage="System.Exception.Message" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.Message</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80c70-420">Ruft eine Meldung ab, mit der die aktuelle Ausnahme beschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="80c70-420">Gets a message that describes the current exception.</span></span></summary>
        <value><span data-ttu-id="80c70-421">Die Fehlermeldung, die den Grund f√ºr die Ausnahme erl√§utert, oder eine leere Zeichenfolge ("").</span><span class="sxs-lookup"><span data-stu-id="80c70-421">The error message that explains the reason for the exception, or an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80c70-422">Fehlermeldungen richten sich an den Entwickler, der die Ausnahme behandelt.</span><span class="sxs-lookup"><span data-stu-id="80c70-422">Error messages target the developer who is handling the exception.</span></span> <span data-ttu-id="80c70-423">Der Text der <xref:System.Exception.Message%2A>-Eigenschaft sollte den Fehler vollst√§ndig beschreiben und, wenn m√∂glich, auch erl√§utern, wie der Fehler korrigiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="80c70-423">The text of the <xref:System.Exception.Message%2A> property should completely describe the error and, when possible, should also explain how to correct the error.</span></span> <span data-ttu-id="80c70-424">Ausnahmehandler der obersten Ebene k√∂nnen die Meldung f√ºr Endbenutzer anzeigen. Daher sollten Sie sicherstellen, dass Sie korrekt ist und dass jeder Satz der Nachricht mit einem bestimmten Zeitraum endet.</span><span class="sxs-lookup"><span data-stu-id="80c70-424">Top-level exception handlers may display the message to end-users, so you should ensure that it is grammatically correct and that each sentence of the message ends with a period.</span></span> <span data-ttu-id="80c70-425">Verwenden Sie keine Fragezeichen oder Ausrufezeichen.</span><span class="sxs-lookup"><span data-stu-id="80c70-425">Do not use question marks or exclamation points.</span></span> <span data-ttu-id="80c70-426">Wenn Ihre Anwendung lokalisierte Ausnahme Meldungen verwendet, sollten Sie sicherstellen, dass Sie korrekt √ºbersetzt werden.</span><span class="sxs-lookup"><span data-stu-id="80c70-426">If your application uses localized exception messages, you should ensure that they are accurately translated.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="80c70-427">Geben Sie keine sensiblen Informationen in Ausnahme Meldungen offen, ohne die entsprechenden Berechtigungen zu √ºberpr√ºfen.</span><span class="sxs-lookup"><span data-stu-id="80c70-427">Do not disclose sensitive information in exception messages without checking for the appropriate permissions.</span></span>  
  
 <span data-ttu-id="80c70-428">Der Wert der <xref:System.Exception.Message%2A>-Eigenschaft ist in den von <xref:System.Exception.ToString%2A>zur√ºckgegebenen Informationen enthalten.</span><span class="sxs-lookup"><span data-stu-id="80c70-428">The value of the <xref:System.Exception.Message%2A> property is included in the information returned by <xref:System.Exception.ToString%2A>.</span></span> <span data-ttu-id="80c70-429">Die <xref:System.Exception.Message%2A>-Eigenschaft wird nur beim Erstellen einer <xref:System.Exception>festgelegt.</span><span class="sxs-lookup"><span data-stu-id="80c70-429">The <xref:System.Exception.Message%2A> property is set only when creating an <xref:System.Exception>.</span></span> <span data-ttu-id="80c70-430">Wenn keine Meldung an den Konstruktor f√ºr die aktuelle Instanz √ºbergeben wurde, stellt das System eine Standardnachricht bereit, die mithilfe der aktuellen System Kultur formatiert wird.</span><span class="sxs-lookup"><span data-stu-id="80c70-430">If no message was supplied to the constructor for the current instance, the system supplies a default message that is formatted using the current system culture.</span></span>  
  
## <a name="windows-runtime-and-net_v451"></a><span data-ttu-id="80c70-431">Windows-Runtime und [!INCLUDE[net_v451](~/includes/net-v451-md.md)]</span><span class="sxs-lookup"><span data-stu-id="80c70-431">Windows Runtime and [!INCLUDE[net_v451](~/includes/net-v451-md.md)]</span></span>  
 <span data-ttu-id="80c70-432">Beginnend mit dem [!INCLUDE[net_v451](~/includes/net-v451-md.md)] und [!INCLUDE[win81](~/includes/win81-md.md)]werden Fehlermeldungen von Ausnahmen, die von Windows-Runtime Typen und Membern weitergegeben werden, die nicht Teil der .NET Framework sind, verbessert.</span><span class="sxs-lookup"><span data-stu-id="80c70-432">Starting with the [!INCLUDE[net_v451](~/includes/net-v451-md.md)] and [!INCLUDE[win81](~/includes/win81-md.md)], the fidelity of error messages from exceptions that are propagated from Windows Runtime types and members that are not part of the .NET Framework is improved.</span></span> <span data-ttu-id="80c70-433">Vor allem werden Ausnahme Meldungen von Visual C++ Component Extensions (C++/CX) nun wieder in .NET Framework <xref:System.Exception> Objekten zur√ºckgegeben.</span><span class="sxs-lookup"><span data-stu-id="80c70-433">In particular, exception messages from Visual C++ component extensions (C++/CX) are now propagated back into .NET Framework <xref:System.Exception> objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80c70-434">Im folgenden Codebeispiel wird eine <xref:System.Exception> Ausnahme ausgel√∂st und dann abgefangen und die Textnachricht der Ausnahme mithilfe der <xref:System.Exception.Message%2A>-Eigenschaft angezeigt.</span><span class="sxs-lookup"><span data-stu-id="80c70-434">The following code example throws and then catches an <xref:System.Exception> exception and displays the exception's text message using the <xref:System.Exception.Message%2A> property.</span></span>
  
 [!code-cpp[System.Exception.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.Exception.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Properties/CS/properties.cs#1)]
 [!code-vb[System.Exception.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="80c70-435">Wenn Sie eine Ausnahme von einer Eigenschaft ausl√∂sen und im Text <see cref="P:System.Exception.Message" /> auf das Eigenschafts Argument, das Sie festgelegt oder erhalten haben, verweisen m√ºssen, verwenden Sie den Wert "Value" als Namen des Eigenschafts Arguments.</span><span class="sxs-lookup"><span data-stu-id="80c70-435">If you throw an exception from a property, and you need to refer in the text of <see cref="P:System.Exception.Message" /> to the property argument that you set or get, use "value" as the name of the property argument.</span></span></para></block>
        <block subset="none" type="overrides"><para><span data-ttu-id="80c70-436">Die <see cref="P:System.Exception.Message" />-Eigenschaft wird in Klassen, die die Kontrolle √ºber den Nachrichten Inhalt oder das Format erfordern, √ºberschrieben.</span><span class="sxs-lookup"><span data-stu-id="80c70-436">The <see cref="P:System.Exception.Message" /> property is overridden in classes that require control over message content or format.</span></span> <span data-ttu-id="80c70-437">Anwendungscode greift in der Regel auf diese Eigenschaft zu, wenn Sie Informationen zu einer aufgefangenen Ausnahme anzeigen muss.</span><span class="sxs-lookup"><span data-stu-id="80c70-437">Application code typically accesses this property when it needs to display information about an exception that has been caught.</span></span>  
  
<span data-ttu-id="80c70-438">Die Fehlermeldung sollte lokalisiert werden.</span><span class="sxs-lookup"><span data-stu-id="80c70-438">The error message should be localized.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="SerializeObjectState">
      <MemberSignature Language="C#" Value="protected event EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt; SerializeObjectState;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Runtime.Serialization.SafeSerializationEventArgs&gt; SerializeObjectState" />
      <MemberSignature Language="DocId" Value="E:System.Exception.SerializeObjectState" />
      <MemberSignature Language="VB.NET" Value="Protected Custom Event SerializeObjectState As EventHandler(Of SafeSerializationEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; event EventHandler&lt;System::Runtime::Serialization::SafeSerializationEventArgs ^&gt; ^ SerializeObjectState;" />
      <MemberSignature Language="F#" Value="member this.SerializeObjectState : EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt; " Usage="member this.SerializeObjectState : System.EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80c70-439">Tritt auf, wenn eine Ausnahme serialisiert wird, um ein Ausnahmezustandsobjekt mit serialisierten Daten √ºber die Ausnahme zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="80c70-439">Occurs when an exception is serialized to create an exception state object that contains serialized data about the exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80c70-440">Das Ausnahmezustands Objekt implementiert die <xref:System.Runtime.Serialization.ISafeSerializationData>-Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="80c70-440">The exception state object implements the <xref:System.Runtime.Serialization.ISafeSerializationData> interface.</span></span>  
  
 <span data-ttu-id="80c70-441">Wenn das <xref:System.Exception.SerializeObjectState>-Ereignis abonniert ist, wird die Ausnahme deserialisiert und als leere Ausnahme erstellt.</span><span class="sxs-lookup"><span data-stu-id="80c70-441">When the <xref:System.Exception.SerializeObjectState> event is subscribed to, the exception is deserialized and created as an empty exception.</span></span> <span data-ttu-id="80c70-442">Der Konstruktor der Ausnahme wird nicht ausgef√ºhrt, und der Ausnahmezustand wird ebenfalls deserialisiert.</span><span class="sxs-lookup"><span data-stu-id="80c70-442">The exception's constructor is not run, and the exception state is also deserialized.</span></span> <span data-ttu-id="80c70-443">Die <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A> R√ºckruf Methode des Ausnahmezustands Objekts wird dann benachrichtigt, sodass deserialisierte Daten per Push in die leere Ausnahme √ºber Push gesendet werden k√∂nnen.</span><span class="sxs-lookup"><span data-stu-id="80c70-443">The <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A> callback method of the exception state object is then notified so that it can push deserialized data into the empty exception.</span></span>  
  
 <span data-ttu-id="80c70-444">Das <xref:System.Exception.SerializeObjectState>-Ereignis erm√∂glicht transparente Ausnahme Typen zum Serialisieren und Deserialisieren von Ausnahme Daten.</span><span class="sxs-lookup"><span data-stu-id="80c70-444">The <xref:System.Exception.SerializeObjectState> event enables transparent exception types to serialize and deserialize exception data.</span></span> <span data-ttu-id="80c70-445">Transparenter Code kann Befehle innerhalb der Grenzen des Berechtigungs Satzes ausf√ºhren, in dem er ausgef√ºhrt wird. er kann jedoch nicht ausgef√ºhrt, aufgerufen, von ihm abgeleitet werden oder kritischen Code enthalten.</span><span class="sxs-lookup"><span data-stu-id="80c70-445">Transparent code can execute commands within the bounds of the permission set it is operating within, but cannot execute, call, derive from, or contain critical code.</span></span>  
  
 <span data-ttu-id="80c70-446">Wenn das <xref:System.Exception.SerializeObjectState>-Ereignis nicht abonniert ist, erfolgt die Deserialisierung wie gewohnt mithilfe des <xref:System.Exception.%23ctor%2A>-Konstruktors.</span><span class="sxs-lookup"><span data-stu-id="80c70-446">If the <xref:System.Exception.SerializeObjectState> event is not subscribed to, deserialization occurs as usual using the <xref:System.Exception.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="80c70-447">In der Regel wird ein Handler f√ºr das <xref:System.Exception.SerializeObjectState> Ereignis im Konstruktor der Ausnahme hinzugef√ºgt, um seine Serialisierung bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="80c70-447">Typically, a handler for the <xref:System.Exception.SerializeObjectState> event is added in the exception's constructor to provide for its serialization.</span></span> <span data-ttu-id="80c70-448">Da der Konstruktor jedoch nicht ausgef√ºhrt wird, wenn der <xref:System.Exception.SerializeObjectState>-Ereignishandler ausgef√ºhrt wird, kann das Serialisieren einer deserialisierten Ausnahme eine <xref:System.Runtime.Serialization.SerializationException> Ausnahme ausl√∂sen, wenn Sie versuchen, die Ausnahme zu deserialisieren.</span><span class="sxs-lookup"><span data-stu-id="80c70-448">But because the constructor is not executed when the <xref:System.Exception.SerializeObjectState> event handler executes, serializing a deserialized exception can throw a <xref:System.Runtime.Serialization.SerializationException> exception when you try to deserialize the exception.</span></span> <span data-ttu-id="80c70-449">Um dies zu vermeiden, sollten Sie auch den Handler f√ºr das <xref:System.Exception.SerializeObjectState>-Ereignis in der <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A?displayProperty=nameWithType>-Methode hinzuf√ºgen.</span><span class="sxs-lookup"><span data-stu-id="80c70-449">To avoid this, you should also add the handler for the <xref:System.Exception.SerializeObjectState> event in the <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="80c70-450">Eine Abbildung finden Sie im Abschnitt "Beispiele".</span><span class="sxs-lookup"><span data-stu-id="80c70-450">See the Examples section for an illustration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80c70-451">Im folgenden Beispiel wird eine `BadDivisionException` definiert, die das <xref:System.Exception.SerializeObjectState>-Ereignis behandelt.</span><span class="sxs-lookup"><span data-stu-id="80c70-451">The following example defines a `BadDivisionException` that handles the <xref:System.Exception.SerializeObjectState> event.</span></span> <span data-ttu-id="80c70-452">Sie enth√§lt auch ein State-Objekt, das eine Struktur mit dem Namen `BadDivisionExceptionState` ist, die die <xref:System.Runtime.Serialization.ISafeSerializationData>-Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="80c70-452">It also contains a state object, which is a nested structure named `BadDivisionExceptionState` that implements the <xref:System.Runtime.Serialization.ISafeSerializationData> interface.</span></span>  
  
 [!code-csharp[System.Exception.SerializeObjectState#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.serializeobjectstate/cs/example2.cs#1)]
 [!code-vb[System.Exception.SerializeObjectState#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.serializeobjectstate/vb/example2.vb#1)]  
  
 <span data-ttu-id="80c70-453">Die `BadDivisionException` Ausnahme wird ausgel√∂st, wenn eine Gleit Komma Division durch null auftritt.</span><span class="sxs-lookup"><span data-stu-id="80c70-453">The `BadDivisionException` exception is thrown when a floating-point division by zero occurs.</span></span> <span data-ttu-id="80c70-454">W√§hrend der ersten Division durch Null instanziiert das Beispiel ein `BadDivisionException` Objekt, serialisiert es und l√∂st die Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="80c70-454">During the first division by zero, the example instantiates a `BadDivisionException` object, serializes it, and throws the exception.</span></span> <span data-ttu-id="80c70-455">Wenn nachfolgende Teilungen durch Null auftreten, wird das zuvor serialisierte Objekt deserialisiert, erneut serialisiert und die Ausnahme ausgel√∂st.</span><span class="sxs-lookup"><span data-stu-id="80c70-455">When subsequent divisions by zero occur, the example deserializes the  previously serialized object, reserializes it, and throws the exception.</span></span> <span data-ttu-id="80c70-456">Um Objektserialisierung, Deserialisierung, neuserialisierung und Deserialisierung bereitzustellen, f√ºgt das Beispiel den <xref:System.Exception.SerializeObjectState> Ereignishandler sowohl im `BadDivisionException`-Klassenkonstruktor als auch in der <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A?displayProperty=nameWithType>-Implementierung hinzu.</span><span class="sxs-lookup"><span data-stu-id="80c70-456">To provide for object serialization, deserialization, reserialization, and deserialization, the example adds the <xref:System.Exception.SerializeObjectState> event handler both in the `BadDivisionException` class constructor and in the <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A?displayProperty=nameWithType> implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="80c70-457">Wenn dieses Ereignis abonniert und verwendet wird, m√ºssen alle abgeleiteten Typen, die in der Vererbungs Hierarchie folgen, denselben Serialisierungsmechanismus implementieren.</span><span class="sxs-lookup"><span data-stu-id="80c70-457">If this event is subscribed to and used, all derived types that follow in the inheritance hierarchy must implement the same serialization mechanism.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public virtual string Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Exception.Source" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Source { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : string with get, set" Usage="System.Exception.Source" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.Source</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80c70-458">Gibt den Namen der Anwendung oder des Objekts zur√ºck, die bzw. das den Fehler verursacht hat, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="80c70-458">Gets or sets the name of the application or the object that causes the error.</span></span></summary>
        <value><span data-ttu-id="80c70-459">Der Name der Anwendung oder des Objekts, die bzw. das den Fehler verursacht hat.</span><span class="sxs-lookup"><span data-stu-id="80c70-459">The name of the application or the object that causes the error.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80c70-460">Wenn die <xref:System.Exception.Source%2A>-Eigenschaft nicht explizit festgelegt ist, legt die Laufzeit diese automatisch auf den Namen der Assembly fest, von der die Ausnahme stammt.</span><span class="sxs-lookup"><span data-stu-id="80c70-460">If the <xref:System.Exception.Source%2A> property is not set explicitly, the runtime automatically sets it to the name of the assembly in which the exception originated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80c70-461">Im folgenden Beispiel wird eine `Exception` ausgel√∂st, die die `Source`-Eigenschaft im Konstruktor festlegt und dann die Ausnahme abf√§ngt und `Source`anzeigt.</span><span class="sxs-lookup"><span data-stu-id="80c70-461">The following example throws an `Exception` that sets the `Source` property in its constructor and then catches the exception and displays `Source`.</span></span>  
  
 [!code-cpp[System.Exception.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.Exception.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Properties/CS/properties.cs#1)]
 [!code-vb[System.Exception.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="80c70-462">Das Objekt muss ein <see cref="N:System.Reflection" />-Laufzeitobjekt sein.</span><span class="sxs-lookup"><span data-stu-id="80c70-462">The object must be a runtime <see cref="N:System.Reflection" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StackTrace">
      <MemberSignature Language="C#" Value="public virtual string StackTrace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StackTrace" />
      <MemberSignature Language="DocId" Value="P:System.Exception.StackTrace" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property StackTrace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ StackTrace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StackTrace : string" Usage="System.Exception.StackTrace" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.StackTrace</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80c70-463">Ruft eine Zeichenfolgendarstellung der unmittelbaren Frames in der Aufrufliste ab.</span><span class="sxs-lookup"><span data-stu-id="80c70-463">Gets a string representation of the immediate frames on the call stack.</span></span></summary>
        <value><span data-ttu-id="80c70-464">Eine Zeichenfolge, die die unmittelbaren Frames der Aufrufliste beschreibt.</span><span class="sxs-lookup"><span data-stu-id="80c70-464">A string that describes the immediate frames of the call stack.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80c70-465">Der Ausf√ºhrungsstapel verfolgt alle Methoden, die zu einem angegebenen Zeitpunkt gerade ausgef√ºhrt werden.</span><span class="sxs-lookup"><span data-stu-id="80c70-465">The execution stack keeps track of all the methods that are in execution at a given instant.</span></span> <span data-ttu-id="80c70-466">Ein √úberwachungsprotokoll der Methodenaufrufe wird als Stapel√ºberwachung bezeichnet.</span><span class="sxs-lookup"><span data-stu-id="80c70-466">A trace of the method calls is called a stack trace.</span></span> <span data-ttu-id="80c70-467">Das Stapel √úberwachungslisten bietet eine M√∂glichkeit, der-Methode in der-Methode, in der die Ausnahme auftritt, der-aufrufsliste nachzuverfolgen.</span><span class="sxs-lookup"><span data-stu-id="80c70-467">The stack trace listing provides a way to follow the call stack to the line number in the method where the exception occurs.</span></span>  
  
 <span data-ttu-id="80c70-468">Die <xref:System.Exception.StackTrace%2A>-Eigenschaft gibt die Frames der-Aufrufstapel zur√ºck, die von der Position stammen, an der die Ausnahme ausgel√∂st wurde.</span><span class="sxs-lookup"><span data-stu-id="80c70-468">The <xref:System.Exception.StackTrace%2A> property returns the frames of the call stack that originate at the location where the exception was thrown.</span></span> <span data-ttu-id="80c70-469">Sie k√∂nnen Informationen zu zus√§tzlichen Frames in der aufrufsstapel abrufen, indem Sie eine neue Instanz der <xref:System.Diagnostics.StackTrace?displayProperty=nameWithType>-Klasse erstellen und deren <xref:System.Diagnostics.StackTrace.ToString%2A?displayProperty=nameWithType>-Methode verwenden.</span><span class="sxs-lookup"><span data-stu-id="80c70-469">You can obtain information about additional frames in the call stack by creating a new instance of the <xref:System.Diagnostics.StackTrace?displayProperty=nameWithType> class and using its <xref:System.Diagnostics.StackTrace.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="80c70-470">Der Common Language Runtime (CLR) aktualisiert die Stapel √úberwachung, wenn im Anwendungscode eine Ausnahme ausgel√∂st wird (mit dem Schl√ºsselwort `throw`).</span><span class="sxs-lookup"><span data-stu-id="80c70-470">The common language runtime (CLR) updates the stack trace whenever an exception is thrown in application code (by using the `throw` keyword).</span></span> <span data-ttu-id="80c70-471">Wenn die Ausnahme in einer Methode erneut ausgel√∂st wurde, die sich von der Methode unterscheidet, in der Sie urspr√ºnglich ausgel√∂st wurde, enth√§lt die Stapel √úberwachung sowohl den Speicherort in der Methode, in der die Ausnahme urspr√ºnglich ausgel√∂st wurde, als auch die Position in der Methode, in der die Ausnahme erneut ausgel√∂st wurde.</span><span class="sxs-lookup"><span data-stu-id="80c70-471">If the exception was rethrown in a method that is different than the method where it was originally thrown, the stack trace contains both the location in the method where the exception was originally thrown, and the location in the method where the exception was rethrown.</span></span> <span data-ttu-id="80c70-472">Wenn die Ausnahme ausgel√∂st und sp√§ter erneut ausgel√∂st wird, enth√§lt die Stapel √úberwachung in derselben Methode nur den Speicherort, an dem die Ausnahme erneut ausgel√∂st wurde, und enth√§lt nicht den Speicherort, an dem die Ausnahme urspr√ºnglich ausgel√∂st wurde.</span><span class="sxs-lookup"><span data-stu-id="80c70-472">If the exception is thrown, and later rethrown, in the same method, the stack trace only contains the location where the exception was rethrown and does not include the location where the exception was originally thrown.</span></span>  
  
 <span data-ttu-id="80c70-473">Die <xref:System.Exception.StackTrace%2A>-Eigenschaft meldet aufgrund von Code Transformationen (z. b. Inlining), die w√§hrend der Optimierung auftreten, m√∂glicherweise nicht so viele Methodenaufrufe wie erwartet.</span><span class="sxs-lookup"><span data-stu-id="80c70-473">The <xref:System.Exception.StackTrace%2A> property may not report as many method calls as expected because of code transformations, such as inlining, that occur during optimization.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80c70-474">Im folgenden Codebeispiel wird eine `Exception` ausgel√∂st und dann abgefangen und mithilfe der `StackTrace`-Eigenschaft eine Stapel √úberwachung angezeigt.</span><span class="sxs-lookup"><span data-stu-id="80c70-474">The following code example throws an `Exception` and then catches it and displays a stack trace using the `StackTrace` property.</span></span>  
  
 [!code-cpp[System.Exception.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.Exception.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Properties/CS/properties.cs#1)]
 [!code-vb[System.Exception.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="80c70-475">Die <see langword="StackTrace" />-Eigenschaft wird in Klassen, die die Kontrolle √ºber den Inhalt oder das Format der Stapel √úberwachung erfordern, √ºberschrieben.</span><span class="sxs-lookup"><span data-stu-id="80c70-475">The <see langword="StackTrace" /> property is overridden in classes that require control over the stack trace content or format.</span></span>  
  
<span data-ttu-id="80c70-476">Standardm√§√üig wird die Stapel √úberwachung unmittelbar vor dem Ausl√∂sen eines Ausnahme Objekts aufgezeichnet.</span><span class="sxs-lookup"><span data-stu-id="80c70-476">By default, the stack trace is captured immediately before an exception object is thrown.</span></span> <span data-ttu-id="80c70-477">Verwenden Sie <see cref="P:System.Environment.StackTrace" />, um Stapel √úberwachungsinformationen zu erhalten, wenn keine Ausnahme ausgel√∂st wird.</span><span class="sxs-lookup"><span data-stu-id="80c70-477">Use <see cref="P:System.Environment.StackTrace" /> to get stack trace information when no exception is being thrown.</span></span></para></block>
        <altmember cref="P:System.Environment.StackTrace" />
      </Docs>
    </Member>
    <Member MemberName="TargetSite">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodBase TargetSite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodBase TargetSite" />
      <MemberSignature Language="DocId" Value="P:System.Exception.TargetSite" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetSite As MethodBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodBase ^ TargetSite { System::Reflection::MethodBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetSite : System.Reflection.MethodBase" Usage="System.Exception.TargetSite" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.TargetSite</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80c70-478">Ruft die Methode ab, die die aktuelle Ausnahme ausl√∂st.</span><span class="sxs-lookup"><span data-stu-id="80c70-478">Gets the method that throws the current exception.</span></span></summary>
        <value><span data-ttu-id="80c70-479">Die <see cref="T:System.Reflection.MethodBase" />, die die aktuelle Ausnahme ausgel√∂st hat.</span><span class="sxs-lookup"><span data-stu-id="80c70-479">The <see cref="T:System.Reflection.MethodBase" /> that threw the current exception.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80c70-480">Wenn die Methode, die diese Ausnahme ausl√∂st, nicht verf√ºgbar ist und die Stapel √úberwachung kein NULL-Verweis ist (`Nothing` in Visual Basic), ruft <xref:System.Exception.TargetSite%2A> die Methode aus der Stapel √úberwachung ab.</span><span class="sxs-lookup"><span data-stu-id="80c70-480">If the method that throws this exception is not available and the stack trace is not a null reference (`Nothing` in Visual Basic), <xref:System.Exception.TargetSite%2A> obtains the method from the stack trace.</span></span> <span data-ttu-id="80c70-481">Wenn die Stapel√ºberwachung ein NULL-Verweis ist, gibt <xref:System.Exception.TargetSite%2A> ebenfalls einen NULL-Verweis zur√ºck.</span><span class="sxs-lookup"><span data-stu-id="80c70-481">If the stack trace is a null reference, <xref:System.Exception.TargetSite%2A> also returns a null reference.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="80c70-482">Die <xref:System.Exception.TargetSite%2A>-Eigenschaft meldet m√∂glicherweise nicht genau den Namen der Methode, in der eine Ausnahme ausgel√∂st wurde, wenn der Ausnahmehandler eine Ausnahme √ºber Anwendungs Dom√§nen Grenzen hinweg behandelt.</span><span class="sxs-lookup"><span data-stu-id="80c70-482">The <xref:System.Exception.TargetSite%2A> property may not accurately report the name of the method in which an exception was thrown if the exception handler handles an exception across application domain boundaries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80c70-483">Im folgenden Codebeispiel wird eine `Exception` ausgel√∂st und dann abgefangen und die Ursprungs Methode mithilfe der `TargetSite`-Eigenschaft angezeigt.</span><span class="sxs-lookup"><span data-stu-id="80c70-483">The following code example throws an `Exception` and then catches it and displays the originating method using the `TargetSite` property.</span></span>  
  
 [!code-cpp[System.Exception.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.Exception.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Properties/CS/properties.cs#1)]
 [!code-vb[System.Exception.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="exception.ToString " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Exception.ToString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="80c70-484">Erstellt eine Zeichenfolgendarstellung der aktuellen Ausnahme und gibt diese zur√ºck.</span><span class="sxs-lookup"><span data-stu-id="80c70-484">Creates and returns a string representation of the current exception.</span></span></summary>
        <returns><span data-ttu-id="80c70-485">Eine Zeichenfolgendarstellung der aktuellen Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="80c70-485">A string representation of the current exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80c70-486"><xref:System.Exception.ToString%2A> gibt eine Darstellung der aktuellen Ausnahme zur√ºck, die von Menschen verstanden werden soll.</span><span class="sxs-lookup"><span data-stu-id="80c70-486"><xref:System.Exception.ToString%2A> returns a representation of the current exception that is intended to be understood by humans.</span></span> <span data-ttu-id="80c70-487">Wenn die Ausnahme Kultur abh√§ngige Daten enth√§lt, muss die von `ToString` zur√ºckgegebene Zeichen folgen Darstellung die aktuelle System Kultur ber√ºcksichtigen.</span><span class="sxs-lookup"><span data-stu-id="80c70-487">Where the exception contains culture-sensitive data, the string representation returned by `ToString` is required to take into account the current system culture.</span></span> <span data-ttu-id="80c70-488">Obwohl es f√ºr das Format der zur√ºckgegebenen Zeichenfolge keine exakten Anforderungen gibt, sollte versucht werden, den Wert des Objekts entsprechend der vom Benutzer erkannten Werte widerzuspiegeln.</span><span class="sxs-lookup"><span data-stu-id="80c70-488">Although there are no exact requirements for the format of the returned string, it should attempt to reflect the value of the object as perceived by the user.</span></span>  
  
 <span data-ttu-id="80c70-489">Die Standard Implementierung von <xref:System.Exception.ToString%2A> Ruft den Namen der Klasse ab, die die aktuelle Ausnahme ausgel√∂st hat, die Meldung, das Ergebnis des <xref:System.Exception.ToString%2A> der inneren Ausnahme und das Ergebnis des Aufruf von <xref:System.Environment.StackTrace%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="80c70-489">The default implementation of <xref:System.Exception.ToString%2A> obtains the name of the class that threw the current exception, the message, the result of calling <xref:System.Exception.ToString%2A> on the inner exception, and the result of calling <xref:System.Environment.StackTrace%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="80c70-490">Wenn eines dieser Member `null`ist, ist sein Wert nicht in der zur√ºckgegebenen Zeichenfolge enthalten.</span><span class="sxs-lookup"><span data-stu-id="80c70-490">If any of these members is `null`, its value is not included in the returned string.</span></span>  
  
 <span data-ttu-id="80c70-491">Wenn keine Fehlermeldung vorhanden ist oder es sich um eine leere Zeichenfolge ("") handelt, wird keine Fehlermeldung zur√ºckgegeben.</span><span class="sxs-lookup"><span data-stu-id="80c70-491">If there is no error message or if it is an empty string (""), then no error message is returned.</span></span> <span data-ttu-id="80c70-492">Der Name der inneren Ausnahme und die Stapel √úberwachung werden nur zur√ºckgegeben, wenn Sie nicht `null`werden.</span><span class="sxs-lookup"><span data-stu-id="80c70-492">The name of the inner exception and the stack trace are returned only if they are not `null`.</span></span>  
  
 <span data-ttu-id="80c70-493">Diese Methode √ºberschreibt <xref:System.Object.ToString%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="80c70-493">This method overrides <xref:System.Object.ToString%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80c70-494">Im folgenden Beispiel wird eine Ausnahme ausgel√∂st und das Ergebnis der aufrufenden <xref:System.Exception.ToString%2A> f√ºr diese Ausnahme angezeigt.</span><span class="sxs-lookup"><span data-stu-id="80c70-494">The following example causes an exception and displays the result of calling <xref:System.Exception.ToString%2A> on that exception.</span></span> <span data-ttu-id="80c70-495">Beachten Sie, dass die <xref:System.Exception.ToString%2A?displayProperty=nameWithType>-Methode implizit aufgerufen wird, wenn die Ausnahme Klasseninstanz in der Argumentliste der <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> Methode angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="80c70-495">Note that the <xref:System.Exception.ToString%2A?displayProperty=nameWithType> method is called implicitly when the Exception class instance appears in the argument list of the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[System.Exception.ToString#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.exception.tostring/cpp/ToStringEx1.cpp#1)]
 [!code-csharp[System.Exception.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.tostring/cs/ToStringEx1.cs#1)]
 [!code-vb[System.Exception.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.tostring/vb/ToStringEx1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
