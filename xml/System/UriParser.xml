<Type Name="UriParser" FullName="System.UriParser">
  <Metadata><Meta Name="ms.openlocfilehash" Value="72d08510acd9597ed5b635e394e213f5270978b2" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86685466" /></Metadata><TypeSignature Language="C#" Value="public abstract class UriParser" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit UriParser extends System.Object" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.UriParser" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class UriParser" />
  <TypeSignature Language="C++ CLI" Value="public ref class UriParser abstract" />
  <TypeSignature Language="F#" Value="type UriParser = class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract UriParser extends System.Object" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f5636-101">Analysiert ein neues URI-Schema.</span><span class="sxs-lookup"><span data-stu-id="f5636-101">Parses a new URI scheme.</span></span> <span data-ttu-id="f5636-102">Dies ist eine abstrakte Klasse.</span><span class="sxs-lookup"><span data-stu-id="f5636-102">This is an abstract class.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5636-103">Mit der UriParser-Klasse können Sie Parser für neue URI-Schemas erstellen.</span><span class="sxs-lookup"><span data-stu-id="f5636-103">The UriParser class enables you to create parsers for new URI schemes.</span></span> <span data-ttu-id="f5636-104">Sie können diese Parser vollständig schreiben, oder die Parser können von bekannten Schemas (http, FTP und anderen Schemas basierend auf Netzwerkprotokollen) abgeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="f5636-104">You can write these parsers in their entirety, or the parsers can be derived from well-known schemes (HTTP, FTP, and other schemes based on network protocols).</span></span> <span data-ttu-id="f5636-105">Wenn Sie einen vollständig neuen Parser erstellen möchten, erben Sie von <xref:System.GenericUriParser> .</span><span class="sxs-lookup"><span data-stu-id="f5636-105">If you want to create a completely new parser, inherit from <xref:System.GenericUriParser>.</span></span> <span data-ttu-id="f5636-106">Wenn Sie einen Parser erstellen möchten, der ein bekanntes URI-Schema erweitert, erben Sie von <xref:System.FtpStyleUriParser> , <xref:System.HttpStyleUriParser> , <xref:System.FileStyleUriParser> , <xref:System.GopherStyleUriParser> oder <xref:System.LdapStyleUriParser> .</span><span class="sxs-lookup"><span data-stu-id="f5636-106">If you want to create a parser that extends a well-known URI scheme, inherit from <xref:System.FtpStyleUriParser>, <xref:System.HttpStyleUriParser>, <xref:System.FileStyleUriParser>, <xref:System.GopherStyleUriParser>, or <xref:System.LdapStyleUriParser>.</span></span>  
  
 <span data-ttu-id="f5636-107">Microsoft empfiehlt dringend, einen mit .net gelieferten Parser zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="f5636-107">Microsoft strongly recommends that you use a parser shipped with .NET.</span></span> <span data-ttu-id="f5636-108">Das Entwickeln Ihres eigenen Parsers erhöht die Komplexität Ihrer Anwendung und führt nicht genauso wie die vergelieferten Parser aus.</span><span class="sxs-lookup"><span data-stu-id="f5636-108">Building your own parser increases the complexity of your application, and will not perform as well as the shipped parsers.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected UriParser ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriParser.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; UriParser();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f5636-109">Erstellt einen Standard-URI-Parser.</span><span class="sxs-lookup"><span data-stu-id="f5636-109">Constructs a default URI parser.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetComponents">
      <MemberSignature Language="C#" Value="protected virtual string GetComponents (Uri uri, UriComponents components, UriFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetComponents(class System.Uri uri, valuetype System.UriComponents components, valuetype System.UriFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetComponents (uri As Uri, components As UriComponents, format As UriFormat) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetComponents(Uri ^ uri, UriComponents components, UriFormat format);" />
      <MemberSignature Language="F#" Value="abstract member GetComponents : Uri * UriComponents * UriFormat -&gt; string&#xA;override this.GetComponents : Uri * UriComponents * UriFormat -&gt; string" Usage="uriParser.GetComponents (uri, components, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="components" Type="System.UriComponents" />
        <Parameter Name="format" Type="System.UriFormat" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="f5636-110">Der zu analysierende URI.</span><span class="sxs-lookup"><span data-stu-id="f5636-110">The URI to parse.</span></span></param>
        <param name="components"><span data-ttu-id="f5636-111">Die <see cref="T:System.UriComponents" />, die von <paramref name="uri" /> abgerufen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="f5636-111">The <see cref="T:System.UriComponents" /> to retrieve from <paramref name="uri" />.</span></span></param>
        <param name="format"><span data-ttu-id="f5636-112">Einer der <see cref="T:System.UriFormat" />-Werte, die steuern, wie Sonderzeichen mit Escapezeichen versehen werden.</span><span class="sxs-lookup"><span data-stu-id="f5636-112">One of the <see cref="T:System.UriFormat" /> values that controls how special characters are escaped.</span></span></param>
        <summary><span data-ttu-id="f5636-113">Ruft die Komponenten aus einem URI ab.</span><span class="sxs-lookup"><span data-stu-id="f5636-113">Gets the components from a URI.</span></span></summary>
        <returns><span data-ttu-id="f5636-114">Eine Zeichenfolge, die die Komponenten enthält.</span><span class="sxs-lookup"><span data-stu-id="f5636-114">A string that contains the components.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5636-115">Verwenden Sie die- <xref:System.UriParser.GetComponents%2A> Methode, um den Wert verschiedener Teile des URI zu ermitteln, z <xref:System.UriComponents.Scheme> <xref:System.UriComponents.Host> . b., oder <xref:System.UriComponents.Port> .</span><span class="sxs-lookup"><span data-stu-id="f5636-115">Use the <xref:System.UriParser.GetComponents%2A> method to determine the value of various parts of the URI, such as the <xref:System.UriComponents.Scheme>, <xref:System.UriComponents.Host>, or <xref:System.UriComponents.Port>.</span></span>  
  
 <span data-ttu-id="f5636-116">Die Komponenten werden in der Reihenfolge zurückgegeben, in der Sie im URI angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="f5636-116">The components are returned in the order that they appear in the URI.</span></span> <span data-ttu-id="f5636-117">Wenn z. b <xref:System.UriComponents.Scheme> . angegeben ist, wird es zuerst angezeigt.</span><span class="sxs-lookup"><span data-stu-id="f5636-117">For example, if <xref:System.UriComponents.Scheme> is specified, it appears first.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f5636-118"><paramref name="uriFormat" /> ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="f5636-118"><paramref name="uriFormat" /> is invalid.</span></span>  
  
<span data-ttu-id="f5636-119">- oder -</span><span class="sxs-lookup"><span data-stu-id="f5636-119">-or-</span></span> 
 <span data-ttu-id="f5636-120"><paramref name="uriComponents" /> ist keine Kombination von gültigen <see cref="T:System.UriComponents" />-Werten.</span><span class="sxs-lookup"><span data-stu-id="f5636-120"><paramref name="uriComponents" /> is not a combination of valid <see cref="T:System.UriComponents" /> values.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f5636-121"><paramref name="uri" /> erfordert eine benutzergesteuerte Analyse.</span><span class="sxs-lookup"><span data-stu-id="f5636-121"><paramref name="uri" /> requires user-driven parsing</span></span> 
<span data-ttu-id="f5636-122">Oder</span><span class="sxs-lookup"><span data-stu-id="f5636-122">-or-</span></span> 
 <span data-ttu-id="f5636-123"><paramref name="uri" /> ist kein absoluter URI.</span><span class="sxs-lookup"><span data-stu-id="f5636-123"><paramref name="uri" /> is not an absolute URI.</span></span> <span data-ttu-id="f5636-124">Relative URIs können mit dieser Methode nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="f5636-124">Relative URIs cannot be used with this method.</span></span></exception>
        <altmember cref="T:System.UriComponents" />
        <altmember cref="F:System.UriComponents.Host" />
        <altmember cref="F:System.UriComponents.Port" />
        <altmember cref="F:System.UriComponents.Scheme" />
        <altmember cref="T:System.UriFormat" />
        <altmember cref="M:System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeAndValidate">
      <MemberSignature Language="C#" Value="protected virtual void InitializeAndValidate (Uri uri, out UriFormatException? parsingError);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeAndValidate(class System.Uri uri, [out] class System.UriFormatException&amp; parsingError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeAndValidate (uri As Uri, ByRef parsingError As UriFormatException)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeAndValidate(Uri ^ uri, [Runtime::InteropServices::Out] UriFormatException ^ % parsingError);" />
      <MemberSignature Language="F#" Value="abstract member InitializeAndValidate : Uri * UriFormatException -&gt; unit&#xA;override this.InitializeAndValidate : Uri * UriFormatException -&gt; unit" Usage="uriParser.InitializeAndValidate (uri, parsingError)" />
      <MemberSignature Language="C#" Value="protected virtual void InitializeAndValidate (Uri uri, out UriFormatException parsingError);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="parsingError" Type="System.UriFormatException" RefType="out" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="f5636-125">Der zu überprüfende <see cref="T:System.Uri" />.</span><span class="sxs-lookup"><span data-stu-id="f5636-125">The <see cref="T:System.Uri" /> to validate.</span></span></param>
        <param name="parsingError"><span data-ttu-id="f5636-126">Validierungsfehler, sofern vorhanden.</span><span class="sxs-lookup"><span data-stu-id="f5636-126">Validation errors, if any.</span></span></param>
        <summary><span data-ttu-id="f5636-127">Initialisieren Sie den Zustand des Parsers, und validieren Sie den URI.</span><span class="sxs-lookup"><span data-stu-id="f5636-127">Initialize the state of the parser and validate the URI.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5636-128">Die- <xref:System.UriParser.InitializeAndValidate%2A> Methode wird jedes Mal aufgerufen, wenn eine <xref:System.Uri> instanziiert wird.</span><span class="sxs-lookup"><span data-stu-id="f5636-128">The <xref:System.UriParser.InitializeAndValidate%2A> method is called every time a <xref:System.Uri> is instantiated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBaseOf">
      <MemberSignature Language="C#" Value="protected virtual bool IsBaseOf (Uri baseUri, Uri relativeUri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsBaseOf(class System.Uri baseUri, class System.Uri relativeUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriParser.IsBaseOf(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsBaseOf (baseUri As Uri, relativeUri As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsBaseOf(Uri ^ baseUri, Uri ^ relativeUri);" />
      <MemberSignature Language="F#" Value="abstract member IsBaseOf : Uri * Uri -&gt; bool&#xA;override this.IsBaseOf : Uri * Uri -&gt; bool" Usage="uriParser.IsBaseOf (baseUri, relativeUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" />
        <Parameter Name="relativeUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="baseUri"><span data-ttu-id="f5636-129">Der Basis-URI.</span><span class="sxs-lookup"><span data-stu-id="f5636-129">The base URI.</span></span></param>
        <param name="relativeUri"><span data-ttu-id="f5636-130">Der zu testende URI.</span><span class="sxs-lookup"><span data-stu-id="f5636-130">The URI to test.</span></span></param>
        <summary><span data-ttu-id="f5636-131">Bestimmt, ob <paramref name="baseUri" /> ein Basis-URI für <paramref name="relativeUri" /> ist.</span><span class="sxs-lookup"><span data-stu-id="f5636-131">Determines whether <paramref name="baseUri" /> is a base URI for <paramref name="relativeUri" />.</span></span></summary>
        <returns><span data-ttu-id="f5636-132"><see langword="true" />, wenn <paramref name="baseUri" /> ein Basis-URI für <paramref name="relativeUri" /> ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f5636-132"><see langword="true" /> if <paramref name="baseUri" /> is a base URI for <paramref name="relativeUri" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKnownScheme">
      <MemberSignature Language="C#" Value="public static bool IsKnownScheme (string schemeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsKnownScheme(string schemeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriParser.IsKnownScheme(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsKnownScheme (schemeName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsKnownScheme(System::String ^ schemeName);" />
      <MemberSignature Language="F#" Value="static member IsKnownScheme : string -&gt; bool" Usage="System.UriParser.IsKnownScheme schemeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="schemeName"><span data-ttu-id="f5636-133">Der zu überprüfende Schemaname.</span><span class="sxs-lookup"><span data-stu-id="f5636-133">The scheme name to check.</span></span></param>
        <summary><span data-ttu-id="f5636-134">Gibt an, ob der Parser für ein Schema registriert ist.</span><span class="sxs-lookup"><span data-stu-id="f5636-134">Indicates whether the parser for a scheme is registered.</span></span></summary>
        <returns><span data-ttu-id="f5636-135"><see langword="true" />, wenn <paramref name="schemeName" /> registriert ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f5636-135"><see langword="true" /> if <paramref name="schemeName" /> has been registered; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f5636-136">Der <paramref name="schemeName" />-Parameter ist null.</span><span class="sxs-lookup"><span data-stu-id="f5636-136">The <paramref name="schemeName" /> parameter is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f5636-137">Der <paramref name="schemeName" />-Parameter ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="f5636-137">The <paramref name="schemeName" /> parameter is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsWellFormedOriginalString">
      <MemberSignature Language="C#" Value="protected virtual bool IsWellFormedOriginalString (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsWellFormedOriginalString(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriParser.IsWellFormedOriginalString(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsWellFormedOriginalString (uri As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsWellFormedOriginalString(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="abstract member IsWellFormedOriginalString : Uri -&gt; bool&#xA;override this.IsWellFormedOriginalString : Uri -&gt; bool" Usage="uriParser.IsWellFormedOriginalString uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="f5636-138">Der zu überprüfende URI.</span><span class="sxs-lookup"><span data-stu-id="f5636-138">The URI to check.</span></span></param>
        <summary><span data-ttu-id="f5636-139">Gibt an, ob die Form eines URIs korrekt ist.</span><span class="sxs-lookup"><span data-stu-id="f5636-139">Indicates whether a URI is well-formed.</span></span></summary>
        <returns><span data-ttu-id="f5636-140"><see langword="true" />, wenn <paramref name="uri" /> wohlgeformt ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f5636-140"><see langword="true" /> if <paramref name="uri" /> is well-formed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5636-141">Die <xref:System.UriParser.IsWellFormedOriginalString%2A> Methode gibt false zurück, wenn Folgendes gilt:</span><span class="sxs-lookup"><span data-stu-id="f5636-141">The <xref:System.UriParser.IsWellFormedOriginalString%2A> method will return false if:</span></span>  
  
-   <span data-ttu-id="f5636-142">Die Zeichenfolge wird gemäß RFC 2396 nicht ordnungsgemäß geschützt.</span><span class="sxs-lookup"><span data-stu-id="f5636-142">The string is not correctly escaped per RFC 2396.</span></span>  
  
-   <span data-ttu-id="f5636-143">Die Zeichenfolge stellt einen absoluten URI dar, der auf einen impliziten Datei-URI verweist.</span><span class="sxs-lookup"><span data-stu-id="f5636-143">The string represents an absolute URI that references an implicit file URI.</span></span>  
  
-   <span data-ttu-id="f5636-144">Die Zeichenfolge stellt einen absoluten URI dar, dem ein Schrägstrich vor der Pfadkomponente fehlt.</span><span class="sxs-lookup"><span data-stu-id="f5636-144">The string represents an absolute URI that is missing a forward slash before the path component.</span></span>  
  
-   <span data-ttu-id="f5636-145">Die Zeichenfolge enthält umgekehrte Schrägstriche ohne Escapezeichen, auch wenn Sie als Schrägstriche behandelt werden.</span><span class="sxs-lookup"><span data-stu-id="f5636-145">The string contains unescaped backslashes, even if they will be treated as forward slashes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNewUri">
      <MemberSignature Language="C#" Value="protected virtual UriParser OnNewUri ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.UriParser OnNewUri() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriParser.OnNewUri" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnNewUri () As UriParser" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual UriParser ^ OnNewUri();" />
      <MemberSignature Language="F#" Value="abstract member OnNewUri : unit -&gt; UriParser&#xA;override this.OnNewUri : unit -&gt; UriParser" Usage="uriParser.OnNewUri " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UriParser</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f5636-146">Wird von einem <see cref="T:System.Uri" />-Konstruktor zum Abrufen einer <see cref="T:System.UriParser" />-Instanz aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="f5636-146">Invoked by a <see cref="T:System.Uri" /> constructor to get a <see cref="T:System.UriParser" /> instance.</span></span></summary>
        <returns><span data-ttu-id="f5636-147">Ein <see cref="T:System.UriParser" /> für den konstruierten <see cref="T:System.Uri" />.</span><span class="sxs-lookup"><span data-stu-id="f5636-147">A <see cref="T:System.UriParser" /> for the constructed <see cref="T:System.Uri" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5636-148">Die Standard Implementierung gibt dieselbe <xref:System.UriParser> Instanz zurück.</span><span class="sxs-lookup"><span data-stu-id="f5636-148">The default implementation returns the same <xref:System.UriParser> instance.</span></span> <span data-ttu-id="f5636-149">Sie müssen diese Methode möglicherweise außer Kraft setzen und für jeden Aufruf eine andere zurückgeben, <xref:System.UriParser> Wenn Sie in einer Multithread-Umgebung arbeiten.</span><span class="sxs-lookup"><span data-stu-id="f5636-149">You may need to override this method and return a different <xref:System.UriParser> for each invocation if you are operating in a multithreaded environment.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRegister">
      <MemberSignature Language="C#" Value="protected virtual void OnRegister (string schemeName, int defaultPort);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRegister(string schemeName, int32 defaultPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriParser.OnRegister(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRegister (schemeName As String, defaultPort As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRegister(System::String ^ schemeName, int defaultPort);" />
      <MemberSignature Language="F#" Value="abstract member OnRegister : string * int -&gt; unit&#xA;override this.OnRegister : string * int -&gt; unit" Usage="uriParser.OnRegister (schemeName, defaultPort)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemeName" Type="System.String" />
        <Parameter Name="defaultPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="schemeName"><span data-ttu-id="f5636-150">Das diesem <see cref="T:System.UriParser" /> zugeordnete Schema.</span><span class="sxs-lookup"><span data-stu-id="f5636-150">The scheme that is associated with this <see cref="T:System.UriParser" />.</span></span></param>
        <param name="defaultPort"><span data-ttu-id="f5636-151">Die Anschlussnummer des Schemas.</span><span class="sxs-lookup"><span data-stu-id="f5636-151">The port number of the scheme.</span></span></param>
        <summary><span data-ttu-id="f5636-152">Wird vom Framework aufgerufen, wenn eine <see cref="T:System.UriParser" />-Methode registriert ist.</span><span class="sxs-lookup"><span data-stu-id="f5636-152">Invoked by the Framework when a <see cref="T:System.UriParser" /> method is registered.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public static void Register (UriParser uriParser, string schemeName, int defaultPort);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Register(class System.UriParser uriParser, string schemeName, int32 defaultPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriParser.Register(System.UriParser,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Register (uriParser As UriParser, schemeName As String, defaultPort As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Register(UriParser ^ uriParser, System::String ^ schemeName, int defaultPort);" />
      <MemberSignature Language="F#" Value="static member Register : UriParser * string * int -&gt; unit" Usage="System.UriParser.Register (uriParser, schemeName, defaultPort)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriParser" Type="System.UriParser" />
        <Parameter Name="schemeName" Type="System.String" />
        <Parameter Name="defaultPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="uriParser"><span data-ttu-id="f5636-153">Der zu registrierende URI-Parser.</span><span class="sxs-lookup"><span data-stu-id="f5636-153">The URI parser to register.</span></span></param>
        <param name="schemeName"><span data-ttu-id="f5636-154">Der Name des Schemas, das diesem Parser zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="f5636-154">The name of the scheme that is associated with this parser.</span></span></param>
        <param name="defaultPort"><span data-ttu-id="f5636-155">Die Standardanschlussnummer für das angegebene Schema.</span><span class="sxs-lookup"><span data-stu-id="f5636-155">The default port number for the specified scheme.</span></span></param>
        <summary><span data-ttu-id="f5636-156">Ordnet einem <see cref="T:System.UriParser" /> ein Schema und eine Anschlussnummer zu.</span><span class="sxs-lookup"><span data-stu-id="f5636-156">Associates a scheme and port number with a <see cref="T:System.UriParser" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5636-157">Wenn der `defaultPort` -Parameter auf-1 festgelegt ist, <xref:System.UriParser.Register%2A> registriert die Methode keinen Standardwert für die Portnummer.</span><span class="sxs-lookup"><span data-stu-id="f5636-157">If the `defaultPort` parameter is set to -1, the <xref:System.UriParser.Register%2A> method registers no default value for the port number.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f5636-158">Der <paramref name="uriParser" />-Parameter ist NULL</span><span class="sxs-lookup"><span data-stu-id="f5636-158"><paramref name="uriParser" /> parameter is null</span></span> 
<span data-ttu-id="f5636-159">Oder</span><span class="sxs-lookup"><span data-stu-id="f5636-159">-or-</span></span> 
 <span data-ttu-id="f5636-160">Der <paramref name="schemeName" />-Parameter ist NULL.</span><span class="sxs-lookup"><span data-stu-id="f5636-160"><paramref name="schemeName" /> parameter is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f5636-161"><paramref name="schemeName" />-Parameter ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="f5636-161"><paramref name="schemeName" /> parameter is not valid</span></span> 
<span data-ttu-id="f5636-162">Oder</span><span class="sxs-lookup"><span data-stu-id="f5636-162">-or-</span></span> 
 <span data-ttu-id="f5636-163"><paramref name="defaultPort" />-Parameter ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="f5636-163"><paramref name="defaultPort" /> parameter is not valid.</span></span> <span data-ttu-id="f5636-164">Der <paramref name="defaultPort" />-Parameter ist kleiner als 1 oder größer als 65,534.</span><span class="sxs-lookup"><span data-stu-id="f5636-164">The <paramref name="defaultPort" /> parameter is less than -1 or greater than 65,534.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="protected virtual string Resolve (Uri? baseUri, Uri relativeUri, out UriFormatException parsingError);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string Resolve(class System.Uri baseUri, class System.Uri relativeUri, [out] class System.UriFormatException&amp; parsingError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Resolve (baseUri As Uri, relativeUri As Uri, ByRef parsingError As UriFormatException) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ Resolve(Uri ^ baseUri, Uri ^ relativeUri, [Runtime::InteropServices::Out] UriFormatException ^ % parsingError);" />
      <MemberSignature Language="F#" Value="abstract member Resolve : Uri * Uri * UriFormatException -&gt; string&#xA;override this.Resolve : Uri * Uri * UriFormatException -&gt; string" Usage="uriParser.Resolve (baseUri, relativeUri, parsingError)" />
      <MemberSignature Language="C#" Value="protected virtual string Resolve (Uri baseUri, Uri relativeUri, out UriFormatException parsingError);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" />
        <Parameter Name="relativeUri" Type="System.Uri" />
        <Parameter Name="parsingError" Type="System.UriFormatException" RefType="out" />
      </Parameters>
      <Docs>
        <param name="baseUri"><span data-ttu-id="f5636-165">Ein Basis-URI.</span><span class="sxs-lookup"><span data-stu-id="f5636-165">A base URI.</span></span></param>
        <param name="relativeUri"><span data-ttu-id="f5636-166">Ein relativer URI.</span><span class="sxs-lookup"><span data-stu-id="f5636-166">A relative URI.</span></span></param>
        <param name="parsingError"><span data-ttu-id="f5636-167">Fehler während des Auflösevorgangs, sofern vorhanden.</span><span class="sxs-lookup"><span data-stu-id="f5636-167">Errors during the resolve process, if any.</span></span></param>
        <summary><span data-ttu-id="f5636-168">Wird von <see cref="T:System.Uri" />-Konstruktoren und <see cref="Overload:System.Uri.TryCreate" /> aufgerufen, um einen relativen URI aufzulösen.</span><span class="sxs-lookup"><span data-stu-id="f5636-168">Called by <see cref="T:System.Uri" /> constructors and <see cref="Overload:System.Uri.TryCreate" /> to resolve a relative URI.</span></span></summary>
        <returns><span data-ttu-id="f5636-169">Die Zeichenfolge des aufgelösten relativen <see cref="T:System.Uri" />.</span><span class="sxs-lookup"><span data-stu-id="f5636-169">The string of the resolved relative <see cref="T:System.Uri" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5636-170"><xref:System.Uri> Konstruktoren und <xref:System.Uri.TryCreate%2A?displayProperty=nameWithType> verwenden <xref:System.UriParser.Resolve%2A> , um einen URI aus `baseUri` und zu erstellen `relativeUri` .</span><span class="sxs-lookup"><span data-stu-id="f5636-170"><xref:System.Uri> constructors and <xref:System.Uri.TryCreate%2A?displayProperty=nameWithType> use <xref:System.UriParser.Resolve%2A> to construct a URI from `baseUri` and `relativeUri`.</span></span>  
  
 <span data-ttu-id="f5636-171">Wenn ein Fehler auftritt, ist die zurückgegebene Zeichenfolge für den aufgelösten relativen Wert <xref:System.Uri> NULL.</span><span class="sxs-lookup"><span data-stu-id="f5636-171">If a parsing error occurs, the returned string for the resolved relative <xref:System.Uri> is null.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f5636-172">Der <paramref name="baseUri" />-Parameter ist kein absoluter <see cref="T:System.Uri" />.</span><span class="sxs-lookup"><span data-stu-id="f5636-172"><paramref name="baseUri" /> parameter is not an absolute <see cref="T:System.Uri" /></span></span>  
  
<span data-ttu-id="f5636-173">Oder</span><span class="sxs-lookup"><span data-stu-id="f5636-173">-or-</span></span> 
 <span data-ttu-id="f5636-174"><paramref name="baseUri" />-Parameter erfordert eine benutzergesteuerte Analyse.</span><span class="sxs-lookup"><span data-stu-id="f5636-174"><paramref name="baseUri" /> parameter requires user-driven parsing.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
