<Type Name="GenericUriParser" FullName="System.GenericUriParser">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ac22bfec3830f41545e6e4acf39705f7d0301150" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70646862" /></Metadata><TypeSignature Language="C#" Value="public class GenericUriParser : UriParser" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GenericUriParser extends System.UriParser" />
  <TypeSignature Language="DocId" Value="T:System.GenericUriParser" />
  <TypeSignature Language="VB.NET" Value="Public Class GenericUriParser&#xA;Inherits UriParser" />
  <TypeSignature Language="C++ CLI" Value="public ref class GenericUriParser : UriParser" />
  <TypeSignature Language="F#" Value="type GenericUriParser = class&#xA;    inherit UriParser" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.UriParser</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Ein vom Benutzer anpassbarer Parser für einen hierarchischen URI.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie einen Parser basierend auf einem bekannten Schema <xref:System.HttpStyleUriParser>erstellen möchten, verwenden Sie, <xref:System.FtpStyleUriParser>, <xref:System.GopherStyleUriParser>, <xref:System.LdapStyleUriParser>oder <xref:System.NewsStyleUriParser>.  
  
 Beim Erstellen eines anpassbaren Parsers wird das Verhalten des Parsers angegeben, indem eine bitweise Kombination der in der <xref:System.GenericUriParserOptions?displayProperty=nameWithType> -Enumeration verfügbaren Werte an den <xref:System.GenericUriParser> -Konstruktor übergeben wird.  
  
 Die vorhandene <xref:System.Uri?displayProperty=nameWithType> Klasse wurde erweitert und bietet Unterstützung für International Resource Identifier (IRI) und internationalisierte Domänen Namen (IDN). Derzeitige Benutzer werden keine Änderung gegenüber dem .NET Framework 2.0-Verhalten feststellen, außer IRI wird explizit aktiviert. Dadurch wird die Anwendungskompatibilität mit früheren Versionen von .NET Framework garantiert.  
  
 Alle von <xref:System.GenericUriParser> abgeleiteten Parser erhalten standardmäßig keine Unterstützung für IRI und IDN. Die <xref:System.GenericUriParserOptions.Default> Option umfasst nicht die Unterstützung für IRI und IDN. Der <xref:System.GenericUriParserOptions?displayProperty=nameWithType> -Enumeration werden zwei neue Werte hinzugefügt, um anzugeben, ob ein benutzerdefinierter Parser IRI und IDN unterstützt.  
  
 Weitere Informationen zur Unterstützung von IRI und IDN finden Sie im Abschnitt "Hinweise <xref:System.Uri?displayProperty=nameWithType> " für die-Klasse.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GenericUriParser (GenericUriParserOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.GenericUriParserOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GenericUriParser.#ctor(System.GenericUriParserOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (options As GenericUriParserOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GenericUriParser(GenericUriParserOptions options);" />
      <MemberSignature Language="F#" Value="new GenericUriParser : GenericUriParserOptions -&gt; GenericUriParser" Usage="new System.GenericUriParser options" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="options" Type="System.GenericUriParserOptions" />
      </Parameters>
      <Docs>
        <param name="options">Geben Sie die Optionen für diesen <see cref="T:System.GenericUriParser" /> an.</param>
        <summary>Erstellen Sie einen vom Benutzer anpassbaren Parser für einen hierarchischen URI.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor als Argument für.<xref:System.UriParser.Register%28System.UriParser%2CSystem.String%2CSystem.Int32%29?displayProperty=nameWithType>  
  
 Wenn Sie einen Parser basierend auf einem bekannten Schema <xref:System.HttpStyleUriParser>erstellen möchten, verwenden Sie, <xref:System.FtpStyleUriParser>, <xref:System.GopherStyleUriParser>, <xref:System.LdapStyleUriParser>oder <xref:System.NewsStyleUriParser>.  
  
 Beim Erstellen eines anpassbaren Parsers wird das Verhalten des Parsers angegeben, indem eine bitweise Kombination der in der <xref:System.GenericUriParserOptions?displayProperty=nameWithType> -Enumeration verfügbaren Werte an den <xref:System.GenericUriParser> -Konstruktor übergeben wird.  
  
 Die vorhandene <xref:System.Uri?displayProperty=nameWithType> Klasse wurde erweitert und bietet Unterstützung für International Resource Identifier (IRI) und internationalisierte Domänen Namen (IDN). Derzeitige Benutzer werden keine Änderung gegenüber dem .NET Framework 2.0-Verhalten feststellen, außer IRI wird explizit aktiviert. Dadurch wird die Anwendungskompatibilität mit früheren Versionen von .NET Framework garantiert.  
  
 Alle von <xref:System.GenericUriParser> abgeleiteten Parser erhalten standardmäßig keine Unterstützung für IRI und IDN. Die <xref:System.GenericUriParserOptions.Default> Option umfasst nicht die Unterstützung für IRI und IDN. Der <xref:System.GenericUriParserOptions?displayProperty=nameWithType> -Enumeration werden zwei neue Werte hinzugefügt, um anzugeben, ob ein benutzerdefinierter Parser IRI und IDN unterstützt.  
  
 Der <xref:System.GenericUriParserOptions.IriParsing>-Typ gibt an, dass der Parser die in RFC 3987 angegebenen Analyseregeln für International Resource Identifiers (IRI) unterstützt. Durch die Konfigurationswerte wird festgelegt, ob IRI verwendet wird.  
  
 Der <xref:System.GenericUriParserOptions.Idn>-Typ gibt an, dass der Parser die IDN-Analyse von Hostnamen unterstützt. Durch die Konfigurationswerte wird festgelegt, ob IDN verwendet wird.  
  
 Die Konfigurationseinstellung für <xref:System.Configuration.IdnElement?displayProperty=nameWithType> wird indirekt von der <xref:System.Configuration.IriParsingElement?displayProperty=nameWithType> Konfigurationseinstellung gesteuert, die die IRI-Verarbeitung in <xref:System.Uri?displayProperty=nameWithType> der-Klasse steuert. Die IRI-Verarbeitung muss aktiviert werden, damit die IDN-Verarbeitung überhaupt möglich ist. Ist die IRI-Verarbeitung deaktiviert, wird die IDN-Verarbeitung auf die Standardeinstellung festgelegt. Darin wird aus Kompatibilitätsgründen das .NET Framework 2.0-Verhalten verwendet, und IDN-Namen werden nicht verwendet.  
  
 Das IDN-Attribut (Internationalized Domain Name) steuert nur die IDN-Verarbeitung. Alle anderen IRI-Verarbeitungsvorgänge (z. b. Zeichen Normalisierung) werden standardmäßig ausgeführt.  
  
 Weitere Informationen zur Unterstützung von IRI und IDN finden Sie im Abschnitt "Hinweise <xref:System.Uri?displayProperty=nameWithType> " für die-Klasse.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.IdnElement" />
        <altmember cref="T:System.Configuration.IriParsingElement" />
        <altmember cref="T:System.GenericUriParserOptions" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
  </Members>
</Type>
