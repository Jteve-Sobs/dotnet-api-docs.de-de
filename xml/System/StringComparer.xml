<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="StringComparer.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-81070f4" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1e344e59-9d8e-481b-978a-09f2e01be86c4526a2be99a0d71cadf77bf33e7a741674b5dea4.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4526a2be99a0d71cadf77bf33e7a741674b5dea4</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9e3295b6cc303a611a73a84c4b27f9da792ad0d</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/26/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.StringComparer">
          <source>Represents a string comparison operation that uses specific case and culture-based or ordinal comparison rules.</source>
          <target state="translated">Stellt einen Zeichenfolgenvergleichsvorgang dar, der bestimmte Regeln zur Groß- und Kleinschreibung und kulturbasierte bzw. Ordinalvergleichsregeln verwendet.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.StringComparer">
          <source>An object derived from the <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> class embodies string-based comparison, equality, and hash code operations that take into account both case and culture-specific comparison rules.</source>
          <target state="translated">Ein abgeleitetes Objekt aus der <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> Klasse verkörpert zeichenfolgenbasierte Vergleich, Gleichheit und Hash-Codeoperationen, die sowohl Groß-/Kleinschreibung und kulturspezifische Vergleichsregeln berücksichtigen.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.StringComparer">
          <source>You can use the <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> class to create a type-specific comparison to sort the elements in a generic collection.</source>
          <target state="translated">Sie können die <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> Klasse, um eine typspezifische-Vergleich aus, um die Elemente in einer generischen Auflistung sortieren erstellen.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.StringComparer">
          <source>Classes such as <ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph>, and <ph id="ph4">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> use the <ph id="ph5">&lt;xref:System.StringComparer&gt;</ph> class for sorting purposes.</source>
          <target state="translated">Klassen wie <ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph>, und <ph id="ph4">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> verwenden die <ph id="ph5">&lt;xref:System.StringComparer&gt;</ph> Klasse bei der Sortierung.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.StringComparer">
          <source>A comparison operation that is represented by the <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> class is defined to be either case-sensitive or case-insensitive, and use either word (culture-sensitive) or ordinal (culture-insensitive) comparison rules.</source>
          <target state="translated">Eine Vergleichsoperation aus, die durch dargestellt ist die <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> Klasse definiert ist, um entweder Groß- und Kleinschreibung beachtet werden, und verwenden Sie entweder Wort (kulturabhängig) oder Ordinalvergleichsregeln (kulturunabhängige).</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.StringComparer">
          <source>For more information about word and ordinal comparison rules, see <ph id="ph1">&lt;xref:System.Globalization.CompareOptions?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Weitere Informationen zu Word und Ordinalvergleichsregeln, finden Sie unter <ph id="ph1">&lt;xref:System.Globalization.CompareOptions?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.StringComparer">
          <source>Implemented Properties</source>
          <target state="translated">Implementierte Eigenschaften</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.StringComparer">
          <source>You might be confused about how to use the <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> class properties because of a seeming contradiction.</source>
          <target state="translated">Möglicherweise können Sie Informationen zur Verwendung zu verwechseln der <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> Klasseneigenschaften-Klasseneigenschaften.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.StringComparer">
          <source>The <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> class is declared <ph id="ph2">`abstract`</ph> (<ph id="ph3">`MustInherit`</ph> in Visual Basic), which means its members can be invoked only on an object of a class derived from the <ph id="ph4">&lt;xref:System.StringComparer&gt;</ph> class.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> Klasse deklariert wird <ph id="ph2">`abstract`</ph> (<ph id="ph3">`MustInherit`</ph> in Visual Basic), was bedeutet, dass ihre Member kann aufgerufen werden, nur für ein Objekt einer Klasse abgeleitet wurde. die <ph id="ph4">&lt;xref:System.StringComparer&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.StringComparer">
          <source>The contradiction is that each property of the <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> class is declared <ph id="ph2">`static`</ph> (<ph id="ph3">`Shared`</ph> in Visual Basic), which means the property can be invoked without first creating a derived class.</source>
          <target state="translated">Der Unterschied ist, die für jede Eigenschaft von der <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> Klasse deklariert wird <ph id="ph2">`static`</ph> (<ph id="ph3">`Shared`</ph> in Visual Basic), was bedeutet, dass die Eigenschaft kann ohne Erstellen von einer abgeleiteten Klasse aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.StringComparer">
          <source>You can call a <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> property directly because each property actually returns an instance of an anonymous class that is derived from the <ph id="ph2">&lt;xref:System.StringComparer&gt;</ph> class.</source>
          <target state="translated">Sie erreichen eine <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> -Eigenschaft direkt, da jede Eigenschaft tatsächlich eine Instanz einer anonymen Klasse zurückgibt, die abgeleitet ist die <ph id="ph2">&lt;xref:System.StringComparer&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.StringComparer">
          <source>Consequently, the type of each property value is <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph>, which is the base class of the anonymous class, not the type of the anonymous class itself.</source>
          <target state="translated">Daher der Typ für jeden Eigenschaftswert ist <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph>, die nicht die Basisklasse der anonyme Klasse ist der Typ der anonymen Klasse selbst.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.StringComparer">
          <source>Each <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> class property returns a <ph id="ph2">&lt;xref:System.StringComparer&gt;</ph> object that supports predefined case and comparison rules.</source>
          <target state="translated">Jede <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> -Klasse Eigenschaft zurückgegeben wird ein <ph id="ph2">&lt;xref:System.StringComparer&gt;</ph> -Objekt, das vordefinierte Regeln für Groß-/Kleinschreibung und Vergleich unterstützt.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.StringComparer">
          <source>The following example demonstrates the properties and the <ph id="ph1">&lt;xref:System.StringComparer.Create%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.StringComparer&gt;</ph> class.</source>
          <target state="translated">Das folgende Beispiel zeigt die Eigenschaften und die <ph id="ph1">&lt;xref:System.StringComparer.Create%2A&gt;</ph> Methode der <ph id="ph2">&lt;xref:System.StringComparer&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.StringComparer">
          <source>The example illustrates how different <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> objects sort three versions of the Latin letter I.</source>
          <target state="translated">Im Beispiel wird veranschaulicht, wie verschiedene <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> Objekte sortieren drei Versionen des lateinischen Buchstaben I.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.StringComparer.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="T:System.StringComparer">
          <source>Compares two objects or strings and returns an indication of their relative sort order.</source>
          <target state="translated">Vergleicht zwei Objekte oder Zeichenfolgen und gibt eine Angabe der relativen Sortierreihenfolge zurück.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.StringComparer.Compare(System.Object,System.Object)">
          <source>An object to compare to <bpt id="p1">&lt;c&gt;</bpt>y<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Ein mit <bpt id="p1">&lt;c&gt;</bpt>y<ept id="p1">&lt;/c&gt;</ept> zu vergleichendes Objekt.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.StringComparer.Compare(System.Object,System.Object)">
          <source>An object to compare to <bpt id="p1">&lt;c&gt;</bpt>x<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Ein mit <bpt id="p1">&lt;c&gt;</bpt>x<ept id="p1">&lt;/c&gt;</ept> zu vergleichendes Objekt.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.StringComparer.Compare(System.Object,System.Object)">
          <source>When overridden in a derived class, compares two objects and returns an indication of their relative sort order.</source>
          <target state="translated">Beim Überschreiben in einer abgeleiteten Klasse wird ein Vergleich von zwei Objekten durchgeführt und eine Angabe der relativen Sortierreihenfolge zurückgegeben.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.StringComparer.Compare(System.Object,System.Object)">
          <source>A signed integer that indicates the relative values of <ph id="ph1">&lt;paramref name="x" /&gt;</ph> and <ph id="ph2">&lt;paramref name="y" /&gt;</ph>, as shown in the following table.</source>
          <target state="translated">Eine ganze Zahl mit Vorzeichen, die die relativen Werte von <ph id="ph1">&lt;paramref name="x" /&gt;</ph> und <ph id="ph2">&lt;paramref name="y" /&gt;</ph> angibt, wie in der folgenden Tabelle veranschaulicht.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.StringComparer.Compare(System.Object,System.Object)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Wert</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.StringComparer.Compare(System.Object,System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Meaning</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Bedeutung</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.StringComparer.Compare(System.Object,System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Kleiner als 0 (null)</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.StringComparer.Compare(System.Object,System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="x" /&gt;</ph> precedes  <ph id="ph4">&lt;paramref name="y" /&gt;</ph> in the sort order.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="x" /&gt;</ph> steht in der Sortierreihenfolge vor <ph id="ph4">&lt;paramref name="y" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.StringComparer.Compare(System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.StringComparer.Compare(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="x" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> and <ph id="ph3">&lt;paramref name="y" /&gt;</ph> is not <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="x" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>, und <ph id="ph3">&lt;paramref name="y" /&gt;</ph> ist nicht <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.StringComparer.Compare(System.Object,System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0 (null)</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.StringComparer.Compare(System.Object,System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="x" /&gt;</ph> is equal to <ph id="ph4">&lt;paramref name="y" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="x" /&gt;</ph> ist gleich <ph id="ph4">&lt;paramref name="y" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.StringComparer.Compare(System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.StringComparer.Compare(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="x" /&gt;</ph> and <ph id="ph2">&lt;paramref name="y" /&gt;</ph> are both <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="x" /&gt;</ph> und <ph id="ph2">&lt;paramref name="y" /&gt;</ph> sind jeweils <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.StringComparer.Compare(System.Object,System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Größer als 0 (null)</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.StringComparer.Compare(System.Object,System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="x" /&gt;</ph> follows <ph id="ph4">&lt;paramref name="y" /&gt;</ph> in the sort order.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="x" /&gt;</ph> steht in der Sortierreihenfolge hinter <ph id="ph4">&lt;paramref name="y" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.StringComparer.Compare(System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.StringComparer.Compare(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="y" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> and <ph id="ph3">&lt;paramref name="x" /&gt;</ph> is not <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="y" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>, und <ph id="ph3">&lt;paramref name="x" /&gt;</ph> ist nicht <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.StringComparer.Compare(System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.StringComparer.Compare%28System.String%2CSystem.String%29?displayProperty=nameWithType&gt;</ph> method is slightly more efficient than the <ph id="ph2">&lt;xref:System.StringComparer.Compare%28System.Object%2CSystem.Object%29?displayProperty=nameWithType&gt;</ph> method because no conversion of the <ph id="ph3">`x`</ph> and <ph id="ph4">`y`</ph> arguments is needed to perform the comparison.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.StringComparer.Compare%28System.String%2CSystem.String%29?displayProperty=nameWithType&gt;</ph> Methode ist etwas effizienter als die <ph id="ph2">&lt;xref:System.StringComparer.Compare%28System.Object%2CSystem.Object%29?displayProperty=nameWithType&gt;</ph> Methode da keine Konvertierung von der <ph id="ph3">`x`</ph> und <ph id="ph4">`y`</ph> Argumente zum Ausführen des Vergleichs benötigt wird.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.StringComparer.Compare(System.Object,System.Object)">
          <source>Neither <ph id="ph1">&lt;paramref name="x" /&gt;</ph> nor <ph id="ph2">&lt;paramref name="y" /&gt;</ph> is a <ph id="ph3">&lt;see cref="T:System.String" /&gt;</ph> object, and neither <ph id="ph4">&lt;paramref name="x" /&gt;</ph> nor <ph id="ph5">&lt;paramref name="y" /&gt;</ph> implements the <ph id="ph6">&lt;see cref="T:System.IComparable" /&gt;</ph> interface.</source>
          <target state="translated">Weder <ph id="ph1">&lt;paramref name="x" /&gt;</ph> noch <ph id="ph2">&lt;paramref name="y" /&gt;</ph> ist ein <ph id="ph3">&lt;see cref="T:System.String" /&gt;</ph>-Objekt, und weder <ph id="ph4">&lt;paramref name="x" /&gt;</ph> noch <ph id="ph5">&lt;paramref name="y" /&gt;</ph> implementiert die <ph id="ph6">&lt;see cref="T:System.IComparable" /&gt;</ph>-Schnittstelle.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.StringComparer.Compare(System.String,System.String)">
          <source>A string to compare to <bpt id="p1">&lt;c&gt;</bpt>y<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Eine Zeichenfolge, die mit <bpt id="p1">&lt;c&gt;</bpt>y<ept id="p1">&lt;/c&gt;</ept> verglichen werden soll.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.StringComparer.Compare(System.String,System.String)">
          <source>A string to compare to <bpt id="p1">&lt;c&gt;</bpt>x<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Eine Zeichenfolge, die mit <bpt id="p1">&lt;c&gt;</bpt>x<ept id="p1">&lt;/c&gt;</ept> verglichen werden soll.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.StringComparer.Compare(System.String,System.String)">
          <source>When overridden in a derived class, compares two strings and returns an indication of their relative sort order.</source>
          <target state="translated">Beim Überschreiben in einer abgeleiteten Klasse wird ein Vergleich von zwei Zeichenfolgen durchgeführt und eine Angabe der relativen Sortierreihenfolge zurückgegeben.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.StringComparer.Compare(System.String,System.String)">
          <source>A signed integer that indicates the relative values of <ph id="ph1">&lt;paramref name="x" /&gt;</ph> and <ph id="ph2">&lt;paramref name="y" /&gt;</ph>, as shown in the following table.</source>
          <target state="translated">Eine ganze Zahl mit Vorzeichen, die die relativen Werte von <ph id="ph1">&lt;paramref name="x" /&gt;</ph> und <ph id="ph2">&lt;paramref name="y" /&gt;</ph> angibt, wie in der folgenden Tabelle veranschaulicht.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.StringComparer.Compare(System.String,System.String)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Wert</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.StringComparer.Compare(System.String,System.String)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Meaning</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Bedeutung</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.StringComparer.Compare(System.String,System.String)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Kleiner als 0 (null)</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.StringComparer.Compare(System.String,System.String)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="x" /&gt;</ph> precedes <ph id="ph4">&lt;paramref name="y" /&gt;</ph> in the sort order.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="x" /&gt;</ph> steht in der Sortierreihenfolge vor <ph id="ph4">&lt;paramref name="y" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.StringComparer.Compare(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.StringComparer.Compare(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="x" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> and <ph id="ph3">&lt;paramref name="y" /&gt;</ph> is not <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="x" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>, und <ph id="ph3">&lt;paramref name="y" /&gt;</ph> ist nicht <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.StringComparer.Compare(System.String,System.String)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0 (null)</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.StringComparer.Compare(System.String,System.String)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="x" /&gt;</ph> is equal to <ph id="ph4">&lt;paramref name="y" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="x" /&gt;</ph> ist gleich <ph id="ph4">&lt;paramref name="y" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.StringComparer.Compare(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.StringComparer.Compare(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="x" /&gt;</ph> and <ph id="ph2">&lt;paramref name="y" /&gt;</ph> are both <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="x" /&gt;</ph> und <ph id="ph2">&lt;paramref name="y" /&gt;</ph> sind jeweils <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.StringComparer.Compare(System.String,System.String)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Größer als 0 (null)</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.StringComparer.Compare(System.String,System.String)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="x" /&gt;</ph> follows <ph id="ph4">&lt;paramref name="y" /&gt;</ph> in the sort order.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="x" /&gt;</ph> steht in der Sortierreihenfolge hinter <ph id="ph4">&lt;paramref name="y" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.StringComparer.Compare(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.StringComparer.Compare(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="y" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> and <ph id="ph3">&lt;paramref name="x" /&gt;</ph> is not <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="y" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>, und <ph id="ph3">&lt;paramref name="x" /&gt;</ph> ist nicht <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.StringComparer.Compare(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.StringComparer.Compare%28System.String%2CSystem.String%29?displayProperty=nameWithType&gt;</ph> method is slightly more efficient than the <ph id="ph2">&lt;xref:System.StringComparer.Compare%28System.Object%2CSystem.Object%29?displayProperty=nameWithType&gt;</ph> method because no conversion of the <ph id="ph3">`x`</ph> and <ph id="ph4">`y`</ph> arguments is needed to perform the comparison.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.StringComparer.Compare%28System.String%2CSystem.String%29?displayProperty=nameWithType&gt;</ph> Methode ist etwas effizienter als die <ph id="ph2">&lt;xref:System.StringComparer.Compare%28System.Object%2CSystem.Object%29?displayProperty=nameWithType&gt;</ph> Methode da keine Konvertierung von der <ph id="ph3">`x`</ph> und <ph id="ph4">`y`</ph> Argumente zum Ausführen des Vergleichs benötigt wird.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.StringComparer.Create(System.Globalization.CultureInfo,System.Boolean)">
          <source>A culture whose linguistic rules are used to perform a string comparison.</source>
          <target state="translated">Eine Kultur, deren linguistische Regeln verwendet werden, um einen Zeichenfolgenvergleich auszuführen.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.StringComparer.Create(System.Globalization.CultureInfo,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to specify that comparison operations be case-insensitive; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to specify that comparison operations be case-sensitive.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, um anzugeben, dass die Groß- und Kleinschreibung bei den Vergleichsvorgängen nicht beachtet wird; <ph id="ph2">&lt;see langword="false" /&gt;</ph>, um anzugeben, dass die Groß- und Kleinschreibung bei den Vergleichsvorgängen beachtet wird.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.StringComparer.Create(System.Globalization.CultureInfo,System.Boolean)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> object that compares strings according to the rules of a specified culture.</source>
          <target state="translated">Erstellt ein <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph>-Objekt, das Zeichenfolgen nach den Regeln einer angegebenen Kultur vergleicht.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.StringComparer.Create(System.Globalization.CultureInfo,System.Boolean)">
          <source>A new <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> object that performs string comparisons according to the comparison rules used by the <ph id="ph2">&lt;paramref name="culture" /&gt;</ph> parameter and the case rule specified by the <ph id="ph3">&lt;paramref name="ignoreCase" /&gt;</ph> parameter.</source>
          <target state="translated">Ein neues <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph>-Objekt, das Zeichenfolgenvergleiche gemäß den Vergleichsregeln durchführt, die vom <ph id="ph2">&lt;paramref name="culture" /&gt;</ph>-Parameter verwendet werden, und gemäß den vom <ph id="ph3">&lt;paramref name="ignoreCase" /&gt;</ph>-Parameter angegebenen Regeln zur Groß- und Kleinschreibung.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.StringComparer.Create(System.Globalization.CultureInfo,System.Boolean)">
          <source>The following code example demonstrates the properties and the <ph id="ph1">&lt;xref:System.StringComparer.Create%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.StringComparer&gt;</ph> class.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, die Eigenschaften und die <ph id="ph1">&lt;xref:System.StringComparer.Create%2A&gt;</ph> Methode der <ph id="ph2">&lt;xref:System.StringComparer&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.StringComparer.Create(System.Globalization.CultureInfo,System.Boolean)">
          <source>The example illustrates how different <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> objects sort three versions of the Latin letter I.</source>
          <target state="translated">Im Beispiel wird veranschaulicht, wie verschiedene <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> Objekte sortieren drei Versionen des lateinischen Buchstaben I.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.StringComparer.Create(System.Globalization.CultureInfo,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="culture" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="culture" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="P:System.StringComparer.CurrentCulture">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> object that performs a case-sensitive string comparison using the word comparison rules of the current culture.</source>
          <target state="translated">Ruft ein <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph>-Objekt ab, das mit den Wortvergleichsregeln der aktuellen Kultur einen Zeichenfolgenvergleich mit Berücksichtigung von Groß- und Kleinschreibung ausführt.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.StringComparer.CurrentCulture">
          <source>A new <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> object.</source>
          <target state="translated">Ein neues <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.StringComparer.CurrentCulture">
          <source>The <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> returned by the <ph id="ph2">&lt;xref:System.StringComparer.CurrentCulture%2A&gt;</ph> property can be used when strings are linguistically relevant.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> zurückgegebenes der <ph id="ph2">&lt;xref:System.StringComparer.CurrentCulture%2A&gt;</ph> Eigenschaft kann verwendet werden, wenn Zeichenfolgen linguistisch relevant sind.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.StringComparer.CurrentCulture">
          <source>For example, if strings are displayed to the user, or if strings are the result of user interaction, culture-sensitive string comparison should be used to order the string data.</source>
          <target state="translated">Z. B. wenn Zeichenfolgen, die dem Benutzer angezeigt werden, oder Zeichenfolgen der Benutzerinteraktion ergeben, kulturabhängige Zeichenfolgenvergleich vorgesehen, die Zeichenfolgendaten zu sortieren.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.StringComparer.CurrentCulture">
          <source>The current culture is the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object associated with the current thread.</source>
          <target state="translated">Die aktuelle Kultur ist die <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> Objekt dem aktuellen Thread zugeordnet.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.StringComparer.CurrentCulture">
          <source>The <ph id="ph1">&lt;xref:System.StringComparer.CurrentCulture%2A&gt;</ph> property actually returns an instance of an anonymous class derived from the <ph id="ph2">&lt;xref:System.StringComparer&gt;</ph> class.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.StringComparer.CurrentCulture%2A&gt;</ph> Eigenschaft gibt tatsächlich eine Instanz einer anonymen Klasse abgeleitet wurde. die <ph id="ph2">&lt;xref:System.StringComparer&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.StringComparer.CurrentCulture">
          <source>Each call to the <ph id="ph1">&lt;xref:System.StringComparer.CurrentCulture%2A&gt;</ph> property <ph id="ph2">`get`</ph> accessor returns a new <ph id="ph3">&lt;xref:System.StringComparer&gt;</ph> object, as the following code shows.</source>
          <target state="translated">Bei jedem Aufruf der <ph id="ph1">&lt;xref:System.StringComparer.CurrentCulture%2A&gt;</ph> Eigenschaft <ph id="ph2">`get`</ph> Accessor gibt eine neue <ph id="ph3">&lt;xref:System.StringComparer&gt;</ph> Objekt, wie im folgenden Code gezeigt.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.StringComparer.CurrentCulture">
          <source>To improve performance, you can store the <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> object in a local variable rather than retrieve the value of the <ph id="ph2">&lt;xref:System.StringComparer.CurrentCulture%2A&gt;</ph> property multiple times.</source>
          <target state="translated">Um die Leistung zu verbessern, können Sie speichern die <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> -Objekts in eine lokale Variable, anstatt Abrufen des Werts eines der <ph id="ph2">&lt;xref:System.StringComparer.CurrentCulture%2A&gt;</ph> Eigenschaft mehrfach.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.StringComparer.CurrentCulture">
          <source>The following code example demonstrates the properties and the <ph id="ph1">&lt;xref:System.StringComparer.Create%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.StringComparer&gt;</ph> class.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, die Eigenschaften und die <ph id="ph1">&lt;xref:System.StringComparer.Create%2A&gt;</ph> Methode der <ph id="ph2">&lt;xref:System.StringComparer&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.StringComparer.CurrentCulture">
          <source>The example illustrates how different <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> objects sort three versions of the Latin letter I.</source>
          <target state="translated">Im Beispiel wird veranschaulicht, wie verschiedene <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> Objekte sortieren drei Versionen des lateinischen Buchstaben I.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.StringComparer.CurrentCultureIgnoreCase">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> object that performs case-insensitive string comparisons using the word comparison rules of the current culture.</source>
          <target state="translated">Ruft ein <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph>-Objekt ab, das Zeichenfolgenvergleiche ohne Unterscheidung der Groß- und Kleinschreibung mit den Wortvergleichsregeln der aktuellen Kultur ausführt.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.StringComparer.CurrentCultureIgnoreCase">
          <source>A new <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> object.</source>
          <target state="translated">Ein neues <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.StringComparer.CurrentCultureIgnoreCase">
          <source>The current culture is the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object associated with the current thread.</source>
          <target state="translated">Die aktuelle Kultur ist die <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> Objekt dem aktuellen Thread zugeordnet.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.StringComparer.CurrentCultureIgnoreCase">
          <source>The <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> returned by the <ph id="ph2">&lt;xref:System.StringComparer.CurrentCultureIgnoreCase%2A&gt;</ph> property can be used when strings are linguistically relevant but their case is not.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> zurückgegebenes der <ph id="ph2">&lt;xref:System.StringComparer.CurrentCultureIgnoreCase%2A&gt;</ph> Eigenschaft kann verwendet werden, wenn Zeichenfolgen linguistisch relevant sind, aber die Groß-/Kleinschreibung nicht.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.StringComparer.CurrentCultureIgnoreCase">
          <source>For example, if strings are displayed to the user but case is unimportant, culture-sensitive, case-insensitive string comparison should be used to order the string data.</source>
          <target state="translated">Z. B. wenn Zeichenfolgen, die dem Benutzer angezeigt werden, aber wird nicht von Bedeutung, kulturabhängig, Zeichenfolgenvergleich vorgesehen, die Zeichenfolgendaten zu sortieren.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.StringComparer.CurrentCultureIgnoreCase">
          <source>The <ph id="ph1">&lt;xref:System.StringComparer.CurrentCultureIgnoreCase%2A&gt;</ph> property actually returns an instance of an anonymous class derived from the <ph id="ph2">&lt;xref:System.StringComparer&gt;</ph> class.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.StringComparer.CurrentCultureIgnoreCase%2A&gt;</ph> Eigenschaft gibt tatsächlich eine Instanz einer anonymen Klasse abgeleitet wurde. die <ph id="ph2">&lt;xref:System.StringComparer&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.StringComparer.CurrentCultureIgnoreCase">
          <source>Each call to the <ph id="ph1">&lt;xref:System.StringComparer.CurrentCultureIgnoreCase%2A&gt;</ph> property <ph id="ph2">`get`</ph> accessor returns a new <ph id="ph3">&lt;xref:System.StringComparer&gt;</ph> object, as the following code shows.</source>
          <target state="translated">Bei jedem Aufruf der <ph id="ph1">&lt;xref:System.StringComparer.CurrentCultureIgnoreCase%2A&gt;</ph> Eigenschaft <ph id="ph2">`get`</ph> Accessor gibt eine neue <ph id="ph3">&lt;xref:System.StringComparer&gt;</ph> Objekt, wie im folgenden Code gezeigt.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.StringComparer.CurrentCultureIgnoreCase">
          <source>To improve performance, you can store the <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> object in a local variable rather than retrieve the value of the <ph id="ph2">&lt;xref:System.StringComparer.CurrentCultureIgnoreCase%2A&gt;</ph> property multiple times.</source>
          <target state="translated">Um die Leistung zu verbessern, können Sie speichern die <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> -Objekts in eine lokale Variable, anstatt Abrufen des Werts eines der <ph id="ph2">&lt;xref:System.StringComparer.CurrentCultureIgnoreCase%2A&gt;</ph> Eigenschaft mehrfach.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="T:System.StringComparer">
          <source>When overridden in a derived class, indicates whether two objects or strings are equal.</source>
          <target state="translated">Beim Überschreiben in einer abgeleiteten Klasse wird angegeben, ob zwei Objekte oder Zeichenfolgen gleich sind.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.StringComparer.Equals(System.Object,System.Object)">
          <source>An object to compare to <bpt id="p1">&lt;c&gt;</bpt>y<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Ein mit <bpt id="p1">&lt;c&gt;</bpt>y<ept id="p1">&lt;/c&gt;</ept> zu vergleichendes Objekt.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.StringComparer.Equals(System.Object,System.Object)">
          <source>An object to compare to <bpt id="p1">&lt;c&gt;</bpt>x<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Ein mit <bpt id="p1">&lt;c&gt;</bpt>x<ept id="p1">&lt;/c&gt;</ept> zu vergleichendes Objekt.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.StringComparer.Equals(System.Object,System.Object)">
          <source>When overridden in a derived class, indicates whether two objects are equal.</source>
          <target state="translated">Beim Überschreiben in einer abgeleiteten Klasse wird angegeben, ob zwei Objekte gleich sind.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.StringComparer.Equals(System.Object,System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="x" /&gt;</ph> and <ph id="ph3">&lt;paramref name="y" /&gt;</ph> refer to the same object, or <ph id="ph4">&lt;paramref name="x" /&gt;</ph> and <ph id="ph5">&lt;paramref name="y" /&gt;</ph> are both the same type of object and those objects are equal, or both <ph id="ph6">&lt;paramref name="x" /&gt;</ph> and <ph id="ph7">&lt;paramref name="y" /&gt;</ph> are <ph id="ph8">&lt;see langword="null" /&gt;</ph>; otherwise, <ph id="ph9">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn <ph id="ph2">&lt;paramref name="x" /&gt;</ph> und <ph id="ph3">&lt;paramref name="y" /&gt;</ph> auf dasselbe Objekt verweisen oder wenn <ph id="ph4">&lt;paramref name="x" /&gt;</ph> und <ph id="ph5">&lt;paramref name="y" /&gt;</ph> den gleichen Objekttyp aufweisen und diese Objekte gleich sind, oder wenn <ph id="ph6">&lt;paramref name="x" /&gt;</ph> und <ph id="ph7">&lt;paramref name="y" /&gt;</ph> gleich <ph id="ph8">&lt;see langword="null" /&gt;</ph> sind; andernfalls <ph id="ph9">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.StringComparer.Equals(System.Object,System.Object)">
          <source>Because the runtime does not have to unbox <ph id="ph1">`x`</ph> or <ph id="ph2">`y`</ph> if they are value types or attempt to downcast <ph id="ph3">`x`</ph> or <ph id="ph4">`y`</ph> to strings if they are reference types, the <ph id="ph5">&lt;xref:System.StringComparer.Equals%28System.String%2CSystem.String%29&gt;</ph> method may be slightly more efficient than the <ph id="ph6">&lt;xref:System.StringComparer.Equals%28System.Object%2CSystem.Object%29&gt;</ph> method.</source>
          <target state="translated">Da die Common Language Runtime keine Unboxing <ph id="ph1">`x`</ph> oder <ph id="ph2">`y`</ph> sind Werttypen oder versucht zu Downcasting <ph id="ph3">`x`</ph> oder <ph id="ph4">`y`</ph> in Zeichenfolgen, wenn sie die Verweistypen sind die <ph id="ph5">&lt;xref:System.StringComparer.Equals%28System.String%2CSystem.String%29&gt;</ph> Methode möglicherweise etwas effizienter als die <ph id="ph6">&lt;xref:System.StringComparer.Equals%28System.Object%2CSystem.Object%29&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.StringComparer.Equals(System.String,System.String)">
          <source>A string to compare to <bpt id="p1">&lt;c&gt;</bpt>y<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Eine Zeichenfolge, die mit <bpt id="p1">&lt;c&gt;</bpt>y<ept id="p1">&lt;/c&gt;</ept> verglichen werden soll.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.StringComparer.Equals(System.String,System.String)">
          <source>A string to compare to <bpt id="p1">&lt;c&gt;</bpt>x<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Eine Zeichenfolge, die mit <bpt id="p1">&lt;c&gt;</bpt>x<ept id="p1">&lt;/c&gt;</ept> verglichen werden soll.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.StringComparer.Equals(System.String,System.String)">
          <source>When overridden in a derived class, indicates whether two strings are equal.</source>
          <target state="translated">Beim Überschreiben in einer abgeleiteten Klasse wird angegeben, ob zwei Zeichenfolgen gleich sind.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.StringComparer.Equals(System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="x" /&gt;</ph> and <ph id="ph3">&lt;paramref name="y" /&gt;</ph> refer to the same object, or <ph id="ph4">&lt;paramref name="x" /&gt;</ph> and <ph id="ph5">&lt;paramref name="y" /&gt;</ph> are equal, or <ph id="ph6">&lt;paramref name="x" /&gt;</ph> and <ph id="ph7">&lt;paramref name="y" /&gt;</ph> are <ph id="ph8">&lt;see langword="null" /&gt;</ph>; otherwise, <ph id="ph9">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn <ph id="ph2">&lt;paramref name="x" /&gt;</ph> und <ph id="ph3">&lt;paramref name="y" /&gt;</ph> auf dasselbe Objekt verweisen oder wenn <ph id="ph4">&lt;paramref name="x" /&gt;</ph> und <ph id="ph5">&lt;paramref name="y" /&gt;</ph> gleich sind, oder wenn <ph id="ph6">&lt;paramref name="x" /&gt;</ph> und <ph id="ph7">&lt;paramref name="y" /&gt;</ph> gleich <ph id="ph8">&lt;see langword="null" /&gt;</ph> sind; andernfalls <ph id="ph9">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.StringComparer.Equals(System.String,System.String)">
          <source>Because the runtime does not have to unbox <ph id="ph1">`x`</ph> or <ph id="ph2">`y`</ph> if they are value types or attempt to downcast <ph id="ph3">`x`</ph> or <ph id="ph4">`y`</ph> to strings if they are reference types, the <ph id="ph5">&lt;xref:System.StringComparer.Equals%28System.String%2CSystem.String%29&gt;</ph> method may be slightly more efficient than the <ph id="ph6">&lt;xref:System.StringComparer.Equals%28System.Object%2CSystem.Object%29&gt;</ph> method.</source>
          <target state="translated">Da die Common Language Runtime keine Unboxing <ph id="ph1">`x`</ph> oder <ph id="ph2">`y`</ph> sind Werttypen oder versucht zu Downcasting <ph id="ph3">`x`</ph> oder <ph id="ph4">`y`</ph> in Zeichenfolgen, wenn sie die Verweistypen sind die <ph id="ph5">&lt;xref:System.StringComparer.Equals%28System.String%2CSystem.String%29&gt;</ph> Methode möglicherweise etwas effizienter als die <ph id="ph6">&lt;xref:System.StringComparer.Equals%28System.Object%2CSystem.Object%29&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="T:System.StringComparer">
          <source>When overridden in a derived class, gets the hash code for the current <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> object.</source>
          <target state="translated">Ruft beim Überschreiben in einer abgeleiteten Klasse den Hashcode für das aktuelle <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph>-Objekt ab.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.StringComparer.GetHashCode(System.Object)">
          <source>An object.</source>
          <target state="translated">Ein Objekt.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.StringComparer.GetHashCode(System.Object)">
          <source>When overridden in a derived class, gets the hash code for the specified object.</source>
          <target state="translated">Ruft beim Überschreiben in einer abgeleiteten Klasse den Hashcode für das angegebene Objekt ab.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.StringComparer.GetHashCode(System.Object)">
          <source>A 32-bit signed hash code calculated from the value of the <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> parameter.</source>
          <target state="translated">Ein 32-Bit-Hashcode mit Vorzeichen, berechnet aus dem Wert des <ph id="ph1">&lt;paramref name="obj" /&gt;</ph>-Parameters.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.StringComparer.GetHashCode(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.StringComparer.GetHashCode%28System.String%29&gt;</ph> method is more efficient than the <ph id="ph2">&lt;xref:System.StringComparer.GetHashCode%2A&gt;</ph> method because the <ph id="ph3">`obj`</ph> parameter does not have to be unboxed to perform the operation.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.StringComparer.GetHashCode%28System.String%29&gt;</ph> Methode ist effizienter als die <ph id="ph2">&lt;xref:System.StringComparer.GetHashCode%2A&gt;</ph> Methode da die <ph id="ph3">`obj`</ph> Parameter enthält keinen mittels Unboxing zurückkonvertiert werden, um den Vorgang auszuführen.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.StringComparer.GetHashCode(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.StringComparer.GetHashCode%28System.Object%29&gt;</ph> method allocates an amount of memory that is proportional to the size of <ph id="ph2">`obj`</ph> to calculate the hash code of <ph id="ph3">`obj`</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.StringComparer.GetHashCode%28System.Object%29&gt;</ph> Methode belegt eine Menge an Arbeitsspeicher, die proportional zur Größe des <ph id="ph2">`obj`</ph> zum Berechnen des Hashcodes des <ph id="ph3">`obj`</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.StringComparer.GetHashCode(System.Object)">
          <source>In the case of large strings, trying to retrieve the hash code can throw an <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">Im Fall von großen Zeichenfolgen beim Abrufen des Hashcodes Auslösen einer <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.StringComparer.GetHashCode(System.Object)">
          <source>Instead, you can use an alternate algorithm that allocates a fixed amount of memory when calculating hash codes.</source>
          <target state="translated">Stattdessen können Sie einen alternativen Algorithmus verwenden, der eine feste Menge an Arbeitsspeicher, beim Berechnen von Hashcodes belegt.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.StringComparer.GetHashCode(System.Object)">
          <source>To use this algorithm, add the <bpt id="p1">[</bpt>&lt;NetFx45_CultureAwareComparerGetHashCode_LongStrings&gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/netfx45-cultureawarecomparergethashcode-longstrings-element.md)</ept> element to the <bpt id="p2">[</bpt><ph id="ph1">\&lt;</ph>runtime&gt;<ept id="p2">](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md)</ept> section of your application's configuration file.</source>
          <target state="translated">Um diesen Algorithmus verwenden, fügen die <bpt id="p1">[</bpt>&lt; NetFx45_CultureAwareComparerGetHashCode_LongStrings &gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/netfx45-cultureawarecomparergethashcode-longstrings-element.md)</ept> Element an der <bpt id="p2">[</bpt> <ph id="ph1">\&lt;</ph>Runtime &gt;<ept id="p2">](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md)</ept> Abschnitt der Konfigurationsdatei Ihrer Anwendung.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.StringComparer.GetHashCode(System.Object)">
          <source>Not enough memory is available to allocate the buffer that is required to compute the hash code.</source>
          <target state="translated">Es ist nicht genügend Arbeitsspeicher verfügbar, um den Puffer zuzuweisen, der für die Berechnung des Hashcodes erforderlich ist.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.StringComparer.GetHashCode(System.Object)">
          <source><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.StringComparer.GetHashCode(System.Object)">
          <source>Not enough memory is available to allocate the buffer that is required to compute the hash code.</source>
          <target state="translated">Es ist nicht genügend Arbeitsspeicher verfügbar, um den Puffer zuzuweisen, der für die Berechnung des Hashcodes erforderlich ist.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.StringComparer.GetHashCode(System.String)">
          <source>A string.</source>
          <target state="translated">Eine Zeichenfolge.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.StringComparer.GetHashCode(System.String)">
          <source>When overridden in a derived class, gets the hash code for the specified string.</source>
          <target state="translated">Ruft beim Überschreiben in einer abgeleiteten Klasse den Hashcode für die angegebene Zeichenfolge ab.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.StringComparer.GetHashCode(System.String)">
          <source>A 32-bit signed hash code calculated from the value of the <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> parameter.</source>
          <target state="translated">Ein 32-Bit-Hashcode mit Vorzeichen, berechnet aus dem Wert des <ph id="ph1">&lt;paramref name="obj" /&gt;</ph>-Parameters.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.StringComparer.GetHashCode(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.StringComparer.GetHashCode%28System.String%29&gt;</ph> method is more efficient than the <ph id="ph2">&lt;xref:System.StringComparer.GetHashCode%28System.Object%29&gt;</ph> method because the <ph id="ph3">`obj`</ph> parameter does not have to be unboxed to perform the operation.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.StringComparer.GetHashCode%28System.String%29&gt;</ph> Methode ist effizienter als die <ph id="ph2">&lt;xref:System.StringComparer.GetHashCode%28System.Object%29&gt;</ph> Methode da die <ph id="ph3">`obj`</ph> Parameter enthält keinen mittels Unboxing zurückkonvertiert werden, um den Vorgang auszuführen.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.StringComparer.GetHashCode(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.StringComparer.GetHashCode%28System.String%29&gt;</ph> method allocates an amount of memory that is proportional to the size of <ph id="ph2">`obj`</ph> to calculate the hash code of <ph id="ph3">`obj`</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.StringComparer.GetHashCode%28System.String%29&gt;</ph> Methode belegt eine Menge an Arbeitsspeicher, die proportional zur Größe des <ph id="ph2">`obj`</ph> zum Berechnen des Hashcodes des <ph id="ph3">`obj`</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.StringComparer.GetHashCode(System.String)">
          <source>In the case of large strings, trying to retrieve the hash code can throw an <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">Im Fall von großen Zeichenfolgen beim Abrufen des Hashcodes Auslösen einer <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.StringComparer.GetHashCode(System.String)">
          <source>Instead, you can use an alternate algorithm that allocates a fixed amount of memory when calculating hash codes.</source>
          <target state="translated">Stattdessen können Sie einen alternativen Algorithmus verwenden, der eine feste Menge an Arbeitsspeicher, beim Berechnen von Hashcodes belegt.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.StringComparer.GetHashCode(System.String)">
          <source>To use this algorithm, add the <bpt id="p1">[</bpt>&lt;NetFx45_CultureAwareComparerGetHashCode_LongStrings&gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/netfx45-cultureawarecomparergethashcode-longstrings-element.md)</ept> element to the <bpt id="p2">[</bpt><ph id="ph1">\&lt;</ph>runtime&gt;<ept id="p2">](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md)</ept> section of your application's configuration file.</source>
          <target state="translated">Um diesen Algorithmus verwenden, fügen die <bpt id="p1">[</bpt>&lt; NetFx45_CultureAwareComparerGetHashCode_LongStrings &gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/netfx45-cultureawarecomparergethashcode-longstrings-element.md)</ept> Element an der <bpt id="p2">[</bpt> <ph id="ph1">\&lt;</ph>Runtime &gt;<ept id="p2">](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md)</ept> Abschnitt der Konfigurationsdatei Ihrer Anwendung.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.StringComparer.GetHashCode(System.String)">
          <source>Not enough memory is available to allocate the buffer that is required to compute the hash code.</source>
          <target state="translated">Es ist nicht genügend Arbeitsspeicher verfügbar, um den Puffer zuzuweisen, der für die Berechnung des Hashcodes erforderlich ist.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.StringComparer.GetHashCode(System.String)">
          <source><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.StringComparer.GetHashCode(System.String)">
          <source>Not enough memory is available to allocate the buffer that is required to compute the hash code.</source>
          <target state="translated">Es ist nicht genügend Arbeitsspeicher verfügbar, um den Puffer zuzuweisen, der für die Berechnung des Hashcodes erforderlich ist.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="P:System.StringComparer.InvariantCulture">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> object that performs a case-sensitive string comparison using the word comparison rules of the invariant culture.</source>
          <target state="translated">Ruft ein <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph>-Objekt ab, das mit den Wortvergleichsregeln der invarianten Kultur einen Zeichenfolgenvergleich mit Berücksichtigung von Groß- und Kleinschreibung ausführt.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.StringComparer.InvariantCulture">
          <source>A new <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> object.</source>
          <target state="translated">Ein neues <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.StringComparer.InvariantCulture">
          <source>The <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> returned by the <ph id="ph2">&lt;xref:System.StringComparer.InvariantCulture%2A&gt;</ph> property compares strings in a linguistically relevant manner, but it is not suitable for display in any particular culture.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> zurückgegebenes der <ph id="ph2">&lt;xref:System.StringComparer.InvariantCulture%2A&gt;</ph> Eigenschaft vergleicht Zeichenfolgen in einer Weise linguistisch relevant, aber es ist nicht für die Anzeige in einer bestimmten Kultur geeignet ist.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.StringComparer.InvariantCulture">
          <source>Its major application is to order strings in a way that will be identical across cultures.</source>
          <target state="translated">Der hauptanwendung ist in Reihenfolge von Zeichenfolgen in einer Weise, die über Kulturen hinweg identisch sein wird.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.StringComparer.InvariantCulture">
          <source>The invariant culture is the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object returned by the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A&gt;</ph> property.</source>
          <target state="translated">Die invariante Kultur wird die <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> zurückgegebenes Objekt die <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.StringComparer.InvariantCulture">
          <source>The <ph id="ph1">&lt;xref:System.StringComparer.InvariantCulture%2A&gt;</ph> property actually returns an instance of an anonymous class derived from the <ph id="ph2">&lt;xref:System.StringComparer&gt;</ph> class.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.StringComparer.InvariantCulture%2A&gt;</ph> Eigenschaft gibt tatsächlich eine Instanz einer anonymen Klasse abgeleitet wurde. die <ph id="ph2">&lt;xref:System.StringComparer&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.StringComparer.InvariantCulture">
          <source>The following code example demonstrates the properties and the <ph id="ph1">&lt;xref:System.StringComparer.Create%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.StringComparer&gt;</ph> class.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, die Eigenschaften und die <ph id="ph1">&lt;xref:System.StringComparer.Create%2A&gt;</ph> Methode der <ph id="ph2">&lt;xref:System.StringComparer&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.StringComparer.InvariantCulture">
          <source>The example illustrates how different <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> objects sort three versions of the Latin letter I.</source>
          <target state="translated">Im Beispiel wird veranschaulicht, wie verschiedene <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> Objekte sortieren drei Versionen des lateinischen Buchstaben I.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="P:System.StringComparer.InvariantCultureIgnoreCase">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> object that performs a case-insensitive string comparison using the word comparison rules of the invariant culture.</source>
          <target state="translated">Ruft ein <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph>-Objekt ab, das mit den Wortvergleichsregeln der invarianten Kultur einen Zeichenfolgenvergleich ohne Berücksichtigung von Groß- und Kleinschreibung ausführt.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.StringComparer.InvariantCultureIgnoreCase">
          <source>A new <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> object.</source>
          <target state="translated">Ein neues <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.StringComparer.InvariantCultureIgnoreCase">
          <source>The <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> returned by the <ph id="ph2">&lt;xref:System.StringComparer.InvariantCultureIgnoreCase%2A&gt;</ph> property compares strings in a linguistically relevant manner that ignores case, but it is not suitable for display in any particular culture.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> zurückgegebenes der <ph id="ph2">&lt;xref:System.StringComparer.InvariantCultureIgnoreCase%2A&gt;</ph> Eigenschaft vergleicht Zeichenfolgen verfolgungsänderung linguistisch relevant, die Groß-und Kleinschreibung berücksichtigt, aber es ist nicht für die Anzeige in einer bestimmten Kultur geeignet ist.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.StringComparer.InvariantCultureIgnoreCase">
          <source>Its major application is to order strings in a way that will be identical across cultures.</source>
          <target state="translated">Der hauptanwendung ist in Reihenfolge von Zeichenfolgen in einer Weise, die über Kulturen hinweg identisch sein wird.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.StringComparer.InvariantCultureIgnoreCase">
          <source>The invariant culture is the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object returned by the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A&gt;</ph> property.</source>
          <target state="translated">Die invariante Kultur wird die <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> zurückgegebenes Objekt die <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.StringComparer.InvariantCultureIgnoreCase">
          <source>The <ph id="ph1">&lt;xref:System.StringComparer.InvariantCultureIgnoreCase%2A&gt;</ph> property actually returns an instance of an anonymous class derived from the <ph id="ph2">&lt;xref:System.StringComparer&gt;</ph> class.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.StringComparer.InvariantCultureIgnoreCase%2A&gt;</ph> Eigenschaft gibt tatsächlich eine Instanz einer anonymen Klasse abgeleitet wurde. die <ph id="ph2">&lt;xref:System.StringComparer&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="P:System.StringComparer.Ordinal">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> object that performs a case-sensitive ordinal string comparison.</source>
          <target state="translated">Ruft ein <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph>-Objekt ab, das einen Ordinalzeichenfolgenvergleich mit Berücksichtigung der Groß- und Kleinschreibung ausführt.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.StringComparer.Ordinal">
          <source>A <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> object.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.StringComparer.Ordinal">
          <source>The <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> returned by the <ph id="ph2">&lt;xref:System.StringComparer.Ordinal%2A&gt;</ph> property performs a simple byte comparison that is independent of language.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> zurückgegebenes der <ph id="ph2">&lt;xref:System.StringComparer.Ordinal%2A&gt;</ph> Eigenschaft wird einen einfacher Bytevergleich, die unabhängig von der Sprache wird ausgeführt.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.StringComparer.Ordinal">
          <source>This is most appropriate when comparing strings that are generated programmatically or when comparing case-sensitive resources such as passwords.</source>
          <target state="translated">Dies ist am besten geeignet, wenn es sich bei Vergleichen von Zeichenfolgen, die programmgesteuert oder beim Vergleichen von Groß-/Kleinschreibung Ressourcen wie Kennwörter generiert.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.StringComparer.Ordinal">
          <source>The <ph id="ph1">&lt;xref:System.StringComparer.Ordinal%2A&gt;</ph> property actually returns an instance of an anonymous class derived from the <ph id="ph2">&lt;xref:System.StringComparer&gt;</ph> class.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.StringComparer.Ordinal%2A&gt;</ph> Eigenschaft gibt tatsächlich eine Instanz einer anonymen Klasse abgeleitet wurde. die <ph id="ph2">&lt;xref:System.StringComparer&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.StringComparer.Ordinal">
          <source>The following code example demonstrates the properties and the <ph id="ph1">&lt;xref:System.StringComparer.Create%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.StringComparer&gt;</ph> class.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, die Eigenschaften und die <ph id="ph1">&lt;xref:System.StringComparer.Create%2A&gt;</ph> Methode der <ph id="ph2">&lt;xref:System.StringComparer&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.StringComparer.Ordinal">
          <source>The example illustrates how different <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> objects sort three versions of the Latin letter I.</source>
          <target state="translated">Im Beispiel wird veranschaulicht, wie verschiedene <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> Objekte sortieren drei Versionen des lateinischen Buchstaben I.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="P:System.StringComparer.OrdinalIgnoreCase">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> object that performs a case-insensitive ordinal string comparison.</source>
          <target state="translated">Ruft ein <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph>-Objekt ab, das einen Ordinalzeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung ausführt.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.StringComparer.OrdinalIgnoreCase">
          <source>A <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> object.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.StringComparer.OrdinalIgnoreCase">
          <source>The <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> returned by the <ph id="ph2">&lt;xref:System.StringComparer.OrdinalIgnoreCase%2A&gt;</ph> property treats the characters in the strings to compare as if they were converted to uppercase using the conventions of the invariant culture, and then performs a simple byte comparison that is independent of language.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> zurückgegebenes der <ph id="ph2">&lt;xref:System.StringComparer.OrdinalIgnoreCase%2A&gt;</ph> Eigenschaft behandelt die Zeichen in den Zeichenfolgen, die verglichen werden soll, als ob sie in Großbuchstaben mit den Konventionen der invarianten Kultur konvertiert wurden, und führt dann einen einfacher Bytevergleich, die unabhängig von Sprache.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.StringComparer.OrdinalIgnoreCase">
          <source>This is most appropriate when comparing strings that are generated programmatically or when comparing case-insensitive resources such as paths and filenames.</source>
          <target state="translated">Dies ist am besten geeignet, wenn es sich bei Vergleichen von Zeichenfolgen, die programmgesteuert oder beim Vergleichen die Groß-/Kleinschreibung Ressourcen wie z. B. Pfade und Dateinamen generiert.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.StringComparer.OrdinalIgnoreCase">
          <source>The <ph id="ph1">&lt;xref:System.StringComparer.OrdinalIgnoreCase%2A&gt;</ph> property actually returns an instance of an anonymous class derived from the <ph id="ph2">&lt;xref:System.StringComparer&gt;</ph> class.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.StringComparer.OrdinalIgnoreCase%2A&gt;</ph> Eigenschaft gibt tatsächlich eine Instanz einer anonymen Klasse abgeleitet wurde. die <ph id="ph2">&lt;xref:System.StringComparer&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.StringComparer.OrdinalIgnoreCase">
          <source>The following code example demonstrates the properties and the <ph id="ph1">&lt;xref:System.StringComparer.Create%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.StringComparer&gt;</ph> class.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, die Eigenschaften und die <ph id="ph1">&lt;xref:System.StringComparer.Create%2A&gt;</ph> Methode der <ph id="ph2">&lt;xref:System.StringComparer&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.StringComparer.OrdinalIgnoreCase">
          <source>The example illustrates how different <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> objects sort three versions of the Latin letter I.</source>
          <target state="translated">Im Beispiel wird veranschaulicht, wie verschiedene <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> Objekte sortieren drei Versionen des lateinischen Buchstaben I.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>