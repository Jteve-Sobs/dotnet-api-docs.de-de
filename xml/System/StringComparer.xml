<Type Name="StringComparer" FullName="System.StringComparer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9779a1a49153cd7ebfef7a77f2829a578a39ed5b" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70724745" /></Metadata><TypeSignature Language="C#" Value="public abstract class StringComparer : System.Collections.Generic.IComparer&lt;string&gt;, System.Collections.Generic.IEqualityComparer&lt;string&gt;, System.Collections.IComparer, System.Collections.IEqualityComparer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit StringComparer extends System.Object implements class System.Collections.Generic.IComparer`1&lt;string&gt;, class System.Collections.Generic.IEqualityComparer`1&lt;string&gt;, class System.Collections.IComparer, class System.Collections.IEqualityComparer" />
  <TypeSignature Language="DocId" Value="T:System.StringComparer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class StringComparer&#xA;Implements IComparer, IComparer(Of String), IEqualityComparer, IEqualityComparer(Of String)" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringComparer abstract : System::Collections::Generic::IComparer&lt;System::String ^&gt;, System::Collections::Generic::IEqualityComparer&lt;System::String ^&gt;, System::Collections::IComparer, System::Collections::IEqualityComparer" />
  <TypeSignature Language="F#" Value="type StringComparer = class&#xA;    interface IComparer&#xA;    interface IEqualityComparer&#xA;    interface IComparer&lt;string&gt;&#xA;    interface IEqualityComparer&lt;string&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IComparer&lt;System.String&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEqualityComparer&lt;System.String&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IComparer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEqualityComparer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="dc25b-101">Stellt einen Zeichenfolgenvergleichsvorgang dar, der bestimmte Regeln zur Groß- und Kleinschreibung und kulturbasierte bzw. Ordinalvergleichsregeln verwendet.</span><span class="sxs-lookup"><span data-stu-id="dc25b-101">Represents a string comparison operation that uses specific case and culture-based or ordinal comparison rules.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc25b-102">Ein von der <xref:System.StringComparer> -Klasse abgeleitetes Objekt enthält Zeichen folgen basierte Vergleichs-, Gleichheits-und Hashcode-Vorgänge, die sowohl Case-als auch kulturspezifische Vergleichs Regeln berücksichtigen.</span><span class="sxs-lookup"><span data-stu-id="dc25b-102">An object derived from the <xref:System.StringComparer> class embodies string-based comparison, equality, and hash code operations that take into account both case and culture-specific comparison rules.</span></span> <span data-ttu-id="dc25b-103">Sie können die <xref:System.StringComparer> -Klasse verwenden, um einen typspezifischen Vergleich zum Sortieren der Elemente in einer generischen Auflistung zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="dc25b-103">You can use the <xref:System.StringComparer> class to create a type-specific comparison to sort the elements in a generic collection.</span></span> <span data-ttu-id="dc25b-104">Klassen wie <xref:System.Collections.Hashtable>, <xref:System.Collections.Generic.Dictionary%602> <xref:System.Collections.Generic.SortedList%602> , <xref:System.Collections.SortedList>und verwenden die <xref:System.StringComparer>  -Klasse zu Sortier Zwecken.</span><span class="sxs-lookup"><span data-stu-id="dc25b-104">Classes such as <xref:System.Collections.Hashtable>, <xref:System.Collections.Generic.Dictionary%602>, <xref:System.Collections.SortedList>, and <xref:System.Collections.Generic.SortedList%602> use the <xref:System.StringComparer> class for sorting purposes.</span></span>  
  
 <span data-ttu-id="dc25b-105">Bei einer Vergleichsoperation, die durch die <xref:System.StringComparer> -Klasse dargestellt wird, wird entweder die Groß-/Kleinschreibung beachtet, und die Groß-/Kleinschreibung wird nicht beachtet, und es werden entweder Wort Vergleichs Regeln (Kultur abhängig) oder ordinale (Kultur unabhängige) Zeichen verwendet</span><span class="sxs-lookup"><span data-stu-id="dc25b-105">A comparison operation that is represented by the <xref:System.StringComparer> class is defined to be either case-sensitive or case-insensitive, and use either word (culture-sensitive) or ordinal (culture-insensitive) comparison rules.</span></span> <span data-ttu-id="dc25b-106">Weitere Informationen zu Wort-und Ordinalvergleichsregeln finden <xref:System.Globalization.CompareOptions?displayProperty=nameWithType>Sie unter.</span><span class="sxs-lookup"><span data-stu-id="dc25b-106">For more information about word and ordinal comparison rules, see <xref:System.Globalization.CompareOptions?displayProperty=nameWithType>.</span></span>  

> [!NOTE]
> <span data-ttu-id="dc25b-107">Sie können die aus mehreren Textdateien bestehenden [Sorting Weight Tables](https://www.microsoft.com/download/details.aspx?id=10921) herunterladen. Diese Textdateien enthalten Informationen zur Gewichtung der Zeichen, die bei Sortier- und Vergleichsvorgängen unter Windows-Betriebssystemen verwendet werden, sowie die [Default Unicode Collation Element Table](https://www.unicode.org/Public/UCA/latest/allkeys.txt), die neueste Version der Sortiergewichtungstabelle für Linux und macOS.</span><span class="sxs-lookup"><span data-stu-id="dc25b-107">You can download the [Sorting Weight Tables](https://www.microsoft.com/download/details.aspx?id=10921), a set of text files that contain information on the character weights used in sorting and comparison operations for Windows operating systems, and the [Default Unicode Collation Element Table](https://www.unicode.org/Public/UCA/latest/allkeys.txt), the latest version of the sort weight table for Linux and macOS.</span></span> <span data-ttu-id="dc25b-108">Die spezifische Version der Sortiergewichtungstabelle unter Linux und macOS hängt von der auf dem System installierten Version der [International Components for Unicode](http://site.icu-project.org/) ab.</span><span class="sxs-lookup"><span data-stu-id="dc25b-108">The specific version of the sort weight table on Linux and macOS depends on the version of the [International Components for Unicode](http://site.icu-project.org/) libraries installed on the system.</span></span> <span data-ttu-id="dc25b-109">Informationen zu ICU-Versionen und den Unicode-Versionen, die durch sie implementiert werden, finden Sie unter [Downloading ICU](http://site.icu-project.org/download).</span><span class="sxs-lookup"><span data-stu-id="dc25b-109">For information on ICU versions and the Unicode versions that they implement, see [Downloading ICU](http://site.icu-project.org/download).</span></span>

## <a name="implemented-properties"></a><span data-ttu-id="dc25b-110">Implementierte Eigenschaften</span><span class="sxs-lookup"><span data-stu-id="dc25b-110">Implemented properties</span></span>  

<span data-ttu-id="dc25b-111">Sie sind möglicherweise nicht mit der Verwendung der <xref:System.StringComparer> Klasseneigenschaften aufgrund eines scheinbar Widerspruchs zu verwechseln.</span><span class="sxs-lookup"><span data-stu-id="dc25b-111">You might be confused about how to use the <xref:System.StringComparer> class properties because of a seeming contradiction.</span></span> <span data-ttu-id="dc25b-112">Die <xref:System.StringComparer> -Klasse wird `abstract` (`MustInherit` in Visual Basic) deklariert. das bedeutet, dass ihre Member nur für ein Objekt einer Klasse aufgerufen werden können, <xref:System.StringComparer> die von der-Klasse abgeleitet wird.</span><span class="sxs-lookup"><span data-stu-id="dc25b-112">The <xref:System.StringComparer> class is declared `abstract` (`MustInherit` in Visual Basic), which means its members can be invoked only on an object of a class derived from the <xref:System.StringComparer> class.</span></span> <span data-ttu-id="dc25b-113">Der Widerspruch besteht darin, dass jede <xref:System.StringComparer> Eigenschaft der Klasse `static` (`Shared` in Visual Basic) deklariert wird. das bedeutet, dass die Eigenschaft aufgerufen werden kann, ohne zuvor eine abgeleitete Klasse zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="dc25b-113">The contradiction is that each property of the <xref:System.StringComparer> class is declared `static` (`Shared` in Visual Basic), which means the property can be invoked without first creating a derived class.</span></span>  
  
 <span data-ttu-id="dc25b-114">Sie können eine <xref:System.StringComparer> Eigenschaft direkt aufzurufen, da jede Eigenschaft tatsächlich eine Instanz einer anonymen Klasse zurückgibt, die von <xref:System.StringComparer> der-Klasse abgeleitet wird.</span><span class="sxs-lookup"><span data-stu-id="dc25b-114">You can call a <xref:System.StringComparer> property directly because each property actually returns an instance of an anonymous class that is derived from the <xref:System.StringComparer> class.</span></span> <span data-ttu-id="dc25b-115">Folglich ist <xref:System.StringComparer>der Typ jedes Eigenschafts Werts, d. h. die Basisklasse der anonymen Klasse, nicht der Typ der anonymen Klasse selbst.</span><span class="sxs-lookup"><span data-stu-id="dc25b-115">Consequently, the type of each property value is <xref:System.StringComparer>, which is the base class of the anonymous class, not the type of the anonymous class itself.</span></span> <span data-ttu-id="dc25b-116">Jede <xref:System.StringComparer> Klassen Eigenschaft gibt ein <xref:System.StringComparer> -Objekt zurück, das vordefinierte Case-und Vergleichs Regeln unterstützt.</span><span class="sxs-lookup"><span data-stu-id="dc25b-116">Each <xref:System.StringComparer> class property returns a <xref:System.StringComparer> object that supports predefined case and comparison rules.</span></span>  
  
## Examples  

<span data-ttu-id="dc25b-117">Im folgenden Beispiel werden die Eigenschaften und die <xref:System.StringComparer.Create%2A> -Methode <xref:System.StringComparer> der-Klasse veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="dc25b-117">The following example demonstrates the properties and the <xref:System.StringComparer.Create%2A> method of the <xref:System.StringComparer> class.</span></span> <span data-ttu-id="dc25b-118">Das Beispiel veranschaulicht, wie <xref:System.StringComparer> unterschiedliche Objekte drei Versionen des lateinischen Buchstabens I sortieren.</span><span class="sxs-lookup"><span data-stu-id="dc25b-118">The example illustrates how different <xref:System.StringComparer> objects sort three versions of the Latin letter I.</span></span>  
  
 [!code-cpp[System.StringComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.StringComparer/cpp/omni.cpp#1)]
 [!code-csharp[System.StringComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.StringComparer/cs/omni.cs#1)]
 [!code-vb[System.StringComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.StringComparer/vb/omni.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.String" />
    <altmember cref="T:System.Globalization.CompareOptions" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected StringComparer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; StringComparer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dc25b-119">Initialisiert eine neue Instanz der <see cref="T:System.StringComparer" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="dc25b-119">Initializes a new instance of the <see cref="T:System.StringComparer" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Compare">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dc25b-120">Vergleicht zwei Objekte oder Zeichenfolgen und gibt eine Angabe der relativen Sortierreihenfolge zurück.</span><span class="sxs-lookup"><span data-stu-id="dc25b-120">Compares two objects or strings and returns an indication of their relative sort order.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public int Compare (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.Compare(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Compare (x As Object, y As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::Object ^ x, System::Object ^ y);" />
      <MemberSignature Language="F#" Value="abstract member Compare : obj * obj -&gt; int&#xA;override this.Compare : obj * obj -&gt; int" Usage="stringComparer.Compare (x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IComparer.Compare(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="y" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="dc25b-121">Ein mit <paramref name="y" /> zu vergleichendes Objekt.</span><span class="sxs-lookup"><span data-stu-id="dc25b-121">An object to compare to <paramref name="y" />.</span></span></param>
        <param name="y"><span data-ttu-id="dc25b-122">Ein mit <paramref name="x" /> zu vergleichendes Objekt.</span><span class="sxs-lookup"><span data-stu-id="dc25b-122">An object to compare to <paramref name="x" />.</span></span></param>
        <summary><span data-ttu-id="dc25b-123">Beim Überschreiben in einer abgeleiteten Klasse wird ein Vergleich von zwei Objekten durchgeführt und eine Angabe der relativen Sortierreihenfolge zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="dc25b-123">When overridden in a derived class, compares two objects and returns an indication of their relative sort order.</span></span></summary>
        <returns><span data-ttu-id="dc25b-124">Eine ganze Zahl mit Vorzeichen, die die relativen Werte von <paramref name="x" /> und <paramref name="y" /> angibt, wie in der folgenden Tabelle veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="dc25b-124">A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="dc25b-125">Wert</span><span class="sxs-lookup"><span data-stu-id="dc25b-125">Value</span></span> 
 </term><description> <span data-ttu-id="dc25b-126">Bedeutung</span><span class="sxs-lookup"><span data-stu-id="dc25b-126">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="dc25b-127">Kleiner als 0 (null)</span><span class="sxs-lookup"><span data-stu-id="dc25b-127">Less than zero</span></span> 
 </term><description><span data-ttu-id="dc25b-128"><paramref name="x" /> steht in der Sortierreihenfolge vor <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="dc25b-128"><paramref name="x" /> precedes  <paramref name="y" /> in the sort order.</span></span>  
  
<span data-ttu-id="dc25b-129">- oder -</span><span class="sxs-lookup"><span data-stu-id="dc25b-129">-or-</span></span> 
 <span data-ttu-id="dc25b-130"><paramref name="x" /> ist <see langword="null" />, und <paramref name="y" /> ist nicht <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="dc25b-130"><paramref name="x" /> is <see langword="null" /> and <paramref name="y" /> is not <see langword="null" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="dc25b-131">Zero</span><span class="sxs-lookup"><span data-stu-id="dc25b-131">Zero</span></span> 
 </term><description><span data-ttu-id="dc25b-132"><paramref name="x" /> ist gleich <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="dc25b-132"><paramref name="x" /> is equal to <paramref name="y" />.</span></span>  
  
<span data-ttu-id="dc25b-133">- oder -</span><span class="sxs-lookup"><span data-stu-id="dc25b-133">-or-</span></span> 
 <span data-ttu-id="dc25b-134"><paramref name="x" /> und <paramref name="y" /> sind jeweils <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="dc25b-134"><paramref name="x" /> and <paramref name="y" /> are both <see langword="null" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="dc25b-135">Größer als 0 (null)</span><span class="sxs-lookup"><span data-stu-id="dc25b-135">Greater than zero</span></span> 
 </term><description><span data-ttu-id="dc25b-136"><paramref name="x" /> steht in der Sortierreihenfolge hinter <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="dc25b-136"><paramref name="x" /> follows <paramref name="y" /> in the sort order.</span></span>  
  
<span data-ttu-id="dc25b-137">- oder -</span><span class="sxs-lookup"><span data-stu-id="dc25b-137">-or-</span></span> 
 <span data-ttu-id="dc25b-138"><paramref name="y" /> ist <see langword="null" />, und <paramref name="x" /> ist nicht <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="dc25b-138"><paramref name="y" /> is <see langword="null" /> and <paramref name="x" /> is not <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc25b-139">Die <xref:System.StringComparer.Compare%28System.String%2CSystem.String%29?displayProperty=nameWithType> `x` -Methode ist etwas effizienter als die <xref:System.StringComparer.Compare%28System.Object%2CSystem.Object%29?displayProperty=nameWithType> -Methode, da keine Konvertierung der `y` Argumente und erforderlich ist, um den Vergleich durchzuführen.</span><span class="sxs-lookup"><span data-stu-id="dc25b-139">The <xref:System.StringComparer.Compare%28System.String%2CSystem.String%29?displayProperty=nameWithType> method is slightly more efficient than the <xref:System.StringComparer.Compare%28System.Object%2CSystem.Object%29?displayProperty=nameWithType> method because no conversion of the `x` and `y` arguments is needed to perform the comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc25b-140">Weder <paramref name="x" /> noch <paramref name="y" /> ist ein <see cref="T:System.String" />-Objekt, und weder <paramref name="x" /> noch <paramref name="y" /> implementiert die <see cref="T:System.IComparable" />-Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="dc25b-140">Neither <paramref name="x" /> nor <paramref name="y" /> is a <see cref="T:System.String" /> object, and neither <paramref name="x" /> nor <paramref name="y" /> implements the <see cref="T:System.IComparable" /> interface.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public abstract int Compare (string x, string y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string x, string y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.Compare(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Compare (x As String, y As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int Compare(System::String ^ x, System::String ^ y);" />
      <MemberSignature Language="F#" Value="abstract member Compare : string * string -&gt; int" Usage="stringComparer.Compare (x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IComparer`1.Compare(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.String" />
        <Parameter Name="y" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="dc25b-141">Eine Zeichenfolge, die mit <paramref name="y" /> verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="dc25b-141">A string to compare to <paramref name="y" />.</span></span></param>
        <param name="y"><span data-ttu-id="dc25b-142">Eine Zeichenfolge, die mit <paramref name="x" /> verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="dc25b-142">A string to compare to <paramref name="x" />.</span></span></param>
        <summary><span data-ttu-id="dc25b-143">Beim Überschreiben in einer abgeleiteten Klasse wird ein Vergleich von zwei Zeichenfolgen durchgeführt und eine Angabe der relativen Sortierreihenfolge zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="dc25b-143">When overridden in a derived class, compares two strings and returns an indication of their relative sort order.</span></span></summary>
        <returns><span data-ttu-id="dc25b-144">Eine ganze Zahl mit Vorzeichen, die die relativen Werte von <paramref name="x" /> und <paramref name="y" /> angibt, wie in der folgenden Tabelle veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="dc25b-144">A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="dc25b-145">Wert</span><span class="sxs-lookup"><span data-stu-id="dc25b-145">Value</span></span> 
 </term><description> <span data-ttu-id="dc25b-146">Bedeutung</span><span class="sxs-lookup"><span data-stu-id="dc25b-146">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="dc25b-147">Kleiner als 0 (null)</span><span class="sxs-lookup"><span data-stu-id="dc25b-147">Less than zero</span></span> 
 </term><description><span data-ttu-id="dc25b-148"><paramref name="x" /> steht in der Sortierreihenfolge vor <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="dc25b-148"><paramref name="x" /> precedes <paramref name="y" /> in the sort order.</span></span>  
  
<span data-ttu-id="dc25b-149">- oder -</span><span class="sxs-lookup"><span data-stu-id="dc25b-149">-or-</span></span> 
 <span data-ttu-id="dc25b-150"><paramref name="x" /> ist <see langword="null" />, und <paramref name="y" /> ist nicht <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="dc25b-150"><paramref name="x" /> is <see langword="null" /> and <paramref name="y" /> is not <see langword="null" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="dc25b-151">Zero</span><span class="sxs-lookup"><span data-stu-id="dc25b-151">Zero</span></span> 
 </term><description><span data-ttu-id="dc25b-152"><paramref name="x" /> ist gleich <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="dc25b-152"><paramref name="x" /> is equal to <paramref name="y" />.</span></span>  
  
<span data-ttu-id="dc25b-153">- oder -</span><span class="sxs-lookup"><span data-stu-id="dc25b-153">-or-</span></span> 
 <span data-ttu-id="dc25b-154"><paramref name="x" /> und <paramref name="y" /> sind jeweils <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="dc25b-154"><paramref name="x" /> and <paramref name="y" /> are both <see langword="null" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="dc25b-155">Größer als 0 (null)</span><span class="sxs-lookup"><span data-stu-id="dc25b-155">Greater than zero</span></span> 
 </term><description><span data-ttu-id="dc25b-156"><paramref name="x" /> steht in der Sortierreihenfolge hinter <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="dc25b-156"><paramref name="x" /> follows <paramref name="y" /> in the sort order.</span></span>  
  
<span data-ttu-id="dc25b-157">- oder -</span><span class="sxs-lookup"><span data-stu-id="dc25b-157">-or-</span></span> 
 <span data-ttu-id="dc25b-158"><paramref name="y" /> ist <see langword="null" />, und <paramref name="x" /> ist nicht <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="dc25b-158"><paramref name="y" /> is <see langword="null" /> and <paramref name="x" /> is not <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc25b-159">Die <xref:System.StringComparer.Compare%28System.String%2CSystem.String%29?displayProperty=nameWithType> `x` -Methode ist etwas effizienter als die <xref:System.StringComparer.Compare%28System.Object%2CSystem.Object%29?displayProperty=nameWithType> -Methode, da keine Konvertierung der `y` Argumente und erforderlich ist, um den Vergleich durchzuführen.</span><span class="sxs-lookup"><span data-stu-id="dc25b-159">The <xref:System.StringComparer.Compare%28System.String%2CSystem.String%29?displayProperty=nameWithType> method is slightly more efficient than the <xref:System.StringComparer.Compare%28System.Object%2CSystem.Object%29?displayProperty=nameWithType> method because no conversion of the `x` and `y` arguments is needed to perform the comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static StringComparer Create (System.Globalization.CultureInfo culture, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.StringComparer Create(class System.Globalization.CultureInfo culture, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.Create(System.Globalization.CultureInfo,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (culture As CultureInfo, ignoreCase As Boolean) As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static StringComparer ^ Create(System::Globalization::CultureInfo ^ culture, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="static member Create : System.Globalization.CultureInfo * bool -&gt; StringComparer" Usage="System.StringComparer.Create (culture, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="dc25b-160">Eine Kultur, deren linguistische Regeln verwendet werden, um einen Zeichenfolgenvergleich auszuführen.</span><span class="sxs-lookup"><span data-stu-id="dc25b-160">A culture whose linguistic rules are used to perform a string comparison.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="dc25b-161"><see langword="true" />, um anzugeben, dass die Groß- und Kleinschreibung bei den Vergleichsvorgängen nicht beachtet wird; <see langword="false" />, um anzugeben, dass die Groß- und Kleinschreibung bei den Vergleichsvorgängen beachtet wird.</span><span class="sxs-lookup"><span data-stu-id="dc25b-161"><see langword="true" /> to specify that comparison operations be case-insensitive; <see langword="false" /> to specify that comparison operations be case-sensitive.</span></span></param>
        <summary><span data-ttu-id="dc25b-162">Erstellt ein <see cref="T:System.StringComparer" />-Objekt, das Zeichenfolgen nach den Regeln einer angegebenen Kultur vergleicht.</span><span class="sxs-lookup"><span data-stu-id="dc25b-162">Creates a <see cref="T:System.StringComparer" /> object that compares strings according to the rules of a specified culture.</span></span></summary>
        <returns><span data-ttu-id="dc25b-163">Ein neues <see cref="T:System.StringComparer" />-Objekt, das Zeichenfolgenvergleiche gemäß den Vergleichsregeln durchführt, die vom <paramref name="culture" />-Parameter verwendet werden, und gemäß den vom <paramref name="ignoreCase" />-Parameter angegebenen Regeln zur Groß- und Kleinschreibung.</span><span class="sxs-lookup"><span data-stu-id="dc25b-163">A new <see cref="T:System.StringComparer" /> object that performs string comparisons according to the comparison rules used by the <paramref name="culture" /> parameter and the case rule specified by the <paramref name="ignoreCase" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="dc25b-164">Im folgenden Codebeispiel werden die-Eigenschaften und <xref:System.StringComparer.Create%2A> die-Methode <xref:System.StringComparer> der-Klasse veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="dc25b-164">The following code example demonstrates the properties and the <xref:System.StringComparer.Create%2A> method of the <xref:System.StringComparer> class.</span></span> <span data-ttu-id="dc25b-165">Das Beispiel veranschaulicht, wie <xref:System.StringComparer> unterschiedliche Objekte drei Versionen des lateinischen Buchstabens I sortieren.</span><span class="sxs-lookup"><span data-stu-id="dc25b-165">The example illustrates how different <xref:System.StringComparer> objects sort three versions of the Latin letter I.</span></span>  
  
 [!code-cpp[System.StringComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.StringComparer/cpp/omni.cpp#1)]
 [!code-csharp[System.StringComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.StringComparer/cs/omni.cs#1)]
 [!code-vb[System.StringComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.StringComparer/vb/omni.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dc25b-166"><paramref name="culture" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="dc25b-166"><paramref name="culture" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static StringComparer Create (System.Globalization.CultureInfo culture, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.StringComparer Create(class System.Globalization.CultureInfo culture, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.Create(System.Globalization.CultureInfo,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (culture As CultureInfo, options As CompareOptions) As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static StringComparer ^ Create(System::Globalization::CultureInfo ^ culture, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="static member Create : System.Globalization.CultureInfo * System.Globalization.CompareOptions -&gt; StringComparer" Usage="System.StringComparer.Create (culture, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="culture">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentCulture">
      <MemberSignature Language="C#" Value="public static StringComparer CurrentCulture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.StringComparer CurrentCulture" />
      <MemberSignature Language="DocId" Value="P:System.StringComparer.CurrentCulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentCulture As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property StringComparer ^ CurrentCulture { StringComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentCulture : StringComparer" Usage="System.StringComparer.CurrentCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc25b-167">Ruft ein <see cref="T:System.StringComparer" />-Objekt ab, das mit den Wortvergleichsregeln der aktuellen Kultur einen Zeichenfolgenvergleich mit Berücksichtigung von Groß- und Kleinschreibung ausführt.</span><span class="sxs-lookup"><span data-stu-id="dc25b-167">Gets a <see cref="T:System.StringComparer" /> object that performs a case-sensitive string comparison using the word comparison rules of the current culture.</span></span></summary>
        <value><span data-ttu-id="dc25b-168">Ein neues <see cref="T:System.StringComparer" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="dc25b-168">A new <see cref="T:System.StringComparer" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc25b-169">Der <xref:System.StringComparer> von der <xref:System.StringComparer.CurrentCulture%2A> -Eigenschaft zurückgegebene kann verwendet werden, wenn Zeichen folgen linguistisch relevant sind.</span><span class="sxs-lookup"><span data-stu-id="dc25b-169">The <xref:System.StringComparer> returned by the <xref:System.StringComparer.CurrentCulture%2A> property can be used when strings are linguistically relevant.</span></span> <span data-ttu-id="dc25b-170">Wenn z. b. Zeichen folgen für den Benutzer angezeigt werden oder Zeichen folgen das Ergebnis der Benutzerinteraktion sind, sollte der Kultur abhängige Zeichen folgen Vergleich verwendet werden, um die Zeichen folgen Daten zu sortieren.</span><span class="sxs-lookup"><span data-stu-id="dc25b-170">For example, if strings are displayed to the user, or if strings are the result of user interaction, culture-sensitive string comparison should be used to order the string data.</span></span>  
  
 <span data-ttu-id="dc25b-171">Die aktuelle Kultur ist das <xref:System.Globalization.CultureInfo> -Objekt, das dem aktuellen Thread zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="dc25b-171">The current culture is the <xref:System.Globalization.CultureInfo> object associated with the current thread.</span></span>  
  
 <span data-ttu-id="dc25b-172">Die <xref:System.StringComparer.CurrentCulture%2A> -Eigenschaft gibt tatsächlich eine Instanz einer anonymen Klasse zurück, die <xref:System.StringComparer> von der-Klasse abgeleitet wurde.</span><span class="sxs-lookup"><span data-stu-id="dc25b-172">The <xref:System.StringComparer.CurrentCulture%2A> property actually returns an instance of an anonymous class derived from the <xref:System.StringComparer> class.</span></span>  
  
 <span data-ttu-id="dc25b-173">Jeder Aufrufe der <xref:System.StringComparer.CurrentCulture%2A> -Eigenschafts `get` Zugriffsmethode gibt ein <xref:System.StringComparer> neues-Objekt zurück, wie im folgenden Code gezeigt.</span><span class="sxs-lookup"><span data-stu-id="dc25b-173">Each call to the <xref:System.StringComparer.CurrentCulture%2A> property `get` accessor returns a new <xref:System.StringComparer> object, as the following code shows.</span></span>  
  
 [!code-csharp[System.StringComparer.CurrentCulture#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.StringComparer.CurrentCulture/cs/CompareObjects.cs#1)]
 [!code-vb[System.StringComparer.CurrentCulture#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.StringComparer.CurrentCulture/vb/CompareObjects.vb#1)]  
  
 <span data-ttu-id="dc25b-174">Um die Leistung zu verbessern, können <xref:System.StringComparer> Sie das Objekt in einer lokalen Variablen speichern, anstatt den Wert <xref:System.StringComparer.CurrentCulture%2A> der Eigenschaft mehrmals abzurufen.</span><span class="sxs-lookup"><span data-stu-id="dc25b-174">To improve performance, you can store the <xref:System.StringComparer> object in a local variable rather than retrieve the value of the <xref:System.StringComparer.CurrentCulture%2A> property multiple times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc25b-175">Im folgenden Codebeispiel werden die-Eigenschaften und <xref:System.StringComparer.Create%2A> die-Methode <xref:System.StringComparer> der-Klasse veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="dc25b-175">The following code example demonstrates the properties and the <xref:System.StringComparer.Create%2A> method of the <xref:System.StringComparer> class.</span></span> <span data-ttu-id="dc25b-176">Das Beispiel veranschaulicht, wie <xref:System.StringComparer> unterschiedliche Objekte drei Versionen des lateinischen Buchstabens I sortieren.</span><span class="sxs-lookup"><span data-stu-id="dc25b-176">The example illustrates how different <xref:System.StringComparer> objects sort three versions of the Latin letter I.</span></span>  
  
 [!code-cpp[System.StringComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.StringComparer/cpp/omni.cpp#1)]
 [!code-csharp[System.StringComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.StringComparer/cs/omni.cs#1)]
 [!code-vb[System.StringComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.StringComparer/vb/omni.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/best-practices-strings.md"><span data-ttu-id="dc25b-177">Empfohlene Vorgehensweisen für die Verwendung von Zeichenfolgen in .NET</span><span class="sxs-lookup"><span data-stu-id="dc25b-177">Best Practices for Using Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CurrentCultureIgnoreCase">
      <MemberSignature Language="C#" Value="public static StringComparer CurrentCultureIgnoreCase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.StringComparer CurrentCultureIgnoreCase" />
      <MemberSignature Language="DocId" Value="P:System.StringComparer.CurrentCultureIgnoreCase" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentCultureIgnoreCase As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property StringComparer ^ CurrentCultureIgnoreCase { StringComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentCultureIgnoreCase : StringComparer" Usage="System.StringComparer.CurrentCultureIgnoreCase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc25b-178">Ruft ein <see cref="T:System.StringComparer" />-Objekt ab, das Zeichenfolgenvergleiche ohne Unterscheidung der Groß- und Kleinschreibung mit den Wortvergleichsregeln der aktuellen Kultur ausführt.</span><span class="sxs-lookup"><span data-stu-id="dc25b-178">Gets a <see cref="T:System.StringComparer" /> object that performs case-insensitive string comparisons using the word comparison rules of the current culture.</span></span></summary>
        <value><span data-ttu-id="dc25b-179">Ein neues-Objekt für den Zeichen folgen Vergleich.</span><span class="sxs-lookup"><span data-stu-id="dc25b-179">A new object for string comparison.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc25b-180">Die aktuelle Kultur ist das <xref:System.Globalization.CultureInfo> -Objekt, das mit dem aktuellen Thread verknüpft ist. es <xref:System.Globalization.CultureInfo.CurrentCulture?displayProperty=nameWithType> wird von der-Eigenschaft zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="dc25b-180">The current culture is the <xref:System.Globalization.CultureInfo> object associated with the current thread; it is returned by the <xref:System.Globalization.CultureInfo.CurrentCulture?displayProperty=nameWithType> property.</span></span>
  
 <span data-ttu-id="dc25b-181">Der <xref:System.StringComparer> von der <xref:System.StringComparer.CurrentCultureIgnoreCase%2A> -Eigenschaft zurückgegebene kann verwendet werden, wenn Zeichen folgen linguistisch relevant sind, die Groß-/Kleinschreibung jedoch nicht.</span><span class="sxs-lookup"><span data-stu-id="dc25b-181">The <xref:System.StringComparer> returned by the <xref:System.StringComparer.CurrentCultureIgnoreCase%2A> property can be used when strings are linguistically relevant but their case is not.</span></span> <span data-ttu-id="dc25b-182">Wenn z. b. Zeichen folgen für den Benutzer angezeigt werden, die Groß-/Kleinschreibung aber unerheblich ist, sollten Kultur abhängige Zeichen folgen Vergleiche ohne Berücksichtigung der Groß-/Kleinschreibung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="dc25b-182">For example, if strings are displayed to the user but case is unimportant, culture-sensitive, case-insensitive string comparison should be used to order the string data.</span></span>  

[!INCLUDE[platform-note](~/includes/c-and-posix-cultures.md)]  

 <span data-ttu-id="dc25b-183">Die <xref:System.StringComparer.CurrentCultureIgnoreCase%2A> -Eigenschaft gibt tatsächlich eine Instanz einer anonymen Klasse zurück, die <xref:System.StringComparer> von der-Klasse abgeleitet wurde.</span><span class="sxs-lookup"><span data-stu-id="dc25b-183">The <xref:System.StringComparer.CurrentCultureIgnoreCase%2A> property actually returns an instance of an anonymous class derived from the <xref:System.StringComparer> class.</span></span>  
  
 <span data-ttu-id="dc25b-184">Jeder Aufrufe der <xref:System.StringComparer.CurrentCultureIgnoreCase%2A> -Eigenschafts `get` Zugriffsmethode gibt ein <xref:System.StringComparer> neues-Objekt zurück, wie im folgenden Code gezeigt.</span><span class="sxs-lookup"><span data-stu-id="dc25b-184">Each call to the <xref:System.StringComparer.CurrentCultureIgnoreCase%2A> property `get` accessor returns a new <xref:System.StringComparer> object, as the following code shows.</span></span>  
  
 [!code-csharp[System.StringComparer.CurrentCulture#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.StringComparer.CurrentCulture/cs/CompareObjects.cs#2)]
 [!code-vb[System.StringComparer.CurrentCulture#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.StringComparer.CurrentCulture/vb/CompareObjects.vb#2)]  
  
 <span data-ttu-id="dc25b-185">Um die Leistung zu verbessern, können <xref:System.StringComparer> Sie das Objekt in einer lokalen Variablen speichern, anstatt den Wert <xref:System.StringComparer.CurrentCultureIgnoreCase%2A> der Eigenschaft mehrmals abzurufen.</span><span class="sxs-lookup"><span data-stu-id="dc25b-185">To improve performance, you can store the <xref:System.StringComparer> object in a local variable rather than retrieve the value of the <xref:System.StringComparer.CurrentCultureIgnoreCase%2A> property multiple times.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/best-practices-strings.md"><span data-ttu-id="dc25b-186">Empfohlene Vorgehensweisen für die Verwendung von Zeichenfolgen in .NET</span><span class="sxs-lookup"><span data-stu-id="dc25b-186">Best Practices for Using Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dc25b-187">Beim Überschreiben in einer abgeleiteten Klasse wird angegeben, ob zwei Objekte oder Zeichenfolgen gleich sind.</span><span class="sxs-lookup"><span data-stu-id="dc25b-187">When overridden in a derived class, indicates whether two objects or strings are equal.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.Equals(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (x As Object, y As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Object ^ x, System::Object ^ y);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj * obj -&gt; bool" Usage="stringComparer.Equals (x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEqualityComparer.Equals(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="y" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="dc25b-188">Ein mit <paramref name="y" /> zu vergleichendes Objekt.</span><span class="sxs-lookup"><span data-stu-id="dc25b-188">An object to compare to <paramref name="y" />.</span></span></param>
        <param name="y"><span data-ttu-id="dc25b-189">Ein mit <paramref name="x" /> zu vergleichendes Objekt.</span><span class="sxs-lookup"><span data-stu-id="dc25b-189">An object to compare to <paramref name="x" />.</span></span></param>
        <summary><span data-ttu-id="dc25b-190">Beim Überschreiben in einer abgeleiteten Klasse wird angegeben, ob zwei Objekte gleich sind.</span><span class="sxs-lookup"><span data-stu-id="dc25b-190">When overridden in a derived class, indicates whether two objects are equal.</span></span></summary>
        <returns><span data-ttu-id="dc25b-191"><see langword="true" />, wenn <paramref name="x" /> und <paramref name="y" /> auf dasselbe Objekt verweisen oder wenn <paramref name="x" /> und <paramref name="y" /> den gleichen Objekttyp aufweisen und diese Objekte gleich sind, oder wenn <paramref name="x" /> und <paramref name="y" /> gleich <see langword="null" /> sind; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dc25b-191"><see langword="true" /> if <paramref name="x" /> and <paramref name="y" /> refer to the same object, or <paramref name="x" /> and <paramref name="y" /> are both the same type of object and those objects are equal, or both <paramref name="x" /> and <paramref name="y" /> are <see langword="null" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc25b-192">Da die Laufzeit nicht in die `x` Box umgewandelt werden muss oder `y` wenn es sich um Werttypen handelt `x` oder `y` wenn es sich um Verweis Typen handelt, ist die <xref:System.StringComparer.Equals%28System.String%2CSystem.String%29> Methode möglicherweise etwas effizienter als die <xref:System.StringComparer.Equals%28System.Object%2CSystem.Object%29> -Methode.</span><span class="sxs-lookup"><span data-stu-id="dc25b-192">Because the runtime does not have to unbox `x` or `y` if they are value types or attempt to downcast `x` or `y` to strings if they are reference types, the <xref:System.StringComparer.Equals%28System.String%2CSystem.String%29> method may be slightly more efficient than the <xref:System.StringComparer.Equals%28System.Object%2CSystem.Object%29> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public abstract bool Equals (string x, string y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(string x, string y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.Equals(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Equals (x As String, y As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Equals(System::String ^ x, System::String ^ y);" />
      <MemberSignature Language="F#" Value="override this.Equals : string * string -&gt; bool" Usage="stringComparer.Equals (x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.String" />
        <Parameter Name="y" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="dc25b-193">Eine Zeichenfolge, die mit <paramref name="y" /> verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="dc25b-193">A string to compare to <paramref name="y" />.</span></span></param>
        <param name="y"><span data-ttu-id="dc25b-194">Eine Zeichenfolge, die mit <paramref name="x" /> verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="dc25b-194">A string to compare to <paramref name="x" />.</span></span></param>
        <summary><span data-ttu-id="dc25b-195">Beim Überschreiben in einer abgeleiteten Klasse wird angegeben, ob zwei Zeichenfolgen gleich sind.</span><span class="sxs-lookup"><span data-stu-id="dc25b-195">When overridden in a derived class, indicates whether two strings are equal.</span></span></summary>
        <returns><span data-ttu-id="dc25b-196"><see langword="true" />, wenn <paramref name="x" /> und <paramref name="y" /> auf dasselbe Objekt verweisen oder wenn <paramref name="x" /> und <paramref name="y" /> gleich sind, oder wenn <paramref name="x" /> und <paramref name="y" /> gleich <see langword="null" /> sind; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dc25b-196"><see langword="true" /> if <paramref name="x" /> and <paramref name="y" /> refer to the same object, or <paramref name="x" /> and <paramref name="y" /> are equal, or <paramref name="x" /> and <paramref name="y" /> are <see langword="null" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc25b-197">Da die Laufzeit nicht in die `x` Box umgewandelt werden muss oder `y` wenn es sich um Werttypen handelt `x` oder `y` wenn es sich um Verweis Typen handelt, ist die <xref:System.StringComparer.Equals%28System.String%2CSystem.String%29> Methode möglicherweise etwas effizienter als die <xref:System.StringComparer.Equals%28System.Object%2CSystem.Object%29> -Methode.</span><span class="sxs-lookup"><span data-stu-id="dc25b-197">Because the runtime does not have to unbox `x` or `y` if they are value types or attempt to downcast `x` or `y` to strings if they are reference types, the <xref:System.StringComparer.Equals%28System.String%2CSystem.String%29> method may be slightly more efficient than the <xref:System.StringComparer.Equals%28System.Object%2CSystem.Object%29> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromComparison">
      <MemberSignature Language="C#" Value="public static StringComparer FromComparison (StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.StringComparer FromComparison(valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.FromComparison(System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromComparison (comparisonType As StringComparison) As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static StringComparer ^ FromComparison(StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="static member FromComparison : StringComparison -&gt; StringComparer" Usage="System.StringComparer.FromComparison comparisonType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparisonType" Type="System.StringComparison" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="comparisonType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHashCode">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dc25b-198">Ruft beim Überschreiben in einer abgeleiteten Klasse den Hashcode für das aktuelle <see cref="T:System.StringComparer" />-Objekt ab.</span><span class="sxs-lookup"><span data-stu-id="dc25b-198">When overridden in a derived class, gets the hash code for the current <see cref="T:System.StringComparer" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.GetHashCode(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (obj As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetHashCode(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : obj -&gt; int" Usage="stringComparer.GetHashCode obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEqualityComparer.GetHashCode(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="dc25b-199">Ein Objekt.</span><span class="sxs-lookup"><span data-stu-id="dc25b-199">An object.</span></span></param>
        <summary><span data-ttu-id="dc25b-200">Ruft beim Überschreiben in einer abgeleiteten Klasse den Hashcode für das angegebene Objekt ab.</span><span class="sxs-lookup"><span data-stu-id="dc25b-200">When overridden in a derived class, gets the hash code for the specified object.</span></span></summary>
        <returns><span data-ttu-id="dc25b-201">Ein 32-Bit-Hashcode mit Vorzeichen, berechnet aus dem Wert des <paramref name="obj" />-Parameters.</span><span class="sxs-lookup"><span data-stu-id="dc25b-201">A 32-bit signed hash code calculated from the value of the <paramref name="obj" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc25b-202">Die <xref:System.StringComparer.GetHashCode%28System.String%29> -Methode ist effizienter als die <xref:System.StringComparer.GetHashCode%2A> -Methode, `obj` da der-Parameter nicht gekapselt werden muss, um den Vorgang auszuführen.</span><span class="sxs-lookup"><span data-stu-id="dc25b-202">The <xref:System.StringComparer.GetHashCode%28System.String%29> method is more efficient than the <xref:System.StringComparer.GetHashCode%2A> method because the `obj` parameter does not have to be unboxed to perform the operation.</span></span>  
  
 <span data-ttu-id="dc25b-203">Die <xref:System.StringComparer.GetHashCode%28System.Object%29> -Methode ordnet eine Menge an Arbeitsspeicher zu, die proportional zur Größe `obj` von ist, um den Hashcode zu `obj`berechnen.</span><span class="sxs-lookup"><span data-stu-id="dc25b-203">The <xref:System.StringComparer.GetHashCode%28System.Object%29> method allocates an amount of memory that is proportional to the size of `obj` to calculate the hash code of `obj`.</span></span> <span data-ttu-id="dc25b-204">Bei großen Zeichen folgen kann durch den Versuch, den Hashcode abzurufen, ein <xref:System.ArgumentException>ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="dc25b-204">In the case of large strings, trying to retrieve the hash code can throw an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="dc25b-205">Stattdessen können Sie einen alternativen Algorithmus verwenden, der eine festgelegte Menge an Arbeitsspeicher beim Berechnen von Hashcodes belegt.</span><span class="sxs-lookup"><span data-stu-id="dc25b-205">Instead, you can use an alternate algorithm that allocates a fixed amount of memory when calculating hash codes.</span></span> <span data-ttu-id="dc25b-206">Um diesen Algorithmus zu verwenden, fügen Sie das [< NetFx45_CultureAwareComparerGetHashCode_LongStrings >](~/docs/framework/configure-apps/file-schema/runtime/netfx45-cultureawarecomparergethashcode-longstrings-element.md) -Element dem [ \<Lauf Zeit >](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md) Abschnitt der Anwendungs Konfigurationsdatei hinzu.</span><span class="sxs-lookup"><span data-stu-id="dc25b-206">To use this algorithm, add the [<NetFx45_CultureAwareComparerGetHashCode_LongStrings>](~/docs/framework/configure-apps/file-schema/runtime/netfx45-cultureawarecomparergethashcode-longstrings-element.md) element to the [\<runtime>](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md) section of your application's configuration file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc25b-207">Nicht genug Arbeitsspeicher ist verfügbar, um den zur Berechnung des Hashcodes erforderlichen Puffer zuzuweisen.</span><span class="sxs-lookup"><span data-stu-id="dc25b-207">Not enough memory is available to allocate the buffer that is required to compute the hash code.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dc25b-208"><paramref name="obj" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="dc25b-208"><paramref name="obj" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public abstract int GetHashCode (string obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(string obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.GetHashCode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetHashCode (obj As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetHashCode(System::String ^ obj);" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : string -&gt; int" Usage="stringComparer.GetHashCode obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="dc25b-209">Eine Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="dc25b-209">A string.</span></span></param>
        <summary><span data-ttu-id="dc25b-210">Ruft beim Überschreiben in einer abgeleiteten Klasse den Hashcode für die angegebene Zeichenfolge ab.</span><span class="sxs-lookup"><span data-stu-id="dc25b-210">When overridden in a derived class, gets the hash code for the specified string.</span></span></summary>
        <returns><span data-ttu-id="dc25b-211">Ein 32-Bit-Hashcode mit Vorzeichen, berechnet aus dem Wert des <paramref name="obj" />-Parameters.</span><span class="sxs-lookup"><span data-stu-id="dc25b-211">A 32-bit signed hash code calculated from the value of the <paramref name="obj" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc25b-212">Die <xref:System.StringComparer.GetHashCode%28System.String%29> -Methode ist effizienter als die <xref:System.StringComparer.GetHashCode%28System.Object%29> -Methode, `obj` da der-Parameter nicht gekapselt werden muss, um den Vorgang auszuführen.</span><span class="sxs-lookup"><span data-stu-id="dc25b-212">The <xref:System.StringComparer.GetHashCode%28System.String%29> method is more efficient than the <xref:System.StringComparer.GetHashCode%28System.Object%29> method because the `obj` parameter does not have to be unboxed to perform the operation.</span></span>  
  
 <span data-ttu-id="dc25b-213">Die <xref:System.StringComparer.GetHashCode%28System.String%29> -Methode ordnet eine Menge an Arbeitsspeicher zu, die proportional zur Größe `obj` von ist, um den Hashcode zu `obj`berechnen.</span><span class="sxs-lookup"><span data-stu-id="dc25b-213">The <xref:System.StringComparer.GetHashCode%28System.String%29> method allocates an amount of memory that is proportional to the size of `obj` to calculate the hash code of `obj`.</span></span> <span data-ttu-id="dc25b-214">Bei großen Zeichen folgen kann durch den Versuch, den Hashcode abzurufen, ein <xref:System.ArgumentException>ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="dc25b-214">In the case of large strings, trying to retrieve the hash code can throw an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="dc25b-215">Stattdessen können Sie einen alternativen Algorithmus verwenden, der eine festgelegte Menge an Arbeitsspeicher beim Berechnen von Hashcodes belegt.</span><span class="sxs-lookup"><span data-stu-id="dc25b-215">Instead, you can use an alternate algorithm that allocates a fixed amount of memory when calculating hash codes.</span></span> <span data-ttu-id="dc25b-216">Um diesen Algorithmus zu verwenden, fügen Sie das [< NetFx45_CultureAwareComparerGetHashCode_LongStrings >](~/docs/framework/configure-apps/file-schema/runtime/netfx45-cultureawarecomparergethashcode-longstrings-element.md) -Element dem [ \<Lauf Zeit >](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md) Abschnitt der Anwendungs Konfigurationsdatei hinzu.</span><span class="sxs-lookup"><span data-stu-id="dc25b-216">To use this algorithm, add the [<NetFx45_CultureAwareComparerGetHashCode_LongStrings>](~/docs/framework/configure-apps/file-schema/runtime/netfx45-cultureawarecomparergethashcode-longstrings-element.md) element to the [\<runtime>](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md) section of your application's configuration file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc25b-217">Nicht genug Arbeitsspeicher ist verfügbar, um den zur Berechnung des Hashcodes erforderlichen Puffer zuzuweisen.</span><span class="sxs-lookup"><span data-stu-id="dc25b-217">Not enough memory is available to allocate the buffer that is required to compute the hash code.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dc25b-218"><paramref name="obj" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="dc25b-218"><paramref name="obj" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InvariantCulture">
      <MemberSignature Language="C#" Value="public static StringComparer InvariantCulture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.StringComparer InvariantCulture" />
      <MemberSignature Language="DocId" Value="P:System.StringComparer.InvariantCulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvariantCulture As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property StringComparer ^ InvariantCulture { StringComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InvariantCulture : StringComparer" Usage="System.StringComparer.InvariantCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc25b-219">Ruft ein <see cref="T:System.StringComparer" />-Objekt ab, das mit den Wortvergleichsregeln der invarianten Kultur einen Zeichenfolgenvergleich mit Berücksichtigung von Groß- und Kleinschreibung ausführt.</span><span class="sxs-lookup"><span data-stu-id="dc25b-219">Gets a <see cref="T:System.StringComparer" /> object that performs a case-sensitive string comparison using the word comparison rules of the invariant culture.</span></span></summary>
        <value><span data-ttu-id="dc25b-220">Ein neues <see cref="T:System.StringComparer" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="dc25b-220">A new <see cref="T:System.StringComparer" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc25b-221">Der <xref:System.StringComparer> von der <xref:System.StringComparer.InvariantCulture%2A> -Eigenschaft zurückgegebene vergleicht Zeichen folgen auf linguistisch relevante Weise, ist aber nicht für die Anzeige in einer bestimmten Kultur geeignet.</span><span class="sxs-lookup"><span data-stu-id="dc25b-221">The <xref:System.StringComparer> returned by the <xref:System.StringComparer.InvariantCulture%2A> property compares strings in a linguistically relevant manner, but it is not suitable for display in any particular culture.</span></span> <span data-ttu-id="dc25b-222">Die Hauptanwendung besteht darin, Zeichen folgen auf eine Weise zu ordnen, die zwischen Kulturen identisch ist.</span><span class="sxs-lookup"><span data-stu-id="dc25b-222">Its major application is to order strings in a way that will be identical across cultures.</span></span>  
  
 <span data-ttu-id="dc25b-223">Die invariante Kultur ist das <xref:System.Globalization.CultureInfo> Objekt, das von <xref:System.Globalization.CultureInfo.InvariantCulture%2A> der-Eigenschaft zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="dc25b-223">The invariant culture is the <xref:System.Globalization.CultureInfo> object returned by the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property.</span></span>  
  
 <span data-ttu-id="dc25b-224">Die <xref:System.StringComparer.InvariantCulture%2A> -Eigenschaft gibt tatsächlich eine Instanz einer anonymen Klasse zurück, die <xref:System.StringComparer> von der-Klasse abgeleitet wurde.</span><span class="sxs-lookup"><span data-stu-id="dc25b-224">The <xref:System.StringComparer.InvariantCulture%2A> property actually returns an instance of an anonymous class derived from the <xref:System.StringComparer> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc25b-225">Im folgenden Codebeispiel werden die-Eigenschaften und <xref:System.StringComparer.Create%2A> die-Methode <xref:System.StringComparer> der-Klasse veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="dc25b-225">The following code example demonstrates the properties and the <xref:System.StringComparer.Create%2A> method of the <xref:System.StringComparer> class.</span></span> <span data-ttu-id="dc25b-226">Das Beispiel veranschaulicht, wie <xref:System.StringComparer> unterschiedliche Objekte drei Versionen des lateinischen Buchstabens I sortieren.</span><span class="sxs-lookup"><span data-stu-id="dc25b-226">The example illustrates how different <xref:System.StringComparer> objects sort three versions of the Latin letter I.</span></span>  
  
 [!code-cpp[System.StringComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.StringComparer/cpp/omni.cpp#1)]
 [!code-csharp[System.StringComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.StringComparer/cs/omni.cs#1)]
 [!code-vb[System.StringComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.StringComparer/vb/omni.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/best-practices-strings.md"><span data-ttu-id="dc25b-227">Empfohlene Vorgehensweisen für die Verwendung von Zeichenfolgen in .NET</span><span class="sxs-lookup"><span data-stu-id="dc25b-227">Best Practices for Using Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InvariantCultureIgnoreCase">
      <MemberSignature Language="C#" Value="public static StringComparer InvariantCultureIgnoreCase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.StringComparer InvariantCultureIgnoreCase" />
      <MemberSignature Language="DocId" Value="P:System.StringComparer.InvariantCultureIgnoreCase" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvariantCultureIgnoreCase As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property StringComparer ^ InvariantCultureIgnoreCase { StringComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InvariantCultureIgnoreCase : StringComparer" Usage="System.StringComparer.InvariantCultureIgnoreCase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc25b-228">Ruft ein <see cref="T:System.StringComparer" />-Objekt ab, das mit den Wortvergleichsregeln der invarianten Kultur einen Zeichenfolgenvergleich ohne Berücksichtigung von Groß- und Kleinschreibung ausführt.</span><span class="sxs-lookup"><span data-stu-id="dc25b-228">Gets a <see cref="T:System.StringComparer" /> object that performs a case-insensitive string comparison using the word comparison rules of the invariant culture.</span></span></summary>
        <value><span data-ttu-id="dc25b-229">Ein neues <see cref="T:System.StringComparer" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="dc25b-229">A new <see cref="T:System.StringComparer" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc25b-230">Der <xref:System.StringComparer> von der <xref:System.StringComparer.InvariantCultureIgnoreCase%2A> -Eigenschaft zurückgegebene vergleicht Zeichen folgen in linguistisch relevanter Weise, die die Groß-/Kleinschreibung ignoriert, Sie ist jedoch nicht für die Anzeige in einer bestimmten Kultur geeignet.</span><span class="sxs-lookup"><span data-stu-id="dc25b-230">The <xref:System.StringComparer> returned by the <xref:System.StringComparer.InvariantCultureIgnoreCase%2A> property compares strings in a linguistically relevant manner that ignores case, but it is not suitable for display in any particular culture.</span></span> <span data-ttu-id="dc25b-231">Die Hauptanwendung besteht darin, Zeichen folgen auf eine Weise zu ordnen, die zwischen Kulturen identisch ist.</span><span class="sxs-lookup"><span data-stu-id="dc25b-231">Its major application is to order strings in a way that will be identical across cultures.</span></span>  
  
 <span data-ttu-id="dc25b-232">Die invariante Kultur ist das <xref:System.Globalization.CultureInfo> Objekt, das von <xref:System.Globalization.CultureInfo.InvariantCulture%2A> der-Eigenschaft zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="dc25b-232">The invariant culture is the <xref:System.Globalization.CultureInfo> object returned by the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property.</span></span>  
  
 <span data-ttu-id="dc25b-233">Die <xref:System.StringComparer.InvariantCultureIgnoreCase%2A> -Eigenschaft gibt tatsächlich eine Instanz einer anonymen Klasse zurück, die <xref:System.StringComparer> von der-Klasse abgeleitet wurde.</span><span class="sxs-lookup"><span data-stu-id="dc25b-233">The <xref:System.StringComparer.InvariantCultureIgnoreCase%2A> property actually returns an instance of an anonymous class derived from the <xref:System.StringComparer> class.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/best-practices-strings.md"><span data-ttu-id="dc25b-234">Empfohlene Vorgehensweisen für die Verwendung von Zeichenfolgen in .NET</span><span class="sxs-lookup"><span data-stu-id="dc25b-234">Best Practices for Using Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Ordinal">
      <MemberSignature Language="C#" Value="public static StringComparer Ordinal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.StringComparer Ordinal" />
      <MemberSignature Language="DocId" Value="P:System.StringComparer.Ordinal" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Ordinal As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property StringComparer ^ Ordinal { StringComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Ordinal : StringComparer" Usage="System.StringComparer.Ordinal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc25b-235">Ruft ein <see cref="T:System.StringComparer" />-Objekt ab, das einen Ordinalzeichenfolgenvergleich mit Berücksichtigung der Groß- und Kleinschreibung ausführt.</span><span class="sxs-lookup"><span data-stu-id="dc25b-235">Gets a <see cref="T:System.StringComparer" /> object that performs a case-sensitive ordinal string comparison.</span></span></summary>
        <value><span data-ttu-id="dc25b-236">Ein <see cref="T:System.StringComparer" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="dc25b-236">A <see cref="T:System.StringComparer" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc25b-237">Der <xref:System.StringComparer> von der <xref:System.StringComparer.Ordinal%2A> -Eigenschaft zurückgegebene führt einen einfachen Byte Vergleich durch, der unabhängig von der Sprache ist.</span><span class="sxs-lookup"><span data-stu-id="dc25b-237">The <xref:System.StringComparer> returned by the <xref:System.StringComparer.Ordinal%2A> property performs a simple byte comparison that is independent of language.</span></span> <span data-ttu-id="dc25b-238">Dies ist am besten geeignet, wenn Zeichen folgen verglichen werden, die Programm gesteuert generiert werden, oder wenn die Groß-/Kleinschreibung beachtet werden soll.</span><span class="sxs-lookup"><span data-stu-id="dc25b-238">This is most appropriate when comparing strings that are generated programmatically or when comparing case-sensitive resources such as passwords.</span></span>  
  
 <span data-ttu-id="dc25b-239">Die <xref:System.StringComparer.Ordinal%2A> -Eigenschaft gibt tatsächlich eine Instanz einer anonymen Klasse zurück, die <xref:System.StringComparer> von der-Klasse abgeleitet wurde.</span><span class="sxs-lookup"><span data-stu-id="dc25b-239">The <xref:System.StringComparer.Ordinal%2A> property actually returns an instance of an anonymous class derived from the <xref:System.StringComparer> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc25b-240">Im folgenden Codebeispiel werden die-Eigenschaften und <xref:System.StringComparer.Create%2A> die-Methode <xref:System.StringComparer> der-Klasse veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="dc25b-240">The following code example demonstrates the properties and the <xref:System.StringComparer.Create%2A> method of the <xref:System.StringComparer> class.</span></span> <span data-ttu-id="dc25b-241">Das Beispiel veranschaulicht, wie <xref:System.StringComparer> unterschiedliche Objekte drei Versionen des lateinischen Buchstabens I sortieren.</span><span class="sxs-lookup"><span data-stu-id="dc25b-241">The example illustrates how different <xref:System.StringComparer> objects sort three versions of the Latin letter I.</span></span>  
  
 [!code-cpp[System.StringComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.StringComparer/cpp/omni.cpp#1)]
 [!code-csharp[System.StringComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.StringComparer/cs/omni.cs#1)]
 [!code-vb[System.StringComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.StringComparer/vb/omni.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/best-practices-strings.md"><span data-ttu-id="dc25b-242">Empfohlene Vorgehensweisen für die Verwendung von Zeichenfolgen in .NET</span><span class="sxs-lookup"><span data-stu-id="dc25b-242">Best Practices for Using Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OrdinalIgnoreCase">
      <MemberSignature Language="C#" Value="public static StringComparer OrdinalIgnoreCase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.StringComparer OrdinalIgnoreCase" />
      <MemberSignature Language="DocId" Value="P:System.StringComparer.OrdinalIgnoreCase" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property OrdinalIgnoreCase As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property StringComparer ^ OrdinalIgnoreCase { StringComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OrdinalIgnoreCase : StringComparer" Usage="System.StringComparer.OrdinalIgnoreCase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc25b-243">Ruft ein <see cref="T:System.StringComparer" />-Objekt ab, das einen Ordinalzeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung ausführt.</span><span class="sxs-lookup"><span data-stu-id="dc25b-243">Gets a <see cref="T:System.StringComparer" /> object that performs a case-insensitive ordinal string comparison.</span></span></summary>
        <value><span data-ttu-id="dc25b-244">Ein <see cref="T:System.StringComparer" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="dc25b-244">A <see cref="T:System.StringComparer" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc25b-245">Der <xref:System.StringComparer> von der <xref:System.StringComparer.OrdinalIgnoreCase%2A> -Eigenschaft zurückgegebene behandelt die Zeichen in den Zeichen folgen, die mit den Konventionen der invarianten Kultur in Großbuchstaben konvertiert wurden, und führt dann einen einfachen Byte Vergleich durch, der unabhängig von Kurse.</span><span class="sxs-lookup"><span data-stu-id="dc25b-245">The <xref:System.StringComparer> returned by the <xref:System.StringComparer.OrdinalIgnoreCase%2A> property treats the characters in the strings to compare as if they were converted to uppercase using the conventions of the invariant culture, and then performs a simple byte comparison that is independent of language.</span></span> <span data-ttu-id="dc25b-246">Dies eignet sich am besten für den Vergleich von Zeichen folgen, die Programm gesteuert generiert werden, oder beim Vergleich von Ressourcen ohne Berücksichtigung von Groß-und Kleinschreibung.</span><span class="sxs-lookup"><span data-stu-id="dc25b-246">This is most appropriate when comparing strings that are generated programmatically or when comparing case-insensitive resources such as paths and filenames.</span></span>  
  
 <span data-ttu-id="dc25b-247">Die <xref:System.StringComparer.OrdinalIgnoreCase%2A> -Eigenschaft gibt tatsächlich eine Instanz einer anonymen Klasse zurück, die <xref:System.StringComparer> von der-Klasse abgeleitet wurde.</span><span class="sxs-lookup"><span data-stu-id="dc25b-247">The <xref:System.StringComparer.OrdinalIgnoreCase%2A> property actually returns an instance of an anonymous class derived from the <xref:System.StringComparer> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc25b-248">Im folgenden Codebeispiel werden die-Eigenschaften und <xref:System.StringComparer.Create%2A> die-Methode <xref:System.StringComparer> der-Klasse veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="dc25b-248">The following code example demonstrates the properties and the <xref:System.StringComparer.Create%2A> method of the <xref:System.StringComparer> class.</span></span> <span data-ttu-id="dc25b-249">Das Beispiel veranschaulicht, wie <xref:System.StringComparer> unterschiedliche Objekte drei Versionen des lateinischen Buchstabens I sortieren.</span><span class="sxs-lookup"><span data-stu-id="dc25b-249">The example illustrates how different <xref:System.StringComparer> objects sort three versions of the Latin letter I.</span></span>  
  
 [!code-cpp[System.StringComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.StringComparer/cpp/omni.cpp#1)]
 [!code-csharp[System.StringComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.StringComparer/cs/omni.cs#1)]
 [!code-vb[System.StringComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.StringComparer/vb/omni.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/best-practices-strings.md"><span data-ttu-id="dc25b-250">Empfohlene Vorgehensweisen für die Verwendung von Zeichenfolgen in .NET</span><span class="sxs-lookup"><span data-stu-id="dc25b-250">Best Practices for Using Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IComparer.Compare">
      <MemberSignature Language="C#" Value="int IComparer.Compare (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IComparer.Compare(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.System#Collections#IComparer#Compare(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Compare (x As Object, y As Object) As Integer Implements IComparer.Compare" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IComparer.Compare(System::Object ^ x, System::Object ^ y) = System::Collections::IComparer::Compare;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IComparer.Compare(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
        <Parameter Name="y" Type="System.Object" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEqualityComparer.Equals">
      <MemberSignature Language="C#" Value="bool IEqualityComparer.Equals (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IEqualityComparer.Equals(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (x As Object, y As Object) As Boolean Implements IEqualityComparer.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IEqualityComparer.Equals(System::Object ^ x, System::Object ^ y) = System::Collections::IEqualityComparer::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEqualityComparer.Equals(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.1" />
        <Parameter Name="y" Type="System.Object" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEqualityComparer.GetHashCode">
      <MemberSignature Language="C#" Value="int IEqualityComparer.GetHashCode (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IEqualityComparer.GetHashCode(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.System#Collections#IEqualityComparer#GetHashCode(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (obj As Object) As Integer Implements IEqualityComparer.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IEqualityComparer.GetHashCode(System::Object ^ obj) = System::Collections::IEqualityComparer::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEqualityComparer.GetHashCode(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
