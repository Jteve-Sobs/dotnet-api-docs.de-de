<Type Name="CrossAppDomainDelegate" FullName="System.CrossAppDomainDelegate">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7bf8c80092714d9503bf1ce2ae71378b89835e14" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void CrossAppDomainDelegate();" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed CrossAppDomainDelegate extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.CrossAppDomainDelegate" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub CrossAppDomainDelegate()" />
  <TypeSignature Language="C++ CLI" Value="public delegate void CrossAppDomainDelegate();" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters />
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <summary>
      <span data-ttu-id="0bfd6-101">Von <see cref="M:System.AppDomain.DoCallBack(System.CrossAppDomainDelegate)" /> für anwendungsübergreifende Domänenaufrufe verwendet.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0bfd6-101">Used by <see cref="M:System.AppDomain.DoCallBack(System.CrossAppDomainDelegate)" /> for cross-application domain calls.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bfd6-102">Alle abgeleiteten Klassen von <xref:System.Delegate> und <xref:System.MulticastDelegate> verfügt über einen Konstruktor und eine `Invoke` Methode.</span><span class="sxs-lookup"><span data-stu-id="0bfd6-102">Every derived class of <xref:System.Delegate> and <xref:System.MulticastDelegate> has a constructor and an `Invoke` method.</span></span> <span data-ttu-id="0bfd6-103">Finden Sie im C++-Codebeispiel in die Beschreibung für den angegebenen <xref:System.Delegate>.</span><span class="sxs-lookup"><span data-stu-id="0bfd6-103">See the C++ code example given in the description for <xref:System.Delegate>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>