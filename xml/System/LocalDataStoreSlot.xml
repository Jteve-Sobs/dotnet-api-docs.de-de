<Type Name="LocalDataStoreSlot" FullName="System.LocalDataStoreSlot">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="62e95731f3daf201a4fa15d552b9195eba494808" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39853417" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class LocalDataStoreSlot" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LocalDataStoreSlot extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.LocalDataStoreSlot" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LocalDataStoreSlot" />
  <TypeSignature Language="C++ CLI" Value="public ref class LocalDataStoreSlot sealed" />
  <TypeSignature Language="F#" Value="type LocalDataStoreSlot = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Threading.Thread</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Kapselt einen Speicherslot zum Speichern lokaler Daten. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework bietet zwei Mechanismen für die Verwendung von lokalen Threadspeicher (TLS): threadbezogene statische Felder und Datenslots.  
  
-   Threadbezogene statische Felder sind `static` Felder (`Shared` -Felder in Visual Basic) gekennzeichnet sind mit den <xref:System.ThreadStaticAttribute> Attribut. Sie bieten eine bessere Leistung als Datenslots und typüberprüfung zur Kompilierzeit zu aktivieren.  
  
-   Datenslots sind langsamer und umständlicher zu verwenden als threadbezogene statische Felder. Außerdem werden Daten gespeichert, als Typ <xref:System.Object>, sodass Sie sie in den richtigen Typ umwandeln müssen, bevor Sie ihn verwenden. Allerdings können Sie Datenslots, wenn Sie nicht genügend Informationen zum Zeitpunkt der Kompilierung, statische Felder zuordnen verfügen.  
  
 Weitere Informationen zur Verwendung von TLS finden Sie unter [Thread-lokalen Speicher: threadbezogene statische Felder und Datenslots](~/docs/standard/threading/thread-local-storage-thread-relative-static-fields-and-data-slots.md).  
  
 Auf ähnliche Weise, die .NET Framework bietet zwei Mechanismen für die Verwendung lokaler Speicherkapazität Kontext: Kontextbezogene statische Felder und Datenslots. Kontextbezogene statische Felder sind statische Felder, die mit markiert sind die <xref:System.ContextStaticAttribute> Attribut. Die Kompromisse zwischen diesen beiden Mechanismen ähneln die vor-und Nachteile zwischen der Verwendung von threadbezogene statische Felder und Datenslots.  
  
 Die <xref:System.LocalDataStoreSlot> Struktur dient als lokales Speichern von Speichermechanismus, mit dem threads und Kontexte, Thread-spezifische und kontextspezifische Daten bzw. zu speichern. Die common Language Runtime ordnet ein Array mit mehreren Slot Data Store jeder Prozess, bei der Erstellung. Der Thread oder Kontext ruft verschiedene Funktionen, die einen Datenslot im Datenspeicher zuordnen, um zu speichern und Abrufen eines Datenwerts für die im Slot und einen Datenslot für kostenlose auch wiederverwenden, wenn das Objekt Thread oder Kontext läuft ab.  
  
 Datenslots sind für jeden Thread oder Kontext; die Werte werden zwischen den Objekten Thread oder Kontext nicht freigegeben. Datenslots können mit einem Namen oder Indexnummer zugeordnet werden.  
  
 Weitere Informationen zum Speichern von lokalen Daten finden Sie unter <xref:System.Threading.Thread> oder <xref:System.Runtime.Remoting.Contexts.Context>. Die <xref:System.LocalDataStoreSlot> -Klasse wird zusammen mit Methoden wie z. B. <xref:System.Threading.Thread.AllocateNamedDataSlot%2A?displayProperty=nameWithType>, <xref:System.Runtime.Remoting.Contexts.Context.AllocateNamedDataSlot%2A?displayProperty=nameWithType>, <xref:System.Threading.Thread.GetData%2A?displayProperty=nameWithType>, und <xref:System.Runtime.Remoting.Contexts.Context.GetData%2A?displayProperty=nameWithType>; es besitzt keine Methoden einen eigenen, die Sie verwenden müssen.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.Thread" />
    <altmember cref="T:System.Runtime.Remoting.Contexts.Context" />
  </Docs>
  <Members>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~LocalDataStoreSlot ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.LocalDataStoreSlot.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!LocalDataStoreSlot ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="localDataStoreSlot.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stellt das Freigeben von Ressourcen und das Ausführen anderer Garbage Collector-Vorgänge sicher, wenn der Garbage Collector das <see cref="T:System.LocalDataStoreSlot" />-Objekt verarbeitet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Garbage Collector ruft <xref:System.LocalDataStoreSlot.Finalize%2A> Wenn das aktuelle Objekt wird finalisiert werden.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Finalize" />
      </Docs>
    </Member>
  </Members>
</Type>