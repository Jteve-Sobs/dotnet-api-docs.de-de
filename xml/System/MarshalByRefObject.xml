<Type Name="MarshalByRefObject" FullName="System.MarshalByRefObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b17ba4aedfbad5c91789b6da58437674b338c5ef" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83476684" /></Metadata><TypeSignature Language="C#" Value="public abstract class MarshalByRefObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MarshalByRefObject extends System.Object" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.MarshalByRefObject" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MarshalByRefObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class MarshalByRefObject abstract" />
  <TypeSignature Language="F#" Value="type MarshalByRefObject = class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit MarshalByRefObject extends System.Object" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi abstract serializable beforefieldinit MarshalByRefObject extends System.Object" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="fe975-101">Ermöglicht den Zugriff auf Objekte über Anwendungsdomänen hinweg in Anwendungen, die Remoting unterstützen.</span><span class="sxs-lookup"><span data-stu-id="fe975-101">Enables access to objects across application domain boundaries in applications that support remoting.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe975-102">Eine Anwendungsdomäne ist eine Partition in einem Betriebssystem Prozess, in der sich eine oder mehrere Anwendungen befinden.</span><span class="sxs-lookup"><span data-stu-id="fe975-102">An application domain is a partition in an operating system process where one or more applications reside.</span></span> <span data-ttu-id="fe975-103">Objekte in derselben Anwendungsdomäne kommunizieren direkt.</span><span class="sxs-lookup"><span data-stu-id="fe975-103">Objects in the same application domain communicate directly.</span></span> <span data-ttu-id="fe975-104">Objekte in verschiedenen Anwendungs Domänen kommunizieren entweder durch den Transport von Kopien von Objekten über Anwendungs Domänen Grenzen hinweg oder durch die Verwendung eines Proxys zum Austauschen von Nachrichten.</span><span class="sxs-lookup"><span data-stu-id="fe975-104">Objects in different application domains communicate either by transporting copies of objects across application domain boundaries, or by using a proxy to exchange messages.</span></span>  
  
 <span data-ttu-id="fe975-105"><xref:System.MarshalByRefObject> ist die Basisklasse für Objekte, die über Anwendungs Domänen Grenzen hinweg kommunizieren, indem Nachrichten mithilfe eines Proxys ausgetauscht werden.</span><span class="sxs-lookup"><span data-stu-id="fe975-105"><xref:System.MarshalByRefObject> is the base class for objects that communicate across application domain boundaries by exchanging messages using a proxy.</span></span> <span data-ttu-id="fe975-106">Objekte, die nicht von <xref:System.MarshalByRefObject> erben, werden implizit nach Wert marshallt.</span><span class="sxs-lookup"><span data-stu-id="fe975-106">Objects that do not inherit from <xref:System.MarshalByRefObject> are implicitly marshal by value.</span></span> <span data-ttu-id="fe975-107">Wenn eine Remote Anwendung auf einen Marshal durch ein Wertobjekt verweist, wird eine Kopie des Objekts über Anwendungs Domänen Grenzen hinweg übermittelt.</span><span class="sxs-lookup"><span data-stu-id="fe975-107">When a remote application references a marshal by value object, a copy of the object is passed across application domain boundaries.</span></span>  
  
 <span data-ttu-id="fe975-108">der Zugriff auf <xref:System.MarshalByRefObject> Objekte erfolgt direkt innerhalb der Grenzen der lokalen Anwendungsdomäne.</span><span class="sxs-lookup"><span data-stu-id="fe975-108"><xref:System.MarshalByRefObject> objects are accessed directly within the boundaries of the local application domain.</span></span> <span data-ttu-id="fe975-109">Wenn eine Anwendung in einer Remote Anwendungsdomäne zum ersten Mal auf eine <xref:System.MarshalByRefObject>zugreift, wird ein Proxy an die Remote Anwendung weitergegeben.</span><span class="sxs-lookup"><span data-stu-id="fe975-109">The first time an application in a remote application domain accesses a <xref:System.MarshalByRefObject>, a proxy is passed to the remote application.</span></span> <span data-ttu-id="fe975-110">Nachfolgende Aufrufe des Proxys werden an das Objekt zurück gemarshallt, das sich in der lokalen Anwendungsdomäne befindet.</span><span class="sxs-lookup"><span data-stu-id="fe975-110">Subsequent calls on the proxy are marshaled back to the object residing in the local application domain.</span></span>  
  
 <span data-ttu-id="fe975-111">Typen müssen von <xref:System.MarshalByRefObject> erben, wenn der Typ über Anwendungs Domänen Grenzen hinweg verwendet wird, und der Status des Objekts darf nicht kopiert werden, da die Member des Objekts außerhalb der Anwendungsdomäne, in der Sie erstellt wurden, nicht verwendet werden können.</span><span class="sxs-lookup"><span data-stu-id="fe975-111">Types must inherit from <xref:System.MarshalByRefObject> when the type is used across application domain boundaries, and the state of the object must not be copied because the members of the object are not usable outside the application domain where they were created.</span></span>  
  
 <span data-ttu-id="fe975-112">Wenn Sie ein Objekt aus <xref:System.MarshalByRefObject> ableiten, um Anwendungs Domänen übergreifend zu verwenden, sollten Sie keines der zugehörigen Member überschreiben, und Sie sollten die Methoden nicht direkt aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="fe975-112">When you derive an object from <xref:System.MarshalByRefObject> for use across application domain boundaries, you should not override any of its members, nor should you call its methods directly.</span></span> <span data-ttu-id="fe975-113">Die Laufzeit erkennt, dass von <xref:System.MarshalByRefObject> abgeleitete Klassen über APP-Domänen Grenzen hinweg gemarshallt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="fe975-113">The runtime recognizes that classes derived from  <xref:System.MarshalByRefObject> should be marshaled across app domain boundaries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe975-114">Dieser Abschnitt enthält zwei Codebeispiele.</span><span class="sxs-lookup"><span data-stu-id="fe975-114">This section contains two code examples.</span></span> <span data-ttu-id="fe975-115">Im ersten Codebeispiel wird gezeigt, wie eine Instanz einer Klasse in einer anderen Anwendungsdomäne erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="fe975-115">The first code example shows how to create an instance of a class in another application domain.</span></span> <span data-ttu-id="fe975-116">Das zweite Codebeispiel zeigt eine einfache Klasse, die für Remoting verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="fe975-116">The second code example shows a simple class that can be used for remoting.</span></span>  
  
 <span data-ttu-id="fe975-117">**Beispiel 1**</span><span class="sxs-lookup"><span data-stu-id="fe975-117">**Example 1**</span></span>  
  
 <span data-ttu-id="fe975-118">Das folgende Codebeispiel zeigt die einfachste Methode zum Ausführen von Code in einer anderen Anwendungsdomäne.</span><span class="sxs-lookup"><span data-stu-id="fe975-118">The following code example shows the simplest way to execute code in another application domain.</span></span> <span data-ttu-id="fe975-119">Das Beispiel definiert eine Klasse mit dem Namen `Worker`, die <xref:System.MarshalByRefObject>erbt, mit einer-Methode, die den Namen der Anwendungsdomäne anzeigt, in der Sie ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="fe975-119">The example defines a class named `Worker` that inherits <xref:System.MarshalByRefObject>, with a method that displays the name of the application domain in which it is executing.</span></span> <span data-ttu-id="fe975-120">Im Beispiel werden Instanzen von `Worker` in der Standard Anwendungsdomäne und in einer neuen Anwendungsdomäne erstellt.</span><span class="sxs-lookup"><span data-stu-id="fe975-120">The example creates instances of `Worker` in the default application domain and in a new application domain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fe975-121">Die Assembly, die `Worker` enthält, muss in beide Anwendungs Domänen geladen werden. es können jedoch auch andere Assemblys geladen werden, die nur in der neuen Anwendungsdomäne vorhanden wären.</span><span class="sxs-lookup"><span data-stu-id="fe975-121">The assembly that contains `Worker` must be loaded into both application domains, but it could load other assemblies that would exist only in the new application domain.</span></span>  
  
 [!code-cpp[CreateInstanceAndUnwrap2#1](~/samples/snippets/cpp/VS_Snippets_CLR/CreateInstanceAndUnwrap2/cpp/source.cpp#1)]
 [!code-csharp[CreateInstanceAndUnwrap2#1](~/samples/snippets/csharp/VS_Snippets_CLR/CreateInstanceAndUnwrap2/cs/source.cs#1)]
 [!code-vb[CreateInstanceAndUnwrap2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CreateInstanceAndUnwrap2/VB/source.vb#1)]  
  
 <span data-ttu-id="fe975-122">**Beispiel 2**</span><span class="sxs-lookup"><span data-stu-id="fe975-122">**Example 2**</span></span>  
  
 <span data-ttu-id="fe975-123">Im folgenden Beispiel wird eine Klasse veranschaulicht, die von <xref:System.MarshalByRefObject> abgeleitet wurde, die später in Remoting verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="fe975-123">The following example demonstrates a class derived from <xref:System.MarshalByRefObject> that is used later in remoting.</span></span>  
  
 [!code-cpp[RemotingServices.SetObjectUriForMarshal#1](~/samples/snippets/cpp/VS_Snippets_CLR/RemotingServices.SetObjectUriForMarshal/CPP/source.cpp#1)]
 [!code-csharp[RemotingServices.SetObjectUriForMarshal#1](~/samples/snippets/csharp/VS_Snippets_CLR/RemotingServices.SetObjectUriForMarshal/CS/source.cs#1)]
 [!code-vb[RemotingServices.SetObjectUriForMarshal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RemotingServices.SetObjectUriForMarshal/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MarshalByRefObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MarshalByRefObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MarshalByRefObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fe975-124">Initialisiert eine neue Instanz der Klasse <see cref="T:System.MarshalByRefObject" />.</span><span class="sxs-lookup"><span data-stu-id="fe975-124">Initializes a new instance of the <see cref="T:System.MarshalByRefObject" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateObjRef">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Remoting.ObjRef CreateObjRef (Type requestedType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.ObjRef CreateObjRef(class System.Type requestedType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateObjRef (requestedType As Type) As ObjRef" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::ObjRef ^ CreateObjRef(Type ^ requestedType);" />
      <MemberSignature Language="F#" Value="abstract member CreateObjRef : Type -&gt; System.Runtime.Remoting.ObjRef&#xA;override this.CreateObjRef : Type -&gt; System.Runtime.Remoting.ObjRef" Usage="marshalByRefObject.CreateObjRef requestedType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjRef</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestedType" Type="System.Type" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="requestedType"><span data-ttu-id="fe975-125">Der <see cref="T:System.Type" /> des Objekts, auf das der neue <see cref="T:System.Runtime.Remoting.ObjRef" /> verweist.</span><span class="sxs-lookup"><span data-stu-id="fe975-125">The <see cref="T:System.Type" /> of the object that the new <see cref="T:System.Runtime.Remoting.ObjRef" /> will reference.</span></span></param>
        <summary><span data-ttu-id="fe975-126">Erstellt ein Objekt mit allen relevanten Informationen, die zum Generieren eines Proxys für die Kommunikation mit einem Remoteobjekt erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="fe975-126">Creates an object that contains all the relevant information required to generate a proxy used to communicate with a remote object.</span></span></summary>
        <returns><span data-ttu-id="fe975-127">Zum Generieren eines Proxys erforderliche Informationen.</span><span class="sxs-lookup"><span data-stu-id="fe975-127">Information required to generate a proxy.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe975-128">Die <xref:System.MarshalByRefObject.CreateObjRef%2A>-Methode wird von Methoden für das Erstellen von Remote Objekten aufgerufen, z. b. <xref:System.AppDomain.CreateInstance%2A?displayProperty=nameWithType> und <xref:System.AppDomain.CreateInstanceAndUnwrap%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="fe975-128">The <xref:System.MarshalByRefObject.CreateObjRef%2A> method is called by remote object creation methods such as <xref:System.AppDomain.CreateInstance%2A?displayProperty=nameWithType> and <xref:System.AppDomain.CreateInstanceAndUnwrap%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="fe975-129">In den meisten Fällen ist es nicht erforderlich, diese Methode außer Kraft zu setzen.</span><span class="sxs-lookup"><span data-stu-id="fe975-129">In most cases, there is no need to override this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Remoting.RemotingException"><span data-ttu-id="fe975-130">Diese Instanz ist kein gültiges Remoteobjekt.</span><span class="sxs-lookup"><span data-stu-id="fe975-130">This instance is not a valid remoting object.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fe975-131">Der direkte Aufrufer verfügt nicht über die Berechtigung für die Infrastruktur.</span><span class="sxs-lookup"><span data-stu-id="fe975-131">The immediate caller does not have infrastructure permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetLifetimeService">
      <MemberSignature Language="C#" Value="public object GetLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetLifetimeService() cil managed" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8" />
      <MemberSignature Language="DocId" Value="M:System.MarshalByRefObject.GetLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetLifetimeService();" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8" />
      <MemberSignature Language="F#" Value="member this.GetLifetimeService : unit -&gt; obj" Usage="marshalByRefObject.GetLifetimeService " FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetLifetimeService() cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetLifetimeService();" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member GetLifetimeService : unit -&gt; obj&#xA;override this.GetLifetimeService : unit -&gt; obj" Usage="marshalByRefObject.GetLifetimeService " FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fe975-132">Ruft das aktuelle Lebensdauerdienstobjekt ab, das die Lebensdauerrichtlinien für diese Instanz steuert.</span><span class="sxs-lookup"><span data-stu-id="fe975-132">Retrieves the current lifetime service object that controls the lifetime policy for this instance.</span></span></summary>
        <returns><span data-ttu-id="fe975-133">Ein Objekt vom Typ <see cref="T:System.Runtime.Remoting.Lifetime.ILease" />, das zur Steuerung der Lebensdauerrichtlinien für diese Instanz verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="fe975-133">An object of type <see cref="T:System.Runtime.Remoting.Lifetime.ILease" /> used to control the lifetime policy for this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe975-134">Weitere Informationen zu Lebensdauer Diensten finden Sie in der <xref:System.Runtime.Remoting.Lifetime.LifetimeServices>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="fe975-134">For more information about lifetime services, see the <xref:System.Runtime.Remoting.Lifetime.LifetimeServices> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fe975-135">Der direkte Aufrufer verfügt nicht über die Berechtigung für die Infrastruktur.</span><span class="sxs-lookup"><span data-stu-id="fe975-135">The immediate caller does not have infrastructure permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InitializeLifetimeService">
      <MemberSignature Language="C#" Value="public virtual object InitializeLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object InitializeLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MarshalByRefObject.InitializeLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InitializeLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ InitializeLifetimeService();" />
      <MemberSignature Language="F#" Value="abstract member InitializeLifetimeService : unit -&gt; obj&#xA;override this.InitializeLifetimeService : unit -&gt; obj" Usage="marshalByRefObject.InitializeLifetimeService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fe975-136">Ruft ein Lebensdauerdienstobjekt zur Steuerung der Lebensdauerrichtlinie für diese Instanz ab.</span><span class="sxs-lookup"><span data-stu-id="fe975-136">Obtains a lifetime service object to control the lifetime policy for this instance.</span></span></summary>
        <returns><span data-ttu-id="fe975-137">Ein Objekt vom Typ <see cref="T:System.Runtime.Remoting.Lifetime.ILease" />, das zur Steuerung der Lebensdauerrichtlinien für diese Instanz verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="fe975-137">An object of type <see cref="T:System.Runtime.Remoting.Lifetime.ILease" /> used to control the lifetime policy for this instance.</span></span> <span data-ttu-id="fe975-138">Dies ist das aktuelle Lebensdauerdienstobjekt für diese Instanz, sofern vorhanden, bzw. ein neues Lebensdauerdienstobjekt, das mit dem Wert der <see cref="P:System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime" />-Eigenschaft initialisiert wurde.</span><span class="sxs-lookup"><span data-stu-id="fe975-138">This is the current lifetime service object for this instance if one exists; otherwise, a new lifetime service object initialized to the value of the <see cref="P:System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime" /> property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe975-139">Weitere Informationen zu Lebensdauer Diensten finden Sie in der <xref:System.Runtime.Remoting.Lifetime.LifetimeServices>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="fe975-139">For more information about lifetime services, see the <xref:System.Runtime.Remoting.Lifetime.LifetimeServices> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe975-140">Im folgenden Codebeispiel wird das Erstellen einer Lease veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="fe975-140">The following code example demonstrates creating a lease.</span></span>  
  
 [!code-cpp[Classic MarshalByRefObject.InitializeLifetimeService Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic MarshalByRefObject.InitializeLifetimeService Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MarshalByRefObject.InitializeLifetimeService Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic MarshalByRefObject.InitializeLifetimeService Example/CS/source.cs#1)]
 [!code-vb[Classic MarshalByRefObject.InitializeLifetimeService Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic MarshalByRefObject.InitializeLifetimeService Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fe975-141">Der direkte Aufrufer verfügt nicht über die Berechtigung für die Infrastruktur.</span><span class="sxs-lookup"><span data-stu-id="fe975-141">The immediate caller does not have infrastructure permission.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="MemberwiseClone">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fe975-142">Erstellt eine flache Kopie des aktuellen Objekts.</span><span class="sxs-lookup"><span data-stu-id="fe975-142">Creates a shallow copy of the current object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MemberwiseClone">
      <MemberSignature Language="C#" Value="protected MarshalByRefObject MemberwiseClone (bool cloneIdentity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.MarshalByRefObject MemberwiseClone(bool cloneIdentity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Function MemberwiseClone (cloneIdentity As Boolean) As MarshalByRefObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MarshalByRefObject ^ MemberwiseClone(bool cloneIdentity);" />
      <MemberSignature Language="F#" Value="override this.MemberwiseClone : bool -&gt; MarshalByRefObject" Usage="marshalByRefObject.MemberwiseClone cloneIdentity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.MarshalByRefObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cloneIdentity" Type="System.Boolean" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="cloneIdentity"><span data-ttu-id="fe975-143"><see langword="false" /> zum Löschen der Identität des aktuellen <see cref="T:System.MarshalByRefObject" />-Objekts. Dies führt dazu, dass dem Objekt eine neue Identität zugewiesen wird, wenn es über eine Remotegrenze gemarshallt wird.</span><span class="sxs-lookup"><span data-stu-id="fe975-143"><see langword="false" /> to delete the current <see cref="T:System.MarshalByRefObject" /> object's identity, which will cause the object to be assigned a new identity when it is marshaled across a remoting boundary.</span></span> <span data-ttu-id="fe975-144">Der Wert <see langword="false" /> ist in der Regel geeignet.</span><span class="sxs-lookup"><span data-stu-id="fe975-144">A value of <see langword="false" /> is usually appropriate.</span></span> <span data-ttu-id="fe975-145"><see langword="true" />, wenn die Identität des aktuellen <see cref="T:System.MarshalByRefObject" /> in dessen Klon kopiert werden soll. Das führt dazu, dass Remoteclient-Aufrufe an das Remoteserverobjekt weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="fe975-145"><see langword="true" /> to copy the current <see cref="T:System.MarshalByRefObject" /> object's identity to its clone, which will cause remoting client calls to be routed to the remote server object.</span></span></param>
        <summary><span data-ttu-id="fe975-146">Erstellt eine flache Kopie des aktuellen <see cref="T:System.MarshalByRefObject" />-Objekts.</span><span class="sxs-lookup"><span data-stu-id="fe975-146">Creates a shallow copy of the current <see cref="T:System.MarshalByRefObject" /> object.</span></span></summary>
        <returns><span data-ttu-id="fe975-147">Eine flache Kopie des aktuellen <see cref="T:System.MarshalByRefObject" />-Objekts.</span><span class="sxs-lookup"><span data-stu-id="fe975-147">A shallow copy of the current <see cref="T:System.MarshalByRefObject" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe975-148">Durch die <xref:System.MarshalByRefObject.MemberwiseClone%28System.Boolean%29>-Methode wird eine flache Kopie erstellt, indem ein neues <xref:System.MarshalByRefObject>-Objekt erstellt und dann die nicht statischen Felder des aktuellen <xref:System.MarshalByRefObject>-Objekts in das neue-Objekt kopiert werden.</span><span class="sxs-lookup"><span data-stu-id="fe975-148">The <xref:System.MarshalByRefObject.MemberwiseClone%28System.Boolean%29> method creates a shallow copy by creating a new <xref:System.MarshalByRefObject> object, and then copying the nonstatic fields of the current <xref:System.MarshalByRefObject> object to the new object.</span></span> <span data-ttu-id="fe975-149">Wenn ein Feld ein Werttyp ist, wird eine Bit-für-Bit-Kopie des Felds ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="fe975-149">If a field is a value type, a bit-by-bit copy of the field is performed.</span></span> <span data-ttu-id="fe975-150">Wenn ein Feld ein Referenztyp ist, wird der Verweis kopiert, aber das Objekt, auf das verwiesen wird, nicht. Daher verweisen das ursprüngliche Objekt und der zugehörige Klon auf dasselbe Objekt.</span><span class="sxs-lookup"><span data-stu-id="fe975-150">If a field is a reference type, the reference is copied but the referred object is not; therefore, the original object and its clone refer to the same object.</span></span>  
  
 <span data-ttu-id="fe975-151">Angenommen, ein <xref:System.MarshalByRefObject> Objekt mit dem Namen "X" verweist auf die Objekte a und B. Objekt B wiederum verweist auf Objekt C. Eine flache Kopie von X erstellt ein neues Objekt x2, das auch auf die Objekte A und B verweist. Im Gegensatz dazu erstellt eine tiefe Kopie von X ein neues-Objekt x2, das auf die neuen Objekte a2 und B2 verweist, die Kopien von a und B. B2 wiederum auf das neue Objekt C2, das eine Kopie C darstellt. verwenden Sie eine Klasse, die die <xref:System.ICloneable>-Schnittstelle implementiert, um eine Tiefe oder flache Kopie eines Objekts auszuführen.</span><span class="sxs-lookup"><span data-stu-id="fe975-151">For example, consider a <xref:System.MarshalByRefObject> object called X that references objects A and B. Object B, in turn, references object C. A shallow copy of X creates new object X2 that also references objects A and B. In contrast, a deep copy of X creates a new object X2 that references the new objects A2 and B2, which are copies of A and B. B2, in turn, references the new object C2, which is a copy C. Use a class that implements the <xref:System.ICloneable> interface to perform a deep or shallow copy of an object.</span></span>  
  
 <span data-ttu-id="fe975-152">Die Identität eines <xref:System.MarshalByRefObject> Objekts ist als das Remote Server Objekt definiert, das das Ziel eines remotingclientaufrufes ist.</span><span class="sxs-lookup"><span data-stu-id="fe975-152">The identity of a <xref:System.MarshalByRefObject> object is defined as the remote server object that is the target of a remoting client call.</span></span> <span data-ttu-id="fe975-153">Standardmäßig hat der mitgliedsweise Klon eines <xref:System.MarshalByRefObject> Objekts dieselbe Identität wie das ursprüngliche Objekt, was in der Regel nicht das richtige Verhalten für Klone von serverseitigen Objekten ist, die über eine Remote Grenze an die Clientseite gemarshallt werden.</span><span class="sxs-lookup"><span data-stu-id="fe975-153">By default, the memberwise clone of a <xref:System.MarshalByRefObject> object has the same identity as the original object, which is typically not the correct behavior for clones of server-side objects that are marshaled across a remoting boundary to the client side.</span></span> <span data-ttu-id="fe975-154">Geben Sie `false`an, was in der Regel angemessen ist, um die Identität des Klons zu löschen und eine neue Identität zuzuweisen, wenn der Klon über eine Remotinggrenze gemarshallt wird, oder `true`, damit der Klon die Identität des ursprünglichen <xref:System.MarshalByRefObject> Objekts beibehält.</span><span class="sxs-lookup"><span data-stu-id="fe975-154">Specify `false`, which is usually appropriate, to delete the identity of the clone and cause a new identity to be assigned when the clone is marshaled across a remoting boundary, or `true` to cause the clone to retain the identity of the original <xref:System.MarshalByRefObject> object.</span></span> <span data-ttu-id="fe975-155">Die <xref:System.MarshalByRefObject.MemberwiseClone%28System.Boolean%29>-Methode ist für die Verwendung durch Entwickler vorgesehen, die Remote Server Objekte implementieren.</span><span class="sxs-lookup"><span data-stu-id="fe975-155">The <xref:System.MarshalByRefObject.MemberwiseClone%28System.Boolean%29> method is intended to be used by developers implementing remote server objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
