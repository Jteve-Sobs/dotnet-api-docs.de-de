<Type Name="ActivationContext" FullName="System.ActivationContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="084dbf5347f7184e5c89f88b5f62cb798bd2a5ff" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78828941" /></Metadata><TypeSignature Language="C#" Value="public sealed class ActivationContext : IDisposable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ActivationContext extends System.Object implements class System.IDisposable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.ActivationContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ActivationContext&#xA;Implements IDisposable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ActivationContext sealed : IDisposable, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type ActivationContext = class&#xA;    interface IDisposable&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Gibt den Aktivierungskontext für die aktuelle Anwendung an. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.ActivationContext>-Klasse enthält eine <xref:System.ApplicationIdentity> und bietet nur internen Zugriff auf das Anwendungs Manifest. Der Aktivierungs Kontext wird bei der Manifest-basierten Aktivierung verwendet, um die Domänen Richtlinie einzurichten und ein Anwendungs basiertes Sicherheitsmodell bereitzustellen. Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Security.Policy.ApplicationSecurityManager>-Klasse.

> [!IMPORTANT]
>  Dieser Typ implementiert die <xref:System.IDisposable>-Schnittstelle. Nach Abschluss der Verwendung sollten Sie den Typ entweder direkt oder indirekt löschen. Zum direkten Löschen des Typs rufen Sie seine <xref:System.IDisposable.Dispose%2A>-Methode in einem `try`/`catch`-Block auf. Zum indirekten Löschen verwenden Sie ein Sprachkonstrukt wie `using` (in C#) oder `Using` (in Visual Basic). Weitere Informationen finden Sie im Abschnitt „Verwenden eines Objekts, das IDisposable implementiert“ des Themas „Die <xref:System.IDisposable>-Schnittstelle“.



## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie ein <xref:System.ActivationContext>-Objekt verwendet wird, um die <xref:System.ApplicationIdentity> für eine Manifest-basierte Anwendung abzurufen. Führen Sie dieses Codebeispiel als Manifest-basierte Anwendung aus, um korrekte Ergebnisse zu erhalten.

 [!code-csharp[System.ActivationContext#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ActivationContext/cs/program.cs#1)]
 [!code-vb[System.ActivationContext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ActivationContext/vb/program.vb#1)]

 ]]></format>
    </remarks>
    <related type="Article" href="/visualstudio/deployment/publishing-clickonce-applications">Veröffentlichen von ClickOnce-Anwendungen</related>
  </Docs>
  <Members>
    <Member MemberName="ApplicationManifestBytes">
      <MemberSignature Language="C#" Value="public byte[] ApplicationManifestBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] ApplicationManifestBytes" />
      <MemberSignature Language="DocId" Value="P:System.ActivationContext.ApplicationManifestBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplicationManifestBytes As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ ApplicationManifestBytes { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationManifestBytes : byte[]" Usage="System.ActivationContext.ApplicationManifestBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das ClickOnce-Anwendungsmanifest für die aktuelle Anwendung ab.</summary>
        <value>Ein Bytearray, das das ClickOnce-Anwendungsmanifest für die Anwendung enthält, die mit diesem <see cref="T:System.ActivationContext" /> verknüpft ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Wenn der Aktivierungs Kontext <xref:System.ActivationContext.ContextForm.Loose>ist, was bedeutet, dass die Anwendung nicht im ClickOnce-Speicher installiert ist, wird das Bereitstellungs Manifest aus dem temporären Downloadordner gelesen. Wenn der Aktivierungs Kontext <xref:System.ActivationContext.ContextForm.StoreBounded>ist, was bedeutet, dass die Anwendung im ClickOnce-Speicher installiert wird, wird das Bereitstellungs Manifest aus dem ClickOnce-Speicher gelesen. Weitere Informationen zu Bereitstellungs Manifesten finden Sie unter [ClickOnce-Bereitstellungs Manifest](/visualstudio/deployment/clickonce-deployment-manifest).

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreatePartialActivationContext">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.ActivationContext" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreatePartialActivationContext">
      <MemberSignature Language="C#" Value="public static ActivationContext CreatePartialActivationContext (ApplicationIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ActivationContext CreatePartialActivationContext(class System.ApplicationIdentity identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreatePartialActivationContext (identity As ApplicationIdentity) As ActivationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ActivationContext ^ CreatePartialActivationContext(ApplicationIdentity ^ identity);" />
      <MemberSignature Language="F#" Value="static member CreatePartialActivationContext : ApplicationIdentity -&gt; ActivationContext" Usage="System.ActivationContext.CreatePartialActivationContext identity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ActivationContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.ApplicationIdentity" />
      </Parameters>
      <Docs>
        <param name="identity">Ein Objekt, das eine Anwendung identifiziert.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.ActivationContext" />-Klasse unter Verwendung der angegebenen Anwendungsidentität.</summary>
        <returns>Ein Objekt mit der angegebenen Anwendungsidentität.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.ActivationContext.CreatePartialActivationContext%2A>-Methode ruft einen internen Konstruktor auf, um einen neuen Aktivierungs Kontext zu erstellen. Die Implementierung der <xref:System.ActivationContext>-Klasse in der .NET Framework Version 2,0 ist für Anwendungen konzipiert, die weder vollständig in einem Geschäft installiert sind noch vollständig in einem Ordner enthalten sind. Diese Methode bietet Abwärtskompatibilität für spätere Releases, bei denen öffentliche Konstruktoren vollständige Aktivierungs Kontexte bereitstellen.

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="identity" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">In <paramref name="identity" /> ist keine Bereitstellung oder Anwendungsidentität angegeben.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreatePartialActivationContext">
      <MemberSignature Language="C#" Value="public static ActivationContext CreatePartialActivationContext (ApplicationIdentity identity, string[] manifestPaths);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ActivationContext CreatePartialActivationContext(class System.ApplicationIdentity identity, string[] manifestPaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreatePartialActivationContext (identity As ApplicationIdentity, manifestPaths As String()) As ActivationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ActivationContext ^ CreatePartialActivationContext(ApplicationIdentity ^ identity, cli::array &lt;System::String ^&gt; ^ manifestPaths);" />
      <MemberSignature Language="F#" Value="static member CreatePartialActivationContext : ApplicationIdentity * string[] -&gt; ActivationContext" Usage="System.ActivationContext.CreatePartialActivationContext (identity, manifestPaths)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ActivationContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.ApplicationIdentity" />
        <Parameter Name="manifestPaths" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="identity">Ein Objekt, das eine Anwendung identifiziert.</param>
        <param name="manifestPaths">Ein Zeichenfolgenarray der Manifestspfade für die Anwendung.</param>
        <summary>Initialisiert mit der angegebenen Anwendungsidentität und dem Array der Manifestspfade eine neue Instanz der <see cref="T:System.ActivationContext" />-Klasse.</summary>
        <returns>Ein Objekt mit der angegebenen Anwendungsidentität und dem angegebenen Array der Manifestpfade.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.ActivationContext.CreatePartialActivationContext%2A>-Methode ruft einen internen Konstruktor auf, um einen neuen Aktivierungs Kontext zu erstellen. Die Implementierung der <xref:System.ActivationContext>-Klasse in der .NET Framework Version 2,0 ist für Anwendungen konzipiert, die weder vollständig in einem Geschäft installiert sind noch vollständig in einem Ordner enthalten sind. Diese Methode bietet Abwärtskompatibilität für spätere Releases, bei denen öffentliche Konstruktoren vollständige Aktivierungs Kontexte bereitstellen.

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="identity" /> ist <see langword="null" />.

- oder -

 <paramref name="manifestPaths" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">In <paramref name="identity" /> ist keine Bereitstellung oder Anwendungsidentität angegeben.

- oder -

 <paramref name="identity" /> stimmt nicht mit der Identität in den Manifesten überein.

- oder -

 <paramref name="identity" /> verfügt nicht über die gleiche Anzahl von Komponenten wie die Manifestpfade.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeploymentManifestBytes">
      <MemberSignature Language="C#" Value="public byte[] DeploymentManifestBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] DeploymentManifestBytes" />
      <MemberSignature Language="DocId" Value="P:System.ActivationContext.DeploymentManifestBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeploymentManifestBytes As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ DeploymentManifestBytes { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeploymentManifestBytes : byte[]" Usage="System.ActivationContext.DeploymentManifestBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das ClickOnce-Bereitstellungsmanifest für die aktuelle Anwendung ab.</summary>
        <value>Ein Bytearray, das das ClickOnce-Bereitstellungsmanifest für die Anwendung enthält, die diesem <see cref="T:System.ActivationContext" /> zugeordnet ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Wenn der Aktivierungs Kontext <xref:System.ActivationContext.ContextForm.Loose>ist, was bedeutet, dass die Anwendung nicht im ClickOnce-Speicher installiert ist, wird das Bereitstellungs Manifest aus dem temporären Downloadordner gelesen. Wenn der Aktivierungs Kontext <xref:System.ActivationContext.ContextForm.StoreBounded>ist, was bedeutet, dass die Anwendung im ClickOnce-Speicher installiert wird, wird das Bereitstellungs Manifest aus dem ClickOnce-Speicher gelesen. Weitere Informationen zu Bereitstellungs Manifesten finden Sie unter [ClickOnce-Bereitstellungs Manifest](/visualstudio/deployment/clickonce-deployment-manifest).

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ActivationContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="activationContext.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt alle vom <see cref="T:System.ActivationContext" /> verwendeten Ressourcen frei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Rufen Sie <xref:System.ActivationContext.Dispose%2A> auf, wenn Sie <xref:System.ActivationContext> nicht mehr benötigen. Die <xref:System.ActivationContext.Dispose%2A>-Methode bewirkt, dass <xref:System.ActivationContext> nicht mehr verwendet werden kann. Nachdem Sie <xref:System.ActivationContext.Dispose%2A>aufgerufen haben, müssen Sie alle Verweise auf die <xref:System.ActivationContext> freigeben, damit der Garbage Collector den Speicher freigeben kann, den der <xref:System.ActivationContext> belegt hat. Weitere Informationen finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md) und [Implementieren einer](~/docs/standard/garbage-collection/implementing-dispose.md)verwerfen-Methode.

> [!NOTE]
>  Rufen Sie immer <xref:System.ActivationContext.Dispose%2A> auf, bevor Sie den letzten Verweis auf das <xref:System.ActivationContext> freigeben. Andernfalls bleiben die verwendeten Ressourcen reserviert, bis die Garbage Collection die <xref:System.ActivationContext>-Methode des `Finalize`-Objekts aufruft.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ActivationContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ActivationContext.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ActivationContext ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="activationContext.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ermöglicht einem <see cref="T:System.ActivationContext" />-Objekt den Versuch, Ressourcen freizugeben und andere Bereinigungsvorgänge durchzuführen, bevor der <see cref="T:System.ActivationContext" /> durch die Garbage Collection wieder zugänglich gemacht wird.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public ActivationContext.ContextForm Form { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ActivationContext/ContextForm Form" />
      <MemberSignature Language="DocId" Value="P:System.ActivationContext.Form" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Form As ActivationContext.ContextForm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ActivationContext::ContextForm Form { ActivationContext::ContextForm get(); };" />
      <MemberSignature Language="F#" Value="member this.Form : ActivationContext.ContextForm" Usage="System.ActivationContext.Form" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ActivationContext+ContextForm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Formular oder den Speicherkontext für die aktuelle Anwendung ab.</summary>
        <value>Einer der Enumerationswerte.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Eine Manifest-basierte Anwendung ist möglicherweise nicht im ClickOnce-Speicher installiert. Eine Anwendung, die sich nicht im Speicher befindet, wie z. b. eine Manifest-aktivierte Anwendung, die in Visual Studio ausgeführt wird, wird als <xref:System.ActivationContext.ContextForm.Loose>klassifiziert. Eine Anwendung, die im Speicher enthalten ist, wird als <xref:System.ActivationContext.ContextForm.StoreBounded>klassifiziert.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Identity">
      <MemberSignature Language="C#" Value="public ApplicationIdentity Identity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ApplicationIdentity Identity" />
      <MemberSignature Language="DocId" Value="P:System.ActivationContext.Identity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Identity As ApplicationIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ApplicationIdentity ^ Identity { ApplicationIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Identity : ApplicationIdentity" Usage="System.ActivationContext.Identity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ApplicationIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anwendungsidentität für die aktuelle Anwendung ab.</summary>
        <value>Ein <see cref="T:System.ApplicationIdentity" />-Objekt, das die aktuelle Anwendung identifiziert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Eine <xref:System.ApplicationIdentity> die eine Anwendung durch Ihren vollständigen Namen und Speicherort eindeutig identifiziert.



## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie ein <xref:System.ActivationContext>-Objekt verwendet wird, um die <xref:System.ApplicationIdentity> für eine Manifest-basierte Anwendung abzurufen. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.ActivationContext>-Klasse bereitgestellt wird.

 [!code-csharp[System.ActivationContext#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ActivationContext/cs/program.cs#2)]
 [!code-vb[System.ActivationContext#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ActivationContext/vb/program.vb#2)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ActivationContext.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberSignature Language="F#" Value="abstract member System.Runtime.Serialization.ISerializable.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.System.Runtime.Serialization.ISerializable.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="activationContext.System.Runtime.Serialization.ISerializable.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Das mit Daten zu füllende Objekt.</param>
        <param name="context">Die Struktur für diese Serialisierung.</param>
        <summary>Füllt eine <see cref="T:System.Runtime.Serialization.SerializationInfo" /> mit den Daten auf, die zum Serialisieren des Zielobjekts erforderlich sind.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
