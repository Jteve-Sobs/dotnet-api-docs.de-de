<Type Name="ActivationContext" FullName="System.ActivationContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0cad1645fffcbb44741d926b169ad4b126c5162c" />
    <Meta Name="ms.sourcegitcommit" Value="4b4804968da1dfdf71c501075a5b66957b54f2e8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/27/2018" />
    <Meta Name="ms.locfileid" Value="32036941" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ActivationContext : IDisposable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ActivationContext extends System.Object implements class System.IDisposable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.ActivationContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ActivationContext&#xA;Implements IDisposable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ActivationContext sealed : IDisposable, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Gibt den Aktivierungskontext für die aktuelle Anwendung an. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ActivationContext> Klasse enthält eine <xref:System.ApplicationIdentity> und bietet nur intern-Zugriff auf das Anwendungsmanifest. Der Aktivierungskontext wird während der manifestbasierten Aktivierung die Domänenrichtlinie einrichten und Bereitstellen einer Anwendung basierenden Sicherheitsmodell verwendet. Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Security.Policy.ApplicationSecurityManager>-Klasse.  
  
> [!IMPORTANT]
>  Dieser Typ implementiert die <xref:System.IDisposable> Schnittstelle. Wenn Sie mithilfe des Typs abgeschlossen haben, sollten Sie es entweder direkt oder indirekt freigeben. Aufrufen, um den Typ direkt zu verwerfen, dessen <xref:System.IDisposable.Dispose%2A> Methode in einer `try` / `catch` Block. Um es indirekt freizugeben, verwenden Sie ein Sprachkonstrukt z. B. `using` (in c#) oder `Using` (in Visual Basic). Weitere Informationen finden Sie im Abschnitt "Verwenden eines Objekts, implementiert IDisposable" in der <xref:System.IDisposable> Thema zur Schnittstelle.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung von ein <xref:System.ActivationContext> Objekt zum Abrufen der <xref:System.ApplicationIdentity> für ein Manifest-basiertes-Anwendung. Führen Sie für die richtigen Ergebnisse in diesem Codebeispiel wird als Manifest-basiertes-Anwendung.  
  
 [!code-csharp[System.ActivationContext#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ActivationContext/cs/program.cs#1)]
 [!code-vb[System.ActivationContext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ActivationContext/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ApplicationManifestBytes">
      <MemberSignature Language="C#" Value="public byte[] ApplicationManifestBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] ApplicationManifestBytes" />
      <MemberSignature Language="DocId" Value="P:System.ActivationContext.ApplicationManifestBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplicationManifestBytes As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ ApplicationManifestBytes { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das ClickOnce-Anwendungsmanifest für die aktuelle Anwendung ab.</summary>
        <value>Ein Bytearray, das das ClickOnce-Anwendungsmanifest für die Anwendung enthält, die mit diesem <see cref="T:System.ActivationContext" /> verknüpft ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn der Aktivierungskontext ist <xref:System.ActivationContext.ContextForm.Loose>, was bedeutet, dass die Anwendung nicht installiert ist im Windows Store für ClickOnce-Bereitstellungsmanifest aus dem Ordner für temporäre Downloads gelesen wird. Wenn der Aktivierungskontext ist <xref:System.ActivationContext.ContextForm.StoreBounded>, dies bedeutet, dass es sich bei der Installation der Anwendung im ClickOnce-Speicher, das Bereitstellungsmanifest wird gelesen von ClickOnce-Speicher. Weitere Informationen zu Bereitstellungsmanifesten finden Sie unter [ClickOnce-Bereitstellungsmanifest](http://msdn.microsoft.com/library/8457e615-e3b6-4990-8dcf-11bc590e4e9b).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreatePartialActivationContext">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.ActivationContext" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreatePartialActivationContext">
      <MemberSignature Language="C#" Value="public static ActivationContext CreatePartialActivationContext (ApplicationIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ActivationContext CreatePartialActivationContext(class System.ApplicationIdentity identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreatePartialActivationContext (identity As ApplicationIdentity) As ActivationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ActivationContext ^ CreatePartialActivationContext(ApplicationIdentity ^ identity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ActivationContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.ApplicationIdentity" />
      </Parameters>
      <Docs>
        <param name="identity">Ein Objekt, das eine Anwendung identifiziert.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.ActivationContext" />-Klasse unter Verwendung der angegebenen Anwendungsidentität.</summary>
        <returns>Ein Objekt mit der angegebenen Anwendungsidentität.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ActivationContext.CreatePartialActivationContext%2A> Methode ruft einen internen Konstruktor zum Erstellen eines neuen Aktivierungskontext. Die Implementierung der <xref:System.ActivationContext> Klasse in .NET Framework, Version 2.0 ist für Anwendungen, die weder vollständig in einem Speicher installiert noch vollständig in einem Ordner enthaltenen ausgelegt. Diese Methode bietet Abwärtskompatibilität für höhere Versionen, die die öffentliche Konstruktoren vollständige Aktivierungskontexte angeben.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="identity" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">In <paramref name="identity" /> ist keine Bereitstellung oder Anwendungsidentität angegeben.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreatePartialActivationContext">
      <MemberSignature Language="C#" Value="public static ActivationContext CreatePartialActivationContext (ApplicationIdentity identity, string[] manifestPaths);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ActivationContext CreatePartialActivationContext(class System.ApplicationIdentity identity, string[] manifestPaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreatePartialActivationContext (identity As ApplicationIdentity, manifestPaths As String()) As ActivationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ActivationContext ^ CreatePartialActivationContext(ApplicationIdentity ^ identity, cli::array &lt;System::String ^&gt; ^ manifestPaths);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ActivationContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.ApplicationIdentity" />
        <Parameter Name="manifestPaths" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="identity">Ein Objekt, das eine Anwendung identifiziert.</param>
        <param name="manifestPaths">Ein Zeichenfolgenarray der Manifestspfade für die Anwendung.</param>
        <summary>Initialisiert mit der angegebenen Anwendungsidentität und dem Array der Manifestspfade eine neue Instanz der <see cref="T:System.ActivationContext" />-Klasse.</summary>
        <returns>Ein Objekt mit der angegebenen Anwendungsidentität und dem angegebenen Array der Manifestpfade.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ActivationContext.CreatePartialActivationContext%2A> Methode ruft einen internen Konstruktor zum Erstellen eines neuen Aktivierungskontext. Die Implementierung der <xref:System.ActivationContext> Klasse in .NET Framework, Version 2.0 ist für Anwendungen, die weder vollständig in einem Speicher installiert noch vollständig in einem Ordner enthaltenen ausgelegt. Diese Methode bietet Abwärtskompatibilität für höhere Versionen, die die öffentliche Konstruktoren vollständige Aktivierungskontexte angeben.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="identity" /> ist <see langword="null" />.  
  
 - oder -   
  
 <paramref name="manifestPaths" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">In <paramref name="identity" /> ist keine Bereitstellung oder Anwendungsidentität angegeben.  
  
 - oder -   
  
 <paramref name="identity" /> stimmt nicht mit der Identität in den Manifesten überein.  
  
 - oder -   
  
 <paramref name="identity" /> verfügt nicht über die gleiche Anzahl von Komponenten wie die Manifestpfade.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeploymentManifestBytes">
      <MemberSignature Language="C#" Value="public byte[] DeploymentManifestBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] DeploymentManifestBytes" />
      <MemberSignature Language="DocId" Value="P:System.ActivationContext.DeploymentManifestBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeploymentManifestBytes As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ DeploymentManifestBytes { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das ClickOnce-Bereitstellungsmanifest für die aktuelle Anwendung ab.</summary>
        <value>Ein Bytearray, das das ClickOnce-Bereitstellungsmanifest für die Anwendung enthält, die diesem <see cref="T:System.ActivationContext" /> zugeordnet ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn der Aktivierungskontext ist <xref:System.ActivationContext.ContextForm.Loose>, was bedeutet, dass die Anwendung nicht installiert ist im Windows Store für ClickOnce-Bereitstellungsmanifest aus dem Ordner für temporäre Downloads gelesen wird. Wenn der Aktivierungskontext ist <xref:System.ActivationContext.ContextForm.StoreBounded>, dies bedeutet, dass es sich bei der Installation der Anwendung im ClickOnce-Speicher, das Bereitstellungsmanifest wird gelesen von ClickOnce-Speicher. Weitere Informationen zu Bereitstellungsmanifesten finden Sie unter [ClickOnce-Bereitstellungsmanifest](http://msdn.microsoft.com/library/8457e615-e3b6-4990-8dcf-11bc590e4e9b).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ActivationContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt alle vom <see cref="T:System.ActivationContext" /> verwendeten Ressourcen frei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rufen Sie <xref:System.ActivationContext.Dispose%2A> auf, wenn Sie <xref:System.ActivationContext> nicht mehr benötigen. Die <xref:System.ActivationContext.Dispose%2A>-Methode bewirkt, dass <xref:System.ActivationContext> nicht mehr verwendet werden kann. Nach dem Aufruf <xref:System.ActivationContext.Dispose%2A>, müssen Sie alle Verweise auf Freigeben der <xref:System.ActivationContext> , damit der Garbage Collector den Arbeitsspeicher freigeben kann, die die <xref:System.ActivationContext> belegt wurde. Weitere Informationen finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md) und [Implementieren einer Dispose-Methode](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Rufen Sie immer <xref:System.ActivationContext.Dispose%2A> auf, bevor Sie den letzten Verweis auf das <xref:System.ActivationContext> freigeben. Andernfalls bleiben die verwendeten Ressourcen reserviert, bis die Garbage Collection die <xref:System.ActivationContext>-Methode des `Finalize`-Objekts aufruft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ActivationContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ActivationContext.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ActivationContext ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ermöglicht einem <see cref="T:System.ActivationContext" />-Objekt den Versuch, Ressourcen freizugeben und andere Bereinigungsvorgänge durchzuführen, bevor der <see cref="T:System.ActivationContext" /> durch die Garbage Collection wieder zugänglich gemacht wird.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public ActivationContext.ContextForm Form { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ActivationContext/ContextForm Form" />
      <MemberSignature Language="DocId" Value="P:System.ActivationContext.Form" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Form As ActivationContext.ContextForm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ActivationContext::ContextForm Form { ActivationContext::ContextForm get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ActivationContext+ContextForm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Formular oder den Speicherkontext für die aktuelle Anwendung ab.</summary>
        <value>Einer der Enumerationswerte.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Manifest-basiertes Anwendung möglicherweise nicht installiert werden im ClickOnce-Speicher. Eine Anwendung, die nicht im Speicher, z. B. ein Manifest aktivierte Anwendung, die in Visual Studio ausgeführt wird, wird als klassifiziert <xref:System.ActivationContext.ContextForm.Loose>. Eine Anwendung, die im Speicher befindet, wird als klassifiziert <xref:System.ActivationContext.ContextForm.StoreBounded>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Identity">
      <MemberSignature Language="C#" Value="public ApplicationIdentity Identity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ApplicationIdentity Identity" />
      <MemberSignature Language="DocId" Value="P:System.ActivationContext.Identity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Identity As ApplicationIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ApplicationIdentity ^ Identity { ApplicationIdentity ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ApplicationIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anwendungsidentität für die aktuelle Anwendung ab.</summary>
        <value>Ein <see cref="T:System.ApplicationIdentity" />-Objekt, das die aktuelle Anwendung identifiziert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.ApplicationIdentity> eindeutig identifiziert eine Anwendung nach ihrem vollständigen Namen und Speicherort.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung von ein <xref:System.ActivationContext> Objekt zum Abrufen der <xref:System.ApplicationIdentity> für ein Manifest-basiertes-Anwendung. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.ActivationContext> Klasse.  
  
 [!code-csharp[System.ActivationContext#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ActivationContext/cs/program.cs#2)]
 [!code-vb[System.ActivationContext#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ActivationContext/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ActivationContext.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Das mit Daten zu füllende Objekt.</param>
        <param name="context">Die Struktur für diese Serialisierung.</param>
        <summary>Füllt eine <see cref="T:System.Runtime.Serialization.SerializationInfo" /> mit den Daten auf, die zum Serialisieren des Zielobjekts erforderlich sind.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer. Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</permission>
      </Docs>
    </Member>
  </Members>
</Type>