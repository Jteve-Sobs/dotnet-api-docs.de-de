<Type Name="ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt;" FullName="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fd37448673ec93c1786df86850227d94c03f6208" /><Meta Name="ms.sourcegitcommit" Value="c7fba4a529a39ce5480e57ff2519295822f78c1d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/15/2020" /><Meta Name="ms.locfileid" Value="83408259" /></Metadata><TypeSignature Language="C#" Value="public struct ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt; : IComparable, IComparable&lt;ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt;&gt;, IEquatable&lt;ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt;&gt;, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable, System.Runtime.CompilerServices.ITuple where TRest : struct" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ValueTuple`8&lt;T1, T2, T3, T4, T5, T6, T7, struct .ctor (class System.ValueType) TRest&gt; extends System.ValueType implements class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.IComparable, class System.IComparable`1&lt;valuetype System.ValueTuple`8&lt;!T1, !T2, !T3, !T4, !T5, !T6, !T7, !TRest&gt;&gt;, class System.IEquatable`1&lt;valuetype System.ValueTuple`8&lt;!T1, !T2, !T3, !T4, !T5, !T6, !T7, !TRest&gt;&gt;, class System.Runtime.CompilerServices.ITuple" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.ValueTuple`8" />
  <TypeSignature Language="VB.NET" Value="Public Structure ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, TRest)&#xA;Implements IComparable, IComparable(Of ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, TRest)), IEquatable(Of ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, TRest)), IStructuralComparable, IStructuralEquatable, ITuple" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename TRest&gt;&#xA; where TRest : value classpublic value class ValueTuple : IComparable, IComparable&lt;ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, TRest&gt;&gt;, IEquatable&lt;ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, TRest&gt;&gt;, System::Collections::IStructuralComparable, System::Collections::IStructuralEquatable, System::Runtime::CompilerServices::ITuple" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
  <TypeSignature Language="F#" Value="type ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest (requires 'Rest : struct)&gt; = struct&#xA;    interface ITuple" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
  <TypeSignature Language="C#" Value="public struct ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt; : IComparable, IComparable&lt;ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt;&gt;, IEquatable&lt;ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt;&gt;, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable where TRest : struct" FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ValueTuple`8&lt;T1, T2, T3, T4, T5, T6, T7, struct .ctor (class System.ValueType) TRest&gt; extends System.ValueType implements class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.IComparable, class System.IComparable`1&lt;valuetype System.ValueTuple`8&lt;!T1, !T2, !T3, !T4, !T5, !T6, !T7, !TRest&gt;&gt;, class System.IEquatable`1&lt;valuetype System.ValueTuple`8&lt;!T1, !T2, !T3, !T4, !T5, !T6, !T7, !TRest&gt;&gt;" FrameworkAlternate="netcore-1.0;netstandard-2.0" />
  <TypeSignature Language="VB.NET" Value="Public Structure ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, TRest)&#xA;Implements IComparable, IComparable(Of ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, TRest)), IEquatable(Of ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, TRest)), IStructuralComparable, IStructuralEquatable" FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename TRest&gt;&#xA; where TRest : value classpublic value class ValueTuple : IComparable, IComparable&lt;ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, TRest&gt;&gt;, IEquatable&lt;ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, TRest&gt;&gt;, System::Collections::IStructuralComparable, System::Collections::IStructuralEquatable" FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0" />
  <TypeSignature Language="F#" Value="type ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest (requires 'Rest : struct)&gt; = struct" FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.7;netstandard-2.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ValueTuple`8&lt;T1, T2, T3, T4, T5, T6, T7, struct .ctor (class System.ValueType) TRest&gt; extends System.ValueType implements class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.IComparable, class System.IComparable`1&lt;valuetype System.ValueTuple`8&lt;!T1, !T2, !T3, !T4, !T5, !T6, !T7, !TRest&gt;&gt;, class System.IEquatable`1&lt;valuetype System.ValueTuple`8&lt;!T1, !T2, !T3, !T4, !T5, !T6, !T7, !TRest&gt;&gt;" FrameworkAlternate="netcore-1.1;netframework-4.7" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ValueTuple`8&lt;T1, T2, T3, T4, T5, T6, T7, struct .ctor (class System.ValueType) TRest&gt; extends System.ValueType implements class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.IComparable, class System.IComparable`1&lt;valuetype System.ValueTuple`8&lt;!T1, !T2, !T3, !T4, !T5, !T6, !T7, !TRest&gt;&gt;, class System.IEquatable`1&lt;valuetype System.ValueTuple`8&lt;!T1, !T2, !T3, !T4, !T5, !T6, !T7, !TRest&gt;&gt;, class System.Runtime.CompilerServices.ITuple" FrameworkAlternate="netcore-2.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ValueTuple`8&lt;T1, T2, T3, T4, T5, T6, T7, struct .ctor (class System.ValueType) TRest&gt; extends System.ValueType implements class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.IComparable, class System.IComparable`1&lt;valuetype System.ValueTuple`8&lt;!T1, !T2, !T3, !T4, !T5, !T6, !T7, !TRest&gt;&gt;, class System.IEquatable`1&lt;valuetype System.ValueTuple`8&lt;!T1, !T2, !T3, !T4, !T5, !T6, !T7, !TRest&gt;&gt;, class System.Runtime.CompilerServices.ITuple" FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.ValueTuple</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.ValueTuple" FromVersion="4.0.3.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.ValueTuple" FromVersion="4.0.2.0" To="System.Runtime" ToVersion="4.2.0.0" FrameworkAlternate="netcore-2.0" />
    <TypeForwarding From="System.ValueTuple" FromVersion="4.0.3.0" To="System.Runtime" ToVersion="4.2.1.0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
    <TypeForwarding From="System.ValueTuple" FromVersion="4.0.3.0" To="System.Runtime" ToVersion="4.2.2.0" FrameworkAlternate="netcore-3.1" />
  </TypeForwardingChain>
  <TypeParameters>
    <TypeParameter Name="T1" />
    <TypeParameter Name="T2" />
    <TypeParameter Name="T3" />
    <TypeParameter Name="T4" />
    <TypeParameter Name="T5" />
    <TypeParameter Name="T6" />
    <TypeParameter Name="T7" />
    <TypeParameter Name="TRest">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
        <BaseTypeName>System.ValueType</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IStructuralComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IStructuralEquatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.CompilerServices.ITuple</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T1">Der Typ des ersten Elements des Werttupels.</typeparam>
    <typeparam name="T2">Der Typ des zweiten Elements des Werttupels.</typeparam>
    <typeparam name="T3">Der Typ des dritten Elements des Werttupels.</typeparam>
    <typeparam name="T4">Der Typ des vierten Elements des Werttupels.</typeparam>
    <typeparam name="T5">Der Typ des fünften Elements des Werttupels.</typeparam>
    <typeparam name="T6">Der Typ des sechsten Elements des Werttupels.</typeparam>
    <typeparam name="T7">Der Typ des siebten Elements des Werttupels.</typeparam>
    <typeparam name="TRest">Eine beliebige generische Werttupelinstanz, die die Typen der verbleibenden Elemente des Tupels definiert.</typeparam>
    <summary>Stellt ein *n*-Werttupel mit *n* größer oder gleich 8 dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein werttupel ist eine Datenstruktur, die über eine bestimmte Anzahl und eine bestimmte Sequenz von Werten verfügt. Die <xref:System.ValueTuple%608>-Struktur stellt ein werttupel dar, das acht oder mehr-Elemente aufweist.  
  
 Die werttupeltypen unterscheiden sich von den Tupeltypen (z. b. <xref:System.Tuple%608>) wie folgt:  
  
-   Dabei handelt es sich um Strukturen (Werttypen) anstelle von Klassen (Verweis Typen).  
  
-   Member, z. b. <xref:System.ValueTuple%608.Item1> und <xref:System.ValueTuple%608.Item2>, sind eher Felder als Eigenschaften.  
  
-   Ihre Felder sind änderbar und nicht schreibgeschützt.  
  
 Die werttupeltypen bieten die Lauf Zeit Implementierung, die [Tupel in C# ](~/docs/csharp/tuples.md) und strukturtupel in F#unterstützt.  Zusätzlich zum Erstellen einer <xref:System.ValueTuple%608> Instanz mithilfe der Sprachsyntax können Sie die <xref:System.ValueTuple.Create%60%608%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%2C%60%607%29?displayProperty=nameWithType> Factorymethode aufzurufen.  

### <a name="serialization-and-value-tuples"></a>Serialisierung und wertetupel

Der <xref:System.ValueTuple%608> Typ ist in .net Core 1. x oder in der .NET Framework 4,7 und früheren Versionen nicht serialisierbar. Außerdem wird von .NET Standard, einschließlich .NET Standard 2,0, keine Serialisierung von <xref:System.ValueTuple%608> Instanzen vorgeschrieben. ob eine <xref:System.ValueTuple%608> Instanz serialisierbar ist, hängt von der einzelnen .NET Standard Implementierung ab. Um zu ermitteln, ob ein <xref:System.ValueTuple%608> Typ für eine bestimmte .NET-Implementierung serialisierbar ist, rufen Sie ein <xref:System.Type> Objekt ab, das den <xref:System.ValueTuple%608> Typ darstellt, und rufen Sie den Wert seiner <xref:System.Type.IsSerializable%2A>-Eigenschaft ab. Eine Liste der serialisierbaren Typen in .net Core und der .NET Framework finden Sie unter [binäre Serialisierung](~/docs/standard/serialization/binary-serialization.md).
    
 ]]></format>
    </remarks>
    <altmember cref="T:System.ValueTuple" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValueTuple (T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, TRest rest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T1 item1, !T2 item2, !T3 item3, !T4 item4, !T5 item5, !T6 item6, !T7 item7, !TRest rest) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueTuple`8.#ctor(`0,`1,`2,`3,`4,`5,`6,`7)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (item1 As T1, item2 As T2, item3 As T3, item4 As T4, item5 As T5, item6 As T6, item7 As T7, rest As TRest)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ValueTuple(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, TRest rest);" />
      <MemberSignature Language="F#" Value="new ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest (requires 'Rest : struct)&gt; : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'Rest -&gt; ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest (requires 'Rest : struct)&gt;" Usage="new System.ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest (requires 'Rest : struct)&gt; (item1, item2, item3, item4, item5, item6, item7, rest)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="item1" Type="T1" />
        <Parameter Name="item2" Type="T2" />
        <Parameter Name="item3" Type="T3" />
        <Parameter Name="item4" Type="T4" />
        <Parameter Name="item5" Type="T5" />
        <Parameter Name="item6" Type="T6" />
        <Parameter Name="item7" Type="T7" />
        <Parameter Name="rest" Type="TRest" />
      </Parameters>
      <Docs>
        <param name="item1">Das erste Element des Werttupels.</param>
        <param name="item2">Das zweite Element des Werttupels.</param>
        <param name="item3">Das dritte Element des Werttupels.</param>
        <param name="item4">Das vierte Element des Werttupels.</param>
        <param name="item5">Das fünfte Element des Werttupels.</param>
        <param name="item6">Das sechste Element des Werttupels.</param>
        <param name="item7">Das siebte Element des Werttupels.</param>
        <param name="rest">Eine Instanz eines beliebigen Werttupeltyps, die die Werte der verbleibenden Elemente des Werttupels enthält.</param>
        <summary>Initialisiert eine neue Instanz von <see cref="T:System.ValueTuple`8" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zusätzlich zur Verwendung der Build-in-Unterstützung für Tupel in der Sprache können Sie auch ein werttupel erstellen, indem Sie die statische <xref:System.ValueTuple.Create%60%608%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%2C%60%607%29?displayProperty=nameWithType> Methode aufrufen, ohne die Typen ihrer Elemente explizit angeben zu müssen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="rest" /> ist kein generischer Werttupeltyp.</exception>
        <altmember cref="M:System.ValueTuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo ((T1,T2,T3,T4,T5,T6,T7,TRest) other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(valuetype System.ValueTuple`8&lt;!T1, !T2, !T3, !T4, !T5, !T6, !T7, !TRest&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueTuple`8.CompareTo(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,`7})" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, TRest)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, TRest&gt; other);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest (requires 'Rest : struct)&gt; -&gt; int&#xA;override this.CompareTo : ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest (requires 'Rest : struct)&gt; -&gt; int" Usage="valueTuple.CompareTo other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt;" />
      </Parameters>
      <Docs>
        <param name="other">Das Tupel, das mit dieser Instanz verglichen werden soll.</param>
        <summary>Vergleicht die aktuelle <see cref="T:System.ValueTuple`8" />-Instanz mit einer angegebenen <see cref="T:System.ValueTuple`8" />-Instanz.</summary>
        <returns>Eine ganze Zahl mit Vorzeichen, die die relative Position dieser Instanz und von <paramref name="other" /> in der Sortierreihenfolge angibt, wie in der folgenden Tabelle veranschaulicht.  
  
 <list type="table"><listheader><term> value 
 </term><description> BESCHREIBUNG 
 </description></listheader><item><term> Eine negative ganze Zahl 
 </term><description> Diese Instanz geht <paramref name="other" /> voran.  
  
 </description></item><item><term> Null 
 </term><description> Diese Instanz und <paramref name="other" /> befinden sich in der Sortierreihenfolge an der gleichen Position.  
  
 </description></item><item><term> Positive Ganzzahl 
 </term><description> Diese Instanz folgt <paramref name="other" />.  
  
 </description></item></list></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt einen Wert zurück, der angibt, ob die aktuelle <see cref="T:System.ValueTuple`8" />-Instanz gleich einem angegebenen Objekt ist.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueTuple`8.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="valueTuple.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Das Objekt, das mit dieser Instanz verglichen werden soll.</param>
        <summary>Gibt einen Wert zurück, der angibt, ob die aktuelle <see cref="T:System.ValueTuple`8" />-Instanz gleich einem angegebenen Objekt ist.</summary>
        <returns><see langword="true" />, wenn die aktuelle Instanz gleich dem angegebenen Objekt ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das `obj`-Argument wird unter folgenden Bedingungen als gleich der aktuellen Instanz betrachtet:  
  
-   Dabei handelt es sich um einen <xref:System.ValueTuple%608> Werttyp.  
  
-   Die Komponenten sind von denselben Typen wie die der aktuellen Instanz.  
  
-   Die zugehörigen Komponenten entsprechen denen der aktuellen Instanz. Gleichheit wird durch den Standard Gleichheits Vergleich für jede Komponente bestimmt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals ((T1,T2,T3,T4,T5,T6,T7,TRest) other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.ValueTuple`8&lt;!T1, !T2, !T3, !T4, !T5, !T6, !T7, !TRest&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueTuple`8.Equals(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,`7})" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, TRest)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, TRest&gt; other);" />
      <MemberSignature Language="F#" Value="override this.Equals : ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest (requires 'Rest : struct)&gt; -&gt; bool" Usage="valueTuple.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt;" />
      </Parameters>
      <Docs>
        <param name="other">Das Werttupel, das mit dieser Instanz verglichen werden soll.</param>
        <summary>Gibt einen Wert zurück, der angibt, ob die aktuelle <see cref="T:System.ValueTuple`8" />-Instanz gleich einer angegebenen <see cref="T:System.ValueTuple`8" />-Instanz ist.</summary>
        <returns><see langword="true" />, wenn die aktuelle Instanz gleich dem angegebenen Tupel ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das `other`-Argument wird unter folgenden Bedingungen als gleich der aktuellen Instanz betrachtet:  
  
-   Die Komponenten sind von denselben Typen wie die der aktuellen Instanz.  
  
-   Die zugehörigen Komponenten entsprechen denen der aktuellen Instanz. Gleichheit wird durch den Standard Gleichheits Vergleich für jede Komponente bestimmt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueTuple`8.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="valueTuple.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Berechnet den Hashcode für die aktuelle <see cref="T:System.ValueTuple`8" />-Instanz.</summary>
        <returns>Der Hashcode für die aktuelle <see cref="T:System.ValueTuple`8" />-Instanz.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item1">
      <MemberSignature Language="C#" Value="public T1 Item1;" />
      <MemberSignature Language="ILAsm" Value=".field public !T1 Item1" />
      <MemberSignature Language="DocId" Value="F:System.ValueTuple`8.Item1" />
      <MemberSignature Language="VB.NET" Value="Public Item1 As T1 " />
      <MemberSignature Language="C++ CLI" Value="public: T1 Item1;" />
      <MemberSignature Language="F#" Value="val mutable Item1 : 'T1" Usage="System.ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest (requires 'Rest : struct)&gt;.Item1" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T1</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert des ersten Elements der aktuellen <see cref="T:System.ValueTuple`8" />-Instanz ab.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item2">
      <MemberSignature Language="C#" Value="public T2 Item2;" />
      <MemberSignature Language="ILAsm" Value=".field public !T2 Item2" />
      <MemberSignature Language="DocId" Value="F:System.ValueTuple`8.Item2" />
      <MemberSignature Language="VB.NET" Value="Public Item2 As T2 " />
      <MemberSignature Language="C++ CLI" Value="public: T2 Item2;" />
      <MemberSignature Language="F#" Value="val mutable Item2 : 'T2" Usage="System.ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest (requires 'Rest : struct)&gt;.Item2" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert des zweiten Elements der aktuellen <see cref="T:System.ValueTuple`8" />-Instanz ab.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item3">
      <MemberSignature Language="C#" Value="public T3 Item3;" />
      <MemberSignature Language="ILAsm" Value=".field public !T3 Item3" />
      <MemberSignature Language="DocId" Value="F:System.ValueTuple`8.Item3" />
      <MemberSignature Language="VB.NET" Value="Public Item3 As T3 " />
      <MemberSignature Language="C++ CLI" Value="public: T3 Item3;" />
      <MemberSignature Language="F#" Value="val mutable Item3 : 'T3" Usage="System.ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest (requires 'Rest : struct)&gt;.Item3" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert des dritten Elements der aktuellen <see cref="T:System.ValueTuple`8" />-Instanz ab.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item4">
      <MemberSignature Language="C#" Value="public T4 Item4;" />
      <MemberSignature Language="ILAsm" Value=".field public !T4 Item4" />
      <MemberSignature Language="DocId" Value="F:System.ValueTuple`8.Item4" />
      <MemberSignature Language="VB.NET" Value="Public Item4 As T4 " />
      <MemberSignature Language="C++ CLI" Value="public: T4 Item4;" />
      <MemberSignature Language="F#" Value="val mutable Item4 : 'T4" Usage="System.ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest (requires 'Rest : struct)&gt;.Item4" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T4</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert des vierten Elements der aktuellen <see cref="T:System.ValueTuple`8" />-Instanz ab.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item5">
      <MemberSignature Language="C#" Value="public T5 Item5;" />
      <MemberSignature Language="ILAsm" Value=".field public !T5 Item5" />
      <MemberSignature Language="DocId" Value="F:System.ValueTuple`8.Item5" />
      <MemberSignature Language="VB.NET" Value="Public Item5 As T5 " />
      <MemberSignature Language="C++ CLI" Value="public: T5 Item5;" />
      <MemberSignature Language="F#" Value="val mutable Item5 : 'T5" Usage="System.ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest (requires 'Rest : struct)&gt;.Item5" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T5</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert des fünften Elements der aktuellen <see cref="T:System.ValueTuple`8" />-Instanz ab.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item6">
      <MemberSignature Language="C#" Value="public T6 Item6;" />
      <MemberSignature Language="ILAsm" Value=".field public !T6 Item6" />
      <MemberSignature Language="DocId" Value="F:System.ValueTuple`8.Item6" />
      <MemberSignature Language="VB.NET" Value="Public Item6 As T6 " />
      <MemberSignature Language="C++ CLI" Value="public: T6 Item6;" />
      <MemberSignature Language="F#" Value="val mutable Item6 : 'T6" Usage="System.ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest (requires 'Rest : struct)&gt;.Item6" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T6</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert des sechsten Elements der aktuellen <see cref="T:System.ValueTuple`8" />-Instanz ab.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item7">
      <MemberSignature Language="C#" Value="public T7 Item7;" />
      <MemberSignature Language="ILAsm" Value=".field public !T7 Item7" />
      <MemberSignature Language="DocId" Value="F:System.ValueTuple`8.Item7" />
      <MemberSignature Language="VB.NET" Value="Public Item7 As T7 " />
      <MemberSignature Language="C++ CLI" Value="public: T7 Item7;" />
      <MemberSignature Language="F#" Value="val mutable Item7 : 'T7" Usage="System.ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest (requires 'Rest : struct)&gt;.Item7" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T7</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert des siebten Elements der aktuellen <see cref="T:System.ValueTuple`8" />-Instanz ab.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rest">
      <MemberSignature Language="C#" Value="public TRest Rest;" />
      <MemberSignature Language="ILAsm" Value=".field public !TRest Rest" />
      <MemberSignature Language="DocId" Value="F:System.ValueTuple`8.Rest" />
      <MemberSignature Language="VB.NET" Value="Public Rest As TRest " />
      <MemberSignature Language="C++ CLI" Value="public: TRest Rest;" />
      <MemberSignature Language="F#" Value="val mutable Rest : 'Rest" Usage="System.ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest (requires 'Rest : struct)&gt;.Rest" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TRest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die verbleibenden Elemente der aktuellen <see cref="T:System.ValueTuple`8" />-Instanz ab.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.ValueTuple%608.Rest> Feld gibt ein Tupel mit einem Wert für ein Feld zurück, das den Zugriff auf das achte, aber *n*-te Element des Tupels ermöglicht. Abhängig von der Gesamtzahl der Elemente im Tupel können die Werte der acht bis 14 vier Komponenten durch `Item7` Eigenschaften aus dem `Item1` des Tupels für das abgerufen werden. Anschließend können Sie die <xref:System.ValueTuple%608.Rest>-Eigenschaft eines geschachtelten <xref:System.ValueTuple%608>-Objekts verwenden, um das werttupel auf der nächsten Schachtelungs Ebene abzurufen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralComparable.CompareTo(object other, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueTuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (other As Object, comparer As IComparer) As Integer Implements IStructuralComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralComparable.CompareTo(System::Object ^ other, System::Collections::IComparer ^ comparer) = System::Collections::IStructuralComparable::CompareTo;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IStructuralComparable.CompareTo : obj * System.Collections.IComparer -&gt; int&#xA;override this.System.Collections.IStructuralComparable.CompareTo : obj * System.Collections.IComparer -&gt; int" Usage="valueTuple.System.Collections.IStructuralComparable.CompareTo (other, comparer)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="other">Das Objekt, das mit der aktuellen Instanz verglichen werden soll.</param>
        <param name="comparer">Ein Objekt, das benutzerdefinierte Regeln für Vergleiche bereitstellt.</param>
        <summary>Vergleicht die aktuelle <see cref="T:System.ValueTuple`8" />-Instanz mit einem angegebenen Objekt unter Verwendung der angegebenen Vergleichsfunktion und gibt eine Ganzzahl zurück, die darauf hinweist, ob sich das aktuelle Objekt in der Sortierreihenfolge vor oder hinter dem angegebenen Objekt oder an der gleichen Position befindet.</summary>
        <returns>Eine ganze Zahl mit Vorzeichen, die die relative Position dieser Instanz und von <paramref name="other" /> in der Sortierreihenfolge angibt, wie in der folgenden Tabelle veranschaulicht.  
  
 <list type="table"><listheader><term> value 
 </term><description> BESCHREIBUNG 
 </description></listheader><item><term> Eine negative ganze Zahl 
 </term><description> Diese Instanz geht <paramref name="other" /> voran.  
  
 </description></item><item><term> Null 
 </term><description> Diese Instanz und <paramref name="other" /> befinden sich in der Sortierreihenfolge an der gleichen Position.  
  
 </description></item><item><term> Positive Ganzzahl 
 </term><description> Diese Instanz folgt <paramref name="other" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Member ist eine explizite Schnittstellenimplementierung. Sie kann nur verwendet werden, wenn die <xref:System.ValueTuple%608> Instanz in eine <xref:System.Collections.IStructuralComparable>-Schnittstelle umgewandelt wird.  
  
 Mit dieser Methode können Sie angepasste Vergleiche von <xref:System.ValueTuple%608>-Objekten definieren. Sie können diese Methode z. b. verwenden, um <xref:System.ValueTuple%608> Objekte auf der Grundlage des Werts einer bestimmten Komponente zu ordnen.  
  
 Obwohl diese Methode direkt aufgerufen werden kann, wird Sie am häufigsten von Auflistungs Sortiermethoden aufgerufen, die <xref:System.Collections.IComparer>-Parameter enthalten, um die Elemente einer Auflistung zu sortieren. Beispielsweise wird Sie durch die <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType>-Methode und die <xref:System.Collections.SortedList.Add%2A>-Methode eines <xref:System.Collections.SortedList>-Objekts aufgerufen, das mit dem <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType>-Konstruktor instanziiert wird.  
  
> [!CAUTION]
>  Die <xref:System.ValueTuple%608.System%23Collections%23IStructuralComparable%23CompareTo%2A>-Methode ist für die Verwendung in Sortiervorgängen vorgesehen. Er sollte nicht verwendet werden, wenn der Hauptzweck eines Vergleichs darin besteht, zu bestimmen, ob zwei Objekte gleich sind. Um zu ermitteln, ob zwei Objekte gleich sind, müssen Sie die <xref:System.ValueTuple%608.System%23Collections%23IStructuralEquatable%23Equals%2A>-Methode aufzurufen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="other" /> ist kein <see cref="T:System.ValueTuple`8" />-Objekt.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.Equals">
      <MemberSignature Language="C#" Value="bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IStructuralEquatable.Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueTuple`8.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As Object, comparer As IEqualityComparer) As Boolean Implements IStructuralEquatable.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IStructuralEquatable.Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::Equals;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IStructuralEquatable.Equals : obj * System.Collections.IEqualityComparer -&gt; bool&#xA;override this.System.Collections.IStructuralEquatable.Equals : obj * System.Collections.IEqualityComparer -&gt; bool" Usage="valueTuple.System.Collections.IStructuralEquatable.Equals (other, comparer)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other">Das Objekt, das mit dieser Instanz verglichen werden soll.</param>
        <param name="comparer">Ein Objekt, das die Methode definiert, mit der ermittelt wird, ob die beiden Objekte gleich sind.</param>
        <summary>Gibt einen Wert zurück, der angibt, ob die aktuelle <see cref="T:System.ValueTuple`8" />-Instanz nach einer angegebenen Vergleichsmethode gleich einem angegebenen Objekt ist.</summary>
        <returns><see langword="true" />, wenn die aktuelle Instanz gleich den angegebenen Objekten ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Member ist eine explizite Schnittstellenimplementierung. Sie kann nur verwendet werden, wenn die <xref:System.ValueTuple%608> Instanz in eine <xref:System.Collections.IStructuralEquatable>-Schnittstelle umgewandelt wird.  
  
 Die <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType>-Implementierung wird nur aufgerufen, wenn `other` nicht `null`ist, und wenn Sie erfolgreich in ein <xref:System.ValueTuple%608> Objekt umgewandelt werden kann, das über die gleiche Gesamtzahl von Komponenten (einschließlich der in den geclusterte tupelobjekten) der gleichen Typen wie die aktuelle Instanz verfügt. Die <xref:System.Collections.IStructuralEquatable.Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29?displayProperty=nameWithType>-Methode übergibt zuerst die <xref:System.ValueTuple%608.Item1> Werte der <xref:System.ValueTuple%608>-Objekte, die mit der <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType>-Implementierung verglichen werden sollen. Wenn dieser Methodenaufruf `true`zurückgibt, wird die-Methode erneut aufgerufen und die <xref:System.ValueTuple%608.Item2> Werte der beiden <xref:System.ValueTuple%608>-Objekte übermittelt. Dies wird so lange fortgesetzt, bis der Methoden Aufrufwert `false` zurückgibt, wenn ein bestimmtes Wertepaar verglichen wird, oder die beiden <xref:System.ValueTuple%608.Rest> Werte werden an die Methode weitergegeben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.GetHashCode">
      <MemberSignature Language="C#" Value="int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralEquatable.GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueTuple`8.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (comparer As IEqualityComparer) As Integer Implements IStructuralEquatable.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralEquatable.GetHashCode(System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::GetHashCode;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IStructuralEquatable.GetHashCode : System.Collections.IEqualityComparer -&gt; int&#xA;override this.System.Collections.IStructuralEquatable.GetHashCode : System.Collections.IEqualityComparer -&gt; int" Usage="valueTuple.System.Collections.IStructuralEquatable.GetHashCode comparer" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer">Ein Objekt, dessen <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" />-Methode den Hashcode der aktuellen <see cref="T:System.ValueTuple`8" />-Instanz berechnet.</param>
        <summary>Berechnet den Hashcode für die aktuelle <see cref="T:System.ValueTuple`8" />-Instanz mit einer angegebenen Berechnungsmethode.</summary>
        <returns>Ein Hashcode in Form einer 32-Bit-Ganzzahl mit Vorzeichen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Member ist eine explizite Schnittstellenimplementierung. Sie kann nur verwendet werden, wenn die <xref:System.ValueTuple%608> Instanz in eine <xref:System.Collections.IStructuralEquatable>-Schnittstelle umgewandelt wird.  Die-Methode umschließt einfach einen aufzurufenden <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType> Implementierung des `comparer` Objekts.  
  
 Der Algorithmus, der zum Berechnen des Hashcodes verwendet wird, sollte den gleichen Hashcode für zwei <xref:System.ValueTuple%608> Objekte zurückgeben, die als gleich betrachtet werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object other);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueTuple`8.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (other As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ other) = IComparable::CompareTo;" />
      <MemberSignature Language="F#" Value="abstract member System.IComparable.CompareTo : obj -&gt; int&#xA;override this.System.IComparable.CompareTo : obj -&gt; int" Usage="valueTuple.System.IComparable.CompareTo other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="other">Ein Objekt, das mit der aktuellen Instanz verglichen werden soll.</param>
        <summary>Vergleicht das aktuelle <see cref="T:System.ValueTuple`8" />-Objekt mit einem angegebenen Objekt und gibt eine Ganzzahl zurück, die darauf hinweist, ob sich das aktuelle Objekt in der Sortierreihenfolge vor oder hinter dem angegebenen Objekt oder an der gleichen Position befindet.</summary>
        <returns>Eine ganze Zahl mit Vorzeichen, die die relative Position dieser Instanz und von <paramref name="obj" /> in der Sortierreihenfolge angibt, wie in der folgenden Tabelle veranschaulicht.  
  
 <list type="table"><listheader><term> value 
 </term><description> BESCHREIBUNG 
 </description></listheader><item><term> Eine negative ganze Zahl 
 </term><description> Diese Instanz geht <paramref name="other" /> voran.  
  
 </description></item><item><term> Null 
 </term><description> Diese Instanz und <paramref name="other" /> befinden sich in der Sortierreihenfolge an der gleichen Position.  
  
 </description></item><item><term> Positive Ganzzahl 
 </term><description> Diese Instanz folgt <paramref name="other" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.ValueTuple%608>-Instanz in eine <xref:System.IComparable>-Schnittstelle umgewandelt wird.  
  
 Diese Methode stellt die <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType>-Implementierung für die <xref:System.ValueTuple%608>-Struktur bereit. Obwohl die-Methode direkt aufgerufen werden kann, wird Sie am häufigsten von den Standard Überladungen von Auflistungs Sortiermethoden (z. b. <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> und <xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>) aufgerufen, um die Elemente einer Auflistung zu sortieren.  
  
> [!CAUTION]
>  Die <xref:System.ValueTuple%608.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType>-Methode ist für die Verwendung in Sortiervorgängen vorgesehen. Er sollte nicht verwendet werden, wenn der Hauptzweck eines Vergleichs darin besteht, zu bestimmen, ob zwei Objekte gleich sind. Um zu ermitteln, ob zwei Objekte gleich sind, müssen Sie die <xref:System.ValueTuple%608.Equals%28System.Object%29?displayProperty=nameWithType>-Methode aufzurufen.  
  
 Diese Methode verwendet den standardobjektcomparer zum Vergleichen der einzelnen Komponenten.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="other" /> ist kein <see cref="T:System.ValueTuple`8" />-Objekt.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Item">
      <MemberSignature Language="C#" Value="object System.Runtime.CompilerServices.ITuple.Item[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Runtime.CompilerServices.ITuple.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.ValueTuple`8.System#Runtime#CompilerServices#ITuple#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Item(index As Integer) As Object Implements ITuple.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Runtime::CompilerServices::ITuple::Item[int] { System::Object ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.System.Runtime.CompilerServices.ITuple.Item(int) : obj" Usage="System.Runtime.CompilerServices.ITuple.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="index">Der Wert des angegebenen Elements <see langword="ValueTuple" />. <paramref name="index" /> kann von 0 bis <see langword="Item1" /> reichen, bis zu einer Zahl weniger als die Anzahl der Elemente in <see langword="ValueTuple" />.</param>
        <summary>Ruft den Wert des angegebenen Elements <see langword="ValueTuple" /> ab.</summary>
        <value>Entfernt den Wert des <see langword="ValueTuple" />-Elements an der angegebenen Position.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ValueTuple%608.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType>-Eigenschaft ist eine explizite Schnittstellen Implementierung. Um dies aufzurufen, müssen Sie das <xref:System.ValueTuple%608>-Objekt in ein <xref:System.Runtime.CompilerServices.ITuple> Interface-Objekt umwandeln oder konvertieren.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><paramref name="index" /> ist kleiner als 0.  
  
Oder 
 <paramref name="index" /> ist größer gleich <see cref="P:System.ValueTuple`8.System#Runtime#CompilerServices#ITuple#Length" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Length">
      <MemberSignature Language="C#" Value="int System.Runtime.CompilerServices.ITuple.Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Runtime.CompilerServices.ITuple.Length" />
      <MemberSignature Language="DocId" Value="P:System.ValueTuple`8.System#Runtime#CompilerServices#ITuple#Length" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Length As Integer Implements ITuple.Length" />
      <MemberSignature Language="C++ CLI" Value="property int System::Runtime::CompilerServices::ITuple::Length { int get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Runtime.CompilerServices.ITuple.Length : int" Usage="System.Runtime.CompilerServices.ITuple.Length" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Length</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Elemente im <see langword="ValueTuple" /> ab.</summary>
        <value>Die Anzahl der Elemente im <see langword="ValueTuple" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ValueTuple%608.System%23Runtime%23CompilerServices%23ITuple%23Length%2A?displayProperty=nameWithType>-Eigenschaft ist eine explizite Schnittstellen Implementierung. Um dies aufzurufen, müssen Sie das <xref:System.ValueTuple%608>-Objekt in ein <xref:System.Runtime.CompilerServices.ITuple> Interface-Objekt umwandeln oder konvertieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueTuple`8.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="valueTuple.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Zeichenfolge zurück, die den Wert dieser <see cref="T:System.ValueTuple`8" />-Instanz darstellt.</summary>
        <returns>Die Zeichenfolgendarstellung dieser <see cref="T:System.ValueTuple`8" />-Instanz.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die von dieser Methode zurückgegebene Zeichenfolge hat das Format (*item1*, *item2*, *item3*, *item4*, *Item5*, *Item6*, *Item7*, *Item8*...), wobei *item1*, *item2*, *item3*, *item4*, *Item5*, *Item6*und *Item7* die Werte der Felder <xref:System.ValueTuple%608.Item1>, <xref:System.ValueTuple%608.Item2>, <xref:System.ValueTuple%608.Item3>, <xref:System.ValueTuple%608.Item4>, <xref:System.ValueTuple%608.Item5>, <xref:System.ValueTuple%608.Item6>und <xref:System.ValueTuple%608.Item7> darstellen. *Item8* stellt den Wert des `Next.Item1` Felds der <xref:System.ValueTuple%608> Instanz dar. Der Wert aller zusätzlichen Elemente, die als Elemente eingefügt werden, folgt *Item8*. Wenn einer der Feldwerte `null`ist, wird er als <xref:System.String.Empty?displayProperty=nameWithType>dargestellt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
