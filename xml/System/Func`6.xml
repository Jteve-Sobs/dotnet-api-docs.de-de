<Type Name="Func&lt;T1,T2,T3,T4,T5,TResult&gt;" FullName="System.Func&lt;T1,T2,T3,T4,T5,TResult&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="96646455c87c850b17b3f25445cacedff7b1061d" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58745885" /></Metadata><TypeSignature Language="C#" Value="public delegate TResult Func&lt;in T1,in T2,in T3,in T4,in T5,out TResult&gt;(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Func`6&lt;- T1, - T2, - T3, - T4, - T5, + TResult&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Func`6" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function Func(Of In T1, In T2, In T3, In T4, In T5, Out TResult)(arg1 As T1, arg2 As T2, arg3 As T3, arg4 As T4, arg5 As T5) As TResult " />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename TResult&gt;&#xA;public delegate TResult Func(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5);" />
  <TypeSignature Language="F#" Value="type Func&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'Result&gt; = delegate of 'T1 * 'T2 * 'T3 * 'T4 * 'T5 -&gt; 'Result" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T2">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T3">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T4">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T5">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TResult">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="arg1" Type="T1" />
    <Parameter Name="arg2" Type="T2" />
    <Parameter Name="arg3" Type="T3" />
    <Parameter Name="arg4" Type="T4" />
    <Parameter Name="arg5" Type="T5" />
  </Parameters>
  <ReturnValue>
    <ReturnType>TResult</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="T1">Der Typ des ersten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
    <typeparam name="T2">Der Typ des zweiten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
    <typeparam name="T3">Der Typ des dritten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
    <typeparam name="T4">Der Typ des vierten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
    <typeparam name="T5">Der Typ des fünften Parameters der Methode, die dieser Delegat kapselt.</typeparam>
    <typeparam name="TResult">Der Typ des Rückgabewerts der Methode, die dieser Delegat kapselt.</typeparam>
    <param name="arg1">Der erste Parameter der Methode, die dieser Delegat kapselt.</param>
    <param name="arg2">Der zweite Parameter der Methode, die dieser Delegat kapselt.</param>
    <param name="arg3">Der dritte Parameter der Methode, die dieser Delegat kapselt.</param>
    <param name="arg4">Der vierte Parameter der Methode, die dieser Delegat kapselt.</param>
    <param name="arg5">Der fünfte Parameter der Methode, die dieser Delegat kapselt.</param>
    <summary>Kapselt eine Methode, die über fünf Parameter verfügt und einen Wert von dem Typ zurückgibt, der vom <typeparamref name="TResult" />-Parameter angegeben wird.</summary>
    <returns>Der Rückgabewert der Methode, die dieser Delegat kapselt.</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diesen Delegaten verwenden, um eine Methode darstellen, die als Parameter übergeben werden können, ohne explizit einen benutzerdefinierten Delegaten zu deklarieren. Die der gekapselte Methode muss die Signatur der Methode entsprechen, die von diesem Delegaten definiert ist. Dies bedeutet, dass die gekapselte Methode über fünf Parameter verfügen muss, die von die jede an sie als Wert übergeben wird, und sie einen Wert zurückgeben muss.  
  
> [!NOTE]
>  Um eine Methode zu verweisen, die über fünf Parameter verfügt und zurückgibt `void` (oder in Visual Basic deklariert wird als eine `Sub` statt als ein `Function`), die generische <xref:System.Action%605> stattdessen delegieren.  
  
 Sie können auch die <xref:System.Func%606> mit anonymen Methoden und Lambda-Ausdrücke zu delegieren.  
  
 Der zugrunde liegende Typ eines Lambda-Ausdrucks ist eine der generischen `Func` Delegaten. Dadurch wird es möglich, einen Lambda-Ausdruck als Parameter übergeben werden, ohne explizit einen Delegaten zuzuweisen.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Action`5" />
  </Docs>
</Type>