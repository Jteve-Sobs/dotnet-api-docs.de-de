<Type Name="Func&lt;T1,T2,T3,T4,T5,TResult&gt;" FullName="System.Func&lt;T1,T2,T3,T4,T5,TResult&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dd554722b1f7e813bd49e3b80e2f3c810f73de05" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75172972" /></Metadata><TypeSignature Language="C#" Value="public delegate TResult Func&lt;in T1,in T2,in T3,in T4,in T5,out TResult&gt;(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Func`6&lt;- T1, - T2, - T3, - T4, - T5, + TResult&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Func`6" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function Func(Of In T1, In T2, In T3, In T4, In T5, Out TResult)(arg1 As T1, arg2 As T2, arg3 As T3, arg4 As T4, arg5 As T5) As TResult " />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename TResult&gt;&#xA;public delegate TResult Func(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5);" />
  <TypeSignature Language="F#" Value="type Func&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'Result&gt; = delegate of 'T1 * 'T2 * 'T3 * 'T4 * 'T5 -&gt; 'Result" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T2">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T3">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T4">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T5">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TResult">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="arg1" Type="T1" />
    <Parameter Name="arg2" Type="T2" />
    <Parameter Name="arg3" Type="T3" />
    <Parameter Name="arg4" Type="T4" />
    <Parameter Name="arg5" Type="T5" />
  </Parameters>
  <ReturnValue>
    <ReturnType>TResult</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="T1">Der Typ des ersten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
    <typeparam name="T2">Der Typ des zweiten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
    <typeparam name="T3">Der Typ des dritten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
    <typeparam name="T4">Der Typ des vierten Parameters der Methode, die dieser Delegat kapselt.</typeparam>
    <typeparam name="T5">Der Typ des fünften Parameters der Methode, die dieser Delegat kapselt.</typeparam>
    <typeparam name="TResult">Der Typ des Rückgabewerts der Methode, die dieser Delegat kapselt.</typeparam>
    <param name="arg1">Der erste Parameter der Methode, die dieser Delegat kapselt.</param>
    <param name="arg2">Der zweite Parameter der Methode, die dieser Delegat kapselt.</param>
    <param name="arg3">Der dritte Parameter der Methode, die dieser Delegat kapselt.</param>
    <param name="arg4">Der vierte Parameter der Methode, die dieser Delegat kapselt.</param>
    <param name="arg5">Der fünfte Parameter der Methode, die dieser Delegat kapselt.</param>
    <summary>Kapselt eine Methode, die über fünf Parameter verfügt und einen Wert von dem Typ zurückgibt, der vom <typeparamref name="TResult" />-Parameter angegeben wird.</summary>
    <returns>Der Rückgabewert der Methode, die dieser Delegat kapselt.</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit diesem Delegaten können Sie eine Methode darstellen, die als Parameter übergeben werden kann, ohne explizit einen benutzerdefinierten Delegaten zu deklarieren. Die gekapselte Methode muss der Methoden Signatur entsprechen, die von diesem Delegaten definiert wird. Dies bedeutet, dass die gekapselte Methode über fünf Parameter verfügen muss, die jeweils als Wert an Sie übermittelt werden, und dass ein Wert zurückgegeben werden muss.  
  
> [!NOTE]
>  Um auf eine Methode zu verweisen, die über fünf Parameter verfügt und `void` (oder in Visual Basic als `Sub` und nicht als `Function`) zurückgibt, verwenden Sie stattdessen den generischen <xref:System.Action%605> Delegaten.  
  
 Sie können auch den <xref:System.Func%606> Delegaten mit anonymen Methoden und Lambda Ausdrücken verwenden.  
  
 Der zugrunde liegende Typ eines Lambda-Ausdrucks ist einer der generischen `Func` Delegaten. Dadurch ist es möglich, einen Lambda-Ausdruck als Parameter zu übergeben, ohne ihn explizit einem Delegaten zuzuweisen.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Action`5" />
  </Docs>
</Type>
