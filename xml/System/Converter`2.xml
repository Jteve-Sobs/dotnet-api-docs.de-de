<Type Name="Converter&lt;TInput,TOutput&gt;" FullName="System.Converter&lt;TInput,TOutput&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="90bd46ea0ad374ca0d7d8813ed91d7844450532b" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78828382" /></Metadata><TypeSignature Language="C#" Value="public delegate TOutput Converter&lt;in TInput,out TOutput&gt;(TInput input);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Converter`2&lt;- TInput, + TOutput&gt; extends System.MulticastDelegate" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="DocId" Value="T:System.Converter`2" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function Converter(Of In TInput, Out TOutput)(input As TInput) As TOutput " FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TInput, typename TOutput&gt;&#xA;public delegate TOutput Converter(TInput input);" />
  <TypeSignature Language="F#" Value="type Converter&lt;'Input, 'Output&gt; = delegate of 'Input -&gt; 'Output" />
  <TypeSignature Language="C#" Value="public delegate TOutput Converter&lt;TInput,TOutput&gt;(TInput input);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Converter`2&lt;TInput, TOutput&gt; extends System.MulticastDelegate" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function Converter(Of TInput, TOutput)(input As TInput) As TOutput " FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TInput">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TOutput">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="input" Type="TInput" />
  </Parameters>
  <ReturnValue>
    <ReturnType>TOutput</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="TInput"><span data-ttu-id="6ed0b-101">Der Typ des umzuwandelnden Objekts.</span><span class="sxs-lookup"><span data-stu-id="6ed0b-101">The type of object that is to be converted.</span></span></typeparam>
    <typeparam name="TOutput"><span data-ttu-id="6ed0b-102">Der Typ, in den das Eingabeobjekt konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="6ed0b-102">The type the input object is to be converted to.</span></span></typeparam>
    <param name="input"><span data-ttu-id="6ed0b-103">Das zu konvertierende Objekt.</span><span class="sxs-lookup"><span data-stu-id="6ed0b-103">The object to convert.</span></span></param>
    <summary><span data-ttu-id="6ed0b-104">Stellt eine Methode dar, die ein Objekt von einem Typ in einen anderen Typ konvertiert.</span><span class="sxs-lookup"><span data-stu-id="6ed0b-104">Represents a method that converts an object from one type to another type.</span></span></summary>
    <returns><span data-ttu-id="6ed0b-105">Die <typeparamref name="TOutput" />, die die konvertierte <typeparamref name="TInput" /> darstellt.</span><span class="sxs-lookup"><span data-stu-id="6ed0b-105">The <typeparamref name="TOutput" /> that represents the converted <typeparamref name="TInput" />.</span></span></returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ed0b-106">Dieser Delegat wird von der <xref:System.Array.ConvertAll%2A>-Methode der <xref:System.Array>-Klasse und der <xref:System.Collections.Generic.List`1.ConvertAll*>-Methode der <xref:System.Collections.Generic.List%601>-Klasse verwendet, um jedes Element der Auflistung von einem Typ in einen anderen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="6ed0b-106">This delegate is used by the <xref:System.Array.ConvertAll%2A> method of the <xref:System.Array> class and the <xref:System.Collections.Generic.List`1.ConvertAll*> method of the <xref:System.Collections.Generic.List%601> class to convert each element of the collection from one type to another.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ed0b-107">Dieser Abschnitt enthält zwei Codebeispiele.</span><span class="sxs-lookup"><span data-stu-id="6ed0b-107">This section contains two code examples.</span></span> <span data-ttu-id="6ed0b-108">Der erste veranschaulicht den <xref:System.Converter%602> Delegaten mit der <xref:System.Array.ConvertAll%2A>-Methode der <xref:System.Array>-Klasse, und der zweite veranschaulicht den Delegaten mit der <xref:System.Collections.Generic.List`1.ConvertAll*>-Methode der <xref:System.Collections.Generic.List%601> generischen Klasse.</span><span class="sxs-lookup"><span data-stu-id="6ed0b-108">The first demonstrates the <xref:System.Converter%602> delegate with the <xref:System.Array.ConvertAll%2A> method of the <xref:System.Array> class, and the second demonstrates the delegate with the <xref:System.Collections.Generic.List`1.ConvertAll*> method of the <xref:System.Collections.Generic.List%601> generic class.</span></span>  
  
 <span data-ttu-id="6ed0b-109">Beispiel 1</span><span class="sxs-lookup"><span data-stu-id="6ed0b-109">Example 1</span></span>  
  
 <span data-ttu-id="6ed0b-110">Im folgenden Codebeispiel wird eine Methode mit dem Namen `PointFToPoint` definiert, die eine <xref:System.Drawing.PointF>-Struktur in eine <xref:System.Drawing.Point> Struktur konvertiert.</span><span class="sxs-lookup"><span data-stu-id="6ed0b-110">The following code example defines a method named `PointFToPoint` that converts a <xref:System.Drawing.PointF> structure to a <xref:System.Drawing.Point> structure.</span></span> <span data-ttu-id="6ed0b-111">Im Beispiel wird dann ein Array aus <xref:System.Drawing.PointF> Strukturen erstellt, ein `Converter<PointF, Point>` Delegat (`Converter(Of PointF, Point)` in Visual Basic) erstellt, um die `PointFToPoint`-Methode darzustellen, und der-Delegat wird an die <xref:System.Array.ConvertAll%2A>-Methode weitergeleitet.</span><span class="sxs-lookup"><span data-stu-id="6ed0b-111">The example then creates an array of <xref:System.Drawing.PointF> structures, creates a `Converter<PointF, Point>` delegate (`Converter(Of PointF, Point)` in Visual Basic) to represent the `PointFToPoint` method, and passes the delegate to the <xref:System.Array.ConvertAll%2A> method.</span></span> <span data-ttu-id="6ed0b-112">Die <xref:System.Array.ConvertAll%2A>-Methode übergibt jedes Element der Eingabeliste an die `PointFToPoint`-Methode und fügt die konvertierten Elemente in eine neue Liste von <xref:System.Drawing.Point> Strukturen ein.</span><span class="sxs-lookup"><span data-stu-id="6ed0b-112">The <xref:System.Array.ConvertAll%2A> method passes each element of the input list to the `PointFToPoint` method and puts the converted elements into a new list of <xref:System.Drawing.Point> structures.</span></span> <span data-ttu-id="6ed0b-113">Beide Listen werden angezeigt.</span><span class="sxs-lookup"><span data-stu-id="6ed0b-113">Both lists are displayed.</span></span>  
  
 [!code-cpp[Array_ConvertAll#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_ConvertAll/cpp/source.cpp#1)]
 [!code-csharp[Array_ConvertAll#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_ConvertAll/cs/source.cs#1)]
 [!code-vb[Array_ConvertAll#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_ConvertAll/vb/source.vb#1)]  
  
 <span data-ttu-id="6ed0b-114">Beispiel 2</span><span class="sxs-lookup"><span data-stu-id="6ed0b-114">Example 2</span></span>  
  
 <span data-ttu-id="6ed0b-115">Im folgenden Codebeispiel wird eine Methode mit dem Namen `PointFToPoint` definiert, die eine <xref:System.Drawing.PointF>-Struktur in eine <xref:System.Drawing.Point> Struktur konvertiert.</span><span class="sxs-lookup"><span data-stu-id="6ed0b-115">The following code example defines a method named `PointFToPoint` that converts a <xref:System.Drawing.PointF> structure to a <xref:System.Drawing.Point> structure.</span></span> <span data-ttu-id="6ed0b-116">Im Beispiel wird dann eine <xref:System.Collections.Generic.List%601> <xref:System.Drawing.PointF> Strukturen erstellt, ein `Converter\<PointF, Point>` Delegat (`Converter(Of PointF, Point)` in Visual Basic) erstellt, um die `PointFToPoint`-Methode darzustellen, und der-Delegat wird an die <xref:System.Collections.Generic.List`1.ConvertAll*>-Methode weitergeleitet.</span><span class="sxs-lookup"><span data-stu-id="6ed0b-116">The example then creates a <xref:System.Collections.Generic.List%601> of <xref:System.Drawing.PointF> structures, creates a `Converter\<PointF, Point>` delegate (`Converter(Of PointF, Point)` in Visual Basic) to represent the `PointFToPoint` method, and passes the delegate to the <xref:System.Collections.Generic.List`1.ConvertAll*> method.</span></span> <span data-ttu-id="6ed0b-117">Die <xref:System.Collections.Generic.List`1.ConvertAll*>-Methode übergibt jedes Element der Eingabeliste an die `PointFToPoint`-Methode und fügt die konvertierten Elemente in eine neue Liste von <xref:System.Drawing.Point> Strukturen ein.</span><span class="sxs-lookup"><span data-stu-id="6ed0b-117">The <xref:System.Collections.Generic.List`1.ConvertAll*> method passes each element of the input list to the `PointFToPoint` method and puts the converted elements into a new list of <xref:System.Drawing.Point> structures.</span></span> <span data-ttu-id="6ed0b-118">Beide Listen werden angezeigt.</span><span class="sxs-lookup"><span data-stu-id="6ed0b-118">Both lists are displayed.</span></span>  
  
 [!code-cpp[List\`1_ConvertAll#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_ConvertAll/cpp/source.cpp#1)]
 [!code-csharp[List\`1_ConvertAll#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_ConvertAll/cs/source.cs#1)]
 [!code-vb[List\`1_ConvertAll#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_ConvertAll/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>
