<Type Name="InvalidCastException" FullName="System.InvalidCastException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8d12936d9b0401c0da701d4a2bb00d27e3ac90bf" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75040905" /></Metadata><TypeSignature Language="C#" Value="public class InvalidCastException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit InvalidCastException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.InvalidCastException" />
  <TypeSignature Language="VB.NET" Value="Public Class InvalidCastException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class InvalidCastException : SystemException" />
  <TypeSignature Language="F#" Value="type InvalidCastException = class&#xA;    inherit SystemException" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Die Ausnahme, die bei einer ungültigen Umwandlung oder expliziten Konvertierung ausgelöst wird.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der .NET Framework unterstützt die automatische Konvertierung von abgeleiteten Typen in ihre Basis Typen und zurück in den abgeleiteten Typ sowie von Typen, die Schnittstellen zu Schnittstellen Objekten und zurück darstellen. Es umfasst auch eine Reihe von Mechanismen, die benutzerdefinierte Konvertierungen unterstützen. Weitere Informationen finden Sie unter [Typkonvertierung in der .NET Framework](~/docs/standard/base-types/type-conversion.md).  
  
 Eine <xref:System.InvalidCastException> Ausnahme wird ausgelöst, wenn die Konvertierung einer Instanz eines Typs in einen anderen Typ nicht unterstützt wird. Wenn Sie z. b. versuchen, einen <xref:System.Char> Wert in einen <xref:System.DateTime> Wert zu konvertieren, wird eine <xref:System.InvalidCastException> Ausnahme ausgelöst. Sie unterscheidet sich von einer <xref:System.OverflowException> Ausnahme, die ausgelöst wird, wenn eine Konvertierung von einem Typ in einen anderen unterstützt wird, der Wert des Quell Typs jedoch außerhalb des Bereichs des Zieltyps liegt.  Eine <xref:System.InvalidCastException> Ausnahme wird durch einen Entwickler Fehler verursacht und sollte nicht in einem `try/catch` Block behandelt werden. Stattdessen sollte die Ursache der Ausnahme beseitigt werden.  
  
 Informationen zu Konvertierungen, die vom System unterstützt werden, finden Sie in der <xref:System.Convert>-Klasse. Fehler, die auftreten, wenn der Zieltyp Quelltyp Werte speichern kann, aber nicht groß genug ist, um einen bestimmten Quellwert zu speichern, finden Sie unter <xref:System.OverflowException> Ausnahme.  
  
> [!NOTE]
>  In vielen Fällen erkennt der sprach Compiler, dass keine Konvertierung zwischen dem Quelltyp und dem Zieltyp vorhanden ist, und gibt einen Compilerfehler aus.  
  
 Einige der Bedingungen, unter denen eine versuchte Konvertierung eine <xref:System.InvalidCastException> Ausnahme auslöst, werden in den folgenden Abschnitten erläutert:  
  
 [Primitive Typen und IConvertible-](#Primitive)   
 [Die Convert. ChangeType-Methode](#ChangeType)   
 Einschränkende [Konvertierungen und IConvertible-Implementierungen](#Narrowing)   
 [Downcasting](#Downcasting)   
 [Konvertierung von einem Schnittstellen Objekt](#Interface)   
 [Zeichen folgen Konvertierungen](#String)   
 [Migration Visual Basic 6,0](#Migration)  
  
 Damit eine explizite Verweis Konvertierung erfolgreich ist, muss der Quellwert `null`sein, oder der Objekttyp, auf den das Quell Argument verweist, muss durch eine implizite Verweis Konvertierung in den Zieltyp konvertierbar sein.  
  
 Die folgenden Anweisungen für die Intermediate Language (IL) lösen eine <xref:System.InvalidCastException> Ausnahme aus:  
  
-   `castclass`  
  
-   `refanyval`  
  
-   `unbox`  
  
 <xref:System.InvalidCastException> verwendet die HRESULT-COR_E_INVALIDCAST mit dem Wert 0x80004002.  
  
 Eine Liste der anfänglichen Eigenschaftswerte für eine Instanz von <xref:System.InvalidCastException>, finden Sie unter den <xref:System.InvalidCastException.%23ctor%2A> Konstruktoren.  
  
<a name="Primitive"></a>   
## <a name="primitive-types-and-iconvertible"></a>Primitive Typen und IConvertible  
 Sie wenden direkt oder indirekt eine <xref:System.IConvertible> Implementierung eines primitiven Typs an, die keine bestimmte Konvertierung unterstützt. Wenn Sie z. b. versuchen, einen <xref:System.Boolean> Wert in einen <xref:System.Char> oder einen <xref:System.DateTime> Wert in ein <xref:System.Int32> zu konvertieren, wird eine <xref:System.InvalidCastException> Ausnahme ausgelöst. Im folgenden Beispiel werden die Methoden <xref:System.Boolean.System%23IConvertible%23ToChar%2A?displayProperty=nameWithType> und <xref:System.Convert.ToChar%28System.Boolean%29?displayProperty=nameWithType> aufgerufen, um einen <xref:System.Boolean> Wert in eine <xref:System.Char>zu konvertieren. In beiden Fällen löst der Methodenaufrufe eine <xref:System.InvalidCastException> Ausnahme aus.  
  
 [!code-csharp[System.InvalidCastException#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.invalidcastexception/cs/iconvertible1.cs#2)]
 [!code-vb[System.InvalidCastException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.invalidcastexception/vb/iconvertible1.vb#2)]  
  
 Da die Konvertierung nicht unterstützt wird, gibt es keine Problem Umgehung.  
  
<a name="ChangeType"></a>   
## <a name="the-convertchangetype-method"></a>Die Convert. ChangeType-Methode  
 Sie haben die <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType>-Methode aufgerufen, um ein Objekt von einem Typ in einen anderen zu konvertieren, aber ein oder beide Typen implementieren nicht die <xref:System.IConvertible>-Schnittstelle.  
  
 In den meisten Fällen gibt es keine Problem Umgehung, da die Konvertierung nicht unterstützt wird. In einigen Fällen ist eine mögliche Problem Umgehung das manuelle Zuweisen von Eigenschafts Werten aus dem Quelltyp zu ähnlichen Eigenschaften des Zieltyps.  
  
<a name="Narrowing"></a>   
## <a name="narrowing-conversions-and-iconvertible-implementations"></a>Einschränkende Konvertierungen und IConvertible-Implementierungen  
 Einschränkende Operatoren definieren die von einem Typ unterstützten expliziten Konvertierungen.  Ein Umwandlungs Operator C# in oder die `CType` Konvertierungsmethode in Visual Basic (wenn `Option Strict` ist) ist erforderlich, um die Konvertierung auszuführen.  
  
 Wenn weder der Quelltyp noch der Zieltyp eine explizite oder einschränkende Konvertierung zwischen den beiden Typen definiert und die <xref:System.IConvertible> Implementierung eines oder beider Typen keine Konvertierung des Quell Typs in den Zieltyp unterstützt, wird eine <xref:System.InvalidCastException> Ausnahme ausgelöst.  
  
 In den meisten Fällen gibt es keine Problem Umgehung, da die Konvertierung nicht unterstützt wird.  
  
<a name="Downcasting"></a>   
## <a name="downcasting"></a>Dass  
 Sie werden herabgestuft, d. h. es wird versucht, eine Instanz eines Basistyps in einen seiner abgeleiteten Typen zu konvertieren. Im folgenden Beispiel schlägt der Versuch fehl, ein `Person` Objekt in ein `PersonWithID` Objekt zu konvertieren.  
  
 [!code-csharp[System.InvalidCastException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.invalidcastexception/cs/basetoderived1.cs#1)]
 [!code-vb[System.InvalidCastException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.invalidcastexception/vb/basetoderived1.vb#1)]  
  
 Wie im Beispiel gezeigt, ist das Typumwandlung nur erfolgreich, wenn das `Person` Objekt durch einen umgewandelt von einem `PersonWithId` Objekt in ein `Person` Objekt erstellt wurde, oder wenn das `Person` Objekt `null`ist.  
  
<a name="Interface"></a>   
## <a name="conversion-from-an-interface-object"></a>Konvertierung von einem Schnittstellen Objekt  
 Sie versuchen, ein Schnittstellen Objekt in einen Typ zu konvertieren, der diese Schnittstelle implementiert, aber der Zieltyp ist nicht derselbe Typ oder eine Basisklasse des Typs, von dem das Schnittstellen Objekt ursprünglich abgeleitet wurde. Im folgenden Beispiel wird eine <xref:System.InvalidCastException> Ausnahme ausgelöst, wenn versucht wird, ein <xref:System.IFormatProvider> Objekt in ein <xref:System.Globalization.DateTimeFormatInfo>-Objekt zu konvertieren. Bei der Konvertierung tritt ein Fehler auf, da die <xref:System.Globalization.DateTimeFormatInfo> Klasse zwar die <xref:System.IFormatProvider>-Schnittstelle implementiert, das <xref:System.Globalization.DateTimeFormatInfo>-Objekt jedoch nicht mit der <xref:System.Globalization.CultureInfo> Klasse verknüpft ist, von der das Schnittstellen Objekt abgeleitet wurde.  
  
 [!code-csharp[System.InvalidCastException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.invalidcastexception/cs/Interface1.cs#3)]
 [!code-vb[System.InvalidCastException#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.invalidcastexception/vb/Interface1.vb#3)]  
  
 Die Ausnahme Meldung gibt an, dass die Konvertierung nur erfolgreich ist, wenn das Schnittstellen Objekt zurück in eine Instanz des ursprünglichen Typs konvertiert wird, in diesem Fall eine <xref:System.Globalization.CultureInfo>. Die Konvertierung ist auch erfolgreich, wenn das Schnittstellen Objekt in eine Instanz eines Basistyps des ursprünglichen Typs konvertiert wird.  
  
<a name="String"></a>   
## <a name="string-conversions"></a>Zeichenfolgenkonvertierung  
 Sie versuchen, einen Wert oder ein Objekt in seine Zeichen folgen Darstellung zu konvertieren, indem Sie einen Typumwandlungs Operator in C#verwenden. Im folgenden Beispiel lösen sowohl der Versuch, einen <xref:System.Char> Wert in eine Zeichenfolge umzuwandeln, als auch der Versuch, eine ganze Zahl in eine Zeichenfolge umzuwandeln, eine <xref:System.InvalidCastException> Ausnahme aus.  
  
 [!code-csharp[System.InvalidCastException#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.invalidcastexception/cs/ToString1.cs#4)]  
  
> [!NOTE]
>  Die Verwendung des Visual Basic `CStr`-Operators, um einen Wert eines primitiven Typs in eine Zeichenfolge zu konvertieren, ist erfolgreich. Der Vorgang löst keine <xref:System.InvalidCastException> Ausnahme aus.  
  
 Um eine Instanz eines beliebigen Typs erfolgreich in seine Zeichen folgen Darstellung zu konvertieren, nennen Sie die `ToString`-Methode, wie im folgenden Beispiel gezeigt.  Die `ToString`-Methode ist immer vorhanden, da die <xref:System.Object.ToString%2A>-Methode von der <xref:System.Object>-Klasse definiert wird und daher von allen verwalteten Typen geerbt oder überschrieben wird.  
  
 [!code-csharp[System.InvalidCastException#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.invalidcastexception/cs/ToString2.cs#5)]  
  
<a name="Migration"></a>   
## <a name="visual-basic-60-migration"></a>Migration Visual Basic 6,0  
 Sie aktualisieren eine Visual Basic 6,0-Anwendung mit einem benutzerdefinierten Ereignis in einem Benutzer Steuerelement auf Visual Basic .net, und eine <xref:System.InvalidCastException> Ausnahme wird mit der Meldung "die angegebene Umwandlung ist ungültig." ausgelöst. Um diese Ausnahme zu vermeiden, ändern Sie die Codezeile in Ihrem Formular (z. b. `Form1`).  
  
```  
Call UserControl11_MyCustomEvent(UserControl11, New UserControl1.MyCustomEventEventArgs(5))  
```  
  
 und ersetzen Sie Sie durch die folgende Codezeile:  
  
```  
Call UserControl11_MyCustomEvent(UserControl11(0), New UserControl1.MyCustomEventEventArgs(5))  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
    <related type="Article" href="~/docs/standard/exceptions/index.md">Behandeln und Auslösen von Ausnahmen</related>
    <related type="Article" href="~/docs/standard/base-types/type-conversion.md">Typkonvertierung in .NET Framework</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.InvalidCastException" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InvalidCastException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.InvalidCastException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InvalidCastException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.InvalidCastException" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor initialisiert die <xref:System.Exception.Message%2A>-Eigenschaft der neuen Instanz mit einer vom System bereitgestellten Meldung, die den Fehler beschreibt, z. b. "der Quelltyp kann nicht in den Zieltyp umgewandelt werden." Diese Meldung berücksichtigt die aktuelle Systemkultur.  
  
 In der folgenden Tabelle werden die anfänglichen Eigenschaftenwerte für eine <xref:System.InvalidCastException>-Instanz aufgeführt.  
  
|Eigenschaft|Wert|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Ein NULL-Verweis (`Nothing` in Visual Basic).|  
|<xref:System.Exception.Message%2A>|Die Zeichenfolge der lokalisierten Fehlermeldung.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InvalidCastException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.InvalidCastException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InvalidCastException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new InvalidCastException : string -&gt; InvalidCastException" Usage="new System.InvalidCastException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Die Meldung, die den Fehler beschreibt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.InvalidCastException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor initialisiert die <xref:System.Exception.Message%2A?displayProperty=nameWithType>-Eigenschaft der neuen Ausnahme mithilfe des `message`-Parameters. Der Inhalt der `message` soll in verständlicher Sprache gehalten sein. Der Aufrufer dieses Konstruktors ist erforderlich, um sicherzustellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.  
  
 In der folgenden Tabelle werden die anfänglichen Eigenschaftenwerte für eine <xref:System.InvalidCastException>-Instanz aufgeführt.  
  
|Eigenschaft|Wert|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Ein NULL-Verweis (`Nothing` in Visual Basic).|  
|<xref:System.Exception.Message%2A>|Die Zeichenfolge der Fehlermeldung.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected InvalidCastException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.InvalidCastException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; InvalidCastException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new InvalidCastException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; InvalidCastException" Usage="new System.InvalidCastException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="info">Das Objekt, das die serialisierten Objektdaten enthält.</param>
        <param name="context">Die Kontextinformationen zur Quelle oder zum Ziel.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.InvalidCastException" />-Klasse mit serialisierten Daten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor wird während der Deserialisierung aufgerufen, um das über einen Datenstrom übertragene Ausnahmeobjekt wieder zusammenzusetzen. Weitere Informationen finden Sie unter [XML- und SOAP-Serialisierung](~/docs/standard/serialization/xml-and-soap-serialization.md).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/serialization/xml-and-soap-serialization.md">XML- und SOAP-Serialisierung</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InvalidCastException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.InvalidCastException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InvalidCastException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new InvalidCastException : string * Exception -&gt; InvalidCastException" Usage="new System.InvalidCastException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
        <param name="innerException">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist. Wenn der <paramref name="innerException" />-Parameter nicht <see langword="null" /> ist, wird die aktuelle Ausnahme in einem <see langword="catch" />-Block ausgelöst, der die innere Ausnahme behandelt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.InvalidCastException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Ausnahme, die als direktes Ergebnis einer vorhergehenden Ausnahme ausgelöst wird, muss in der <xref:System.Exception.InnerException%2A>-Eigenschaft über einen Verweis auf die vorhergehende Ausnahme verfügen. Die <xref:System.Exception.InnerException%2A>-Eigenschaft gibt denselben Wert zurück, der an den Konstruktor übergeben wird, oder gibt `null` zurück, wenn die <xref:System.Exception.InnerException%2A>-Eigenschaft nicht den Wert für die innere Ausnahme für den Konstruktor bereitstellt.  
  
 In der folgenden Tabelle werden die anfänglichen Eigenschaftenwerte für eine <xref:System.InvalidCastException>-Instanz aufgeführt.  
  
|Eigenschaft|Wert|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Der Verweis auf die interne Ausnahme.|  
|<xref:System.Exception.Message%2A>|Die Zeichenfolge der Fehlermeldung.|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
        <related type="Article" href="~/docs/standard/exceptions/index.md">Behandeln und Auslösen von Ausnahmen</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InvalidCastException (string message, int errorCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, int32 errorCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.InvalidCastException.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, errorCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InvalidCastException(System::String ^ message, int errorCode);" />
      <MemberSignature Language="F#" Value="new InvalidCastException : string * int -&gt; InvalidCastException" Usage="new System.InvalidCastException (message, errorCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="errorCode" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="message">Die Meldung, in der die Ursache für die eingetretene Ausnahme angegeben wird.</param>
        <param name="errorCode">Der Wert des Fehlercodes (HRESULT), der der Ausnahme zugeordnet ist.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.InvalidCastException" />-Klasse mit einer angegebenen Meldung und einem angegebenen Fehlercode.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor initialisiert die <xref:System.Exception.Message%2A?displayProperty=nameWithType>-Eigenschaft der neuen Ausnahme mithilfe des `message`-Parameters. Der Inhalt der `message` soll in verständlicher Sprache gehalten sein. Der Aufrufer dieses Konstruktors ist erforderlich, um sicherzustellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.  
  
 Dieser Konstruktor gibt einen HRESULT-Wert an, auf den Vererber der <xref:System.InvalidCastException>-Klasse über die geschützte <xref:System.Exception.HResult%2A>-Eigenschaft der <xref:System.Exception>-Klasse zugreifen können.  
  
 In der folgenden Tabelle werden die anfänglichen Eigenschaftenwerte für eine <xref:System.InvalidCastException>-Instanz aufgeführt.  
  
|Eigenschaft|Wert|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Ein NULL-Verweis (`Nothing` in Visual Basic).|  
|<xref:System.Exception.Message%2A>|Die Zeichenfolge der Fehlermeldung.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
