<Type Name="Boolean" FullName="System.Boolean">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="aeb5061f6e9ed3afa6742b7e97c4c2f65d3f7612" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37729201" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct Boolean : IComparable, IComparable&lt;bool&gt;, IConvertible, IEquatable&lt;bool&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit bool extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;bool&gt;, class System.IConvertible, class System.IEquatable`1&lt;bool&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Boolean" />
  <TypeSignature Language="VB.NET" Value="Public Structure Boolean&#xA;Implements IComparable, IComparable(Of Boolean), IConvertible, IEquatable(Of Boolean)" />
  <TypeSignature Language="C++ CLI" Value="public value class Boolean : IComparable, IComparable&lt;bool&gt;, IConvertible, IEquatable&lt;bool&gt;" />
  <TypeSignature Language="F#" Value="type bool = struct&#xA;    interface IConvertible" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Boolean&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Boolean&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="781e2-101">Represents a Boolean (<see langword="true" /> or <see langword="false" />) value.</span>
      <span class="sxs-lookup">
        <span data-stu-id="781e2-101">Represents a Boolean (<see langword="true" /> or <see langword="false" />) value.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="781e2-102">Ein <xref:System.Boolean> Instanz kann einen der zwei Werte aufweisen: `true`, oder `false`.</span><span class="sxs-lookup"><span data-stu-id="781e2-102">A <xref:System.Boolean> instance can have either of two values: `true`, or `false`.</span></span>  
  
 <span data-ttu-id="781e2-103">Die <xref:System.Boolean> Struktur bietet Methoden, die die folgenden Aufgaben unterstützen:</span><span class="sxs-lookup"><span data-stu-id="781e2-103">The <xref:System.Boolean> structure provides methods that support the following tasks:</span></span>  
  
-   <span data-ttu-id="781e2-104">Boolesche Werte in Zeichenfolgen konvertiert werden: <xref:System.Boolean.ToString%2A></span><span class="sxs-lookup"><span data-stu-id="781e2-104">Converting Boolean values to strings: <xref:System.Boolean.ToString%2A></span></span>  
  
-   <span data-ttu-id="781e2-105">Analysieren von Zeichenfolgen, um sie in boolesche Werte konvertieren: <xref:System.Boolean.Parse%2A> und <xref:System.Boolean.TryParse%2A></span><span class="sxs-lookup"><span data-stu-id="781e2-105">Parsing strings to convert them to Boolean values: <xref:System.Boolean.Parse%2A> and <xref:System.Boolean.TryParse%2A></span></span>  
  
-   <span data-ttu-id="781e2-106">Vergleichen von Werten: <xref:System.Boolean.CompareTo%2A> und <xref:System.Boolean.Equals%2A></span><span class="sxs-lookup"><span data-stu-id="781e2-106">Comparing values: <xref:System.Boolean.CompareTo%2A> and <xref:System.Boolean.Equals%2A></span></span>  
  
 <span data-ttu-id="781e2-107">Den folgenden Abschnitten werden diese Aufgaben und andere Details zur:</span><span class="sxs-lookup"><span data-stu-id="781e2-107">The following sections explain these tasks and other usage details:</span></span>  
  
 <span data-ttu-id="781e2-108">[Formatieren von booleschen Werten](#Formatting) </span><span class="sxs-lookup"><span data-stu-id="781e2-108">[Formatting Boolean values](#Formatting) </span></span>  
 <span data-ttu-id="781e2-109">[Konvertieren von booleschen Werten](#Converting) </span><span class="sxs-lookup"><span data-stu-id="781e2-109">[Converting to and from Boolean values](#Converting) </span></span>  
 <span data-ttu-id="781e2-110">[Analysieren von booleschen Werten](#Parsing) </span><span class="sxs-lookup"><span data-stu-id="781e2-110">[Parsing Boolean values](#Parsing) </span></span>  
 <span data-ttu-id="781e2-111">[Vergleichen von booleschen Werten](#Comparing) </span><span class="sxs-lookup"><span data-stu-id="781e2-111">[Comparing Boolean values](#Comparing) </span></span>  
 <span data-ttu-id="781e2-112">[Arbeiten mit booleschen Werten als binäre Werte](#Binary) </span><span class="sxs-lookup"><span data-stu-id="781e2-112">[Working with Booleans as binary values](#Binary) </span></span>  
 <span data-ttu-id="781e2-113">[Ausführen von Vorgängen mit booleschen Werten](#Operations) </span><span class="sxs-lookup"><span data-stu-id="781e2-113">[Performing operations with Boolean values](#Operations) </span></span>  
 [<span data-ttu-id="781e2-114">Boolesche Werte und Interoperabilität</span><span class="sxs-lookup"><span data-stu-id="781e2-114">Booleans and Interop</span></span>](#Interop)  
  
<a name="Formatting"></a>   
## <a name="formatting-boolean-values"></a><span data-ttu-id="781e2-115">Formatieren von booleschen Werten</span><span class="sxs-lookup"><span data-stu-id="781e2-115">Formatting Boolean values</span></span>  
 <span data-ttu-id="781e2-116">Die angegebene Zeichenfolgendarstellung einer <xref:System.Boolean> ist entweder "True" für eine `true` Wert oder "Falsch" für eine `false` Wert.</span><span class="sxs-lookup"><span data-stu-id="781e2-116">The string representation of a <xref:System.Boolean> is either "True" for a `true` value or "False" for a `false` value.</span></span> <span data-ttu-id="781e2-117">Die angegebene Zeichenfolgendarstellung einer <xref:System.Boolean> Wert wird von der schreibgeschützten definiert <xref:System.Boolean.TrueString> und <xref:System.Boolean.FalseString> Felder.</span><span class="sxs-lookup"><span data-stu-id="781e2-117">The string representation of a <xref:System.Boolean> value is defined by the read-only <xref:System.Boolean.TrueString> and <xref:System.Boolean.FalseString> fields.</span></span>  
  
 <span data-ttu-id="781e2-118">Sie verwenden die <xref:System.Boolean.ToString%2A> Methode, um boolesche Werte in Zeichenfolgen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="781e2-118">You use the <xref:System.Boolean.ToString%2A> method to convert Boolean values to strings.</span></span> <span data-ttu-id="781e2-119">Der Boolean-Struktur enthält zwei <xref:System.Boolean.ToString%2A> Überladungen: die parameterlose <xref:System.Boolean.ToString> Methode und die <xref:System.Boolean.ToString%28System.IFormatProvider%29> -Methode, die einen Parameter enthält, die Formatierung steuert.</span><span class="sxs-lookup"><span data-stu-id="781e2-119">The Boolean structure includes two <xref:System.Boolean.ToString%2A> overloads: the parameterless <xref:System.Boolean.ToString> method and the <xref:System.Boolean.ToString%28System.IFormatProvider%29> method, which includes a parameter that controls formatting.</span></span> <span data-ttu-id="781e2-120">Da dieser Parameter ignoriert wird, erzeugen die zwei Überladungen jedoch identische Zeichenfolgen.</span><span class="sxs-lookup"><span data-stu-id="781e2-120">However, because this parameter is ignored, the two overloads produce identical strings.</span></span> <span data-ttu-id="781e2-121">Die <xref:System.Boolean.ToString%28System.IFormatProvider%29> Methode die kulturabhängige Formatierung nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="781e2-121">The <xref:System.Boolean.ToString%28System.IFormatProvider%29> method does not support culture-sensitive formatting.</span></span>  
  
 <span data-ttu-id="781e2-122">Das folgende Beispiel veranschaulicht die Formatierung mit der <xref:System.Boolean.ToString%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="781e2-122">The following example illustrates formatting with the <xref:System.Boolean.ToString%2A> method.</span></span> <span data-ttu-id="781e2-123">Beachten Sie, die im Beispiel wird die [kombinierte Formatierung](~/docs/standard/base-types/composite-formatting.md) Funktion, also die <xref:System.Boolean.ToString%2A> Methode wird implizit aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="781e2-123">Note that the example uses the [composite formatting](~/docs/standard/base-types/composite-formatting.md) feature, so the <xref:System.Boolean.ToString%2A> method is called implicitly.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/tostring1.cs#3)]
 [!code-vb[System.Boolean.Structure#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/tostring1.vb#3)]  
  
 <span data-ttu-id="781e2-124">Da die <xref:System.Boolean> Struktur kann nur zwei Werte aufweisen, es ist einfach, benutzerdefinierte Formatierung hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="781e2-124">Because the <xref:System.Boolean> structure can have only two values, it is easy to add custom formatting.</span></span> <span data-ttu-id="781e2-125">Für einfache benutzerdefinierte Formatierung in die andere Zeichenfolge Literale für "True" und "False" ersetzt werden, können Sie alle bedingten Auswertung-Funktion, die von Ihrer Sprache unterstützt, z. B. die [Bedingungsoperator](~/docs/csharp/language-reference/operators/conditional-operator.md) in c# oder die [Wenn Operator](~/docs/visual-basic/language-reference/operators/if-operator.md) in Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="781e2-125">For simple custom formatting in which other string literals are substituted for "True" and "False", you can use any conditional evaluation feature supported by your language, such as the [conditional operator](~/docs/csharp/language-reference/operators/conditional-operator.md) in C# or the [If operator](~/docs/visual-basic/language-reference/operators/if-operator.md) in Visual Basic.</span></span> <span data-ttu-id="781e2-126">Im folgenden Beispiel wird diese Technik zum Formatieren <xref:System.Boolean> Werte "Ja" und "No" statt "True" und "False".</span><span class="sxs-lookup"><span data-stu-id="781e2-126">The following example uses this technique to format <xref:System.Boolean> values as "Yes" and "No" rather than "True" and "False".</span></span>  
  
 [!code-csharp[System.Boolean.Structure#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/tostring2.cs#4)]
 [!code-vb[System.Boolean.Structure#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/tostring2.vb#4)]  
  
 <span data-ttu-id="781e2-127">Für komplexere benutzerdefinierte Formatierung, einschließlich kulturabhängige Formatierung, rufen Sie die <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> Methode, und geben eine <xref:System.ICustomFormatter> Implementierung.</span><span class="sxs-lookup"><span data-stu-id="781e2-127">For more complex custom formatting operations, including culture-sensitive formatting, you can call the <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method and provide an <xref:System.ICustomFormatter> implementation.</span></span> <span data-ttu-id="781e2-128">Das folgende Beispiel implementiert die <xref:System.ICustomFormatter> und <xref:System.IFormatProvider> Schnittstellen, die Englisch (Vereinigte Staaten), Französisch (Frankreich) und Russisch (Russische Föderation) Kulturen kulturabhängige boolesche Zeichenfolgen bereit.</span><span class="sxs-lookup"><span data-stu-id="781e2-128">The following example implements the <xref:System.ICustomFormatter> and <xref:System.IFormatProvider> interfaces to provide culture-sensitive Boolean strings for the English (United States), French (France), and Russian (Russia) cultures.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/format3.cs#5)]
 [!code-vb[System.Boolean.Structure#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/format3.vb#5)]  
  
 <span data-ttu-id="781e2-129">Optional können Sie [Ressourcendateien](http://msdn.microsoft.com/library/8ad495d4-2941-40cf-bf64-e82e85825890) kulturspezifische boolesche Zeichenfolgen zu definieren.</span><span class="sxs-lookup"><span data-stu-id="781e2-129">Optionally, you can use [resource files](http://msdn.microsoft.com/library/8ad495d4-2941-40cf-bf64-e82e85825890) to define culture-specific Boolean strings.</span></span>  
  
<a name="Converting"></a>   
## <a name="converting-to-and-from-boolean-values"></a><span data-ttu-id="781e2-130">Konvertieren von booleschen Werten</span><span class="sxs-lookup"><span data-stu-id="781e2-130">Converting to and from Boolean values</span></span>  
 <span data-ttu-id="781e2-131">Die <xref:System.Boolean> Struktur implementiert die <xref:System.IConvertible> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="781e2-131">The <xref:System.Boolean> structure implements the <xref:System.IConvertible> interface.</span></span>  <span data-ttu-id="781e2-132">Daher können Sie die <xref:System.Convert> Klasse zum Durchführen von Konvertierungen zwischen einer <xref:System.Boolean> Wert und alle anderen primitiven Typen in .NET Framework, oder Sie können aufrufen, die <xref:System.Boolean> -Struktur explizite Implementierungen handelt.</span><span class="sxs-lookup"><span data-stu-id="781e2-132">As a result, you can use the <xref:System.Convert> class to perform conversions between a <xref:System.Boolean> value and any other primitive type in the .NET Framework, or you can call the <xref:System.Boolean> structure's explicit implementations.</span></span> <span data-ttu-id="781e2-133">Allerdings Konvertierungen zwischen einer <xref:System.Boolean> und die folgenden Typen werden nicht unterstützt, sodass die entsprechenden Konvertierungsmethoden Auslösen einer <xref:System.InvalidCastException> Ausnahme:</span><span class="sxs-lookup"><span data-stu-id="781e2-133">However, conversions between a <xref:System.Boolean> and the following types are not supported, so the corresponding conversion methods throw an <xref:System.InvalidCastException> exception:</span></span>  
  
-   <span data-ttu-id="781e2-134">Konvertierung zwischen <xref:System.Boolean> und <xref:System.Char> (die <xref:System.Convert.ToBoolean%28System.Char%29?displayProperty=nameWithType> und <xref:System.Convert.ToChar%28System.Boolean%29?displayProperty=nameWithType> Methoden)</span><span class="sxs-lookup"><span data-stu-id="781e2-134">Conversion between <xref:System.Boolean> and <xref:System.Char> (the <xref:System.Convert.ToBoolean%28System.Char%29?displayProperty=nameWithType> and <xref:System.Convert.ToChar%28System.Boolean%29?displayProperty=nameWithType> methods)</span></span>  
  
-   <span data-ttu-id="781e2-135">Konvertierung zwischen <xref:System.Boolean> und <xref:System.DateTime> (die <xref:System.Convert.ToBoolean%28System.DateTime%29?displayProperty=nameWithType> und <xref:System.Convert.ToDateTime%28System.Boolean%29?displayProperty=nameWithType> Methoden)</span><span class="sxs-lookup"><span data-stu-id="781e2-135">Conversion between <xref:System.Boolean> and <xref:System.DateTime> (the <xref:System.Convert.ToBoolean%28System.DateTime%29?displayProperty=nameWithType> and <xref:System.Convert.ToDateTime%28System.Boolean%29?displayProperty=nameWithType> methods)</span></span>  
  
 <span data-ttu-id="781e2-136">Alle Konvertierungen von ganzzahligen oder Gleitkomma-Zahlen, boolesche Werte konvertiert, nicht-NULL-Werte, `true` und Nullwerten zu `false`.</span><span class="sxs-lookup"><span data-stu-id="781e2-136">All conversions from integral or floating-point numbers to Boolean values convert non-zero values to `true` and zero values to `false`.</span></span>  <span data-ttu-id="781e2-137">Das folgende Beispiel veranschaulicht dies durch Aufrufen der ausgewählten Überladungen der <xref:System.Convert.ToBoolean%2A?displayProperty=nameWithType> Klasse.</span><span class="sxs-lookup"><span data-stu-id="781e2-137">The following example illustrates this by calling selected overloads of the <xref:System.Convert.ToBoolean%2A?displayProperty=nameWithType> class.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/conversion1.cs#6)]
 [!code-vb[System.Boolean.Structure#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/conversion1.vb#6)]  
  
 <span data-ttu-id="781e2-138">Beim Konvertieren von Gleitkommawerten, booleschen Werten führen Sie die Methoden für die Konvertierung ein genauen Vergleichs mit 0 (null).</span><span class="sxs-lookup"><span data-stu-id="781e2-138">When converting from floating-point values to Boolean values, the conversion methods perform an exact comparison with zero.</span></span> <span data-ttu-id="781e2-139">Wenn Sie der Gleitkommawert mit einfacher Genauigkeit verloren hat, kann das Ergebnis nicht erwartet werden.</span><span class="sxs-lookup"><span data-stu-id="781e2-139">If the floating-point value has lost precision, the result can be unexpected.</span></span> <span data-ttu-id="781e2-140">Dies wird im folgenden Beispiel, in dem veranschaulicht eine <xref:System.Double> Variable, deren Wert muss 0 (null) in einen booleschen Wert konvertiert wird.</span><span class="sxs-lookup"><span data-stu-id="781e2-140">This is illustrated in the following example, in which a <xref:System.Double> variable whose value should be zero is converted to a Boolean value.</span></span> <span data-ttu-id="781e2-141">Wie im Beispiel wird gezeigt, das Ergebnis ist `true` da wiederholt Ergänzungen von 0,2 hat einen Verlust an Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="781e2-141">As the example shows, the result is `true` because repeated additions of 0.2 have resulted in a loss of precision.</span></span>  
  
 <span data-ttu-id="781e2-142">Beim Konvertieren in numerischen Werten, die Methoden für die Konvertierung von booleschen Wert der <xref:System.Convert> Klasse konvertieren `true` auf 1 und `false` auf 0.</span><span class="sxs-lookup"><span data-stu-id="781e2-142">When converting from Boolean to numeric values, the conversion methods of the <xref:System.Convert> class convert `true` to 1 and `false` to 0.</span></span> <span data-ttu-id="781e2-143">Aber Visual Basic-Konvertierungsfunktionen konvertieren `true` entweder 255 (für Konvertierungen zu <xref:System.Byte> Werte) oder – 1 (für alle anderen numerischen Konvertierungen).</span><span class="sxs-lookup"><span data-stu-id="781e2-143">However, Visual Basic conversion functions convert `true` to either 255 (for conversions to <xref:System.Byte> values) or -1 (for all other numeric conversions).</span></span> <span data-ttu-id="781e2-144">Das folgende Beispiel konvertiert `true` in numerische Werte mit einer <xref:System.Convert> -Methode, im Fall von Visual Basic-Beispiel, mit der Visual Basic-Sprache des eigenen Konvertierungsoperator.</span><span class="sxs-lookup"><span data-stu-id="781e2-144">The following example converts `true` to numeric values by using a <xref:System.Convert> method, and, in the case of the Visual Basic example, by using the Visual Basic language's own conversion operator.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/conversion3.cs#8)]
 [!code-vb[System.Boolean.Structure#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/conversion3.vb#8)]  
  
 <span data-ttu-id="781e2-145">Konvertierung von <xref:System.Boolean> Zeichenfolgenwerte, finden Sie unter der [boolesche Werte Formatierung](#Formatting) Abschnitt.</span><span class="sxs-lookup"><span data-stu-id="781e2-145">For conversions from <xref:System.Boolean> to string values, see the [Formatting Boolean Values](#Formatting) section.</span></span> <span data-ttu-id="781e2-146">Für Konvertierungen von Zeichenfolgen, die <xref:System.Boolean> -Werte finden Sie in der [boolesche Werte Analyse](#Parsing) Abschnitt.</span><span class="sxs-lookup"><span data-stu-id="781e2-146">For conversions from strings to <xref:System.Boolean> values, see the [Parsing Boolean Values](#Parsing) section.</span></span>  
  
<a name="Parsing"></a>   
## <a name="parsing-boolean-values"></a><span data-ttu-id="781e2-147">Analysieren von booleschen Werten</span><span class="sxs-lookup"><span data-stu-id="781e2-147">Parsing Boolean values</span></span>  
 <span data-ttu-id="781e2-148">Die <xref:System.Boolean> Struktur umfasst zwei statische Analysemethoden <xref:System.Boolean.Parse%2A> und <xref:System.Boolean.TryParse%2A>, eine Zeichenfolge in einen booleschen Wert konvertiert werden.</span><span class="sxs-lookup"><span data-stu-id="781e2-148">The <xref:System.Boolean> structure includes two static parsing methods, <xref:System.Boolean.Parse%2A> and <xref:System.Boolean.TryParse%2A>, that convert a string to a Boolean value.</span></span> <span data-ttu-id="781e2-149">Die angegebene Zeichenfolgendarstellung eines booleschen Werts wird durch die Groß-/Kleinschreibung Entsprechungen der Werte von definiert die <xref:System.Boolean.TrueString> und <xref:System.Boolean.FalseString> Felder, die "True" und "Falsch", bzw.</span><span class="sxs-lookup"><span data-stu-id="781e2-149">The string representation of a Boolean value is defined by the case-insensitive equivalents of the values of the <xref:System.Boolean.TrueString> and <xref:System.Boolean.FalseString> fields, which are "True" and "False", respectively.</span></span> <span data-ttu-id="781e2-150">Sind in anderen Worten, die nur Zeichenfolgen, die erfolgreich analysiert, "True", "False", "True", "False" oder eine entsprechende gemischter Groß-.</span><span class="sxs-lookup"><span data-stu-id="781e2-150">In other words, the only strings that parse successfully are "True", "False", "true", "false", or some mixed-case equivalent.</span></span> <span data-ttu-id="781e2-151">Numerische Zeichenfolgen wie "0" oder "1" kann nicht erfolgreich analysiert werden.</span><span class="sxs-lookup"><span data-stu-id="781e2-151">You cannot successfully parse numeric strings such as "0" or "1".</span></span> <span data-ttu-id="781e2-152">Führende oder nachfolgende Leerzeichen werden nicht berücksichtigt, beim Ausführen des Zeichenfolgenvergleichs.</span><span class="sxs-lookup"><span data-stu-id="781e2-152">Leading or trailing white-space characters are not considered when performing the string comparison.</span></span>  
  
 <span data-ttu-id="781e2-153">Im folgenden Beispiel wird die <xref:System.Boolean.Parse%2A> und <xref:System.Boolean.TryParse%2A> Methoden, um eine Reihe von Zeichenfolgen zu analysieren.</span><span class="sxs-lookup"><span data-stu-id="781e2-153">The following example uses the <xref:System.Boolean.Parse%2A> and <xref:System.Boolean.TryParse%2A> methods to parse a number of strings.</span></span> <span data-ttu-id="781e2-154">Beachten Sie, dass nur die Groß-/Kleinschreibung Entsprechungen der "True" und "False" wurde erfolgreich analysiert werden können.</span><span class="sxs-lookup"><span data-stu-id="781e2-154">Note that only the case-insensitive equivalents of "True" and "False" can be successfully parsed.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/parse2.cs#2)]
 [!code-vb[System.Boolean.Structure#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/parse2.vb#2)]  
  
 <span data-ttu-id="781e2-155">Wenn Sie in Visual Basic programmieren, können Sie mithilfe der `CBool` Funktion, um die Zeichenfolgendarstellung einer Zahl in einen booleschen Wert konvertieren.</span><span class="sxs-lookup"><span data-stu-id="781e2-155">If you are programming in Visual Basic, you can use the `CBool` function to convert the string representation of a number to a Boolean value.</span></span> <span data-ttu-id="781e2-156">wird in "0" konvertiert `false`, und konvertiert die Zeichenfolgendarstellung für einen beliebigen Wert ungleich NULL wird `true`.</span><span class="sxs-lookup"><span data-stu-id="781e2-156">"0" is converted to `false`, and the string representation of any non-zero value is converted to `true`.</span></span> <span data-ttu-id="781e2-157">Wenn Sie nicht in Visual Basic programmieren, müssen Sie die numerische Zeichenfolge in eine Zahl vor der Konvertierung in einen booleschen Wert konvertieren.</span><span class="sxs-lookup"><span data-stu-id="781e2-157">If you are not programming in Visual Basic, you must convert your numeric string to a number before converting it to a Boolean.</span></span> <span data-ttu-id="781e2-158">Das folgende Beispiel veranschaulicht dies, indem ein Array von Ganzzahlen in boolesche Werte konvertiert.</span><span class="sxs-lookup"><span data-stu-id="781e2-158">The following example illustrates this by converting an array of integers to Boolean values.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/parse3.cs#9)]
 [!code-vb[System.Boolean.Structure#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/parse3.vb#9)]  
  
<a name="Comparing"></a>   
## <a name="comparing-boolean-values"></a><span data-ttu-id="781e2-159">Vergleichen von booleschen Werten</span><span class="sxs-lookup"><span data-stu-id="781e2-159">Comparing Boolean values</span></span>  
 <span data-ttu-id="781e2-160">Da boolesche Werte entweder sind `true` oder `false`, ist es eigentlich nicht explizit aufrufen, die <xref:System.Boolean.CompareTo%2A> -Methode, die angibt, ob eine Instanz größer als, kleiner ist, der oder gleich einem angegebenen Wert.</span><span class="sxs-lookup"><span data-stu-id="781e2-160">Because Boolean values are either `true` or `false`, there is little reason to explicitly call the <xref:System.Boolean.CompareTo%2A> method, which indicates whether an instance is greater than, less than, or equal to a specified value.</span></span> <span data-ttu-id="781e2-161">Um zwei boolesche Variablen vergleichen, rufen Sie in der Regel die <xref:System.Boolean.Equals%2A> Methode, oder verwenden Sie die Sprache des Gleichheitsoperators.</span><span class="sxs-lookup"><span data-stu-id="781e2-161">Typically, to compare two Boolean variables, you call the <xref:System.Boolean.Equals%2A> method or use your language's equality operator.</span></span>  
  
 <span data-ttu-id="781e2-162">Jedoch wenn Sie möchten eine boolesche Variable mit dem Literalwert booleschen Vergleich `true` oder `false`, es ist nicht erforderlich, führen Sie einen expliziten Vergleich, da das Ergebnis der Auswertung eines booleschen Werts, boolescher Wert ist.</span><span class="sxs-lookup"><span data-stu-id="781e2-162">However, when you want to compare a Boolean variable with the literal Boolean value `true` or `false`, it is not necessary to do an explicit comparison, because the result of evaluating a Boolean value is that Boolean value.</span></span> <span data-ttu-id="781e2-163">Beispielsweise werden die Ausdrücke</span><span class="sxs-lookup"><span data-stu-id="781e2-163">For example, the expressions</span></span>  
  
 [!code-csharp[System.Boolean.Structure#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/operations1.cs#12)]
 [!code-vb[System.Boolean.Structure#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/operations1.vb#12)]  
  
 <span data-ttu-id="781e2-164">und</span><span class="sxs-lookup"><span data-stu-id="781e2-164">and</span></span>  
  
 [!code-csharp[System.Boolean.Structure#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/operations2.cs#13)]
 [!code-vb[System.Boolean.Structure#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/operations2.vb#13)]  
  
 <span data-ttu-id="781e2-165">gleich, aber die zweite ist kompakter.</span><span class="sxs-lookup"><span data-stu-id="781e2-165">are equivalent, but the second is more compact.</span></span> <span data-ttu-id="781e2-166">Beide Techniken bieten jedoch eine vergleichbare Leistung.</span><span class="sxs-lookup"><span data-stu-id="781e2-166">However, both techniques offer comparable performance.</span></span>  
  
<a name="Binary"></a>   
## <a name="working-with-booleans-as-binary-values"></a><span data-ttu-id="781e2-167">Arbeiten mit booleschen Werten als binäre Werte</span><span class="sxs-lookup"><span data-stu-id="781e2-167">Working with Booleans as binary values</span></span>  
 <span data-ttu-id="781e2-168">Ein boolescher Wert nimmt ein Byte Arbeitsspeicher, wie im folgenden C#-Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="781e2-168">A Boolean value occupies one byte of memory, as the following C# example shows.</span></span> <span data-ttu-id="781e2-169">Das Beispiel muss kompiliert werden, mit der `/unsafe` wechseln.</span><span class="sxs-lookup"><span data-stu-id="781e2-169">The example must be compiled with the `/unsafe` switch.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/size1.cs#14)]  
  
 <span data-ttu-id="781e2-170">Das Byte des niedrigwertige Bit wird verwendet, um seinen Wert darzustellen.</span><span class="sxs-lookup"><span data-stu-id="781e2-170">The byte's low-order bit is used to represent its value.</span></span> <span data-ttu-id="781e2-171">Der Wert 1 stellt `true`; ein Wert von 0 stellt `false`.</span><span class="sxs-lookup"><span data-stu-id="781e2-171">A value of 1 represents `true`; a value of 0 represents `false`.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="781e2-172">Sie können die <xref:System.Collections.Specialized.BitVector32?displayProperty=nameWithType> Struktur, die mit booleschen Werten arbeiten.</span><span class="sxs-lookup"><span data-stu-id="781e2-172">You can use the <xref:System.Collections.Specialized.BitVector32?displayProperty=nameWithType> structure to work with sets of Boolean values.</span></span>  
  
 <span data-ttu-id="781e2-173">Sie können einen booleschen Wert in die binäre Darstellung konvertiert, durch Aufrufen der <xref:System.BitConverter.GetBytes%28System.Boolean%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="781e2-173">You can convert a Boolean value to its binary representation by calling the <xref:System.BitConverter.GetBytes%28System.Boolean%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="781e2-174">Die Methode gibt ein Bytearray mit einem einzelnen Element.</span><span class="sxs-lookup"><span data-stu-id="781e2-174">The method returns a byte array with a single element.</span></span> <span data-ttu-id="781e2-175">Um einen booleschen Wert aus der binären Darstellung wiederherzustellen, können Sie den Aufrufen der <xref:System.BitConverter.ToBoolean%28System.Byte%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="781e2-175">To restore a Boolean value from its binary representation, you can call the <xref:System.BitConverter.ToBoolean%28System.Byte%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="781e2-176">Im folgenden Beispiel wird die <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> -Methode zum Konvertieren eines booleschen Werts in die binäre Darstellung und zeigt die einzelnen Bits der Wert ein, und ruft dann die <xref:System.BitConverter.ToBoolean%2A?displayProperty=nameWithType> Methode, um den Wert aus der binären Darstellung wiederherzustellen.</span><span class="sxs-lookup"><span data-stu-id="781e2-176">The following example calls the <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> method to convert a Boolean value to its binary representation and displays the individual bits of the value, and then calls the <xref:System.BitConverter.ToBoolean%2A?displayProperty=nameWithType> method to restore the value from its binary representation.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/binary1.cs#1)]
 [!code-vb[System.Boolean.Structure#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/binary1.vb#1)]  
  
<a name="Operations"></a>   
## <a name="performing-operations-with-boolean-values"></a><span data-ttu-id="781e2-177">Ausführen von Vorgängen mit booleschen Werten</span><span class="sxs-lookup"><span data-stu-id="781e2-177">Performing operations with Boolean values</span></span>  
 <span data-ttu-id="781e2-178">In diesem Abschnitt wird veranschaulicht, wie boolesche Werte werden in apps verwendet.</span><span class="sxs-lookup"><span data-stu-id="781e2-178">This section illustrates how Boolean values are used in apps.</span></span> <span data-ttu-id="781e2-179">Im erste Abschnitt erläutert die Verwendung als ein Flag an.</span><span class="sxs-lookup"><span data-stu-id="781e2-179">The first section discusses its use as a flag.</span></span> <span data-ttu-id="781e2-180">Die zweite veranschaulicht die Verwendung für arithmetische Operationen.</span><span class="sxs-lookup"><span data-stu-id="781e2-180">The second illustrates its use for arithmetic operations.</span></span>  
  
### <a name="boolean-values-as-flags"></a><span data-ttu-id="781e2-181">Boolesche Werte als flags</span><span class="sxs-lookup"><span data-stu-id="781e2-181">Boolean values as flags</span></span>  
 <span data-ttu-id="781e2-182">Boolesche Variablen werden als Flags, die am häufigsten verwendet, um das Vorhandensein oder fehlen einer Bedingung zu signalisieren.</span><span class="sxs-lookup"><span data-stu-id="781e2-182">Boolean variables are most commonly used as flags, to signal the presence or absence of some condition.</span></span> <span data-ttu-id="781e2-183">Z. B. in der <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=nameWithType> -Methode, der letzte Parameter, `ignoreCase`, ist ein Flag, das angibt, ob beim Vergleich von zwei Zeichenfolgen wird die Groß-/Kleinschreibung (`ignoreCase` ist `true`) oder Groß-/Kleinschreibung (`ignoreCase` ist `false`).</span><span class="sxs-lookup"><span data-stu-id="781e2-183">For example, in the <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=nameWithType> method, the final parameter, `ignoreCase`, is a flag that indicates whether the comparison of two strings is case-insensitive (`ignoreCase` is `true`) or case-sensitive (`ignoreCase` is `false`).</span></span> <span data-ttu-id="781e2-184">Der Wert des Flags kann dann in einer bedingten Anweisung ausgewertet werden.</span><span class="sxs-lookup"><span data-stu-id="781e2-184">The value of the flag can then be evaluated in a conditional statement.</span></span>  
  
 <span data-ttu-id="781e2-185">Im folgenden Beispiel wird eine einfache Konsolenanwendung veranschaulicht die Verwendung von booleschen Variablen als Flags.</span><span class="sxs-lookup"><span data-stu-id="781e2-185">The following example uses a simple console app to illustrate the use of Boolean variables as flags.</span></span> <span data-ttu-id="781e2-186">Die app akzeptiert Befehlszeilenparameter, mit denen Ausgabe an eine angegebene Datei umgeleitet werden können (die `/f` wechseln), und die Ausgabe gesendet werden, sowohl in einer angegebenen Datei als auch in der Konsole aktivieren (die `/b` wechseln).</span><span class="sxs-lookup"><span data-stu-id="781e2-186">The app accepts command-line parameters that enable output to be redirected to a specified file (the `/f` switch), and that enable output to be sent both to a specified file and to the console (the `/b` switch).</span></span> <span data-ttu-id="781e2-187">Die app definiert ein Flag, das mit dem Namen `isRedirected` an, ob die Ausgabe wird an eine Datei gesendet werden, und ein Flag mit dem Namen `isBoth` um anzugeben, dass die Ausgabe an die Konsole gesendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="781e2-187">The app defines a flag named `isRedirected` to indicate whether output is to be sent to a file, and a flag named `isBoth` to indicate that output should be sent to the console.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/operations1.cs#10)]
 [!code-vb[System.Boolean.Structure#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/operations1.vb#10)]  
  
### <a name="booleans-and-arithmetic-operations"></a><span data-ttu-id="781e2-188">Boolesche Werte und arithmetische Operationen</span><span class="sxs-lookup"><span data-stu-id="781e2-188">Booleans and arithmetic operations</span></span>  
 <span data-ttu-id="781e2-189">Ein boolescher Wert wird manchmal verwendet, um das Vorhandensein einer Bedingung anzugeben, die eine mathematische Berechnung auslöst.</span><span class="sxs-lookup"><span data-stu-id="781e2-189">A Boolean value is sometimes used to indicate the presence of a condition that triggers a mathematical calculation.</span></span> <span data-ttu-id="781e2-190">Z. B. eine `hasShippingCharge` Variablen unter Umständen erfüllen, als ein Flag zur Angabe, ob ein Rechnungsbetrag Versandgebühren hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="781e2-190">For example, a `hasShippingCharge` variable might serve as a flag to indicate whether to add shipping charges to an invoice amount.</span></span>  
  
 <span data-ttu-id="781e2-191">Da ein Vorgang mit einem `false` Wert hat keine Auswirkungen auf das Ergebnis eines Vorgangs, ist es nicht erforderlich, der boolesche Wert in einen ganzzahligen Wert für die Verwendung in die mathematische Operation zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="781e2-191">Because an operation with a `false` value has no effect on the result of an operation, it is not necessary to convert the Boolean to an integral value to use in the mathematical operation.</span></span> <span data-ttu-id="781e2-192">Stattdessen können Sie bedingten Logik verwenden.</span><span class="sxs-lookup"><span data-stu-id="781e2-192">Instead, you can use conditional logic.</span></span>  
  
 <span data-ttu-id="781e2-193">Das folgende Beispiel berechnet einen Anteil, der ein Teilergebnis ein Frachtkosten und eine optionale Servicegebühr besteht.</span><span class="sxs-lookup"><span data-stu-id="781e2-193">The following example computes an amount that consists of a subtotal, a shipping charge, and an optional service charge.</span></span> <span data-ttu-id="781e2-194">Die `hasServiceCharge` Variable wird bestimmt, ob die Servicegebühr angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="781e2-194">The `hasServiceCharge` variable determines whether the service charge is applied.</span></span> <span data-ttu-id="781e2-195">Anstelle von konvertieren `hasServiceCharge` im Beispiel wird bedingten Logik, die einen numerischen Wert ein, und er durch die Menge der Servicegebühr multipliziert, die Servicegebühr hinzufügen, wenn es gilt.</span><span class="sxs-lookup"><span data-stu-id="781e2-195">Instead of converting `hasServiceCharge` to a numeric value and multiplying it by the amount of the service charge, the example uses conditional logic to add the service charge amount if it is applicable.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/operations2.cs#13)]
 [!code-vb[System.Boolean.Structure#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/operations2.vb#13)]  
  
<a name="Interop"></a>   
### <a name="booleans-and-interop"></a><span data-ttu-id="781e2-196">Boolesche Werte und Interoperabilität</span><span class="sxs-lookup"><span data-stu-id="781e2-196">Booleans and interop</span></span>  
 <span data-ttu-id="781e2-197">Während Basisdatentypen für COM-Marshalling in der Regel ganz einfach, ist die <xref:System.Boolean> -Datentyp ist eine Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="781e2-197">While marshaling base data types to COM is generally straightforward, the <xref:System.Boolean> data type is an exception.</span></span> <span data-ttu-id="781e2-198">Können Sie anwenden der <xref:System.Runtime.InteropServices.MarshalAsAttribute> Attribut zum Marshallen der <xref:System.Boolean> Typs auf eines der folgenden Darstellung:</span><span class="sxs-lookup"><span data-stu-id="781e2-198">You can apply the <xref:System.Runtime.InteropServices.MarshalAsAttribute> attribute to marshal the <xref:System.Boolean> type to any of the following representations:</span></span>  
  
|<span data-ttu-id="781e2-199">Enumerationstyp</span><span class="sxs-lookup"><span data-stu-id="781e2-199">Enumeration type</span></span>|<span data-ttu-id="781e2-200">Nicht verwaltete format</span><span class="sxs-lookup"><span data-stu-id="781e2-200">Unmanaged format</span></span>|  
|----------------------|----------------------|  
|<xref:System.Runtime.InteropServices.UnmanagedType.Bool?displayProperty=nameWithType>|<span data-ttu-id="781e2-201">Einen 4-Byte-Ganzzahl-Wert, wobei ein Wert ungleich NULL darstellt `true` und 0 stellt `false`.</span><span class="sxs-lookup"><span data-stu-id="781e2-201">A 4-byte integer value, where any nonzero value represents `true` and 0 represents `false`.</span></span> <span data-ttu-id="781e2-202">Dies ist das Standardformat für eine <xref:System.Boolean> Feld in einer Struktur und ein <xref:System.Boolean> Parameter im Platform invoke-Aufrufe.</span><span class="sxs-lookup"><span data-stu-id="781e2-202">This is the default format of a <xref:System.Boolean> field in a structure and of a <xref:System.Boolean> parameter in platform invoke calls.</span></span>|  
|<xref:System.Runtime.InteropServices.UnmanagedType.U1?displayProperty=nameWithType>|<span data-ttu-id="781e2-203">Einen 1-Byte-Ganzzahl-Wert, der 1, wobei darstellt `true` und 0 stellt `false`.</span><span class="sxs-lookup"><span data-stu-id="781e2-203">A 1-byte integer value, where the 1 represents `true` and 0 represents `false`.</span></span>|  
|<xref:System.Runtime.InteropServices.UnmanagedType.VariantBool?displayProperty=nameWithType>|<span data-ttu-id="781e2-204">Ein 2-Byte-Ganzzahl-Wert, wobei-1 darstellt `true` und 0 stellt `false`.</span><span class="sxs-lookup"><span data-stu-id="781e2-204">A 2-byte integer value, where -1 represents `true` and 0 represents `false`.</span></span> <span data-ttu-id="781e2-205">Dies ist das Standardformat für eine <xref:System.Boolean> -Parameter in COM-Interop-aufrufen.</span><span class="sxs-lookup"><span data-stu-id="781e2-205">This is the default format of a <xref:System.Boolean> parameter in COM interop calls.</span></span>|  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="781e2-206">Alle Member dieses Typs sind threadsicher.</span>
      <span class="sxs-lookup">
        <span data-stu-id="781e2-206">All members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="781e2-207">Mitglieder, die angezeigt werden, so ändern Sie den Zustand der Instanz zurück tatsächlich eine neue Instanz initialisiert wird, mit dem neuen Wert an.</span>
      <span class="sxs-lookup">
        <span data-stu-id="781e2-207">Members that appear to modify instance state actually return a new instance initialized with the new value.</span>
      </span>
      <span data-ttu-id="781e2-208">Wie bei jeder anderen Art werden lesen und Schreiben in eine freigegebene Variable, die eine Instanz dieses Typs enthält durch eine Sperre um Threadsicherheit zu gewährleisten geschützt.</span>
      <span class="sxs-lookup">
        <span data-stu-id="781e2-208">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="781e2-209">Compares this instance to a specified object or <see cref="T:System.Boolean" /> object and returns an integer that indicates their relationship to one another.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-209">Compares this instance to a specified object or <see cref="T:System.Boolean" /> object and returns an integer that indicates their relationship to one another.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.CompareTo(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(bool value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : bool -&gt; int&#xA;override this.CompareTo : bool -&gt; int" Usage="bool.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="781e2-210">A <see cref="T:System.Boolean" /> object to compare to this instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-210">A <see cref="T:System.Boolean" /> object to compare to this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="781e2-211">Compares this instance to a specified <see cref="T:System.Boolean" /> object and returns an integer that indicates their relationship to one another.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-211">Compares this instance to a specified <see cref="T:System.Boolean" /> object and returns an integer that indicates their relationship to one another.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="781e2-212">A signed integer that indicates the relative values of this instance and <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-212">A signed integer that indicates the relative values of this instance and <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="781e2-213">
            <list type="table">
              <listheader>
                <term> Return Value  </term>
                <description> Condition  </description>
              </listheader>
              <item>
                <term> Less than zero  </term>
                <description> This instance is <see langword="false" /> and <paramref name="value" /> is <see langword="true" />.  </description>
              </item>
              <item>
                <term> Zero  </term>
                <description> This instance and <paramref name="value" /> are equal (either both are <see langword="true" /> or both are <see langword="false" />).  </description>
              </item>
              <item>
                <term> Greater than zero  </term>
                <description> This instance is <see langword="true" /> and <paramref name="value" /> is <see langword="false" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-213">
              <list type="table">
                <listheader>
                  <term> Return Value  </term>
                  <description> Condition  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description> This instance is <see langword="false" /> and <paramref name="value" /> is <see langword="true" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> This instance and <paramref name="value" /> are equal (either both are <see langword="true" /> or both are <see langword="false" />).  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description> This instance is <see langword="true" /> and <paramref name="value" /> is <see langword="false" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="781e2-214">Diese Methode implementiert die <xref:System.IComparable%601?displayProperty=nameWithType> -Schnittstelle und führt etwas bessere Leistung als die <xref:System.Boolean.CompareTo%2A?displayProperty=nameWithType> Methode, da es keine konvertieren die `value` Parameter für ein Objekt.</span><span class="sxs-lookup"><span data-stu-id="781e2-214">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.Boolean.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="781e2-215">Wenn `value` weniger Bits aufweist (schmaler ist) als den Instanztyp führen einige Programmiersprachen eine implizite erweiternde Konvertierung, die den Wert des Parameters in einen Wert mit mehr Bits transformiert.</span><span class="sxs-lookup"><span data-stu-id="781e2-215">If `value` has fewer bits (is narrower) than the instance type, some programming languages perform an implicit widening conversion that transforms the value of the parameter into a value with more bits.</span></span>  
  
 <span data-ttu-id="781e2-216">Nehmen wir beispielsweise an, der Instanztyp <xref:System.Int32> und der Parametertyp ist <xref:System.Byte>.</span><span class="sxs-lookup"><span data-stu-id="781e2-216">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="781e2-217">Microsoft c#-Compiler generiert den Anweisungen, um den Wert des Parameters als darstellen einer <xref:System.Int32> Objekt und erstellt dann eine <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> -Methode zum Vergleichen der <xref:System.Int32> -Instanz und die Parameter-Darstellung.</span><span class="sxs-lookup"><span data-stu-id="781e2-217">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method to compare the <xref:System.Int32> instance and parameter representation.</span></span>  
  
 <span data-ttu-id="781e2-218">Ihre bevorzugte Programmiersprache Dokumentation, um festzustellen, ob der Compiler implizite erweiternde Konvertierungen für numerische Typen ausführt.</span><span class="sxs-lookup"><span data-stu-id="781e2-218">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="781e2-219">Im folgenden Codebeispiel wird veranschaulicht, generische und nicht generische Versionen der <xref:System.Boolean.CompareTo%2A> Methode für verschiedene Wert- und Verweistypen.</span><span class="sxs-lookup"><span data-stu-id="781e2-219">The following code example demonstrates generic and nongeneric versions of the <xref:System.Boolean.CompareTo%2A> method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Boolean.CompareTo(System.Object)" />
        <altmember cref="Overload:System.Boolean.Equals" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="bool.CompareTo obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="781e2-220">An object to compare to this instance, or <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-220">An object to compare to this instance, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="781e2-221">Compares this instance to a specified object and returns an integer that indicates their relationship to one another.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-221">Compares this instance to a specified object and returns an integer that indicates their relationship to one another.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="781e2-222">A signed integer that indicates the relative order of this instance and <paramref name="obj" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-222">A signed integer that indicates the relative order of this instance and <paramref name="obj" />.</span>
          </span>
          <span data-ttu-id="781e2-223">
            <list type="table">
              <listheader>
                <term> Return Value  </term>
                <description> Condition  </description>
              </listheader>
              <item>
                <term> Less than zero  </term>
                <description> This instance is <see langword="false" /> and <paramref name="obj" /> is <see langword="true" />.  </description>
              </item>
              <item>
                <term> Zero  </term>
                <description> This instance and <paramref name="obj" /> are equal (either both are <see langword="true" /> or both are <see langword="false" />).  </description>
              </item>
              <item>
                <term> Greater than zero  </term>
                <description> This instance is <see langword="true" /> and <paramref name="obj" /> is <see langword="false" />.  -or-  <paramref name="obj" /> is <see langword="null" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-223">
              <list type="table">
                <listheader>
                  <term> Return Value  </term>
                  <description> Condition  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description> This instance is <see langword="false" /> and <paramref name="obj" /> is <see langword="true" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> This instance and <paramref name="obj" /> are equal (either both are <see langword="true" /> or both are <see langword="false" />).  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description> This instance is <see langword="true" /> and <paramref name="obj" /> is <see langword="false" />.  -or-  <paramref name="obj" /> is <see langword="null" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="781e2-224">`obj` muss `null` oder eine Instanz von `Boolean`ist, andernfalls wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="781e2-224">`obj` must be `null` or an instance of `Boolean`; otherwise, an exception is thrown.</span></span>  
  
 <span data-ttu-id="781e2-225">Diese Methode implementiert die <xref:System.IComparable> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="781e2-225">This method implements the <xref:System.IComparable> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="781e2-226">
            <paramref name="obj" /> is not a <see cref="T:System.Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-226">
              <paramref name="obj" /> is not a <see cref="T:System.Boolean" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Boolean.CompareTo(System.Boolean)" />
        <altmember cref="Overload:System.Boolean.Equals" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="781e2-227">Returns a value indicating whether this instance is equal to a specified object or <see cref="T:System.Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-227">Returns a value indicating whether this instance is equal to a specified object or <see cref="T:System.Boolean" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (bool obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(bool obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.Equals(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(bool obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : bool -&gt; bool" Usage="bool.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="781e2-228">A <see cref="T:System.Boolean" /> value to compare to this instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-228">A <see cref="T:System.Boolean" /> value to compare to this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="781e2-229">Returns a value indicating whether this instance is equal to a specified <see cref="T:System.Boolean" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-229">Returns a value indicating whether this instance is equal to a specified <see cref="T:System.Boolean" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="781e2-230">
            <see langword="true" /> if <paramref name="obj" /> has the same value as this instance; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-230">
              <see langword="true" /> if <paramref name="obj" /> has the same value as this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="781e2-231">Diese Methode implementiert die <xref:System.IEquatable%601?displayProperty=nameWithType> -Schnittstelle und führt etwas bessere Leistung als <xref:System.Boolean.Equals%2A> , da es keine konvertieren die `obj` Parameter für ein Objekt.</span><span class="sxs-lookup"><span data-stu-id="781e2-231">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.Boolean.Equals%2A> because it does not have to convert the `obj` parameter to an object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Boolean.Equals(System.Object)" />
        <altmember cref="Overload:System.Boolean.CompareTo" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="bool.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="781e2-232">An object to compare to this instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-232">An object to compare to this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="781e2-233">Returns a value indicating whether this instance is equal to a specified object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-233">Returns a value indicating whether this instance is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="781e2-234">
            <see langword="true" /> if <paramref name="obj" /> is a <see cref="T:System.Boolean" /> and has the same value as this instance; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-234">
              <see langword="true" /> if <paramref name="obj" /> is a <see cref="T:System.Boolean" /> and has the same value as this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="781e2-235">Diese Methode überschreibt <xref:System.Object.Equals%2A>.</span><span class="sxs-lookup"><span data-stu-id="781e2-235">This method overrides <xref:System.Object.Equals%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Boolean.Equals(System.Boolean)" />
        <altmember cref="Overload:System.Boolean.CompareTo" />
      </Docs>
    </Member>
    <Member MemberName="FalseString">
      <MemberSignature Language="C#" Value="public static readonly string FalseString;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string FalseString" />
      <MemberSignature Language="DocId" Value="F:System.Boolean.FalseString" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FalseString As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ FalseString;" />
      <MemberSignature Language="F#" Value=" staticval mutable FalseString : string" Usage="System.bool.FalseString" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="781e2-236">Represents the Boolean value <see langword="false" /> as a string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-236">Represents the Boolean value <see langword="false" /> as a string.</span>
          </span>
          <span data-ttu-id="781e2-237">This field is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-237">This field is read-only.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="781e2-238">Dieses Feld ist, entspricht der Zeichenfolge "False".</span><span class="sxs-lookup"><span data-stu-id="781e2-238">This field is equal to the string "False".</span></span>  
  
 <span data-ttu-id="781e2-239">Der <xref:System.Boolean.FalseString> -Eigenschaft definiert die angegebene Zeichenfolgendarstellung einer `False` <xref:System.Boolean> Wert formatieren und Analysieren von Vorgängen.</span><span class="sxs-lookup"><span data-stu-id="781e2-239">The <xref:System.Boolean.FalseString> property defines the string representation of a `False` <xref:System.Boolean> value in formatting and parsing operations.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.String" />
        <altmember cref="F:System.Boolean.TrueString" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="bool.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="781e2-240">Returns the hash code for this instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-240">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="781e2-241">A hash code for the current <see cref="T:System.Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-241">A hash code for the current <see cref="T:System.Boolean" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="781e2-242">Die <xref:System.Boolean> -Klasse implementiert `true` als die ganze Zahl ein, und `false` als die ganze Zahl Null.</span><span class="sxs-lookup"><span data-stu-id="781e2-242">The <xref:System.Boolean> class implements `true` as the integer, one, and `false` as the integer, zero.</span></span> <span data-ttu-id="781e2-243">Allerdings kann eine bestimmte Programmiersprache darstellen `true` und `false` mit anderen Werten.</span><span class="sxs-lookup"><span data-stu-id="781e2-243">However, a particular programming language might represent `true` and `false` with other values.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="bool.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="781e2-244">Returns the type code for the <see cref="T:System.Boolean" /> value type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-244">Returns the type code for the <see cref="T:System.Boolean" /> value type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="781e2-245">The enumerated constant <see cref="F:System.TypeCode.Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-245">The enumerated constant <see cref="F:System.TypeCode.Boolean" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static bool Parse (ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.Parse(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (value As ReadOnlySpan(Of Char)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Parse(ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; -&gt; bool" Usage="System.bool.Parse value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static bool Parse (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Parse(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Parse(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; bool" Usage="System.bool.Parse value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="781e2-246">A string containing the value to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-246">A string containing the value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="781e2-247">Converts the specified string representation of a logical value to its <see cref="T:System.Boolean" /> equivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-247">Converts the specified string representation of a logical value to its <see cref="T:System.Boolean" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="781e2-248">
            <see langword="true" /> if <paramref name="value" /> is equivalent to <see cref="F:System.Boolean.TrueString" />; <see langword="false" /> if <paramref name="value" /> is equivalent to <see cref="F:System.Boolean.FalseString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-248">
              <see langword="true" /> if <paramref name="value" /> is equivalent to <see cref="F:System.Boolean.TrueString" />; <see langword="false" /> if <paramref name="value" /> is equivalent to <see cref="F:System.Boolean.FalseString" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="781e2-249">Die `value` -Parameter optional vorangestellt oder folgt nach Leerzeichen, muss entweder enthalten <xref:System.Boolean.TrueString> oder <xref:System.Boolean.FalseString>ist, andernfalls wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="781e2-249">The `value` parameter, optionally preceded or trailed by white space, must contain either <xref:System.Boolean.TrueString> or <xref:System.Boolean.FalseString>; otherwise, an exception is thrown.</span></span> <span data-ttu-id="781e2-250">Beim Vergleich wird Groß-/Kleinschreibung.</span><span class="sxs-lookup"><span data-stu-id="781e2-250">The comparison is case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="781e2-251">Das folgende Codebeispiel veranschaulicht die Verwendung von <xref:System.Boolean.Parse%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="781e2-251">The following code example illustrates the use of <xref:System.Boolean.Parse%2A> method.</span></span>  
  
 [!code-cpp[System.Boolean#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Boolean/CPP/booleanmembers.cpp#2)]
 [!code-csharp[System.Boolean#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Boolean/CS/booleanmembers.cs#2)]
 [!code-vb[System.Boolean#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Boolean/VB/booleanmembers.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="781e2-252">
            <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-252">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="781e2-253">
            <paramref name="value" /> is not equivalent to <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-253">
              <paramref name="value" /> is not equivalent to <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span>
          </span>
        </exception>
        <altmember cref="F:System.Boolean.TrueString" />
        <altmember cref="F:System.Boolean.FalseString" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (obj As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ obj) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="781e2-254">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-254">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="781e2-255">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-255">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="781e2-256">
            <see langword="true" /> or <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-256">
              <see langword="true" /> or <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="781e2-257">Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="781e2-257">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="781e2-258">Er kann nur verwendet werden, wenn die <xref:System.Boolean>-Instanz in eine <xref:System.IConvertible>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="781e2-258">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="781e2-259">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-259">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="781e2-260">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-260">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="781e2-261">1 if the value of this instance is <see langword="true" />; otherwise, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-261">1 if the value of this instance is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="781e2-262">Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="781e2-262">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="781e2-263">Er kann nur verwendet werden, wenn die <xref:System.Boolean>-Instanz in eine <xref:System.IConvertible>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="781e2-263">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="781e2-264">Die empfohlene Alternative ist das Aufrufen der <xref:System.Convert.ToByte%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="781e2-264">The recommended alternative is to call the <xref:System.Convert.ToByte%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Convert.ToByte(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="781e2-265">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-265">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="781e2-266">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-266">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="781e2-267">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-267">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="781e2-268">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-268">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="781e2-269">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-269">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="781e2-270">You attempt to convert a <see cref="T:System.Boolean" /> value to a <see cref="T:System.Char" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-270">You attempt to convert a <see cref="T:System.Boolean" /> value to a <see cref="T:System.Char" /> value.</span>
          </span>
          <span data-ttu-id="781e2-271">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-271">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="781e2-272">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-272">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="781e2-273">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-273">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="781e2-274">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-274">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="781e2-275">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-275">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="781e2-276">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-276">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="781e2-277">You attempt to convert a <see cref="T:System.Boolean" /> value to a <see cref="T:System.DateTime" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-277">You attempt to convert a <see cref="T:System.Boolean" /> value to a <see cref="T:System.DateTime" /> value.</span>
          </span>
          <span data-ttu-id="781e2-278">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-278">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="781e2-279">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-279">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="781e2-280">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />..</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-280">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />..</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="781e2-281">1 if this instance is <see langword="true" />; otherwise, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-281">1 if this instance is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="781e2-282">Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="781e2-282">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="781e2-283">Er kann nur verwendet werden, wenn die <xref:System.Boolean>-Instanz in eine <xref:System.IConvertible>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="781e2-283">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="781e2-284">Die empfohlene Alternative ist das Aufrufen der <xref:System.Convert.ToDecimal%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="781e2-284">The recommended alternative is to call the <xref:System.Convert.ToDecimal%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="781e2-285">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-285">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="781e2-286">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />..</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-286">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />..</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="781e2-287">1 if this instance is <see langword="true" />; otherwise, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-287">1 if this instance is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="781e2-288">Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="781e2-288">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="781e2-289">Er kann nur verwendet werden, wenn die <xref:System.Boolean>-Instanz in eine <xref:System.IConvertible>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="781e2-289">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="781e2-290">Die empfohlene Alternative ist das Aufrufen der <xref:System.Convert.ToDouble%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="781e2-290">The recommended alternative is to call the <xref:System.Convert.ToDouble%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="781e2-291">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-291">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="781e2-292">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-292">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="781e2-293">1 if this instance is <see langword="true" />; otherwise, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-293">1 if this instance is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="781e2-294">Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="781e2-294">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="781e2-295">Er kann nur verwendet werden, wenn die <xref:System.Boolean>-Instanz in eine <xref:System.IConvertible>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="781e2-295">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="781e2-296">Die empfohlene Alternative ist das Aufrufen der <xref:System.Convert.ToInt16%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="781e2-296">The recommended alternative is to call the <xref:System.Convert.ToInt16%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="781e2-297">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-297">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="781e2-298">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-298">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="781e2-299">1 if this instance is <see langword="true" />; otherwise, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-299">1 if this instance is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="781e2-300">Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="781e2-300">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="781e2-301">Er kann nur verwendet werden, wenn die <xref:System.Boolean>-Instanz in eine <xref:System.IConvertible>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="781e2-301">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="781e2-302">Die empfohlene Alternative ist das Aufrufen der <xref:System.Convert.ToInt32%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="781e2-302">The recommended alternative is to call the <xref:System.Convert.ToInt32%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="781e2-303">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-303">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="781e2-304">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-304">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="781e2-305">1 if this instance is <see langword="true" />; otherwise, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-305">1 if this instance is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="781e2-306">Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="781e2-306">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="781e2-307">Er kann nur verwendet werden, wenn die <xref:System.Boolean>-Instanz in eine <xref:System.IConvertible>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="781e2-307">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="781e2-308">Die empfohlene Alternative ist das Aufrufen der <xref:System.Convert.ToInt64%28System.Boolean%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="781e2-308">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Boolean%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="781e2-309">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-309">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="781e2-310">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-310">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="781e2-311">1 if this instance is <see langword="true" />; otherwise, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-311">1 if this instance is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="781e2-312">Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="781e2-312">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="781e2-313">Er kann nur verwendet werden, wenn die <xref:System.Boolean>-Instanz in eine <xref:System.IConvertible>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="781e2-313">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="781e2-314">Die empfohlene Alternative ist das Aufrufen der <xref:System.Convert.ToSByte%28System.Boolean%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="781e2-314">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Boolean%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="781e2-315">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-315">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="781e2-316">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />..</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-316">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />..</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="781e2-317">1 if this instance is <see langword="true" />; otherwise, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-317">1 if this instance is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="781e2-318">Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="781e2-318">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="781e2-319">Er kann nur verwendet werden, wenn die <xref:System.Boolean>-Instanz in eine <xref:System.IConvertible>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="781e2-319">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="781e2-320">Die empfohlene Alternative ist das Aufrufen der <xref:System.Convert.ToSingle%28System.Boolean%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="781e2-320">The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.Boolean%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToString">
      <MemberSignature Language="C#" Value="string IConvertible.ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IConvertible.ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (provider As IFormatProvider) As String Implements IConvertible.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IConvertible.ToString(IFormatProvider ^ provider) = IConvertible::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="781e2-321">The desired type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-321">The desired type.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="781e2-322">An <see cref="T:System.IFormatProvider" /> implementation that supplies culture-specific information about the format of the returned value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-322">An <see cref="T:System.IFormatProvider" /> implementation that supplies culture-specific information about the format of the returned value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="781e2-323">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-323">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="781e2-324">An object of the specified type, with a value that is equivalent to the value of this <see langword="Boolean" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-324">An object of the specified type, with a value that is equivalent to the value of this <see langword="Boolean" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="781e2-325">Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="781e2-325">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="781e2-326">Er kann nur verwendet werden, wenn die <xref:System.Boolean>-Instanz in eine <xref:System.IConvertible>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="781e2-326">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="781e2-327">Die empfohlene Alternative ist das Aufrufen der <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="781e2-327">The recommended alternative is to call the <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="781e2-328">
            <paramref name="type" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-328">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="781e2-329">The requested type conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-329">The requested type conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Convert" />
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="781e2-330">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-330">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="781e2-331">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-331">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="781e2-332">1 if this instance is <see langword="true" />; otherwise, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-332">1 if this instance is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="781e2-333">Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="781e2-333">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="781e2-334">Er kann nur verwendet werden, wenn die <xref:System.Boolean>-Instanz in eine <xref:System.IConvertible>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="781e2-334">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="781e2-335">Die empfohlene Alternative ist das Aufrufen der <xref:System.Convert.ToUInt16%28System.Boolean%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="781e2-335">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Boolean%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt16" />
        <altmember cref="M:System.Convert.ToUInt16(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="781e2-336">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-336">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="781e2-337">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-337">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="781e2-338">1 if this instance is <see langword="true" />; otherwise, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-338">1 if this instance is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="781e2-339">Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="781e2-339">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="781e2-340">Er kann nur verwendet werden, wenn die <xref:System.Boolean>-Instanz in eine <xref:System.IConvertible>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="781e2-340">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="781e2-341">Die empfohlene Alternative ist das Aufrufen der <xref:System.Convert.ToUInt32%28System.Boolean%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="781e2-341">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Boolean%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt32" />
        <altmember cref="M:System.Convert.ToUInt32(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="781e2-342">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-342">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="781e2-343">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-343">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="781e2-344">1 if this instance is <see langword="true" />; otherwise, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-344">1 if this instance is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="781e2-345">Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="781e2-345">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="781e2-346">Er kann nur verwendet werden, wenn die <xref:System.Boolean>-Instanz in eine <xref:System.IConvertible>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="781e2-346">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="781e2-347">Die empfohlene Alternative ist das Aufrufen der <xref:System.Convert.ToUInt64%28System.Boolean%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="781e2-347">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Boolean%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt64" />
        <altmember cref="M:System.Convert.ToUInt64(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="781e2-348">Converts the value of this instance to its equivalent string representation (either "True" or "False").</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-348">Converts the value of this instance to its equivalent string representation (either "True" or "False").</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="bool.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="781e2-349">Converts the value of this instance to its equivalent string representation (either "True" or "False").</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-349">Converts the value of this instance to its equivalent string representation (either "True" or "False").</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="781e2-350">"True" (the value of the <see cref="F:System.Boolean.TrueString" /> property) if the value of this instance is <see langword="true" />, or "False" (the value of the <see cref="F:System.Boolean.FalseString" /> property) if the value of this instance is <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-350">"True" (the value of the <see cref="F:System.Boolean.TrueString" /> property) if the value of this instance is <see langword="true" />, or "False" (the value of the <see cref="F:System.Boolean.FalseString" /> property) if the value of this instance is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="781e2-351">Diese Methode gibt die Konstanten "True" oder "False".</span><span class="sxs-lookup"><span data-stu-id="781e2-351">This method returns the constants "True" or "False".</span></span>  
  
 <span data-ttu-id="781e2-352">Beachten Sie, dass es sich bei XML die Groß-/Kleinschreibung beachtet wird und die XML-Spezifikation "true" und "False" als gültiger Satz von booleschen Werten erkennt.</span><span class="sxs-lookup"><span data-stu-id="781e2-352">Note that XML is case-sensitive, and that the XML specification recognizes "true" and "false" as the valid set of Boolean values.</span></span> <span data-ttu-id="781e2-353">Wenn die Zeichenfolge, durch zurückgegeben die <xref:System.Boolean.ToString> Methode besteht darin, in eine XML-Datei geschrieben werden die <xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType> Methode muss zuerst aufgerufen werden, um sie in Kleinbuchstaben zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="781e2-353">If the string returned by the <xref:System.Boolean.ToString> method is to be written to an XML file, its <xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType> method should be called first to convert it to lowercase.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="781e2-354">Das folgende Beispiel veranschaulicht die <xref:System.Boolean.ToString%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="781e2-354">The following example illustrates the <xref:System.Boolean.ToString%2A> method.</span></span>  
  
 [!code-cpp[System.Boolean#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Boolean/CPP/booleanmembers.cpp#1)]
 [!code-csharp[System.Boolean#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Boolean/CS/booleanmembers.cs#1)]
 [!code-vb[System.Boolean#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Boolean/VB/booleanmembers.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="bool.ToString provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="781e2-355">(Reserved) An <see cref="T:System.IFormatProvider" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-355">(Reserved) An <see cref="T:System.IFormatProvider" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="781e2-356">Converts the value of this instance to its equivalent string representation (either "True" or "False").</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-356">Converts the value of this instance to its equivalent string representation (either "True" or "False").</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="781e2-357">
            <see cref="F:System.Boolean.TrueString" /> if the value of this instance is <see langword="true" />, or <see cref="F:System.Boolean.FalseString" /> if the value of this instance is <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-357">
              <see cref="F:System.Boolean.TrueString" /> if the value of this instance is <see langword="true" />, or <see cref="F:System.Boolean.FalseString" /> if the value of this instance is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="781e2-358">Die `provider` Parameter ist reserviert.</span><span class="sxs-lookup"><span data-stu-id="781e2-358">The `provider` parameter is reserved.</span></span> <span data-ttu-id="781e2-359">Er wird bei der Ausführung dieser Methode nicht berücksichtigt.</span><span class="sxs-lookup"><span data-stu-id="781e2-359">It does not participate in the execution of this method.</span></span> <span data-ttu-id="781e2-360">Dies bedeutet, dass die <xref:System.Boolean.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> -Methode, im Gegensatz zu den meisten Methoden mit einem `provider` -Parameter spiegelt die kulturspezifischen Einstellungen nicht.</span><span class="sxs-lookup"><span data-stu-id="781e2-360">This means that the <xref:System.Boolean.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method, unlike most methods with a `provider` parameter, does not reflect culture-specific settings.</span></span>  
  
 <span data-ttu-id="781e2-361">Diese Methode gibt die Konstanten "True" oder "False".</span><span class="sxs-lookup"><span data-stu-id="781e2-361">This method returns the constants "True" or "False".</span></span> <span data-ttu-id="781e2-362">Beachten Sie, dass es sich bei XML die Groß-/Kleinschreibung beachtet wird und die XML-Spezifikation "true" und "False" als gültiger Satz von booleschen Werten erkennt.</span><span class="sxs-lookup"><span data-stu-id="781e2-362">Note that XML is case-sensitive, and that the XML specification recognizes "true" and "false" as the valid set of Boolean values.</span></span> <span data-ttu-id="781e2-363">Wenn die <xref:System.String> zurückgegebenes Objekt der <xref:System.Boolean.ToString%28System.IFormatProvider%29> Methode besteht darin, in eine XML-Datei geschrieben werden die <xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType> Methode muss zuerst aufgerufen werden, um sie in Kleinbuchstaben zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="781e2-363">If the <xref:System.String> object returned by the <xref:System.Boolean.ToString%28System.IFormatProvider%29> method is to be written to an XML file, its <xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType> method should be called first to convert it to lowercase.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrueString">
      <MemberSignature Language="C#" Value="public static readonly string TrueString;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string TrueString" />
      <MemberSignature Language="DocId" Value="F:System.Boolean.TrueString" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TrueString As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ TrueString;" />
      <MemberSignature Language="F#" Value=" staticval mutable TrueString : string" Usage="System.bool.TrueString" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="781e2-364">Represents the Boolean value <see langword="true" /> as a string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-364">Represents the Boolean value <see langword="true" /> as a string.</span>
          </span>
          <span data-ttu-id="781e2-365">This field is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-365">This field is read-only.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="781e2-366">Dieses Feld ist, entspricht der Zeichenfolge "True".</span><span class="sxs-lookup"><span data-stu-id="781e2-366">This field is equal to the string "True".</span></span>  
  
 <span data-ttu-id="781e2-367">Der <xref:System.Boolean.TrueString> -Eigenschaft definiert die angegebene Zeichenfolgendarstellung einer `True` <xref:System.Boolean> Wert formatieren und Analysieren von Vorgängen.</span><span class="sxs-lookup"><span data-stu-id="781e2-367">The <xref:System.Boolean.TrueString> property defines the string representation of a `True` <xref:System.Boolean> value in formatting and parsing operations.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.String" />
        <altmember cref="F:System.Boolean.FalseString" />
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.TryFormat(System.Span{System.Char},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryFormat(Span&lt;char&gt; destination, [Runtime::InteropServices::Out] int % charsWritten);" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; *  -&gt; bool" Usage="bool.TryFormat (destination, charsWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; value, out bool result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; value, [out] bool&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.TryParse(System.ReadOnlySpan{System.Char},System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (value As ReadOnlySpan(Of Char), ByRef result As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; value, [Runtime::InteropServices::Out] bool % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; *  -&gt; bool" Usage="System.bool.TryParse (value, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string value, out bool result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string value, [out] bool&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.TryParse(System.String,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (value As String, ByRef result As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ value, [Runtime::InteropServices::Out] bool % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.bool.TryParse (value, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="result" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="781e2-368">A string containing the value to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-368">A string containing the value to convert.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="781e2-369">When this method returns, if the conversion succeeded, contains <see langword="true" /> if <c>value</c> is equal to <see cref="F:System.Boolean.TrueString" /> or <see langword="false" /> if <c>value</c> is equal to <see cref="F:System.Boolean.FalseString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-369">When this method returns, if the conversion succeeded, contains <see langword="true" /> if <c>value</c> is equal to <see cref="F:System.Boolean.TrueString" /> or <see langword="false" /> if <c>value</c> is equal to <see cref="F:System.Boolean.FalseString" />.</span>
          </span>
          <span data-ttu-id="781e2-370">If the conversion failed, contains <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-370">If the conversion failed, contains <see langword="false" />.</span>
          </span>
          <span data-ttu-id="781e2-371">The conversion fails if <c>value</c> is <see langword="null" /> or is not equal to the value of either the <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" /> field.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-371">The conversion fails if <c>value</c> is <see langword="null" /> or is not equal to the value of either the <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" /> field.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="781e2-372">Tries to convert the specified string representation of a logical value to its <see cref="T:System.Boolean" /> equivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-372">Tries to convert the specified string representation of a logical value to its <see cref="T:System.Boolean" /> equivalent.</span>
          </span>
          <span data-ttu-id="781e2-373">A return value indicates whether the conversion succeeded or failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-373">A return value indicates whether the conversion succeeded or failed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="781e2-374">
            <see langword="true" /> if <paramref name="value" /> was converted successfully; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="781e2-374">
              <see langword="true" /> if <paramref name="value" /> was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="781e2-375">Die <xref:System.Boolean.TryParse%2A> Methode entspricht der <xref:System.Boolean.Parse%2A> -Methode, mit Ausnahme der <xref:System.Boolean.TryParse%2A> Methode löst keine Ausnahme aus, wenn die Konvertierung schlägt fehl.</span><span class="sxs-lookup"><span data-stu-id="781e2-375">The <xref:System.Boolean.TryParse%2A> method is like the <xref:System.Boolean.Parse%2A> method, except the <xref:System.Boolean.TryParse%2A> method does not throw an exception if the conversion fails.</span></span>  
  
 <span data-ttu-id="781e2-376">Die `value` Parameter gefolgt von Leerzeichen oder vorangestellt werden kann.</span><span class="sxs-lookup"><span data-stu-id="781e2-376">The `value` parameter can be preceded or followed by white space.</span></span> <span data-ttu-id="781e2-377">Der Vergleich ist ordinal und Groß-/Kleinschreibung.</span><span class="sxs-lookup"><span data-stu-id="781e2-377">The comparison is ordinal and case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="781e2-378">Im folgenden Beispiel wird die <xref:System.Boolean.TryParse%2A> Methode, um ein Array von Zeichenfolgen zu analysieren.</span><span class="sxs-lookup"><span data-stu-id="781e2-378">The following example calls the <xref:System.Boolean.TryParse%2A> method to parse an array of strings.</span></span> <span data-ttu-id="781e2-379">Beachten Sie, die der Analysevorgang erfolgreich ist, nur dann, wenn die zu analysierende Zeichenfolge "True" ist (der Wert des der <xref:System.Boolean.TrueString> Feld) oder "False" (der Wert des der <xref:System.Boolean.FalseString> Feld) in einem Vergleich Groß-/Kleinschreibung.</span><span class="sxs-lookup"><span data-stu-id="781e2-379">Note that the parse operation succeeds only if the string to be parsed is "True" (the value of the <xref:System.Boolean.TrueString> field) or "False" (the value of the <xref:System.Boolean.FalseString> field) in a case-insensitive comparison.</span></span>  
  
 [!code-csharp[System.Boolean.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.tryparse/cs/tryparseex.cs#1)]
 [!code-vb[System.Boolean.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.tryparse/vb/tryparseex.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Boolean.Parse(System.String)" />
        <altmember cref="F:System.Boolean.TrueString" />
        <altmember cref="F:System.Boolean.FalseString" />
      </Docs>
    </Member>
  </Members>
</Type>