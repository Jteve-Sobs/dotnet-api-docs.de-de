<Type Name="TimeZone" FullName="System.TimeZone">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e8f9d216546f929c77f5a7b673db88580c758651" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69419255" /></Metadata><TypeSignature Language="C#" Value="public abstract class TimeZone" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit TimeZone extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.TimeZone" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TimeZone" />
  <TypeSignature Language="C++ CLI" Value="public ref class TimeZone abstract" />
  <TypeSignature Language="F#" Value="type TimeZone = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;netcore-3.0;netstandard-2.1">
      <AttributeName>System.Obsolete("System.TimeZone has been deprecated.  Please investigate the use of System.TimeZoneInfo instead.")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt eine Zeitzone dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Zeitzone ist eine geografische Region, in der die gleiche Standardzeit verwendet wird.  
  
> [!IMPORTANT]
>  Verwenden Sie nach Möglichkeit die <xref:System.TimeZoneInfo> -Klasse anstelle <xref:System.TimeZone> der-Klasse.  
  
 Mithilfe der <xref:System.TimeZone> -Klasse können Sie Informationen zur aktuellen Zeitzone abrufen und Uhrzeiten von der Ortszeit in die koordinierte Weltzeit (UTC) oder umgekehrt konvertieren. Allerdings können Sie die <xref:System.TimeZone> -Klasse nicht verwenden, um andere Zeitzonen als die lokale Zone darzustellen oder um Datums-und Uhrzeit Konvertierungen von einer Zeitzone in eine andere zu verarbeiten. Verwenden Sie zu diesem Zweck die <xref:System.TimeZoneInfo> -Klasse. Mit dieser Klasse können Sie Informationen zu allen Zeitzonen abrufen, die im lokalen System definiert sind, zum Erstellen benutzerdefinierter Zeitzonen und zum Konvertieren von Zeiten von einer Zeitzone in eine andere.  
  
 Die <xref:System.TimeZone> -Klasse unterstützt nur eine einzelne Anpassungs Regel für die Sommerzeit für die lokale Zeitzone. Daher kann die-Klasse <xref:System.TimeZone> die Sommerzeit Informationen genau melden oder zwischen UTC und Ortszeit nur für den Zeitraum konvertieren, in dem die aktuelle Anpassungs Regel wirksam ist. Im Gegensatz dazu unter <xref:System.TimeZoneInfo> stützt die-Klasse mehrere Anpassungsregeln, die es ermöglichen, mit historischen Zeit Zonendaten zu arbeiten.  
  
   
  
## Examples  
 Im folgenden Beispiel wird auf die ausgewählten `TimeZone` Klassen Elemente verwiesen und diese angezeigt.  
  
 [!code-cpp[System.TimeZone.Class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeZone.Class/CPP/tzclass.cpp#1)]
 [!code-csharp[System.TimeZone.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone.Class/CS/tzclass.cs#1)]
 [!code-vb[System.TimeZone.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone.Class/VB/tzclass.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Zusätzlich zur Bereitstellung von-Implementierungen <see langword="abstract" /> für die zugehörigen Member <see langword="MustOverride" /> (die in Visual Basic gekennzeichnet sind) ist es wichtig, <see cref="T:System.TimeZone" /> dass von abgeleitete Klassen das <see cref="M:System.TimeZone.ToLocalTime(System.DateTime)" /> Standardverhalten der-Methode überschreiben. Dies liegt daran <see cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" />, dass das Standard <see cref="M:System.TimeZone.ToLocalTime(System.DateTime)" /> Verhalten von in der .NET Framework Version 2,0 nicht von einem-aufrufswert abhängig ist, wie dies in den .NET Framework-Versionen 1,0 und 1,1 der Fall war.  Weitere Informationen finden Sie unter <see cref="M:System.TimeZone.ToLocalTime(System.DateTime)" /> der-Methode.</para></block>
    <altmember cref="T:System.DateTime" />
    <altmember cref="T:System.DateTimeOffset" />
    <altmember cref="T:System.TimeZoneInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TimeZone ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZone.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TimeZone();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.TimeZone" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentTimeZone">
      <MemberSignature Language="C#" Value="public static TimeZone CurrentTimeZone { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.TimeZone CurrentTimeZone" />
      <MemberSignature Language="DocId" Value="P:System.TimeZone.CurrentTimeZone" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentTimeZone As TimeZone" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeZone ^ CurrentTimeZone { TimeZone ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentTimeZone : TimeZone" Usage="System.TimeZone.CurrentTimeZone" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZone</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Zeitzone des aktuellen Computers ab.</summary>
        <value>Ein <see cref="T:System.TimeZone" />-Objekt, das die aktuelle lokale Zeitzone darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.TimeZone.CurrentTimeZone%2A> Eigenschaft entspricht der <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> Eigenschaft. Verwenden Sie nach Möglichkeit die <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> -Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Beispiel wird auf `CurrentTimeZone` die-Eigenschaft verwiesen, und es werden die Namen für die Standardzeit und die Sommerzeit für die lokale Zeitzone angezeigt.  
  
 [!code-cpp[System.TimeZone.Class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeZone.Class/CPP/tzclass.cpp#1)]
 [!code-csharp[System.TimeZone.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone.Class/CS/tzclass.cs#1)]
 [!code-vb[System.TimeZone.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone.Class/VB/tzclass.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para>Lokale Zeit Zonendaten werden zwischengespeichert <see cref="P:System.TimeZone.CurrentTimeZone" /> , nachdem zuerst zum Abrufen von Zeitzoneninformationen verwendet wurde. Wenn die lokale Zeitzone des Systems anschließend geändert wird, spiegelt <see cref="P:System.TimeZone.CurrentTimeZone" /> die-Eigenschaft diese Änderung nicht wider. Wenn Sie Zeit Zonen Änderungen behandeln müssen, während die Anwendung ausgeführt wird, verwenden Sie <see cref="T:System.TimeZoneInfo" /> die-Klasse, <see cref="M:System.TimeZoneInfo.ClearCachedData" /> und wenden Sie Ihre-Methode an.</para></block>
        <altmember cref="P:System.TimeZoneInfo.Local" />
      </Docs>
    </Member>
    <Member MemberName="DaylightName">
      <MemberSignature Language="C#" Value="public abstract string DaylightName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DaylightName" />
      <MemberSignature Language="DocId" Value="P:System.TimeZone.DaylightName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DaylightName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DaylightName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DaylightName : string" Usage="System.TimeZone.DaylightName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Sommerzeitzone ab.</summary>
        <value>Der Name der Sommerzeitzone.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Sommerzeit in der Zeitzone nicht verwendet wird, wird eine leere Zeichenfolge ("") zurückgegeben.  
  
 Die <xref:System.TimeZone.DaylightName%2A> Eigenschaft entspricht der <xref:System.TimeZoneInfo.DaylightName%2A?displayProperty=nameWithType> Eigenschaft. Verwenden Sie nach Möglichkeit die <xref:System.TimeZoneInfo.DaylightName%2A?displayProperty=nameWithType> -Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Beispiel wird auf die- `DaylightName` Eigenschaft der aktuellen Zeitzone verwiesen, und die-Eigenschaft wird angezeigt.  
  
 [!code-cpp[System.TimeZone.Class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeZone.Class/CPP/tzclass.cpp#1)]
 [!code-csharp[System.TimeZone.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone.Class/CS/tzclass.cs#1)]
 [!code-vb[System.TimeZone.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone.Class/VB/tzclass.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeZoneInfo.DaylightName" />
      </Docs>
    </Member>
    <Member MemberName="GetDaylightChanges">
      <MemberSignature Language="C#" Value="public abstract System.Globalization.DaylightTime GetDaylightChanges (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Globalization.DaylightTime GetDaylightChanges(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZone.GetDaylightChanges(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDaylightChanges (year As Integer) As DaylightTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Globalization::DaylightTime ^ GetDaylightChanges(int year);" />
      <MemberSignature Language="F#" Value="abstract member GetDaylightChanges : int -&gt; System.Globalization.DaylightTime" Usage="timeZone.GetDaylightChanges year" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.DaylightTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">Das Jahr, auf das sich der Zeitraum mit Sommerzeit bezieht.</param>
        <summary>Gibt den Zeitraum mit Sommerzeit für ein bestimmtes Jahr zurück.</summary>
        <returns>Ein <see cref="T:System.Globalization.DaylightTime" />-Objekt, das Beginn und Ende der Sommerzeit im Jahr <paramref name="year" /> enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Es wird nur ein Sommer Zeitraum pro Jahr unterstützt.  
  
 Wenn die Sommerzeit in der aktuellen Zeitzone nicht verwendet wird, ist der Rückgabewert <xref:System.Globalization.DaylightTime> ein-Objekt, bei dem der Wert von <xref:System.Globalization.DaylightTime.End%2A> <xref:System.Globalization.DaylightTime.Start%2A> und <xref:System.DateTime.MinValue?displayProperty=nameWithType>den Wert hat und der <xref:System.Globalization.DaylightTime.Delta%2A?displayProperty=nameWithType> Wert von <xref:System.TimeSpan> auf 0 Ticks initialisiert wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" /> ist kleiner als 1 oder größer als 9999.</exception>
        <block subset="none" type="usage"><para>Da die <see cref="T:System.TimeZone" /> -Klasse nur eine Anpassungs Regel für die Sommerzeit unter <see cref="M:System.TimeZone.GetDaylightChanges(System.Int32)" /> stützt, wendet die-Methode die aktuelle Anpassungs Regel auf ein Jahr an, unabhängig davon, ob die Anpassungs Regel tatsächlich für dieses Jahr gilt. Wenn das Betriebssystem selbst über genaue Daten für ein bestimmtes Jahr verfügt, ist ein genaueres Ergebnis verfügbar, indem mit dem Array von <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> -Objekten gearbeitet wird <see cref="M:System.TimeZoneInfo.GetAdjustmentRules" /> , die von der-Methode zurückgegeben werden. <see cref="P:System.Globalization.DaylightTime.Start" /> DieEigenschaften<see cref="P:System.Globalization.DaylightTime.Delta" /> , und entsprechen den<see cref="P:System.TimeZoneInfo.AdjustmentRule.DateStart" />Eigenschaften ,<see cref="P:System.TimeZoneInfo.AdjustmentRule.DateEnd" />und .<see cref="P:System.TimeZoneInfo.AdjustmentRule.DaylightDelta" /> <see cref="P:System.Globalization.DaylightTime.End" /></para></block>
        <altmember cref="M:System.TimeZoneInfo.GetAdjustmentRules" />
      </Docs>
    </Member>
    <Member MemberName="GetUtcOffset">
      <MemberSignature Language="C#" Value="public abstract TimeSpan GetUtcOffset (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TimeSpan GetUtcOffset(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZone.GetUtcOffset(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetUtcOffset (time As DateTime) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TimeSpan GetUtcOffset(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member GetUtcOffset : DateTime -&gt; TimeSpan" Usage="timeZone.GetUtcOffset time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">Ein Datums- und Uhrzeitwert.</param>
        <summary>Gibt für die angegebene Ortszeit den Offset zur koordinierten Weltzeit (Coordinated Universal Time, UTC) zurück.</summary>
        <returns>Der UTC-Offset (Coordinated Universal Time) von <paramref name="time" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode gibt den Offset oder die Differenz zwischen dem `time` -Parameter und der koordinierten Weltzeit (UTC) zurück. Dies bedeutet:  
  
 `time`= UTC + Offset  
  
 Die-Methode interpretiert die Zeitzone von `time` basierend <xref:System.DateTime.Kind%2A> auf der-Eigenschaft. Wenn der Wert <xref:System.DateTime.Kind%2A> der-Eigenschaft oder <xref:System.DateTimeKind.Local?displayProperty=nameWithType> <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>ist, gibt die Methode den Offset der lokalen Zeitzone zurück. Wenn der Wert <xref:System.DateTime.Kind%2A> der-Eigenschaft ist <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>, <xref:System.TimeSpan.Zero?displayProperty=nameWithType>gibt die Methode einen Offset zurück, der gleich ist.  
  
 Wenn die lokale Zeitzone die Sommerzeit beobachtet, wendet <xref:System.TimeZone.GetUtcOffset%2A> die aktuelle Anpassungs Regel auf an `time` , wenn der Offset der lokalen Zeitzone bestimmt wird. Das heißt, der Offset, der <xref:System.TimeZone.GetUtcOffset%2A> von zurück `time` gegeben wird, gibt an, ob die Standardzeit der Zeitzone oder die Sommerzeit liegt.  
  
> [!NOTE]
>  Die <xref:System.TimeZone.GetUtcOffset%2A> -Methode erkennt nur die aktuelle Anpassungs Regel für die Sommerzeit für die lokale Zeitzone. Folglich wird garantiert, dass der UTC-Offset einer Ortszeit nur während des Zeitraums, in dem die aktuelle Anpassungs Regel wirksam ist, genau zurückgegeben wird. Möglicherweise werden falsche Ergebnisse zurück `time` gegeben, wenn ein historischer Datums-und Uhrzeitwert ist, der einer vorherigen Anpassungs Regel unterliegt.  
  
 Die <xref:System.TimeZone.GetUtcOffset%2A> -Methode entspricht der <xref:System.TimeZoneInfo.GetUtcOffset%2A?displayProperty=nameWithType> -Methode. Verwenden Sie nach Möglichkeit die <xref:System.TimeZoneInfo.GetUtcOffset%2A?displayProperty=nameWithType> -Methode.  
  
 Da der von `time` dargestellte Datums-und Uhrzeitwert und der Offset dieses Werts von UTC nicht eng gekoppelt sind, kann ein lokaler oder nicht angegebener Datums-und Uhrzeitwert einen anderen Offset Wert zurückgeben, wenn er auf verschiedenen Computern ausgeführt wird, oder wenn er auf demselben Computer wie ausgeführt wird. unterschiedliche Zeitzonen. Wenn dieses Verhalten nicht erwünscht ist, verwenden <xref:System.DateTimeOffset> Sie stattdessen einen-Wert. Der <xref:System.DateTimeOffset> -Datentyp verbindet einen Datums-und Uhrzeitwert eng mit dem Offset von der UTC.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeZoneInfo.GetUtcOffset(System.DateTime)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsDaylightSavingTime">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt einen Wert zurück, der angibt, ob ein angegebenes Datum und eine angegebene Uhrzeit innerhalb der Sommerzeit liegen.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsDaylightSavingTime">
      <MemberSignature Language="C#" Value="public virtual bool IsDaylightSavingTime (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDaylightSavingTime(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZone.IsDaylightSavingTime(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsDaylightSavingTime (time As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsDaylightSavingTime(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member IsDaylightSavingTime : DateTime -&gt; bool&#xA;override this.IsDaylightSavingTime : DateTime -&gt; bool" Usage="timeZone.IsDaylightSavingTime time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">Ein Datum und eine Uhrzeit.</param>
        <summary>Gibt einen Wert zurück, der angibt, ob das angegebene Datum und die angegebene Uhrzeit innerhalb der Sommerzeit liegen.</summary>
        <returns><see langword="true" /> wenn <paramref name="time" /> in der Sommerzeit liegt; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Jahr, für das die Sommerzeit gilt, wird vom `time` -Parameter abgeleitet.  
  
 Da die <xref:System.TimeZone> -Klasse eine einzelne Anpassungs Regel für die Sommerzeit unter <xref:System.TimeZone.IsDaylightSavingTime%28System.DateTime%29> stützt, wendet die-Methode die aktuelle Anpassungs Regel auf ein beliebiges Datum an, unabhängig davon, ob die Anpassungs Regel an diesem Datum wirksam war. Vorausgesetzt, dass das Betriebssystem selbst über exakte Sommerzeit Daten verfügt, ist mit der <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> -Methode ein genaueres Ergebnis verfügbar. Verwenden Sie nach Möglichkeit die <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> -Methode.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeZoneInfo.IsDaylightSavingTime(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="IsDaylightSavingTime">
      <MemberSignature Language="C#" Value="public static bool IsDaylightSavingTime (DateTime time, System.Globalization.DaylightTime daylightTimes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDaylightSavingTime(valuetype System.DateTime time, class System.Globalization.DaylightTime daylightTimes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZone.IsDaylightSavingTime(System.DateTime,System.Globalization.DaylightTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDaylightSavingTime (time As DateTime, daylightTimes As DaylightTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDaylightSavingTime(DateTime time, System::Globalization::DaylightTime ^ daylightTimes);" />
      <MemberSignature Language="F#" Value="static member IsDaylightSavingTime : DateTime * System.Globalization.DaylightTime -&gt; bool" Usage="System.TimeZone.IsDaylightSavingTime (time, daylightTimes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="daylightTimes" Type="System.Globalization.DaylightTime" />
      </Parameters>
      <Docs>
        <param name="time">Ein Datum und eine Uhrzeit.</param>
        <param name="daylightTimes">Ein Zeitraum mit Sommerzeit.</param>
        <summary>Gibt einen Wert zurück, der angibt, ob das angegebene Datum und die angegebene Uhrzeit innerhalb der angegebenen Sommerzeit liegen.</summary>
        <returns><see langword="true" />, wenn <paramref name="time" /> in <paramref name="daylightTimes" /> liegt, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> -Methode bietet die gleiche Funktionalität wie diese <xref:System.TimeZone.IsDaylightSavingTime%2A> Überladung der-Methode. Verwenden Sie nach Möglichkeit die <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> -Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="daylightTimes" /> ist <see langword="null" />.</exception>
        <altmember cref="M:System.TimeZoneInfo.IsDaylightSavingTime(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="StandardName">
      <MemberSignature Language="C#" Value="public abstract string StandardName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StandardName" />
      <MemberSignature Language="DocId" Value="P:System.TimeZone.StandardName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property StandardName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ StandardName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StandardName : string" Usage="System.TimeZone.StandardName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Standardzeitzone ab.</summary>
        <value>Der Name der Standardzeitzone.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.TimeZone.StandardName%2A> Eigenschaft entspricht der <xref:System.TimeZoneInfo.StandardName%2A?displayProperty=nameWithType> Eigenschaft. Verwenden Sie nach Möglichkeit die <xref:System.TimeZoneInfo.StandardName%2A?displayProperty=nameWithType> -Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Beispiel wird auf die- `StandardName` Eigenschaft der aktuellen Zeitzone verwiesen, und die-Eigenschaft wird angezeigt.  
  
 [!code-cpp[System.TimeZone.Class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeZone.Class/CPP/tzclass.cpp#1)]
 [!code-csharp[System.TimeZone.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone.Class/CS/tzclass.cs#1)]
 [!code-vb[System.TimeZone.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone.Class/VB/tzclass.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Es wird versucht, diese Eigenschaft auf <see langword="null" /> festzulegen.</exception>
        <altmember cref="P:System.TimeZoneInfo.StandardName" />
      </Docs>
    </Member>
    <Member MemberName="ToLocalTime">
      <MemberSignature Language="C#" Value="public virtual DateTime ToLocalTime (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime ToLocalTime(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZone.ToLocalTime(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToLocalTime (time As DateTime) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime ToLocalTime(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member ToLocalTime : DateTime -&gt; DateTime&#xA;override this.ToLocalTime : DateTime -&gt; DateTime" Usage="timeZone.ToLocalTime time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">Eine UTC-Zeit (Coordinated Universal Time).</param>
        <summary>Gibt die Ortszeit zurück, die einem angegebenen Datums- und Zeitwert entspricht.</summary>
        <returns>Ein <see cref="T:System.DateTime" />-Objekt, dessen Wert die <paramref name="time" /> entsprechende Ortszeit ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die folgende Tabelle zeigt die Beziehung zwischen dem `time` -Parameter und <xref:System.DateTime> dem Wert, der von dieser Methode zurückgegeben wird.  
  
|`time`-Parameter|Verhalten|Rückgabewert|  
|----------------------|--------------|------------------|  
|Eine koordinierte Weltzeit (UTC)<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.|Konvertiert die Uhrzeit von UTC in die lokale Zeit.|Ein <xref:System.DateTime>-Objekt, dessen Wert die `time` entsprechende Ortszeit ist.|  
|Eine Ortszeit (<xref:System.DateTimeKind.Local?displayProperty=nameWithType>).|Keine Konvertierung erforderlich.|Derselbe <xref:System.DateTime> Wert, der durch den `time` -Parameter dargestellt wird.|  
|Eine nicht angegebene Zeit (<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>).|Geht davon aus, dass die Uhrzeit UTC ist, und konvertiert sie von UTC in die lokale Zeit.|Ein <xref:System.DateTime>-Objekt, dessen Wert die `time` entsprechende Ortszeit ist.|  
  
 Wenn die lokale Zeitzone die Sommerzeit beobachtet, wendet <xref:System.TimeZone.ToLocalTime%2A> die aktuelle Anpassungs Regel auf an `time` , wenn die Konvertierung durchgeführt wird.  
  
> [!NOTE]
>  Die <xref:System.TimeZone.ToLocalTime%2A> -Methode erkennt nur die aktuelle Anpassungs Regel für die Sommerzeit für die lokale Zeitzone. Daher ist es garantiert, dass die lokale Zeit, die einer bestimmten UTC-Zeit entspricht, nur während des Zeitraums, in dem die aktuelle Anpassungs Regel wirksam ist, genau zurückgegeben wird. Möglicherweise werden falsche Ergebnisse zurück `time` gegeben, wenn ein historischer Datums-und Uhrzeitwert ist, der einer vorherigen Anpassungs Regel unterliegt.  
  
 Die <xref:System.TimeZone.ToLocalTime%2A> -Methode entspricht der <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A?displayProperty=nameWithType> -Methode, `destinationTimeZone` bei der der <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>-Parameter auf festgelegt ist. Verwenden Sie nach Möglichkeit die <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A?displayProperty=nameWithType> -Methode.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Obwohl es nicht erforderlich ist, sollten abgeleitete Klassen, die unter der .NET Framework Version 2,0 ausgeführt werden, die Standard Implementierung dieser Methode überschreiben. In den .NET Framework Versionen 1,0 und 1,1 hat die <see langword="ToLocalTime" /> Methode die <see cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" /> -Methode aufgerufen und für die Sommerzeit angepasst, als die Ortszeit zurückgegeben wurde. Beginnend mit dem .NET Framework 2,0 hängt das Verhalten der Standard Implementierung jedoch von der <see cref="P:System.DateTime.Kind" /> -Eigenschaft <paramref name="time" /> des-Parameters ab. Wenn der Wert ist <see cref="F:System.DateTimeKind.Local" />, gibt diese Methode <paramref name="time" /> unverändert zurück. Wenn der Wert <see cref="F:System.DateTimeKind.Utc" /> entweder oder <see cref="F:System.DateTimeKind.Unspecified" />ist, geht diese Methode <paramref name="time" /> davon aus, dass UTC ist, und konvertiert sie in die lokale <see cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" /> Systemzeit, ohne die-Methode aufrufen zu müssen.  
  
Der folgende Code stellt eine einfache außer Kraft setzung der Standard Implementierung <see langword="ToLocalTime" /> der-Methode bereit. In diesem Code stellt die <see langword="internalTimeZone" /> -Variable eine private Instanz <see langword="TimeZone" /> der-Klasse dar: 
[! Code-csharp[System. TimeZone. ToLocalTime # 1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone.ToLocalTime/CS/TimeZone_ToLocalTime.cs#1)] [! Code-vb[System. TimeZone. ToLocalTime # 1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone.ToLocalTime/VB/TimeZone_ToLocalTime.vb#1)]</para></block>
        <altmember cref="M:System.TimeZoneInfo.ConvertTimeFromUtc(System.DateTime,System.TimeZoneInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToUniversalTime">
      <MemberSignature Language="C#" Value="public virtual DateTime ToUniversalTime (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime ToUniversalTime(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZone.ToUniversalTime(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToUniversalTime (time As DateTime) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime ToUniversalTime(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member ToUniversalTime : DateTime -&gt; DateTime&#xA;override this.ToUniversalTime : DateTime -&gt; DateTime" Usage="timeZone.ToUniversalTime time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">Ein Datum und eine Uhrzeit.</param>
        <summary>Gibt die Coordinated Universal Time (UTC) zurück, die einer angegebenen Zeit entspricht.</summary>
        <returns>Ein <see cref="T:System.DateTime" />-Objekt, dessen Wert die <paramref name="time" /> entsprechende Coordinated Universal Time (UTC) ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die lokale Zeitzone die Sommerzeit beobachtet, wendet <xref:System.TimeZone.ToUniversalTime%2A> die aktuelle Anpassungs Regel auf den `time` -Parameter an, wenn die Konvertierung durchgeführt wird.  
  
> [!NOTE]
>  Die <xref:System.TimeZone.ToUniversalTime%2A> -Methode erkennt nur die aktuelle Anpassungs Regel für die Sommerzeit für die lokale Zeitzone. Folglich wird sichergestellt, dass die koordinierte Weltzeit (UTC) für eine bestimmte Ortszeit nur während des Zeitraums, in dem die aktuelle Anpassungs Regel wirksam ist, genau zurückgegeben wird. Möglicherweise werden falsche Ergebnisse zurück `time` gegeben, wenn ein historischer Datums-und Uhrzeitwert ist, der einer vorherigen Anpassungs Regel unterliegt.  
  
 Wenn der `time` -Parameter eine mehrdeutige Zeit ist, geht die Methode davon aus, dass es sich um eine Standardzeit handelt. (Eine mehrdeutige Zeit ist eine, die entweder einer Standardzeit oder einer Sommerzeit in der lokalen Zeitzone zugeordnet werden kann.) Wenn `time` eine ungültige Zeit ist, subtrahiert die Methode einfach die lokale Zeit vom UTC-Offset der lokalen Zeitzone zur Rückgabe von UTC. (Eine ungültige Zeit ist eine, die aufgrund der Anwendung der Anpassungsregeln für die Sommerzeit nicht vorhanden ist.)  
  
 Da `time` in Bezug auf die aktuelle Zeitzone des aktuellen Systems interpretiert wird, können sich die von dieser Methode zurückgegebenen Datums-und Uhrzeitangaben unterscheiden, wenn eine Anwendung auf unterschiedlichen Computern oder auf demselben Computer mit unterschiedlichen Zeitzonen ausgeführt wird. In Fällen, in denen ein Datums-und Uhrzeitwert einen einzelnen, eindeutigen Zeitpunkt darstellen muss, verwenden <xref:System.DateTimeOffset> Sie einen-Wert, um die lokale Zeit darzustellen.  
  
 Die <xref:System.TimeZone.ToUniversalTime%2A> -Methode entspricht der <xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%29?displayProperty=nameWithType> -Methoden Überladung <xref:System.DateTime> mit einem <xref:System.DateTime.Kind%2A> -Parameter, dessen <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>-Eigenschaft nicht gleich ist. Verwenden Sie nach Möglichkeit die <xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%29?displayProperty=nameWithType> -Methoden Überladung.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime)" />
      </Docs>
    </Member>
  </Members>
</Type>
