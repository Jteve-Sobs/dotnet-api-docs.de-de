<Type Name="TimeZone" FullName="System.TimeZone">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8caf098e13eedb4e57cdd5a421860fc3b46fdd06" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39910035" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TimeZone" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit TimeZone extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.TimeZone" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TimeZone" />
  <TypeSignature Language="C++ CLI" Value="public ref class TimeZone abstract" />
  <TypeSignature Language="F#" Value="type TimeZone = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0">
      <AttributeName>System.Obsolete("System.TimeZone has been deprecated.  Please investigate the use of System.TimeZoneInfo instead.")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt eine Zeitzone dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Zeitzone ist eine geografische Region, in der die gleiche Standardzeit verwendet wird.  
  
> [!IMPORTANT]
>  Verwenden Sie nach Möglichkeit die <xref:System.TimeZoneInfo> -Klasse anstelle der <xref:System.TimeZone> Klasse.  
  
 Sie können die <xref:System.TimeZone> Klasse zum Abrufen von Informationen über die aktuelle Zeitzone, und wie oft von der Ortszeit in Coordinated Universal Time (UTC) oder umgekehrt zu konvertieren. Allerdings können keine der <xref:System.TimeZone> Klasse zur Darstellung von anderen Zeitzonen als der lokale Zone oder zur Behandlung von Datum und Uhrzeit-Konvertierungen von einer Zeitzone in eine andere. Zu diesem Zweck verwenden Sie die <xref:System.TimeZoneInfo> Klasse. Sie können diese Klasse verwenden, zum Abrufen von Informationen auf eine beliebige Zeitzone definiert, auf dem lokalen System aus, um benutzerdefinierte Zeitzonen zu erstellen und zu Zeiten von einer Zeitzone in eine andere zu konvertieren.  
  
 Die <xref:System.TimeZone> -Klasse unterstützt nur eine einzelne Sommerzeit Anpassungsregel für die lokale Zeitzone. Daher die <xref:System.TimeZone> Klasse kann genau Sommerzeit-Berichtsinformationen oder Konvertieren zwischen UTC und Ortszeit lediglich für den Zeitraum, in dem die jüngste Anpassungsregel aktiviert ist. Im Gegensatz dazu die <xref:System.TimeZoneInfo> Klasse unterstützt mehrere Anpassungsregeln, wodurch es möglich, mit Zeitzonendaten zu arbeiten.  
  
   
  
## Examples  
 Das folgenden Beispiel-Referenzen und zeigt ausgewählte `TimeZone` -Klasse Elemente.  
  
 [!code-cpp[System.TimeZone.Class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeZone.Class/CPP/tzclass.cpp#1)]
 [!code-csharp[System.TimeZone.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone.Class/CS/tzclass.cs#1)]
 [!code-vb[System.TimeZone.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone.Class/VB/tzclass.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Zusätzlich zur Bereitstellung von Implementierungen für die <see langword="abstract" /> Mitglieder (markierten <see langword="MustOverride" /> in Visual Basic), es ist wichtig, dass Klassen abgeleitete <see cref="T:System.TimeZone" /> überschreiben das Standardverhalten der <see cref="M:System.TimeZone.ToLocalTime(System.DateTime)" /> Methode. Grund hierfür ist das Standardverhalten des <see cref="M:System.TimeZone.ToLocalTime(System.DateTime)" /> in .NET Framework Version 2.0 hängt keinem Aufruf von <see cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" />, wie in den .NET Framework-Versionen 1.0 und 1.1.  Weitere Informationen finden Sie unter den <see cref="M:System.TimeZone.ToLocalTime(System.DateTime)" /> Methode.</para>
    </block>
    <altmember cref="T:System.DateTime" />
    <altmember cref="T:System.DateTimeOffset" />
    <altmember cref="T:System.TimeZoneInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TimeZone ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZone.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TimeZone();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.TimeZone" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentTimeZone">
      <MemberSignature Language="C#" Value="public static TimeZone CurrentTimeZone { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.TimeZone CurrentTimeZone" />
      <MemberSignature Language="DocId" Value="P:System.TimeZone.CurrentTimeZone" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentTimeZone As TimeZone" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeZone ^ CurrentTimeZone { TimeZone ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentTimeZone : TimeZone" Usage="System.TimeZone.CurrentTimeZone" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZone</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Zeitzone des aktuellen Computers ab.</summary>
        <value>Ein <see cref="T:System.TimeZone" />-Objekt, das die aktuelle lokale Zeitzone darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.TimeZone.CurrentTimeZone%2A> Eigenschaft entspricht der <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> Eigenschaft. Verwenden Sie nach Möglichkeit die <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> Eigenschaft.  
  
   
  
## Examples  
 Das folgende Beispiel-Verweise die `CurrentTimeZone` -Eigenschaft und zeigt die Namen für die Standardzeit und Sommerzeit für die lokale Zeitzone.  
  
 [!code-cpp[System.TimeZone.Class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeZone.Class/CPP/tzclass.cpp#1)]
 [!code-csharp[System.TimeZone.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone.Class/CS/tzclass.cs#1)]
 [!code-vb[System.TimeZone.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone.Class/VB/tzclass.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>Lokale Zeit Zonendaten werden zwischengespeichert, nach dem <see cref="P:System.TimeZone.CurrentTimeZone" /> zuerst verwendet, um Zeitzoneninformationen abzurufen. Wenn das System den lokalen Zeitzone anschließend ändert, die <see cref="P:System.TimeZone.CurrentTimeZone" /> Eigenschaft spiegelt diese Änderung nicht. Ihre Anwendung wird ausgeführt, wenn Sie zeitzonenänderungen beim behandeln müssen, verwenden Sie die <see cref="T:System.TimeZoneInfo" /> -Klasse, und rufen die <see cref="M:System.TimeZoneInfo.ClearCachedData" /> Methode.</para>
        </block>
        <altmember cref="P:System.TimeZoneInfo.Local" />
      </Docs>
    </Member>
    <Member MemberName="DaylightName">
      <MemberSignature Language="C#" Value="public abstract string DaylightName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DaylightName" />
      <MemberSignature Language="DocId" Value="P:System.TimeZone.DaylightName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DaylightName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DaylightName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DaylightName : string" Usage="System.TimeZone.DaylightName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Sommerzeitzone ab.</summary>
        <value>Der Name der Sommerzeitzone.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Sommerzeit nicht verwendet wird, in der Zeitzone, eine leere Zeichenfolge ("") wird zurückgegeben.  
  
 Die <xref:System.TimeZone.DaylightName%2A> Eigenschaft entspricht der <xref:System.TimeZoneInfo.DaylightName%2A?displayProperty=nameWithType> Eigenschaft. Verwenden Sie nach Möglichkeit die <xref:System.TimeZoneInfo.DaylightName%2A?displayProperty=nameWithType> Eigenschaft.  
  
   
  
## Examples  
 Das folgende Beispiel-Verweise und zeigt die `DaylightName` Eigenschaft der aktuellen Zeitzone.  
  
 [!code-cpp[System.TimeZone.Class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeZone.Class/CPP/tzclass.cpp#1)]
 [!code-csharp[System.TimeZone.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone.Class/CS/tzclass.cs#1)]
 [!code-vb[System.TimeZone.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone.Class/VB/tzclass.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeZoneInfo.DaylightName" />
      </Docs>
    </Member>
    <Member MemberName="GetDaylightChanges">
      <MemberSignature Language="C#" Value="public abstract System.Globalization.DaylightTime GetDaylightChanges (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Globalization.DaylightTime GetDaylightChanges(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZone.GetDaylightChanges(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDaylightChanges (year As Integer) As DaylightTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Globalization::DaylightTime ^ GetDaylightChanges(int year);" />
      <MemberSignature Language="F#" Value="abstract member GetDaylightChanges : int -&gt; System.Globalization.DaylightTime" Usage="timeZone.GetDaylightChanges year" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.DaylightTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">Das Jahr, auf das sich der Zeitraum mit Sommerzeit bezieht.</param>
        <summary>Gibt den Zeitraum mit Sommerzeit für ein bestimmtes Jahr zurück.</summary>
        <returns>Ein <see cref="T:System.Globalization.DaylightTime" />-Objekt, das Beginn und Ende der Sommerzeit im Jahr <paramref name="year" /> enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nur einen Zeitraum mit Sommerzeit pro Jahr wird unterstützt.  
  
 Wenn Sommerzeit nicht in der aktuellen Zeitzone verwendet wird, wird der Rückgabewert ist eine <xref:System.Globalization.DaylightTime> Objekt, in dem den Wert der <xref:System.Globalization.DaylightTime.Start%2A> und <xref:System.Globalization.DaylightTime.End%2A> ist <xref:System.DateTime.MinValue?displayProperty=nameWithType>, und der Wert der <xref:System.Globalization.DaylightTime.Delta%2A?displayProperty=nameWithType> ist eine <xref:System.TimeSpan> mit 0 Takten initialisiert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" /> ist kleiner als 1 oder größer als 9999.</exception>
        <block subset="none" type="usage">
          <para>Da die <see cref="T:System.TimeZone" /> Klasse unterstützt nur eine Regel für die Sommerzeit-Anpassung, die <see cref="M:System.TimeZone.GetDaylightChanges(System.Int32)" /> Methode wendet die aktuelle Anpassungsregel auf jedes Jahr, unabhängig davon, ob die Anpassungsregel tatsächlich für dieses Jahr gilt. Vorausgesetzt, dass das Betriebssystem selbst genaue Daten für ein bestimmtes Jahr verfügt, ein genaueres Ergebnis ist verfügbar, arbeiten mit dem Array von <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> zurückgegebenen Objekte die <see cref="M:System.TimeZoneInfo.GetAdjustmentRules" /> Methode. Die <see cref="P:System.Globalization.DaylightTime.Start" />, <see cref="P:System.Globalization.DaylightTime.End" />, und <see cref="P:System.Globalization.DaylightTime.Delta" /> Eigenschaften entsprechen den <see cref="P:System.TimeZoneInfo.AdjustmentRule.DateStart" />, <see cref="P:System.TimeZoneInfo.AdjustmentRule.DateEnd" />, und <see cref="P:System.TimeZoneInfo.AdjustmentRule.DaylightDelta" /> Eigenschaften.</para>
        </block>
        <altmember cref="M:System.TimeZoneInfo.GetAdjustmentRules" />
      </Docs>
    </Member>
    <Member MemberName="GetUtcOffset">
      <MemberSignature Language="C#" Value="public abstract TimeSpan GetUtcOffset (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TimeSpan GetUtcOffset(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZone.GetUtcOffset(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetUtcOffset (time As DateTime) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TimeSpan GetUtcOffset(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member GetUtcOffset : DateTime -&gt; TimeSpan" Usage="timeZone.GetUtcOffset time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">Ein Datums- und Uhrzeitwert.</param>
        <summary>Gibt für die angegebene Ortszeit den Offset zur koordinierten Weltzeit (Coordinated Universal Time, UTC) zurück.</summary>
        <returns>Der UTC-Offset (Coordinated Universal Time) von <paramref name="time" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode gibt den Offset oder Unterschied zwischen der `time` Parameter und der koordinierten Weltzeit (Coordinated Universal Time, UTC). Dies bedeutet:  
  
 `time` = UTC + offset  
  
 Die Methode, interpretiert der Zeitzone des `time` basierend auf dessen <xref:System.DateTime.Kind%2A> Eigenschaft. Wenn der Wert des der <xref:System.DateTime.Kind%2A> Eigenschaft <xref:System.DateTimeKind.Local?displayProperty=nameWithType> oder <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>, die Methode gibt den Offset der lokalen Zeitzone zurück. Wenn der Wert des der <xref:System.DateTime.Kind%2A> Eigenschaft <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>, die Methode gibt einen Offset zurück, <xref:System.TimeSpan.Zero?displayProperty=nameWithType>.  
  
 Wenn die lokale Zeitzone die Sommerzeit berücksichtigt <xref:System.TimeZone.GetUtcOffset%2A> wendet auf die aktuelle Anpassungsregel `time` , wenn der Offset von der lokalen Zeitzone bestimmt. D. h. den Offset vom <xref:System.TimeZone.GetUtcOffset%2A> spiegelt wider, ob `time` Normalzeit der Zeitzone oder der Sommerzeit einer Zeitzone liegt.  
  
> [!NOTE]
>  Die <xref:System.TimeZone.GetUtcOffset%2A> Methode erkennt nur die aktuellen Sommerzeit Anpassungsregel für die lokale Zeitzone. Daher wird es unbedingt genau die UTC-Offset der Ortszeit nur während des Zeitraums zurückgeben in dem die jüngste Anpassungsregel wirksam wird. Es kann falsche Ergebnisse zurückgegeben, wenn `time` ist eine historische Datums- und Uhrzeitwert, der gemäß einer vorherigen Anpassungsregel wurde.  
  
 Die <xref:System.TimeZone.GetUtcOffset%2A> Methode entspricht der <xref:System.TimeZoneInfo.GetUtcOffset%2A?displayProperty=nameWithType> Methode. Verwenden Sie nach Möglichkeit die <xref:System.TimeZoneInfo.GetUtcOffset%2A?displayProperty=nameWithType> Methode.  
  
 Da der Wert für Datum und Uhrzeit dargestellt `time` und des Werts Offset von UTC sind nicht eng gekoppelt sind, ein lokales oder nicht angegebene Datum und Uhrzeit-Wert kann einen anderen Offsetwert, wenn er auf verschiedenen Computern oder bei Ausführung auf dem gleichen Computer unter zurückgeben unterschiedliche Zeitzonen. Wenn dieses Verhalten nicht erwünscht ist, verwenden Sie eine <xref:System.DateTimeOffset> jedoch den Wert. Die <xref:System.DateTimeOffset> Datentyp eng koppelt einen Wert für Datum und Uhrzeit Offset von UTC.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeZoneInfo.GetUtcOffset(System.DateTime)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsDaylightSavingTime">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt einen Wert zurück, der angibt, ob ein angegebenes Datum und eine angegebene Uhrzeit innerhalb der Sommerzeit liegen.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsDaylightSavingTime">
      <MemberSignature Language="C#" Value="public virtual bool IsDaylightSavingTime (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDaylightSavingTime(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZone.IsDaylightSavingTime(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsDaylightSavingTime (time As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsDaylightSavingTime(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member IsDaylightSavingTime : DateTime -&gt; bool&#xA;override this.IsDaylightSavingTime : DateTime -&gt; bool" Usage="timeZone.IsDaylightSavingTime time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">Ein Datum und eine Uhrzeit.</param>
        <summary>Gibt einen Wert zurück, der angibt, ob das angegebene Datum und die angegebene Uhrzeit innerhalb der Sommerzeit liegen.</summary>
        <returns>
          <see langword="true" /> wenn <paramref name="time" /> in der Sommerzeit liegt; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Jahr für die die Sommerzeit gilt ergibt sich aus der `time` Parameter.  
  
 Da die <xref:System.TimeZone> Klasse unterstützt eine einzelne Sommerzeit Anpassungsregel, die <xref:System.TimeZone.IsDaylightSavingTime%28System.DateTime%29> Methode gilt die aktuelle Anpassungsregel für jedes Datum an, unabhängig davon, ob die Anpassungsregel wirksam zu diesem Datum war. Vorausgesetzt, dass das Betriebssystem selbst genau historischen Sommerzeitdaten verfügt, ein genaueres Ergebnis kann durch Verwendung der <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> Methode. Verwenden Sie nach Möglichkeit die <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> Methode.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeZoneInfo.IsDaylightSavingTime(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="IsDaylightSavingTime">
      <MemberSignature Language="C#" Value="public static bool IsDaylightSavingTime (DateTime time, System.Globalization.DaylightTime daylightTimes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDaylightSavingTime(valuetype System.DateTime time, class System.Globalization.DaylightTime daylightTimes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZone.IsDaylightSavingTime(System.DateTime,System.Globalization.DaylightTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDaylightSavingTime (time As DateTime, daylightTimes As DaylightTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDaylightSavingTime(DateTime time, System::Globalization::DaylightTime ^ daylightTimes);" />
      <MemberSignature Language="F#" Value="static member IsDaylightSavingTime : DateTime * System.Globalization.DaylightTime -&gt; bool" Usage="System.TimeZone.IsDaylightSavingTime (time, daylightTimes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="daylightTimes" Type="System.Globalization.DaylightTime" />
      </Parameters>
      <Docs>
        <param name="time">Ein Datum und eine Uhrzeit.</param>
        <param name="daylightTimes">To be added.</param>
        <summary>Gibt einen Wert zurück, der angibt, ob das angegebene Datum und die angegebene Uhrzeit innerhalb der angegebenen Sommerzeit liegen.</summary>
        <returns>
          <see langword="true" />, wenn <paramref name="time" /> in <paramref name="daylightTimes" /> liegt, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> Methode bietet die gleiche Funktionalität wie diese Überladung von der <xref:System.TimeZone.IsDaylightSavingTime%2A> Methode. Verwenden Sie nach Möglichkeit die <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="daylightTimes" /> ist <see langword="null" />.</exception>
        <altmember cref="M:System.TimeZoneInfo.IsDaylightSavingTime(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="StandardName">
      <MemberSignature Language="C#" Value="public abstract string StandardName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StandardName" />
      <MemberSignature Language="DocId" Value="P:System.TimeZone.StandardName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property StandardName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ StandardName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StandardName : string" Usage="System.TimeZone.StandardName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Standardzeitzone ab.</summary>
        <value>Der Name der Standardzeitzone.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.TimeZone.StandardName%2A> Eigenschaft entspricht der <xref:System.TimeZoneInfo.StandardName%2A?displayProperty=nameWithType> Eigenschaft. Verwenden Sie nach Möglichkeit die <xref:System.TimeZoneInfo.StandardName%2A?displayProperty=nameWithType> Eigenschaft.  
  
   
  
## Examples  
 Das folgende Beispiel-Verweise und zeigt die `StandardName` Eigenschaft der aktuellen Zeitzone.  
  
 [!code-cpp[System.TimeZone.Class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeZone.Class/CPP/tzclass.cpp#1)]
 [!code-csharp[System.TimeZone.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone.Class/CS/tzclass.cs#1)]
 [!code-vb[System.TimeZone.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone.Class/VB/tzclass.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Es wird versucht, diese Eigenschaft auf <see langword="null" /> festzulegen.</exception>
        <altmember cref="P:System.TimeZoneInfo.StandardName" />
      </Docs>
    </Member>
    <Member MemberName="ToLocalTime">
      <MemberSignature Language="C#" Value="public virtual DateTime ToLocalTime (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime ToLocalTime(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZone.ToLocalTime(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToLocalTime (time As DateTime) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime ToLocalTime(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member ToLocalTime : DateTime -&gt; DateTime&#xA;override this.ToLocalTime : DateTime -&gt; DateTime" Usage="timeZone.ToLocalTime time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">Eine UTC-Zeit (Coordinated Universal Time).</param>
        <summary>Gibt die Ortszeit zurück, die einem angegebenen Datums- und Zeitwert entspricht.</summary>
        <returns>Ein <see cref="T:System.DateTime" />-Objekt, dessen Wert die <paramref name="time" /> entsprechende Ortszeit ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die folgende Tabelle zeigt die Beziehung zwischen der `time` Parameter und die <xref:System.DateTime> von dieser Methode zurückgegebene Wert.  
  
|`time`-Parameter|Verhalten|Rückgabewert|  
|----------------------|--------------|------------------|  
|Eine Zeit (Coordinated Universal Time, UTC) (<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>).|Konvertiert die Zeit von UTC in die lokale Zeit.|Ein <xref:System.DateTime>-Objekt, dessen Wert die `time` entsprechende Ortszeit ist.|  
|Eine lokale Zeit (<xref:System.DateTimeKind.Local?displayProperty=nameWithType>).|Keine Konvertierung erforderlich ist.|Die gleiche <xref:System.DateTime> durch dargestellte Wert den `time` Parameter.|  
|Eine unspezifische Uhrzeit (<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>).|Wird davon ausgegangen, dass die Zeit UTC ist, und von der UTC in die Ortszeit konvertiert.|Ein <xref:System.DateTime>-Objekt, dessen Wert die `time` entsprechende Ortszeit ist.|  
  
 Wenn die lokale Zeitzone die Sommerzeit berücksichtigt <xref:System.TimeZone.ToLocalTime%2A> wendet auf die aktuelle Anpassungsregel `time` bei der Konvertierung zu interpretieren.  
  
> [!NOTE]
>  Die <xref:System.TimeZone.ToLocalTime%2A> Methode erkennt nur die aktuellen Sommerzeit Anpassungsregel für die lokale Zeitzone. Daher ist es garantiert genau Zurückgeben der lokalen Zeit für eine bestimmte UTC-Zeit nur während des Zeitraums, in dem die jüngste Anpassungsregel wirksam wird. Es kann falsche Ergebnisse zurückgegeben, wenn `time` ist eine historische Datums- und Uhrzeitwert, der gemäß einer vorherigen Anpassungsregel wurde.  
  
 Die <xref:System.TimeZone.ToLocalTime%2A> Methode entspricht der <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A?displayProperty=nameWithType> -Methode mit der `destinationTimeZone` Parametersatz zu <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>. Verwenden Sie nach Möglichkeit die <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A?displayProperty=nameWithType> Methode.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Obwohl es nicht erforderlich ist, sollte in den meisten Fällen abgeleitete Klassen, die unter .NET Framework, Version 2.0 die Standardimplementierung dieser Methode außer Kraft setzen. In den .NET Framework-Versionen 1.0 und 1.1 die <see langword="ToLocalTime" /> Methode mit dem Namen der <see cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" /> Methode und für die Sommerzeit angepasst werden, bei der Rückgabe der lokalen Zeit. Ab .NET Framework 2.0 wird das Verhalten der Standardimplementierung hängt jedoch die <see cref="P:System.DateTime.Kind" /> Eigenschaft der <paramref name="time" /> Parameter. Wenn der Wert <see cref="F:System.DateTimeKind.Local" />, gibt diese Methode <paramref name="time" /> unverändert. Wenn der Wert entweder <see cref="F:System.DateTimeKind.Utc" /> oder <see cref="F:System.DateTimeKind.Unspecified" />, diese Methode setzt voraus <paramref name="time" /> UTC ist, und konvertiert sie in der lokalen Systemzeit ohne Aufrufen der <see cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" /> Methode.  Der folgende Code bietet ein einfaches Überschreiben der standardmäßigen Implementierung der <see langword="ToLocalTime" /> Methode. In diesem Code wird die <see langword="internalTimeZone" /> Variable darstellt, eine private Instanz von der <see langword="TimeZone" /> Klasse: [! Code-Csharp[System.TimeZone.ToLocalTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone.ToLocalTime/CS/TimeZone_ToLocalTime.cs#1)] [! Code – Vb[System.TimeZone.ToLocalTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone.ToLocalTime/VB/TimeZone_ToLocalTime.vb#1)]</para>
        </block>
        <altmember cref="M:System.TimeZoneInfo.ConvertTimeFromUtc(System.DateTime,System.TimeZoneInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToUniversalTime">
      <MemberSignature Language="C#" Value="public virtual DateTime ToUniversalTime (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime ToUniversalTime(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZone.ToUniversalTime(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToUniversalTime (time As DateTime) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime ToUniversalTime(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member ToUniversalTime : DateTime -&gt; DateTime&#xA;override this.ToUniversalTime : DateTime -&gt; DateTime" Usage="timeZone.ToUniversalTime time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">Ein Datum und eine Uhrzeit.</param>
        <summary>Gibt die Coordinated Universal Time (UTC) zurück, die einer angegebenen Zeit entspricht.</summary>
        <returns>Ein <see cref="T:System.DateTime" />-Objekt, dessen Wert die <paramref name="time" /> entsprechende Coordinated Universal Time (UTC) ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die lokale Zeitzone die Sommerzeit berücksichtigt <xref:System.TimeZone.ToUniversalTime%2A> wendet die aktuelle Anpassungsregel, die `time` Parameter an, wenn es sich bei der Konvertierung zu interpretieren.  
  
> [!NOTE]
>  Die <xref:System.TimeZone.ToUniversalTime%2A> Methode erkennt nur die aktuellen Sommerzeit Anpassungsregel für die lokale Zeitzone. Daher ist es garantiert genau Zurückgeben der Coordinated Universal Time (UTC) für eine bestimmte Ortszeit nur während des Zeitraums, in dem die jüngste Anpassungsregel wirksam wird. Es kann falsche Ergebnisse zurückgegeben, wenn `time` ist eine historische Datums- und Uhrzeitwert, der gemäß einer vorherigen Anpassungsregel wurde.  
  
 Wenn die `time` -Parameter ist eine mehrdeutige Zeit, die Methode wird davon ausgegangen, dass es sich um eine Standardzeit ist. (Eine mehrdeutige Zeit ist, die entweder auf eine Standardzeit oder eine Sommerzeit in die lokale Zeitzone zugeordnet werden können.) Wenn `time` ist eine ungültige Zeit, zieht die Methode einfach die lokale Zeit von der lokalen Zeitzone UTC-offset zur UTC zurück. (Eine ungültige Zeit ist, die aufgrund der Anwendung von Anpassungsregeln für die Sommerzeit nicht vorhanden ist.)  
  
 Da `time` interpretiert in Bezug auf die aktuelle Zeitzone auf dem aktuellen System, das Datum und Uhrzeit, die von dieser Methode zurückgegebene können abweichen, wenn eine Anwendung mit verschiedenen Zeitzonen auf unterschiedlichen Computern oder auf dem gleichen Computer ausgeführt wird. Verwenden Sie für Fälle, in dem ein Datum und Uhrzeit-Wert muss eine einzelne, eindeutige Zeitpunkt darstellen, eine <xref:System.DateTimeOffset> Wert die Ortszeit darstellt.  
  
 Die <xref:System.TimeZone.ToUniversalTime%2A> Methode entspricht der <xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%29?displayProperty=nameWithType> methodenüberladung mit einem <xref:System.DateTime> Parameter, deren <xref:System.DateTime.Kind%2A> Eigenschaft ist nicht gleich <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>. Verwenden Sie nach Möglichkeit die <xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%29?displayProperty=nameWithType> -methodenüberladung.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime)" />
      </Docs>
    </Member>
  </Members>
</Type>