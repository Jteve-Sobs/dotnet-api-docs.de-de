<Type Name="Func&lt;T1,T2,T3,TResult&gt;" FullName="System.Func&lt;T1,T2,T3,TResult&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7543433026ffb3a2fc68c3fa07ebf09409640c6b" /><Meta Name="ms.sourcegitcommit" Value="8b09499854b5b7b909802126edc1f1fca0054c10" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="02/01/2020" /><Meta Name="ms.locfileid" Value="76956862" /></Metadata><TypeSignature Language="C#" Value="public delegate TResult Func&lt;in T1,in T2,in T3,out TResult&gt;(T1 arg1, T2 arg2, T3 arg3);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Func`4&lt;- T1, - T2, - T3, + TResult&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Func`4" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function Func(Of In T1, In T2, In T3, Out TResult)(arg1 As T1, arg2 As T2, arg3 As T3) As TResult " />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2, typename T3, typename TResult&gt;&#xA;public delegate TResult Func(T1 arg1, T2 arg2, T3 arg3);" />
  <TypeSignature Language="F#" Value="type Func&lt;'T1, 'T2, 'T3, 'Result&gt; = delegate of 'T1 * 'T2 * 'T3 -&gt; 'Result" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T2">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T3">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TResult">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Core, Version=2.0.5.0, Culture=Neutral, PublicKeyToken=7cec85d7bea7798e")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Core, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="arg1" Type="T1" />
    <Parameter Name="arg2" Type="T2" />
    <Parameter Name="arg3" Type="T3" />
  </Parameters>
  <ReturnValue>
    <ReturnType>TResult</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="T1"><span data-ttu-id="91d82-101">Der Typ des ersten Parameters der Methode, die dieser Delegat kapselt.</span><span class="sxs-lookup"><span data-stu-id="91d82-101">The type of the first parameter of the method that this delegate encapsulates.</span></span></typeparam>
    <typeparam name="T2"><span data-ttu-id="91d82-102">Der Typ des zweiten Parameters der Methode, die dieser Delegat kapselt.</span><span class="sxs-lookup"><span data-stu-id="91d82-102">The type of the second parameter of the method that this delegate encapsulates.</span></span></typeparam>
    <typeparam name="T3"><span data-ttu-id="91d82-103">Der Typ des dritten Parameters der Methode, die dieser Delegat kapselt.</span><span class="sxs-lookup"><span data-stu-id="91d82-103">The type of the third parameter of the method that this delegate encapsulates.</span></span></typeparam>
    <typeparam name="TResult"><span data-ttu-id="91d82-104">Der Typ des Rückgabewerts der Methode, die dieser Delegat kapselt.</span><span class="sxs-lookup"><span data-stu-id="91d82-104">The type of the return value of the method that this delegate encapsulates.</span></span></typeparam>
    <param name="arg1"><span data-ttu-id="91d82-105">Der erste Parameter der Methode, die dieser Delegat kapselt.</span><span class="sxs-lookup"><span data-stu-id="91d82-105">The first parameter of the method that this delegate encapsulates.</span></span></param>
    <param name="arg2"><span data-ttu-id="91d82-106">Der zweite Parameter der Methode, die dieser Delegat kapselt.</span><span class="sxs-lookup"><span data-stu-id="91d82-106">The second parameter of the method that this delegate encapsulates.</span></span></param>
    <param name="arg3"><span data-ttu-id="91d82-107">Der dritte Parameter der Methode, die dieser Delegat kapselt.</span><span class="sxs-lookup"><span data-stu-id="91d82-107">The third parameter of the method that this delegate encapsulates.</span></span></param>
    <summary><span data-ttu-id="91d82-108">Kapselt eine Methode, die über drei Parameter verfügt und einen Wert des Typs zurückgibt, der durch den <typeparamref name="TResult" />-Parameter angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="91d82-108">Encapsulates a method that has three parameters and returns a value of the type specified by the <typeparamref name="TResult" /> parameter.</span></span></summary>
    <returns><span data-ttu-id="91d82-109">Der Rückgabewert der Methode, die dieser Delegat kapselt.</span><span class="sxs-lookup"><span data-stu-id="91d82-109">The return value of the method that this delegate encapsulates.</span></span></returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91d82-110">Mit diesem Delegaten können Sie eine Methode darstellen, die als Parameter übergeben werden kann, ohne explizit einen benutzerdefinierten Delegaten zu deklarieren.</span><span class="sxs-lookup"><span data-stu-id="91d82-110">You can use this delegate to represent a method that can be passed as a parameter without explicitly declaring a custom delegate.</span></span> <span data-ttu-id="91d82-111">Die gekapselte Methode muss der Methoden Signatur entsprechen, die von diesem Delegaten definiert wird.</span><span class="sxs-lookup"><span data-stu-id="91d82-111">The encapsulated method must correspond to the method signature that is defined by this delegate.</span></span> <span data-ttu-id="91d82-112">Dies bedeutet, dass die gekapselte Methode über drei Parameter verfügen muss, die jeweils als Wert an Sie übermittelt werden, und dass ein Wert zurückgegeben werden muss.</span><span class="sxs-lookup"><span data-stu-id="91d82-112">This means that the encapsulated method must have three parameters, each of which is passed to it by value, and that it must return a value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="91d82-113">Um auf eine Methode zu verweisen, die über drei Parameter verfügt und `void` (oder in Visual Basic als `Sub` und nicht als `Function`) zurückgibt, verwenden Sie stattdessen den generischen <xref:System.Action%603> Delegaten.</span><span class="sxs-lookup"><span data-stu-id="91d82-113">To reference a method that has three parameters and returns `void` (or in Visual Basic, that is declared as a `Sub` rather than as a `Function`), use the generic <xref:System.Action%603> delegate instead.</span></span>  
  
 <span data-ttu-id="91d82-114">Wenn Sie den <xref:System.Func%604> Delegaten verwenden, müssen Sie nicht explizit einen Delegaten definieren, der eine Methode mit drei Parametern kapselt.</span><span class="sxs-lookup"><span data-stu-id="91d82-114">When you use the <xref:System.Func%604> delegate, you do not have to explicitly define a delegate that encapsulates a method with three parameters.</span></span> <span data-ttu-id="91d82-115">Der folgende Code deklariert z. b. explizit einen generischen Delegaten mit dem Namen `ParseNumber` und weist der Delegatinstanz einen Verweis auf die <xref:System.Int32.Parse%2A>-Methode zu.</span><span class="sxs-lookup"><span data-stu-id="91d82-115">For example, the following code explicitly declares a generic delegate named `ParseNumber` and assigns a reference to the <xref:System.Int32.Parse%2A> method to its delegate instance.</span></span>  
  
 [!code-csharp[System.Func~4#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Func~4/cs/Delegate.cs#1)]
 [!code-vb[System.Func~4#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Func~4/vb/Delegate.vb#1)]  
  
 <span data-ttu-id="91d82-116">Im folgenden Beispiel wird dieser Code vereinfacht, indem der <xref:System.Func%604> Delegat instanziiert wird, anstatt explizit einen neuen Delegaten zu definieren und ihm eine benannte Methode zuzuweisen.</span><span class="sxs-lookup"><span data-stu-id="91d82-116">The following example simplifies this code by instantiating the <xref:System.Func%604> delegate instead of explicitly defining a new delegate and assigning a named method to it.</span></span>  
  
 [!code-csharp[System.Func~4#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Func~4/cs/Func4.cs#2)]
 [!code-vb[System.Func~4#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Func~4/vb/Func4.vb#2)]  
  
 <span data-ttu-id="91d82-117">Sie können den <xref:System.Func%604> Delegaten mit anonymen Methoden in C#verwenden, wie im folgenden Beispiel veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="91d82-117">You can use the <xref:System.Func%604> delegate with anonymous methods in C#, as the following example illustrates.</span></span> <span data-ttu-id="91d82-118">(Eine Einführung zu anonymen Methoden finden Sie unter [Anonyme Methoden](~/docs/csharp/programming-guide/statements-expressions-operators/anonymous-methods.md).)</span><span class="sxs-lookup"><span data-stu-id="91d82-118">(For an introduction to anonymous methods, see [Anonymous Methods](~/docs/csharp/programming-guide/statements-expressions-operators/anonymous-methods.md).)</span></span>  
  
 [!code-csharp[System.Func~4#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Func~4/cs/Anon.cs#3)]  
  
 <span data-ttu-id="91d82-119">Sie können einem <xref:System.Func%604> Delegaten auch einen Lambda-Ausdruck zuweisen, wie im folgenden Beispiel veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="91d82-119">You can also assign a lambda expression to a <xref:System.Func%604> delegate, as the following example illustrates.</span></span> <span data-ttu-id="91d82-120">(Eine Einführung in Lambda-Ausdrücke finden Sie unter [Lambda](~/docs/visual-basic/programming-guide/language-features/procedures/lambda-expressions.md) -Ausdrücke und [Lambda](~/docs/csharp/programming-guide/statements-expressions-operators/lambda-expressions.md)-Ausdrücke.)</span><span class="sxs-lookup"><span data-stu-id="91d82-120">(For an introduction to lambda expressions, see [Lambda Expressions](~/docs/visual-basic/programming-guide/language-features/procedures/lambda-expressions.md) and [Lambda Expressions](~/docs/csharp/programming-guide/statements-expressions-operators/lambda-expressions.md).)</span></span>  
  
 [!code-csharp[System.Func~4#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Func~4/cs/Lambda.cs#4)]
 [!code-vb[System.Func~4#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Func~4/vb/Lambda.vb#4)]  
  
 <span data-ttu-id="91d82-121">Der zugrunde liegende Typ eines Lambda-Ausdrucks ist einer der generischen `Func` Delegaten.</span><span class="sxs-lookup"><span data-stu-id="91d82-121">The underlying type of a lambda expression is one of the generic `Func` delegates.</span></span> <span data-ttu-id="91d82-122">Dadurch ist es möglich, einen Lambda-Ausdruck als Parameter zu übergeben, ohne ihn explizit einem Delegaten zuzuweisen.</span><span class="sxs-lookup"><span data-stu-id="91d82-122">This makes it possible to pass a lambda expression as a parameter without explicitly assigning it to a delegate.</span></span> <span data-ttu-id="91d82-123">Insbesondere weil viele Methoden von Typen im <xref:System.Linq>-Namespace über `Func` Parameter verfügen, können Sie diese Methoden einem Lambda-Ausdruck übergeben, ohne explizit einen `Func` Delegaten zu instanziieren.</span><span class="sxs-lookup"><span data-stu-id="91d82-123">In particular, because many methods of types in the <xref:System.Linq> namespace have `Func` parameters, you can pass these methods a lambda expression without explicitly instantiating a `Func` delegate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91d82-124">Im folgenden Beispiel wird veranschaulicht, wie ein <xref:System.Func%603> Delegat deklariert und verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="91d82-124">The following example demonstrates how to declare and use a <xref:System.Func%603> delegate.</span></span> <span data-ttu-id="91d82-125">In diesem Beispiel wird eine <xref:System.Func%603> Variable deklariert und ihr ein Lambda-Ausdruck zugewiesen, der einen <xref:System.String> Wert und einen <xref:System.Int32> Wert als Parameter annimmt.</span><span class="sxs-lookup"><span data-stu-id="91d82-125">This example declares a <xref:System.Func%603> variable and assigns it a lambda expression that takes a <xref:System.String> value and an <xref:System.Int32> value as parameters.</span></span> <span data-ttu-id="91d82-126">Der Lambda-Ausdruck gibt `true` zurück, wenn die Länge des <xref:System.String>-Parameters gleich dem Wert des <xref:System.Int32>-Parameters ist.</span><span class="sxs-lookup"><span data-stu-id="91d82-126">The lambda expression returns `true` if the length of the <xref:System.String> parameter is equal to the value of the <xref:System.Int32> parameter.</span></span> <span data-ttu-id="91d82-127">Der Delegat, der diese Methode kapselt, wird anschließend in einer Abfrage verwendet, um Zeichen folgen in einem Array von Zeichen folgen zu filtern.</span><span class="sxs-lookup"><span data-stu-id="91d82-127">The delegate that encapsulates this method is subsequently used in a query to filter strings in an array of strings.</span></span>  
  
 [!code-csharp[System.Func~3#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Func~3/cs/Example.cs#5)]
 [!code-vb[System.Func~3#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Func~3/vb/Example.vb#5)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/csharp/programming-guide/statements-expressions-operators/lambda-expressions.md"><span data-ttu-id="91d82-128">Lambda-Ausdrücke (C#-Programmierhandbuch)</span><span class="sxs-lookup"><span data-stu-id="91d82-128">Lambda Expressions (C# Programming Guide)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/lambda-expressions.md"><span data-ttu-id="91d82-129">Lambda-Ausdrücke</span><span class="sxs-lookup"><span data-stu-id="91d82-129">Lambda Expressions</span></span></related>
    <related type="Article" href="~/docs/csharp/programming-guide/delegates/index.md"><span data-ttu-id="91d82-130">Delegaten (C#-Programmierhandbuch)</span><span class="sxs-lookup"><span data-stu-id="91d82-130">Delegates (C# Programming Guide)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/delegates/index.md"><span data-ttu-id="91d82-131">Delegaten in Visual Basic</span><span class="sxs-lookup"><span data-stu-id="91d82-131">Delegates in Visual Basic</span></span></related>
  </Docs>
</Type>
