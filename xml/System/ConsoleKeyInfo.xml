<Type Name="ConsoleKeyInfo" FullName="System.ConsoleKeyInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="454af723da87890b036122a8ceb1417628a811ae" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75173349" /></Metadata><TypeSignature Language="C#" Value="public struct ConsoleKeyInfo" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit ConsoleKeyInfo extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.ConsoleKeyInfo" />
  <TypeSignature Language="VB.NET" Value="Public Structure ConsoleKeyInfo" />
  <TypeSignature Language="C++ CLI" Value="public value class ConsoleKeyInfo" />
  <TypeSignature Language="F#" Value="type ConsoleKeyInfo = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Console</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Beschreibt die Konsolentaste, die gedrückt wurde, einschließlich des durch die Konsolentaste dargestellten Zeichens und des Zustands der Modifizierertasten UMSCHALTTASTE, ALT und STRG.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.ConsoleKeyInfo> Typ sollte nicht von Benutzern erstellt werden. Stattdessen wird Sie als Reaktion auf den Aufruf der <xref:System.Console.ReadKey%2A?displayProperty=nameWithType>-Methode an den Benutzer zurückgegeben.  
  
 Das <xref:System.ConsoleKeyInfo>-Objekt beschreibt die <xref:System.ConsoleKey> Konstante und ggf. das Unicode-Zeichen, die der gedrückten Konsolen Taste entsprechen. Das <xref:System.ConsoleKeyInfo>-Objekt beschreibt außerdem in einer bitweisen Kombination von <xref:System.ConsoleModifiers> Werten, ob eine oder mehrere UMSCHALT-, alt-oder STRG-Modifizierertasten gleichzeitig mit der Konsolen Taste gedrückt wurden.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie ein <xref:System.ConsoleKeyInfo>-Objekt in einem Lesevorgang verwendet wird.  
  
 [!code-cpp[console.readkey1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.readkey1/CPP/rk.cpp#1)]
 [!code-csharp[console.readkey1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.readkey1/CS/rk.cs#1)]
 [!code-vb[console.readkey1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.readkey1/VB/rk.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ConsoleModifiers" />
    <altmember cref="T:System.ConsoleKey" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConsoleKeyInfo (char keyChar, ConsoleKey key, bool shift, bool alt, bool control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char keyChar, valuetype System.ConsoleKey key, bool shift, bool alt, bool control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ConsoleKeyInfo.#ctor(System.Char,System.ConsoleKey,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keyChar As Char, key As ConsoleKey, shift As Boolean, alt As Boolean, control As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConsoleKeyInfo(char keyChar, ConsoleKey key, bool shift, bool alt, bool control);" />
      <MemberSignature Language="F#" Value="new ConsoleKeyInfo : char * ConsoleKey * bool * bool * bool -&gt; ConsoleKeyInfo" Usage="new System.ConsoleKeyInfo (keyChar, key, shift, alt, control)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keyChar" Type="System.Char" />
        <Parameter Name="key" Type="System.ConsoleKey" />
        <Parameter Name="shift" Type="System.Boolean" />
        <Parameter Name="alt" Type="System.Boolean" />
        <Parameter Name="control" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="keyChar">Das Unicode-Zeichen, das dem <paramref name="key" />-Parameter entspricht.</param>
        <param name="key">Der Konsolenschlüssel, der dem <paramref name="keyChar" />-Parameter entspricht.</param>
        <param name="shift"><see langword="true" />, wenn die UMSCHALTTASTE gedrückt wurde, andernfalls <see langword="false" />.</param>
        <param name="alt"><see langword="true" />, wenn die ALT-TASTE gedrückt wurde, andernfalls <see langword="false" />.</param>
        <param name="control"><see langword="true" />, wenn die STRG-TASTE gedrückt wurde, andernfalls <see langword="false" />.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.ConsoleKeyInfo" />-Struktur mit dem angegebenen Zeichen, der Konsolentaste und den Modifizierertasten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Typ ist nicht dafür vorgesehen, von Benutzern erstellt zu werden. Stattdessen wird Sie als Reaktion auf den Aufruf der <xref:System.Console.ReadKey%2A?displayProperty=nameWithType>-Methode an den Benutzer zurückgegeben.  
  
 Der <xref:System.ConsoleKeyInfo> Typ gibt nicht an, ob die Modifizierertaste Links oder rechts gedrückt wurde.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der numerische Wert des <paramref name="key" />-Parameters ist kleiner als 0 (null) oder größer als 255.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob ein Objekt oder das angegebene <see cref="T:System.ConsoleKeyInfo" />-Objekt dem aktuellen <see cref="T:System.ConsoleKeyInfo" />-Objekt entsprechen.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (ConsoleKeyInfo obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.ConsoleKeyInfo obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ConsoleKeyInfo.Equals(System.ConsoleKeyInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As ConsoleKeyInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(ConsoleKeyInfo obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : ConsoleKeyInfo -&gt; bool" Usage="consoleKeyInfo.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.ConsoleKeyInfo" />
      </Parameters>
      <Docs>
        <param name="obj">Ein <see cref="T:System.ConsoleKeyInfo" />-Objekt, das mit dem aktuellen Objekt verglichen werden soll.</param>
        <summary>Ruft einen Wert ab, der angibt, ob das angegebene <see cref="T:System.ConsoleKeyInfo" />-Objekt dem aktuellen <see cref="T:System.ConsoleKeyInfo" />-Objekt entspricht.</summary>
        <returns><see langword="true" />, wenn <paramref name="obj" /> gleich dem aktuellen <see cref="T:System.ConsoleKeyInfo" />-Objekt ist; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwei <xref:System.ConsoleKeyInfo> Objekte sind gleich, wenn ihre entsprechenden <xref:System.ConsoleKeyInfo.KeyChar%2A>-, <xref:System.ConsoleKeyInfo.Key%2A>-und <xref:System.ConsoleKeyInfo.Modifiers%2A>-Eigenschaften gleich sind.  
  
 Die <xref:System.ConsoleKeyInfo.Equals%2A>-Methode führt eine etwas bessere Leistung als die <xref:System.ConsoleKeyInfo.Equals%28System.Object%29?displayProperty=nameWithType>-Methode aus, da `obj` nicht in ein-Objekt konvertiert werden muss.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ConsoleKeyInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="consoleKeyInfo.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.ConsoleKeyInfo" />-Objekt, das mit dem aktuellen Objekt verglichen werden soll.</param>
        <summary>Ruft einen Wert ab, der angibt, ob das angegebene Objekt und das aktuelle <see cref="T:System.ConsoleKeyInfo" />-Objekt gleich sind.</summary>
        <returns><see langword="true" />, wenn <paramref name="value" /> ein <see cref="T:System.ConsoleKeyInfo" />-Objekt und gleich dem aktuellen <see cref="T:System.ConsoleKeyInfo" />-Objekt ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwei <xref:System.ConsoleKeyInfo> Objekte sind gleich, wenn ihre entsprechenden <xref:System.ConsoleKeyInfo.KeyChar%2A>-, <xref:System.ConsoleKeyInfo.Key%2A>-und <xref:System.ConsoleKeyInfo.Modifiers%2A>-Eigenschaften gleich sind.  
  
   
  
## Examples  
 Das folgende Beispiel veranschaulicht die <xref:System.ConsoleKeyInfo.Equals%2A> Methode.  
  
 [!code-cpp[system.ConsoleKeyInfo.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.ConsoleKeyInfo.Equals/cpp/consolekeyinfo.equals.cpp#1)]
 [!code-csharp[system.ConsoleKeyInfo.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ConsoleKeyInfo.Equals/cs/equals.cs#1)]
 [!code-vb[system.ConsoleKeyInfo.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ConsoleKeyInfo.Equals/vb/equals.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ConsoleKeyInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="consoleKeyInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt den Hashcode für das aktuelle <see cref="T:System.ConsoleKeyInfo" />-Objekt zurück.</summary>
        <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der von der <xref:System.ConsoleKeyInfo.GetHashCode%2A>-Methode zurückgegebene Wert ist nicht geeignet, um ein <xref:System.ConsoleKeyInfo> Objekt von einem anderen zu unterscheiden. Wenn Ihre Anwendung einen eindeutigen Hashcode benötigt, überschreiben Sie die <xref:System.ConsoleKeyInfo.GetHashCode%2A>-Methode mit ihrer eigenen Methode.  
  
   
  
## Examples  
 Das folgende Beispiel veranschaulicht die <xref:System.ConsoleKeyInfo.GetHashCode%2A> Methode.  
  
 [!code-cpp[System.ConsoleKeyInfo.GetHashCode#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.ConsoleKeyInfo.GetHashcode/cpp/hash.cpp#1)]
 [!code-csharp[System.ConsoleKeyInfo.GetHashCode#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ConsoleKeyInfo.GetHashcode/cs/hash.cs#1)]
 [!code-vb[System.ConsoleKeyInfo.GetHashCode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ConsoleKeyInfo.GetHashcode/vb/hash.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public ConsoleKey Key { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ConsoleKey Key" />
      <MemberSignature Language="DocId" Value="P:System.ConsoleKeyInfo.Key" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Key As ConsoleKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ConsoleKey Key { ConsoleKey get(); };" />
      <MemberSignature Language="F#" Value="member this.Key : ConsoleKey" Usage="System.ConsoleKeyInfo.Key" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ConsoleKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Konsolenschlüssel ab, der vom aktuellen <see cref="T:System.ConsoleKeyInfo" />-Objekt dargestellt wird.</summary>
        <value>Ein Wert, der den gedrückten Konsolenschlüssel angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Beispiel veranschaulicht die Verwendung einer <xref:System.ConsoleKeyInfo.Key%2A>-Eigenschaft in einem Lesevorgang.  
  
 [!code-cpp[console.readkey1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.readkey1/CPP/rk.cpp#1)]
 [!code-csharp[console.readkey1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.readkey1/CS/rk.cs#1)]
 [!code-vb[console.readkey1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.readkey1/VB/rk.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyChar">
      <MemberSignature Language="C#" Value="public char KeyChar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char KeyChar" />
      <MemberSignature Language="DocId" Value="P:System.ConsoleKeyInfo.KeyChar" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char KeyChar { char get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyChar : char" Usage="System.ConsoleKeyInfo.KeyChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Unicode-Zeichen ab, das vom aktuellen <see cref="T:System.ConsoleKeyInfo" />-Objekt dargestellt wird.</summary>
        <value>Ein Objekt, das dem Konsolenschlüssel entspricht, der durch das aktuelle <see cref="T:System.ConsoleKeyInfo" />-Objekt dargestellt wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die gedrückte Taste keinem Unicode-Zeichen zugeordnet ist (z. b. wenn der Benutzer die **F1** -Taste oder die **Start** Taste drückt), lautet der Wert der <xref:System.ConsoleKeyInfo.KeyChar%2A>-Eigenschaft \U0000.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.ConsoleKeyInfo.KeyChar%2A>-Eigenschaft verwendet, um die vom Benutzer eingegebenen Zeichen in eine Zeichenfolge einzufügen. Im Beispiel werden andere Sonderschlüssel als **Enter**, **ESC**und **Backspace**ignoriert.  
  
 [!code-csharp[System.ConsoleKeyInfo.KeyChar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.consolekeyinfo.keychar/cs/keychar1.cs#1)]
 [!code-vb[System.ConsoleKeyInfo.KeyChar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.consolekeyinfo.keychar/vb/keychar1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public ConsoleModifiers Modifiers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ConsoleModifiers Modifiers" />
      <MemberSignature Language="DocId" Value="P:System.ConsoleKeyInfo.Modifiers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Modifiers As ConsoleModifiers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ConsoleModifiers Modifiers { ConsoleModifiers get(); };" />
      <MemberSignature Language="F#" Value="member this.Modifiers : ConsoleModifiers" Usage="System.ConsoleKeyInfo.Modifiers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ConsoleModifiers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine bitweise Kombination von <see cref="T:System.ConsoleModifiers" />-Werten ab, die eine oder mehrere Modifizierertasten angibt, die gleichzeitig mit der Konsolentaste gedrückt wurden.</summary>
        <value>Eine bitweise Kombination der Enumerationswerte. Es ist kein Standardwert vorhanden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Beispiel veranschaulicht die Verwendung einer <xref:System.ConsoleKeyInfo.Modifiers%2A>-Eigenschaft in einem Lesevorgang.  
  
 [!code-cpp[console.readkey1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.readkey1/CPP/rk.cpp#1)]
 [!code-csharp[console.readkey1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.readkey1/CS/rk.cs#1)]
 [!code-vb[console.readkey1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.readkey1/VB/rk.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (ConsoleKeyInfo a, ConsoleKeyInfo b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.ConsoleKeyInfo a, valuetype System.ConsoleKeyInfo b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ConsoleKeyInfo.op_Equality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (a As ConsoleKeyInfo, b As ConsoleKeyInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(ConsoleKeyInfo a, ConsoleKeyInfo b);" />
      <MemberSignature Language="F#" Value="static member ( = ) : ConsoleKeyInfo * ConsoleKeyInfo -&gt; bool" Usage="a = b" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.ConsoleKeyInfo" />
        <Parameter Name="b" Type="System.ConsoleKeyInfo" />
      </Parameters>
      <Docs>
        <param name="a">Das erste zu vergleichende Objekt.</param>
        <param name="b">Das zweite zu vergleichende Objekt.</param>
        <summary>Gibt an, ob die angegebenen <see cref="T:System.ConsoleKeyInfo" />-Objekte gleich sind.</summary>
        <returns><see langword="true" />, wenn <paramref name="a" /> und <paramref name="b" /> gleich sind, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwei <xref:System.ConsoleKeyInfo> Objekte sind gleich, wenn ihre entsprechenden <xref:System.ConsoleKeyInfo.KeyChar%2A>-, <xref:System.ConsoleKeyInfo.Key%2A>-und <xref:System.ConsoleKeyInfo.Modifiers%2A>-Eigenschaften gleich sind.  
  
 Die äquivalente Methode für diesen Operator ist <xref:System.ConsoleKeyInfo.Equals%28System.ConsoleKeyInfo%29?displayProperty=nameWithType>.]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (ConsoleKeyInfo a, ConsoleKeyInfo b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.ConsoleKeyInfo a, valuetype System.ConsoleKeyInfo b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ConsoleKeyInfo.op_Inequality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (a As ConsoleKeyInfo, b As ConsoleKeyInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(ConsoleKeyInfo a, ConsoleKeyInfo b);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : ConsoleKeyInfo * ConsoleKeyInfo -&gt; bool" Usage="System.ConsoleKeyInfo.op_Inequality (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.ConsoleKeyInfo" />
        <Parameter Name="b" Type="System.ConsoleKeyInfo" />
      </Parameters>
      <Docs>
        <param name="a">Das erste zu vergleichende Objekt.</param>
        <param name="b">Das zweite zu vergleichende Objekt.</param>
        <summary>Gibt an, ob die angegebenen <see cref="T:System.ConsoleKeyInfo" />-Objekte ungleich sind.</summary>
        <returns><see langword="true" />, wenn <paramref name="a" /> und <paramref name="b" /> ungleich sind, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwei <xref:System.ConsoleKeyInfo> Objekte sind gleich, wenn ihre entsprechenden <xref:System.ConsoleKeyInfo.KeyChar%2A>-, <xref:System.ConsoleKeyInfo.Key%2A>-und <xref:System.ConsoleKeyInfo.Modifiers%2A>-Eigenschaften gleich sind.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
