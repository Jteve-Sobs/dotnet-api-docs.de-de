<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ICustomFormatter.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56002c7bffa27e626bfd04916c139d411974b86fc.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6002c7bffa27e626bfd04916c139d411974b86fc</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ICustomFormatter">
          <source>Defines a method that supports custom formatting of the value of an object.</source>
          <target state="translated">Definiert eine Methode, die die benutzerdefinierte Formatierung des Werts eines Objekts unterstützt.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICustomFormatter">
          <source>The <ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph> interface includes a single method, <ph id="ph2">&lt;xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph> Schnittstelle enthält eine einzelne Methode <ph id="ph2">&lt;xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICustomFormatter">
          <source>When this interface is implemented by a reference or value type, the <ph id="ph1">&lt;xref:System.ICustomFormatter.Format%2A&gt;</ph> method returns a custom-formatted string representation of an object's value.</source>
          <target state="translated">Wenn diese Schnittstelle, von einem Typ Verweis- oder Werttyp implementiert wird, der <ph id="ph1">&lt;xref:System.ICustomFormatter.Format%2A&gt;</ph> Methode gibt eine benutzerdefinierte formatierte Zeichenfolgendarstellung eines Objektwerts zurück.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICustomFormatter">
          <source>Typically, the <ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph> interface is implemented with the <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> interface to customize the behavior of two .NET Framework composite string formatting methods that include an <ph id="ph3">&lt;xref:System.IFormatProvider&gt;</ph> parameter.</source>
          <target state="translated">In der Regel die <ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph> Schnittstelle wird implementiert, mit der <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> Schnittstelle zum Anpassen des Verhaltens von zwei Methoden für die Formatierung von .NET Framework zusammengesetzte Zeichenfolge, die implizit enthalten eine <ph id="ph3">&lt;xref:System.IFormatProvider&gt;</ph> Parameter.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICustomFormatter">
          <source>Specifically, the <ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph> interface can provide custom formatting of the value of an object passed to the <ph id="ph2">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> methods.</source>
          <target state="translated">Insbesondere die <ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph> -Schnittstelle bereitstellen kann, benutzerdefinierte Formatierung des Werts eines Objekts, das an die <ph id="ph2">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> und <ph id="ph3">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> Methoden.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICustomFormatter">
          <source>Providing a custom representation of an object's value requires that you do the following:</source>
          <target state="translated">Bereitstellen einer benutzerdefinierten Darstellung der Wert eines Objekts erfordert, dass Sie die folgenden Schritte aus:</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICustomFormatter">
          <source>Define a class that implements the <ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph> interface and its single member, the <ph id="ph2">&lt;xref:System.ICustomFormatter.Format%2A&gt;</ph> method.</source>
          <target state="translated">Definieren Sie eine Klasse, die implementiert die <ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph> Schnittstelle und die einzelnen Member, die <ph id="ph2">&lt;xref:System.ICustomFormatter.Format%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICustomFormatter">
          <source>Define a class that implements the <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> interface and its single member, the <ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method.</source>
          <target state="translated">Definieren Sie eine Klasse, die implementiert die <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> Schnittstelle und die einzelnen Member, die <ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICustomFormatter">
          <source>The <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns an instance of your <ph id="ph2">&lt;xref:System.ICustomFormatter&gt;</ph> implementation.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> Methode gibt eine Instanz Ihrer <ph id="ph2">&lt;xref:System.ICustomFormatter&gt;</ph> Implementierung.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICustomFormatter">
          <source>Often, a single class implements both <ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph> and <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>.</source>
          <target state="translated">Häufig eine einzelne Klasse implementiert beide <ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph> und <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICustomFormatter">
          <source>In that case, the class's <ph id="ph1">`GetFormat`</ph> implementation just returns an instance of itself.</source>
          <target state="translated">In diesem Fall wird die Klasse des <ph id="ph1">`GetFormat`</ph> Implementierung gibt nur eine Instanz von sich selbst zurück.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICustomFormatter">
          <source>Pass the <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implementation as the <ph id="ph2">`provider`</ph> argument of the <ph id="ph3">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> method or a comparable method.</source>
          <target state="translated">Übergeben der <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> Implementierung als die <ph id="ph2">`provider`</ph> Argument der <ph id="ph3">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> Methode oder eine vergleichbare Methode.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICustomFormatter">
          <source>The .NET Framework method will then use your custom formatting instead of its own.</source>
          <target state="translated">.NET Framework-Methode verwendet dann die benutzerdefinierte Formatierung anstatt einen eigenen.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICustomFormatter">
          <source>The following example implements <ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph> to allow binary, octal, and hexadecimal formatting of integral values.</source>
          <target state="translated">Das folgende Beispiel implementiert <ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph> um binäre, oktale und hexadezimale Formatierung von ganzzahligen Werten zu ermöglichen.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICustomFormatter">
          <source>In this example, a single class, <ph id="ph1">`IBinaryFormatter`</ph>, implements both <ph id="ph2">&lt;xref:System.ICustomFormatter&gt;</ph> and <ph id="ph3">&lt;xref:System.IFormatProvider&gt;</ph>.</source>
          <target state="translated">In diesem Beispiel wird eine einzelne Klasse <ph id="ph1">`IBinaryFormatter`</ph>, implementiert beide <ph id="ph2">&lt;xref:System.ICustomFormatter&gt;</ph> und <ph id="ph3">&lt;xref:System.IFormatProvider&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICustomFormatter">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType&gt;</ph> method determines whether the <ph id="ph2">`formatType`</ph> parameter represents an <ph id="ph3">&lt;xref:System.ICustomFormatter&gt;</ph> type.</source>
          <target state="translated">Seine <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType&gt;</ph> Methode bestimmt, ob die <ph id="ph2">`formatType`</ph> -Parameter stellt eine <ph id="ph3">&lt;xref:System.ICustomFormatter&gt;</ph> Typ.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICustomFormatter">
          <source>If it does, <ph id="ph1">`BinaryFormatter`</ph> returns an instance of itself; otherwise, it returns <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Wenn dies der Fall, <ph id="ph1">`BinaryFormatter`</ph> gibt eine Instanz von sich selbst; andernfalls wird zurückgegeben <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICustomFormatter">
          <source>Its <ph id="ph1">&lt;xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType&gt;</ph> implementation determines whether the format parameter is one of the three supported format strings ("B" for binary, "O" for octal, and "H" for hexadecimal) and formats the <ph id="ph2">`arg`</ph> parameter appropriately.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType&gt;</ph> Implementierung bestimmt, ob der Formatparameter eine der drei unterstützten Formatzeichenfolgen ist ("B" für Binärdatei, "O" für oktale, und "H" für hexadezimal) und formatiert die <ph id="ph2">`arg`</ph> Parameter entsprechend.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICustomFormatter">
          <source>Otherwise, if <ph id="ph1">`arg`</ph> is not <ph id="ph2">`null`</ph>, it calls the <ph id="ph3">`arg`</ph> parameter's <ph id="ph4">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> implementation, if one exists, or its parameterless <ph id="ph5">`ToString`</ph> method, if one does not.</source>
          <target state="translated">Andernfalls gilt: Wenn <ph id="ph1">`arg`</ph> ist nicht <ph id="ph2">`null`</ph>, ruft er die <ph id="ph3">`arg`</ph> des Parameters <ph id="ph4">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> -Implementierung, sofern vorhanden, oder die parameterlose <ph id="ph5">`ToString`</ph> -Methode, wenn eine nicht der Fall ist.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICustomFormatter">
          <source>If <ph id="ph1">`arg`</ph> is <ph id="ph2">`null`</ph>, the method returns <ph id="ph3">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Wenn <ph id="ph1">`arg`</ph> gleich <ph id="ph2">`null`</ph> ist, gibt die Methode <ph id="ph3">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph> zurück.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICustomFormatter">
          <source><ph id="ph1">`BinaryFormatter`</ph> can then be used to provide custom formatting by passing a <ph id="ph2">`BinaryFormatter`</ph> object as the <ph id="ph3">`provider`</ph> parameter of the <ph id="ph4">&lt;xref:System.String.Format%2A&gt;</ph> method, as the following example shows.</source>
          <target state="translated"><ph id="ph1">`BinaryFormatter`</ph> kann dann verwendet werden, geben Sie die benutzerdefinierte Formatierung durch Übergeben einer <ph id="ph2">`BinaryFormatter`</ph> -Objekts entsprechend der der <ph id="ph3">`provider`</ph> Parameter von der <ph id="ph4">&lt;xref:System.String.Format%2A&gt;</ph> Methode, wie im folgenden Beispiel gezeigt.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICustomFormatter">
          <source>The common language runtime attempts to use your <ph id="ph1">&lt;see cref="T:System.ICustomFormatter" /&gt;</ph> implementation for every format item in a composite format string.</source>
          <target state="translated">Die common Language Runtime versucht, mithilfe der <ph id="ph1">&lt;see cref="T:System.ICustomFormatter" /&gt;</ph> Implementierung für jedes Formatelement in einer kombinierten Formatzeichenfolge.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICustomFormatter">
          <source>As a result, you should expect that your <ph id="ph1">&lt;see cref="T:System.ICustomFormatter" /&gt;</ph> implementation will be called to provide formatting services to objects or values that it is not designed to handle.</source>
          <target state="translated">Daher sollten Sie erwarten, dass Ihre <ph id="ph1">&lt;see cref="T:System.ICustomFormatter" /&gt;</ph> Implementierung wird aufgerufen, um die Formatierung Dienstleistungen auf Objekte oder Werte, die es ist nicht für ausgelegt.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICustomFormatter">
          <source>In these cases, your <ph id="ph1">&lt;see cref="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)" /&gt;</ph> method must call the appropriate formatting method for that object or value.</source>
          <target state="translated">In diesen Fällen die <ph id="ph1">&lt;see cref="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)" /&gt;</ph> Methode muss die entsprechende Formatierungsmethode für das Objekt oder den Wert aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICustomFormatter">
          <source>There are two kinds of <ph id="ph1">&lt;see cref="T:System.ICustomFormatter" /&gt;</ph> implementations: intrinsic and extension.</source>
          <target state="translated">Es gibt zwei Arten von <ph id="ph1">&lt;see cref="T:System.ICustomFormatter" /&gt;</ph> Implementierungen: systeminterne und Erweiterung.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICustomFormatter">
          <source>Intrinsic implementations are implementations that provide custom formatting for an application-defined object.</source>
          <target state="translated">Systeminterne Implementierungen sind Implementierungen, die eine benutzerdefinierte Formatierung für eine Anwendung definiertes Objekt bereitstellen.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICustomFormatter">
          <source>In this case, your implementation should include the following:</source>
          <target state="translated">In diesem Fall sollte die Implementierung der folgenden enthalten:</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICustomFormatter">
          <source>A definition of format strings that define the formatting of the object.</source>
          <target state="translated">Eine Definition von Formatzeichenfolgen, die die Formatierung des Objekts zu definieren.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICustomFormatter">
          <source>Format strings are optional.</source>
          <target state="translated">Formatzeichenfolgen sind optional.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICustomFormatter">
          <source>Typically, a "G" or "g" format string defines the general (or most commonly used) format.</source>
          <target state="translated">Eine Formatzeichenfolge "G" oder "g" wird in der Regel das Format allgemeine ("oder" am häufigsten verwendete) definiert.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICustomFormatter">
          <source>However, you are free to define any format strings that you choose.</source>
          <target state="translated">Allerdings können Sie von Formatzeichenfolgen zu definieren, die Sie auswählen.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICustomFormatter">
          <source>You are also free to decide whether they are case-sensitive or case-insensitive.</source>
          <target state="translated">Sie können auch entscheiden, ob die Groß- und Kleinschreibung beachtet werden.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICustomFormatter">
          <source>A test to ensure that the type of the object passed to your <ph id="ph1">&lt;see cref="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)" /&gt;</ph> method is your application-defined type.</source>
          <target state="translated">Einen Test, um sicherzustellen, dass der Typ des Objekts an übergeben Ihr <ph id="ph1">&lt;see cref="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)" /&gt;</ph> Methode wird von der Anwendung definierte Typ.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICustomFormatter">
          <source>If it is not, you should call the object's <ph id="ph1">&lt;see cref="T:System.IFormattable" /&gt;</ph> implementation, if one exists, or its <ph id="ph2">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method, if it does not.</source>
          <target state="translated">Wenn es nicht der Fall ist, sollten Sie des Objekts aufrufen <ph id="ph1">&lt;see cref="T:System.IFormattable" /&gt;</ph> Implementierung, sofern vorhanden, oder seine <ph id="ph2">&lt;see cref="M:System.Object.ToString" /&gt;</ph> -Methode, wenn dies nicht der Fall.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICustomFormatter">
          <source>You should be prepared to handle any exceptions these method calls might throw.</source>
          <target state="translated">Sie sollten darauf vorbereitet sein, keine Ausnahmen behandeln diese Methodenaufrufe auslösen können.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICustomFormatter">
          <source>Code to handle a null format string, if your implementation supports format strings.</source>
          <target state="translated">Code zum Behandeln von einer null-Zeichenfolge, wenn die Implementierung Formatzeichenfolgen unterstützt.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICustomFormatter">
          <source>The most common approach is to replace a null format string with the general format specifier.</source>
          <target state="translated">Die am häufigsten verwendete Ansatz ist eine null-Zeichenfolge mit dem allgemeinen Formatbezeichner zu ersetzen.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICustomFormatter">
          <source>Code to handle any format strings that your implementation supports.</source>
          <target state="translated">Code zum Behandeln von Formatzeichenfolgen, die Ihre Implementierung unterstützt.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICustomFormatter">
          <source>Code to handle format strings that you do not support.</source>
          <target state="translated">Code zum Behandeln von Formatzeichenfolgen, die Sie nicht unterstützen.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICustomFormatter">
          <source>The most common approach is to throw a <ph id="ph1">&lt;see cref="T:System.FormatException" /&gt;</ph>, although you can provide default formatting.</source>
          <target state="translated">Die am häufigsten verwendete Ansatz ist das Auslösen einer <ph id="ph1">&lt;see cref="T:System.FormatException" /&gt;</ph>, obwohl Sie die standardformatierung bereitstellen können.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICustomFormatter">
          <source>Extension implementations are implementations that provide custom formatting for a type that already has formatting support.</source>
          <target state="translated">Extension-Implementierungen sind Implementierungen, die benutzerdefinierte Formatierung zum Bereitstellen eines Typs, die bereits formatierungsunterstützung.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICustomFormatter">
          <source>For example, you could define a <bpt id="p1">&lt;c&gt;</bpt>CustomerNumberFormatter<ept id="p1">&lt;/c&gt;</ept> that formats an integral type with hyphens between specific digits.</source>
          <target state="translated">Beispielsweise können Sie definieren eine <bpt id="p1">&lt;c&gt;</bpt>CustomerNumberFormatter<ept id="p1">&lt;/c&gt;</ept> , die einen ganzzahligen Typ mit Bindestrichen zwischen bestimmten Ziffern formatiert.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICustomFormatter">
          <source>In this case, your implementation should include the following:</source>
          <target state="translated">In diesem Fall sollte die Implementierung der folgenden enthalten:</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICustomFormatter">
          <source>A definition of format strings that extend the formatting of the object.</source>
          <target state="translated">Eine Definition von Formatzeichenfolgen, die die Formatierung des Objekts erweitern.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICustomFormatter">
          <source>These format strings are required, but they must not conflict with the type's existing format strings.</source>
          <target state="translated">Diese Formatzeichenfolgen sind erforderlich, aber sie müssen nicht in Konflikt mit vorhandenen Formatzeichenfolgen des Typs.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICustomFormatter">
          <source>For example, if you are extending formatting for the <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> type, you should not implement the "C", "D", "E", "F", and "G" format specifiers, among others.</source>
          <target state="translated">Angenommen, Sie erweitern Formatierung für die <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> geben, sollten Sie u. a. die Formatbezeichner "C", "D", "E", "F" und "G" nicht implementiert.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICustomFormatter">
          <source>A test that the type of the object passed to your <ph id="ph1">&lt;see cref="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)" /&gt;</ph> method is a type whose formatting your extension supports.</source>
          <target state="translated">Einen Test, der der Typ des Objekts an Ihre <ph id="ph1">&lt;see cref="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)" /&gt;</ph> Methode ist ein Typ, dessen Formatierung der Erweiterungs unterstützt.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICustomFormatter">
          <source>If it is not, call the object's <ph id="ph1">&lt;see cref="T:System.IFormattable" /&gt;</ph> implementation, if one exists, or the object's parameterless <ph id="ph2">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method, if it does not.</source>
          <target state="translated">Wenn sie nicht der Fall ist, rufen Sie des Objekts <ph id="ph1">&lt;see cref="T:System.IFormattable" /&gt;</ph> Implementierung wird, falls vorhanden, oder das Objekt des parameterlosen <ph id="ph2">&lt;see cref="M:System.Object.ToString" /&gt;</ph> -Methode, wenn dies nicht der Fall.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICustomFormatter">
          <source>You should be prepared to handle any exceptions these method calls might throw.</source>
          <target state="translated">Sie sollten darauf vorbereitet sein, keine Ausnahmen behandeln diese Methodenaufrufe auslösen können.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICustomFormatter">
          <source>Code to handle any format strings that your extension supports.</source>
          <target state="translated">Code zum Behandeln von Formatzeichenfolgen, die Ihre Erweiterung unterstützt.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICustomFormatter">
          <source>Code to handle any format strings that your extension does not support.</source>
          <target state="translated">Code zum Behandeln von Formatzeichenfolgen, die die Erweiterung nicht unterstützt.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICustomFormatter">
          <source>These should be passed on to the type's <ph id="ph1">&lt;see cref="T:System.IFormattable" /&gt;</ph> implementation.</source>
          <target state="translated">Diese sollte auf dem Typ übergeben werden <ph id="ph1">&lt;see cref="T:System.IFormattable" /&gt;</ph> Implementierung.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICustomFormatter">
          <source>You should be prepared to handle any exceptions these method calls might throw.</source>
          <target state="translated">Sie sollten darauf vorbereitet sein, keine Ausnahmen behandeln diese Methodenaufrufe auslösen können.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)">
          <source>A format string containing formatting specifications.</source>
          <target state="translated">Eine Formatzeichenfolge mit Formatierungsangaben.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)">
          <source>An object to format.</source>
          <target state="translated">Ein zu formatierendes Objekt.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)">
          <source>An object that supplies format information about the current instance.</source>
          <target state="translated">Ein Objekt, das Formatierungsinformationen zur aktuellen Instanz bereitstellt.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)">
          <source>Converts the value of a specified object to an equivalent string representation using specified format and culture-specific formatting information.</source>
          <target state="translated">Konvertiert den Wert eines angegebenen Objekts unter Verwendung des angegebenen Formats sowie der kulturspezifischen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)">
          <source>The string representation of the value of <ph id="ph1">&lt;paramref name="arg" /&gt;</ph>, formatted as specified by <ph id="ph2">&lt;paramref name="format" /&gt;</ph> and <ph id="ph3">&lt;paramref name="formatProvider" /&gt;</ph>.</source>
          <target state="translated">Die Zeichenfolgenentsprechung des Werts von <ph id="ph1">&lt;paramref name="arg" /&gt;</ph> im durch <ph id="ph2">&lt;paramref name="format" /&gt;</ph> und <ph id="ph3">&lt;paramref name="formatProvider" /&gt;</ph> angegebenen Format.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)">
          <source><ph id="ph1">&lt;xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType&gt;</ph> is a callback method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType&gt;</ph> ist eine Rückrufmethode.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)">
          <source>It is called by a method that supports custom formatting, such as <ph id="ph1">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Wird aufgerufen, indem Sie eine Methode, die benutzerdefinierte Formatierung, wie etwa unterstützt <ph id="ph1">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> oder <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)">
          <source>The implementation is called once for each format item in a <bpt id="p1">[</bpt>composite format string<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Die Implementierung heißt einmal für jedes Formatelement in einer <bpt id="p1">[</bpt>kombinierte Formatzeichenfolge<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)">
          <source>For example, in the following statement, the <ph id="ph1">&lt;xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType&gt;</ph> method is called three times.</source>
          <target state="translated">Beispielsweise ist in der folgenden Anweisung die <ph id="ph1">&lt;xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType&gt;</ph> -Methode dreimal aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)">
          <source>The <ph id="ph1">`arg`</ph> parameter is the object in the object list whose zero-based position corresponds to the index of a particular format item.</source>
          <target state="translated">Die <ph id="ph1">`arg`</ph> -Parameter ist das Objekt in der Objektliste, deren nullbasierte Position auf den Index eines bestimmten Formatelements entspricht.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)">
          <source>The <ph id="ph1">`format`</ph> parameter contains a format string, which is the <ph id="ph2">`formatString`</ph> component of a format item.</source>
          <target state="translated">Die <ph id="ph1">`format`</ph> -Parameter enthält eine Formatzeichenfolge, die ist die <ph id="ph2">`formatString`</ph> eines Formatelements Komponente.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)">
          <source>If the format item has no <ph id="ph1">`formatString`</ph> component, the value of <ph id="ph2">`format`</ph> is <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Wenn das Formatelement keine <ph id="ph1">`formatString`</ph> -Komponente, die den Wert der <ph id="ph2">`format`</ph> ist <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)">
          <source>If <ph id="ph1">`format`</ph> is <ph id="ph2">`null`</ph>, depending on the type of <ph id="ph3">`arg`</ph>, you may be able to use the default format specification of your choice.</source>
          <target state="translated">Wenn <ph id="ph1">`format`</ph> ist <ph id="ph2">`null`</ph>, je nachdem, welche <ph id="ph3">`arg`</ph>, möglicherweise an Standardeinstellung Formatspezifikation Ihrer Wahl verwenden können.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)">
          <source>The <ph id="ph1">`formatProvider`</ph> parameter is the <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation that provides formatting for <ph id="ph3">`arg`</ph>.</source>
          <target state="translated">Die <ph id="ph1">`formatProvider`</ph> Parameter ist der <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> Implementierung, die für die Formatierung bietet <ph id="ph3">`arg`</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)">
          <source>Typically, it is an instance of your <ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph> implementation.</source>
          <target state="translated">In der Regel ist es eine Instanz Ihrer <ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph> Implementierung.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)">
          <source>If <ph id="ph1">`formatProvider`</ph> is <ph id="ph2">`null`</ph>, ignore that parameter.</source>
          <target state="translated">Wenn <ph id="ph1">`formatProvider`</ph> ist <ph id="ph2">`null`</ph>, ignorieren Sie diesen Parameter.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)">
          <source>Your implementation of the <ph id="ph1">&lt;xref:System.ICustomFormatter.Format%2A&gt;</ph> method must include the following functionality so the .NET Framework can provide formatting you do not support.</source>
          <target state="translated">Die Implementierung der <ph id="ph1">&lt;xref:System.ICustomFormatter.Format%2A&gt;</ph> -Methode muss die folgende Funktionen enthalten, damit .NET Framework Sie keine unterstützen Formatierung bereitstellen können.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)">
          <source>If your format method does not support a format, determine whether the object being formatted implements the <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> interface.</source>
          <target state="translated">Wenn die Format-Methode ein Format nicht unterstützt, zu bestimmen, ob die zu Objekt formatierende die <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> Schnittstelle.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)">
          <source>If it does, invoke the <ph id="ph1">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> method of that interface.</source>
          <target state="translated">Wenn es aufgerufen, die <ph id="ph1">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> -Methode dieser Schnittstelle.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)">
          <source>Otherwise, invoke the default <ph id="ph1">&lt;xref:System.Object.ToString%2A?displayProperty=nameWithType&gt;</ph> method of the underlying object.</source>
          <target state="translated">Rufen Sie andernfalls die Standardeinstellung <ph id="ph1">&lt;xref:System.Object.ToString%2A?displayProperty=nameWithType&gt;</ph> -Methode des zugrunde liegenden Objekts.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)">
          <source>The following code illustrates this pattern.</source>
          <target state="translated">Der folgende Code veranschaulicht dieses Muster.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)">
          <source>The following example implements <ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph> to allow binary, octal, and hexadecimal formatting of integral values.</source>
          <target state="translated">Das folgende Beispiel implementiert <ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph> um binäre, oktale und hexadezimale Formatierung von ganzzahligen Werten zu ermöglichen.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType&gt;</ph> implementation determines whether the format parameter is one of the three supported format strings ("B" for binary, "O" for octal, and "H" for hexadecimal) and formats the <ph id="ph2">`arg`</ph> parameter appropriately.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType&gt;</ph> Implementierung bestimmt, ob der Formatparameter eine der drei unterstützten Formatzeichenfolgen ist ("B" für Binärdatei, "O" für oktale, und "H" für hexadezimal) und formatiert die <ph id="ph2">`arg`</ph> Parameter entsprechend.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)">
          <source>Otherwise, if <ph id="ph1">`arg`</ph> is not <ph id="ph2">`null`</ph>, it calls the <ph id="ph3">`arg`</ph> parameter's <ph id="ph4">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> implementation, if one exists, or its parameterless <ph id="ph5">`ToString`</ph> method, if one does not.</source>
          <target state="translated">Andernfalls gilt: Wenn <ph id="ph1">`arg`</ph> ist nicht <ph id="ph2">`null`</ph>, ruft er die <ph id="ph3">`arg`</ph> des Parameters <ph id="ph4">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> -Implementierung, sofern vorhanden, oder die parameterlose <ph id="ph5">`ToString`</ph> -Methode, wenn eine nicht der Fall ist.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)">
          <source>If <ph id="ph1">`arg`</ph> is <ph id="ph2">`null`</ph>, the method returns <ph id="ph3">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Wenn <ph id="ph1">`arg`</ph> gleich <ph id="ph2">`null`</ph> ist, gibt die Methode <ph id="ph3">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph> zurück.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)">
          <source><ph id="ph1">`BinaryFormatter`</ph> can then be used to provide custom formatting by passing a <ph id="ph2">`BinaryFormatter`</ph> object as the <ph id="ph3">`provider`</ph> parameter of the <ph id="ph4">&lt;xref:System.String.Format%2A&gt;</ph> method, as the following example shows.</source>
          <target state="translated"><ph id="ph1">`BinaryFormatter`</ph> kann dann verwendet werden, geben Sie die benutzerdefinierte Formatierung durch Übergeben einer <ph id="ph2">`BinaryFormatter`</ph> -Objekts entsprechend der der <ph id="ph3">`provider`</ph> Parameter von der <ph id="ph4">&lt;xref:System.String.Format%2A&gt;</ph> Methode, wie im folgenden Beispiel gezeigt.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>