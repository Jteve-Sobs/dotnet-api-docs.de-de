<Type Name="ICustomFormatter" FullName="System.ICustomFormatter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4d49cf32248451109bfd83a0da3e2244c7634b58" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75172829" /></Metadata><TypeSignature Language="C#" Value="public interface ICustomFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICustomFormatter" />
  <TypeSignature Language="DocId" Value="T:System.ICustomFormatter" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICustomFormatter" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICustomFormatter" />
  <TypeSignature Language="F#" Value="type ICustomFormatter = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a807f-101">Definiert eine Methode, die die benutzerdefinierte Formatierung des Werts eines Objekts unterstützt.</span><span class="sxs-lookup"><span data-stu-id="a807f-101">Defines a method that supports custom formatting of the value of an object.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a807f-102">Die <xref:System.ICustomFormatter>-Schnittstelle enthält eine einzige Methode, <xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a807f-102">The <xref:System.ICustomFormatter> interface includes a single method, <xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a807f-103">Wenn diese Schnittstelle durch einen Verweis-oder Werttyp implementiert wird, gibt die <xref:System.ICustomFormatter.Format%2A> Methode eine benutzerdefinierte Zeichen folgen Darstellung des Werts eines Objekts zurück.</span><span class="sxs-lookup"><span data-stu-id="a807f-103">When this interface is implemented by a reference or value type, the <xref:System.ICustomFormatter.Format%2A> method returns a custom-formatted string representation of an object's value.</span></span>  
  
 <span data-ttu-id="a807f-104">In der Regel wird die <xref:System.ICustomFormatter>-Schnittstelle mit der <xref:System.IFormatProvider>-Schnittstelle implementiert, um das Verhalten von zwei .NET Framework Methoden zur kombinierten Zeichen folgen Formatierung anzupassen, die einen <xref:System.IFormatProvider>-Parameter enthalten.</span><span class="sxs-lookup"><span data-stu-id="a807f-104">Typically, the <xref:System.ICustomFormatter> interface is implemented with the <xref:System.IFormatProvider> interface to customize the behavior of two .NET Framework composite string formatting methods that include an <xref:System.IFormatProvider> parameter.</span></span> <span data-ttu-id="a807f-105">Die <xref:System.ICustomFormatter>-Schnittstelle kann insbesondere eine benutzerdefinierte Formatierung des Werts eines Objekts bereitstellen, das an die Methoden <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> und <xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> übermittelt wird.</span><span class="sxs-lookup"><span data-stu-id="a807f-105">Specifically, the <xref:System.ICustomFormatter> interface can provide custom formatting of the value of an object passed to the <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> and <xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="a807f-106">Zum Bereitstellen einer benutzerdefinierten Darstellung des Werts eines Objekts müssen Sie die folgenden Schritte ausführen:</span><span class="sxs-lookup"><span data-stu-id="a807f-106">Providing a custom representation of an object's value requires that you do the following:</span></span>  
  
1.  <span data-ttu-id="a807f-107">Definieren Sie eine Klasse, die die <xref:System.ICustomFormatter>-Schnittstelle und ihren einzelnen Member implementiert, die <xref:System.ICustomFormatter.Format%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="a807f-107">Define a class that implements the <xref:System.ICustomFormatter> interface and its single member, the <xref:System.ICustomFormatter.Format%2A> method.</span></span>  
  
2.  <span data-ttu-id="a807f-108">Definieren Sie eine Klasse, die die <xref:System.IFormatProvider>-Schnittstelle und ihren einzelnen Member implementiert, die <xref:System.IFormatProvider.GetFormat%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="a807f-108">Define a class that implements the <xref:System.IFormatProvider> interface and its single member, the <xref:System.IFormatProvider.GetFormat%2A> method.</span></span> <span data-ttu-id="a807f-109">Die <xref:System.IFormatProvider.GetFormat%2A>-Methode gibt eine Instanz Ihrer <xref:System.ICustomFormatter>-Implementierung zurück.</span><span class="sxs-lookup"><span data-stu-id="a807f-109">The <xref:System.IFormatProvider.GetFormat%2A> method returns an instance of your <xref:System.ICustomFormatter> implementation.</span></span> <span data-ttu-id="a807f-110">Häufig implementiert eine einzelne Klasse sowohl <xref:System.ICustomFormatter> als auch <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="a807f-110">Often, a single class implements both <xref:System.ICustomFormatter> and <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="a807f-111">In diesem Fall gibt die `GetFormat` Implementierung der Klasse nur eine Instanz von sich selbst zurück.</span><span class="sxs-lookup"><span data-stu-id="a807f-111">In that case, the class's `GetFormat` implementation just returns an instance of itself.</span></span>  
  
3.  <span data-ttu-id="a807f-112">Übergeben Sie die <xref:System.IFormatProvider>-Implementierung als `provider`-Argument der <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>-Methode oder einer vergleichbaren Methode.</span><span class="sxs-lookup"><span data-stu-id="a807f-112">Pass the <xref:System.IFormatProvider> implementation as the `provider` argument of the <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method or a comparable method.</span></span>  
  
 <span data-ttu-id="a807f-113">Die .NET Framework-Methode verwendet dann die benutzerdefinierte Formatierung anstelle ihrer eigenen.</span><span class="sxs-lookup"><span data-stu-id="a807f-113">The .NET Framework method will then use your custom formatting instead of its own.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a807f-114">Im folgenden Beispiel wird <xref:System.ICustomFormatter> implementiert, um die binäre, oktale und hexadezimale Formatierung von ganzzahligen Werten zuzulassen.</span><span class="sxs-lookup"><span data-stu-id="a807f-114">The following example implements <xref:System.ICustomFormatter> to allow binary, octal, and hexadecimal formatting of integral values.</span></span> <span data-ttu-id="a807f-115">In diesem Beispiel implementiert eine einzelne Klasse (`IBinaryFormatter`) sowohl <xref:System.ICustomFormatter> als auch <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="a807f-115">In this example, a single class, `IBinaryFormatter`, implements both <xref:System.ICustomFormatter> and <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="a807f-116">Die <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>-Methode bestimmt, ob der `formatType` Parameter einen <xref:System.ICustomFormatter> Typ darstellt.</span><span class="sxs-lookup"><span data-stu-id="a807f-116">Its <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method determines whether the `formatType` parameter represents an <xref:System.ICustomFormatter> type.</span></span> <span data-ttu-id="a807f-117">Wenn dies der Fall ist, gibt `BinaryFormatter` eine Instanz von sich selbst zurück. Andernfalls wird `null`zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="a807f-117">If it does, `BinaryFormatter` returns an instance of itself; otherwise, it returns `null`.</span></span> <span data-ttu-id="a807f-118">Die <xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType>-Implementierung bestimmt, ob der Format Parameter eine der drei unterstützten Format Zeichenfolgen ("B" für "Binary", "O" für oktal und "H" für hexadezimale) ist, und formatiert den `arg` Parameter entsprechend.</span><span class="sxs-lookup"><span data-stu-id="a807f-118">Its <xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType> implementation determines whether the format parameter is one of the three supported format strings ("B" for binary, "O" for octal, and "H" for hexadecimal) and formats the `arg` parameter appropriately.</span></span> <span data-ttu-id="a807f-119">Andernfalls, wenn `arg` nicht `null`ist, wird die <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> Implementierung des `arg`-Parameters, sofern vorhanden, oder dessen Parameter lose `ToString`-Methode aufgerufen, sofern dies nicht der Fall ist.</span><span class="sxs-lookup"><span data-stu-id="a807f-119">Otherwise, if `arg` is not `null`, it calls the `arg` parameter's <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> implementation, if one exists, or its parameterless `ToString` method, if one does not.</span></span> <span data-ttu-id="a807f-120">Wenn `arg` gleich `null` ist, gibt die Methode <xref:System.String.Empty?displayProperty=nameWithType> zurück.</span><span class="sxs-lookup"><span data-stu-id="a807f-120">If `arg` is `null`, the method returns <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.ICustomFormatter.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.icustomformatter.class/cs/binaryformatter.cs#1)]
 [!code-vb[System.ICustomFormatter.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.icustomformatter.class/vb/binaryformatter.vb#1)]  
  
 <span data-ttu-id="a807f-121">`BinaryFormatter` kann dann verwendet werden, um eine benutzerdefinierte Formatierung bereitzustellen, indem ein `BinaryFormatter`-Objekt als `provider`-Parameter der <xref:System.String.Format%2A>-Methode übergeben wird, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="a807f-121">`BinaryFormatter` can then be used to provide custom formatting by passing a `BinaryFormatter` object as the `provider` parameter of the <xref:System.String.Format%2A> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.ICustomFormatter.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.icustomformatter.class/cs/binaryformatter.cs#2)]
 [!code-vb[System.ICustomFormatter.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.icustomformatter.class/vb/binaryformatter.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="a807f-122">Der Common Language Runtime versucht, die <see cref="T:System.ICustomFormatter" />-Implementierung für jedes Format Element in einer zusammengesetzten Format Zeichenfolge zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="a807f-122">The common language runtime attempts to use your <see cref="T:System.ICustomFormatter" /> implementation for every format item in a composite format string.</span></span> <span data-ttu-id="a807f-123">Daher sollten Sie davon ausgehen, dass die <see cref="T:System.ICustomFormatter" />-Implementierung aufgerufen wird, um Formatierungs Dienste für Objekte oder Werte bereitzustellen, die nicht verarbeitet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="a807f-123">As a result, you should expect that your <see cref="T:System.ICustomFormatter" /> implementation will be called to provide formatting services to objects or values that it is not designed to handle.</span></span> <span data-ttu-id="a807f-124">In diesen Fällen muss die <see cref="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)" />-Methode die entsprechende Formatierungs Methode für dieses Objekt oder den Wert aufruft.</span><span class="sxs-lookup"><span data-stu-id="a807f-124">In these cases, your <see cref="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)" /> method must call the appropriate formatting method for that object or value.</span></span>  
  
<span data-ttu-id="a807f-125">Es gibt zwei Arten von <see cref="T:System.ICustomFormatter" /> Implementierungen: systeminterne und Erweiterung.</span><span class="sxs-lookup"><span data-stu-id="a807f-125">There are two kinds of <see cref="T:System.ICustomFormatter" /> implementations: intrinsic and extension.</span></span>  
  
<span data-ttu-id="a807f-126">Systeminterne Implementierungen sind Implementierungen, die eine benutzerdefinierte Formatierung für ein Anwendungs definiertes Objekt bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="a807f-126">Intrinsic implementations are implementations that provide custom formatting for an application-defined object.</span></span> <span data-ttu-id="a807f-127">In diesem Fall sollte die Implementierung Folgendes umfassen:</span><span class="sxs-lookup"><span data-stu-id="a807f-127">In this case, your implementation should include the following:</span></span> 
<span data-ttu-id="a807f-128">: Eine Definition von Format Zeichenfolgen, die die Formatierung des-Objekts definieren.</span><span class="sxs-lookup"><span data-stu-id="a807f-128">-   A definition of format strings that define the formatting of the object.</span></span> <span data-ttu-id="a807f-129">Format Zeichenfolgen sind optional.</span><span class="sxs-lookup"><span data-stu-id="a807f-129">Format strings are optional.</span></span> <span data-ttu-id="a807f-130">Normalerweise definiert eine Format Zeichenfolge "g" oder "g" das allgemeine Format (oder das am häufigsten verwendete Format).</span><span class="sxs-lookup"><span data-stu-id="a807f-130">Typically, a "G" or "g" format string defines the general (or most commonly used) format.</span></span> <span data-ttu-id="a807f-131">Allerdings können Sie beliebige Format Zeichenfolgen definieren, die Sie auswählen.</span><span class="sxs-lookup"><span data-stu-id="a807f-131">However, you are free to define any format strings that you choose.</span></span> <span data-ttu-id="a807f-132">Außerdem können Sie entscheiden, ob die Groß-/Kleinschreibung beachtet werden soll.</span><span class="sxs-lookup"><span data-stu-id="a807f-132">You are also free to decide whether they are case-sensitive or case-insensitive.</span></span>  
  
<span data-ttu-id="a807f-133">-Ein Test, um sicherzustellen, dass der Typ des Objekts, das an Ihre <see cref="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)" />-Methode übertragen wird, der von der Anwendung definierte Typ ist.</span><span class="sxs-lookup"><span data-stu-id="a807f-133">-   A test to ensure that the type of the object passed to your <see cref="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)" /> method is your application-defined type.</span></span> <span data-ttu-id="a807f-134">Wenn dies nicht der Fall ist, sollten Sie die <see cref="T:System.IFormattable" />-Implementierung des Objekts, sofern vorhanden, oder dessen <see cref="M:System.Object.ToString" /> Methode (andernfalls) aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="a807f-134">If it is not, you should call the object's <see cref="T:System.IFormattable" /> implementation, if one exists, or its <see cref="M:System.Object.ToString" /> method, if it does not.</span></span> <span data-ttu-id="a807f-135">Sie sollten darauf vorbereitet sein, alle Ausnahmen zu behandeln, die von diesen Methoden aufrufen ausgelöst werden können.</span><span class="sxs-lookup"><span data-stu-id="a807f-135">You should be prepared to handle any exceptions these method calls might throw.</span></span>  
  
<span data-ttu-id="a807f-136">-Code, der eine NULL-Format Zeichenfolge behandelt, wenn die Implementierung Format Zeichenfolgen unterstützt.</span><span class="sxs-lookup"><span data-stu-id="a807f-136">-   Code to handle a null format string, if your implementation supports format strings.</span></span> <span data-ttu-id="a807f-137">Der gängigste Ansatz besteht darin, eine NULL-Format Zeichenfolge durch den allgemeinen Format Bezeichner zu ersetzen.</span><span class="sxs-lookup"><span data-stu-id="a807f-137">The most common approach is to replace a null format string with the general format specifier.</span></span>  
  
<span data-ttu-id="a807f-138">-Code zum Behandeln von Format Zeichenfolgen, die von der Implementierung unterstützt werden.</span><span class="sxs-lookup"><span data-stu-id="a807f-138">-   Code to handle any format strings that your implementation supports.</span></span>  
  
<span data-ttu-id="a807f-139">-Code zum Behandeln von Format Zeichenfolgen, die Sie nicht unterstützen.</span><span class="sxs-lookup"><span data-stu-id="a807f-139">-   Code to handle format strings that you do not support.</span></span> <span data-ttu-id="a807f-140">Der gängigste Ansatz besteht darin, eine <see cref="T:System.FormatException" />auszulösen, auch wenn Sie die Standard Formatierung bereitstellen können.</span><span class="sxs-lookup"><span data-stu-id="a807f-140">The most common approach is to throw a <see cref="T:System.FormatException" />, although you can provide default formatting.</span></span>  
  
<span data-ttu-id="a807f-141">Erweiterungs Implementierungen sind Implementierungen, die eine benutzerdefinierte Formatierung für einen Typ bereitstellen, der bereits Formatierungs Unterstützung unterstützt.</span><span class="sxs-lookup"><span data-stu-id="a807f-141">Extension implementations are implementations that provide custom formatting for a type that already has formatting support.</span></span> <span data-ttu-id="a807f-142">Beispielsweise können Sie einen <c>customernumformatter</c> definieren, der einen ganzzahligen Typ mit Bindestrichen zwischen bestimmten Ziffern formatiert.</span><span class="sxs-lookup"><span data-stu-id="a807f-142">For example, you could define a <c>CustomerNumberFormatter</c> that formats an integral type with hyphens between specific digits.</span></span> <span data-ttu-id="a807f-143">In diesem Fall sollte die Implementierung Folgendes umfassen:</span><span class="sxs-lookup"><span data-stu-id="a807f-143">In this case, your implementation should include the following:</span></span> 
<span data-ttu-id="a807f-144">: Eine Definition von Format Zeichenfolgen, die die Formatierung des-Objekts erweitern.</span><span class="sxs-lookup"><span data-stu-id="a807f-144">-   A definition of format strings that extend the formatting of the object.</span></span> <span data-ttu-id="a807f-145">Diese Format Zeichenfolgen sind erforderlich, aber Sie dürfen nicht mit den vorhandenen Format Zeichenfolgen des Typs in Konflikt stehen.</span><span class="sxs-lookup"><span data-stu-id="a807f-145">These format strings are required, but they must not conflict with the type's existing format strings.</span></span> <span data-ttu-id="a807f-146">Wenn Sie z. b. die Formatierung für den <see cref="T:System.Int32" />-Typ erweitern, sollten Sie die Format Bearbeiter "C", "D", "E", "F" und "G" nicht implementieren.</span><span class="sxs-lookup"><span data-stu-id="a807f-146">For example, if you are extending formatting for the <see cref="T:System.Int32" /> type, you should not implement the "C", "D", "E", "F", and "G" format specifiers, among others.</span></span>  
  
<span data-ttu-id="a807f-147">-Ein Test, bei dem der Typ des Objekts, das an die <see cref="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)" /> Methode übertragen wird, ein Typ ist, dessen Formatierung von der Erweiterung unterstützt wird</span><span class="sxs-lookup"><span data-stu-id="a807f-147">-   A test that the type of the object passed to your <see cref="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)" /> method is a type whose formatting your extension supports.</span></span> <span data-ttu-id="a807f-148">Wenn dies nicht der Fall ist, müssen Sie die <see cref="T:System.IFormattable" />-Implementierung des Objekts, sofern vorhanden, oder die Parameter lose <see cref="M:System.Object.ToString" /> Methode des Objekts, sofern dies nicht der Fall ist, aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="a807f-148">If it is not, call the object's <see cref="T:System.IFormattable" /> implementation, if one exists, or the object's parameterless <see cref="M:System.Object.ToString" /> method, if it does not.</span></span> <span data-ttu-id="a807f-149">Sie sollten darauf vorbereitet sein, alle Ausnahmen zu behandeln, die von diesen Methoden aufrufen ausgelöst werden können.</span><span class="sxs-lookup"><span data-stu-id="a807f-149">You should be prepared to handle any exceptions these method calls might throw.</span></span>  
  
<span data-ttu-id="a807f-150">-Code zum Behandeln von Format Zeichenfolgen, die von der Erweiterung unterstützt werden.</span><span class="sxs-lookup"><span data-stu-id="a807f-150">-   Code to handle any format strings that your extension supports.</span></span>  
  
<span data-ttu-id="a807f-151">-Code zum Behandeln von Format Zeichenfolgen, die von der Erweiterung nicht unterstützt werden.</span><span class="sxs-lookup"><span data-stu-id="a807f-151">-   Code to handle any format strings that your extension does not support.</span></span> <span data-ttu-id="a807f-152">Diese sollten an die <see cref="T:System.IFormattable" /> Implementierung des Typs weitergegeben werden.</span><span class="sxs-lookup"><span data-stu-id="a807f-152">These should be passed on to the type's <see cref="T:System.IFormattable" /> implementation.</span></span> <span data-ttu-id="a807f-153">Sie sollten darauf vorbereitet sein, alle Ausnahmen zu behandeln, die von diesen Methoden aufrufen ausgelöst werden können.</span><span class="sxs-lookup"><span data-stu-id="a807f-153">You should be prepared to handle any exceptions these method calls might throw.</span></span></para></block>
    <altmember cref="T:System.IFormatProvider" />
  </Docs>
  <Members>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public string Format (string format, object arg, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Format(string format, object arg, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function Format (format As String, arg As Object, formatProvider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Format(System::String ^ format, System::Object ^ arg, IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="abstract member Format : string * obj * IFormatProvider -&gt; string" Usage="iCustomFormatter.Format (format, arg, formatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="a807f-154">Eine Formatzeichenfolge mit Formatierungsangaben.</span><span class="sxs-lookup"><span data-stu-id="a807f-154">A format string containing formatting specifications.</span></span></param>
        <param name="arg"><span data-ttu-id="a807f-155">Ein zu formatierendes Objekt.</span><span class="sxs-lookup"><span data-stu-id="a807f-155">An object to format.</span></span></param>
        <param name="formatProvider"><span data-ttu-id="a807f-156">Ein Objekt, das Formatierungsinformationen zur aktuellen Instanz bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="a807f-156">An object that supplies format information about the current instance.</span></span></param>
        <summary><span data-ttu-id="a807f-157">Konvertiert den Wert eines angegebenen Objekts unter Verwendung des angegebenen Formats sowie der kulturspezifischen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="a807f-157">Converts the value of a specified object to an equivalent string representation using specified format and culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="a807f-158">Die Zeichenfolgendarstellung des Werts von <paramref name="arg" />, die gemäß der Angabe von <paramref name="format" /> und <paramref name="formatProvider" /> formatiert wird.</span><span class="sxs-lookup"><span data-stu-id="a807f-158">The string representation of the value of <paramref name="arg" />, formatted as specified by <paramref name="format" /> and <paramref name="formatProvider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a807f-159"><xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType> ist eine Rückrufmethode.</span><span class="sxs-lookup"><span data-stu-id="a807f-159"><xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType> is a callback method.</span></span> <span data-ttu-id="a807f-160">Sie wird von einer Methode aufgerufen, die benutzerdefinierte Formatierung unterstützt, wie z. b. <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> oder <xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a807f-160">It is called by a method that supports custom formatting, such as <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> or <xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a807f-161">Die-Implementierung wird einmal für jedes Format Element in einer zusammen [gesetzten Format Zeichenfolge](~/docs/standard/base-types/composite-formatting.md)aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="a807f-161">The implementation is called once for each format item in a [composite format string](~/docs/standard/base-types/composite-formatting.md).</span></span> <span data-ttu-id="a807f-162">In der folgenden-Anweisung wird z. b. die <xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType>-Methode dreimal aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="a807f-162">For example, in the following statement, the <xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType> method is called three times.</span></span>  
  
 [!code-csharp[System.ICustomFormatter.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.icustomformatter.class/cs/binaryformatter.cs#4)]
 [!code-vb[System.ICustomFormatter.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.icustomformatter.class/vb/binaryformatter.vb#4)]  
  
 <span data-ttu-id="a807f-163">Der `arg`-Parameter ist das Objekt in der Objektliste, dessen null basierte Position dem Index eines bestimmten Format Elements entspricht.</span><span class="sxs-lookup"><span data-stu-id="a807f-163">The `arg` parameter is the object in the object list whose zero-based position corresponds to the index of a particular format item.</span></span>  
  
 <span data-ttu-id="a807f-164">Der `format`-Parameter enthält eine Format Zeichenfolge, die die `formatString` Komponente eines Format Elements ist.</span><span class="sxs-lookup"><span data-stu-id="a807f-164">The `format` parameter contains a format string, which is the `formatString` component of a format item.</span></span> <span data-ttu-id="a807f-165">Wenn das Format Element keine `formatString` Komponente aufweist, wird der Wert `format` `null`.</span><span class="sxs-lookup"><span data-stu-id="a807f-165">If the format item has no `formatString` component, the value of `format` is `null`.</span></span> <span data-ttu-id="a807f-166">Wenn `format` `null`, können Sie je nach Art der `arg`die Standardformat Spezifikation ihrer Wahl verwenden.</span><span class="sxs-lookup"><span data-stu-id="a807f-166">If `format` is `null`, depending on the type of `arg`, you may be able to use the default format specification of your choice.</span></span>  
  
 <span data-ttu-id="a807f-167">Der `formatProvider`-Parameter ist die <xref:System.IFormatProvider> Implementierung, die die Formatierung für `arg`bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="a807f-167">The `formatProvider` parameter is the <xref:System.IFormatProvider> implementation that provides formatting for `arg`.</span></span> <span data-ttu-id="a807f-168">In der Regel handelt es sich um eine Instanz der <xref:System.ICustomFormatter>-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="a807f-168">Typically, it is an instance of your <xref:System.ICustomFormatter> implementation.</span></span> <span data-ttu-id="a807f-169">Wenn `formatProvider` `null`ist, ignorieren Sie diesen Parameter.</span><span class="sxs-lookup"><span data-stu-id="a807f-169">If `formatProvider` is `null`, ignore that parameter.</span></span>  
  
 <span data-ttu-id="a807f-170">Die Implementierung der <xref:System.ICustomFormatter.Format%2A>-Methode muss die folgenden Funktionen enthalten, damit die .NET Framework die Formatierung bereitstellen können, die Sie nicht unterstützen.</span><span class="sxs-lookup"><span data-stu-id="a807f-170">Your implementation of the <xref:System.ICustomFormatter.Format%2A> method must include the following functionality so the .NET Framework can provide formatting you do not support.</span></span> <span data-ttu-id="a807f-171">Wenn die Format Methode kein Format unterstützt, stellen Sie fest, ob das Objekt, das formatiert wird, die <xref:System.IFormattable>-Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="a807f-171">If your format method does not support a format, determine whether the object being formatted implements the <xref:System.IFormattable> interface.</span></span> <span data-ttu-id="a807f-172">Wenn dies der Fall ist, rufen Sie die <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType>-Methode dieser Schnittstelle auf.</span><span class="sxs-lookup"><span data-stu-id="a807f-172">If it does, invoke the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> method of that interface.</span></span> <span data-ttu-id="a807f-173">Rufen Sie andernfalls die Standard <xref:System.Object.ToString%2A?displayProperty=nameWithType>-Methode des zugrunde liegenden-Objekts auf.</span><span class="sxs-lookup"><span data-stu-id="a807f-173">Otherwise, invoke the default <xref:System.Object.ToString%2A?displayProperty=nameWithType> method of the underlying object.</span></span> <span data-ttu-id="a807f-174">Der folgende Code veranschaulicht dieses Muster.</span><span class="sxs-lookup"><span data-stu-id="a807f-174">The following code illustrates this pattern.</span></span>  
  
 [!code-csharp[System.ICustomFormatter.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.icustomformatter.class/cs/binaryformatter.cs#3)]
 [!code-vb[System.ICustomFormatter.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.icustomformatter.class/vb/binaryformatter.vb#3)]  
  
   
  
## Examples  
 <span data-ttu-id="a807f-175">Im folgenden Beispiel wird <xref:System.ICustomFormatter> implementiert, um die binäre, oktale und hexadezimale Formatierung von ganzzahligen Werten zuzulassen.</span><span class="sxs-lookup"><span data-stu-id="a807f-175">The following example implements <xref:System.ICustomFormatter> to allow binary, octal, and hexadecimal formatting of integral values.</span></span> <span data-ttu-id="a807f-176">Die <xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType>-Implementierung bestimmt, ob der Format Parameter eine der drei unterstützten Format Zeichenfolgen ("B" für "Binary", "O" für oktal und "H" für hexadezimale) ist, und formatiert den `arg` Parameter entsprechend.</span><span class="sxs-lookup"><span data-stu-id="a807f-176">Its <xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType> implementation determines whether the format parameter is one of the three supported format strings ("B" for binary, "O" for octal, and "H" for hexadecimal) and formats the `arg` parameter appropriately.</span></span> <span data-ttu-id="a807f-177">Andernfalls, wenn `arg` nicht `null`ist, wird die <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> Implementierung des `arg`-Parameters, sofern vorhanden, oder dessen Parameter lose `ToString`-Methode aufgerufen, sofern dies nicht der Fall ist.</span><span class="sxs-lookup"><span data-stu-id="a807f-177">Otherwise, if `arg` is not `null`, it calls the `arg` parameter's <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> implementation, if one exists, or its parameterless `ToString` method, if one does not.</span></span> <span data-ttu-id="a807f-178">Wenn `arg` gleich `null` ist, gibt die Methode <xref:System.String.Empty?displayProperty=nameWithType> zurück.</span><span class="sxs-lookup"><span data-stu-id="a807f-178">If `arg` is `null`, the method returns <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.ICustomFormatter.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.icustomformatter.class/cs/binaryformatter.cs#1)]
 [!code-vb[System.ICustomFormatter.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.icustomformatter.class/vb/binaryformatter.vb#1)]  
  
 <span data-ttu-id="a807f-179">`BinaryFormatter` kann dann verwendet werden, um eine benutzerdefinierte Formatierung bereitzustellen, indem ein `BinaryFormatter`-Objekt als `provider`-Parameter der <xref:System.String.Format%2A>-Methode übergeben wird, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="a807f-179">`BinaryFormatter` can then be used to provide custom formatting by passing a `BinaryFormatter` object as the `provider` parameter of the <xref:System.String.Format%2A> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.ICustomFormatter.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.icustomformatter.class/cs/binaryformatter.cs#2)]
 [!code-vb[System.ICustomFormatter.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.icustomformatter.class/vb/binaryformatter.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormattable" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="a807f-180">Formatieren von Typen in .NET</span><span class="sxs-lookup"><span data-stu-id="a807f-180">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md"><span data-ttu-id="a807f-181">Kombinierte Formatierung</span><span class="sxs-lookup"><span data-stu-id="a807f-181">Composite Formatting</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
