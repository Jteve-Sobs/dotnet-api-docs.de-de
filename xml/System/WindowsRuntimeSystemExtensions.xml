<Type Name="WindowsRuntimeSystemExtensions" FullName="System.WindowsRuntimeSystemExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b063d662d325f5dc236bd67d1fcbb03b2ae081ff" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75171815" /></Metadata><TypeSignature Language="C#" Value="public static class WindowsRuntimeSystemExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit WindowsRuntimeSystemExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.WindowsRuntimeSystemExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module WindowsRuntimeSystemExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowsRuntimeSystemExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type WindowsRuntimeSystemExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.14.0</AssemblyVersion>
    <AssemblyVersion>4.0.15.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CLSCompliant(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="dotnet-uwp-10.0">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt Erweiterungsmethoden für das Konvertieren zwischen Aufgaben und asynchronen Windows-Runtime-Vorgängen und -Aktionen bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

Mit den <xref:System.WindowsRuntimeSystemExtensions.AsTask%2A> Erweiterungs Methoden Überladungen können Sie ein .net <xref:System.Threading.Tasks.Task>-Objekt verwenden, um einen asynchronen Vorgang aus der Windows-Runtime zu verwalten.

Die <xref:System.WindowsRuntimeSystemExtensions.AsAsyncAction%2A>-Methode und die <xref:System.WindowsRuntimeSystemExtensions.AsAsyncOperation%2A>-Methode ermöglichen es Ihnen, begonnene Aufgaben an Methoden zu übergeben, die Windows-Runtime asynchrone Aktionen und Vorgänge durchführen. Weitere Informationen finden Sie auch in den Methoden der <xref:System.Runtime.InteropServices.WindowsRuntime.AsyncInfo>-Klasse.

Die <xref:System.WindowsRuntimeSystemExtensions.GetAwaiter%2A>-Methoden werden von Compilern verwendet, um den <see langword="await" /> Vorgang zu implementieren (<see langword="Await" /> in Visual Basic).

]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AsAsyncAction">
      <MemberSignature Language="C#" Value="public static Windows.Foundation.IAsyncAction AsAsyncAction (this System.Threading.Tasks.Task source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Windows.Foundation.IAsyncAction AsAsyncAction(class System.Threading.Tasks.Task source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.AsAsyncAction(System.Threading.Tasks.Task)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsAsyncAction (source As Task) As IAsyncAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Windows::Foundation::IAsyncAction ^ AsAsyncAction(System::Threading::Tasks::Task ^ source);" />
      <MemberSignature Language="F#" Value="static member AsAsyncAction : System.Threading.Tasks.Task -&gt; Windows.Foundation.IAsyncAction" Usage="System.WindowsRuntimeSystemExtensions.AsAsyncAction source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Windows.Foundation.IAsyncAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Task" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">Die begonnene Aufgabe.</param>
        <summary>Gibt eine asynchrone Windows-Runtime-Aktion zurück, die eine begonnene Aufgabe darstellt.</summary>
        <returns>Eine <see cref="T:Windows.Foundation.IAsyncAction" />-Instanz, die die gestartete Aufgabe darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> In Visual Basic und C#können Sie diese Methode als Instanzmethode für ein beliebiges Objekt vom Typ <xref:System.Threading.Tasks.Task>abrufen. Bei Verwendung der Syntax für Instanzenmethoden lassen Sie den ersten Parameter aus. Weitere Informationen finden Sie unter [Erweiterungs Methoden (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) oder [Erweiterungs Methoden (C# Programmier Handbuch)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

Verwenden Sie diese Methode, wenn Sie eine Aufgabe an eine Windows-Runtime Methode übergeben möchten, die eine asynchrone Aktion annimmt.

Die <xref:System.Runtime.InteropServices.WindowsRuntime.AsyncInfo>-Klasse stellt statische Methoden (`Shared` Methoden in Visual Basic) bereit, die Windows-Runtime asynchrone Aktionen erstellen und starten, die Aufgaben darstellen, die auf Abbruch Anforderungen reagieren und den Fortschritt melden können. 

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="source" /> ist ein nicht angefangener Vorgang.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsAsyncOperation&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static Windows.Foundation.IAsyncOperation&lt;TResult&gt; AsAsyncOperation&lt;TResult&gt; (this System.Threading.Tasks.Task&lt;TResult&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Windows.Foundation.IAsyncOperation`1&lt;!!TResult&gt; AsAsyncOperation&lt;TResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TResult&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.AsAsyncOperation``1(System.Threading.Tasks.Task{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsAsyncOperation(Of TResult) (source As Task(Of TResult)) As IAsyncOperation(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Windows::Foundation::IAsyncOperation&lt;TResult&gt; ^ AsAsyncOperation(System::Threading::Tasks::Task&lt;TResult&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member AsAsyncOperation : System.Threading.Tasks.Task&lt;'Result&gt; -&gt; Windows.Foundation.IAsyncOperation&lt;'Result&gt;" Usage="System.WindowsRuntimeSystemExtensions.AsAsyncOperation source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Windows.Foundation.IAsyncOperation&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Task&lt;TResult&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">Der Typ, der die Abfrage zurückgibt.</typeparam>
        <param name="source">Die begonnene Aufgabe.</param>
        <summary>Gibt einen asynchronen Windows-Runtime-Vorgang zurück, der eine begonnene Aufgabe darstellt, die ein Ergebnis zurückgibt.</summary>
        <returns>Eine <see cref="T:Windows.Foundation.IAsyncOperation`1" />-Instanz, die die gestartete Aufgabe darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> In Visual Basic und C#können Sie diese Methode als Instanzmethode für ein beliebiges Objekt vom Typ <xref:System.Threading.Tasks.Task>abrufen. Bei Verwendung der Syntax für Instanzenmethoden lassen Sie den ersten Parameter aus. Weitere Informationen finden Sie unter [Erweiterungs Methoden (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) oder [Erweiterungs Methoden (C# Programmier Handbuch)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

Verwenden Sie diese Methode, wenn Sie eine Aufgabe übergeben möchten, die ein Ergebnis an eine Windows-Runtime Methode zurückgibt, die einen asynchronen Vorgang annimmt.

Die <xref:System.Runtime.InteropServices.WindowsRuntime.AsyncInfo>-Klasse stellt statische Methoden (`Shared` Methoden in Visual Basic) bereit, die Windows-Runtime asynchrone Vorgänge erstellen und starten, die Aufgaben darstellen, die Ergebnisse zurückgeben und auf Abbruch Anforderungen reagieren und den Fortschritt melden können.

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="source" /> ist ein nicht angefangener Vorgang.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsTask">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task AsTask (this Windows.Foundation.IAsyncAction source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task AsTask(class Windows.Foundation.IAsyncAction source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.AsTask(Windows.Foundation.IAsyncAction)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsTask (source As IAsyncAction) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task ^ AsTask(Windows::Foundation::IAsyncAction ^ source);" />
      <MemberSignature Language="F#" Value="static member AsTask : Windows.Foundation.IAsyncAction -&gt; System.Threading.Tasks.Task" Usage="System.WindowsRuntimeSystemExtensions.AsTask source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Windows.Foundation.IAsyncAction" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">Die asynchrone Aktion.</param>
        <summary>Gibt eine Aufgabe zurück, die eine asynchrone Windows-Runtime-Aktion darstellt.</summary>
        <returns>Eine Aufgabe, die die asynchrone Aktion darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> In Visual Basic und C#können Sie diese Methode als Instanzmethode für ein beliebiges Objekt vom Typ <xref:Windows.Foundation.IAsyncAction>abrufen. Bei Verwendung der Syntax für Instanzenmethoden lassen Sie den ersten Parameter aus. Weitere Informationen finden Sie unter [Erweiterungs Methoden (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) oder [Erweiterungs Methoden (C# Programmier Handbuch)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

Verwenden Sie diese Methode, um ein <xref:System.Threading.Tasks.Task>-Objekt für einen Windows-Runtime asynchronen Vorgang zu erhalten. <xref:System.Threading.Tasks.Task>-Objekte vereinfachen die Koordination asynchroner Vorgänge.

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsTask">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task AsTask (this Windows.Foundation.IAsyncAction source, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task AsTask(class Windows.Foundation.IAsyncAction source, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.AsTask(Windows.Foundation.IAsyncAction,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task ^ AsTask(Windows::Foundation::IAsyncAction ^ source, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="static member AsTask : Windows.Foundation.IAsyncAction * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="System.WindowsRuntimeSystemExtensions.AsTask (source, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Windows.Foundation.IAsyncAction" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="source">Die asynchrone Aktion.</param>
        <param name="cancellationToken">Ein Token, das verwendet werden kann, um den Abbruch des asynchronen Vorgangs anzufordern.</param>
        <summary>Gibt eine Aufgabe zurück, die eine asynchrone Windows-Runtime-Aktion darstellt, die abgebrochen werden kann.</summary>
        <returns>Eine Aufgabe, die die asynchrone Aktion darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks

> [!NOTE]
> In Visual Basic und C#können Sie diese Methode als Instanzmethode für ein beliebiges Objekt vom Typ <xref:Windows.Foundation.IAsyncAction>abrufen. Bei Verwendung der Syntax für Instanzenmethoden lassen Sie den ersten Parameter aus. Weitere Informationen finden Sie unter [Erweiterungs Methoden (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) oder [Erweiterungs Methoden (C# Programmier Handbuch)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

Verwenden Sie diese Methode, um ein <xref:System.Threading.Tasks.Task>-Objekt für einen Windows-Runtime asynchronen Vorgang zu erhalten. <xref:System.Threading.Tasks.Task>-Objekte vereinfachen die Koordination asynchroner Vorgänge.

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsTask&lt;TProgress&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task AsTask&lt;TProgress&gt; (this Windows.Foundation.IAsyncActionWithProgress&lt;TProgress&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task AsTask&lt;TProgress&gt;(class Windows.Foundation.IAsyncActionWithProgress`1&lt;!!TProgress&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.AsTask``1(Windows.Foundation.IAsyncActionWithProgress{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsTask(Of TProgress) (source As IAsyncActionWithProgress(Of TProgress)) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TProgress&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task ^ AsTask(Windows::Foundation::IAsyncActionWithProgress&lt;TProgress&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member AsTask : Windows.Foundation.IAsyncActionWithProgress&lt;'Progress&gt; -&gt; System.Threading.Tasks.Task" Usage="System.WindowsRuntimeSystemExtensions.AsTask source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProgress" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="Windows.Foundation.IAsyncActionWithProgress&lt;TProgress&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TProgress">Der Typ des Objekts, das Daten enthält, die den Status angeben.</typeparam>
        <param name="source">Die asynchrone Aktion.</param>
        <summary>Gibt eine Aufgabe zurück, die eine asynchrone Windows-Runtime-Aktion darstellt.</summary>
        <returns>Eine Aufgabe, die die asynchrone Aktion darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> In Visual Basic und C#können Sie diese Methode als Instanzmethode für ein beliebiges Objekt vom Typ <xref:Windows.Foundation.IAsyncActionWithProgress%601>abrufen. Bei Verwendung der Syntax für Instanzenmethoden lassen Sie den ersten Parameter aus. Weitere Informationen finden Sie unter [Erweiterungs Methoden (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) oder [Erweiterungs Methoden (C# Programmier Handbuch)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

Verwenden Sie diese Methode, um ein <xref:System.Threading.Tasks.Task>-Objekt für einen Windows-Runtime asynchronen Vorgang zu erhalten. <xref:System.Threading.Tasks.Task>-Objekte vereinfachen die Koordination asynchroner Vorgänge.

Das Aufrufen dieser Methoden Überladung entspricht dem Aufrufen der <xref:System.WindowsRuntimeSystemExtensions.AsTask%60%602(Windows.Foundation.IAsyncOperationWithProgress{%60%600,%60%601},System.IProgress{%60%601})>-Erweiterungs Methoden Überladung und der Angabe von <see langword="null" /> für den <paramref name="progress" />-Parameter. Dies ist hilfreich, wenn Sie keine Fortschrittsberichte von einer Aktion erhalten möchten, die den Fortschritt meldet.

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsTask&lt;TProgress&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task AsTask&lt;TProgress&gt; (this Windows.Foundation.IAsyncActionWithProgress&lt;TProgress&gt; source, IProgress&lt;TProgress&gt; progress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task AsTask&lt;TProgress&gt;(class Windows.Foundation.IAsyncActionWithProgress`1&lt;!!TProgress&gt; source, class System.IProgress`1&lt;!!TProgress&gt; progress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.AsTask``1(Windows.Foundation.IAsyncActionWithProgress{``0},System.IProgress{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsTask(Of TProgress) (source As IAsyncActionWithProgress(Of TProgress), progress As IProgress(Of TProgress)) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TProgress&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task ^ AsTask(Windows::Foundation::IAsyncActionWithProgress&lt;TProgress&gt; ^ source, IProgress&lt;TProgress&gt; ^ progress);" />
      <MemberSignature Language="F#" Value="static member AsTask : Windows.Foundation.IAsyncActionWithProgress&lt;'Progress&gt; * IProgress&lt;'Progress&gt; -&gt; System.Threading.Tasks.Task" Usage="System.WindowsRuntimeSystemExtensions.AsTask (source, progress)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProgress" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="Windows.Foundation.IAsyncActionWithProgress&lt;TProgress&gt;" RefType="this" />
        <Parameter Name="progress" Type="System.IProgress&lt;TProgress&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TProgress">Der Typ des Objekts, das Daten enthält, die den Status angeben.</typeparam>
        <param name="source">Die asynchrone Aktion.</param>
        <param name="progress">Ein Objekt, das Statusupdates empfängt.</param>
        <summary>Gibt eine Aufgabe zurück, die eine asynchrone Windows-Runtime-Aktion darstellt, die einen Bericht zum Fortschritt erstellt.</summary>
        <returns>Eine Aufgabe, die die asynchrone Aktion darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks

> [!NOTE]
> In Visual Basic und C#können Sie diese Methode als Instanzmethode für ein beliebiges Objekt vom Typ <xref:Windows.Foundation.IAsyncActionWithProgress%601>abrufen. Bei Verwendung der Syntax für Instanzenmethoden lassen Sie den ersten Parameter aus. Weitere Informationen finden Sie unter [Erweiterungs Methoden (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) oder [Erweiterungs Methoden (C# Programmier Handbuch)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

Verwenden Sie diese Methode, um ein <xref:System.Threading.Tasks.Task>-Objekt für einen Windows-Runtime asynchronen Vorgang zu erhalten. <xref:System.Threading.Tasks.Task>-Objekte vereinfachen die Koordination asynchroner Vorgänge.

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsTask&lt;TProgress&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task AsTask&lt;TProgress&gt; (this Windows.Foundation.IAsyncActionWithProgress&lt;TProgress&gt; source, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task AsTask&lt;TProgress&gt;(class Windows.Foundation.IAsyncActionWithProgress`1&lt;!!TProgress&gt; source, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.AsTask``1(Windows.Foundation.IAsyncActionWithProgress{``0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TProgress&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task ^ AsTask(Windows::Foundation::IAsyncActionWithProgress&lt;TProgress&gt; ^ source, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="static member AsTask : Windows.Foundation.IAsyncActionWithProgress&lt;'Progress&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="System.WindowsRuntimeSystemExtensions.AsTask (source, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProgress" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="Windows.Foundation.IAsyncActionWithProgress&lt;TProgress&gt;" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TProgress">Der Typ des Objekts, das Daten enthält, die den Status angeben.</typeparam>
        <param name="source">Die asynchrone Aktion.</param>
        <param name="cancellationToken">Ein Token, das verwendet werden kann, um den Abbruch des asynchronen Vorgangs anzufordern.</param>
        <summary>Gibt eine Aufgabe zurück, die eine asynchrone Windows-Runtime-Aktion darstellt, die abgebrochen werden kann.</summary>
        <returns>Eine Aufgabe, die die asynchrone Aktion darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks

> [!NOTE]
> In Visual Basic und C#können Sie diese Methode als Instanzmethode für ein beliebiges Objekt vom Typ <xref:Windows.Foundation.IAsyncActionWithProgress%601>abrufen. Bei Verwendung der Syntax für Instanzenmethoden lassen Sie den ersten Parameter aus. Weitere Informationen finden Sie unter [Erweiterungs Methoden (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) oder [Erweiterungs Methoden (C# Programmier Handbuch)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

Verwenden Sie diese Methode, um ein <xref:System.Threading.Tasks.Task>-Objekt für einen Windows-Runtime asynchronen Vorgang zu erhalten. <xref:System.Threading.Tasks.Task>-Objekte vereinfachen die Koordination asynchroner Vorgänge.

Das Aufrufen dieser Methoden Überladung entspricht dem Aufrufen der <xref:System.WindowsRuntimeSystemExtensions.AsTask%60%602(Windows.Foundation.IAsyncOperationWithProgress{%60%600,%60%601},System.Threading.CancellationToken,System.IProgress{%60%601})>-Erweiterungs Methoden Überladung und der Angabe von <see langword="null" /> für den <paramref name="progress" />-Parameter. Dies ist hilfreich, wenn Sie keine Fortschrittsberichte von einer Aktion erhalten möchten, die den Fortschritt meldet.

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsTask&lt;TProgress&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task AsTask&lt;TProgress&gt; (this Windows.Foundation.IAsyncActionWithProgress&lt;TProgress&gt; source, System.Threading.CancellationToken cancellationToken, IProgress&lt;TProgress&gt; progress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task AsTask&lt;TProgress&gt;(class Windows.Foundation.IAsyncActionWithProgress`1&lt;!!TProgress&gt; source, valuetype System.Threading.CancellationToken cancellationToken, class System.IProgress`1&lt;!!TProgress&gt; progress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.AsTask``1(Windows.Foundation.IAsyncActionWithProgress{``0},System.Threading.CancellationToken,System.IProgress{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TProgress&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task ^ AsTask(Windows::Foundation::IAsyncActionWithProgress&lt;TProgress&gt; ^ source, System::Threading::CancellationToken cancellationToken, IProgress&lt;TProgress&gt; ^ progress);" />
      <MemberSignature Language="F#" Value="static member AsTask : Windows.Foundation.IAsyncActionWithProgress&lt;'Progress&gt; * System.Threading.CancellationToken * IProgress&lt;'Progress&gt; -&gt; System.Threading.Tasks.Task" Usage="System.WindowsRuntimeSystemExtensions.AsTask (source, cancellationToken, progress)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProgress" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="Windows.Foundation.IAsyncActionWithProgress&lt;TProgress&gt;" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="progress" Type="System.IProgress&lt;TProgress&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TProgress">Der Typ des Objekts, das Daten enthält, die den Status angeben.</typeparam>
        <param name="source">Die asynchrone Aktion.</param>
        <param name="cancellationToken">Ein Token, das verwendet werden kann, um den Abbruch des asynchronen Vorgangs anzufordern.</param>
        <param name="progress">Ein Objekt, das Statusupdates empfängt.</param>
        <summary>Gibt eine Aufgabe zurück, die eine asynchrone Windows-Runtime-Aktion darstellt, die den Status berichtet und abgebrochen werden kann.</summary>
        <returns>Eine Aufgabe, die die asynchrone Aktion darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks

> [!NOTE]
> In Visual Basic und C#können Sie diese Methode als Instanzmethode für ein beliebiges Objekt vom Typ <xref:Windows.Foundation.IAsyncActionWithProgress%601>abrufen. Bei Verwendung der Syntax für Instanzenmethoden lassen Sie den ersten Parameter aus. Weitere Informationen finden Sie unter [Erweiterungs Methoden (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) oder [Erweiterungs Methoden (C# Programmier Handbuch)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

Verwenden Sie diese Methode, um ein <xref:System.Threading.Tasks.Task>-Objekt für einen Windows-Runtime asynchronen Vorgang zu erhalten. <xref:System.Threading.Tasks.Task>-Objekte vereinfachen die Koordination asynchroner Vorgänge.

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsTask&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;TResult&gt; AsTask&lt;TResult&gt; (this Windows.Foundation.IAsyncOperation&lt;TResult&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!TResult&gt; AsTask&lt;TResult&gt;(class Windows.Foundation.IAsyncOperation`1&lt;!!TResult&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.AsTask``1(Windows.Foundation.IAsyncOperation{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsTask(Of TResult) (source As IAsyncOperation(Of TResult)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;TResult&gt; ^ AsTask(Windows::Foundation::IAsyncOperation&lt;TResult&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member AsTask : Windows.Foundation.IAsyncOperation&lt;'Result&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="System.WindowsRuntimeSystemExtensions.AsTask source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="Windows.Foundation.IAsyncOperation&lt;TResult&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">Der Typ des Objekts, das das Ergebnis des asynchronen Vorgangs zurückgibt.</typeparam>
        <param name="source">Der asynchronen Vorgang.</param>
        <summary>Gibt eine Aufgabe zurück, die einen asynchronen Windows-Runtime-Vorgang darstellt, der ein Ergebnis zurückgibt.</summary>
        <returns>Eine Aufgabe, die den asynchronen Vorgang darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks

> [!NOTE]
> In Visual Basic und C#können Sie diese Methode als Instanzmethode für ein beliebiges Objekt vom Typ <xref:Windows.Foundation.IAsyncActionWithProgress%601>abrufen. Bei Verwendung der Syntax für Instanzenmethoden lassen Sie den ersten Parameter aus. Weitere Informationen finden Sie unter [Erweiterungs Methoden (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) oder [Erweiterungs Methoden (C# Programmier Handbuch)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

Verwenden Sie diese Methode, um ein <xref:System.Threading.Tasks.Task%601>-Objekt für einen Windows-Runtime asynchronen Vorgang zu erhalten. <xref:System.Threading.Tasks.Task%601>-Objekte vereinfachen die Koordination asynchroner Vorgänge.

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsTask&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;TResult&gt; AsTask&lt;TResult&gt; (this Windows.Foundation.IAsyncOperation&lt;TResult&gt; source, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!TResult&gt; AsTask&lt;TResult&gt;(class Windows.Foundation.IAsyncOperation`1&lt;!!TResult&gt; source, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.AsTask``1(Windows.Foundation.IAsyncOperation{``0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;TResult&gt; ^ AsTask(Windows::Foundation::IAsyncOperation&lt;TResult&gt; ^ source, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="static member AsTask : Windows.Foundation.IAsyncOperation&lt;'Result&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="System.WindowsRuntimeSystemExtensions.AsTask (source, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="Windows.Foundation.IAsyncOperation&lt;TResult&gt;" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">Der Typ des Objekts, das das Ergebnis des asynchronen Vorgangs zurückgibt.</typeparam>
        <param name="source">Der asynchronen Vorgang.</param>
        <param name="cancellationToken">Ein Token, das verwendet werden kann, um den Abbruch des asynchronen Vorgangs anzufordern.</param>
        <summary>Gibt eine Aufgabe zurück, die einen asynchronen Windows-Runtime-Vorgang darstellt, der ein Ergebnis zurückgibt und abgebrochen werden kann.</summary>
        <returns>Eine Aufgabe, die den asynchronen Vorgang darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks

> [!NOTE]
> In Visual Basic und C#können Sie diese Methode als Instanzmethode für ein beliebiges Objekt vom Typ <xref:Windows.Foundation.IAsyncActionWithProgress%601>abrufen. Bei Verwendung der Syntax für Instanzenmethoden lassen Sie den ersten Parameter aus. Weitere Informationen finden Sie unter [Erweiterungs Methoden (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) oder [Erweiterungs Methoden (C# Programmier Handbuch)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

Verwenden Sie diese Methode, um ein <xref:System.Threading.Tasks.Task%601>-Objekt für einen Windows-Runtime asynchronen Vorgang zu erhalten. <xref:System.Threading.Tasks.Task%601>-Objekte vereinfachen die Koordination asynchroner Vorgänge.

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsTask&lt;TResult,TProgress&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;TResult&gt; AsTask&lt;TResult,TProgress&gt; (this Windows.Foundation.IAsyncOperationWithProgress&lt;TResult,TProgress&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!TResult&gt; AsTask&lt;TResult, TProgress&gt;(class Windows.Foundation.IAsyncOperationWithProgress`2&lt;!!TResult, !!TProgress&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.AsTask``2(Windows.Foundation.IAsyncOperationWithProgress{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsTask(Of TResult, TProgress) (source As IAsyncOperationWithProgress(Of TResult, TProgress)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult, typename TProgress&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;TResult&gt; ^ AsTask(Windows::Foundation::IAsyncOperationWithProgress&lt;TResult, TProgress&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member AsTask : Windows.Foundation.IAsyncOperationWithProgress&lt;'Result, 'Progress&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="System.WindowsRuntimeSystemExtensions.AsTask source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
        <TypeParameter Name="TProgress" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="Windows.Foundation.IAsyncOperationWithProgress&lt;TResult,TProgress&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">Der Typ des Objekts, das das Ergebnis des asynchronen Vorgangs zurückgibt.</typeparam>
        <typeparam name="TProgress">Der Typ des Objekts, das Daten enthält, die den Status angeben.</typeparam>
        <param name="source">Der asynchronen Vorgang.</param>
        <summary>Gibt eine Aufgabe zurück, die einen asynchronen Windows-Runtime-Vorgang darstellt, der ein Ergebnis zurückgibt.</summary>
        <returns>Eine Aufgabe, die den asynchronen Vorgang darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> In Visual Basic und C#können Sie diese Methode als Instanzmethode für ein beliebiges Objekt vom Typ <xref:Windows.Foundation.IAsyncOperationWithProgress%602>abrufen. Bei Verwendung der Syntax für Instanzenmethoden lassen Sie den ersten Parameter aus. Weitere Informationen finden Sie unter [Erweiterungs Methoden (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) oder [Erweiterungs Methoden (C# Programmier Handbuch)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

Verwenden Sie diese Methode, um ein <xref:System.Threading.Tasks.Task%601>-Objekt für einen Windows-Runtime asynchronen Vorgang zu erhalten. <xref:System.Threading.Tasks.Task%601>-Objekte vereinfachen die Koordination asynchroner Vorgänge. 

Das Aufrufen dieser Methoden Überladung entspricht dem Aufrufen der <xref:System.WindowsRuntimeSystemExtensions.AsTask%60%602(Windows.Foundation.IAsyncOperationWithProgress{%60%600,%60%601},System.IProgress{%60%601})>-Erweiterungs Methoden Überladung und der Angabe von <see langword="null" /> für den <paramref name="progress" />-Parameter. Dies ist hilfreich, wenn Sie keine Fortschrittsberichte von einer Aktion erhalten möchten, die den Fortschritt meldet.

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsTask&lt;TResult,TProgress&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;TResult&gt; AsTask&lt;TResult,TProgress&gt; (this Windows.Foundation.IAsyncOperationWithProgress&lt;TResult,TProgress&gt; source, IProgress&lt;TProgress&gt; progress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!TResult&gt; AsTask&lt;TResult, TProgress&gt;(class Windows.Foundation.IAsyncOperationWithProgress`2&lt;!!TResult, !!TProgress&gt; source, class System.IProgress`1&lt;!!TProgress&gt; progress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.AsTask``2(Windows.Foundation.IAsyncOperationWithProgress{``0,``1},System.IProgress{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsTask(Of TResult, TProgress) (source As IAsyncOperationWithProgress(Of TResult, TProgress), progress As IProgress(Of TProgress)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult, typename TProgress&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;TResult&gt; ^ AsTask(Windows::Foundation::IAsyncOperationWithProgress&lt;TResult, TProgress&gt; ^ source, IProgress&lt;TProgress&gt; ^ progress);" />
      <MemberSignature Language="F#" Value="static member AsTask : Windows.Foundation.IAsyncOperationWithProgress&lt;'Result, 'Progress&gt; * IProgress&lt;'Progress&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="System.WindowsRuntimeSystemExtensions.AsTask (source, progress)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
        <TypeParameter Name="TProgress" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="Windows.Foundation.IAsyncOperationWithProgress&lt;TResult,TProgress&gt;" RefType="this" />
        <Parameter Name="progress" Type="System.IProgress&lt;TProgress&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">Der Typ des Objekts, das das Ergebnis des asynchronen Vorgangs zurückgibt.</typeparam>
        <typeparam name="TProgress">Der Typ des Objekts, das Daten enthält, die den Status angeben.</typeparam>
        <param name="source">Der asynchronen Vorgang.</param>
        <param name="progress">Ein Objekt, das Statusupdates empfängt.</param>
        <summary>Gibt eine Aufgabe zurück, die einen asynchronen Windows-Runtime-Vorgang darstellt, der ein Ergebnis zurückgibt und einen Bericht zum Fortschritt erstellt.</summary>
        <returns>Eine Aufgabe, die den asynchronen Vorgang darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> In Visual Basic und C#können Sie diese Methode als Instanzmethode für ein beliebiges Objekt vom Typ <xref:Windows.Foundation.IAsyncOperationWithProgress%602>abrufen. Bei Verwendung der Syntax für Instanzenmethoden lassen Sie den ersten Parameter aus. Weitere Informationen finden Sie unter [Erweiterungs Methoden (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) oder [Erweiterungs Methoden (C# Programmier Handbuch)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

Verwenden Sie diese Methode, um ein <xref:System.Threading.Tasks.Task%601>-Objekt für einen Windows-Runtime asynchronen Vorgang zu erhalten. <xref:System.Threading.Tasks.Task%601>-Objekte vereinfachen die Koordination asynchroner Vorgänge.

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsTask&lt;TResult,TProgress&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;TResult&gt; AsTask&lt;TResult,TProgress&gt; (this Windows.Foundation.IAsyncOperationWithProgress&lt;TResult,TProgress&gt; source, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!TResult&gt; AsTask&lt;TResult, TProgress&gt;(class Windows.Foundation.IAsyncOperationWithProgress`2&lt;!!TResult, !!TProgress&gt; source, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.AsTask``2(Windows.Foundation.IAsyncOperationWithProgress{``0,``1},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult, typename TProgress&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;TResult&gt; ^ AsTask(Windows::Foundation::IAsyncOperationWithProgress&lt;TResult, TProgress&gt; ^ source, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="static member AsTask : Windows.Foundation.IAsyncOperationWithProgress&lt;'Result, 'Progress&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="System.WindowsRuntimeSystemExtensions.AsTask (source, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
        <TypeParameter Name="TProgress" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="Windows.Foundation.IAsyncOperationWithProgress&lt;TResult,TProgress&gt;" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">Der Typ des Objekts, das das Ergebnis des asynchronen Vorgangs zurückgibt.</typeparam>
        <typeparam name="TProgress">Der Typ des Objekts, das Daten enthält, die den Status angeben.</typeparam>
        <param name="source">Der asynchronen Vorgang.</param>
        <param name="cancellationToken">Ein Token, das verwendet werden kann, um den Abbruch des asynchronen Vorgangs anzufordern.</param>
        <summary>Gibt eine Aufgabe zurück, die einen asynchronen Windows-Runtime-Vorgang darstellt, der ein Ergebnis zurückgibt und abgebrochen werden kann.</summary>
        <returns>Eine Aufgabe, die den asynchronen Vorgang darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> In Visual Basic und C#können Sie diese Methode als Instanzmethode für ein beliebiges Objekt vom Typ <xref:Windows.Foundation.IAsyncOperationWithProgress%602>abrufen. Bei Verwendung der Syntax für Instanzenmethoden lassen Sie den ersten Parameter aus. Weitere Informationen finden Sie unter [Erweiterungs Methoden (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) oder [Erweiterungs Methoden (C# Programmier Handbuch)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

Verwenden Sie diese Methode, um ein <xref:System.Threading.Tasks.Task%601>-Objekt für einen Windows-Runtime asynchronen Vorgang zu erhalten. <xref:System.Threading.Tasks.Task%601>-Objekte vereinfachen die Koordination asynchroner Vorgänge.

Das Aufrufen dieser Methoden Überladung entspricht dem Aufrufen der <xref:System.WindowsRuntimeSystemExtensions.AsTask%60%602(Windows.Foundation.IAsyncOperationWithProgress{%60%600,%60%601},System.Threading.CancellationToken,System.IProgress{%60%601})>-Erweiterungs Methoden Überladung und der Angabe von <see langword="null" /> für den <paramref name="progress" />-Parameter. Dies ist hilfreich, wenn Sie keine Fortschrittsberichte von einer Aktion erhalten möchten, die den Fortschritt meldet.

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsTask&lt;TResult,TProgress&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;TResult&gt; AsTask&lt;TResult,TProgress&gt; (this Windows.Foundation.IAsyncOperationWithProgress&lt;TResult,TProgress&gt; source, System.Threading.CancellationToken cancellationToken, IProgress&lt;TProgress&gt; progress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!TResult&gt; AsTask&lt;TResult, TProgress&gt;(class Windows.Foundation.IAsyncOperationWithProgress`2&lt;!!TResult, !!TProgress&gt; source, valuetype System.Threading.CancellationToken cancellationToken, class System.IProgress`1&lt;!!TProgress&gt; progress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.AsTask``2(Windows.Foundation.IAsyncOperationWithProgress{``0,``1},System.Threading.CancellationToken,System.IProgress{``1})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult, typename TProgress&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;TResult&gt; ^ AsTask(Windows::Foundation::IAsyncOperationWithProgress&lt;TResult, TProgress&gt; ^ source, System::Threading::CancellationToken cancellationToken, IProgress&lt;TProgress&gt; ^ progress);" />
      <MemberSignature Language="F#" Value="static member AsTask : Windows.Foundation.IAsyncOperationWithProgress&lt;'Result, 'Progress&gt; * System.Threading.CancellationToken * IProgress&lt;'Progress&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="System.WindowsRuntimeSystemExtensions.AsTask (source, cancellationToken, progress)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
        <TypeParameter Name="TProgress" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="Windows.Foundation.IAsyncOperationWithProgress&lt;TResult,TProgress&gt;" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="progress" Type="System.IProgress&lt;TProgress&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">Der Typ des Objekts, das das Ergebnis des asynchronen Vorgangs zurückgibt.</typeparam>
        <typeparam name="TProgress">Der Typ des Objekts, das Daten enthält, die den Status angeben.</typeparam>
        <param name="source">Der asynchronen Vorgang.</param>
        <param name="cancellationToken">Ein Token, das verwendet werden kann, um den Abbruch des asynchronen Vorgangs anzufordern.</param>
        <param name="progress">Ein Objekt, das Statusupdates empfängt.</param>
        <summary>Gibt eine Aufgabe zurück, die einen asynchronen Windows-Runtime-Vorgang darstellt, der ein Ergebnis zurückgibt, einen Bericht zum Fortschritt erstellt und abgebrochen werden kann.</summary>
        <returns>Eine Aufgabe, die den asynchronen Vorgang darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> In Visual Basic und C#können Sie diese Methode als Instanzmethode für ein beliebiges Objekt vom Typ <xref:Windows.Foundation.IAsyncOperationWithProgress%602>abrufen. Bei Verwendung der Syntax für Instanzenmethoden lassen Sie den ersten Parameter aus. Weitere Informationen finden Sie unter [Erweiterungs Methoden (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) oder [Erweiterungs Methoden (C# Programmier Handbuch)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

Verwenden Sie diese Methode, um ein <xref:System.Threading.Tasks.Task%601>-Objekt für einen Windows-Runtime asynchronen Vorgang zu erhalten. <xref:System.Threading.Tasks.Task%601>-Objekte vereinfachen die Koordination asynchroner Vorgänge.

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAwaiter">
      <MemberSignature Language="C#" Value="public static System.Runtime.CompilerServices.TaskAwaiter GetAwaiter (this Windows.Foundation.IAsyncAction source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.CompilerServices.TaskAwaiter GetAwaiter(class Windows.Foundation.IAsyncAction source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.GetAwaiter(Windows.Foundation.IAsyncAction)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAwaiter (source As IAsyncAction) As TaskAwaiter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Runtime::CompilerServices::TaskAwaiter GetAwaiter(Windows::Foundation::IAsyncAction ^ source);" />
      <MemberSignature Language="F#" Value="static member GetAwaiter : Windows.Foundation.IAsyncAction -&gt; System.Runtime.CompilerServices.TaskAwaiter" Usage="System.WindowsRuntimeSystemExtensions.GetAwaiter source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.CompilerServices.TaskAwaiter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Windows.Foundation.IAsyncAction" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">Die asynchrone, zu erwartende Aktion.</param>
        <summary>Diese API unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code bestimmt.</summary>
        <returns>Ein Objekt, das die angegebene asynchrone Aktion erwartet.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> In Visual Basic und C#können Sie diese Methode als Instanzmethode für ein beliebiges Objekt vom Typ iasyncaction abrufen. Bei Verwendung der Syntax für Instanzenmethoden lassen Sie den ersten Parameter aus. Weitere Informationen finden Sie unter [Erweiterungs Methoden (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) oder [Erweiterungs Methoden (C# Programmier Handbuch)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAwaiter&lt;TProgress&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.CompilerServices.TaskAwaiter GetAwaiter&lt;TProgress&gt; (this Windows.Foundation.IAsyncActionWithProgress&lt;TProgress&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.CompilerServices.TaskAwaiter GetAwaiter&lt;TProgress&gt;(class Windows.Foundation.IAsyncActionWithProgress`1&lt;!!TProgress&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.GetAwaiter``1(Windows.Foundation.IAsyncActionWithProgress{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAwaiter(Of TProgress) (source As IAsyncActionWithProgress(Of TProgress)) As TaskAwaiter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TProgress&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Runtime::CompilerServices::TaskAwaiter GetAwaiter(Windows::Foundation::IAsyncActionWithProgress&lt;TProgress&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member GetAwaiter : Windows.Foundation.IAsyncActionWithProgress&lt;'Progress&gt; -&gt; System.Runtime.CompilerServices.TaskAwaiter" Usage="System.WindowsRuntimeSystemExtensions.GetAwaiter source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.CompilerServices.TaskAwaiter</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProgress" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="Windows.Foundation.IAsyncActionWithProgress&lt;TProgress&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TProgress">Der Typ des Objekts, das Daten enthält, die den Status angeben.</typeparam>
        <param name="source">Die asynchrone, zu erwartende Aktion.</param>
        <summary>Gibt ein Objekt zurück, das eine asynchrone Aktion erwartet, die den Status berichtet.</summary>
        <returns>Ein Objekt, das die angegebene asynchrone Aktion erwartet.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> In Visual Basic und C#können Sie diese Methode als Instanzmethode für ein beliebiges Objekt vom Typ <xref:Windows.Foundation.IAsyncActionWithProgress%601>abrufen. Bei Verwendung der Syntax für Instanzenmethoden lassen Sie den ersten Parameter aus. Weitere Informationen finden Sie unter [Erweiterungs Methoden (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) oder [Erweiterungs Methoden (C# Programmier Handbuch)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAwaiter&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.CompilerServices.TaskAwaiter&lt;TResult&gt; GetAwaiter&lt;TResult&gt; (this Windows.Foundation.IAsyncOperation&lt;TResult&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.CompilerServices.TaskAwaiter`1&lt;!!TResult&gt; GetAwaiter&lt;TResult&gt;(class Windows.Foundation.IAsyncOperation`1&lt;!!TResult&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.GetAwaiter``1(Windows.Foundation.IAsyncOperation{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAwaiter(Of TResult) (source As IAsyncOperation(Of TResult)) As TaskAwaiter(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Runtime::CompilerServices::TaskAwaiter&lt;TResult&gt; GetAwaiter(Windows::Foundation::IAsyncOperation&lt;TResult&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member GetAwaiter : Windows.Foundation.IAsyncOperation&lt;'Result&gt; -&gt; System.Runtime.CompilerServices.TaskAwaiter&lt;'Result&gt;" Usage="System.WindowsRuntimeSystemExtensions.GetAwaiter source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.CompilerServices.TaskAwaiter&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="Windows.Foundation.IAsyncOperation&lt;TResult&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">Der Typ des Objekts, das das Ergebnis des asynchronen Vorgangs zurückgibt.</typeparam>
        <param name="source">Der zu erwartende asynchrone Vorgang.</param>
        <summary>Gibt ein Objekt zurück, das einen asynchronen Vorgang erwartet, der ein Ergebnis zurückgibt.</summary>
        <returns>Ein Objekt, das den angegebenen asynchronen Vorgang erwartet.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> In Visual Basic und C#können Sie diese Methode als Instanzmethode für ein beliebiges Objekt vom Typ iasyncoperation<TResult>abrufen. Bei Verwendung der Syntax für Instanzenmethoden lassen Sie den ersten Parameter aus. Weitere Informationen finden Sie unter [Erweiterungs Methoden (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) oder [Erweiterungs Methoden (C# Programmier Handbuch)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAwaiter&lt;TResult,TProgress&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.CompilerServices.TaskAwaiter&lt;TResult&gt; GetAwaiter&lt;TResult,TProgress&gt; (this Windows.Foundation.IAsyncOperationWithProgress&lt;TResult,TProgress&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.CompilerServices.TaskAwaiter`1&lt;!!TResult&gt; GetAwaiter&lt;TResult, TProgress&gt;(class Windows.Foundation.IAsyncOperationWithProgress`2&lt;!!TResult, !!TProgress&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.GetAwaiter``2(Windows.Foundation.IAsyncOperationWithProgress{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAwaiter(Of TResult, TProgress) (source As IAsyncOperationWithProgress(Of TResult, TProgress)) As TaskAwaiter(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult, typename TProgress&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Runtime::CompilerServices::TaskAwaiter&lt;TResult&gt; GetAwaiter(Windows::Foundation::IAsyncOperationWithProgress&lt;TResult, TProgress&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member GetAwaiter : Windows.Foundation.IAsyncOperationWithProgress&lt;'Result, 'Progress&gt; -&gt; System.Runtime.CompilerServices.TaskAwaiter&lt;'Result&gt;" Usage="System.WindowsRuntimeSystemExtensions.GetAwaiter source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.CompilerServices.TaskAwaiter&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
        <TypeParameter Name="TProgress" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="Windows.Foundation.IAsyncOperationWithProgress&lt;TResult,TProgress&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">Der Typ des Objekts, das das Ergebnis des asynchronen Vorgangs zurückgibt.</typeparam>
        <typeparam name="TProgress">Der Typ des Objekts, das Daten enthält, die den Status angeben.</typeparam>
        <param name="source">Der zu erwartende asynchrone Vorgang.</param>
        <summary>Gibt ein Objekt zurück, das einen asynchronen Vorgang erwartet, der den Status berichtet und ein Ergebnis zurückgibt.</summary>
        <returns>Ein Objekt, das den angegebenen asynchronen Vorgang erwartet.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> In Visual Basic und C#können Sie diese Methode als Instanzmethode für ein beliebiges Objekt vom Typ <xref:Windows.Foundation.IAsyncOperationWithProgress%602>abrufen. Bei Verwendung der Syntax für Instanzenmethoden lassen Sie den ersten Parameter aus. Weitere Informationen finden Sie unter [Erweiterungs Methoden (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) oder [Erweiterungs Methoden (C# Programmier Handbuch)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
