<Type Name="Range" FullName="System.Range">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b4d01a2c8b584f25e7514a4e151a5a812317ee93" /><Meta Name="ms.sourcegitcommit" Value="5c332e8417c001736f7e2f33a84791feebba2cd7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/30/2019" /><Meta Name="ms.locfileid" Value="68632633" /></Metadata><TypeSignature Language="C#" Value="public struct Range : IEquatable&lt;Range&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit Range extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Range&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Range" />
  <TypeSignature Language="VB.NET" Value="Public Structure Range&#xA;Implements IEquatable(Of Range)" />
  <TypeSignature Language="C++ CLI" Value="public value class Range : IEquatable&lt;Range&gt;" />
  <TypeSignature Language="F#" Value="type Range = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Range&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ebace-101">Stellt einen Bereich mit Anfangs- und Endindizes dar.</span><span class="sxs-lookup"><span data-stu-id="ebace-101">Represents a range that has start and end indexes.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

### Remarks

<span data-ttu-id="ebace-102">`Range`wird vom C# Compiler verwendet, um die Bereichs Syntax zu unterstützen:</span><span class="sxs-lookup"><span data-stu-id="ebace-102">`Range` is used by the C# compiler to support the range syntax:</span></span>

```csharp
    int[] someArray = new int[5] { 1, 2, 3, 4, 5 };
    int[] subArray1 = someArray[0..2];               // { 1, 2 }
    int[] subArray2 = someArray[1..^0];              // { 2, 3, 4, 5 }
```

          ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Range (Index start, Index end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Index start, valuetype System.Index end) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Range.#ctor(System.Index,System.Index)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (start As Index, end As Index)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Range(Index start, Index end);" />
      <MemberSignature Language="F#" Value="new Range : Index * Index -&gt; Range" Usage="new System.Range (start, end)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="start" Type="System.Index" />
        <Parameter Name="end" Type="System.Index" />
      </Parameters>
      <Docs>
        <param name="start"><span data-ttu-id="ebace-103">Der inklusive Anfangsindex des Bereichs.</span><span class="sxs-lookup"><span data-stu-id="ebace-103">The inclusive start index of the range.</span></span></param>
        <param name="end"><span data-ttu-id="ebace-104">Der exklusive Endindex des Bereichs.</span><span class="sxs-lookup"><span data-stu-id="ebace-104">The exclusive end index of the range.</span></span></param>
        <summary><span data-ttu-id="ebace-105">Instanziiert eine neue <see cref="T:System.Range" />-Instanz mit den angegebenen Anfangs- und Endindizes.</span><span class="sxs-lookup"><span data-stu-id="ebace-105">Instantiates a new <see cref="T:System.Range" /> instance with the specified starting and ending indexes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="All">
      <MemberSignature Language="C#" Value="public static Range All { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Range All" />
      <MemberSignature Language="DocId" Value="P:System.Range.All" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property All As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Range All { Range get(); };" />
      <MemberSignature Language="F#" Value="member this.All : Range" Usage="System.Range.All" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ebace-106">Ruft ein <see cref="T:System.Range" />-Objekt ab, das beim ersten Element beginnt und bis zum Ende durchläuft.</span><span class="sxs-lookup"><span data-stu-id="ebace-106">Gets a <see cref="T:System.Range" /> object that starts from the first element to the end.</span></span></summary>
        <value><span data-ttu-id="ebace-107">Ein Bereich vom Anfang bis zum Ende.</span><span class="sxs-lookup"><span data-stu-id="ebace-107">A range from the start to the end.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="End">
      <MemberSignature Language="C#" Value="public Index End { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Index End" />
      <MemberSignature Language="DocId" Value="P:System.Range.End" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property End As Index" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Index End { Index get(); };" />
      <MemberSignature Language="F#" Value="member this.End : Index" Usage="System.Range.End" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Index</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ebace-108">Ruft ein <see cref="T:System.Index" />-Objekt ab, das den exklusiven Endindex des Bereichs darstellt.</span><span class="sxs-lookup"><span data-stu-id="ebace-108">Gets an <see cref="T:System.Index" /> that represents the exclusive end index of the range.</span></span></summary>
        <value><span data-ttu-id="ebace-109">Der Endindex des Bereichs.</span><span class="sxs-lookup"><span data-stu-id="ebace-109">The end index of the range.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndAt">
      <MemberSignature Language="C#" Value="public static Range EndAt (Index end);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Range EndAt(valuetype System.Index end) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Range.EndAt(System.Index)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndAt (end As Index) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Range EndAt(Index end);" />
      <MemberSignature Language="F#" Value="static member EndAt : Index -&gt; Range" Usage="System.Range.EndAt end" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="end" Type="System.Index" />
      </Parameters>
      <Docs>
        <param name="end"><span data-ttu-id="ebace-110">Die Position des letzten Elements, bis zu dem das <see cref="T:System.Range" />-Objekt erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="ebace-110">The position of the last element up to which the <see cref="T:System.Range" /> object will be created.</span></span></param>
        <summary><span data-ttu-id="ebace-111">Erstellt ein <see cref="T:System.Range" />-Objekt, das beim ersten Element in der Sammlung beginnt und beim angegebenen Endindex endet.</span><span class="sxs-lookup"><span data-stu-id="ebace-111">Creates a <see cref="T:System.Range" /> object starting from the first element in the collection to a specified end index.</span></span></summary>
        <returns><span data-ttu-id="ebace-112">Ein Bereich, der beim ersten Element beginnt und bei <paramref name="end" /> endet.</span><span class="sxs-lookup"><span data-stu-id="ebace-112">A range that starts from the first element to <paramref name="end" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Range.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="range.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ebace-113">Ein Objekt, das mit diesem Range-Objekt verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="ebace-113">An object to compare with this Range object.</span></span></param>
        <summary><span data-ttu-id="ebace-114">Gibt einen Wert zurück, der angibt, ob die aktuelle Instanz dem angegebenen Objekt gleicht.</span><span class="sxs-lookup"><span data-stu-id="ebace-114">Returns a value that indicates whether the current instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="ebace-115"><see langword="true" />, wenn <paramref name="value" /> den Typ <see cref="T:System.Range" /> aufweist und der aktuellen Instanz gleicht, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ebace-115"><see langword="true" /> if <paramref name="value" /> is of type <see cref="T:System.Range" /> and is equal to the current instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Range other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Range other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Range.Equals(System.Range)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Range) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(Range other);" />
      <MemberSignature Language="F#" Value="override this.Equals : Range -&gt; bool" Usage="range.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Range" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="ebace-116">Ein Range-Objekt, das mit diesem Range-Objekt verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="ebace-116">A Range object to compare with this Range object.</span></span></param>
        <summary><span data-ttu-id="ebace-117">Gibt einen Wert zurück, der angibt, ob die aktuelle Instanz einem anderen <see cref="T:System.Range" />-Objekt gleicht.</span><span class="sxs-lookup"><span data-stu-id="ebace-117">Returns a value that indicates whether the current instance is equal to another <see cref="T:System.Range" /> object.</span></span></summary>
        <returns><span data-ttu-id="ebace-118"><see langword="true" />, wenn die aktuelle Instanz <paramref name="other" /> gleicht, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ebace-118"><see langword="true" /> if the current instance is equal to <paramref name="other" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Range.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="range.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ebace-119">Gibt den Hashcode für diese Instanz zurück.</span><span class="sxs-lookup"><span data-stu-id="ebace-119">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="ebace-120">Der Hashcode.</span><span class="sxs-lookup"><span data-stu-id="ebace-120">The hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOffsetAndLength">
      <MemberSignature Language="C#" Value="public Range.OffsetAndLength GetOffsetAndLength (int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Range/OffsetAndLength GetOffsetAndLength(int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Range.GetOffsetAndLength(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOffsetAndLength (length As Integer) As Range.OffsetAndLength" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Range::OffsetAndLength GetOffsetAndLength(int length);" />
      <MemberSignature Language="F#" Value="member this.GetOffsetAndLength : int -&gt; Range.OffsetAndLength" Usage="range.GetOffsetAndLength length" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Range+OffsetAndLength</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" Index="0" FrameworkAlternate="netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="length"><span data-ttu-id="ebace-121">Ein positiver Integer, der die Länge der Sammlung darstellt, mit der der Bereich verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="ebace-121">A positive integer that represents the length of the collection that the range will be used with.</span></span></param>
        <summary><span data-ttu-id="ebace-122">Gibt eine <see cref="T:System.Range.OffsetAndLength" />-Instanz mit dem Startoffset und der Länge eines Bereichs zurück.</span><span class="sxs-lookup"><span data-stu-id="ebace-122">Returns a <see cref="T:System.Range.OffsetAndLength" /> instance with the starting offset and length of a range.</span></span></summary>
        <returns><span data-ttu-id="ebace-123">Der Startoffset und die Länge des Bereichs.</span><span class="sxs-lookup"><span data-stu-id="ebace-123">The starting offset and length of the range.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="ebace-124">Aus Leistungsgründen wird diese Methode `length` nicht überprüft, um sicherzustellen, dass Sie nicht negativ ist.</span><span class="sxs-lookup"><span data-stu-id="ebace-124">For performance reasons, this method does't validate `length` to ensure that it is not negative.</span></span> <span data-ttu-id="ebace-125">Dadurch wird sichergestellt `length` , dass sich innerhalb `Range` der aktuellen Instanz befindet.</span><span class="sxs-lookup"><span data-stu-id="ebace-125">It does ensure that `length` is within the current `Range` instance.</span></span> 

            ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ebace-126"><paramref name="length" /> liegt außerhalb der Grenzen des aktuellen Bereichs.</span><span class="sxs-lookup"><span data-stu-id="ebace-126"><paramref name="length" /> is outside the bounds of the current range.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public Index Start { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Index Start" />
      <MemberSignature Language="DocId" Value="P:System.Range.Start" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Start As Index" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Index Start { Index get(); };" />
      <MemberSignature Language="F#" Value="member this.Start : Index" Usage="System.Range.Start" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Index</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ebace-127">Ruft den inklusiven Anfangsindex von <see cref="T:System.Range" /> ab.</span><span class="sxs-lookup"><span data-stu-id="ebace-127">Gets the inclusive start index of the <see cref="T:System.Range" />.</span></span></summary>
        <value><span data-ttu-id="ebace-128">Der inklusive Anfangsindex des Bereichs.</span><span class="sxs-lookup"><span data-stu-id="ebace-128">The inclusive start index of the range.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartAt">
      <MemberSignature Language="C#" Value="public static Range StartAt (Index start);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Range StartAt(valuetype System.Index start) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Range.StartAt(System.Index)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StartAt (start As Index) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Range StartAt(Index start);" />
      <MemberSignature Language="F#" Value="static member StartAt : Index -&gt; Range" Usage="System.Range.StartAt start" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Index" />
      </Parameters>
      <Docs>
        <param name="start"><span data-ttu-id="ebace-129">Die Position des ersten Elements, ab dem das Range-Objekt erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="ebace-129">The position of the first element from which the Range will be created.</span></span></param>
        <summary><span data-ttu-id="ebace-130">Gibt eine neue <see cref="T:System.Range" />-Instanz beginnend beim angegebenen Startindex bis zum Ende der Sammlung zurück.</span><span class="sxs-lookup"><span data-stu-id="ebace-130">Returns a new <see cref="T:System.Range" /> instance starting from a specified start index to the end of the collection.</span></span></summary>
        <returns><span data-ttu-id="ebace-131">Ein Bereich von <paramref name="start" /> bis zum Ende der Sammlung.</span><span class="sxs-lookup"><span data-stu-id="ebace-131">A range from <paramref name="start" /> to the end of the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Range.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="range.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ebace-132">Gibt die Zeichenfolgendarstellung des aktuellen <see cref="T:System.Range" />-Objekts zurück.</span><span class="sxs-lookup"><span data-stu-id="ebace-132">Returns the string representation of the current <see cref="T:System.Range" /> object.</span></span></summary>
        <returns><span data-ttu-id="ebace-133">Die Zeichenfolgendarstellung des Bereichs.</span><span class="sxs-lookup"><span data-stu-id="ebace-133">The string representation of the range.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
