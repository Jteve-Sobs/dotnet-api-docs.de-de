<Type Name="BitConverter" FullName="System.BitConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="544baedfd5367e7c6f9105a777a4440e8ee6dad6" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83528850" /></Metadata><TypeSignature Language="C#" Value="public static class BitConverter" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit BitConverter extends System.Object" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="DocId" Value="T:System.BitConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class BitConverter" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class BitConverter abstract sealed" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type BitConverter = class" />
  <TypeSignature Language="C#" Value="public sealed class BitConverter" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed BitConverter extends System.Object" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BitConverter" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class BitConverter sealed" FrameworkAlternate="netframework-1.1" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime.Extensions" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Runtime.Extensions" FromVersion="5.0.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="045b1-101">Konvertiert Basisdatentypen in ein Bytearray und ein Bytearray in Basisdatentypen.</span><span class="sxs-lookup"><span data-stu-id="045b1-101">Converts base data types to an array of bytes, and an array of bytes to base data types.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="045b1-102">Die <xref:System.BitConverter>-Klasse unterstützt die Bearbeitung von Werttypen in ihrer grundlegenden Form als eine Reihe von Bytes.</span><span class="sxs-lookup"><span data-stu-id="045b1-102">The <xref:System.BitConverter> class helps manipulate value types in their fundamental form, as a series of bytes.</span></span> <span data-ttu-id="045b1-103">Ein Byte ist als 8-Bit-Ganzzahl ohne Vorzeichen definiert.</span><span class="sxs-lookup"><span data-stu-id="045b1-103">A byte is defined as an 8-bit unsigned integer.</span></span> <span data-ttu-id="045b1-104">Die <xref:System.BitConverter>-Klasse enthält statische Methoden, um jeden der primitiven Typen in ein und aus einem Bytearray zu konvertieren, wie in der folgenden Tabelle veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="045b1-104">The <xref:System.BitConverter> class includes static methods to convert each of the primitive types to and from an array of bytes, as the following table illustrates.</span></span>  
  
|<span data-ttu-id="045b1-105">Typ</span><span class="sxs-lookup"><span data-stu-id="045b1-105">Type</span></span>|<span data-ttu-id="045b1-106">In Byte Konvertierung</span><span class="sxs-lookup"><span data-stu-id="045b1-106">To byte conversion</span></span>|<span data-ttu-id="045b1-107">Aus Byte Konvertierung</span><span class="sxs-lookup"><span data-stu-id="045b1-107">From byte conversion</span></span>|  
|----------|------------------------|--------------------------|  
|<xref:System.Boolean>|<xref:System.BitConverter.GetBytes%28System.Boolean%29>|<xref:System.BitConverter.ToBoolean%2A>|  
|<xref:System.Char>|<xref:System.BitConverter.GetBytes%28System.Char%29>|<xref:System.BitConverter.ToChar%2A>|  
|<xref:System.Double>|<xref:System.BitConverter.GetBytes%28System.Double%29><br /><br /> <span data-ttu-id="045b1-108">- oder -</span><span class="sxs-lookup"><span data-stu-id="045b1-108">-or-</span></span><br /><br /> <xref:System.BitConverter.DoubleToInt64Bits%28System.Double%29>|<xref:System.BitConverter.ToDouble%2A><br /><br /> <span data-ttu-id="045b1-109">- oder -</span><span class="sxs-lookup"><span data-stu-id="045b1-109">-or-</span></span><br /><br /> <xref:System.BitConverter.Int64BitsToDouble%2A>|  
|<xref:System.Int16>|<xref:System.BitConverter.GetBytes%28System.Int16%29>|<xref:System.BitConverter.ToInt16%2A>|  
|<xref:System.Int32>|<xref:System.BitConverter.GetBytes%28System.Int32%29>|<xref:System.BitConverter.ToInt32%2A>|  
|<xref:System.Int64>|<xref:System.BitConverter.GetBytes%28System.Int64%29>|<xref:System.BitConverter.ToInt64%2A>|  
|<xref:System.Single>|<xref:System.BitConverter.GetBytes%28System.Single%29>|<xref:System.BitConverter.ToSingle%2A>|  
|<xref:System.UInt16>|<xref:System.BitConverter.GetBytes%28System.UInt16%29>|<xref:System.BitConverter.ToUInt16%2A>|  
|<xref:System.UInt32>|<xref:System.BitConverter.GetBytes%28System.UInt32%29>|<xref:System.BitConverter.ToUInt32%2A>|  
|<xref:System.UInt64>|<xref:System.BitConverter.GetBytes%28System.UInt64%29>|<xref:System.BitConverter.ToUInt64%2A>|  
  
 <span data-ttu-id="045b1-110">Wenn Sie <xref:System.BitConverter> Methoden zum Roundtrip von Daten verwenden, stellen Sie sicher, dass die <xref:System.BitConverter.GetBytes%2A> Überladung und die `To`*Type* -Methode denselben Typ angeben.</span><span class="sxs-lookup"><span data-stu-id="045b1-110">If you use <xref:System.BitConverter> methods to round-trip data, make sure that the <xref:System.BitConverter.GetBytes%2A> overload and the `To`*Type* method specify the same type.</span></span> <span data-ttu-id="045b1-111">Wie im folgenden Beispiel veranschaulicht, kann das Wiederherstellen eines Arrays, das eine Ganzzahl mit Vorzeichen darstellt, durch Aufrufen der <xref:System.BitConverter.ToUInt32%2A>-Methode zu einem Wert führen, der sich vom Original unterscheidet.</span><span class="sxs-lookup"><span data-stu-id="045b1-111">As the following example illustrates, restoring an array that represents a signed integer by calling the <xref:System.BitConverter.ToUInt32%2A> method can result in a value that is different from the original.</span></span> <span data-ttu-id="045b1-112">Weitere Informationen finden Sie im Abschnitt [Arbeiten mit signierten nicht-Dezimal-und bitweisen Werten](https://go.microsoft.com/fwlink/?LinkId=186999) im BCL-Teamblog.</span><span class="sxs-lookup"><span data-stu-id="045b1-112">For more information, see the entry [Working with Signed Non-Decimal and Bitwise Values](https://go.microsoft.com/fwlink/?LinkId=186999) in the BCL Team Blog.</span></span>  
  
 [!code-csharp[System.BitConverter.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.Class/CS/example1.cs#3)]
 [!code-vb[System.BitConverter.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.Class/VB/example1.vb#3)]  
  
 <span data-ttu-id="045b1-113">Die Reihenfolge der Bytes im Array, die von den <xref:System.BitConverter.GetBytes%2A> Methoden Überladungen zurückgegeben wird (sowie die Reihenfolge der Bits in der Ganzzahl, die von der <xref:System.BitConverter.DoubleToInt64Bits%2A>-Methode zurückgegeben wird, und die Reihenfolge der hexadezimal Zeichenfolgen, die von der <xref:System.BitConverter.ToString%28System.Byte%5B%5D%29>-Methode zurückgegeben wird) hängt davon ab, ob die Computerarchitektur Little-Endian</span><span class="sxs-lookup"><span data-stu-id="045b1-113">The order of bytes in the array returned by the <xref:System.BitConverter.GetBytes%2A> method overloads (as well as the order of bits in the integer returned by the <xref:System.BitConverter.DoubleToInt64Bits%2A> method and the order of hexadecimal strings returned by the <xref:System.BitConverter.ToString%28System.Byte%5B%5D%29> method) depends on whether the computer architecture is little-endian or big-endian.</span></span> <span data-ttu-id="045b1-114">Entsprechend ist die Reihenfolge der Bytes im Array, die von den `To`*integerValue* -Methoden und der <xref:System.BitConverter.ToChar%2A>-Methode zurückgegeben wird, davon abhängig, ob die Computerarchitektur Little-Endian oder Big-Endian ist.</span><span class="sxs-lookup"><span data-stu-id="045b1-114">Similarly, the order of bytes in the array and returned by the `To`*IntegerValue* methods and the <xref:System.BitConverter.ToChar%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span> <span data-ttu-id="045b1-115">Die Byte Reihenfolge einer Architektur wird durch die <xref:System.BitConverter.IsLittleEndian>-Eigenschaft angegeben, die `true` in Little-Endian-Systemen und `false` auf Big-Endian-Systemen zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="045b1-115">The endianness of an architecture is indicated by the <xref:System.BitConverter.IsLittleEndian> property, which returns `true` on little-endian systems and `false` on big-endian systems.</span></span> <span data-ttu-id="045b1-116">In kleinen------------------System-Systemen vor bytes</span><span class="sxs-lookup"><span data-stu-id="045b1-116">On little-endian systems, lower-order bytes precede higher-order bytes.</span></span> <span data-ttu-id="045b1-117">Im Big-System-System werden Bytes höherer Ordnung vorangestellt.</span><span class="sxs-lookup"><span data-stu-id="045b1-117">On big-endian system, higher-order bytes precede lower-order bytes.</span></span> <span data-ttu-id="045b1-118">In der folgenden Tabelle wird der Unterschied in den Byte Arrays veranschaulicht, die sich aus der Übergabe der Ganzzahl 1.234.567.890 (0x499602d2) an die <xref:System.BitConverter.GetBytes%28System.Int32%29>-Methode ergeben.</span><span class="sxs-lookup"><span data-stu-id="045b1-118">The following table illustrates the difference in the byte arrays that result from passing the integer 1,234,567,890 (0x499602D2) to the <xref:System.BitConverter.GetBytes%28System.Int32%29> method.</span></span> <span data-ttu-id="045b1-119">Die Bytes werden in der Reihenfolge von dem Byte am Index 0 bis zum Byte am Index 3 aufgelistet.</span><span class="sxs-lookup"><span data-stu-id="045b1-119">The bytes are listed in order from the byte at index 0 to the byte at index 3.</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="045b1-120">Little-d</span><span class="sxs-lookup"><span data-stu-id="045b1-120">Little-endian</span></span>|<span data-ttu-id="045b1-121">D2-02-96-49</span><span class="sxs-lookup"><span data-stu-id="045b1-121">D2-02-96-49</span></span>|  
|<span data-ttu-id="045b1-122">Big-tedian</span><span class="sxs-lookup"><span data-stu-id="045b1-122">Big-endian</span></span>|<span data-ttu-id="045b1-123">49-96-02-D2</span><span class="sxs-lookup"><span data-stu-id="045b1-123">49-96-02-D2</span></span>|  
  
 <span data-ttu-id="045b1-124">Da der Rückgabewert einiger Methoden von der Systemarchitektur abhängt, sollten Sie bei der Übertragung von Bytedaten über die Computer Grenzen hinweg vorsichtig vorgehen:</span><span class="sxs-lookup"><span data-stu-id="045b1-124">Because the return value of some methods depends on system architecture, be careful when transmitting byte data beyond machine boundaries:</span></span>  
  
-   <span data-ttu-id="045b1-125">Wenn alle Systeme, die Daten senden und empfangen, sicher sind, dass Sie über die gleiche Endianness verfügen, hat dies keine Auswirkungen auf die Daten.</span><span class="sxs-lookup"><span data-stu-id="045b1-125">If all systems sending and receiving data are guaranteed to have the same endianness, nothing has be done to the data.</span></span>  
  
-   <span data-ttu-id="045b1-126">Wenn Systeme, die Daten senden und empfangen, eine andere Endianness aufweisen können, übertragen Sie Daten stets in einer bestimmten Reihenfolge.</span><span class="sxs-lookup"><span data-stu-id="045b1-126">If systems sending and receiving data can have different endianness, always transmit data in a particular order.</span></span> <span data-ttu-id="045b1-127">Dies bedeutet, dass die Reihenfolge der Bytes im Array möglicherweise vor dem Senden oder nach dem Empfang umgekehrt werden muss.</span><span class="sxs-lookup"><span data-stu-id="045b1-127">This means that the order of bytes in the array may have to be reversed either before sending them or after receiving them.</span></span> <span data-ttu-id="045b1-128">Eine gängige Konvention ist das Übertragen von Daten in der Netzwerk-Byte-Reihenfolge (Big-Endian-Reihenfolge).</span><span class="sxs-lookup"><span data-stu-id="045b1-128">A common convention is to transmit data in network byte order (big-endian order).</span></span> <span data-ttu-id="045b1-129">Im folgenden Beispiel wird eine Implementierung zum Senden eines ganzzahligen Werts in der Netzwerk-Byte Reihenfolge bereitstellt</span><span class="sxs-lookup"><span data-stu-id="045b1-129">The following example provides an implementation for sending an integer value in network byte order.</span></span>  
  
     [!code-csharp[System.BitConverter.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.Class/CS/networkorder1.cs#4)]
     [!code-vb[System.BitConverter.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.Class/VB/networkorder1.vb#4)]  
  
-   <span data-ttu-id="045b1-130">Wenn Systeme, die Daten senden und empfangen, unterschiedliche Byte Reihenfolge aufweisen können und die zu übertragenden Daten aus Ganzzahlen mit Vorzeichen bestehen, können Sie die <xref:System.Net.IPAddress.HostToNetworkOrder%2A?displayProperty=nameWithType>-Methode zum Konvertieren der Daten in die Netzwerk-Byte Reihenfolge und die <xref:System.Net.IPAddress.NetworkToHostOrder%2A?displayProperty=nameWithType>-Methode zum Konvertieren in die vom Empfänger benötigte Reihenfolge abrufen.</span><span class="sxs-lookup"><span data-stu-id="045b1-130">If systems sending and receiving data can have different endianness and the data to be transmitted consists of signed integers, call the <xref:System.Net.IPAddress.HostToNetworkOrder%2A?displayProperty=nameWithType> method to convert the data to network byte order and the <xref:System.Net.IPAddress.NetworkToHostOrder%2A?displayProperty=nameWithType> method to convert it to the order required by the recipient.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="045b1-131">Im folgenden Codebeispiel wird die Verwendung mehrerer <xref:System.BitConverter>-Klassen Methoden veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="045b1-131">The following code example illustrates the use of several <xref:System.BitConverter> class methods.</span></span>  
  
 [!code-cpp[System.BitConverter.Class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.Class/CPP/bitconv.cpp#1)]
 [!code-csharp[System.BitConverter.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.Class/CS/bitconv.cs#1)]
 [!code-vb[System.BitConverter.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.Class/VB/bitconv.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Byte" />
  </Docs>
  <Members>
    <Member MemberName="DoubleToInt64Bits">
      <MemberSignature Language="C#" Value="public static long DoubleToInt64Bits (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 DoubleToInt64Bits(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.DoubleToInt64Bits(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DoubleToInt64Bits (value As Double) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long DoubleToInt64Bits(double value);" />
      <MemberSignature Language="F#" Value="static member DoubleToInt64Bits : double -&gt; int64" Usage="System.BitConverter.DoubleToInt64Bits value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="045b1-132">Die zu konvertierende Zahl.</span><span class="sxs-lookup"><span data-stu-id="045b1-132">The number to convert.</span></span></param>
        <summary><span data-ttu-id="045b1-133">Konvertiert die angegebene Gleitkommazahl mit doppelter Genauigkeit in eine 64-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="045b1-133">Converts the specified double-precision floating point number to a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="045b1-134">Eine 64-Bit-Ganzzahl mit Vorzeichen, deren Wert <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="045b1-134">A 64-bit signed integer whose value is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="045b1-135">Die Reihenfolge der Bits in der Ganzzahl, die von der <xref:System.BitConverter.DoubleToInt64Bits%2A>-Methode zurückgegeben wird, hängt davon ab, ob die Computerarchitektur Little-Endian oder Big-Endian ist.</span><span class="sxs-lookup"><span data-stu-id="045b1-135">The order of bits in the integer returned by the <xref:System.BitConverter.DoubleToInt64Bits%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="045b1-136">Im folgenden Codebeispiel werden die Bitmuster mehrerer <xref:System.Double> Werte in <xref:System.Int64> Werte mit der `DoubleToInt64Bits`-Methode konvertiert.</span><span class="sxs-lookup"><span data-stu-id="045b1-136">The following code example converts the bit patterns of several <xref:System.Double> values to <xref:System.Int64> values with the `DoubleToInt64Bits` method.</span></span>  
  
 [!code-cpp[System.BitConverter.DoubleInt64#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.DoubleInt64/CPP/dbltobits.cpp#2)]
 [!code-csharp[System.BitConverter.DoubleInt64#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.DoubleInt64/CS/dbltobits.cs#2)]
 [!code-vb[System.BitConverter.DoubleInt64#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.DoubleInt64/VB/dbltobits.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.BitConverter.Int64BitsToDouble(System.Int64)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBytes">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="045b1-137">Konvertiert die angegebenen Daten in ein Bytearray.</span><span class="sxs-lookup"><span data-stu-id="045b1-137">Converts the specified data to an array of bytes.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public static byte[] GetBytes (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] GetBytes(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.GetBytes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBytes (value As Boolean) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ GetBytes(bool value);" />
      <MemberSignature Language="F#" Value="static member GetBytes : bool -&gt; byte[]" Usage="System.BitConverter.GetBytes value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="045b1-138">Ein Boolean-Wert.</span><span class="sxs-lookup"><span data-stu-id="045b1-138">A Boolean value.</span></span></param>
        <summary><span data-ttu-id="045b1-139">Gibt den angegebenen booleschen Wert als Bytearray zurück</span><span class="sxs-lookup"><span data-stu-id="045b1-139">Returns the specified Boolean value as a byte array.</span></span></summary>
        <returns><span data-ttu-id="045b1-140">Ein Bytearray mit der Länge 1</span><span class="sxs-lookup"><span data-stu-id="045b1-140">A byte array with length 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="045b1-141">Sie können ein Bytearray zurück in einen <xref:System.Boolean> Wert konvertieren, indem Sie die <xref:System.BitConverter.ToBoolean%2A>-Methode aufrufen.</span><span class="sxs-lookup"><span data-stu-id="045b1-141">You can convert a byte array back to a <xref:System.Boolean> value by calling the <xref:System.BitConverter.ToBoolean%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="045b1-142">Im folgenden Beispiel werden die Bitmuster <xref:System.Boolean> Werte in <xref:System.Byte> Arrays mit der `GetBytes`-Methode konvertiert.</span><span class="sxs-lookup"><span data-stu-id="045b1-142">The following example converts the bit patterns of <xref:System.Boolean> values to <xref:System.Byte> arrays with the `GetBytes` method.</span></span>  
  
 [!code-cpp[System.BitConverter.GetBytes.Others#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/CPP/bytesbool.cpp#1)]
 [!code-csharp[System.BitConverter.GetBytes.Others#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/CS/bytesbool.cs#1)]
 [!code-vb[System.BitConverter.GetBytes.Others#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/VB/bytesbool.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.BitConverter.ToBoolean(System.Byte[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public static byte[] GetBytes (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] GetBytes(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.GetBytes(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBytes (value As Char) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ GetBytes(char value);" />
      <MemberSignature Language="F#" Value="static member GetBytes : char -&gt; byte[]" Usage="System.BitConverter.GetBytes value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="045b1-143">Ein zu konvertierendes Zeichen.</span><span class="sxs-lookup"><span data-stu-id="045b1-143">A character to convert.</span></span></param>
        <summary><span data-ttu-id="045b1-144">Gibt den Wert des angegebenen Unicode-Zeichens als Bytearray zurück.</span><span class="sxs-lookup"><span data-stu-id="045b1-144">Returns the specified Unicode character value as an array of bytes.</span></span></summary>
        <returns><span data-ttu-id="045b1-145">Ein Bytearray mit der Länge 2</span><span class="sxs-lookup"><span data-stu-id="045b1-145">An array of bytes with length 2.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="045b1-146">Die Reihenfolge der Bytes in dem Array, das von der <xref:System.BitConverter.GetBytes%2A>-Methode zurückgegeben wird, hängt davon ab, ob die Computerarchitektur Little-Endian oder Big-Endian ist.</span><span class="sxs-lookup"><span data-stu-id="045b1-146">The order of bytes in the array returned by the <xref:System.BitConverter.GetBytes%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="045b1-147">Im folgenden Codebeispiel werden die Bitmuster von <xref:System.Char> Werten (Unicode-Zeichen) in <xref:System.Byte> Arrays mit der `GetBytes`-Methode konvertiert.</span><span class="sxs-lookup"><span data-stu-id="045b1-147">The following code example converts the bit patterns of <xref:System.Char> values (Unicode characters) to <xref:System.Byte> arrays with the `GetBytes` method.</span></span>  
  
 [!code-cpp[System.BitConverter.GetBytes.Others#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/CPP/byteschar.cpp#2)]
 [!code-csharp[System.BitConverter.GetBytes.Others#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/CS/byteschar.cs#2)]
 [!code-vb[System.BitConverter.GetBytes.Others#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/VB/byteschar.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.BitConverter.ToChar(System.Byte[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public static byte[] GetBytes (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] GetBytes(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.GetBytes(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBytes (value As Double) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ GetBytes(double value);" />
      <MemberSignature Language="F#" Value="static member GetBytes : double -&gt; byte[]" Usage="System.BitConverter.GetBytes value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="045b1-148">Die zu konvertierende Zahl.</span><span class="sxs-lookup"><span data-stu-id="045b1-148">The number to convert.</span></span></param>
        <summary><span data-ttu-id="045b1-149">Gibt den angegebenen Gleitkommawert mit doppelter Genauigkeit als Bytearray zurück.</span><span class="sxs-lookup"><span data-stu-id="045b1-149">Returns the specified double-precision floating point value as an array of bytes.</span></span></summary>
        <returns><span data-ttu-id="045b1-150">Ein Bytearray mit der Länge 8.</span><span class="sxs-lookup"><span data-stu-id="045b1-150">An array of bytes with length 8.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="045b1-151">Die Reihenfolge der Bytes in dem Array, das von der <xref:System.BitConverter.GetBytes%2A>-Methode zurückgegeben wird, hängt davon ab, ob die Computerarchitektur Little-Endian oder Big-Endian ist.</span><span class="sxs-lookup"><span data-stu-id="045b1-151">The order of bytes in the array returned by the <xref:System.BitConverter.GetBytes%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="045b1-152">Im folgenden Codebeispiel werden die Bitmuster <xref:System.Double> Werte in <xref:System.Byte> Arrays mit der `GetBytes`-Methode konvertiert.</span><span class="sxs-lookup"><span data-stu-id="045b1-152">The following code example converts the bit patterns of <xref:System.Double> values to <xref:System.Byte> arrays with the `GetBytes` method.</span></span>  
  
 [!code-cpp[System.BitConverter.GetBytes.Others#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/CPP/bytesdouble.cpp#4)]
 [!code-csharp[System.BitConverter.GetBytes.Others#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/CS/bytesdouble.cs#4)]
 [!code-vb[System.BitConverter.GetBytes.Others#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/VB/bytesdouble.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.BitConverter.ToDouble(System.Byte[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public static byte[] GetBytes (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] GetBytes(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.GetBytes(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBytes (value As Short) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ GetBytes(short value);" />
      <MemberSignature Language="F#" Value="static member GetBytes : int16 -&gt; byte[]" Usage="System.BitConverter.GetBytes value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="045b1-153">Die zu konvertierende Zahl.</span><span class="sxs-lookup"><span data-stu-id="045b1-153">The number to convert.</span></span></param>
        <summary><span data-ttu-id="045b1-154">Gibt den Wert der angegebenen 16-Bit-Ganzzahl mit Vorzeichen als Bytearray zurück.</span><span class="sxs-lookup"><span data-stu-id="045b1-154">Returns the specified 16-bit signed integer value as an array of bytes.</span></span></summary>
        <returns><span data-ttu-id="045b1-155">Ein Bytearray mit der Länge 2</span><span class="sxs-lookup"><span data-stu-id="045b1-155">An array of bytes with length 2.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="045b1-156">Die Reihenfolge der Bytes in dem Array, das von der <xref:System.BitConverter.GetBytes%2A>-Methode zurückgegeben wird, hängt davon ab, ob die Computerarchitektur Little-Endian oder Big-Endian ist.</span><span class="sxs-lookup"><span data-stu-id="045b1-156">The order of bytes in the array returned by the <xref:System.BitConverter.GetBytes%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="045b1-157">Im folgenden Codebeispiel werden die Bitmuster <xref:System.Int16> Werte in <xref:System.Byte> Arrays mit der `GetBytes`-Methode konvertiert.</span><span class="sxs-lookup"><span data-stu-id="045b1-157">The following code example converts the bit patterns of <xref:System.Int16> values to <xref:System.Byte> arrays with the `GetBytes` method.</span></span>  
  
 [!code-cpp[System.BitConverter.GetBytes.SInts#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.SInts/CPP/bytesint16.cpp#3)]
 [!code-csharp[System.BitConverter.GetBytes.SInts#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.SInts/CS/bytesint16.cs#3)]
 [!code-vb[System.BitConverter.GetBytes.SInts#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.GetBytes.SInts/VB/bytesint16.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.BitConverter.ToInt16(System.Byte[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public static byte[] GetBytes (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] GetBytes(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.GetBytes(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBytes (value As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ GetBytes(int value);" />
      <MemberSignature Language="F#" Value="static member GetBytes : int -&gt; byte[]" Usage="System.BitConverter.GetBytes value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="045b1-158">Die zu konvertierende Zahl.</span><span class="sxs-lookup"><span data-stu-id="045b1-158">The number to convert.</span></span></param>
        <summary><span data-ttu-id="045b1-159">Gibt den angegebenen ganzzahligen 32-Bit-Wert mit Vorzeichen als Bytearray zurück</span><span class="sxs-lookup"><span data-stu-id="045b1-159">Returns the specified 32-bit signed integer value as an array of bytes.</span></span></summary>
        <returns><span data-ttu-id="045b1-160">Ein Bytearray mit der Länge 4</span><span class="sxs-lookup"><span data-stu-id="045b1-160">An array of bytes with length 4.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="045b1-161">Die Reihenfolge der Bytes in dem Array, das von der <xref:System.BitConverter.GetBytes%2A>-Methode zurückgegeben wird, hängt davon ab, ob die Computerarchitektur Little-Endian oder Big-Endian ist.</span><span class="sxs-lookup"><span data-stu-id="045b1-161">The order of bytes in the array returned by the <xref:System.BitConverter.GetBytes%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="045b1-162">Im folgenden Codebeispiel werden die Bitmuster <xref:System.Int32> Werte in <xref:System.Byte> Arrays mit der `GetBytes`-Methode konvertiert.</span><span class="sxs-lookup"><span data-stu-id="045b1-162">The following code example converts the bit patterns of <xref:System.Int32> values to <xref:System.Byte> arrays with the `GetBytes` method.</span></span>  
  
 [!code-cpp[System.BitConverter.GetBytes.SInts#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.SInts/CPP/bytesint32.cpp#2)]
 [!code-csharp[System.BitConverter.GetBytes.SInts#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.SInts/CS/bytesint32.cs#2)]
 [!code-vb[System.BitConverter.GetBytes.SInts#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.GetBytes.SInts/VB/bytesint32.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.BitConverter.ToInt32(System.Byte[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public static byte[] GetBytes (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] GetBytes(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.GetBytes(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBytes (value As Long) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ GetBytes(long value);" />
      <MemberSignature Language="F#" Value="static member GetBytes : int64 -&gt; byte[]" Usage="System.BitConverter.GetBytes value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="045b1-163">Die zu konvertierende Zahl.</span><span class="sxs-lookup"><span data-stu-id="045b1-163">The number to convert.</span></span></param>
        <summary><span data-ttu-id="045b1-164">Gibt den angegebenen ganzzahligen 64-Bit-Wert mit Vorzeichen als Bytearray zurück.</span><span class="sxs-lookup"><span data-stu-id="045b1-164">Returns the specified 64-bit signed integer value as an array of bytes.</span></span></summary>
        <returns><span data-ttu-id="045b1-165">Ein Bytearray mit der Länge 8.</span><span class="sxs-lookup"><span data-stu-id="045b1-165">An array of bytes with length 8.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="045b1-166">Die Reihenfolge der Bytes in dem Array, das von der <xref:System.BitConverter.GetBytes%2A>-Methode zurückgegeben wird, hängt davon ab, ob die Computerarchitektur Little-Endian oder Big-Endian ist.</span><span class="sxs-lookup"><span data-stu-id="045b1-166">The order of bytes in the array returned by the <xref:System.BitConverter.GetBytes%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="045b1-167">Im folgenden Beispiel wird die <xref:System.BitConverter.GetBytes%2A>-Methode aufgerufen, um jedes Element in einem <xref:System.Int64> Array in ein <xref:System.Byte> Arrays zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="045b1-167">The following example calls the <xref:System.BitConverter.GetBytes%2A> method to convert each element in an <xref:System.Int64> array to a <xref:System.Byte> arrays.</span></span>  
  
 [!code-cpp[System.BitConverter.GetBytes.SInts#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.SInts/CPP/bytesint64.cpp#1)]
 [!code-csharp[System.BitConverter.GetBytes.SInts#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.SInts/CS/bytesint64.cs#1)]
 [!code-vb[System.BitConverter.GetBytes.SInts#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.GetBytes.SInts/VB/bytesint64.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.BitConverter.ToInt64(System.Byte[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public static byte[] GetBytes (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] GetBytes(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.GetBytes(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBytes (value As Single) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ GetBytes(float value);" />
      <MemberSignature Language="F#" Value="static member GetBytes : single -&gt; byte[]" Usage="System.BitConverter.GetBytes value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="045b1-168">Die zu konvertierende Zahl.</span><span class="sxs-lookup"><span data-stu-id="045b1-168">The number to convert.</span></span></param>
        <summary><span data-ttu-id="045b1-169">Gibt den angegebenen Gleitkommawert mit einfacher Genauigkeit als Bytearray zurück.</span><span class="sxs-lookup"><span data-stu-id="045b1-169">Returns the specified single-precision floating point value as an array of bytes.</span></span></summary>
        <returns><span data-ttu-id="045b1-170">Ein Bytearray mit der Länge 4</span><span class="sxs-lookup"><span data-stu-id="045b1-170">An array of bytes with length 4.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="045b1-171">Die Reihenfolge der Bytes in dem Array, das von der <xref:System.BitConverter.GetBytes%2A>-Methode zurückgegeben wird, hängt davon ab, ob die Computerarchitektur Little-Endian oder Big-Endian ist.</span><span class="sxs-lookup"><span data-stu-id="045b1-171">The order of bytes in the array returned by the <xref:System.BitConverter.GetBytes%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="045b1-172">Im folgenden Codebeispiel werden die Bitmuster <xref:System.Single> Werte in <xref:System.Byte> Arrays mit der `GetBytes`-Methode konvertiert.</span><span class="sxs-lookup"><span data-stu-id="045b1-172">The following code example converts the bit patterns of <xref:System.Single> values to <xref:System.Byte> arrays with the `GetBytes` method.</span></span>  
  
 [!code-cpp[System.BitConverter.GetBytes.Others#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/CPP/bytessingle.cpp#3)]
 [!code-csharp[System.BitConverter.GetBytes.Others#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/CS/bytessingle.cs#3)]
 [!code-vb[System.BitConverter.GetBytes.Others#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/VB/bytessingle.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.BitConverter.ToSingle(System.Byte[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public static byte[] GetBytes (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] GetBytes(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.GetBytes(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBytes (value As UShort) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ GetBytes(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member GetBytes : uint16 -&gt; byte[]" Usage="System.BitConverter.GetBytes value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="045b1-173">Die zu konvertierende Zahl.</span><span class="sxs-lookup"><span data-stu-id="045b1-173">The number to convert.</span></span></param>
        <summary><span data-ttu-id="045b1-174">Gibt den Wert der angegebenen vorzeichenlosen 16-Bit-Ganzzahl als Bytearray zurück.</span><span class="sxs-lookup"><span data-stu-id="045b1-174">Returns the specified 16-bit unsigned integer value as an array of bytes.</span></span></summary>
        <returns><span data-ttu-id="045b1-175">Ein Bytearray mit der Länge 2</span><span class="sxs-lookup"><span data-stu-id="045b1-175">An array of bytes with length 2.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="045b1-176">Die Reihenfolge der Bytes in dem Array, das von der <xref:System.BitConverter.GetBytes%2A>-Methode zurückgegeben wird, hängt davon ab, ob die Computerarchitektur Little-Endian oder Big-Endian ist.</span><span class="sxs-lookup"><span data-stu-id="045b1-176">The order of bytes in the array returned by the <xref:System.BitConverter.GetBytes%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="045b1-177">Im folgenden Codebeispiel werden die Bitmuster <xref:System.UInt16> Werte in <xref:System.Byte> Arrays mit der `GetBytes`-Methode konvertiert.</span><span class="sxs-lookup"><span data-stu-id="045b1-177">The following code example converts the bit patterns of <xref:System.UInt16> values to <xref:System.Byte> arrays with the `GetBytes` method.</span></span>  
  
 [!code-cpp[System.BitConverter.GetBytes.UInts#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.UInts/CPP/bytesuint16.cpp#3)]
 [!code-csharp[System.BitConverter.GetBytes.UInts#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.UInts/CS/bytesuint16.cs#3)]
 [!code-vb[System.BitConverter.GetBytes.UInts#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.GetBytes.UInts/VB/bytesuint16.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.BitConverter.ToUInt16(System.Byte[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public static byte[] GetBytes (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] GetBytes(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.GetBytes(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBytes (value As UInteger) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ GetBytes(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member GetBytes : uint32 -&gt; byte[]" Usage="System.BitConverter.GetBytes value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="045b1-178">Die zu konvertierende Zahl.</span><span class="sxs-lookup"><span data-stu-id="045b1-178">The number to convert.</span></span></param>
        <summary><span data-ttu-id="045b1-179">Gibt den Wert der angegebenen vorzeichenlosen 32-Bit-Ganzzahl als Bytearray zurück</span><span class="sxs-lookup"><span data-stu-id="045b1-179">Returns the specified 32-bit unsigned integer value as an array of bytes.</span></span></summary>
        <returns><span data-ttu-id="045b1-180">Ein Bytearray mit der Länge 4</span><span class="sxs-lookup"><span data-stu-id="045b1-180">An array of bytes with length 4.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="045b1-181">Die Reihenfolge der Bytes in dem Array, das von der <xref:System.BitConverter.GetBytes%2A>-Methode zurückgegeben wird, hängt davon ab, ob die Computerarchitektur Little-Endian oder Big-Endian ist.</span><span class="sxs-lookup"><span data-stu-id="045b1-181">The order of bytes in the array returned by the <xref:System.BitConverter.GetBytes%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="045b1-182">Im folgenden Codebeispiel werden die Bitmuster <xref:System.UInt32> Werte in <xref:System.Byte> Arrays mit der `GetBytes`-Methode konvertiert.</span><span class="sxs-lookup"><span data-stu-id="045b1-182">The following code example converts the bit patterns of <xref:System.UInt32> values to <xref:System.Byte> arrays with the `GetBytes` method.</span></span>  
  
 [!code-cpp[System.BitConverter.GetBytes.UInts#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.UInts/CPP/bytesuint32.cpp#2)]
 [!code-csharp[System.BitConverter.GetBytes.UInts#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.UInts/CS/bytesuint32.cs#2)]
 [!code-vb[System.BitConverter.GetBytes.UInts#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.GetBytes.UInts/VB/bytesuint32.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.BitConverter.ToUInt32(System.Byte[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public static byte[] GetBytes (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] GetBytes(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.GetBytes(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBytes (value As ULong) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ GetBytes(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member GetBytes : uint64 -&gt; byte[]" Usage="System.BitConverter.GetBytes value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="045b1-183">Die zu konvertierende Zahl.</span><span class="sxs-lookup"><span data-stu-id="045b1-183">The number to convert.</span></span></param>
        <summary><span data-ttu-id="045b1-184">Gibt den Wert der angegebenen vorzeichenlosen 64-Bit-Ganzzahl als Bytearray zurück</span><span class="sxs-lookup"><span data-stu-id="045b1-184">Returns the specified 64-bit unsigned integer value as an array of bytes.</span></span></summary>
        <returns><span data-ttu-id="045b1-185">Ein Bytearray mit der Länge 8.</span><span class="sxs-lookup"><span data-stu-id="045b1-185">An array of bytes with length 8.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="045b1-186">Die Reihenfolge der Bytes in dem Array, das von der <xref:System.BitConverter.GetBytes%2A>-Methode zurückgegeben wird, hängt davon ab, ob die Computerarchitektur Little-Endian oder Big-Endian ist.</span><span class="sxs-lookup"><span data-stu-id="045b1-186">The order of bytes in the array returned by the <xref:System.BitConverter.GetBytes%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="045b1-187">Im folgenden Codebeispiel werden die Bitmuster <xref:System.UInt64> Werte in <xref:System.Byte> Arrays mit der `GetBytes`-Methode konvertiert.</span><span class="sxs-lookup"><span data-stu-id="045b1-187">The following code example converts the bit patterns of <xref:System.UInt64> values to <xref:System.Byte> arrays with the `GetBytes` method.</span></span>  
  
 [!code-cpp[System.BitConverter.GetBytes.UInts#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.UInts/CPP/bytesuint64.cpp#1)]
 [!code-csharp[System.BitConverter.GetBytes.UInts#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.UInts/CS/bytesuint64.cs#1)]
 [!code-vb[System.BitConverter.GetBytes.UInts#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.GetBytes.UInts/VB/bytesuint64.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.BitConverter.ToUInt64(System.Byte[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Int32BitsToSingle">
      <MemberSignature Language="C#" Value="public static float Int32BitsToSingle (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Int32BitsToSingle(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.Int32BitsToSingle(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Int32BitsToSingle (value As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Int32BitsToSingle(int value);" />
      <MemberSignature Language="F#" Value="static member Int32BitsToSingle : int -&gt; single" Usage="System.BitConverter.Int32BitsToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="045b1-188">Der zu konvertierende Integer.</span><span class="sxs-lookup"><span data-stu-id="045b1-188">The integer to convert.</span></span></param>
        <summary><span data-ttu-id="045b1-189">Interpretiert den angegebenen 32-Bit-Integerwert als Gleitkommawert mit einfacher Genauigkeit neu.</span><span class="sxs-lookup"><span data-stu-id="045b1-189">Reinterprets the specified 32-bit integer as a single-precision floating-point value.</span></span></summary>
        <returns><span data-ttu-id="045b1-190">Ein Gleitkommawert mit einfacher Genauigkeit, der den konvertierten Integerwert darstellt.</span><span class="sxs-lookup"><span data-stu-id="045b1-190">A single-precision floating-point value that represents the converted integer.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Int64BitsToDouble">
      <MemberSignature Language="C#" Value="public static double Int64BitsToDouble (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Int64BitsToDouble(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.Int64BitsToDouble(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Int64BitsToDouble (value As Long) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Int64BitsToDouble(long value);" />
      <MemberSignature Language="F#" Value="static member Int64BitsToDouble : int64 -&gt; double" Usage="System.BitConverter.Int64BitsToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="045b1-191">Die zu konvertierende Zahl.</span><span class="sxs-lookup"><span data-stu-id="045b1-191">The number to convert.</span></span></param>
        <summary><span data-ttu-id="045b1-192">Interpretiert den angegebenen 64-Bit-Integerwert mit Vorzeichen als Gleitkommazahl mit doppelter Genauigkeit neu.</span><span class="sxs-lookup"><span data-stu-id="045b1-192">Reinterprets the specified 64-bit signed integer to a double-precision floating point number.</span></span></summary>
        <returns><span data-ttu-id="045b1-193">Eine Gleitkommazahl mit doppelter Genauigkeit, deren Wert <paramref name="value" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="045b1-193">A double-precision floating point number whose value is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="045b1-194">In der Regel ist `value` eine ganze Zahl, die von der <xref:System.BitConverter.DoubleToInt64Bits%2A>-Methode zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="045b1-194">Typically, `value` is an integer that is returned by the <xref:System.BitConverter.DoubleToInt64Bits%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="045b1-195">Im folgenden Codebeispiel werden die Bitmuster mehrerer <xref:System.Int64> Werte in <xref:System.Double> Werte mit der `Int64BitsToDouble`-Methode konvertiert.</span><span class="sxs-lookup"><span data-stu-id="045b1-195">The following code example converts the bit patterns of several <xref:System.Int64> values to <xref:System.Double> values with the `Int64BitsToDouble` method.</span></span>  
  
 [!code-cpp[System.BitConverter.DoubleInt64#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.DoubleInt64/CPP/bitstodbl.cpp#1)]
 [!code-csharp[System.BitConverter.DoubleInt64#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.DoubleInt64/CS/bitstodbl.cs#1)]
 [!code-vb[System.BitConverter.DoubleInt64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.DoubleInt64/VB/bitstodbl.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.BitConverter.DoubleToInt64Bits(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="IsLittleEndian">
      <MemberSignature Language="C#" Value="public static readonly bool IsLittleEndian;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly bool IsLittleEndian" />
      <MemberSignature Language="DocId" Value="F:System.BitConverter.IsLittleEndian" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsLittleEndian As Boolean " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly bool IsLittleEndian;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsLittleEndian : bool" Usage="System.BitConverter.IsLittleEndian" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="045b1-196">Gibt die Bytereihenfolge (Endianwert) an, in der Daten in dieser Computerarchitektur gespeichert werden.</span><span class="sxs-lookup"><span data-stu-id="045b1-196">Indicates the byte order ("endianness") in which data is stored in this computer architecture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="045b1-197">In verschiedenen Computerarchitekturen werden Daten mithilfe unterschiedlicher Byte Bestellungen gespeichert.</span><span class="sxs-lookup"><span data-stu-id="045b1-197">Different computer architectures store data using different byte orders.</span></span> <span data-ttu-id="045b1-198">"Big-Endian" bedeutet, dass sich das signifikanteste Byte am linken Ende eines Worts befindet.</span><span class="sxs-lookup"><span data-stu-id="045b1-198">"Big-endian" means the most significant byte is on the left end of a word.</span></span> <span data-ttu-id="045b1-199">"Little-Endian" bedeutet, dass sich das signifikanteste Byte am rechten Ende eines Worts befindet.</span><span class="sxs-lookup"><span data-stu-id="045b1-199">"Little-endian" means the most significant byte is on the right end of a word.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="045b1-200">Sie können von der Netzwerk-Byte-Reihenfolge in die Byte Reihenfolge des Host Computers konvertieren, ohne den Wert des <xref:System.BitConverter.IsLittleEndian?displayProperty=nameWithType> Felds abzurufen, indem Sie eine 16-Bit-, 32-Bit-oder 64-Bit-Ganzzahl an die <xref:System.Net.IPAddress.HostToNetworkOrder%2A?displayProperty=nameWithType>-Methode übergeben.</span><span class="sxs-lookup"><span data-stu-id="045b1-200">You can convert from network byte order to the byte order of the host computer without retrieving  the value of the <xref:System.BitConverter.IsLittleEndian?displayProperty=nameWithType> field by passing a 16-bit, 32-bit, or 64 bit integer to the <xref:System.Net.IPAddress.HostToNetworkOrder%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="045b1-201">Im folgenden Codebeispiel wird die Verwendung des `IsLittleEndian` Felds veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="045b1-201">The following code example illustrates the use of the `IsLittleEndian` field.</span></span>  
  
 [!code-cpp[System.BitConverter.Class#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.Class/CPP/littleend.cpp#2)]
 [!code-csharp[System.BitConverter.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.Class/CS/littleend.cs#2)]
 [!code-vb[System.BitConverter.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.Class/VB/littleend.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SingleToInt32Bits">
      <MemberSignature Language="C#" Value="public static int SingleToInt32Bits (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SingleToInt32Bits(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.SingleToInt32Bits(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SingleToInt32Bits (value As Single) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int SingleToInt32Bits(float value);" />
      <MemberSignature Language="F#" Value="static member SingleToInt32Bits : single -&gt; int" Usage="System.BitConverter.SingleToInt32Bits value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="045b1-202">Der zu konvertierende Gleitkommawert mit einfacher Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="045b1-202">The single-precision floating-point value to convert.</span></span></param>
        <summary><span data-ttu-id="045b1-203">Konvertiert einen Gleitkommawert mit einfacher Genauigkeit in einen Integerwert.</span><span class="sxs-lookup"><span data-stu-id="045b1-203">Converts a single-precision floating-point value into an integer.</span></span></summary>
        <returns><span data-ttu-id="045b1-204">Ein Integerwert, der den konvertierten Gleitkommawert mit einfacher Genauigkeit darstellt.</span><span class="sxs-lookup"><span data-stu-id="045b1-204">An integer representing the converted single-precision floating-point value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (ReadOnlySpan&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToBoolean(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As ReadOnlySpan(Of Byte)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(ReadOnlySpan&lt;System::Byte&gt; value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : ReadOnlySpan&lt;byte&gt; -&gt; bool" Usage="System.BitConverter.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="045b1-205">Eine schreibgeschützte Spanne, die die zu konvertierenden Bytes enthält.</span><span class="sxs-lookup"><span data-stu-id="045b1-205">A read-only span containing the bytes to convert.</span></span></param>
        <summary><span data-ttu-id="045b1-206">Konvertiert eine schreibgeschützte Bytespanne in einen booleschen Wert.</span><span class="sxs-lookup"><span data-stu-id="045b1-206">Converts a read-only byte span to a Boolean value.</span></span></summary>
        <returns><span data-ttu-id="045b1-207">Ein boolescher Wert, der die konvertierten Bytes darstellt.</span><span class="sxs-lookup"><span data-stu-id="045b1-207">A Boolean representing the converted bytes.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="045b1-208">Die Länge von <paramref name="value" /> ist kleiner als 0.</span><span class="sxs-lookup"><span data-stu-id="045b1-208">The length of <paramref name="value" /> is less than 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (byte[] value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(unsigned int8[] value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToBoolean(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Byte(), startIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(cli::array &lt;System::Byte&gt; ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : byte[] * int -&gt; bool" Usage="System.BitConverter.ToBoolean (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="045b1-209">Ein Bytearray.</span><span class="sxs-lookup"><span data-stu-id="045b1-209">A byte array.</span></span></param>
        <param name="startIndex"><span data-ttu-id="045b1-210">Der Index des Byte innerhalb von <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="045b1-210">The index of the byte within <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="045b1-211">Gibt einen booleschen Wert zurück, der aus dem Byte an der angegebenen Position eines Bytearrays konvertiert wurde</span><span class="sxs-lookup"><span data-stu-id="045b1-211">Returns a Boolean value converted from the byte at a specified position in a byte array.</span></span></summary>
        <returns><span data-ttu-id="045b1-212"><see langword="true" />, wenn das Byte an der Position <paramref name="startIndex" /> in <paramref name="value" /> ungleich null ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="045b1-212"><see langword="true" /> if the byte at <paramref name="startIndex" /> in <paramref name="value" /> is nonzero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="045b1-213">Um einen <xref:System.Boolean> Wert in seine Byte Darstellung zu konvertieren, müssen Sie die <xref:System.BitConverter.GetBytes(System.Boolean)>-Methode aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="045b1-213">To convert a <xref:System.Boolean> value to its byte representation, call the <xref:System.BitConverter.GetBytes(System.Boolean)> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="045b1-214">Im folgenden Codebeispiel werden Elemente <xref:System.Byte> Arrays in <xref:System.Boolean> Werte mit der `ToBoolean`-Methode konvertiert.</span><span class="sxs-lookup"><span data-stu-id="045b1-214">The following code example converts elements of <xref:System.Byte> arrays to <xref:System.Boolean> values with the `ToBoolean` method.</span></span>  
  
 [!code-cpp[System.BitConverter.ToXXX.Others#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/CPP/batobool.cpp#1)]
 [!code-csharp[System.BitConverter.ToXXX.Others#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/CS/batobool.cs#1)]
 [!code-vb[System.BitConverter.ToXXX.Others#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/VB/batobool.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="045b1-215"><paramref name="value" /> ist <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="045b1-215"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="045b1-216"><paramref name="startIndex" /> ist kleiner als 0 (null) oder größer als die Länge von <paramref name="value" /> minus 1.</span><span class="sxs-lookup"><span data-stu-id="045b1-216"><paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1.</span></span></exception>
        <altmember cref="M:System.BitConverter.GetBytes(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (ReadOnlySpan&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToChar(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As ReadOnlySpan(Of Byte)) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(ReadOnlySpan&lt;System::Byte&gt; value);" />
      <MemberSignature Language="F#" Value="static member ToChar : ReadOnlySpan&lt;byte&gt; -&gt; char" Usage="System.BitConverter.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="045b1-217">Eine schreibgeschützte Spanne, die die zu konvertierenden Bytes enthält.</span><span class="sxs-lookup"><span data-stu-id="045b1-217">A read-only span containing the bytes to convert.</span></span></param>
        <summary><span data-ttu-id="045b1-218">Konvertiert eine schreibgeschützte Bytespanne in ein Zeichen.</span><span class="sxs-lookup"><span data-stu-id="045b1-218">Converts a read-only byte span into a character.</span></span></summary>
        <returns><span data-ttu-id="045b1-219">Ein Zeichen, das die konvertierten Bytes darstellt.</span><span class="sxs-lookup"><span data-stu-id="045b1-219">A character representing the converted bytes.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="045b1-220">Die Länge von <paramref name="value" /> ist kleiner als die Länge eines <see cref="T:System.Char" />-Werts.</span><span class="sxs-lookup"><span data-stu-id="045b1-220">The length of <paramref name="value" /> is less than the length of a <see cref="T:System.Char" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (byte[] value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(unsigned int8[] value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToChar(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Byte(), startIndex As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(cli::array &lt;System::Byte&gt; ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="static member ToChar : byte[] * int -&gt; char" Usage="System.BitConverter.ToChar (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="045b1-221">Ein -Array.</span><span class="sxs-lookup"><span data-stu-id="045b1-221">An array.</span></span></param>
        <param name="startIndex"><span data-ttu-id="045b1-222">Die Anfangsposition in <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="045b1-222">The starting position within <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="045b1-223">Gibt ein Unicode-Zeichen zurück, das aus zwei Bytes an der angegebenen Position in einem Bytearray konvertiert wurde.</span><span class="sxs-lookup"><span data-stu-id="045b1-223">Returns a Unicode character converted from two bytes at a specified position in a byte array.</span></span></summary>
        <returns><span data-ttu-id="045b1-224">Ein Zeichen, das beginnend bei <paramref name="startIndex" /> aus zwei Bytes gebildet wird.</span><span class="sxs-lookup"><span data-stu-id="045b1-224">A character formed by two bytes beginning at <paramref name="startIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="045b1-225">Die <xref:System.BitConverter.ToChar%2A>-Methode konvertiert die Bytes aus dem Index `startIndex` in `startIndex` + 1 in einen <xref:System.Char> Wert.</span><span class="sxs-lookup"><span data-stu-id="045b1-225">The <xref:System.BitConverter.ToChar%2A> method converts the bytes from index `startIndex` to `startIndex` + 1 to a <xref:System.Char> value.</span></span> <span data-ttu-id="045b1-226">Die Reihenfolge der Bytes im Array muss die Byte Reihenfolge der Architektur des Computer Systems widerspiegeln. Weitere Informationen finden Sie im Abschnitt "Hinweise" des Themas <xref:System.BitConverter>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="045b1-226">The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of the <xref:System.BitConverter> class topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="045b1-227">Im folgenden Codebeispiel werden Elemente <xref:System.Byte> Arrays in <xref:System.Char> Werte (Unicode-Zeichen) mit der `ToChar`-Methode konvertiert.</span><span class="sxs-lookup"><span data-stu-id="045b1-227">The following code example converts elements of <xref:System.Byte> arrays to <xref:System.Char> values (Unicode characters) with the `ToChar` method.</span></span>  
  
 [!code-cpp[System.BitConverter.ToXXX.Others#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/CPP/batochar.cpp#2)]
 [!code-csharp[System.BitConverter.ToXXX.Others#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/CS/batochar.cs#2)]
 [!code-vb[System.BitConverter.ToXXX.Others#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/VB/batochar.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="045b1-228"><paramref name="startIndex" /> entspricht der Länge von <paramref name="value" /> minus 1.</span><span class="sxs-lookup"><span data-stu-id="045b1-228"><paramref name="startIndex" /> equals the length of <paramref name="value" /> minus 1.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="045b1-229"><paramref name="value" /> ist <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="045b1-229"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="045b1-230"><paramref name="startIndex" /> ist kleiner als 0 (null) oder größer als die Länge von <paramref name="value" /> minus 1.</span><span class="sxs-lookup"><span data-stu-id="045b1-230"><paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1.</span></span></exception>
        <altmember cref="M:System.BitConverter.GetBytes(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (ReadOnlySpan&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToDouble(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As ReadOnlySpan(Of Byte)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(ReadOnlySpan&lt;System::Byte&gt; value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : ReadOnlySpan&lt;byte&gt; -&gt; double" Usage="System.BitConverter.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="045b1-231">Eine schreibgeschützte Spanne, die die zu konvertierenden Bytes enthält.</span><span class="sxs-lookup"><span data-stu-id="045b1-231">A read-only span containing the bytes to convert.</span></span></param>
        <summary><span data-ttu-id="045b1-232">Konvertiert eine schreibgeschützte Bytespanne in einen Gleitkommawert mit doppelter Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="045b1-232">Converts a read-only byte span into a double-precision floating-point value.</span></span></summary>
        <returns><span data-ttu-id="045b1-233">Ein Gleitkommawert mit doppelter Genauigkeit, der die konvertierten Bytes darstellt.</span><span class="sxs-lookup"><span data-stu-id="045b1-233">A double-precision floating-point value that represents the converted bytes.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="045b1-234">Die Länge von <paramref name="value" /> ist kleiner als die Länge eines <see cref="T:System.Double" />-Werts.</span><span class="sxs-lookup"><span data-stu-id="045b1-234">The length of <paramref name="value" /> is less than the length of a <see cref="T:System.Double" /> value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (byte[] value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(unsigned int8[] value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToDouble(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Byte(), startIndex As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(cli::array &lt;System::Byte&gt; ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="static member ToDouble : byte[] * int -&gt; double" Usage="System.BitConverter.ToDouble (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="045b1-235">Ein Array von Bytes.</span><span class="sxs-lookup"><span data-stu-id="045b1-235">An array of bytes.</span></span></param>
        <param name="startIndex"><span data-ttu-id="045b1-236">Die Anfangsposition in <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="045b1-236">The starting position within <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="045b1-237">Gibt eine Gleitkommazahl mit doppelter Genauigkeit zurück, die aus acht Bytes an der angegebenen Position in einem Bytearray konvertiert wurde.</span><span class="sxs-lookup"><span data-stu-id="045b1-237">Returns a double-precision floating point number converted from eight bytes at a specified position in a byte array.</span></span></summary>
        <returns><span data-ttu-id="045b1-238">Eine Gleitkommazahl mit doppelter Genauigkeit, die beginnend bei <paramref name="startIndex" /> aus acht Bytes gebildet wird.</span><span class="sxs-lookup"><span data-stu-id="045b1-238">A double precision floating point number formed by eight bytes beginning at <paramref name="startIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="045b1-239">Mit der <xref:System.BitConverter.ToDouble%2A>-Methode werden die Bytes aus dem Index `startIndex` in `startIndex` + 7 in einen <xref:System.Double> Wert konvertiert.</span><span class="sxs-lookup"><span data-stu-id="045b1-239">The <xref:System.BitConverter.ToDouble%2A> method converts the bytes from index `startIndex` to `startIndex` + 7 to a <xref:System.Double> value.</span></span> <span data-ttu-id="045b1-240">Die Reihenfolge der Bytes im Array muss die Byte Reihenfolge der Architektur des Computer Systems widerspiegeln. Weitere Informationen finden Sie im Abschnitt "Hinweise" des Themas <xref:System.BitConverter>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="045b1-240">The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of the <xref:System.BitConverter> class topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="045b1-241">Im folgenden Codebeispiel werden Elemente <xref:System.Byte> Arrays in <xref:System.Double> Werte mit der `ToDouble`-Methode konvertiert.</span><span class="sxs-lookup"><span data-stu-id="045b1-241">The following code example converts elements of <xref:System.Byte> arrays to <xref:System.Double> values with the `ToDouble` method.</span></span>  
  
 [!code-cpp[System.BitConverter.ToXXX.Others#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/CPP/batodouble.cpp#3)]
 [!code-csharp[System.BitConverter.ToXXX.Others#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/CS/batodouble.cs#3)]
 [!code-vb[System.BitConverter.ToXXX.Others#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/VB/batodouble.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="045b1-242"><paramref name="startIndex" /> ist größer oder gleich der Länge von <paramref name="value" /> minus 7 und ist kleiner oder gleich der Länge von <paramref name="value" /> minus 1.</span><span class="sxs-lookup"><span data-stu-id="045b1-242"><paramref name="startIndex" /> is greater than or equal to the length of <paramref name="value" /> minus 7, and is less than or equal to the length of <paramref name="value" /> minus 1.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="045b1-243"><paramref name="value" /> ist <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="045b1-243"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="045b1-244"><paramref name="startIndex" /> ist kleiner als 0 (null) oder größer als die Länge von <paramref name="value" /> minus 1.</span><span class="sxs-lookup"><span data-stu-id="045b1-244"><paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1.</span></span></exception>
        <altmember cref="M:System.BitConverter.GetBytes(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (ReadOnlySpan&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToInt16(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As ReadOnlySpan(Of Byte)) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(ReadOnlySpan&lt;System::Byte&gt; value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : ReadOnlySpan&lt;byte&gt; -&gt; int16" Usage="System.BitConverter.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="045b1-245">Eine schreibgeschützte Spanne, die die zu konvertierenden Bytes enthält.</span><span class="sxs-lookup"><span data-stu-id="045b1-245">A read-only span containing the bytes to convert.</span></span></param>
        <summary><span data-ttu-id="045b1-246">Konvertiert eine schreibgeschützte Bytespanne in einen 16-Bit-Integerwert mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="045b1-246">Converts a read-only byte span into a 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="045b1-247">Ein 16-Bit-Integerwert mit Vorzeichen, der die konvertierten Bytes darstellt.</span><span class="sxs-lookup"><span data-stu-id="045b1-247">A 16-bit signed integer representing the converted bytes.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="045b1-248">Die Länge von <paramref name="value" /> ist kleiner als 2.</span><span class="sxs-lookup"><span data-stu-id="045b1-248">The length of <paramref name="value" /> is less than 2.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (byte[] value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(unsigned int8[] value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToInt16(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Byte(), startIndex As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(cli::array &lt;System::Byte&gt; ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : byte[] * int -&gt; int16" Usage="System.BitConverter.ToInt16 (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="045b1-249">Ein Array von Bytes.</span><span class="sxs-lookup"><span data-stu-id="045b1-249">An array of bytes.</span></span></param>
        <param name="startIndex"><span data-ttu-id="045b1-250">Die Anfangsposition in <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="045b1-250">The starting position within <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="045b1-251">Gibt eine 16-Bit-Ganzzahl mit Vorzeichen zurück, die aus zwei Bytes an der angegebenen Position in einem Bytearray konvertiert wurde.</span><span class="sxs-lookup"><span data-stu-id="045b1-251">Returns a 16-bit signed integer converted from two bytes at a specified position in a byte array.</span></span></summary>
        <returns><span data-ttu-id="045b1-252">Eine 16-Bit-Ganzzahl mit Vorzeichen, die beginnend bei <paramref name="startIndex" /> aus zwei Bytes gebildet wird.</span><span class="sxs-lookup"><span data-stu-id="045b1-252">A 16-bit signed integer formed by two bytes beginning at <paramref name="startIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="045b1-253">Die <xref:System.BitConverter.ToInt16%2A>-Methode konvertiert die Bytes aus dem Index `startIndex` in `startIndex` + 1 in einen <xref:System.Int16> Wert.</span><span class="sxs-lookup"><span data-stu-id="045b1-253">The <xref:System.BitConverter.ToInt16%2A> method converts the bytes from index `startIndex` to `startIndex` + 1 to an <xref:System.Int16> value.</span></span> <span data-ttu-id="045b1-254">Die Reihenfolge der Bytes im Array muss die Byte Reihenfolge der Architektur des Computer Systems widerspiegeln. Weitere Informationen finden Sie im Abschnitt "Hinweise" des Themas <xref:System.BitConverter>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="045b1-254">The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of the <xref:System.BitConverter> class topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="045b1-255">Im folgenden Codebeispiel werden Elemente <xref:System.Byte> Arrays in <xref:System.Int16> Werte mit der `ToInt16`-Methode konvertiert.</span><span class="sxs-lookup"><span data-stu-id="045b1-255">The following code example converts elements of <xref:System.Byte> arrays to <xref:System.Int16> values with the `ToInt16` method.</span></span>  
  
 [!code-cpp[System.BitConverter.ToXXX.SInts#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.SInts/CPP/batoint16.cpp#1)]
 [!code-csharp[System.BitConverter.ToXXX.SInts#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.SInts/CS/batoint16.cs#1)]
 [!code-vb[System.BitConverter.ToXXX.SInts#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToXXX.SInts/VB/batoint16.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="045b1-256"><paramref name="startIndex" /> entspricht der Länge von <paramref name="value" /> minus 1.</span><span class="sxs-lookup"><span data-stu-id="045b1-256"><paramref name="startIndex" /> equals the length of <paramref name="value" /> minus 1.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="045b1-257"><paramref name="value" /> ist <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="045b1-257"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="045b1-258"><paramref name="startIndex" /> ist kleiner als 0 (null) oder größer als die Länge von <paramref name="value" /> minus 1.</span><span class="sxs-lookup"><span data-stu-id="045b1-258"><paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1.</span></span></exception>
        <altmember cref="M:System.BitConverter.GetBytes(System.Int16)" />
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (ReadOnlySpan&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToInt32(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As ReadOnlySpan(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(ReadOnlySpan&lt;System::Byte&gt; value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : ReadOnlySpan&lt;byte&gt; -&gt; int" Usage="System.BitConverter.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="045b1-259">Eine schreibgeschützte Spanne, die die zu konvertierenden Bytes enthält.</span><span class="sxs-lookup"><span data-stu-id="045b1-259">A read-only span containing the bytes to convert.</span></span></param>
        <summary><span data-ttu-id="045b1-260">Konvertiert eine schreibgeschützte Bytespanne in einen 32-Bit-Integerwert mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="045b1-260">Converts a read-only byte span into a 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="045b1-261">Ein 32-Bit-Integerwert mit Vorzeichen, der die konvertierten Bytes darstellt.</span><span class="sxs-lookup"><span data-stu-id="045b1-261">A 32-bit signed integer representing the converted bytes.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="045b1-262">Die Länge von <paramref name="value" /> ist kleiner als 4.</span><span class="sxs-lookup"><span data-stu-id="045b1-262">The length of <paramref name="value" /> is less than 4.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (byte[] value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(unsigned int8[] value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToInt32(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Byte(), startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(cli::array &lt;System::Byte&gt; ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : byte[] * int -&gt; int" Usage="System.BitConverter.ToInt32 (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="045b1-263">Ein Array von Bytes.</span><span class="sxs-lookup"><span data-stu-id="045b1-263">An array of bytes.</span></span></param>
        <param name="startIndex"><span data-ttu-id="045b1-264">Die Anfangsposition in <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="045b1-264">The starting position within <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="045b1-265">Gibt eine 32-Bit-Ganzzahl mit Vorzeichen zurück, die aus vier Bytes an der angegebenen Position in einem Bytearray konvertiert wurde.</span><span class="sxs-lookup"><span data-stu-id="045b1-265">Returns a 32-bit signed integer converted from four bytes at a specified position in a byte array.</span></span></summary>
        <returns><span data-ttu-id="045b1-266">Eine 32-Bit-Ganzzahl mit Vorzeichen, die beginnend bei <paramref name="startIndex" /> aus vier Bytes gebildet wird.</span><span class="sxs-lookup"><span data-stu-id="045b1-266">A 32-bit signed integer formed by four bytes beginning at <paramref name="startIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="045b1-267">Die <xref:System.BitConverter.ToInt32%2A>-Methode konvertiert die Bytes aus dem Index `startIndex` in `startIndex` + 3 in einen <xref:System.Int32> Wert.</span><span class="sxs-lookup"><span data-stu-id="045b1-267">The <xref:System.BitConverter.ToInt32%2A> method converts the bytes from index `startIndex` to `startIndex` + 3 to an <xref:System.Int32> value.</span></span> <span data-ttu-id="045b1-268">Die Reihenfolge der Bytes im Array muss die Byte Reihenfolge der Architektur des Computer Systems widerspiegeln. Weitere Informationen finden Sie im Abschnitt "Hinweise" <xref:System.BitConverter>.</span><span class="sxs-lookup"><span data-stu-id="045b1-268">The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of <xref:System.BitConverter>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="045b1-269">Im folgenden Beispiel wird die <xref:System.BitConverter.ToInt32%2A>-Methode verwendet, um <xref:System.Int32> Werte aus einem vier-Byte-Array und aus den oberen vier Bytes eines 8-Byte-Arrays zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="045b1-269">The following example uses the <xref:System.BitConverter.ToInt32%2A> method to create <xref:System.Int32> values from a four-byte array and from the upper four bytes of an eight-byte array.</span></span> <span data-ttu-id="045b1-270">Außerdem werden die Methoden <xref:System.BitConverter.GetBytes%28System.Int32%29> und <xref:System.BitConverter.ToInt32%2A> verwendet, um einen Roundtrip für einen <xref:System.Int32> Wert durchzusetzen.</span><span class="sxs-lookup"><span data-stu-id="045b1-270">It also uses the <xref:System.BitConverter.GetBytes%28System.Int32%29> and <xref:System.BitConverter.ToInt32%2A> methods to round-trip an <xref:System.Int32> value.</span></span>  
  
 [!code-csharp[System.BitConverter.ToInt32#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.bitconverter.toint32/cs/toint32.cs#1)]
 [!code-vb[System.BitConverter.ToInt32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.bitconverter.toint32/vb/toint32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="045b1-271"><paramref name="startIndex" /> ist größer oder gleich der Länge von <paramref name="value" /> minus 3 und ist kleiner oder gleich der Länge von <paramref name="value" /> minus 1.</span><span class="sxs-lookup"><span data-stu-id="045b1-271"><paramref name="startIndex" /> is greater than or equal to the length of <paramref name="value" /> minus 3, and is less than or equal to the length of <paramref name="value" /> minus 1.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="045b1-272"><paramref name="value" /> ist <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="045b1-272"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="045b1-273"><paramref name="startIndex" /> ist kleiner als 0 (null) oder größer als die Länge von <paramref name="value" /> minus 1.</span><span class="sxs-lookup"><span data-stu-id="045b1-273"><paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1.</span></span></exception>
        <altmember cref="M:System.BitConverter.GetBytes(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (ReadOnlySpan&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToInt64(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As ReadOnlySpan(Of Byte)) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(ReadOnlySpan&lt;System::Byte&gt; value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : ReadOnlySpan&lt;byte&gt; -&gt; int64" Usage="System.BitConverter.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="045b1-274">Eine schreibgeschützte Spanne, die die zu konvertierenden Bytes enthält.</span><span class="sxs-lookup"><span data-stu-id="045b1-274">A read-only span containing the bytes to convert.</span></span></param>
        <summary><span data-ttu-id="045b1-275">Konvertiert eine schreibgeschützte Bytespanne in einen 64-Bit-Integerwert mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="045b1-275">Converts a read-only byte span into a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="045b1-276">Ein 64-Bit-Integerwert mit Vorzeichen, der die konvertierten Bytes darstellt.</span><span class="sxs-lookup"><span data-stu-id="045b1-276">A 64-bit signed integer representing the converted bytes.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="045b1-277">Die Länge von <paramref name="value" /> ist kleiner als 8.</span><span class="sxs-lookup"><span data-stu-id="045b1-277">The length of <paramref name="value" /> is less than 8.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (byte[] value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(unsigned int8[] value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToInt64(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Byte(), startIndex As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(cli::array &lt;System::Byte&gt; ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : byte[] * int -&gt; int64" Usage="System.BitConverter.ToInt64 (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="045b1-278">Ein Array von Bytes.</span><span class="sxs-lookup"><span data-stu-id="045b1-278">An array of bytes.</span></span></param>
        <param name="startIndex"><span data-ttu-id="045b1-279">Die Anfangsposition in <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="045b1-279">The starting position within <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="045b1-280">Gibt eine 64-Bit-Ganzzahl mit Vorzeichen zurück, die aus acht Bytes an der angegebenen Position in einem Bytearray konvertiert wurde.</span><span class="sxs-lookup"><span data-stu-id="045b1-280">Returns a 64-bit signed integer converted from eight bytes at a specified position in a byte array.</span></span></summary>
        <returns><span data-ttu-id="045b1-281">Eine 64-Bit-Ganzzahl mit Vorzeichen, die beginnend bei <paramref name="startIndex" /> aus acht Bytes gebildet wird.</span><span class="sxs-lookup"><span data-stu-id="045b1-281">A 64-bit signed integer formed by eight bytes beginning at <paramref name="startIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="045b1-282">Mit der <xref:System.BitConverter.ToInt64%2A>-Methode werden die Bytes aus dem Index `startIndex` in `startIndex` + 7 in einen <xref:System.Int64> Wert konvertiert.</span><span class="sxs-lookup"><span data-stu-id="045b1-282">The <xref:System.BitConverter.ToInt64%2A> method converts the bytes from index `startIndex` to `startIndex` + 7 to a <xref:System.Int64> value.</span></span> <span data-ttu-id="045b1-283">Die Reihenfolge der Bytes im Array muss die Byte Reihenfolge der Architektur des Computer Systems widerspiegeln. Weitere Informationen finden Sie im Abschnitt "Hinweise" des Themas <xref:System.BitConverter>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="045b1-283">The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of the <xref:System.BitConverter> class topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="045b1-284">Im folgenden Codebeispiel werden Elemente <xref:System.Byte> Arrays in <xref:System.Int64> Werte mit der `ToInt64`-Methode konvertiert.</span><span class="sxs-lookup"><span data-stu-id="045b1-284">The following code example converts elements of <xref:System.Byte> arrays to <xref:System.Int64> values with the `ToInt64` method.</span></span>  
  
 [!code-cpp[System.BitConverter.ToXXX.SInts#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.SInts/CPP/batoint64.cpp#3)]
 [!code-csharp[System.BitConverter.ToXXX.SInts#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.SInts/CS/batoint64.cs#3)]
 [!code-vb[System.BitConverter.ToXXX.SInts#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToXXX.SInts/VB/batoint64.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="045b1-285"><paramref name="startIndex" /> ist größer oder gleich der Länge von <paramref name="value" /> minus 7 und ist kleiner oder gleich der Länge von <paramref name="value" /> minus 1.</span><span class="sxs-lookup"><span data-stu-id="045b1-285"><paramref name="startIndex" /> is greater than or equal to the length of <paramref name="value" /> minus 7, and is less than or equal to the length of <paramref name="value" /> minus 1.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="045b1-286"><paramref name="value" /> ist <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="045b1-286"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="045b1-287"><paramref name="startIndex" /> ist kleiner als 0 (null) oder größer als die Länge von <paramref name="value" /> minus 1.</span><span class="sxs-lookup"><span data-stu-id="045b1-287"><paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1.</span></span></exception>
        <altmember cref="M:System.BitConverter.GetBytes(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (ReadOnlySpan&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToSingle(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As ReadOnlySpan(Of Byte)) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(ReadOnlySpan&lt;System::Byte&gt; value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : ReadOnlySpan&lt;byte&gt; -&gt; single" Usage="System.BitConverter.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="045b1-288">Eine schreibgeschützte Spanne, die die zu konvertierenden Bytes enthält.</span><span class="sxs-lookup"><span data-stu-id="045b1-288">A read-only span containing the bytes to convert.</span></span></param>
        <summary><span data-ttu-id="045b1-289">Konvertiert eine schreibgeschützte Bytespanne in einen Gleitkommawert mit doppelter Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="045b1-289">Converts a read-only byte span into a double-precision floating-point value.</span></span></summary>
        <returns><span data-ttu-id="045b1-290">Ein Gleitkommawert mit doppelter Genauigkeit, der die konvertierten Bytes darstellt.</span><span class="sxs-lookup"><span data-stu-id="045b1-290">A double-precision floating-point value representing the converted bytes.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="045b1-291">Die Länge von <paramref name="value" /> ist kleiner als die Länge eines <see cref="T:System.Double" />-Werts.</span><span class="sxs-lookup"><span data-stu-id="045b1-291">The length of <paramref name="value" /> is less than the length of a <see cref="T:System.Double" /> value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (byte[] value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(unsigned int8[] value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToSingle(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Byte(), startIndex As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(cli::array &lt;System::Byte&gt; ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="static member ToSingle : byte[] * int -&gt; single" Usage="System.BitConverter.ToSingle (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="045b1-292">Ein Array von Bytes.</span><span class="sxs-lookup"><span data-stu-id="045b1-292">An array of bytes.</span></span></param>
        <param name="startIndex"><span data-ttu-id="045b1-293">Die Anfangsposition in <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="045b1-293">The starting position within <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="045b1-294">Gibt eine Gleitkommazahl mit einfacher Genauigkeit zurück, die aus vier Bytes an der angegebenen Position in einem Bytearray konvertiert wurde.</span><span class="sxs-lookup"><span data-stu-id="045b1-294">Returns a single-precision floating point number converted from four bytes at a specified position in a byte array.</span></span></summary>
        <returns><span data-ttu-id="045b1-295">Eine Gleitkommazahl mit einfacher Genauigkeit, die beginnend bei <paramref name="startIndex" /> aus vier Bytes gebildet wird.</span><span class="sxs-lookup"><span data-stu-id="045b1-295">A single-precision floating point number formed by four bytes beginning at <paramref name="startIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="045b1-296">Die <xref:System.BitConverter.ToSingle%2A>-Methode konvertiert die Bytes aus dem Index `startIndex` in `startIndex` + 3 in einen <xref:System.Single> Wert.</span><span class="sxs-lookup"><span data-stu-id="045b1-296">The <xref:System.BitConverter.ToSingle%2A> method converts the bytes from index `startIndex` to `startIndex` + 3 to a <xref:System.Single> value.</span></span> <span data-ttu-id="045b1-297">Die Reihenfolge der Bytes im Array muss die Byte Reihenfolge der Architektur des Computer Systems widerspiegeln. Weitere Informationen finden Sie im Abschnitt "Hinweise" <xref:System.BitConverter>.</span><span class="sxs-lookup"><span data-stu-id="045b1-297">The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of <xref:System.BitConverter>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="045b1-298">Im folgenden Codebeispiel werden Elemente <xref:System.Byte> Arrays in <xref:System.Single> Werte mit der `ToSingle`-Methode konvertiert.</span><span class="sxs-lookup"><span data-stu-id="045b1-298">The following code example converts elements of <xref:System.Byte> arrays to <xref:System.Single> values with the `ToSingle` method.</span></span>  
  
 [!code-cpp[System.BitConverter.ToXXX.Others#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/CPP/batosingle.cpp#4)]
 [!code-csharp[System.BitConverter.ToXXX.Others#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/CS/batosingle.cs#4)]
 [!code-vb[System.BitConverter.ToXXX.Others#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/VB/batosingle.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="045b1-299"><paramref name="startIndex" /> ist größer oder gleich der Länge von <paramref name="value" /> minus 3 und ist kleiner oder gleich der Länge von <paramref name="value" /> minus 1.</span><span class="sxs-lookup"><span data-stu-id="045b1-299"><paramref name="startIndex" /> is greater than or equal to the length of <paramref name="value" /> minus 3, and is less than or equal to the length of <paramref name="value" /> minus 1.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="045b1-300"><paramref name="value" /> ist <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="045b1-300"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="045b1-301"><paramref name="startIndex" /> ist kleiner als 0 (null) oder größer als die Länge von <paramref name="value" /> minus 1.</span><span class="sxs-lookup"><span data-stu-id="045b1-301"><paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1.</span></span></exception>
        <altmember cref="M:System.BitConverter.GetBytes(System.Single)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="045b1-302">Konvertiert den numerischen Wert jedes Elements im angegebenen Bytearray in die entsprechende hexadezimale Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="045b1-302">Converts the numeric value of each element of a specified array of bytes to its equivalent hexadecimal string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (byte[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int8[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToString(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Byte()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(cli::array &lt;System::Byte&gt; ^ value);" />
      <MemberSignature Language="F#" Value="static member ToString : byte[] -&gt; string" Usage="System.BitConverter.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="045b1-303">Ein Array von Bytes.</span><span class="sxs-lookup"><span data-stu-id="045b1-303">An array of bytes.</span></span></param>
        <summary><span data-ttu-id="045b1-304">Konvertiert den numerischen Wert jedes Elements im angegebenen Bytearray in die entsprechende hexadezimale Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="045b1-304">Converts the numeric value of each element of a specified array of bytes to its equivalent hexadecimal string representation.</span></span></summary>
        <returns><span data-ttu-id="045b1-305">Eine Zeichenfolge aus hexadezimalen Paaren, die durch einen Bindestrich getrennt sind. Jedes Paar stellt das entsprechende Element in <paramref name="value" /> dar, z. B. "7F-2C-4A-00".</span><span class="sxs-lookup"><span data-stu-id="045b1-305">A string of hexadecimal pairs separated by hyphens, where each pair represents the corresponding element in <paramref name="value" />; for example, "7F-2C-4A-00".</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="045b1-306">Alle Elemente `value` werden konvertiert.</span><span class="sxs-lookup"><span data-stu-id="045b1-306">All the elements of `value` are converted.</span></span> <span data-ttu-id="045b1-307">Die Reihenfolge der hexadezimal Zeichenfolgen, die von der <xref:System.BitConverter.ToString%2A>-Methode zurückgegeben wird, hängt davon ab, ob die Computerarchitektur Little-Endian oder Big-Endian</span><span class="sxs-lookup"><span data-stu-id="045b1-307">The order of hexadecimal strings returned by the <xref:System.BitConverter.ToString%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="045b1-308">Im folgenden Codebeispiel werden <xref:System.Byte> Arrays in <xref:System.String>-Objekte mit der `ToString`-Methode konvertiert.</span><span class="sxs-lookup"><span data-stu-id="045b1-308">The following code example converts <xref:System.Byte> arrays to <xref:System.String> objects with the `ToString` method.</span></span>  
  
 [!code-cpp[System.BitConverter.ToString#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToString/CPP/batostring.cpp#1)]
 [!code-csharp[System.BitConverter.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToString/CS/batostring.cs#1)]
 [!code-vb[System.BitConverter.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToString/VB/batostring.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="045b1-309"><paramref name="value" /> ist <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="045b1-309"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (byte[] value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int8[] value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToString(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Byte(), startIndex As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(cli::array &lt;System::Byte&gt; ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="static member ToString : byte[] * int -&gt; string" Usage="System.BitConverter.ToString (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="045b1-310">Ein Array von Bytes.</span><span class="sxs-lookup"><span data-stu-id="045b1-310">An array of bytes.</span></span></param>
        <param name="startIndex"><span data-ttu-id="045b1-311">Die Anfangsposition in <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="045b1-311">The starting position within <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="045b1-312">Konvertiert den numerischen Wert jedes Elements in einem Teil des angegebenen Bytearrays in die entsprechende hexadezimale Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="045b1-312">Converts the numeric value of each element of a specified subarray of bytes to its equivalent hexadecimal string representation.</span></span></summary>
        <returns><span data-ttu-id="045b1-313">Eine Zeichenfolge aus hexadezimalen Paaren, die durch einen Bindestrich getrennt sind. Jedes Paar stellt ein Element aus der Teilmenge von <paramref name="value" /> dar (z. B. "7F-2C-4A-00").</span><span class="sxs-lookup"><span data-stu-id="045b1-313">A string of hexadecimal pairs separated by hyphens, where each pair represents the corresponding element in a subarray of <paramref name="value" />; for example, "7F-2C-4A-00".</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="045b1-314">Die Elemente aus der Array Position `startIndex` bis zum Ende des Arrays werden konvertiert.</span><span class="sxs-lookup"><span data-stu-id="045b1-314">The elements from array position `startIndex` to the end of the array are converted.</span></span> <span data-ttu-id="045b1-315">Die Reihenfolge der hexadezimal Zeichenfolgen, die von der <xref:System.BitConverter.ToString%2A>-Methode zurückgegeben wird, hängt davon ab, ob die Computerarchitektur Little-Endian oder Big-Endian</span><span class="sxs-lookup"><span data-stu-id="045b1-315">The order of hexadecimal strings returned by the <xref:System.BitConverter.ToString%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="045b1-316">Im folgenden Codebeispiel wird der Teil eines <xref:System.Byte> Arrays, beginnend bei der angegebenen `startIndex`, in eine <xref:System.String> mit der `ToString`-Methode konvertiert.</span><span class="sxs-lookup"><span data-stu-id="045b1-316">The following code example converts the part of a <xref:System.Byte> array starting at the specified `startIndex` to a <xref:System.String> with the `ToString` method.</span></span>  
  
 [!code-cpp[System.BitConverter.ToString#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToString/CPP/batostringii.cpp#2)]
 [!code-csharp[System.BitConverter.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToString/CS/batostringii.cs#2)]
 [!code-vb[System.BitConverter.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToString/VB/batostringii.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="045b1-317"><paramref name="value" /> ist <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="045b1-317"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="045b1-318"><paramref name="startIndex" /> ist kleiner als 0 (null) oder größer als die Länge von <paramref name="value" /> minus 1.</span><span class="sxs-lookup"><span data-stu-id="045b1-318"><paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (byte[] value, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int8[] value, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToString(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Byte(), startIndex As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(cli::array &lt;System::Byte&gt; ^ value, int startIndex, int length);" />
      <MemberSignature Language="F#" Value="static member ToString : byte[] * int * int -&gt; string" Usage="System.BitConverter.ToString (value, startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="045b1-319">Ein Array von Bytes.</span><span class="sxs-lookup"><span data-stu-id="045b1-319">An array of bytes.</span></span></param>
        <param name="startIndex"><span data-ttu-id="045b1-320">Die Anfangsposition in <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="045b1-320">The starting position within <paramref name="value" />.</span></span></param>
        <param name="length"><span data-ttu-id="045b1-321">Die Anzahl der zu konvertierenden Elemente in <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="045b1-321">The number of array elements in <paramref name="value" /> to convert.</span></span></param>
        <summary><span data-ttu-id="045b1-322">Konvertiert den numerischen Wert jedes Elements in einem Teil des angegebenen Bytearrays in die entsprechende hexadezimale Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="045b1-322">Converts the numeric value of each element of a specified subarray of bytes to its equivalent hexadecimal string representation.</span></span></summary>
        <returns><span data-ttu-id="045b1-323">Eine Zeichenfolge aus hexadezimalen Paaren, die durch einen Bindestrich getrennt sind. Jedes Paar stellt ein Element aus der Teilmenge von <paramref name="value" /> dar (z. B. "7F-2C-4A-00").</span><span class="sxs-lookup"><span data-stu-id="045b1-323">A string of hexadecimal pairs separated by hyphens, where each pair represents the corresponding element in a subarray of <paramref name="value" />; for example, "7F-2C-4A-00".</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="045b1-324">Die `length` Elemente aus der Array Positions `startIndex` werden konvertiert.</span><span class="sxs-lookup"><span data-stu-id="045b1-324">The `length` elements from array position `startIndex` are converted.</span></span> <span data-ttu-id="045b1-325">Wenn `length` gleich 0 (null) ist, gibt die Methode <xref:System.String.Empty?displayProperty=nameWithType>zurück.</span><span class="sxs-lookup"><span data-stu-id="045b1-325">If `length` equals zero, the method returns <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="045b1-326">Die Reihenfolge der hexadezimal Zeichenfolgen, die von der <xref:System.BitConverter.ToString%2A>-Methode zurückgegeben wird, hängt davon ab, ob die Computerarchitektur Little-Endian oder Big-Endian</span><span class="sxs-lookup"><span data-stu-id="045b1-326">The order of hexadecimal strings returned by the <xref:System.BitConverter.ToString%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="045b1-327">Im folgenden Beispiel wird die <xref:System.BitConverter.ToString%2A>-Methode verwendet, um einen Teil eines Bytearrays, beginnend bei der angegebenen `startIndex` und mit dem angegebenen `length`, in eine Zeichenfolge zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="045b1-327">The following example uses the <xref:System.BitConverter.ToString%2A> method to convert part of a byte array, starting at the specified `startIndex` and with the specified `length`, to a string.</span></span>  
  
 [!code-cpp[System.BitConverter.ToString#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToString/CPP/batostringii.cpp#2)]
 [!code-csharp[System.BitConverter.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToString/CS/batostringii.cs#2)]
 [!code-vb[System.BitConverter.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToString/VB/batostringii.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="045b1-328"><paramref name="value" /> ist <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="045b1-328"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="045b1-329"><paramref name="startIndex" /> oder <paramref name="length" /> ist kleiner als 0.</span><span class="sxs-lookup"><span data-stu-id="045b1-329"><paramref name="startIndex" /> or <paramref name="length" /> is less than zero.</span></span>  
  
<span data-ttu-id="045b1-330">- oder -</span><span class="sxs-lookup"><span data-stu-id="045b1-330">-or-</span></span> 
 <span data-ttu-id="045b1-331"><paramref name="startIndex" /> ist größer als 0 (null) und größer als oder gleich der Länge von <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="045b1-331"><paramref name="startIndex" /> is greater than zero and is greater than or equal to the length of <paramref name="value" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="045b1-332">Die Kombination von <paramref name="startIndex" /> und <paramref name="length" /> gibt keine Position in <paramref name="value" /> an. Das heißt, der <paramref name="startIndex" />-Parameter ist größer als die Länge von <paramref name="value" /> abzüglich des <paramref name="length" />-Parameters.</span><span class="sxs-lookup"><span data-stu-id="045b1-332">The combination of <paramref name="startIndex" /> and <paramref name="length" /> does not specify a position within <paramref name="value" />; that is, the <paramref name="startIndex" /> parameter is greater than the length of <paramref name="value" /> minus the <paramref name="length" /> parameter.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (ReadOnlySpan&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToUInt16(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As ReadOnlySpan(Of Byte)) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(ReadOnlySpan&lt;System::Byte&gt; value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : ReadOnlySpan&lt;byte&gt; -&gt; uint16" Usage="System.BitConverter.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.0;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="045b1-333">Eine schreibgeschützte Spanne, die die zu konvertierenden Bytes enthält.</span><span class="sxs-lookup"><span data-stu-id="045b1-333">A read-only span containing the bytes to convert.</span></span></param>
        <summary><span data-ttu-id="045b1-334">Konvertiert eine schreibgeschützte Bytespanne in einen 16-Bit-Integerwert ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="045b1-334">Converts a read-only byte-span into a 16-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="045b1-335">Ein 16-Bit-Integerwert ohne Vorzeichen, der die konvertierten Bytes darstellt.</span><span class="sxs-lookup"><span data-stu-id="045b1-335">An 16-bit unsigned integer representing the converted bytes.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="045b1-336">Die Länge von <paramref name="value" /> ist kleiner als 2.</span><span class="sxs-lookup"><span data-stu-id="045b1-336">The length of <paramref name="value" /> is less than the 2.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (byte[] value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(unsigned int8[] value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToUInt16(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Byte(), startIndex As Integer) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(cli::array &lt;System::Byte&gt; ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : byte[] * int -&gt; uint16" Usage="System.BitConverter.ToUInt16 (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="045b1-337">Das Bytearray.</span><span class="sxs-lookup"><span data-stu-id="045b1-337">The array of bytes.</span></span></param>
        <param name="startIndex"><span data-ttu-id="045b1-338">Die Anfangsposition in <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="045b1-338">The starting position within <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="045b1-339">Gibt eine vorzeichenlose 16-Bit-Ganzzahl zurück, die aus zwei Bytes an der angegebenen Position in einem Bytearray konvertiert wurde.</span><span class="sxs-lookup"><span data-stu-id="045b1-339">Returns a 16-bit unsigned integer converted from two bytes at a specified position in a byte array.</span></span></summary>
        <returns><span data-ttu-id="045b1-340">Eine vorzeichenlose 16-Bit-Ganzzahl, die beginnend bei <paramref name="startIndex" /> aus zwei Bytes gebildet wird.</span><span class="sxs-lookup"><span data-stu-id="045b1-340">A 16-bit unsigned integer formed by two bytes beginning at <paramref name="startIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="045b1-341">Die <xref:System.BitConverter.ToUInt16%2A>-Methode konvertiert die Bytes aus dem Index `startIndex` in `startIndex` + 1 in einen <xref:System.UInt16> Wert.</span><span class="sxs-lookup"><span data-stu-id="045b1-341">The <xref:System.BitConverter.ToUInt16%2A> method converts the bytes from index `startIndex` to `startIndex` + 1 to a <xref:System.UInt16> value.</span></span> <span data-ttu-id="045b1-342">Die Reihenfolge der Bytes im Array muss die Byte Reihenfolge der Architektur des Computer Systems widerspiegeln. Weitere Informationen finden Sie im Abschnitt "Hinweise" des Themas <xref:System.BitConverter>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="045b1-342">The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of the <xref:System.BitConverter> class topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="045b1-343">Im folgenden Codebeispiel werden Elemente <xref:System.Byte> Arrays in <xref:System.UInt16> Werte mit der `ToUInt16`-Methode konvertiert.</span><span class="sxs-lookup"><span data-stu-id="045b1-343">The following code example converts elements of <xref:System.Byte> arrays to <xref:System.UInt16> values with the `ToUInt16` method.</span></span>  
  
 [!code-cpp[System.BitConverter.ToXXX.UInts#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.UInts/CPP/batouint16.cpp#1)]
 [!code-csharp[System.BitConverter.ToXXX.UInts#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.UInts/CS/batouint16.cs#1)]
 [!code-vb[System.BitConverter.ToXXX.UInts#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToXXX.UInts/VB/batouint16.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="045b1-344"><paramref name="startIndex" /> entspricht der Länge von <paramref name="value" /> minus 1.</span><span class="sxs-lookup"><span data-stu-id="045b1-344"><paramref name="startIndex" /> equals the length of <paramref name="value" /> minus 1.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="045b1-345"><paramref name="value" /> ist <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="045b1-345"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="045b1-346"><paramref name="startIndex" /> ist kleiner als 0 (null) oder größer als die Länge von <paramref name="value" /> minus 1.</span><span class="sxs-lookup"><span data-stu-id="045b1-346"><paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1.</span></span></exception>
        <altmember cref="M:System.BitConverter.GetBytes(System.UInt16)" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (ReadOnlySpan&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToUInt32(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As ReadOnlySpan(Of Byte)) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(ReadOnlySpan&lt;System::Byte&gt; value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : ReadOnlySpan&lt;byte&gt; -&gt; uint32" Usage="System.BitConverter.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.0;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="045b1-347">Eine schreibgeschützte Spanne, die die zu konvertierenden Bytes enthält.</span><span class="sxs-lookup"><span data-stu-id="045b1-347">A read-only span containing the bytes to convert.</span></span></param>
        <summary><span data-ttu-id="045b1-348">Konvertiert eine schreibgeschützte Bytespanne in einen 32-Bit-Integerwert ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="045b1-348">Converts a read-only byte span into a 32-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="045b1-349">Ein 32-Bit-Integerwert ohne Vorzeichen, der die konvertierten Bytes darstellt.</span><span class="sxs-lookup"><span data-stu-id="045b1-349">A 32-bit unsigned integer representing the converted bytes.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="045b1-350">Die Länge von <paramref name="value" /> ist kleiner als 4.</span><span class="sxs-lookup"><span data-stu-id="045b1-350">The length of <paramref name="value" /> is less than 4.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (byte[] value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(unsigned int8[] value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToUInt32(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Byte(), startIndex As Integer) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(cli::array &lt;System::Byte&gt; ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : byte[] * int -&gt; uint32" Usage="System.BitConverter.ToUInt32 (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="045b1-351">Ein Array von Bytes.</span><span class="sxs-lookup"><span data-stu-id="045b1-351">An array of bytes.</span></span></param>
        <param name="startIndex"><span data-ttu-id="045b1-352">Die Anfangsposition in <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="045b1-352">The starting position within <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="045b1-353">Gibt eine vorzeichenlose 32-Bit-Ganzzahl zurück, die aus vier Bytes an der angegebenen Position in einem Bytearray konvertiert wurde.</span><span class="sxs-lookup"><span data-stu-id="045b1-353">Returns a 32-bit unsigned integer converted from four bytes at a specified position in a byte array.</span></span></summary>
        <returns><span data-ttu-id="045b1-354">Eine vorzeichenlose 32-Bit-Ganzzahl, die beginnend bei <paramref name="startIndex" /> aus vier Bytes gebildet wird.</span><span class="sxs-lookup"><span data-stu-id="045b1-354">A 32-bit unsigned integer formed by four bytes beginning at <paramref name="startIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="045b1-355">Die <xref:System.BitConverter.ToUInt32%2A>-Methode konvertiert die Bytes aus dem Index `startIndex` in `startIndex` + 3 in einen <xref:System.UInt32> Wert.</span><span class="sxs-lookup"><span data-stu-id="045b1-355">The <xref:System.BitConverter.ToUInt32%2A> method converts the bytes from index `startIndex` to `startIndex` + 3 to a <xref:System.UInt32> value.</span></span> <span data-ttu-id="045b1-356">Die Reihenfolge der Bytes im Array muss die Byte Reihenfolge der Architektur des Computer Systems widerspiegeln. Weitere Informationen finden Sie im Abschnitt "Hinweise" des Themas <xref:System.BitConverter>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="045b1-356">The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of the <xref:System.BitConverter> class topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="045b1-357">Im folgenden Codebeispiel werden Elemente <xref:System.Byte> Arrays in <xref:System.UInt32> Werte mit der `ToUInt32`-Methode konvertiert.</span><span class="sxs-lookup"><span data-stu-id="045b1-357">The following code example converts elements of <xref:System.Byte> arrays to <xref:System.UInt32> values with the `ToUInt32` method.</span></span>  
  
 [!code-cpp[System.BitConverter.ToXXX.UInts#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.UInts/CPP/batouint32.cpp#2)]
 [!code-csharp[System.BitConverter.ToXXX.UInts#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.UInts/CS/batouint32.cs#2)]
 [!code-vb[System.BitConverter.ToXXX.UInts#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToXXX.UInts/VB/batouint32.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="045b1-358"><paramref name="startIndex" /> ist größer oder gleich der Länge von <paramref name="value" /> minus 3 und ist kleiner oder gleich der Länge von <paramref name="value" /> minus 1.</span><span class="sxs-lookup"><span data-stu-id="045b1-358"><paramref name="startIndex" /> is greater than or equal to the length of <paramref name="value" /> minus 3, and is less than or equal to the length of <paramref name="value" /> minus 1.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="045b1-359"><paramref name="value" /> ist <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="045b1-359"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="045b1-360"><paramref name="startIndex" /> ist kleiner als 0 (null) oder größer als die Länge von <paramref name="value" /> minus 1.</span><span class="sxs-lookup"><span data-stu-id="045b1-360"><paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1.</span></span></exception>
        <altmember cref="M:System.BitConverter.GetBytes(System.UInt32)" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (ReadOnlySpan&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToUInt64(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As ReadOnlySpan(Of Byte)) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(ReadOnlySpan&lt;System::Byte&gt; value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : ReadOnlySpan&lt;byte&gt; -&gt; uint64" Usage="System.BitConverter.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.0;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="045b1-361">Eine schreibgeschützte Spanne, die die zu konvertierenden Bytes enthält.</span><span class="sxs-lookup"><span data-stu-id="045b1-361">A read-only span containing the bytes to convert.</span></span></param>
        <summary><span data-ttu-id="045b1-362">Konvertiert Bytes in einen long-Wert ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="045b1-362">Converts bytes into an unsigned long.</span></span></summary>
        <returns><span data-ttu-id="045b1-363">Ein 64-Bit-Integerwert ohne Vorzeichen, der die konvertierten Bytes darstellt.</span><span class="sxs-lookup"><span data-stu-id="045b1-363">A 64-bit unsigned integer representing the converted bytes.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (byte[] value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(unsigned int8[] value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToUInt64(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Byte(), startIndex As Integer) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(cli::array &lt;System::Byte&gt; ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : byte[] * int -&gt; uint64" Usage="System.BitConverter.ToUInt64 (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="045b1-364">Ein Array von Bytes.</span><span class="sxs-lookup"><span data-stu-id="045b1-364">An array of bytes.</span></span></param>
        <param name="startIndex"><span data-ttu-id="045b1-365">Die Anfangsposition in <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="045b1-365">The starting position within <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="045b1-366">Gibt eine vorzeichenlose 64-Bit-Ganzzahl zurück, die aus acht Bytes an der angegebenen Position in einem Bytearray konvertiert wurde.</span><span class="sxs-lookup"><span data-stu-id="045b1-366">Returns a 64-bit unsigned integer converted from eight bytes at a specified position in a byte array.</span></span></summary>
        <returns><span data-ttu-id="045b1-367">Eine vorzeichenlose 64-Bit-Ganzzahl, die beginnend bei <paramref name="startIndex" /> aus acht Bytes gebildet wird.</span><span class="sxs-lookup"><span data-stu-id="045b1-367">A 64-bit unsigned integer formed by the eight bytes beginning at <paramref name="startIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="045b1-368">Mit der <xref:System.BitConverter.ToUInt64%2A>-Methode werden die Bytes aus dem Index `startIndex` in `startIndex` + 7 in einen <xref:System.UInt64> Wert konvertiert.</span><span class="sxs-lookup"><span data-stu-id="045b1-368">The <xref:System.BitConverter.ToUInt64%2A> method converts the bytes from index `startIndex` to `startIndex` + 7 to a <xref:System.UInt64> value.</span></span> <span data-ttu-id="045b1-369">Die Reihenfolge der Bytes im Array muss die Byte Reihenfolge der Architektur des Computer Systems widerspiegeln. Weitere Informationen finden Sie im Abschnitt "Hinweise" des Themas <xref:System.BitConverter>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="045b1-369">The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of the <xref:System.BitConverter> class topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="045b1-370">Im folgenden Codebeispiel werden Elemente <xref:System.Byte> Arrays in <xref:System.UInt64> Werte mit der `ToUInt64`-Methode konvertiert.</span><span class="sxs-lookup"><span data-stu-id="045b1-370">The following code example converts elements of <xref:System.Byte> arrays to <xref:System.UInt64> values with the `ToUInt64` method.</span></span>  
  
 [!code-cpp[System.BitConverter.ToXXX.UInts#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.UInts/CPP/batouint64.cpp#3)]
 [!code-csharp[System.BitConverter.ToXXX.UInts#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.UInts/CS/batouint64.cs#3)]
 [!code-vb[System.BitConverter.ToXXX.UInts#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToXXX.UInts/VB/batouint64.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="045b1-371"><paramref name="startIndex" /> ist größer oder gleich der Länge von <paramref name="value" /> minus 7 und ist kleiner oder gleich der Länge von <paramref name="value" /> minus 1.</span><span class="sxs-lookup"><span data-stu-id="045b1-371"><paramref name="startIndex" /> is greater than or equal to the length of <paramref name="value" /> minus 7, and is less than or equal to the length of <paramref name="value" /> minus 1.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="045b1-372"><paramref name="value" /> ist <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="045b1-372"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="045b1-373"><paramref name="startIndex" /> ist kleiner als 0 (null) oder größer als die Länge von <paramref name="value" /> minus 1.</span><span class="sxs-lookup"><span data-stu-id="045b1-373"><paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1.</span></span></exception>
        <altmember cref="M:System.BitConverter.GetBytes(System.UInt64)" />
      </Docs>
    </Member>
    <Member MemberName="TryWriteBytes">
      <MemberSignature Language="C#" Value="public static bool TryWriteBytes (Span&lt;byte&gt; destination, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryWriteBytes(valuetype System.Span`1&lt;unsigned int8&gt; destination, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryWriteBytes (destination As Span(Of Byte), value As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryWriteBytes(Span&lt;System::Byte&gt; destination, bool value);" />
      <MemberSignature Language="F#" Value="static member TryWriteBytes : Span&lt;byte&gt; * bool -&gt; bool" Usage="System.BitConverter.TryWriteBytes (destination, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="value" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="045b1-374">Die Rückgabe dieser Methode sind die Bytes, die den konvertierten booleschen Wert darstellen.</span><span class="sxs-lookup"><span data-stu-id="045b1-374">When this method returns, the bytes representing the converted Boolean.</span></span></param>
        <param name="value"><span data-ttu-id="045b1-375">Der zu konvertierende boolesche Wert.</span><span class="sxs-lookup"><span data-stu-id="045b1-375">The Boolean to convert.</span></span></param>
        <summary><span data-ttu-id="045b1-376">Konvertiert einen booleschen Wert in eine Bytespanne.</span><span class="sxs-lookup"><span data-stu-id="045b1-376">Converts a Boolean into a span of bytes.</span></span></summary>
        <returns><span data-ttu-id="045b1-377"><see langword="true" />, wenn die Konvertierung erfolgreich war, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="045b1-377"><see langword="true" /> if the conversion was successful; <see langword="false" /> otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryWriteBytes">
      <MemberSignature Language="C#" Value="public static bool TryWriteBytes (Span&lt;byte&gt; destination, char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryWriteBytes(valuetype System.Span`1&lt;unsigned int8&gt; destination, char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryWriteBytes (destination As Span(Of Byte), value As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryWriteBytes(Span&lt;System::Byte&gt; destination, char value);" />
      <MemberSignature Language="F#" Value="static member TryWriteBytes : Span&lt;byte&gt; * char -&gt; bool" Usage="System.BitConverter.TryWriteBytes (destination, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="value" Type="System.Char" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="045b1-378">Die Rückgabe dieser Methode sind die Bytes, die das konvertierte Zeichen darstellen.</span><span class="sxs-lookup"><span data-stu-id="045b1-378">When this method returns, the bytes representing the converted character.</span></span></param>
        <param name="value"><span data-ttu-id="045b1-379">Das zu konvertierende Zeichen.</span><span class="sxs-lookup"><span data-stu-id="045b1-379">The character to convert.</span></span></param>
        <summary><span data-ttu-id="045b1-380">Konvertiert ein Zeichen in eine Bytespanne.</span><span class="sxs-lookup"><span data-stu-id="045b1-380">Converts a character into a span of bytes.</span></span></summary>
        <returns><span data-ttu-id="045b1-381"><see langword="true" />, wenn die Konvertierung erfolgreich war, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="045b1-381"><see langword="true" /> if the conversion was successful; <see langword="false" /> otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryWriteBytes">
      <MemberSignature Language="C#" Value="public static bool TryWriteBytes (Span&lt;byte&gt; destination, double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryWriteBytes(valuetype System.Span`1&lt;unsigned int8&gt; destination, float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryWriteBytes (destination As Span(Of Byte), value As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryWriteBytes(Span&lt;System::Byte&gt; destination, double value);" />
      <MemberSignature Language="F#" Value="static member TryWriteBytes : Span&lt;byte&gt; * double -&gt; bool" Usage="System.BitConverter.TryWriteBytes (destination, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="value" Type="System.Double" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="045b1-382">Die Rückgabe dieser Methode sind die Bytes, die den konvertierten Gleitkommawert mit doppelter Genauigkeit darstellen.</span><span class="sxs-lookup"><span data-stu-id="045b1-382">When this method returns, the bytes representing the converted double-precision floating-point value.</span></span></param>
        <param name="value"><span data-ttu-id="045b1-383">Der zu konvertierende Gleitkommawert mit doppelter Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="045b1-383">The double-precision floating-point value to convert.</span></span></param>
        <summary><span data-ttu-id="045b1-384">Konvertiert einen Gleitkommawert mit doppelter Genauigkeit in eine Bytespanne.</span><span class="sxs-lookup"><span data-stu-id="045b1-384">Converts a double-precision floating-point value into a span of bytes.</span></span></summary>
        <returns><span data-ttu-id="045b1-385"><see langword="true" />, wenn die Konvertierung erfolgreich war, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="045b1-385"><see langword="true" /> if the conversion was successful; <see langword="false" /> otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryWriteBytes">
      <MemberSignature Language="C#" Value="public static bool TryWriteBytes (Span&lt;byte&gt; destination, short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryWriteBytes(valuetype System.Span`1&lt;unsigned int8&gt; destination, int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryWriteBytes (destination As Span(Of Byte), value As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryWriteBytes(Span&lt;System::Byte&gt; destination, short value);" />
      <MemberSignature Language="F#" Value="static member TryWriteBytes : Span&lt;byte&gt; * int16 -&gt; bool" Usage="System.BitConverter.TryWriteBytes (destination, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="value" Type="System.Int16" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="045b1-386">Die Rückgabe dieser Methode sind die Bytes, die den konvertierten 16-Bit-Integerwert mit Vorzeichen darstellen.</span><span class="sxs-lookup"><span data-stu-id="045b1-386">When this method returns, the bytes representing the converted 16-bit signed integer.</span></span></param>
        <param name="value"><span data-ttu-id="045b1-387">Die zu konvertierende 16-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="045b1-387">The 16-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="045b1-388">Konvertiert einen 16-Bit-Integerwert mit Vorzeichen in eine Bytespanne.</span><span class="sxs-lookup"><span data-stu-id="045b1-388">Converts a 16-bit signed integer into a span of bytes.</span></span></summary>
        <returns><span data-ttu-id="045b1-389"><see langword="true" />, wenn die Konvertierung erfolgreich war, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="045b1-389"><see langword="true" /> if the conversion was successful; <see langword="false" /> otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryWriteBytes">
      <MemberSignature Language="C#" Value="public static bool TryWriteBytes (Span&lt;byte&gt; destination, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryWriteBytes(valuetype System.Span`1&lt;unsigned int8&gt; destination, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryWriteBytes (destination As Span(Of Byte), value As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryWriteBytes(Span&lt;System::Byte&gt; destination, int value);" />
      <MemberSignature Language="F#" Value="static member TryWriteBytes : Span&lt;byte&gt; * int -&gt; bool" Usage="System.BitConverter.TryWriteBytes (destination, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="value" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="045b1-390">Die Rückgabe dieser Methode sind die Bytes, die den konvertierten 32-Bit-Integerwert mit Vorzeichen darstellen.</span><span class="sxs-lookup"><span data-stu-id="045b1-390">When this method returns, the bytes representing the converted 32-bit signed integer.</span></span></param>
        <param name="value"><span data-ttu-id="045b1-391">Die zu konvertierende 32-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="045b1-391">The 32-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="045b1-392">Konvertiert einen 32-Bit-Integerwert mit Vorzeichen in eine Bytespanne.</span><span class="sxs-lookup"><span data-stu-id="045b1-392">Converts a 32-bit signed integer into a span of bytes.</span></span></summary>
        <returns><span data-ttu-id="045b1-393"><see langword="true" />, wenn die Konvertierung erfolgreich war, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="045b1-393"><see langword="true" /> if the conversion was successful; <see langword="false" /> otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryWriteBytes">
      <MemberSignature Language="C#" Value="public static bool TryWriteBytes (Span&lt;byte&gt; destination, long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryWriteBytes(valuetype System.Span`1&lt;unsigned int8&gt; destination, int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryWriteBytes (destination As Span(Of Byte), value As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryWriteBytes(Span&lt;System::Byte&gt; destination, long value);" />
      <MemberSignature Language="F#" Value="static member TryWriteBytes : Span&lt;byte&gt; * int64 -&gt; bool" Usage="System.BitConverter.TryWriteBytes (destination, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="value" Type="System.Int64" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="045b1-394">Die Rückgabe dieser Methode sind die Bytes, die den konvertierten 64-Bit-Integerwert mit Vorzeichen darstellen.</span><span class="sxs-lookup"><span data-stu-id="045b1-394">When this method returns, the bytes representing the converted 64-bit signed integer.</span></span></param>
        <param name="value"><span data-ttu-id="045b1-395">Die zu konvertierende 64-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="045b1-395">The 64-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="045b1-396">Konvertiert einen 64-Bit-Integerwert mit Vorzeichen in eine Bytespanne.</span><span class="sxs-lookup"><span data-stu-id="045b1-396">Converts a 64-bit signed integer into a span of bytes.</span></span></summary>
        <returns><span data-ttu-id="045b1-397"><see langword="true" />, wenn die Konvertierung erfolgreich war, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="045b1-397"><see langword="true" /> if the conversion was successful; <see langword="false" /> otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryWriteBytes">
      <MemberSignature Language="C#" Value="public static bool TryWriteBytes (Span&lt;byte&gt; destination, float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryWriteBytes(valuetype System.Span`1&lt;unsigned int8&gt; destination, float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryWriteBytes (destination As Span(Of Byte), value As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryWriteBytes(Span&lt;System::Byte&gt; destination, float value);" />
      <MemberSignature Language="F#" Value="static member TryWriteBytes : Span&lt;byte&gt; * single -&gt; bool" Usage="System.BitConverter.TryWriteBytes (destination, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="value" Type="System.Single" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="045b1-398">Die Rückgabe dieser Methode sind die Bytes, die den konvertierten Gleitkommawert mit doppelter Genauigkeit darstellen.</span><span class="sxs-lookup"><span data-stu-id="045b1-398">When this method returns, the bytes representing the converted double-precision floating-point value.</span></span></param>
        <param name="value"><span data-ttu-id="045b1-399">Der zu konvertierende Gleitkommawert mit doppelter Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="045b1-399">The double-precision floating-point value to convert.</span></span></param>
        <summary><span data-ttu-id="045b1-400">Konvertiert einen Gleitkommawert mit doppelter Genauigkeit in eine Bytespanne.</span><span class="sxs-lookup"><span data-stu-id="045b1-400">Converts a double-precision floating-point value into a span of bytes.</span></span></summary>
        <returns><span data-ttu-id="045b1-401"><see langword="true" />, wenn die Konvertierung erfolgreich war, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="045b1-401"><see langword="true" /> if the conversion was successful; <see langword="false" /> otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryWriteBytes">
      <MemberSignature Language="C#" Value="public static bool TryWriteBytes (Span&lt;byte&gt; destination, ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryWriteBytes(valuetype System.Span`1&lt;unsigned int8&gt; destination, unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryWriteBytes (destination As Span(Of Byte), value As UShort) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryWriteBytes(Span&lt;System::Byte&gt; destination, System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member TryWriteBytes : Span&lt;byte&gt; * uint16 -&gt; bool" Usage="System.BitConverter.TryWriteBytes (destination, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.0;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="value" Type="System.UInt16" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="045b1-402">Die Rückgabe dieser Methode sind die Bytes, die den konvertierten 16-Bit-Integerwert ohne Vorzeichen darstellen.</span><span class="sxs-lookup"><span data-stu-id="045b1-402">When this method returns, the bytes representing the converted unsigned 16-bit integer.</span></span></param>
        <param name="value"><span data-ttu-id="045b1-403">Der zu konvertierende 16-Bit-Intergerwert ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="045b1-403">The unsigned 16-bit integer to convert.</span></span></param>
        <summary><span data-ttu-id="045b1-404">Konvertiert einen 16-Bit-Integerwert ohne Vorzeichen in eine Bytespanne.</span><span class="sxs-lookup"><span data-stu-id="045b1-404">Converts an unsigned 16-bit integer into a span of bytes.</span></span></summary>
        <returns><span data-ttu-id="045b1-405"><see langword="true" />, wenn die Konvertierung erfolgreich war, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="045b1-405"><see langword="true" /> if the conversion was successful; <see langword="false" /> otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryWriteBytes">
      <MemberSignature Language="C#" Value="public static bool TryWriteBytes (Span&lt;byte&gt; destination, uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryWriteBytes(valuetype System.Span`1&lt;unsigned int8&gt; destination, unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryWriteBytes (destination As Span(Of Byte), value As UInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryWriteBytes(Span&lt;System::Byte&gt; destination, System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member TryWriteBytes : Span&lt;byte&gt; * uint32 -&gt; bool" Usage="System.BitConverter.TryWriteBytes (destination, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.0;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="value" Type="System.UInt32" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="045b1-406">Die Rückgabe dieser Methode sind die Bytes, die den konvertierten 32-Bit-Integerwert ohne Vorzeichen darstellen.</span><span class="sxs-lookup"><span data-stu-id="045b1-406">When this method returns, the bytes representing the converted unsigned 32-bit integer.</span></span></param>
        <param name="value"><span data-ttu-id="045b1-407">Der zu konvertierende 32-Bit-Integerwert ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="045b1-407">The unsigned 32-bit integer to convert.</span></span></param>
        <summary><span data-ttu-id="045b1-408">Konvertiert einen 32-Bit-Integerwert ohne Vorzeichen in eine Bytespanne.</span><span class="sxs-lookup"><span data-stu-id="045b1-408">Converts a 32-bit unsigned integer into a span of bytes.</span></span></summary>
        <returns><span data-ttu-id="045b1-409"><see langword="true" />, wenn die Konvertierung erfolgreich war, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="045b1-409"><see langword="true" /> if the conversion was successful; <see langword="false" /> otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryWriteBytes">
      <MemberSignature Language="C#" Value="public static bool TryWriteBytes (Span&lt;byte&gt; destination, ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryWriteBytes(valuetype System.Span`1&lt;unsigned int8&gt; destination, unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryWriteBytes (destination As Span(Of Byte), value As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryWriteBytes(Span&lt;System::Byte&gt; destination, System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member TryWriteBytes : Span&lt;byte&gt; * uint64 -&gt; bool" Usage="System.BitConverter.TryWriteBytes (destination, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.0;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="value" Type="System.UInt64" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="045b1-410">Die Rückgabe dieser Methode sind die Bytes, die den konvertierten 64-Bit-Integerwert ohne Vorzeichen darstellen.</span><span class="sxs-lookup"><span data-stu-id="045b1-410">When this method returns, the bytes representing the converted unsigned 64-bit integer.</span></span></param>
        <param name="value"><span data-ttu-id="045b1-411">Der zu konvertierende 64-Bit-Integerwert ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="045b1-411">The unsigned 64-bit integer to convert.</span></span></param>
        <summary><span data-ttu-id="045b1-412">Konvertiert einen 64-Bit-Integerwert ohne Vorzeichen in eine Bytespanne.</span><span class="sxs-lookup"><span data-stu-id="045b1-412">Converts an unsigned 64-bit integer into a span of bytes.</span></span></summary>
        <returns><span data-ttu-id="045b1-413"><see langword="true" />, wenn die Konvertierung erfolgreich war, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="045b1-413"><see langword="true" /> if the conversion was successful; <see langword="false" /> otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
