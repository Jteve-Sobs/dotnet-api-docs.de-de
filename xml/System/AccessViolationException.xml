<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AccessViolationException.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5eb360adfc3670886a06c5f3ab2daa2470318896a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eb360adfc3670886a06c5f3ab2daa2470318896a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.AccessViolationException">
          <source>The exception that is thrown when there is an attempt to read or write protected memory.</source>
          <target state="translated">Die Ausnahme, die bei dem Versuch ausgelöst wird, im geschützten Speicher zu lesen oder zu schreiben.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>An access violation occurs in unmanaged or unsafe code when the code attempts to read or write to memory that has not been allocated, or to which it does not have access.</source>
          <target state="translated">Nicht verwalteter bzw. unsicherer Code tritt eine zugriffsverletzung auf, wenn der Code versucht, das Lesen und Schreiben in den Arbeitsspeicher, die nicht zugewiesen wurde, oder auf die er keinen Zugriff.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>This usually occurs because a pointer has a bad value.</source>
          <target state="translated">Dieser Fehler tritt gewöhnlich auf, wenn ein Zeiger auf einen ungültigen Wert aufweist.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>Not all reads or writes through bad pointers lead to access violations, so an access violation usually indicates that several reads or writes have occurred through bad pointers, and that memory might be corrupted.</source>
          <target state="translated">Nicht alle Lese- und Schreibvorgänge, die aufgrund ungültiger Zeiger aufgetreten sind, führen zu Zugriffsverletzungen. Eine Zugriffsverletzung gibt somit an, dass mehrere Lese- und Schreibvorgänge aufgrund ungültiger Zeiger aufgetreten sind und dass der Arbeitsspeicher u. U. beschädigt sein kann.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>Thus, access violations almost always indicate serious programming errors.</source>
          <target state="translated">Zugriffsverletzungen geben daher fast immer schwerwiegenden Programmierfehler.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>An <ph id="ph1">&lt;xref:System.AccessViolationException&gt;</ph> clearly identifies these serious errors.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.AccessViolationException&gt;</ph> durch diese schwerwiegende Fehler eindeutig identifiziert wird.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>In programs consisting entirely of verifiable managed code, all references are either valid or null, and access violations are impossible.</source>
          <target state="translated">Im Programme aus Leerzeichen bestehen überprüfbaren verwalteten Code alle Verweise entweder gültig oder null und zugriffsverletzungen sind nicht möglich.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>Any operation that attempts to reference a null reference in verifiable code throws a <ph id="ph1">&lt;xref:System.NullReferenceException&gt;</ph> exception.</source>
          <target state="translated">Jeder Vorgang, der versucht, einen null-Verweis in überprüfbarem Code löst eine <ph id="ph1">&lt;xref:System.NullReferenceException&gt;</ph> Ausnahme.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>An <ph id="ph1">&lt;xref:System.AccessViolationException&gt;</ph> occurs only when verifiable managed code interacts with unmanaged code or with unsafe managed code.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.AccessViolationException&gt;</ph> tritt nur bei überprüfbarer verwalteter Code mit nicht verwaltetem Code oder mit unsicherem verwalteten Code interagiert.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>Troubleshooting AccessViolationException exceptions</source>
          <target state="translated">Problembehandlung bei Ausnahmen AccessViolationException</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>An <ph id="ph1">&lt;xref:System.AccessViolationException&gt;</ph> exception can occur only in unsafe managed code or when verifiable managed code interacts with unmanaged code:</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.AccessViolationException&gt;</ph> Ausnahme kann auftreten, nur in unsicherem verwalteten Code oder bei überprüfbar verwalteten Code interagiert mit nicht verwaltetem Code:</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>An access violation that occurs in unsafe managed code can be expressed as either a <ph id="ph1">&lt;xref:System.NullReferenceException&gt;</ph> exception or an <ph id="ph2">&lt;xref:System.AccessViolationException&gt;</ph> exception, depending on the platform.</source>
          <target state="translated">Eine zugriffsverletzung, die in unsicherem verwalteten Code auftritt, ausgedrückt werden kann, entweder als eine <ph id="ph1">&lt;xref:System.NullReferenceException&gt;</ph> Ausnahme oder ein <ph id="ph2">&lt;xref:System.AccessViolationException&gt;</ph> Ausnahme, je nach Plattform.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>An access violation in unmanaged code that bubbles up to managed code is always wrapped in an <ph id="ph1">&lt;xref:System.AccessViolationException&gt;</ph> exception.</source>
          <target state="translated">Eine zugriffsverletzung in nicht verwaltetem Code, der bis zu verwaltetem Code ausgelöst wird immer in umschlossen ein <ph id="ph1">&lt;xref:System.AccessViolationException&gt;</ph> Ausnahme.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>In either case, you can identify and correct the cause of the <ph id="ph1">&lt;xref:System.AccessViolationException&gt;</ph> exception as follows:</source>
          <target state="translated">In beiden Fällen können Sie identifizieren und beheben Sie die Ursache für die <ph id="ph1">&lt;xref:System.AccessViolationException&gt;</ph> Ausnahme wie folgt:</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>Make sure that the memory that you are attempting to access has been allocated.</source>
          <target state="translated">Stellen Sie sicher, dass der Arbeitsspeicher, auf den Sie zugreifen möchten, belegt wurde.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>An <ph id="ph1">&lt;xref:System.AccessViolationException&gt;</ph> exception is always thrown by an attempt to access protected memory -- that is, to access memory that is not allocated or that is not owned by a process.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.AccessViolationException&gt;</ph> immer von geschütztem Arbeitsspeicher – d. h. Zugriff auf, um Zugriff auf Speicher, die nicht zugeordnet ist, oder, ist nicht im Besitz von einem Prozess, Versuch ausgelöst wird.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>Automatic memory management is one of the services that the common language runtime provides.</source>
          <target state="translated">Bei der automatischen Speicherverwaltung handelt es sich um einen Dienst, der von der Common Language Runtime zur Verfügung gestellt wird.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>If managed code provides the same functionality as your unmanagede code, you may wish to move to managed code to take advantage of this functionality.</source>
          <target state="translated">Wenn verwalteter Code auf die gleiche Funktionalität wie Unmanagede Code bereitstellt, möchten Sie möglicherweise zu verwaltetem Code wechseln, um diese Funktionalität zu nutzen.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>For more information, see <bpt id="p1">[</bpt>Automatic Memory Management<ept id="p1">](~/docs/standard/automatic-memory-management.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>automatische Speicherverwaltung<ept id="p1">](~/docs/standard/automatic-memory-management.md)</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>Make sure that the memory that you are attempting to access has not been corrupted.</source>
          <target state="translated">Stellen Sie sicher, dass der Arbeitsspeicher, auf den Sie zugreifen möchten, nicht beschädigt worden ist.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>If several read or write operations have occurred through bad pointers, memory may be corrupted.</source>
          <target state="translated">Wenn aufgrund ungültiger Zeiger mehrere Lese- und Schreibvorgänge erfolgt sind, kann das möglicherweise zu einer Beschädigung des Arbeitsspeichers führen.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>This typically occurs when reading or writing to addresses outside of a predefined buffer.</source>
          <target state="translated">Dies tritt normalerweise beim Lesen oder Schreiben in Adressen außerhalb einer vordefinierten Puffer.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>AccessViolationException and try/catch blocks</source>
          <target state="translated">AccessViolationException und Try/Catch-Blöcke</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, <ph id="ph2">&lt;xref:System.AccessViolationException&gt;</ph> exceptions thrown by the common language runtime are not handled by the <ph id="ph3">`catch`</ph> statement in a structured exception handler if the exception occurs outside of the memory reserved by the common language runtime.</source>
          <target state="translated">Beginnend mit der <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, <ph id="ph2">&lt;xref:System.AccessViolationException&gt;</ph> von der common Language Runtime ausgelöste Ausnahmen werden nicht behandelt, durch die <ph id="ph3">`catch`</ph> -Anweisung in einem strukturierten Ausnahmehandler bei der Ausnahme außerhalb von der common Language reservierten Speichers auftreten Common Language Runtime.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>To handle such an <ph id="ph1">&lt;xref:System.AccessViolationException&gt;</ph> exception, you should apply the  <ph id="ph2">&lt;xref:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute&gt;</ph> attribute to the method in which the exception is thrown.</source>
          <target state="translated">So behandeln ein <ph id="ph1">&lt;xref:System.AccessViolationException&gt;</ph> Ausnahme, wenden Sie die <ph id="ph2">&lt;xref:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute&gt;</ph> -Attribut auf die Methode, die in der die Ausnahme ausgelöst wird.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>This change does not affect <ph id="ph1">&lt;xref:System.AccessViolationException&gt;</ph> exceptions thrown by user code, which can continue to be caught by a <ph id="ph2">`catch`</ph> statement.</source>
          <target state="translated">Diese Änderung wirkt sich nicht <ph id="ph1">&lt;xref:System.AccessViolationException&gt;</ph> Ausnahmen vom Benutzercode, den abgefangen werden weiterhin können ein <ph id="ph2">`catch`</ph> Anweisung.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>For code written for previous versions of the .NET Framework that you want to recompile and run without modification on the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, you can add the <bpt id="p1">[</bpt><ph id="ph2">\&lt;</ph>legacyCorruptedStateExceptionsPolicy&gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/legacycorruptedstateexceptionspolicy-element.md)</ept> element to your app's configuration file.</source>
          <target state="translated">Für Code geschrieben, die für frühere Versionen von .NET Framework, die Sie verwenden möchten, neu kompilieren und ohne Änderung ausgeführt wird, auf die <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, können Sie hinzufügen, die <bpt id="p1">[</bpt> <ph id="ph2">\&lt;</ph>LegacyCorruptedStateExceptionsPolicy &gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/legacycorruptedstateexceptionspolicy-element.md)</ept> Element Ihre App-Konfigurationsdatei.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>Note that you can also receive notification of the exceptions if you have defined a handler for the <ph id="ph1">&lt;xref:System.AppDomain.FirstChanceException?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.AppDomain.UnhandledException?displayProperty=nameWithType&gt;</ph> event.</source>
          <target state="translated">Beachten Sie, dass Sie auch die Benachrichtigung der Ausnahmen empfangen können, wenn Sie einen Handler für definiert haben die <ph id="ph1">&lt;xref:System.AppDomain.FirstChanceException?displayProperty=nameWithType&gt;</ph> oder <ph id="ph2">&lt;xref:System.AppDomain.UnhandledException?displayProperty=nameWithType&gt;</ph> Ereignis.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>Version Information</source>
          <target state="translated">Versionsinformationen</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>This exception is thrown in the .NET Framework 2.0 and later versions.</source>
          <target state="translated">In der .NET Framework 2.0 und höheren Versionen wird diese Ausnahme ausgelöst.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>In earlier versions of the .NET Framework, an access violation in unmanaged code or unsafe managed code is represented by a <ph id="ph1">&lt;xref:System.NullReferenceException&gt;</ph> in managed code.</source>
          <target state="translated">In früheren Versionen von .NET Framework wird durch eine zugriffsverletzungen in nicht verwaltetem Code oder unsicherem verwalteten Code dargestellt eine <ph id="ph1">&lt;xref:System.NullReferenceException&gt;</ph> in verwaltetem Code.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>A <ph id="ph1">&lt;xref:System.NullReferenceException&gt;</ph> is also thrown when a null reference is dereferenced in verifiable managed code, an occurrence that does not involve data corruption, and there is no way to distinguish between the two situations in versions 1.0 or 1.1.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.NullReferenceException&gt;</ph> wird auch ausgelöst, wenn ein null-Verweis in verwaltetem Code überprüft, ein Vorfall, der keine: beschädigte Daten, beinhaltet dereferenziert ist und es keine Möglichkeit zur Unterscheidung zwischen den zwei Situationen, in den Versionen 1.0 oder 1.1 gibt.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>Administrators can allow selected applications to revert to the behavior of the .NET Framework version 1.1.</source>
          <target state="translated">Administratoren können die ausgewählte Anwendungen, um das Verhalten der .NET Framework, Version 1.1 wiederherzustellen.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AccessViolationException">
          <source>Place the following line in the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>runtime<ph id="ph2">&amp;gt;</ph> Element<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md)</ept> section of the configuration file for the application:</source>
          <target state="translated">Platzieren Sie die folgende Zeile in der <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>Runtime<ph id="ph2">&amp;gt;</ph> Element<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md)</ept> Abschnitt der Konfigurationsdatei für die Anwendung:</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="T:System.AccessViolationException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AccessViolationException" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.AccessViolationException" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.AccessViolationException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AccessViolationException" /&gt;</ph> class with a system-supplied message that describes the error.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.AccessViolationException" /&gt;</ph>-Klasse mit einer vom System generierten Meldung, die den Fehler beschreibt.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AccessViolationException.#ctor">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> property of the new instance to a system-supplied message that describes the error, such as "Attempted to read or write protected memory.</source>
          <target state="translated">Dieser Konstruktor initialisiert die <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> -Eigenschaft der neuen Instanz mit einer vom System gelieferten Meldung, die den Fehler beschreibt, wie z. B. "hat versucht, lesen und Schreiben von geschütztem Arbeitsspeicher.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AccessViolationException.#ctor">
          <source>This is often an indication that other memory has been corrupted."</source>
          <target state="translated">Dies ist häufig ein Hinweis, dass andere Arbeitsspeicher beschädigt worden ist."</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AccessViolationException.#ctor">
          <source>This message takes into account the current system culture.</source>
          <target state="translated">Diese Meldung berücksichtigt die aktuelle Systemkultur.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AccessViolationException.#ctor">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.AccessViolationException&gt;</ph>.</source>
          <target state="translated">In der folgenden Tabelle werden die anfänglichen Eigenschaftenwerte für eine <ph id="ph1">&lt;xref:System.AccessViolationException&gt;</ph>-Instanz aufgeführt.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AccessViolationException.#ctor">
          <source>Property</source>
          <target state="translated">Eigenschaft</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AccessViolationException.#ctor">
          <source>Value</source>
          <target state="translated">Wert</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AccessViolationException.#ctor">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph></target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AccessViolationException.#ctor">
          <source>The localized error message string.</source>
          <target state="translated">Die lokalisierte Zeichenfolge mit der Fehlermeldung.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.AccessViolationException.#ctor(System.String)">
          <source>The message that describes the exception.</source>
          <target state="translated">Die Meldung, in der die Ausnahme beschrieben wird</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.AccessViolationException.#ctor(System.String)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">Der Aufrufer dieses Konstruktors muss sicherstellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.AccessViolationException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AccessViolationException" /&gt;</ph> class with a specified message that describes the error.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.AccessViolationException" /&gt;</ph>-Klasse mit einer angegebenen Meldung, die den Fehler beschreibt.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AccessViolationException.#ctor(System.String)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.AccessViolationException&gt;</ph>.</source>
          <target state="translated">In der folgenden Tabelle werden die anfänglichen Eigenschaftenwerte für eine <ph id="ph1">&lt;xref:System.AccessViolationException&gt;</ph>-Instanz aufgeführt.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AccessViolationException.#ctor(System.String)">
          <source>Property</source>
          <target state="translated">Eigenschaft</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AccessViolationException.#ctor(System.String)">
          <source>Value</source>
          <target state="translated">Wert</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AccessViolationException.#ctor(System.String)">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph></target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AccessViolationException.#ctor(System.String)">
          <source>The error message string specified in <ph id="ph1">`message`</ph>.</source>
          <target state="translated">Die in <ph id="ph1">`message`</ph> angegebene Fehlermeldungszeichenfolge.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.AccessViolationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> that holds the serialized object data.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>-Objekt, das die Daten des serialisierten Objekts enthält.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.AccessViolationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> that contains contextual information about the source or destination.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>, der die Kontextinformationen über die Quelle oder das Ziel enthält.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.AccessViolationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AccessViolationException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.AccessViolationException" /&gt;</ph>-Klasse mit serialisierten Daten.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AccessViolationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</source>
          <target state="translated">Dieser Konstruktor wird während der Deserialisierung aufgerufen, um das über einen Stream übertragene Ausnahmeobjekt wiederherzustellen.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AccessViolationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>For more information, see <bpt id="p1">[</bpt>XML and SOAP Serialization<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>XML- und SOAP-Serialisierung<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.AccessViolationException.#ctor(System.String,System.Exception)">
          <source>The message that describes the exception.</source>
          <target state="translated">Die Meldung, in der die Ausnahme beschrieben wird</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.AccessViolationException.#ctor(System.String,System.Exception)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">Der Aufrufer dieses Konstruktors muss sicherstellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.AccessViolationException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.AccessViolationException.#ctor(System.String,System.Exception)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> parameter is not <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the current exception is raised in a <ph id="ph2">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated">Wenn der <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept>-Parameter nicht <ph id="ph1">&lt;see langword="null" /&gt;</ph> ist, wird die aktuelle Ausnahme in einem <ph id="ph2">&lt;see langword="catch" /&gt;</ph>-Block ausgelöst, der die innere Ausnahme behandelt.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.AccessViolationException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AccessViolationException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.AccessViolationException" /&gt;</ph>-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AccessViolationException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">Eine Ausnahme, die als direktes Ergebnis einer vorhergehenden Ausnahme ausgelöst wird, muss in der <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph>-Eigenschaft über einen Verweis auf die vorhergehende Ausnahme verfügen.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AccessViolationException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or <ph id="ph2">`null`</ph> if the <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph>-Eigenschaft gibt den gleichen Wert zurück, der an den Konstruktor übergeben wird, oder <ph id="ph2">`null`</ph>, wenn die <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph>-Eigenschaft den Wert der inneren Ausnahme nicht an den Konstruktor übergibt.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AccessViolationException.#ctor(System.String,System.Exception)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.AccessViolationException&gt;</ph>.</source>
          <target state="translated">In der folgenden Tabelle werden die anfänglichen Eigenschaftenwerte für eine <ph id="ph1">&lt;xref:System.AccessViolationException&gt;</ph>-Instanz aufgeführt.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AccessViolationException.#ctor(System.String,System.Exception)">
          <source>Property</source>
          <target state="translated">Eigenschaft</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AccessViolationException.#ctor(System.String,System.Exception)">
          <source>Value</source>
          <target state="translated">Wert</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AccessViolationException.#ctor(System.String,System.Exception)">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph></target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AccessViolationException.#ctor(System.String,System.Exception)">
          <source>The error message string specified in <ph id="ph1">`message`</ph>.</source>
          <target state="translated">Die in <ph id="ph1">`message`</ph> angegebene Fehlermeldungszeichenfolge.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>