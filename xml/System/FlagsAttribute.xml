<Type Name="FlagsAttribute" FullName="System.FlagsAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a6eda6723e0638b63748075272f8d52d69775038" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56390394" /></Metadata><TypeSignature Language="C#" Value="public class FlagsAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit FlagsAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.FlagsAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class FlagsAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class FlagsAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type FlagsAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Enum, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="5688b-101">Gibt an, dass eine Enumeration als Bitfeld, d. h. als Gruppe von Flags, behandelt werden kann.</span><span class="sxs-lookup"><span data-stu-id="5688b-101">Indicates that an enumeration can be treated as a bit field; that is, a set of flags.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5688b-102">Bitfelder werden in der Regel für Listen von Elementen, die auftreten können, in Kombination verwendet, während Enumerationskonstanten in der Regel für die Listen sich gegenseitig ausschließende Elemente verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="5688b-102">Bit fields are generally used for lists of elements that might occur in combination, whereas enumeration constants are generally used for lists of mutually exclusive elements.</span></span> <span data-ttu-id="5688b-103">Daher sollen Bitfelder mit einer bitweisen OR-Operation zum Generieren nicht benannter Werte kombiniert werden, während Enumerationskonstanten nicht sind.</span><span class="sxs-lookup"><span data-stu-id="5688b-103">Therefore, bit fields are designed to be combined with a bitwise OR operation to generate unnamed values, whereas enumerated constants are not.</span></span> <span data-ttu-id="5688b-104">Sprachen, die bei der Verwendung von Bitfeldern, die im Vergleich zu Enumerationskonstanten unterschiedlich sein.</span><span class="sxs-lookup"><span data-stu-id="5688b-104">Languages vary in their use of bit fields compared to enumeration constants.</span></span>  
  
## <a name="attributes-of-the-flagsattribute"></a><span data-ttu-id="5688b-105">Attribute von FlagsAttribute</span><span class="sxs-lookup"><span data-stu-id="5688b-105">Attributes of the FlagsAttribute</span></span>  
 <span data-ttu-id="5688b-106"><xref:System.AttributeUsageAttribute> auf diese Klasse angewendet wird und die zugehörige <xref:System.AttributeUsageAttribute.Inherited%2A> Eigenschaft gibt an, `false`.</span><span class="sxs-lookup"><span data-stu-id="5688b-106"><xref:System.AttributeUsageAttribute> is applied to this class, and its <xref:System.AttributeUsageAttribute.Inherited%2A> property specifies `false`.</span></span> <span data-ttu-id="5688b-107">Dieses Attribut kann nur auf Enumerationen angewendet werden.</span><span class="sxs-lookup"><span data-stu-id="5688b-107">This attribute can only be applied to enumerations.</span></span>  
  
## <a name="guidelines-for-flagsattribute-and-enum"></a><span data-ttu-id="5688b-108">Richtlinien für die FlagsAttribute "und" Enum</span><span class="sxs-lookup"><span data-stu-id="5688b-108">Guidelines for FlagsAttribute and Enum</span></span>  
  
-   <span data-ttu-id="5688b-109">Verwenden der <xref:System.FlagsAttribute> benutzerdefiniertes Attribut für eine Enumeration, die nur dann, wenn eine bitweise Operation (AND, OR EXKLUSIVES oder) ausgeführt wird, die auf einem numerischen Wert.</span><span class="sxs-lookup"><span data-stu-id="5688b-109">Use the <xref:System.FlagsAttribute> custom attribute for an enumeration only if a bitwise operation (AND, OR, EXCLUSIVE OR) is to be performed on a numeric value.</span></span>  
  
-   <span data-ttu-id="5688b-110">Definieren Sie Enumerationskonstanten in Potenzen von 2, d. h. 1, 2, 4, 8 und So weiter.</span><span class="sxs-lookup"><span data-stu-id="5688b-110">Define enumeration constants in powers of two, that is, 1, 2, 4, 8, and so on.</span></span> <span data-ttu-id="5688b-111">Dies bedeutet, dass die einzelnen Flags in der kombinierten Enumerationskonstanten nicht überschneiden.</span><span class="sxs-lookup"><span data-stu-id="5688b-111">This means the individual flags in combined enumeration constants do not overlap.</span></span>  
  
-   <span data-ttu-id="5688b-112">Es empfiehlt sich eine Enumerationskonstante für häufig verwendete Flagkombinationen.</span><span class="sxs-lookup"><span data-stu-id="5688b-112">Consider creating an enumerated constant for commonly used flag combinations.</span></span> <span data-ttu-id="5688b-113">Z. B. Wenn Sie eine Enumeration, der für e/a-Vorgänge verwendet haben, enthält die Enumerationskonstanten `Read = 1` und `Write = 2`, es empfiehlt sich die Enumerationskonstante `ReadWrite = Read OR Write`, welche kombiniert die `Read` und `Write` Flags.</span><span class="sxs-lookup"><span data-stu-id="5688b-113">For example, if you have an enumeration used for file I/O operations that contains the enumerated constants `Read = 1` and `Write = 2`, consider creating the enumerated constant `ReadWrite = Read OR Write`, which combines the `Read` and `Write` flags.</span></span> <span data-ttu-id="5688b-114">Darüber hinaus kann die bitweise OR-Operation zum Kombinieren der Flags verwendet einen erweiterten Ansatz in einigen Fällen berücksichtigt werden, die nicht für einfache Aufgaben erforderlich sein sollte.</span><span class="sxs-lookup"><span data-stu-id="5688b-114">In addition, the bitwise OR operation used to combine the flags might be considered an advanced concept in some circumstances that should not be required for simple tasks.</span></span>  
  
-   <span data-ttu-id="5688b-115">Verwenden Sie vorsichtig, wenn Sie eine negative Zahl als eine Flag-Enumerationskonstanten definieren, da viele Flagpositionen auf 1 festgelegt werden können, die möglicherweise, dass Ihr Code verwirrend und codierungsangewohnheiten Fehler.</span><span class="sxs-lookup"><span data-stu-id="5688b-115">Use caution if you define a negative number as a flag enumerated constant because many flag positions might be set to 1, which might make your code confusing and encourage coding errors.</span></span>  
  
-   <span data-ttu-id="5688b-116">Eine praktische Möglichkeit zu prüfen, ob ein Flag in einem numerischen Wert festgelegt ist ist, führen Sie eine bitweise AND-Operation zwischen den numerischen Wert und die Flag-Enumerationskonstante, die legt alle Bits in den numerischen Wert 0 (null), die nicht auf das Flag entsprechen , testen, ob das Ergebnis des Vorgangs das Flag Enumerationskonstante.</span><span class="sxs-lookup"><span data-stu-id="5688b-116">A convenient way to test whether a flag is set in a numeric value is to perform a bitwise AND operation between the numeric value and the flag enumerated constant, which sets all bits in the numeric value to zero that do not correspond to the flag, then test whether the result of that operation is equal to the flag enumerated constant.</span></span>  
  
-   <span data-ttu-id="5688b-117">Verwendung `None` wie der Name des Flags Konstante aufgelistet, deren Wert 0 (null ist).</span><span class="sxs-lookup"><span data-stu-id="5688b-117">Use `None` as the name of the flag enumerated constant whose value is zero.</span></span> <span data-ttu-id="5688b-118">Sie können keine der `None` Enumerationskonstante, die in einer bitweisen AND-Operation für ein Flag zu testen, da das Ergebnis immer 0 (null) ist.</span><span class="sxs-lookup"><span data-stu-id="5688b-118">You cannot use the `None` enumerated constant in a bitwise AND operation to test for a flag because the result is always zero.</span></span> <span data-ttu-id="5688b-119">Allerdings können Sie ein logisches ausführen keinen bitweisen Vergleich zwischen den numerischen Wert und die `None` Enumerationskonstante, um zu bestimmen, ob alle Bits im numerischen Wert festgelegt werden.</span><span class="sxs-lookup"><span data-stu-id="5688b-119">However, you can perform a logical, not a bitwise, comparison between the numeric value and the `None` enumerated constant to determine whether any bits in the numeric value are set.</span></span>  
  
     <span data-ttu-id="5688b-120">Wenn Sie eine Value-Aufzählung, anstatt eine Flags-Enumeration erstellen, lohnt es weiterhin zum Erstellen einer `None` Enumerationskonstante.</span><span class="sxs-lookup"><span data-stu-id="5688b-120">If you create a value enumeration instead of a flags enumeration, it is still worthwhile to create a `None` enumerated constant.</span></span> <span data-ttu-id="5688b-121">Der Grund ist, wird standardmäßig der für die Enumeration verwendete Arbeitsspeicher mit 0 (null) initialisiert wird von der common Language Runtime.</span><span class="sxs-lookup"><span data-stu-id="5688b-121">The reason is that by default the memory used for the enumeration is initialized to zero by the common language runtime.</span></span> <span data-ttu-id="5688b-122">Daher, wenn Sie keine Konstante definieren, deren Wert 0 (null) ist, die Enumeration einen unzulässigen Wert enthält bei der Erstellung.</span><span class="sxs-lookup"><span data-stu-id="5688b-122">Consequently, if you do not define a constant whose value is zero, the enumeration will contain an illegal value when it is created.</span></span>  
  
     <span data-ttu-id="5688b-123">Ist eine offensichtliche Groß-/Kleinschreibung, Ihre Anwendung benötigt, um darzustellen, sollten erwägen Sie, eine Enumerationskonstante, deren Wert 0 (null) zur Darstellung der Standardwert ist, zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="5688b-123">If there is an obvious default case your application needs to represent, consider using an enumerated constant whose value is zero to represent the default.</span></span> <span data-ttu-id="5688b-124">Wenn keine Standardfall wird sollten Sie Sie, dass es sich bei Verwendung eine Enumerationskonstante, dessen Wert NULL, wird, die Groß-/Kleinschreibung hat zur Folge, die nicht von einem anderen aufgelisteten Konstanten dargestellt wird.</span><span class="sxs-lookup"><span data-stu-id="5688b-124">If there is no default case, consider using an enumerated constant whose value is zero that means the case that is not represented by any of the other enumerated constants.</span></span>  
  
-   <span data-ttu-id="5688b-125">Einen Enumerationswert, nur um spiegeln den Zustand der Enumeration selbst ist nicht definiert werden.</span><span class="sxs-lookup"><span data-stu-id="5688b-125">Do not define an enumeration value solely to mirror the state of the enumeration itself.</span></span> <span data-ttu-id="5688b-126">Definieren Sie z. B. keine Enumerationskonstante, die nur am Ende der Enumeration markiert.</span><span class="sxs-lookup"><span data-stu-id="5688b-126">For example, do not define an enumerated constant that merely marks the end of the enumeration.</span></span> <span data-ttu-id="5688b-127">Wenn Sie bestimmen Sie den letzten Wert der Enumeration, die explizit für diesen Wert überprüfen möchten.</span><span class="sxs-lookup"><span data-stu-id="5688b-127">If you need to determine the last value of the enumeration, check for that value explicitly.</span></span> <span data-ttu-id="5688b-128">Darüber hinaus können Sie eine bereichsüberprüfung für die erste und letzte Enumerationskonstante durchführen, wenn alle Werte innerhalb des Bereichs gültig sind.</span><span class="sxs-lookup"><span data-stu-id="5688b-128">In addition, you can perform a range check for the first and last enumerated constant if all values within the range are valid.</span></span>  
  
-   <span data-ttu-id="5688b-129">Geben Sie keine Enumerationskonstanten, die für die zukünftige Verwendung reserviert sind.</span><span class="sxs-lookup"><span data-stu-id="5688b-129">Do not specify enumerated constants that are reserved for future use.</span></span>  
  
-   <span data-ttu-id="5688b-130">Berücksichtigen Sie Sie definieren eine Methode oder Eigenschaft, die eine aufgezählte Konstante als Wert annimmt, beim Überprüfen des Werts.</span><span class="sxs-lookup"><span data-stu-id="5688b-130">When you define a method or property that takes an enumerated constant as a value, consider validating the value.</span></span> <span data-ttu-id="5688b-131">Der Grund ist, dass Sie einen numerischen Wert in den Enumerationstyp umwandeln können, selbst wenn diese numerische Wert nicht in der Enumeration definiert ist.</span><span class="sxs-lookup"><span data-stu-id="5688b-131">The reason is that you can cast a numeric value to the enumeration type even if that numeric value is not defined in the enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5688b-132">Das folgende Beispiel veranschaulicht die Verwendung von der `FlagsAttribute` Attribut, und zeigt die Auswirkungen auf die <xref:System.Enum.ToString%2A> Methode der Verwendung von `FlagsAttribute` auf eine <xref:System.Enum> Deklaration.</span><span class="sxs-lookup"><span data-stu-id="5688b-132">The following example illustrates the use of the `FlagsAttribute` attribute and shows the effect on the <xref:System.Enum.ToString%2A> method of using `FlagsAttribute` on an <xref:System.Enum> declaration.</span></span>  
  
 [!code-cpp[System.FlagsAttribute#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.FlagsAttribute/CPP/flags.cpp#1)]
 [!code-csharp[System.FlagsAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.FlagsAttribute/CS/flags.cs#1)]
 [!code-vb[System.FlagsAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.FlagsAttribute/VB/flags.vb#1)]  
  
 <span data-ttu-id="5688b-133">Das folgende Beispiel definiert zwei Enumerationen, die farbbezogene, `SingleHue` und `MultiHue`.</span><span class="sxs-lookup"><span data-stu-id="5688b-133">The following example defines two color-related enumerations, `SingleHue` and `MultiHue`.</span></span> <span data-ttu-id="5688b-134">Die zweite über die die `FlagsAttribute` -Attribut im ersten Fall ist dies nicht.</span><span class="sxs-lookup"><span data-stu-id="5688b-134">The latter has the `FlagsAttribute` attribute; the former does not.</span></span> <span data-ttu-id="5688b-135">Im Beispiel des unterschiedliche Verhalten bei der ein Bereich von ganzen Zahlen, einschließlich von ganzen Zahlen, die nicht der zugrunde liegenden Werte des Enumerationstyps, darstellen, in den Enumerationstyp und deren Zeichenfolgenrepräsentationen angezeigt umgewandelt werden.</span><span class="sxs-lookup"><span data-stu-id="5688b-135">The example shows the difference in behavior when a range of integers, including integers that do not represent underlying values of the enumeration type, are cast to the enumeration type and their string representations displayed.</span></span>   <span data-ttu-id="5688b-136">Beachten Sie, dass es sich bei 3 dargestellt werden kann, wie z. B. eine `SingleHue` bewertet werden, da 3 nicht den zugrunde liegenden Wert eines beliebigen ist `SingleHue` Member, während der `FlagsAttribute` Attribut ermöglicht, die als 3 darstellen eine `MultiHue` Wert `Black, Red`.</span><span class="sxs-lookup"><span data-stu-id="5688b-136">For example, note that 3 cannot be represented as a `SingleHue` value because 3 is not the underlying value of any `SingleHue` member, whereas the `FlagsAttribute` attribute makes it possible to represent 3 as a `MultiHue` value of `Black, Red`.</span></span>  
  
 [!code-cpp[System.FlagsAttribute#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.FlagsAttribute/CPP/flags1.cpp#2)]
 [!code-csharp[System.FlagsAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.FlagsAttribute/CS/flags1.cs#2)]
 [!code-vb[System.FlagsAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.FlagsAttribute/VB/flags1.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FlagsAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.FlagsAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FlagsAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5688b-137">Initialisiert eine neue Instanz der <see cref="T:System.FlagsAttribute" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="5688b-137">Initializes a new instance of the <see cref="T:System.FlagsAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5688b-138">Das folgende Beispiel definiert eine `PhoneService` Enumeration, die Formen der Kommunikation, die von einem Telefonunternehmen bereitgestellten darstellt.</span><span class="sxs-lookup"><span data-stu-id="5688b-138">The following example defines a `PhoneService` enumeration that represents forms of communication provided by a telephone company.</span></span> <span data-ttu-id="5688b-139">Er initialisiert drei Variablen, die den Dienst, der an die Haushalte mit drei verschiedenen darstellt und zeigt dann an die Haushalte haben kein Dienst, der Haushalte nur Handy-Dienst, und welche Haushalte sowohl Handy-Land-Diensts.</span><span class="sxs-lookup"><span data-stu-id="5688b-139">It initializes three variables representing the service provided to three different households, and then indicates which households have no service, which households have only cell phone service, and which households have both cell phone and land line service.</span></span> <span data-ttu-id="5688b-140">Ruft schließlich implizit die <xref:System.Enum.ToString%28System.String%29?displayProperty=nameWithType> Methode, um die Typen des Diensts bereitgestellt, um jede Haushalt anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="5688b-140">Finally, it implicitly calls the <xref:System.Enum.ToString%28System.String%29?displayProperty=nameWithType> method to display the types of service provided to each household.</span></span>  
  
 [!code-cpp[System.FlagsAttribute#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.FlagsAttribute/CPP/flags1.cpp#2)]
 [!code-csharp[System.FlagsAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.FlagsAttribute/CS/flags1.cs#2)]
 [!code-vb[System.FlagsAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.FlagsAttribute/VB/flags1.vb#2)]  
  
 <span data-ttu-id="5688b-141">Das folgende Beispiel veranschaulicht die Verwendung von der `FlagsAttribute` Attribut, und zeigt die Auswirkungen auf die <xref:System.Enum.ToString%2A> Methode der Verwendung von `FlagsAttribute` auf eine <xref:System.Enum> Deklaration.</span><span class="sxs-lookup"><span data-stu-id="5688b-141">The following example illustrates the use of the `FlagsAttribute` attribute and shows the effect on the <xref:System.Enum.ToString%2A> method of using `FlagsAttribute` on an <xref:System.Enum> declaration.</span></span>  
  
 [!code-cpp[System.FlagsAttribute#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.FlagsAttribute/CPP/flags.cpp#1)]
 [!code-csharp[System.FlagsAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.FlagsAttribute/CS/flags.cs#1)]
 [!code-vb[System.FlagsAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.FlagsAttribute/VB/flags.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>