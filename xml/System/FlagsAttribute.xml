<Type Name="FlagsAttribute" FullName="System.FlagsAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bc8b21fc3c07b69515c1ab00e964b833b7dda975" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75042413" /></Metadata><TypeSignature Language="C#" Value="public class FlagsAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit FlagsAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.FlagsAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class FlagsAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class FlagsAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type FlagsAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Enum, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="5953b-101">Gibt an, dass eine Enumeration als Bitfeld (Gruppe von Flags) behandelt werden kann.</span><span class="sxs-lookup"><span data-stu-id="5953b-101">Indicates that an enumeration can be treated as a bit field; that is, a set of flags.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5953b-102">Bitfelder werden in der Regel für Listen von Elementen verwendet, die möglicherweise in Kombination auftreten, wohingegen Enumerationskonstanten im Allgemeinen für Listen von sich gegenseitig ausschließenden Elementen verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="5953b-102">Bit fields are generally used for lists of elements that might occur in combination, whereas enumeration constants are generally used for lists of mutually exclusive elements.</span></span> <span data-ttu-id="5953b-103">Daher sind Bitfelder so konzipiert, dass Sie mit einer bitweisen OR-Operation kombiniert werden, um unbenannte Werte zu generieren, während Enumerationskonstanten nicht sind.</span><span class="sxs-lookup"><span data-stu-id="5953b-103">Therefore, bit fields are designed to be combined with a bitwise OR operation to generate unnamed values, whereas enumerated constants are not.</span></span> <span data-ttu-id="5953b-104">Sprachen variieren bei der Verwendung von Bitfeldern im Vergleich zu Enumerationskonstanten.</span><span class="sxs-lookup"><span data-stu-id="5953b-104">Languages vary in their use of bit fields compared to enumeration constants.</span></span>  
  
## <a name="attributes-of-the-flagsattribute"></a><span data-ttu-id="5953b-105">Attribute von FlagsAttribute</span><span class="sxs-lookup"><span data-stu-id="5953b-105">Attributes of the FlagsAttribute</span></span>  
 <span data-ttu-id="5953b-106"><xref:System.AttributeUsageAttribute> wird auf diese Klasse angewendet, und ihre <xref:System.AttributeUsageAttribute.Inherited%2A>-Eigenschaft gibt `false`an.</span><span class="sxs-lookup"><span data-stu-id="5953b-106"><xref:System.AttributeUsageAttribute> is applied to this class, and its <xref:System.AttributeUsageAttribute.Inherited%2A> property specifies `false`.</span></span> <span data-ttu-id="5953b-107">Dieses Attribut kann nur auf Enumerationen angewendet werden.</span><span class="sxs-lookup"><span data-stu-id="5953b-107">This attribute can only be applied to enumerations.</span></span>  
  
## <a name="guidelines-for-flagsattribute-and-enum"></a><span data-ttu-id="5953b-108">Richtlinien für FlagsAttribute und die Aufzählung</span><span class="sxs-lookup"><span data-stu-id="5953b-108">Guidelines for FlagsAttribute and Enum</span></span>  
  
-   <span data-ttu-id="5953b-109">Verwenden Sie das benutzerdefinierte-Attribut <xref:System.FlagsAttribute> nur dann für eine Enumeration, wenn eine bitweise-Operation (and, or, Exclusive oder) für einen numerischen Wert ausgeführt werden soll.</span><span class="sxs-lookup"><span data-stu-id="5953b-109">Use the <xref:System.FlagsAttribute> custom attribute for an enumeration only if a bitwise operation (AND, OR, EXCLUSIVE OR) is to be performed on a numeric value.</span></span>  
  
-   <span data-ttu-id="5953b-110">Definieren von Enumerationskonstanten in den zwei Mächten, d. h. 1, 2, 4, 8 usw.</span><span class="sxs-lookup"><span data-stu-id="5953b-110">Define enumeration constants in powers of two, that is, 1, 2, 4, 8, and so on.</span></span> <span data-ttu-id="5953b-111">Dies bedeutet, dass sich die einzelnen Flags in kombinierten Enumerationskonstanten nicht überlappen.</span><span class="sxs-lookup"><span data-stu-id="5953b-111">This means the individual flags in combined enumeration constants do not overlap.</span></span>  
  
-   <span data-ttu-id="5953b-112">Erstellen Sie ggf. eine Enumerationskonstante für häufig verwendete Flag-Kombinationen.</span><span class="sxs-lookup"><span data-stu-id="5953b-112">Consider creating an enumerated constant for commonly used flag combinations.</span></span> <span data-ttu-id="5953b-113">Wenn Sie z. b. eine Enumeration für Datei-e/a-Vorgänge verwenden, die die Enumerationskonstanten `Read = 1` und `Write = 2`enthalten, sollten Sie die Enumerationskonstante `ReadWrite = Read OR Write`erstellen, die die `Read` und `Write` Flags kombiniert.</span><span class="sxs-lookup"><span data-stu-id="5953b-113">For example, if you have an enumeration used for file I/O operations that contains the enumerated constants `Read = 1` and `Write = 2`, consider creating the enumerated constant `ReadWrite = Read OR Write`, which combines the `Read` and `Write` flags.</span></span> <span data-ttu-id="5953b-114">Außerdem kann der bitweise OR-Vorgang, der zum Kombinieren der Flags verwendet wird, in einigen Fällen als erweitertes Konzept angesehen werden, die für einfache Aufgaben nicht erforderlich sein sollten.</span><span class="sxs-lookup"><span data-stu-id="5953b-114">In addition, the bitwise OR operation used to combine the flags might be considered an advanced concept in some circumstances that should not be required for simple tasks.</span></span>  
  
-   <span data-ttu-id="5953b-115">Gehen Sie vorsichtig vor, wenn Sie eine negative Zahl als Flag-Enumerationskonstante definieren, da viele Flagpositionen auf 1 festgelegt werden können, was den Code verwirrend machen und Codierungsfehler fördern kann.</span><span class="sxs-lookup"><span data-stu-id="5953b-115">Use caution if you define a negative number as a flag enumerated constant because many flag positions might be set to 1, which might make your code confusing and encourage coding errors.</span></span>  
  
-   <span data-ttu-id="5953b-116">Eine bequeme Methode, um zu testen, ob ein Flag in einem numerischen Wert festgelegt ist, besteht darin, eine bitweise AND-Operation zwischen dem numerischen Wert und der-Flag-Enumerationskonstante auszuführen, bei der alle Bits im numerischen Wert auf NULL festgelegt werden, die nicht dem-Flag entsprechen. , und testen Sie dann, ob das Ergebnis dieses Vorgangs gleich der-Flag-Enumerationskonstante ist.</span><span class="sxs-lookup"><span data-stu-id="5953b-116">A convenient way to test whether a flag is set in a numeric value is to perform a bitwise AND operation between the numeric value and the flag enumerated constant, which sets all bits in the numeric value to zero that do not correspond to the flag, then test whether the result of that operation is equal to the flag enumerated constant.</span></span>  
  
-   <span data-ttu-id="5953b-117">Verwenden Sie `None` als Namen der-Flag-Enumerationskonstante, deren Wert 0 (null) ist.</span><span class="sxs-lookup"><span data-stu-id="5953b-117">Use `None` as the name of the flag enumerated constant whose value is zero.</span></span> <span data-ttu-id="5953b-118">Sie können die `None` Enumerationskonstante nicht in einer bitweisen and-Operation verwenden, um auf ein Flag zu testen, da das Ergebnis immer 0 (null) ist.</span><span class="sxs-lookup"><span data-stu-id="5953b-118">You cannot use the `None` enumerated constant in a bitwise AND operation to test for a flag because the result is always zero.</span></span> <span data-ttu-id="5953b-119">Sie können jedoch einen logischen, nicht einen bitweisen Vergleich zwischen dem numerischen Wert und dem `None` enumerierten Konstanten ausführen, um zu bestimmen, ob Bits im numerischen Wert festgelegt werden.</span><span class="sxs-lookup"><span data-stu-id="5953b-119">However, you can perform a logical, not a bitwise, comparison between the numeric value and the `None` enumerated constant to determine whether any bits in the numeric value are set.</span></span>  
  
     <span data-ttu-id="5953b-120">Wenn Sie anstelle einer Flags-Enumeration eine Wertenumeration erstellen, lohnt es sich, eine `None` Enumerationskonstante zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="5953b-120">If you create a value enumeration instead of a flags enumeration, it is still worthwhile to create a `None` enumerated constant.</span></span> <span data-ttu-id="5953b-121">Der Grund hierfür ist, dass der für die-Enumeration verwendete Arbeitsspeicher standardmäßig vom Common Language Runtime mit 0 (null) initialisiert wird.</span><span class="sxs-lookup"><span data-stu-id="5953b-121">The reason is that by default the memory used for the enumeration is initialized to zero by the common language runtime.</span></span> <span data-ttu-id="5953b-122">Wenn Sie daher keine Konstante definieren, deren Wert 0 (null) ist, enthält die Enumeration bei der Erstellung einen ungültigen Wert.</span><span class="sxs-lookup"><span data-stu-id="5953b-122">Consequently, if you do not define a constant whose value is zero, the enumeration will contain an illegal value when it is created.</span></span>  
  
     <span data-ttu-id="5953b-123">Wenn ein offensichtlicher Standardfall vorliegt, den die Anwendung darstellen muss, sollten Sie eine Enumerationskonstante verwenden, deren Wert 0 (null) ist, um den Standardwert darzustellen.</span><span class="sxs-lookup"><span data-stu-id="5953b-123">If there is an obvious default case your application needs to represent, consider using an enumerated constant whose value is zero to represent the default.</span></span> <span data-ttu-id="5953b-124">Wenn kein Standardfall vorhanden ist, sollten Sie eine Enumerationskonstante verwenden, deren Wert 0 (null) ist. Dies bedeutet den Fall, der nicht durch eine der anderen Enumerationskonstanten repräsentiert wird.</span><span class="sxs-lookup"><span data-stu-id="5953b-124">If there is no default case, consider using an enumerated constant whose value is zero that means the case that is not represented by any of the other enumerated constants.</span></span>  
  
-   <span data-ttu-id="5953b-125">Definieren Sie keinen Enumerationswert ausschließlich so, dass er den Status der Enumeration widerspiegelt.</span><span class="sxs-lookup"><span data-stu-id="5953b-125">Do not define an enumeration value solely to mirror the state of the enumeration itself.</span></span> <span data-ttu-id="5953b-126">Definieren Sie z. b. keine Enumerationskonstante, die nur das Ende der Enumeration kennzeichnet.</span><span class="sxs-lookup"><span data-stu-id="5953b-126">For example, do not define an enumerated constant that merely marks the end of the enumeration.</span></span> <span data-ttu-id="5953b-127">Wenn Sie den letzten Wert der Enumeration ermitteln müssen, überprüfen Sie diesen Wert explizit.</span><span class="sxs-lookup"><span data-stu-id="5953b-127">If you need to determine the last value of the enumeration, check for that value explicitly.</span></span> <span data-ttu-id="5953b-128">Außerdem können Sie eine Bereichs Überprüfung für die erste und letzte Enumerationskonstante ausführen, wenn alle Werte innerhalb des Bereichs gültig sind.</span><span class="sxs-lookup"><span data-stu-id="5953b-128">In addition, you can perform a range check for the first and last enumerated constant if all values within the range are valid.</span></span>  
  
-   <span data-ttu-id="5953b-129">Geben Sie keine Enumerationskonstanten an, die für die zukünftige Verwendung reserviert sind.</span><span class="sxs-lookup"><span data-stu-id="5953b-129">Do not specify enumerated constants that are reserved for future use.</span></span>  
  
-   <span data-ttu-id="5953b-130">Wenn Sie eine Methode oder Eigenschaft definieren, die eine Enumerationskonstante als Wert annimmt, sollten Sie den Wert validieren.</span><span class="sxs-lookup"><span data-stu-id="5953b-130">When you define a method or property that takes an enumerated constant as a value, consider validating the value.</span></span> <span data-ttu-id="5953b-131">Der Grund hierfür ist, dass Sie einen numerischen Wert in den Enumerationstyp umwandeln können, auch wenn dieser numerische Wert nicht in der-Enumeration definiert ist.</span><span class="sxs-lookup"><span data-stu-id="5953b-131">The reason is that you can cast a numeric value to the enumeration type even if that numeric value is not defined in the enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5953b-132">Das folgende Beispiel veranschaulicht die Verwendung des `FlagsAttribute`-Attributs und zeigt die Auswirkung auf die <xref:System.Enum.ToString%2A> Methode der Verwendung von `FlagsAttribute` in einer <xref:System.Enum> Deklaration.</span><span class="sxs-lookup"><span data-stu-id="5953b-132">The following example illustrates the use of the `FlagsAttribute` attribute and shows the effect on the <xref:System.Enum.ToString%2A> method of using `FlagsAttribute` on an <xref:System.Enum> declaration.</span></span>  
  
 [!code-cpp[System.FlagsAttribute#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.FlagsAttribute/CPP/flags.cpp#1)]
 [!code-csharp[System.FlagsAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.FlagsAttribute/CS/flags.cs#1)]
 [!code-vb[System.FlagsAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.FlagsAttribute/VB/flags.vb#1)]  
  
 <span data-ttu-id="5953b-133">Im folgenden Beispiel werden zwei Farb bezogene Enumerationen definiert, `SingleHue` und `MultiHue`.</span><span class="sxs-lookup"><span data-stu-id="5953b-133">The following example defines two color-related enumerations, `SingleHue` and `MultiHue`.</span></span> <span data-ttu-id="5953b-134">Letztere verfügt über das `FlagsAttribute`-Attribut. der erste nicht.</span><span class="sxs-lookup"><span data-stu-id="5953b-134">The latter has the `FlagsAttribute` attribute; the former does not.</span></span> <span data-ttu-id="5953b-135">Das Beispiel zeigt den Unterschied im Verhalten, wenn ein Bereich von ganzen Zahlen, einschließlich Ganzzahlen, die keine zugrunde liegenden Werte des Enumerationstyps darstellen, in den Enumerationstyp und deren angezeigte Zeichen folgen Darstellungen umgewandelt werden.</span><span class="sxs-lookup"><span data-stu-id="5953b-135">The example shows the difference in behavior when a range of integers, including integers that do not represent underlying values of the enumeration type, are cast to the enumeration type and their string representations displayed.</span></span>   <span data-ttu-id="5953b-136">Beachten Sie z. b., dass 3 nicht als `SingleHue` Wert dargestellt werden kann, da 3 nicht der zugrunde liegende Wert eines `SingleHue` Members ist, wohingegen das Attribut `FlagsAttribute` das darstellen von 3 als `MultiHue` Wert `Black, Red`ermöglicht.</span><span class="sxs-lookup"><span data-stu-id="5953b-136">For example, note that 3 cannot be represented as a `SingleHue` value because 3 is not the underlying value of any `SingleHue` member, whereas the `FlagsAttribute` attribute makes it possible to represent 3 as a `MultiHue` value of `Black, Red`.</span></span>  
  
 [!code-cpp[System.FlagsAttribute#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.FlagsAttribute/CPP/flags1.cpp#2)]
 [!code-csharp[System.FlagsAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.FlagsAttribute/CS/flags1.cs#2)]
 [!code-vb[System.FlagsAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.FlagsAttribute/VB/flags1.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FlagsAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.FlagsAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FlagsAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5953b-137">Initialisiert eine neue Instanz der <see cref="T:System.FlagsAttribute" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="5953b-137">Initializes a new instance of the <see cref="T:System.FlagsAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5953b-138">Im folgenden Beispiel wird eine `PhoneService` Enumeration definiert, die Kommunikationsformen darstellt, die von einem Telefonunternehmen bereitgestellt werden.</span><span class="sxs-lookup"><span data-stu-id="5953b-138">The following example defines a `PhoneService` enumeration that represents forms of communication provided by a telephone company.</span></span> <span data-ttu-id="5953b-139">Dabei werden drei Variablen initialisiert, die den für drei unterschiedliche Haushalte bereitgestellten Dienst darstellen. Anschließend wird angegeben, welche Haushalte keinen Dienst haben, welche Haushalte nur über den Mobiltelefondienst verfügen und welche Privathaushalte sowohl den Mobiltelefondienst als auch den Bundesland Dienst haben.</span><span class="sxs-lookup"><span data-stu-id="5953b-139">It initializes three variables representing the service provided to three different households, and then indicates which households have no service, which households have only cell phone service, and which households have both cell phone and land line service.</span></span> <span data-ttu-id="5953b-140">Schließlich wird die <xref:System.Enum.ToString%28System.String%29?displayProperty=nameWithType>-Methode implizit aufgerufen, um die Dienst Typen anzuzeigen, die für die einzelnen Haushalte bereitgestellt werden.</span><span class="sxs-lookup"><span data-stu-id="5953b-140">Finally, it implicitly calls the <xref:System.Enum.ToString%28System.String%29?displayProperty=nameWithType> method to display the types of service provided to each household.</span></span>  
  
 [!code-cpp[System.FlagsAttribute#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.FlagsAttribute/CPP/flags1.cpp#2)]
 [!code-csharp[System.FlagsAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.FlagsAttribute/CS/flags1.cs#2)]
 [!code-vb[System.FlagsAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.FlagsAttribute/VB/flags1.vb#2)]  
  
 <span data-ttu-id="5953b-141">Das folgende Beispiel veranschaulicht die Verwendung des `FlagsAttribute`-Attributs und zeigt die Auswirkung auf die <xref:System.Enum.ToString%2A> Methode der Verwendung von `FlagsAttribute` in einer <xref:System.Enum> Deklaration.</span><span class="sxs-lookup"><span data-stu-id="5953b-141">The following example illustrates the use of the `FlagsAttribute` attribute and shows the effect on the <xref:System.Enum.ToString%2A> method of using `FlagsAttribute` on an <xref:System.Enum> declaration.</span></span>  
  
 [!code-cpp[System.FlagsAttribute#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.FlagsAttribute/CPP/flags.cpp#1)]
 [!code-csharp[System.FlagsAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.FlagsAttribute/CS/flags.cs#1)]
 [!code-vb[System.FlagsAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.FlagsAttribute/VB/flags.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
