<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IObservable`1.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c2589d1e6912470385b77aa8afee4b096c72c259.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c2589d1e6912470385b77aa8afee4b096c72c259</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>The object that provides notification information.</source>
          <target state="translated">Das Objekt, das Benachrichtigungsinformationen bereitstellt.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.IObservable`1">
          <source>Defines a provider for push-based notification.</source>
          <target state="translated">Definiert einen Anbieter für Pushbenachrichtigungen.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>The <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> and <ph id="ph2">&lt;xref:System.IObservable%601&gt;</ph> interfaces provide a generalized mechanism for push-based notification, also known as the observer design pattern.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> und <ph id="ph2">&lt;xref:System.IObservable%601&gt;</ph> Schnittstellen bieten einen generalisierten Mechanismus für Pushbenachrichtigungen, auch bekannt als das Entwurfsmuster "Beobachter".</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>The <ph id="ph1">&lt;xref:System.IObservable%601&gt;</ph> interface represents the class that sends notifications (the provider); the <ph id="ph2">&lt;xref:System.IObserver%601&gt;</ph> interface represents the class that receives them (the observer).</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IObservable%601&gt;</ph> Schnittstelle stellt die Klasse dar, das Benachrichtigungen (Anbieter); sendet die <ph id="ph2">&lt;xref:System.IObserver%601&gt;</ph> Schnittstelle stellt die Klasse, die sie empfängt (Beobachter) dar.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source><ph id="ph1">`T`</ph> represents the class that provides the notification information.</source>
          <target state="translated"><ph id="ph1">`T`</ph> Stellt die Klasse, die die Benachrichtigungsinformationen bereitstellt.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>In some push-based notifications, the <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> implementation and <ph id="ph2">`T`</ph> can represent the same type.</source>
          <target state="translated">In einigen pushbasierte Benachrichtigungen die <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> Implementierung und <ph id="ph2">`T`</ph> denselben Typ darstellen kann.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>The provider must implement a single method, <ph id="ph1">&lt;xref:System.IObservable%601.Subscribe%2A&gt;</ph>, that indicates that an observer wants to receive push-based notifications.</source>
          <target state="translated">Der Anbieter muss eine einzelne Methode implementieren <ph id="ph1">&lt;xref:System.IObservable%601.Subscribe%2A&gt;</ph>, das angibt, dass ein Beobachter pushbasierte Benachrichtigungen erhalten möchte.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>Callers to the method pass an instance of the observer.</source>
          <target state="translated">Aufrufer der Methode zu eine Instanz von den Beobachter übergeben.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>The method returns an <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> implementation that enables observers to cancel notifications at any time before the provider has stopped sending them.</source>
          <target state="translated">Die Methode gibt ein <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> Implementierung, die es Beobachter Benachrichtigungen ermöglicht vor der Anbieter beendet wurde, senden sie jederzeit abbrechen.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>At any given time, a given provider may have zero, one, or multiple observers.</source>
          <target state="translated">Einem bestimmten Zeitpunkt möglicherweise ein angegebenen Anbieter keinen, einen oder mehrere Beobachter.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>The provider is responsible for storing references to observers and ensuring that they are valid before it sends notifications.</source>
          <target state="translated">Der Anbieter ist verantwortlich für das Speichern von Verweisen auf Observer-Objekte, und stellen Sie sicher, dass sie gültig sind, bevor Benachrichtigungen gesendet.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>The <ph id="ph1">&lt;xref:System.IObservable%601&gt;</ph> interface does not make any assumptions about the number of observers or the order in which notifications are sent.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IObservable%601&gt;</ph> Schnittstelle wird keine Annahmen über die Anzahl der Beobachter oder die Reihenfolge, in denen Benachrichtigungen gesendet werden.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>The provider sends the following three kinds of notifications to the observer by calling <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> methods:</source>
          <target state="translated">Der Anbieter sendet die folgenden drei Arten von Benachrichtigungen an den Beobachter, durch den Aufruf <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> Methoden:</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>The current data.</source>
          <target state="translated">Die aktuellen Daten.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>The provider can call the <ph id="ph1">&lt;xref:System.IObserver%601.OnNext%2A?displayProperty=nameWithType&gt;</ph> method to pass the observer a <ph id="ph2">`T`</ph> object that has current data, changed data, or fresh data.</source>
          <target state="translated">Der Anbieter kann die <ph id="ph1">&lt;xref:System.IObserver%601.OnNext%2A?displayProperty=nameWithType&gt;</ph> Methode, um den Beobachter übergeben ein <ph id="ph2">`T`</ph> -Objekt, das aktuelle Daten, geänderte Daten oder neue Daten enthält.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>An error condition.</source>
          <target state="translated">Ein Fehlerzustand.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>The provider can call the <ph id="ph1">&lt;xref:System.IObserver%601.OnError%2A?displayProperty=nameWithType&gt;</ph> method to notify the observer that some error condition has occurred.</source>
          <target state="translated">Der Anbieter kann die <ph id="ph1">&lt;xref:System.IObserver%601.OnError%2A?displayProperty=nameWithType&gt;</ph> Methode den Beobachter Benachrichtigungen, die einige Fehler aufgetreten ist.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>No further data.</source>
          <target state="translated">Keine weiteren Daten.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>The provider can call the <ph id="ph1">&lt;xref:System.IObserver%601.OnCompleted%2A?displayProperty=nameWithType&gt;</ph> method to notify the observer that it has finished sending notifications.</source>
          <target state="translated">Der Anbieter kann die <ph id="ph1">&lt;xref:System.IObserver%601.OnCompleted%2A?displayProperty=nameWithType&gt;</ph> Methode, um dem Beobachter benachrichtigen, dass das Senden von Benachrichtigungen abgeschlossen hat.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>The following example illustrates the observer design pattern.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht das Entwurfsmuster "Beobachter".</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>It defines a <ph id="ph1">`Location`</ph> class that contains latitude and longitude information.</source>
          <target state="translated">Definiert eine <ph id="ph1">`Location`</ph> Klasse, die Breiten- und Längengrad Informationen enthält.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>The <ph id="ph1">`LocationTracker`</ph> class provides the <ph id="ph2">&lt;xref:System.IObservable%601&gt;</ph> implementation.</source>
          <target state="translated">Die <ph id="ph1">`LocationTracker`</ph> -Klasse stellt die <ph id="ph2">&lt;xref:System.IObservable%601&gt;</ph> Implementierung.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>Its <ph id="ph1">`TrackLocation`</ph> method is passed a nullable <ph id="ph2">`Location`</ph> object that contains the latitude and longitude data.</source>
          <target state="translated">Die <ph id="ph1">`TrackLocation`</ph> Methode wird ein NULL-Werte zu übergeben <ph id="ph2">`Location`</ph> Objekt, das die Breiten- und Längengrad Daten enthält.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>If the <ph id="ph1">`Location`</ph> value is not <ph id="ph2">`null`</ph>, the <ph id="ph3">`TrackLocation`</ph> method calls the <ph id="ph4">&lt;xref:System.IObserver%601.OnNext%2A&gt;</ph> method of each observer.</source>
          <target state="translated">Wenn die <ph id="ph1">`Location`</ph> Wert ist kein <ph id="ph2">`null`</ph>, <ph id="ph3">`TrackLocation`</ph> Methodenaufrufe der <ph id="ph4">&lt;xref:System.IObserver%601.OnNext%2A&gt;</ph> -Methode jedes Beobachters.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>If the <ph id="ph1">`Location`</ph> value is <ph id="ph2">`null`</ph>, the <ph id="ph3">`TrackLocation`</ph> method instantiates a <ph id="ph4">`LocationUnknownException`</ph> object, which is shown in the following example.</source>
          <target state="translated">Wenn die <ph id="ph1">`Location`</ph> Wert <ph id="ph2">`null`</ph>, die <ph id="ph3">`TrackLocation`</ph> -Methode instanziiert einen <ph id="ph4">`LocationUnknownException`</ph> -Objekt, das im folgenden Beispiel gezeigt wird.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>It then calls each observer's <ph id="ph1">&lt;xref:System.IObserver%601.OnError%2A&gt;</ph> method and passes it the <ph id="ph2">`LocationUnknownException`</ph> object.</source>
          <target state="translated">Er ruft dann jedes Beobachters <ph id="ph1">&lt;xref:System.IObserver%601.OnError%2A&gt;</ph> Methode und übergibt die <ph id="ph2">`LocationUnknownException`</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>Note that <ph id="ph1">`LocationUnknownException`</ph> derives from <ph id="ph2">&lt;xref:System.Exception&gt;</ph>, but does not add any new members.</source>
          <target state="translated">Beachten Sie, dass <ph id="ph1">`LocationUnknownException`</ph> leitet sich von <ph id="ph2">&lt;xref:System.Exception&gt;</ph>, aber keine neuen Elemente hinzugefügt.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>Observers register to receive notifications from a <ph id="ph1">`TrackLocation`</ph> object by calling its <ph id="ph2">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph> method, which assigns a reference to the observer object to a private generic <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph> object.</source>
          <target state="translated">Beobachter registrieren sich zum Empfangen von Benachrichtigungen von einer <ph id="ph1">`TrackLocation`</ph> Objekt durch Aufrufen seiner <ph id="ph2">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph> -Methode, die einen Verweis auf das Objekt "Beobachter" um eine private generische weist <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>The method returns an <ph id="ph1">`Unsubscriber`</ph> object, which is an <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> implementation that enables observers to stop receiving notifications.</source>
          <target state="translated">Die Methode gibt ein <ph id="ph1">`Unsubscriber`</ph> Objekt, das eine <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> Implementierung, die Beobachter den Empfang von Benachrichtigungen beenden kann.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>The <ph id="ph1">`LocationTracker`</ph> class also includes an <ph id="ph2">`EndTransmission`</ph> method.</source>
          <target state="translated">Die <ph id="ph1">`LocationTracker`</ph> -Klasse enthält zudem ein <ph id="ph2">`EndTransmission`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>When no further location data is available, the method calls each observer's <ph id="ph1">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph> method and then clears the internal list of observers.</source>
          <target state="translated">Wenn keine weiteren Daten für den Speicherort verfügbar ist, ruft die Methode jedes Beobachters <ph id="ph1">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph> Methode und löscht dann die interne Liste der Beobachter.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>In this example, the <ph id="ph1">`LocationReporter`</ph> class provides the <ph id="ph2">&lt;xref:System.IObserver%601&gt;</ph> implementation.</source>
          <target state="translated">In diesem Beispiel wird die <ph id="ph1">`LocationReporter`</ph> -Klasse stellt die <ph id="ph2">&lt;xref:System.IObserver%601&gt;</ph> Implementierung.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>It displays information about the current location to the console.</source>
          <target state="translated">Es zeigt Informationen über den aktuellen Speicherort in der Konsole aus.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>Its constructor includes a <ph id="ph1">`name`</ph> parameter, which enables the <ph id="ph2">`LocationReporter`</ph> instance to identify itself in its string output.</source>
          <target state="translated">Ihren Konstruktor enthält eine <ph id="ph1">`name`</ph> Parameter, wodurch die <ph id="ph2">`LocationReporter`</ph> Instanz, die sich in der Zeichenfolgenausgabe zu identifizieren.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>It also includes a <ph id="ph1">`Subscribe`</ph> method, which wraps a call to the provider's <ph id="ph2">&lt;xref:System.IObservable%601.Subscribe%2A&gt;</ph> method.</source>
          <target state="translated">Es enthält auch eine <ph id="ph1">`Subscribe`</ph> -Methode, die einen Aufruf an des Anbieters umschließt <ph id="ph2">&lt;xref:System.IObservable%601.Subscribe%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>This allows the method to assign the returned <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> reference to a private variable.</source>
          <target state="translated">Dadurch wird die Methode, die den zurückgegebenen zuweisen <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> Verweis auf eine private Variable.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>The <ph id="ph1">`LocationReporter`</ph> class also includes an <ph id="ph2">`Unsubscribe`</ph> method, which calls the <ph id="ph3">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph> method of the object that is returned by the <ph id="ph4">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Der <ph id="ph1">`LocationReporter`</ph> -Klasse enthält zudem ein <ph id="ph2">`Unsubscribe`</ph> Methode, die <ph id="ph3">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph> -Methode des Objekts, die von zurückgegeben wird der <ph id="ph4">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>The following code defines the <ph id="ph1">`LocationReporter`</ph> class.</source>
          <target state="translated">Der folgende Code definiert die <ph id="ph1">`LocationReporter`</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>The following code then instantiates the provider and the observer.</source>
          <target state="translated">Klicken Sie dann instanziiert der folgende Code, der Anbieter und der Beobachter.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.IObservable`1.Subscribe(System.IObserver{`0})">
          <source>The object that is to receive notifications.</source>
          <target state="translated">Das Objekt, das Benachrichtigungen zu empfangen hat.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.IObservable`1.Subscribe(System.IObserver{`0})">
          <source>Notifies the provider that an observer is to receive notifications.</source>
          <target state="translated">Benachrichtigt den Anbieter, dass ein Beobachter Benachrichtigungen zu empfangen hat.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.IObservable`1.Subscribe(System.IObserver{`0})">
          <source>A reference to an interface that allows observers to stop receiving notifications before the provider has finished sending them.</source>
          <target state="translated">Ein Verweis auf eine Schnittstelle, über die Beobachter den Empfang von Benachrichtigungen beenden können, bevor der Anbieter deren Versand einstellt.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObservable`1.Subscribe(System.IObserver{`0})">
          <source>The <ph id="ph1">&lt;xref:System.IObservable%601.Subscribe%2A&gt;</ph> method must be called to register an observer for push-based notifications.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IObservable%601.Subscribe%2A&gt;</ph> Methode muss aufgerufen werden, um ein Beobachter für Pushbenachrichtigungen registrieren.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObservable`1.Subscribe(System.IObserver{`0})">
          <source>A typical implementation of the <ph id="ph1">&lt;xref:System.IObservable%601.Subscribe%2A&gt;</ph> method does the following:</source>
          <target state="translated">Eine typische Implementierung der der <ph id="ph1">&lt;xref:System.IObservable%601.Subscribe%2A&gt;</ph> Methode bewirkt Folgendes:</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObservable`1.Subscribe(System.IObserver{`0})">
          <source>It stores a reference to the observer in a collection object, such as a <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> object.</source>
          <target state="translated">Es speichert einen Verweis auf den Beobachter in ein Auflistungsobjekt, z. B. eine <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObservable`1.Subscribe(System.IObserver{`0})">
          <source>It returns a reference to an <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">Es gibt einen Verweis auf eine <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> Schnittstelle.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObservable`1.Subscribe(System.IObserver{`0})">
          <source>This enables observers to unsubscribe (that is, to stop receiving notifications) before the provider has finished sending them and called the subscriber's <ph id="ph1">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph> method.</source>
          <target state="translated">Dadurch, dass Beobachter Kündigen des Abonnements (d. h. den Empfang von Benachrichtigungen beenden), bevor der Anbieter hat Versand einstellt und des Abonnenten aufgerufen <ph id="ph1">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObservable`1.Subscribe(System.IObserver{`0})">
          <source>At any given time, a particular instance of an <ph id="ph1">&lt;xref:System.IObservable%601&gt;</ph> implementation is responsible for handling all subscriptions and notifying all subscribers.</source>
          <target state="translated">Zu einem beliebigen Zeitpunkt einer bestimmten Instanz einer <ph id="ph1">&lt;xref:System.IObservable%601&gt;</ph> Implementierung ist verantwortlich für das Behandeln aller Abonnements, und benachrichtigen alle Abonnenten.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObservable`1.Subscribe(System.IObserver{`0})">
          <source>Unless the documentation for a particular <ph id="ph1">&lt;xref:System.IObservable%601&gt;</ph> implementation indicates otherwise, observers should make no assumptions about the <ph id="ph2">&lt;xref:System.IObservable%601&gt;</ph> implementation, such as the order of notifications that multiple observers will receive.</source>
          <target state="translated">Es sei denn, die Dokumentation für einen bestimmten <ph id="ph1">&lt;xref:System.IObservable%601&gt;</ph> Implementierung gibt hingegen an Beobachter sollte keine Annahmen über die <ph id="ph2">&lt;xref:System.IObservable%601&gt;</ph> Implementierung, z. B. die Reihenfolge der Benachrichtigungen, die mehrere Beobachter erhalten.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObservable`1.Subscribe(System.IObserver{`0})">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.IObservable%601.Subscribe%2A&gt;</ph> method for an application that reports latitude and longitude information.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die <ph id="ph1">&lt;xref:System.IObservable%601.Subscribe%2A&gt;</ph> Methode für eine Anwendung, die Breiten- und Längengrad Informationen meldet.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObservable`1.Subscribe(System.IObserver{`0})">
          <source>It defines an <ph id="ph1">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> collection object that stores references to all observers.</source>
          <target state="translated">Definiert eine <ph id="ph1">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> Auflistungsobjekt, das Verweise auf alle Beobachter speichert.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObservable`1.Subscribe(System.IObserver{`0})">
          <source>It also returns a private class named <ph id="ph1">`Unsubscriber`</ph> that implements the <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> interface and enables subscribers to stop receiving event notifications.</source>
          <target state="translated">Es gibt auch eine private Klasse mit dem Namen <ph id="ph1">`Unsubscriber`</ph> , implementiert die <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> Schnittstelle und ermöglicht es Abonnenten für den Empfang von ereignisbenachrichtigungen beenden.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObservable`1.Subscribe(System.IObserver{`0})">
          <source>See the Example section of the <ph id="ph1">&lt;xref:System.IObservable%601&gt;</ph> topic for the complete example.</source>
          <target state="translated">Finden Sie im Beispielabschnitt von der <ph id="ph1">&lt;xref:System.IObservable%601&gt;</ph> Thema für das vollständige Beispiel.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>