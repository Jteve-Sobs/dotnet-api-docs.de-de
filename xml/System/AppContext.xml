<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AppContext.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5de2b5eddaaa2bb43dcc7b608c490b41f3a8c1713.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">de2b5eddaaa2bb43dcc7b608c490b41f3a8c1713</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.AppContext">
          <source>Provides members for setting and retrieving data about an application's context.</source>
          <target state="translated">Stellt Member zum Festlegen und Abrufen von Daten für einen Anwendungskontext bereit.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>The <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> class enables library writers to provide a uniform opt-out mechanism for new functionality for their users.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> Klasse ermöglicht es Bibliotheksautoren ihren Benutzern einen einheitlichen abwahlmechanismus für neue Funktionalitäten bereitzustellen.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>It establishes a loosely-coupled contract between components in order to communicate an opt-out request.</source>
          <target state="translated">Sie richtet einen lose gekoppelten Vertrag zwischen den Komponenten ein, um eine Anforderung zur Abwahl zu übermitteln.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>This capability is typically important when a change is made to existing functionality.</source>
          <target state="translated">Diese Möglichkeit ist in der Regel wichtig, wenn vorhandene Funktionalitäten verändert werden.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Conversely, there is already an implicit opt-in for new functionality.</source>
          <target state="translated">Im Gegensatz dazu existiert bereits eine implizite Auswahloption für neue Funktionalitäten.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>AppContext for library developers</source>
          <target state="translated">AppContext für Entwickler von Bibliotheken</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Libraries use  the <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> class to define and expose compatibility switches, while library users can set those switches to affect the library behavior.</source>
          <target state="translated">Verwenden von Bibliotheken die <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> Klasse zum Definieren und Verfügbarmachen von Kompatibilität gewechselt wird, während der Bibliothek Benutzer diese Optionen beeinflussen das Verhalten der Bibliothek festlegen können.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>By default, libraries provide the new functionality, and they only alter it (that is, they provide the previous functionality) if the switch is set.</source>
          <target state="translated">Standardmäßig stellen Bibliotheken die neue Funktionalität bereit. Nur wenn die Option festgelegt ist, stellen sie die vorherige Funktionalität bereit.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>This allows libraries to provide new behavior for an existing API while continuing to support callers who depend on the previous behavior.</source>
          <target state="translated">Dadurch können Bibliotheken, neues Verhalten für eine vorhandene API Aufrufer zu unterstützen, auf das vorherige Verhalten angewiesenen, Mitarbeitern weiterhin bereitzustellen.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Defining the switch name</source>
          <target state="translated">Definieren den Namen des Switches</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>The most common way to allow consumers of your library to opt out of a change of behavior is to define a named switch.</source>
          <target state="translated">Die gängigste Methode zum Consumer Ihrer Bibliothek, eine Änderung des Verhalten abzuwählen zulassen besteht darin einen benannten Switch definieren.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Its <ph id="ph1">`value`</ph> element is a name/value pair that consists of the name of a switch and its <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> value.</source>
          <target state="translated">Die <ph id="ph1">`value`</ph> Element ist ein Name/Wert-Paar des Namens eines Schalters und die zugehörige <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> Wert.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>By default, the switch is always implicitly <ph id="ph1">`false`</ph>, which provides the new behavior (and makes the new behavior opt-in by default).</source>
          <target state="translated">Wird standardmäßig die Option ist immer implizit <ph id="ph1">`false`</ph>, bietet das neue Verhalten (und das neue Verhalten opt-in in der Standardeinstellung).</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Setting the switch to <ph id="ph1">`true`</ph> enables it, which provides the legacy behavior.</source>
          <target state="translated">Festlegen der Option auf <ph id="ph1">`true`</ph> ermöglicht, die die Legacyverhalten bereitstellt.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Explicitly setting the switch to <ph id="ph1">`false`</ph> also provides the new behavior.</source>
          <target state="translated">Explizites Festlegen der Option zum <ph id="ph1">`false`</ph> wird auch das neue Verhalten aktiviert.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>It's beneficial to use a consistent format for switch names, since they are a formal contract exposed by a library.</source>
          <target state="translated">Es ist auch hilfreich, ein konsistentes Format für Switch-Namen verwenden, da es sich um eine formellen Vertrag verfügbar gemacht werden, indem Sie eine Bibliothek sind.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>The following are two obvious formats.</source>
          <target state="translated">Das folgende Beispiel zeigt zwei offensichtliche Formate.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source><bpt id="p1">*</bpt>Switch<ept id="p1">*</ept>.<bpt id="p2">*</bpt>namespace<ept id="p2">*</ept>.<bpt id="p3">*</bpt>switchname<ept id="p3">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>Switch<ept id="p1">*</ept>.<bpt id="p2">*</bpt>namespace<ept id="p2">*</ept>.<bpt id="p3">*</bpt>switchname<ept id="p3">*</ept></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source><bpt id="p1">*</bpt>Switch<ept id="p1">*</ept>.<bpt id="p2">*</bpt>library<ept id="p2">*</ept>.<bpt id="p3">*</bpt>switchname<ept id="p3">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>Switch<ept id="p1">*</ept>.<bpt id="p2">*</bpt>library<ept id="p2">*</ept>.<bpt id="p3">*</bpt>switchname<ept id="p3">*</ept></target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Once you define and document the switch, callers can use it by using the registry, by adding an  <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>AppContextSwitchOverrides&gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md)</ept> element to their application configuration file, or by calling the  <ph id="ph2">&lt;xref:System.AppContext.SetSwitch%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph> method programmatically.</source>
          <target state="translated">Nachdem Sie definieren und den Switch dokumentieren, Aufrufer können Sie sie mithilfe der Registrierungs durch Hinzufügen einer <bpt id="p1">[</bpt> <ph id="ph1">\&lt;</ph>AppContextSwitchOverrides &gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md)</ept> Element der Konfigurationsdatei ihrer Anwendung oder durch Aufrufen der <ph id="ph2">&lt;xref:System.AppContext.SetSwitch%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph> -Methode programmgesteuert.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>See the <bpt id="p1">[</bpt>AppContext for library consumers<ept id="p1">](#ForConsumers)</ept> section for more information about how callers use and set the value of <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> configuration switches.</source>
          <target state="translated">Finden Sie unter der <bpt id="p1">[</bpt>AppContext für Bibliotheksconsumer<ept id="p1">](#ForConsumers)</ept> Abschnitt, um weitere Informationen darüber, wie Aufrufer verwenden, und legen Sie den Wert der <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> Konfigurationsschalter.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>When the common language runtime runs an application, it automatically reads the registry's compatibility settings and loads the application configuration file in order to populate the application's <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> instance.</source>
          <target state="translated">Wenn die common Language Runtime eine Anwendung ausgeführt wird, wird automatisch liest die Registrierung von kompatibilitätseinstellungen und die Anwendungskonfigurationsdatei zum Auffüllen der Anwendungsverzeichnis lädt <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> Instanz.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Because the <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> instance is populated either programmatically by the caller or by the runtime, you do not have to take any action, such as calling the <ph id="ph2">&lt;xref:System.AppContext.SetSwitch%2A&gt;</ph> method,  to configure the <ph id="ph3">&lt;xref:System.AppContext&gt;</ph> instance.</source>
          <target state="translated">Da die <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> Instanz wird entweder programmgesteuert vom Aufrufer oder von der Laufzeit aufgefüllt, Sie müssen keinen ergreifen wie ein Aufruf der <ph id="ph2">&lt;xref:System.AppContext.SetSwitch%2A&gt;</ph> Methode, die zum Konfigurieren der <ph id="ph3">&lt;xref:System.AppContext&gt;</ph> Instanz.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Checking the setting</source>
          <target state="translated">Überprüfen die Einstellung</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>You can then check if a consumer has declared the value of the switch and act appropriately by calling the <ph id="ph1">&lt;xref:System.AppContext.TryGetSwitch%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Sie können dann prüfen, wenn ein Consumer den Wert des Switches und Act ordnungsgemäß durch den Aufruf deklariert hat die <ph id="ph1">&lt;xref:System.AppContext.TryGetSwitch%2A?displayProperty=nameWithType&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>The method returns <ph id="ph1">`true`</ph> if the <ph id="ph2">`switchName`</ph> argument is found, and when the method returns, its <ph id="ph3">`isEnabled`</ph> argument indicates the value of the switch.</source>
          <target state="translated">Gibt die Methode <ph id="ph1">`true`</ph> Wenn die <ph id="ph2">`switchName`</ph> Argument gefunden wird, und wenn die Methode zurückgegeben, dessen <ph id="ph3">`isEnabled`</ph> Argument gibt den Wert des Schalters.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Otherwise, the method returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Andernfalls gibt diese Methode <ph id="ph1">`false`</ph> zurück.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>An example</source>
          <target state="translated">Ein Beispiel für</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>The following example illustrates the use of the <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> class to allow the customer to choose the original behavior of a library method.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die Verwendung der <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> Klasse, um den Kunden an, das ursprüngliche Verhalten einer Bibliothek Methode auswählen können.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>The following is version 1.0 of a library named <ph id="ph1">`StringLibrary`</ph>.</source>
          <target state="translated">Im folgenden finden Sie eine Bibliothek mit dem Namen, Version 1.0 <ph id="ph1">`StringLibrary`</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>It defines a <ph id="ph1">`SubstringStartsAt`</ph> method that performs an ordinal comparison to determine the starting index of a substring within a larger string.</source>
          <target state="translated">Definiert eine <ph id="ph1">`SubstringStartsAt`</ph> Methode, um zu bestimmen, der Startindex einer Teilzeichenfolge innerhalb einer größeren Zeichenfolge einen ordinalen Vergleich ausführt.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>The following example then uses the library to find the starting index of the substring "archæ" in "The archaeologist".</source>
          <target state="translated">Im folgenden Beispiel wird dann die Bibliothek den Anfangsindex der Teilzeichenfolge "Archæ" in "Archaeologist" gefunden.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Because the method performs an ordinal comparison, the substring cannot be found.</source>
          <target state="translated">Da die Methode einen Ordinalvergleich ausführt, kann die Teilzeichenfolge nicht gefunden werden.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Version 2 of the library, however, changes the <ph id="ph1">`SubstringStartsAt`</ph> method to use culture-sensitive comparison.</source>
          <target state="translated">2-Version der Bibliothek, ändert sich jedoch die <ph id="ph1">`SubstringStartsAt`</ph> Methode, um kulturabhängige Vergleich verwenden.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>When the app is recompiled to run against the new version of the library, it now reports that the substring "archæ" is found at index 4 in "The archaeologist".</source>
          <target state="translated">Wenn die app neu kompiliert wird, für die neue Version der Bibliothek auszuführen, meldet er jetzt, dass die Teilzeichenfolge "Archæ" Index "4" in "Archaeologist" gefunden wird.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>This change can be prevented from breaking the applications that depend on the original behavior by defining an <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>AppContextSwitchOverrides&gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md)</ept> switch.</source>
          <target state="translated">Diese Änderung kann verhindert werden, die Anwendungen, die das ursprüngliche Verhalten durch die Definition abhängig sind wichtige ein <bpt id="p1">[</bpt> <ph id="ph1">\&lt;</ph>AppContextSwitchOverrides &gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md)</ept> wechseln.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>In this case, the switch is named <ph id="ph1">`StringLibrary.DoNotUseCultureSensitiveComparison`</ph>.</source>
          <target state="translated">In diesem Fall heißt der Switch <ph id="ph1">`StringLibrary.DoNotUseCultureSensitiveComparison`</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Its default value, <ph id="ph1">`false`</ph>, indicates that the library should perform its version 2.0 culture-sensitive comparison.</source>
          <target state="translated">Der Standardwert <ph id="ph1">`false`</ph>, gibt an, dass die Bibliothek der Version 2.0 kulturabhängigen Vergleich durchführen soll.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source><ph id="ph1">`true`</ph> indicates that the library should perform its version 1.0 ordinal comparison.</source>
          <target state="translated"><ph id="ph1">`true`</ph> Gibt an, dass die Bibliothek der Version 1.0-Ordinalvergleich ausführen sollten.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>A slight modification of the previous code allows the library consumer to set the switch to determine the kind of comparison the method performs.</source>
          <target state="translated">Eine leichte Änderung der obige Code ermöglicht es Bibliothek, legen Sie die Option, die Art des Vergleichs wird ermittelt, wie die Methode ausführt.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>If application can then use the following configuration file to restore the version 1.0 behavior.</source>
          <target state="translated">Wenn eine Anwendung kann die folgende Konfigurationsdatei verwenden, um das Verhalten der Version 1.0 wiederherzustellen.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>When the application is run with the configuration file present, it produces the following output:</source>
          <target state="translated">Wenn die Anwendung mit der Konfigurationsdatei vorhanden ausgeführt wird, erzeugt es die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>AppContext for library consumers</source>
          <target state="translated">AppContext für Bibliotheksconsumer</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>If you are the consumer of a library, the <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> class  allows you to take advantage of a library or library method's opt-out mechanism for new functionality.</source>
          <target state="translated">Wenn Sie der Consumer einer Bibliothek sind die <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> -Klasse ermöglicht es Ihnen, eine Bibliothek oder Bibliotheksmethode abwahlmechanismus für neue Funktionen nutzen.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Individual methods of the class library that you are calling define particular switches that enable or disable a new behavior.</source>
          <target state="translated">Bestimmte Schalter die aktivieren oder deaktivieren ein neues Verhalten definieren, einzelne Methoden für die Klassenbibliothek, die Sie aufrufen.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>The value of the switch  is a Boolean.</source>
          <target state="translated">Der Wert des Schalters ist ein boolescher Wert.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>If it is <ph id="ph1">`false`</ph>, which is typically the default value, the new behavior is enabled; if it is <ph id="ph2">`true`</ph>, the new behavior is disabled, and the member behaves as it did previously.</source>
          <target state="translated">Ist er <ph id="ph1">`false`</ph>der i. d. r. der Standardwert, wird das neue Verhalten aktiviert ist; wenn es sich handelt <ph id="ph2">`true`</ph>, die das neue Verhalten ist deaktiviert und das Element verhält sich wie zuvor.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>You can set the value of a switch in one of three ways:</source>
          <target state="translated">Sie können den Wert eines Schalters auf drei Arten festlegen:</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>By calling the <ph id="ph1">&lt;xref:System.AppContext.SetSwitch%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph> method in your code.</source>
          <target state="translated">Durch Aufrufen der <ph id="ph1">&lt;xref:System.AppContext.SetSwitch%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph> Methode im Code.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>The <ph id="ph1">`switchName`</ph> argument defines the switch name, and the <ph id="ph2">`isEnabled`</ph> property defines the value of the switch.</source>
          <target state="translated">Die <ph id="ph1">`switchName`</ph> Argument definiert den Namen des Switches, und die <ph id="ph2">`isEnabled`</ph> Eigenschaft definiert den Wert des Schalters.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Because <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> is a static class, it is available on a per-application domain basis.</source>
          <target state="translated">Da <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> ist eine statische Klasse steht auf der Basis eines pro Anwendungsdomäne.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Calling the <ph id="ph1">&lt;xref:System.AppContext.SetSwitch%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph> has application scope; that is, it affects only the application.</source>
          <target state="translated">Aufrufen der <ph id="ph1">&lt;xref:System.AppContext.SetSwitch%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph> hat Anwendungsbereich; d. h., sie wirkt sich auf nur die Anwendung.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>By adding an <ph id="ph1">`&lt;AppContextSwitchOverrides&gt;`</ph> element to the <bpt id="p1">[</bpt><ph id="ph2">\&lt;</ph>runtime&gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md)</ept> section of your app.config file.</source>
          <target state="translated">Durch Hinzufügen einer <ph id="ph1">`&lt;AppContextSwitchOverrides&gt;`</ph> Element auf der <bpt id="p1">[</bpt> <ph id="ph2">\&lt;</ph>Runtime &gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md)</ept> -Abschnitt Ihrer "App.config"-Datei.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>The switch has a single attribute, <ph id="ph1">`value`</ph>, whose value is a string that represents a key/value pair containing both the switch name and its value.</source>
          <target state="translated">Der Switch verfügt über ein einzelnes Attribut <ph id="ph1">`value`</ph>, dessen Wert ist eine Zeichenfolge, die eine Schlüssel-/Wertepaar, enthält den Namen des Switches und seinen Wert darstellt.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>To define multiple switches, separate each switch's key/value pair in the <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>AppContextSwitchOverrides&gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md)</ept> element's <ph id="ph2">`value`</ph> attribute with a semicolon.</source>
          <target state="translated">Trennen Sie mehrere Optionen zu definieren, jeder Switch-Schlüssel/Wert-Paar in der <bpt id="p1">[</bpt> <ph id="ph1">\&lt;</ph>AppContextSwitchOverrides &gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md)</ept> des Elements <ph id="ph2">`value`</ph> Attribut mit einem Semikolon.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>In that case, the <ph id="ph1">`&lt;AppContextSwitchOverrides&gt;`</ph> element has the following format:</source>
          <target state="translated">In diesem Fall die <ph id="ph1">`&lt;AppContextSwitchOverrides&gt;`</ph> Element weist das folgende Format:</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Using the <ph id="ph1">`&lt;AppContextSwitchOverrides&gt;`</ph> element to define a configuration setting has application scope; that is, it affects only the application.</source>
          <target state="translated">Mithilfe der <ph id="ph1">`&lt;AppContextSwitchOverrides&gt;`</ph> -Elements definieren Sie eine Konfigurationseinstellung hat Anwendungsbereich; d. h., sie wirkt sich auf nur die Anwendung.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>For information on the switches defined by the .NET Framework, see the <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>AppContextSwitchOverrides&gt; element<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md)</ept>.</source>
          <target state="translated">Informationen auf den Switches, die von .NET Framework definiert werden, finden Sie unter der <bpt id="p1">[</bpt> <ph id="ph1">\&lt;</ph>AppContextSwitchOverrides &gt;-Element<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md)</ept>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>By adding a string value whose name is the name of the switch to the <ph id="ph1">`HKLM\SOFTWARE\Microsoft\.NETFramework\AppContext`</ph> key in the registry.</source>
          <target state="translated">Durch Hinzufügen eines Zeichenfolgenwerts, deren Name der Name des Schalters ist, der <ph id="ph1">`HKLM\SOFTWARE\Microsoft\.NETFramework\AppContext`</ph> -Schlüssel in der Registrierung.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Its value must be the string representation of a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> that can be parsed by the <ph id="ph2">&lt;xref:System.Boolean.Parse%2A?displayProperty=nameWithType&gt;</ph> method; that is, it must be "True", "true", "False", or "false".</source>
          <target state="translated">Muss sein Wert die angegebene Zeichenfolgendarstellung einer <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> , die analysiert werden kann, indem Sie die <ph id="ph2">&lt;xref:System.Boolean.Parse%2A?displayProperty=nameWithType&gt;</ph> -Methode, d. h., er muss "True", "true", "False" oder "false".</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>If the runtime encounters any other value, it ignores the switch.</source>
          <target state="translated">Wenn die Laufzeit einen anderer Wert trifft, wird die Option ignoriert.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Using the registry to define an <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> switch has machine scope; that is, it affects every application running on the machine.</source>
          <target state="translated">Verwenden die Registrierung zum Definieren einer <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> Switch verfügt über Computer Bereich; d. h., sie wirkt sich auf jede Anwendung, die auf dem Computer ausgeführt.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>If you set the same switch in more than one way, the order of precedence for determining which setting overrides the others is:</source>
          <target state="translated">Wenn Sie den gleichen Switch in mehr als eine Weise festlegen, wird die Reihenfolge zu bestimmen, welche Einstellung überschreibt die anderen:</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>The programmatic setting.</source>
          <target state="translated">Die programmgesteuerte Einstellung.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>The setting in the app config file.</source>
          <target state="translated">Die Einstellung in der Datei "App.config".</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>The registry setting.</source>
          <target state="translated">Die registrierungseinstellung "".</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>The following is a simple application that passes a file URI to the <ph id="ph1">&lt;xref:System.IO.Path.GetDirectoryName%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Im folgenden finden Sie eine einfache Anwendung, die einen Datei-URI zu übergeben, die <ph id="ph1">&lt;xref:System.IO.Path.GetDirectoryName%2A?displayProperty=nameWithType&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>When run under the .NET Framework 4.6, it throws an <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph> because <ph id="ph2">`file://`</ph> is no longer a valid part of a file path.</source>
          <target state="translated">Wenn unter .NET Framework 4.6 ausgeführt werden, löst ein <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph> da <ph id="ph2">`file://`</ph> ist nicht mehr einem gültigen Teil einen Dateipfad an.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>To restore the method's previous behavior and prevent the exception, you can add the <ph id="ph1">`Switch.System.IO.UseLegacyPathHandling`</ph> switch to the application configuration file for the example:</source>
          <target state="translated">Um die Methode, vorherige Verhalten wiederherstellen, und verhindern, dass die Ausnahme, fügen Sie der <ph id="ph1">`Switch.System.IO.UseLegacyPathHandling`</ph> wechseln Sie in der Anwendungskonfigurationsdatei für das Beispiel:</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>See also</source>
          <target state="translated">Siehe auch</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source><bpt id="p1">[</bpt>AppContext switch<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>AppContext switch<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md)</ept></target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="P:System.AppContext.BaseDirectory">
          <source>Gets the pathname of the base directory that the assembly resolver uses to probe for assemblies.</source>
          <target state="translated">Ruft den Pfadnamen des Basisverzeichnisses ab, das der Assemblyresolver für die Suche nach Assemblys verwendet.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppContext.BaseDirectory">
          <source>the pathname of the base directory that the assembly resolver uses to probe for assemblies.</source>
          <target state="translated">Der Pfadname des Basisverzeichnisses, das der Assemblyresolver für die Suche nach Assemblys verwendet.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppContext.BaseDirectory">
          <source>This is a per application domain property.</source>
          <target state="translated">Dies ist eine pro Anwendungsdomäneneigenschaft.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppContext.BaseDirectory">
          <source>Its value corresponds to the <ph id="ph1">&lt;xref:System.AppDomain.BaseDirectory%2A?displayProperty=nameWithType&gt;</ph> property of the current application domain.</source>
          <target state="translated">Der Wert entspricht der <ph id="ph1">&lt;xref:System.AppDomain.BaseDirectory%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft der aktuellen Anwendungsdomäne.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.AppContext.GetData(System.String)">
          <source>The name of the data element.</source>
          <target state="translated">Der Name des Datenelements.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.AppContext.GetData(System.String)">
          <source>Returns the value of the named data element assigned to the current application domain.</source>
          <target state="translated">Gibt den Wert des benannten Datenelements zurück, das der aktuellen Anwendungsdomäne zugewiesen ist.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.AppContext.GetData(System.String)">
          <source>The value of <ph id="ph1">&lt;paramref name="name" /&gt;</ph>, if <ph id="ph2">&lt;paramref name="name" /&gt;</ph> identifies a named value; otherwise, <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der Wert von <ph id="ph1">&lt;paramref name="name" /&gt;</ph>, wenn <ph id="ph2">&lt;paramref name="name" /&gt;</ph> einen benannten Wert bezeichnet, andernfalls <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>The name of the switch.</source>
          <target state="translated">Der Name des Schalters.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>The value of the switch.</source>
          <target state="translated">Der Wert des Schalters.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>Sets the value of a switch.</source>
          <target state="translated">Legt den Wert eines Schalters fest.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> class enables library writers to provide a uniform opt-out mechanism for new functionality for their users.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> Klasse ermöglicht es Bibliotheksautoren ihren Benutzern einen einheitlichen abwahlmechanismus für neue Funktionalitäten bereitzustellen.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>It establishes a loosely-coupled contract between components in order to communicate an opt-out request.</source>
          <target state="translated">Sie richtet einen lose gekoppelten Vertrag zwischen den Komponenten ein, um eine Anforderung zur Abwahl zu übermitteln.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>This capability is typically important when a change is made to existing functionality.</source>
          <target state="translated">Diese Möglichkeit ist in der Regel wichtig, wenn vorhandene Funktionalitäten verändert werden.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>Conversely, there is already an implicit opt-in for new functionality.</source>
          <target state="translated">Im Gegensatz dazu existiert bereits eine implizite Auswahloption für neue Funktionalitäten.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.AppContext.SetSwitch%2A&gt;</ph> method is called by an application (or a library) to declare the value of a switch (which is always a <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> value) that a dependent library defines.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.AppContext.SetSwitch%2A&gt;</ph> Methode wird aufgerufen, indem einer Anwendung (oder eine Bibliothek), um den Wert einer Option deklarieren (also immer ein <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> Wert), die von einer abhängige Bibliothek definiert.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>The switch is always implicitly <ph id="ph1">`false`</ph>, which provides the new behavior.</source>
          <target state="translated">Die Option ist immer implizit <ph id="ph1">`false`</ph>, stellt das neue Verhalten aktiviert.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>Setting the switch to <ph id="ph1">`true`</ph> enables it, which provides the legacy behavior.</source>
          <target state="translated">Festlegen der Option auf <ph id="ph1">`true`</ph> ermöglicht, die die Legacyverhalten bereitstellt.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>Explicitly setting the switch to <ph id="ph1">`false`</ph> also provides the new behavior.</source>
          <target state="translated">Explizites Festlegen der Option zum <ph id="ph1">`false`</ph> wird auch das neue Verhalten aktiviert.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>The dependent library can then check the value of the switch by calling the <ph id="ph1">&lt;xref:System.AppContext.TryGetSwitch%2A&gt;</ph> method.</source>
          <target state="translated">Die abhängige Bibliothek kann dann überprüfen Sie den Wert des Schalters durch Aufrufen der <ph id="ph1">&lt;xref:System.AppContext.TryGetSwitch%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>It's beneficial to use a consistent format for switch names, since they are a formal contract exposed by a library.</source>
          <target state="translated">Es ist auch hilfreich, ein konsistentes Format für Switch-Namen verwenden, da es sich um eine formellen Vertrag verfügbar gemacht werden, indem Sie eine Bibliothek sind.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>The following are two obvious formats.</source>
          <target state="translated">Das folgende Beispiel zeigt zwei offensichtliche Formate.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source><bpt id="p1">*</bpt>Switch<ept id="p1">*</ept>.<bpt id="p2">*</bpt>namespace<ept id="p2">*</ept>.<bpt id="p3">*</bpt>switchname<ept id="p3">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>Switch<ept id="p1">*</ept>.<bpt id="p2">*</bpt>namespace<ept id="p2">*</ept>.<bpt id="p3">*</bpt>switchname<ept id="p3">*</ept></target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source><bpt id="p1">*</bpt>Switch<ept id="p1">*</ept>.<bpt id="p2">*</bpt>library<ept id="p2">*</ept>.<bpt id="p3">*</bpt>switchname<ept id="p3">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>Switch<ept id="p1">*</ept>.<bpt id="p2">*</bpt>library<ept id="p2">*</ept>.<bpt id="p3">*</bpt>switchname<ept id="p3">*</ept></target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>In addition to setting the value of a switch programmatically, it can also be set:</source>
          <target state="translated">Zusätzlich zu den Wert eines Schalters programmgesteuert festzulegen, können sie auch festgelegt werden:</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>By adding the switch name and value to the <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>AppContextSwitchOverrides&gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md)</ept> element in the <bpt id="p2">[</bpt><ph id="ph2">\&lt;</ph>runtime&gt;<ept id="p2">](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md)</ept> section of an application configuration file.</source>
          <target state="translated">Durch Hinzufügen der Switchnamen und Wert der <bpt id="p1">[</bpt> <ph id="ph1">\&lt;</ph>AppContextSwitchOverrides &gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md)</ept> Element in der <bpt id="p2">[</bpt> <ph id="ph2">\&lt;</ph>Runtime &gt;<ept id="p2">](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md)</ept> Teil einer Anwendungskonfigurationsdatei.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>For example, the following defines a switch named <ph id="ph1">`Libraries.FPLibrary.UseExactFloatingPointComparison`</ph> whose value is <ph id="ph2">`False`</ph>.</source>
          <target state="translated">Die folgenden definiert z. B. einen Switch namens <ph id="ph1">`Libraries.FPLibrary.UseExactFloatingPointComparison`</ph> , dessen Wert <ph id="ph2">`False`</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>By adding a string value whose name is the name of the switch to the <ph id="ph1">`HKLM\SOFTWARE\Microsoft\.NETFramework\AppContext`</ph> key in the registry.</source>
          <target state="translated">Durch Hinzufügen eines Zeichenfolgenwerts, deren Name der Name des Schalters ist, der <ph id="ph1">`HKLM\SOFTWARE\Microsoft\.NETFramework\AppContext`</ph> -Schlüssel in der Registrierung.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>Its value must be the string representation of a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> that can be parsed by the <ph id="ph2">&lt;xref:System.Boolean.Parse%2A?displayProperty=nameWithType&gt;</ph> method; that is, it must be "True", "true", "False", or "false".</source>
          <target state="translated">Muss sein Wert die angegebene Zeichenfolgendarstellung einer <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> , die analysiert werden kann, indem Sie die <ph id="ph2">&lt;xref:System.Boolean.Parse%2A?displayProperty=nameWithType&gt;</ph> -Methode, d. h., er muss "True", "true", "False" oder "false".</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>If <ph id="ph1">`switchName`</ph> already exists, its value is overwritten by the <ph id="ph2">`isEnabled`</ph> argument.</source>
          <target state="translated">Wenn <ph id="ph1">`switchName`</ph> bereits vorhanden ist, seinen Wert wird überschrieben, indem die <ph id="ph2">`isEnabled`</ph> Argument.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>That is, the most recent call to the <ph id="ph1">&lt;xref:System.AppContext.SetSwitch%2A&gt;</ph> method overrides the value defined in the registry, in an app configuration file, or by previous calls to the <ph id="ph2">&lt;xref:System.AppContext.SetSwitch%2A&gt;</ph> method.</source>
          <target state="translated">D. h., die den letzten Aufruf der <ph id="ph1">&lt;xref:System.AppContext.SetSwitch%2A&gt;</ph> Methode überschreibt den Wert in der Registrierung in einer app-Konfigurationsdatei oder vorherigen Aufrufe von definiert die <ph id="ph2">&lt;xref:System.AppContext.SetSwitch%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>The following line of code sets a switch named <ph id="ph1">`Switch.AmazingLib.ThrowOnException`</ph> to <ph id="ph2">`true`</ph>, which enables a legacy behavior.</source>
          <target state="translated">Die folgende Codezeile legt einen Switch mit dem Namen <ph id="ph1">`Switch.AmazingLib.ThrowOnException`</ph> zu <ph id="ph2">`true`</ph>, wodurch eine Legacyverhalten.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>The library can then check whether a library consumer has set the value of the switch by calling the <ph id="ph1">&lt;xref:System.AppContext.TryGetSwitch%2A&gt;</ph> method.</source>
          <target state="translated">Die Bibliothek kann dann überprüfen Sie, ob ein Consumer Bibliothek der Wert des Schalters durch den Aufruf festgelegt hat die <ph id="ph1">&lt;xref:System.AppContext.TryGetSwitch%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="switchName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="switchName" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="switchName" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="switchName" /&gt;</ph> ist <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="P:System.AppContext.TargetFrameworkName">
          <source>Gets the name of the framework version targeted by the current application.</source>
          <target state="translated">Ruft den Namen der Frameworkversion ab, auf die die aktuelle Anwendung abzielt.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppContext.TargetFrameworkName">
          <source>The name of the framework version targeted by the current application.</source>
          <target state="translated">Der Name der Frameworkversion, auf die die aktuelle Anwendung abzielt.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppContext.TargetFrameworkName">
          <source>The name of the target framework version corresponds to the value of the <ph id="ph1">&lt;xref:System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkName%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Der Name der Framework-Zielversion entspricht dem Wert, der die <ph id="ph1">&lt;xref:System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkName%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppContext.TargetFrameworkName">
          <source>For a list of target framework names for the .NET Framework, see the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>supportedRuntime<ph id="ph2">&amp;gt;</ph> Element<ept id="p1">](~/docs/framework/configure-apps/file-schema/startup/supportedruntime-element.md)</ept> element.</source>
          <target state="translated">Eine Liste der Framework-Zielnamen für .NET Framework, finden Sie unter der <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>SupportedRuntime<ph id="ph2">&amp;gt;</ph> Element<ept id="p1">](~/docs/framework/configure-apps/file-schema/startup/supportedruntime-element.md)</ept> Element.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source>The name of the switch.</source>
          <target state="translated">Der Name des Schalters.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source>When this method returns, contains the value of <bpt id="p1">&lt;c&gt;</bpt>switchName<ept id="p1">&lt;/c&gt;</ept> if <bpt id="p2">&lt;c&gt;</bpt>switchName<ept id="p2">&lt;/c&gt;</ept> was found, or <ph id="ph1">&lt;see langword="false" /&gt;</ph> if <bpt id="p3">&lt;c&gt;</bpt>switchName<ept id="p3">&lt;/c&gt;</ept> was not found.</source>
          <target state="translated">Wenn diese Methode zurückgibt, enthält sie den Wert von <bpt id="p1">&lt;c&gt;</bpt>switchName<ept id="p1">&lt;/c&gt;</ept>, falls <bpt id="p2">&lt;c&gt;</bpt>switchName<ept id="p2">&lt;/c&gt;</ept> gefunden wurde, oder <ph id="ph1">&lt;see langword="false" /&gt;</ph>, wenn <bpt id="p3">&lt;c&gt;</bpt>switchName<ept id="p3">&lt;/c&gt;</ept> nicht gefunden wurde.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">Dieser Parameter wird nicht initialisiert übergeben.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source>Tries to get the value of a switch.</source>
          <target state="translated">Versucht, den Wert eines Schalters abzurufen.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="switchName" /&gt;</ph> was set and the <ph id="ph3">&lt;paramref name="isEnabled" /&gt;</ph> argument contains the value of the switch; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn <ph id="ph2">&lt;paramref name="switchName" /&gt;</ph> festgelegt wurde und das <ph id="ph3">&lt;paramref name="isEnabled" /&gt;</ph>-Argument den Wert des Schalters enthält, andernfalls <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source>The <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> class enables library writers to provide a uniform opt-out mechanism for new functionality for their users.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> Klasse ermöglicht es Bibliotheksautoren ihren Benutzern einen einheitlichen abwahlmechanismus für neue Funktionalitäten bereitzustellen.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source>It establishes a loosely-coupled contract between components in order to communicate an opt-out request.</source>
          <target state="translated">Sie richtet einen lose gekoppelten Vertrag zwischen den Komponenten ein, um eine Anforderung zur Abwahl zu übermitteln.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source>This capability is typically important when a change is made to existing functionality.</source>
          <target state="translated">Diese Möglichkeit ist in der Regel wichtig, wenn vorhandene Funktionalitäten verändert werden.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source>Conversely, there is already an implicit opt-in for new functionality.</source>
          <target state="translated">Im Gegensatz dazu existiert bereits eine implizite Auswahloption für neue Funktionalitäten.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source>The common language runtime automatically populates the switches assigned to an <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> instance by reading the registry and the application's configuration file.</source>
          <target state="translated">Die common Language Runtime füllt automatisch die Schalter zugewiesene ein <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> -Instanz durch Lesen der Registrierung und die Konfigurationsdatei der Anwendung.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source>The value of these switches can then be overridden, and new switches added, by calling the <ph id="ph1">&lt;xref:System.AppContext.SetSwitch%2A&gt;</ph> method.</source>
          <target state="translated">Der Wert dieser Schalter kann dann überschrieben werden, und neue Optionen hinzugefügt, durch Aufrufen der <ph id="ph1">&lt;xref:System.AppContext.SetSwitch%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source>A library calls the <ph id="ph1">&lt;xref:System.AppContext.TryGetSwitch%2A&gt;</ph> method to check whether its consumers have declared the value of the switch and then act appropriately on it.</source>
          <target state="translated">Ruft eine Bibliothek der <ph id="ph1">&lt;xref:System.AppContext.TryGetSwitch%2A&gt;</ph> -Methode überprüft, ob der Consumer den Wert des Schalters deklariert und anschließend darauf entsprechend Aktionen.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source>By default, if the switch is not defined, the new functionality is enabled..</source>
          <target state="translated">Wenn der Schalter nicht definiert ist, wird standardmäßig die neue Funktionen aktiviert...</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source>If the switch is defined and its value is <ph id="ph1">`false`</ph>, the new functionality is also enabled.</source>
          <target state="translated">Wenn der Schalter definiert ist und ihr Wert ist <ph id="ph1">`false`</ph>, die neue Funktionen ebenfalls aktiviert.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source>If its value is <ph id="ph1">`true`</ph>, the legacy behavior is enabled.</source>
          <target state="translated">Wenn der Wert <ph id="ph1">`true`</ph>, die Legacyverhalten aktiviert ist.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source>The following example determines whether a library consumer has set a switch named <ph id="ph1">`Switch.AmazingLib.ThrowOnException`</ph>.</source>
          <target state="translated">Im folgenden Beispiel wird bestimmt, ob ein Consumer Bibliothek einen Switch namens festgelegt hat <ph id="ph1">`Switch.AmazingLib.ThrowOnException`</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source><ph id="ph1">&lt;paramref name="switchName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="switchName" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source><ph id="ph1">&lt;paramref name="switchName" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="switchName" /&gt;</ph> ist <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>