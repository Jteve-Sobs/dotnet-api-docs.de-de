<Type Name="Action&lt;T1,T2,T3,T4&gt;" FullName="System.Action&lt;T1,T2,T3,T4&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cbd6c210fb12d0c49bdfb627fef13516eb104c0e" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37485657" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void Action&lt;in T1,in T2,in T3,in T4&gt;(T1 arg1, T2 arg2, T3 arg3, T4 arg4);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Action`4&lt;- T1, - T2, - T3, - T4&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Action`4" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub Action(Of In T1, In T2, In T3, In T4)(arg1 As T1, arg2 As T2, arg3 As T3, arg4 As T4)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2, typename T3, typename T4&gt;&#xA;public delegate void Action(T1 arg1, T2 arg2, T3 arg3, T4 arg4);" />
  <TypeSignature Language="F#" Value="type Action&lt;'T1, 'T2, 'T3, 'T4&gt; = delegate of 'T1 * 'T2 * 'T3 * 'T4 -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T2">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T3">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T4">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Core, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="arg1" Type="T1" />
    <Parameter Name="arg2" Type="T2" />
    <Parameter Name="arg3" Type="T3" />
    <Parameter Name="arg4" Type="T4" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="T1">
      <span data-ttu-id="3b2c4-101">Der Typ des ersten Parameters der Methode, die dieser Delegat kapselt.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3b2c4-101">The type of the first parameter of the method that this delegate encapsulates.</span>
      </span>
    </typeparam>
    <typeparam name="T2">
      <span data-ttu-id="3b2c4-102">Der Typ des zweiten Parameters der Methode, die dieser Delegat kapselt.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3b2c4-102">The type of the second parameter of the method that this delegate encapsulates.</span>
      </span>
    </typeparam>
    <typeparam name="T3">
      <span data-ttu-id="3b2c4-103">Der Typ des dritten Parameters der Methode, die dieser Delegat kapselt.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3b2c4-103">The type of the third parameter of the method that this delegate encapsulates.</span>
      </span>
    </typeparam>
    <typeparam name="T4">
      <span data-ttu-id="3b2c4-104">Der Typ des vierten Parameters der Methode, die dieser Delegat kapselt.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3b2c4-104">The type of the fourth parameter of the method that this delegate encapsulates.</span>
      </span>
    </typeparam>
    <param name="arg1">
      <span data-ttu-id="3b2c4-105">Der erste Parameter der Methode, die dieser Delegat kapselt.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3b2c4-105">The first parameter of the method that this delegate encapsulates.</span>
      </span>
    </param>
    <param name="arg2">
      <span data-ttu-id="3b2c4-106">Der zweite Parameter der Methode, die dieser Delegat kapselt.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3b2c4-106">The second parameter of the method that this delegate encapsulates.</span>
      </span>
    </param>
    <param name="arg3">
      <span data-ttu-id="3b2c4-107">Der dritte Parameter der Methode, die dieser Delegat kapselt.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3b2c4-107">The third parameter of the method that this delegate encapsulates.</span>
      </span>
    </param>
    <param name="arg4">
      <span data-ttu-id="3b2c4-108">Der vierte Parameter der Methode, die dieser Delegat kapselt.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3b2c4-108">The fourth parameter of the method that this delegate encapsulates.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="3b2c4-109">Kapselt eine Methode, die über vier Parameter verfügt und keinen Wert zurückgibt.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3b2c4-109">Encapsulates a method that has four parameters and does not return a value.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b2c4-110">Sie können die <xref:System.Action%604> Delegat, der eine Methode als Parameter übergeben werden, ohne explizit einen benutzerdefinierten Delegaten zu deklarieren.</span><span class="sxs-lookup"><span data-stu-id="3b2c4-110">You can use the <xref:System.Action%604> delegate to pass a method as a parameter without explicitly declaring a custom delegate.</span></span> <span data-ttu-id="3b2c4-111">Die der gekapselte Methode muss die Signatur der Methode entsprechen, die von diesem Delegaten definiert ist.</span><span class="sxs-lookup"><span data-stu-id="3b2c4-111">The encapsulated method must correspond to the method signature that is defined by this delegate.</span></span> <span data-ttu-id="3b2c4-112">Dies bedeutet, dass die gekapselte Methode müssen vier Parameter, die alle an ihn als Wert übergeben werden, und sie müssen keinen Wert zurück.</span><span class="sxs-lookup"><span data-stu-id="3b2c4-112">This means that the encapsulated method must have four parameters that are all passed to it by value, and it must not return a value.</span></span> <span data-ttu-id="3b2c4-113">(In c# muss die Methode zurückgeben `void`.</span><span class="sxs-lookup"><span data-stu-id="3b2c4-113">(In C#, the method must return `void`.</span></span> <span data-ttu-id="3b2c4-114">In Visual Basic muss es vom definiert werden die `Sub`...`End Sub`</span><span class="sxs-lookup"><span data-stu-id="3b2c4-114">In Visual Basic, it must be defined by the `Sub`…`End Sub`</span></span> <span data-ttu-id="3b2c4-115">erstellen.</span><span class="sxs-lookup"><span data-stu-id="3b2c4-115">construct.</span></span> <span data-ttu-id="3b2c4-116">Sie können auch eine Methode, die einen Wert zurückgibt, der ignoriert wird sein.) In der Regel wird eine solche Methode zum Ausführen eines Vorgangs verwendet.</span><span class="sxs-lookup"><span data-stu-id="3b2c4-116">It can also be a method that returns a value that is ignored.) Typically, such a method is used to perform an operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3b2c4-117">Um eine Methode zu verweisen, die über vier Parameter verfügt und einen Wert zurückgibt, verwenden Sie den generischen <xref:System.Func%605> stattdessen delegieren.</span><span class="sxs-lookup"><span data-stu-id="3b2c4-117">To reference a method that has four parameters and returns a value, use the generic <xref:System.Func%605> delegate instead.</span></span>  
  
 <span data-ttu-id="3b2c4-118">Bei Verwendung der <xref:System.Action%604> Delegaten, Sie müssen nicht explizit einen Delegaten definieren, die eine Methode mit vier Parametern kapselt.</span><span class="sxs-lookup"><span data-stu-id="3b2c4-118">When you use the <xref:System.Action%604> delegate, you do not have to explicitly define a delegate that encapsulates a method with four parameters.</span></span> <span data-ttu-id="3b2c4-119">Der folgende Code deklariert beispielsweise explizit einen Delegaten, der mit dem Namen `StringCopy` und weist einen Verweis auf die `CopyStrings` Methode, um eine Delegatinstanz.</span><span class="sxs-lookup"><span data-stu-id="3b2c4-119">For example, the following code explicitly declares a delegate named `StringCopy` and assigns a reference to the `CopyStrings` method to its delegate instance.</span></span>  
  
 [!code-csharp[System.Action~4#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Action~4/cs/Delegate.cs#1)]
 [!code-vb[System.Action~4#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Action~4/vb/Delegate.vb#1)]  
  
 <span data-ttu-id="3b2c4-120">Im folgende Beispiel wird dieser Code vereinfacht, durch die Instanziierung der <xref:System.Action%604> Delegaten aufrufen, anstatt explizit definieren einen neuen Delegaten und eine benannte Methode zugewiesen wird.</span><span class="sxs-lookup"><span data-stu-id="3b2c4-120">The following example simplifies this code by instantiating the <xref:System.Action%604> delegate instead of explicitly defining a new delegate and assigning a named method to it.</span></span>  
  
 [!code-csharp[System.Action~4#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Action~4/cs/Action4.cs#2)]
 [!code-vb[System.Action~4#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Action~4/vb/Action4.vb#2)]  
  
 <span data-ttu-id="3b2c4-121">Sie können auch die <xref:System.Action%604> delegieren mit anonymen Methoden in C# geschrieben, wie im folgende Beispiel veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="3b2c4-121">You can also use the <xref:System.Action%604> delegate with anonymous methods in C#, as the following example illustrates.</span></span> <span data-ttu-id="3b2c4-122">(Eine Einführung in anonyme Methoden, finden Sie unter [anonyme Methoden](~/docs/csharp/programming-guide/statements-expressions-operators/anonymous-methods.md).)</span><span class="sxs-lookup"><span data-stu-id="3b2c4-122">(For an introduction to anonymous methods, see [Anonymous Methods](~/docs/csharp/programming-guide/statements-expressions-operators/anonymous-methods.md).)</span></span>  
  
 [!code-csharp[System.Action~4#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Action~4/cs/Anon.cs#3)]  
  
 <span data-ttu-id="3b2c4-123">Sie können auch einen Lambda-Ausdruck zuweisen einer <xref:System.Action%604> Instanz delegieren, wie im folgende Beispiel veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="3b2c4-123">You can also assign a lambda expression to an <xref:System.Action%604> delegate instance, as the following example illustrates.</span></span> <span data-ttu-id="3b2c4-124">(Eine Einführung in Lambda-Ausdrücke, finden Sie unter [Lambda-Ausdrücke](~/docs/csharp/programming-guide/statements-expressions-operators/lambda-expressions.md).)</span><span class="sxs-lookup"><span data-stu-id="3b2c4-124">(For an introduction to lambda expressions, see [Lambda Expressions](~/docs/csharp/programming-guide/statements-expressions-operators/lambda-expressions.md).)</span></span>  
  
 [!code-csharp[System.Action~4#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Action~4/cs/Lambda.cs#4)]
 [!code-vb[System.Action~4#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Action~4/vb/lambda.vb#4)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Func`5" />
  </Docs>
</Type>